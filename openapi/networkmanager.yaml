openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: networkmanager
  x-aws-serviceName: networkmanager
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-07'
  version: '2019-07-05'
  title: AWS Network Manager
  description: |-
    Amazon Web Services enables you to centrally manage your Amazon Web Services Cloud WAN core network and your Transit Gateway network across Amazon Web Services accounts, Regions, and on-premises locations.
servers:
- description: The AWS Network Manager regional endpoint
  url: https://networkmanager.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths:
  /attachments/{AttachmentId}/accept:
    post:
      operationId: AcceptAttachment
      description: |-
        Accepts a core network attachment request.

        Once the attachment request is accepted by a core network owner, the attachment is created and connected to a core network.
      parameters:
      - name: AttachmentId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AttachmentId'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There was a conflict processing the request. Updating or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request has failed due to an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /global-networks/{GlobalNetworkId}/connect-peer-associations:
    post:
      operationId: AssociateConnectPeer
      description: |-
        Associates a core network Connect peer with a device and optionally, with a link.

        If you specify a link, it must be associated with the specified device. You can only associate core network Connect peers that have been created on a core network Connect attachment on a core network.
      parameters:
      - name: GlobalNetworkId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/GlobalNetworkId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ConnectPeerId:
                  $ref: '#/components/schemas/ConnectPeerId'
                DeviceId:
                  $ref: '#/components/schemas/DeviceId'
                LinkId:
                  $ref: '#/components/schemas/LinkId'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There was a conflict processing the request. Updating or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request has failed due to an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            A service limit was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetConnectPeerAssociations
      description: |-
        Returns information about a core network Connect peer associations.
      parameters:
      - name: GlobalNetworkId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/GlobalNetworkId'
      - name: connectPeerIds
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ConnectPeerIdList'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There was a conflict processing the request. Updating or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request has failed due to an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /global-networks/{GlobalNetworkId}/customer-gateway-associations:
    post:
      operationId: AssociateCustomerGateway
      description: |-
        Associates a customer gateway with a device and optionally, with a link. If you specify a link, it must be associated with the specified device.

        You can only associate customer gateways that are connected to a VPN attachment on a transit gateway or core network registered in your global network. When you register a transit gateway or core network, customer gateways that are connected to the transit gateway are automatically included in the global network. To list customer gateways that are connected to a transit gateway, use the [DescribeVpnConnections](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpnConnections.html) EC2 API and filter by `transit-gateway-id`.

        You cannot associate a customer gateway with more than one device and link.
      parameters:
      - name: GlobalNetworkId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/GlobalNetworkId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                CustomerGatewayArn:
                  $ref: '#/components/schemas/CustomerGatewayArn'
                DeviceId:
                  $ref: '#/components/schemas/DeviceId'
                LinkId:
                  $ref: '#/components/schemas/LinkId'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There was a conflict processing the request. Updating or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request has failed due to an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            A service limit was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetCustomerGatewayAssociations
      description: |-
        Gets the association information for customer gateways that are associated with devices and links in your global network.
      parameters:
      - name: GlobalNetworkId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/GlobalNetworkId'
      - name: customerGatewayArns
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/CustomerGatewayArnList'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There was a conflict processing the request. Updating or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request has failed due to an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /global-networks/{GlobalNetworkId}/link-associations:
    post:
      operationId: AssociateLink
      description: |-
        Associates a link to a device. A device can be associated to multiple links and a link can be associated to multiple devices. The device and link must be in the same global network and the same site.
      parameters:
      - name: GlobalNetworkId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/GlobalNetworkId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                DeviceId:
                  $ref: '#/components/schemas/DeviceId'
                LinkId:
                  $ref: '#/components/schemas/LinkId'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There was a conflict processing the request. Updating or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request has failed due to an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            A service limit was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    delete:
      operationId: DisassociateLink
      description: |-
        Disassociates an existing device from a link. You must first disassociate any customer gateways that are associated with the link.
      parameters:
      - name: GlobalNetworkId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/GlobalNetworkId'
      - name: deviceId
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/DeviceId'
      - name: linkId
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/LinkId'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There was a conflict processing the request. Updating or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request has failed due to an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetLinkAssociations
      description: |-
        Gets the link associations for a device or a link. Either the device ID or the link ID must be specified.
      parameters:
      - name: GlobalNetworkId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/GlobalNetworkId'
      - name: deviceId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/DeviceId'
      - name: linkId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/LinkId'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed due to an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /global-networks/{GlobalNetworkId}/transit-gateway-connect-peer-associations:
    post:
      operationId: AssociateTransitGatewayConnectPeer
      description: |-
        Associates a transit gateway Connect peer with a device, and optionally, with a link. If you specify a link, it must be associated with the specified device.

        You can only associate transit gateway Connect peers that have been created on a transit gateway that's registered in your global network.

        You cannot associate a transit gateway Connect peer with more than one device and link.
      parameters:
      - name: GlobalNetworkId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/GlobalNetworkId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                TransitGatewayConnectPeerArn:
                  $ref: '#/components/schemas/TransitGatewayConnectPeerArn'
                DeviceId:
                  $ref: '#/components/schemas/DeviceId'
                LinkId:
                  $ref: '#/components/schemas/LinkId'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There was a conflict processing the request. Updating or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request has failed due to an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            A service limit was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetTransitGatewayConnectPeerAssociations
      description: |-
        Gets information about one or more of your transit gateway Connect peer associations in a global network.
      parameters:
      - name: GlobalNetworkId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/GlobalNetworkId'
      - name: transitGatewayConnectPeerArns
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/TransitGatewayConnectPeerArnList'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There was a conflict processing the request. Updating or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request has failed due to an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /connect-attachments:
    post:
      operationId: CreateConnectAttachment
      description: |-
        Creates a core network Connect attachment from a specified core network attachment.

        A core network Connect attachment is a GRE-based tunnel attachment that you can use to establish a connection between a core network and an appliance. A core network Connect attachment uses an existing VPC attachment as the underlying transport mechanism.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                CoreNetworkId:
                  $ref: '#/components/schemas/CoreNetworkId'
                EdgeLocation:
                  $ref: '#/components/schemas/ExternalRegionCode'
                TransportAttachmentId:
                  $ref: '#/components/schemas/AttachmentId'
                Options:
                  $ref: '#/components/schemas/ConnectAttachmentOptions'
                Tags:
                  $ref: '#/components/schemas/TagList'
                ClientToken:
                  $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There was a conflict processing the request. Updating or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request has failed due to an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /connect-peers:
    post:
      operationId: CreateConnectPeer
      description: |-
        Creates a core network Connect peer for a specified core network connect attachment between a core network and an appliance. The peer address and transit gateway address must be the same IP address family (IPv4 or IPv6).
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ConnectAttachmentId:
                  $ref: '#/components/schemas/AttachmentId'
                CoreNetworkAddress:
                  $ref: '#/components/schemas/IPAddress'
                PeerAddress:
                  $ref: '#/components/schemas/IPAddress'
                BgpOptions:
                  $ref: '#/components/schemas/BgpOptions'
                InsideCidrBlocks:
                  $ref: '#/components/schemas/ConstrainedStringList'
                Tags:
                  $ref: '#/components/schemas/TagList'
                ClientToken:
                  $ref: '#/components/schemas/ClientToken'
                SubnetArn:
                  $ref: '#/components/schemas/SubnetArn'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There was a conflict processing the request. Updating or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request has failed due to an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: ListConnectPeers
      description: |-
        Returns a list of core network Connect peers.
      parameters:
      - name: coreNetworkId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/CoreNetworkId'
      - name: connectAttachmentId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/AttachmentId'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed due to an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /global-networks/{GlobalNetworkId}/connections:
    post:
      operationId: CreateConnection
      description: |-
        Creates a connection between two devices. The devices can be a physical or virtual appliance that connects to a third-party appliance in a VPC, or a physical appliance that connects to another physical appliance in an on-premises network.
      parameters:
      - name: GlobalNetworkId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/GlobalNetworkId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                DeviceId:
                  $ref: '#/components/schemas/DeviceId'
                ConnectedDeviceId:
                  $ref: '#/components/schemas/DeviceId'
                LinkId:
                  $ref: '#/components/schemas/LinkId'
                ConnectedLinkId:
                  $ref: '#/components/schemas/LinkId'
                Description:
                  $ref: '#/components/schemas/ConstrainedString'
                Tags:
                  $ref: '#/components/schemas/TagList'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There was a conflict processing the request. Updating or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request has failed due to an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '402':
          description: |-
            A service limit was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetConnections
      description: |-
        Gets information about one or more of your connections in a global network.
      parameters:
      - name: GlobalNetworkId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/GlobalNetworkId'
      - name: connectionIds
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ConnectionIdList'
      - name: deviceId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/DeviceId'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed due to an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /core-networks:
    post:
      operationId: CreateCoreNetwork
      description: |-
        Creates a core network as part of your global network, and optionally, with a core network policy.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                GlobalNetworkId:
                  $ref: '#/components/schemas/GlobalNetworkId'
                Description:
                  $ref: '#/components/schemas/ConstrainedString'
                Tags:
                  $ref: '#/components/schemas/TagList'
                PolicyDocument:
                  $ref: '#/components/schemas/CoreNetworkPolicyDocument'
                ClientToken:
                  $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There was a conflict processing the request. Updating or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '400':
          description: |-
            The input fails to satisfy the constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            The request has failed due to an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '402':
          description: |-
            A service limit was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    get:
      operationId: ListCoreNetworks
      description: |-
        Returns a list of owned and shared core networks.
      parameters:
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed due to an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /global-networks/{GlobalNetworkId}/devices:
    post:
      operationId: CreateDevice
      description: |-
        Creates a new device in a global network. If you specify both a site ID and a location, the location of the site is used for visualization in the Network Manager console.
      parameters:
      - name: GlobalNetworkId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/GlobalNetworkId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AWSLocation:
                  $ref: '#/components/schemas/AWSLocation'
                Description:
                  $ref: '#/components/schemas/ConstrainedString'
                Type:
                  $ref: '#/components/schemas/ConstrainedString'
                Vendor:
                  $ref: '#/components/schemas/ConstrainedString'
                Model:
                  $ref: '#/components/schemas/ConstrainedString'
                SerialNumber:
                  $ref: '#/components/schemas/ConstrainedString'
                Location:
                  $ref: '#/components/schemas/Location'
                SiteId:
                  $ref: '#/components/schemas/SiteId'
                Tags:
                  $ref: '#/components/schemas/TagList'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There was a conflict processing the request. Updating or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request has failed due to an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            A service limit was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetDevices
      description: |-
        Gets information about one or more of your devices in a global network.
      parameters:
      - name: GlobalNetworkId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/GlobalNetworkId'
      - name: deviceIds
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/DeviceIdList'
      - name: siteId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/SiteId'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed due to an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /direct-connect-gateway-attachments:
    post:
      operationId: CreateDirectConnectGatewayAttachment
      description: |-
        Creates an Amazon Web Services Direct Connect gateway attachment
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                CoreNetworkId:
                  $ref: '#/components/schemas/CoreNetworkId'
                DirectConnectGatewayArn:
                  $ref: '#/components/schemas/DirectConnectGatewayArn'
                EdgeLocations:
                  $ref: '#/components/schemas/ExternalRegionCodeList'
                Tags:
                  $ref: '#/components/schemas/TagList'
                ClientToken:
                  $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There was a conflict processing the request. Updating or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request has failed due to an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /global-networks:
    post:
      operationId: CreateGlobalNetwork
      description: |-
        Creates a new, empty global network.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Description:
                  $ref: '#/components/schemas/ConstrainedString'
                Tags:
                  $ref: '#/components/schemas/TagList'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There was a conflict processing the request. Updating or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request has failed due to an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '402':
          description: |-
            A service limit was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: DescribeGlobalNetworks
      description: |-
        Describes one or more global networks. By default, all global networks are described. To describe the objects in your global network, you must use the appropriate `Get*` action. For example, to list the transit gateways in your global network, use GetTransitGatewayRegistrations.
      parameters:
      - name: globalNetworkIds
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/GlobalNetworkIdList'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed due to an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /global-networks/{GlobalNetworkId}/links:
    post:
      operationId: CreateLink
      description: |-
        Creates a new link for a specified site.
      parameters:
      - name: GlobalNetworkId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/GlobalNetworkId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Description:
                  $ref: '#/components/schemas/ConstrainedString'
                Type:
                  $ref: '#/components/schemas/ConstrainedString'
                Bandwidth:
                  $ref: '#/components/schemas/Bandwidth'
                Provider:
                  $ref: '#/components/schemas/ConstrainedString'
                SiteId:
                  $ref: '#/components/schemas/SiteId'
                Tags:
                  $ref: '#/components/schemas/TagList'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There was a conflict processing the request. Updating or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request has failed due to an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            A service limit was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetLinks
      description: |-
        Gets information about one or more links in a specified global network.

        If you specify the site ID, you cannot specify the type or provider in the same request. You can specify the type and provider in the same request.
      parameters:
      - name: GlobalNetworkId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/GlobalNetworkId'
      - name: linkIds
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/LinkIdList'
      - name: siteId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/SiteId'
      - name: type
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ConstrainedString'
      - name: provider
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ConstrainedString'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed due to an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /global-networks/{GlobalNetworkId}/sites:
    post:
      operationId: CreateSite
      description: |-
        Creates a new site in a global network.
      parameters:
      - name: GlobalNetworkId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/GlobalNetworkId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Description:
                  $ref: '#/components/schemas/ConstrainedString'
                Location:
                  $ref: '#/components/schemas/Location'
                Tags:
                  $ref: '#/components/schemas/TagList'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There was a conflict processing the request. Updating or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request has failed due to an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            A service limit was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetSites
      description: |-
        Gets information about one or more of your sites in a global network.
      parameters:
      - name: GlobalNetworkId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/GlobalNetworkId'
      - name: siteIds
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/SiteIdList'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed due to an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /site-to-site-vpn-attachments:
    post:
      operationId: CreateSiteToSiteVpnAttachment
      description: |-
        Creates an Amazon Web Services site-to-site VPN attachment on an edge location of a core network.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                CoreNetworkId:
                  $ref: '#/components/schemas/CoreNetworkId'
                VpnConnectionArn:
                  $ref: '#/components/schemas/VpnConnectionArn'
                Tags:
                  $ref: '#/components/schemas/TagList'
                ClientToken:
                  $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There was a conflict processing the request. Updating or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request has failed due to an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /transit-gateway-peerings:
    post:
      operationId: CreateTransitGatewayPeering
      description: |-
        Creates a transit gateway peering connection.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                CoreNetworkId:
                  $ref: '#/components/schemas/CoreNetworkId'
                TransitGatewayArn:
                  $ref: '#/components/schemas/TransitGatewayArn'
                Tags:
                  $ref: '#/components/schemas/TagList'
                ClientToken:
                  $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There was a conflict processing the request. Updating or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request has failed due to an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /transit-gateway-route-table-attachments:
    post:
      operationId: CreateTransitGatewayRouteTableAttachment
      description: |-
        Creates a transit gateway route table attachment.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                PeeringId:
                  $ref: '#/components/schemas/PeeringId'
                TransitGatewayRouteTableArn:
                  $ref: '#/components/schemas/TransitGatewayRouteTableArn'
                Tags:
                  $ref: '#/components/schemas/TagList'
                ClientToken:
                  $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There was a conflict processing the request. Updating or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request has failed due to an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /vpc-attachments:
    post:
      operationId: CreateVpcAttachment
      description: |-
        Creates a VPC attachment on an edge location of a core network.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                CoreNetworkId:
                  $ref: '#/components/schemas/CoreNetworkId'
                VpcArn:
                  $ref: '#/components/schemas/VpcArn'
                SubnetArns:
                  $ref: '#/components/schemas/SubnetArnList'
                Options:
                  $ref: '#/components/schemas/VpcOptions'
                Tags:
                  $ref: '#/components/schemas/TagList'
                ClientToken:
                  $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There was a conflict processing the request. Updating or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request has failed due to an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /attachments/{AttachmentId}:
    delete:
      operationId: DeleteAttachment
      description: |-
        Deletes an attachment. Supports all attachment types.
      parameters:
      - name: AttachmentId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AttachmentId'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There was a conflict processing the request. Updating or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request has failed due to an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /connect-peers/{ConnectPeerId}:
    delete:
      operationId: DeleteConnectPeer
      description: |-
        Deletes a Connect peer.
      parameters:
      - name: ConnectPeerId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ConnectPeerId'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There was a conflict processing the request. Updating or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request has failed due to an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetConnectPeer
      description: |-
        Returns information about a core network Connect peer.
      parameters:
      - name: ConnectPeerId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ConnectPeerId'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed due to an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /global-networks/{GlobalNetworkId}/connections/{ConnectionId}:
    delete:
      operationId: DeleteConnection
      description: |-
        Deletes the specified connection in your global network.
      parameters:
      - name: GlobalNetworkId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/GlobalNetworkId'
      - name: ConnectionId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ConnectionId'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There was a conflict processing the request. Updating or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request has failed due to an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    patch:
      operationId: UpdateConnection
      description: |-
        Updates the information for an existing connection. To remove information for any of the parameters, specify an empty string.
      parameters:
      - name: GlobalNetworkId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/GlobalNetworkId'
      - name: ConnectionId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ConnectionId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                LinkId:
                  $ref: '#/components/schemas/LinkId'
                ConnectedLinkId:
                  $ref: '#/components/schemas/LinkId'
                Description:
                  $ref: '#/components/schemas/ConstrainedString'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There was a conflict processing the request. Updating or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request has failed due to an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /core-networks/{CoreNetworkId}:
    delete:
      operationId: DeleteCoreNetwork
      description: |-
        Deletes a core network along with all core network policies. This can only be done if there are no attachments on a core network.
      parameters:
      - name: CoreNetworkId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CoreNetworkId'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There was a conflict processing the request. Updating or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request has failed due to an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetCoreNetwork
      description: |-
        Returns information about the LIVE policy for a core network.
      parameters:
      - name: CoreNetworkId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CoreNetworkId'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed due to an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    patch:
      operationId: UpdateCoreNetwork
      description: |-
        Updates the description of a core network.
      parameters:
      - name: CoreNetworkId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CoreNetworkId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Description:
                  $ref: '#/components/schemas/ConstrainedString'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There was a conflict processing the request. Updating or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request has failed due to an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /core-networks/{CoreNetworkId}/core-network-policy-versions/{PolicyVersionId}:
    delete:
      operationId: DeleteCoreNetworkPolicyVersion
      description: |-
        Deletes a policy version from a core network. You can't delete the current LIVE policy.
      parameters:
      - name: CoreNetworkId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CoreNetworkId'
      - name: PolicyVersionId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Integer'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There was a conflict processing the request. Updating or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request has failed due to an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /global-networks/{GlobalNetworkId}/devices/{DeviceId}:
    delete:
      operationId: DeleteDevice
      description: |-
        Deletes an existing device. You must first disassociate the device from any links and customer gateways.
      parameters:
      - name: GlobalNetworkId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/GlobalNetworkId'
      - name: DeviceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DeviceId'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There was a conflict processing the request. Updating or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request has failed due to an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    patch:
      operationId: UpdateDevice
      description: |-
        Updates the details for an existing device. To remove information for any of the parameters, specify an empty string.
      parameters:
      - name: GlobalNetworkId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/GlobalNetworkId'
      - name: DeviceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DeviceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AWSLocation:
                  $ref: '#/components/schemas/AWSLocation'
                Description:
                  $ref: '#/components/schemas/ConstrainedString'
                Type:
                  $ref: '#/components/schemas/ConstrainedString'
                Vendor:
                  $ref: '#/components/schemas/ConstrainedString'
                Model:
                  $ref: '#/components/schemas/ConstrainedString'
                SerialNumber:
                  $ref: '#/components/schemas/ConstrainedString'
                Location:
                  $ref: '#/components/schemas/Location'
                SiteId:
                  $ref: '#/components/schemas/SiteId'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There was a conflict processing the request. Updating or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request has failed due to an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /global-networks/{GlobalNetworkId}:
    delete:
      operationId: DeleteGlobalNetwork
      description: |-
        Deletes an existing global network. You must first delete all global network objects (devices, links, and sites), deregister all transit gateways, and delete any core networks.
      parameters:
      - name: GlobalNetworkId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/GlobalNetworkId'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There was a conflict processing the request. Updating or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request has failed due to an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    patch:
      operationId: UpdateGlobalNetwork
      description: |-
        Updates an existing global network. To remove information for any of the parameters, specify an empty string.
      parameters:
      - name: GlobalNetworkId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/GlobalNetworkId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Description:
                  $ref: '#/components/schemas/ConstrainedString'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There was a conflict processing the request. Updating or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request has failed due to an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /global-networks/{GlobalNetworkId}/links/{LinkId}:
    delete:
      operationId: DeleteLink
      description: |-
        Deletes an existing link. You must first disassociate the link from any devices and customer gateways.
      parameters:
      - name: GlobalNetworkId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/GlobalNetworkId'
      - name: LinkId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/LinkId'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There was a conflict processing the request. Updating or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request has failed due to an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    patch:
      operationId: UpdateLink
      description: |-
        Updates the details for an existing link. To remove information for any of the parameters, specify an empty string.
      parameters:
      - name: GlobalNetworkId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/GlobalNetworkId'
      - name: LinkId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/LinkId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Description:
                  $ref: '#/components/schemas/ConstrainedString'
                Type:
                  $ref: '#/components/schemas/ConstrainedString'
                Bandwidth:
                  $ref: '#/components/schemas/Bandwidth'
                Provider:
                  $ref: '#/components/schemas/ConstrainedString'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There was a conflict processing the request. Updating or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request has failed due to an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            A service limit was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /peerings/{PeeringId}:
    delete:
      operationId: DeletePeering
      description: |-
        Deletes an existing peering connection.
      parameters:
      - name: PeeringId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PeeringId'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There was a conflict processing the request. Updating or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request has failed due to an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /resource-policy/{ResourceArn}:
    delete:
      operationId: DeleteResourcePolicy
      description: |-
        Deletes a resource policy for the specified resource. This revokes the access of the principals specified in the resource policy.
      parameters:
      - name: ResourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceArn'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There was a conflict processing the request. Updating or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request has failed due to an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetResourcePolicy
      description: |-
        Returns information about a resource policy.
      parameters:
      - name: ResourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceArn'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed due to an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    post:
      operationId: PutResourcePolicy
      description: |-
        Creates or updates a resource policy.
      parameters:
      - name: ResourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceArn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                PolicyDocument:
                  $ref: '#/components/schemas/SynthesizedJsonResourcePolicyDocument'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There was a conflict processing the request. Updating or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request has failed due to an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '402':
          description: |-
            A service limit was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /global-networks/{GlobalNetworkId}/sites/{SiteId}:
    delete:
      operationId: DeleteSite
      description: |-
        Deletes an existing site. The site cannot be associated with any device or link.
      parameters:
      - name: GlobalNetworkId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/GlobalNetworkId'
      - name: SiteId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/SiteId'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There was a conflict processing the request. Updating or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request has failed due to an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    patch:
      operationId: UpdateSite
      description: |-
        Updates the information for an existing site. To remove information for any of the parameters, specify an empty string.
      parameters:
      - name: GlobalNetworkId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/GlobalNetworkId'
      - name: SiteId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/SiteId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Description:
                  $ref: '#/components/schemas/ConstrainedString'
                Location:
                  $ref: '#/components/schemas/Location'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There was a conflict processing the request. Updating or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request has failed due to an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /global-networks/{GlobalNetworkId}/transit-gateway-registrations/{TransitGatewayArn}:
    delete:
      operationId: DeregisterTransitGateway
      description: |-
        Deregisters a transit gateway from your global network. This action does not delete your transit gateway, or modify any of its attachments. This action removes any customer gateway associations.
      parameters:
      - name: GlobalNetworkId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/GlobalNetworkId'
      - name: TransitGatewayArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TransitGatewayArn'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There was a conflict processing the request. Updating or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request has failed due to an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /global-networks/{GlobalNetworkId}/connect-peer-associations/{ConnectPeerId}:
    delete:
      operationId: DisassociateConnectPeer
      description: |-
        Disassociates a core network Connect peer from a device and a link.
      parameters:
      - name: GlobalNetworkId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/GlobalNetworkId'
      - name: ConnectPeerId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ConnectPeerId'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There was a conflict processing the request. Updating or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request has failed due to an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /global-networks/{GlobalNetworkId}/customer-gateway-associations/{CustomerGatewayArn}:
    delete:
      operationId: DisassociateCustomerGateway
      description: |-
        Disassociates a customer gateway from a device and a link.
      parameters:
      - name: GlobalNetworkId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/GlobalNetworkId'
      - name: CustomerGatewayArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CustomerGatewayArn'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There was a conflict processing the request. Updating or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request has failed due to an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /global-networks/{GlobalNetworkId}/transit-gateway-connect-peer-associations/{TransitGatewayConnectPeerArn}:
    delete:
      operationId: DisassociateTransitGatewayConnectPeer
      description: |-
        Disassociates a transit gateway Connect peer from a device and link.
      parameters:
      - name: GlobalNetworkId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/GlobalNetworkId'
      - name: TransitGatewayConnectPeerArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TransitGatewayConnectPeerArn'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There was a conflict processing the request. Updating or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request has failed due to an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /core-networks/{CoreNetworkId}/core-network-change-sets/{PolicyVersionId}/execute:
    post:
      operationId: ExecuteCoreNetworkChangeSet
      description: |-
        Executes a change set on your core network. Deploys changes globally based on the policy submitted..
      parameters:
      - name: CoreNetworkId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CoreNetworkId'
      - name: PolicyVersionId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Integer'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There was a conflict processing the request. Updating or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request has failed due to an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /connect-attachments/{AttachmentId}:
    get:
      operationId: GetConnectAttachment
      description: |-
        Returns information about a core network Connect attachment.
      parameters:
      - name: AttachmentId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AttachmentId'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed due to an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /core-networks/{CoreNetworkId}/core-network-change-events/{PolicyVersionId}:
    get:
      operationId: GetCoreNetworkChangeEvents
      description: |-
        Returns information about a core network change event.
      parameters:
      - name: CoreNetworkId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CoreNetworkId'
      - name: PolicyVersionId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Integer'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed due to an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /core-networks/{CoreNetworkId}/core-network-change-sets/{PolicyVersionId}:
    get:
      operationId: GetCoreNetworkChangeSet
      description: |-
        Returns a change set between the LIVE core network policy and a submitted policy.
      parameters:
      - name: CoreNetworkId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CoreNetworkId'
      - name: PolicyVersionId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Integer'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed due to an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /core-networks/{CoreNetworkId}/core-network-policy:
    get:
      operationId: GetCoreNetworkPolicy
      description: |-
        Returns details about a core network policy. You can get details about your current live policy or any previous policy version.
      parameters:
      - name: CoreNetworkId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CoreNetworkId'
      - name: policyVersionId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Integer'
      - name: alias
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/CoreNetworkPolicyAlias'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed due to an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    post:
      operationId: PutCoreNetworkPolicy
      description: |-
        Creates a new, immutable version of a core network policy. A subsequent change set is created showing the differences between the LIVE policy and the submitted policy.
      parameters:
      - name: CoreNetworkId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CoreNetworkId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                PolicyDocument:
                  $ref: '#/components/schemas/SynthesizedJsonCoreNetworkPolicyDocument'
                Description:
                  $ref: '#/components/schemas/ConstrainedString'
                LatestVersionId:
                  $ref: '#/components/schemas/Integer'
                ClientToken:
                  $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There was a conflict processing the request. Updating or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '400':
          description: |-
            The input fails to satisfy the constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            The request has failed due to an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /direct-connect-gateway-attachments/{AttachmentId}:
    get:
      operationId: GetDirectConnectGatewayAttachment
      description: |-
        Returns information about a specific Amazon Web Services Direct Connect gateway attachment.
      parameters:
      - name: AttachmentId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AttachmentId'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed due to an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    patch:
      operationId: UpdateDirectConnectGatewayAttachment
      description: |-
        Updates the edge locations associated with an Amazon Web Services Direct Connect gateway attachment.
      parameters:
      - name: AttachmentId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AttachmentId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                EdgeLocations:
                  $ref: '#/components/schemas/ExternalRegionCodeList'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There was a conflict processing the request. Updating or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request has failed due to an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /global-networks/{GlobalNetworkId}/network-resource-count:
    get:
      operationId: GetNetworkResourceCounts
      description: |-
        Gets the count of network resources, by resource type, for the specified global network.
      parameters:
      - name: GlobalNetworkId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/GlobalNetworkId'
      - name: resourceType
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ConstrainedString'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed due to an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /global-networks/{GlobalNetworkId}/network-resource-relationships:
    get:
      operationId: GetNetworkResourceRelationships
      description: |-
        Gets the network resource relationships for the specified global network.
      parameters:
      - name: GlobalNetworkId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/GlobalNetworkId'
      - name: coreNetworkId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/CoreNetworkId'
      - name: registeredGatewayArn
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ResourceArn'
      - name: awsRegion
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ExternalRegionCode'
      - name: accountId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/AWSAccountId'
      - name: resourceType
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ConstrainedString'
      - name: resourceArn
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ResourceArn'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed due to an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /global-networks/{GlobalNetworkId}/network-resources:
    get:
      operationId: GetNetworkResources
      description: |-
        Describes the network resources for the specified global network.

        The results include information from the corresponding Describe call for the resource, minus any sensitive information such as pre-shared keys.
      parameters:
      - name: GlobalNetworkId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/GlobalNetworkId'
      - name: coreNetworkId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/CoreNetworkId'
      - name: registeredGatewayArn
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ResourceArn'
      - name: awsRegion
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ExternalRegionCode'
      - name: accountId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/AWSAccountId'
      - name: resourceType
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ConstrainedString'
      - name: resourceArn
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ResourceArn'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed due to an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /global-networks/{GlobalNetworkId}/network-routes:
    post:
      operationId: GetNetworkRoutes
      description: |-
        Gets the network routes of the specified global network.
      parameters:
      - name: GlobalNetworkId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/GlobalNetworkId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                RouteTableIdentifier:
                  $ref: '#/components/schemas/RouteTableIdentifier'
                ExactCidrMatches:
                  $ref: '#/components/schemas/ConstrainedStringList'
                LongestPrefixMatches:
                  $ref: '#/components/schemas/ConstrainedStringList'
                SubnetOfMatches:
                  $ref: '#/components/schemas/ConstrainedStringList'
                SupernetOfMatches:
                  $ref: '#/components/schemas/ConstrainedStringList'
                PrefixListIds:
                  $ref: '#/components/schemas/ConstrainedStringList'
                States:
                  $ref: '#/components/schemas/RouteStateList'
                Types:
                  $ref: '#/components/schemas/RouteTypeList'
                DestinationFilters:
                  $ref: '#/components/schemas/FilterMap'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed due to an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /global-networks/{GlobalNetworkId}/network-telemetry:
    get:
      operationId: GetNetworkTelemetry
      description: |-
        Gets the network telemetry of the specified global network.
      parameters:
      - name: GlobalNetworkId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/GlobalNetworkId'
      - name: coreNetworkId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/CoreNetworkId'
      - name: registeredGatewayArn
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ResourceArn'
      - name: awsRegion
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ExternalRegionCode'
      - name: accountId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/AWSAccountId'
      - name: resourceType
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ConstrainedString'
      - name: resourceArn
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ResourceArn'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed due to an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /global-networks/{GlobalNetworkId}/route-analyses/{RouteAnalysisId}:
    get:
      operationId: GetRouteAnalysis
      description: |-
        Gets information about the specified route analysis.
      parameters:
      - name: GlobalNetworkId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/GlobalNetworkId'
      - name: RouteAnalysisId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ConstrainedString'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed due to an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /site-to-site-vpn-attachments/{AttachmentId}:
    get:
      operationId: GetSiteToSiteVpnAttachment
      description: |-
        Returns information about a site-to-site VPN attachment.
      parameters:
      - name: AttachmentId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AttachmentId'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed due to an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /transit-gateway-peerings/{PeeringId}:
    get:
      operationId: GetTransitGatewayPeering
      description: |-
        Returns information about a transit gateway peer.
      parameters:
      - name: PeeringId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PeeringId'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed due to an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /global-networks/{GlobalNetworkId}/transit-gateway-registrations:
    get:
      operationId: GetTransitGatewayRegistrations
      description: |-
        Gets information about the transit gateway registrations in a specified global network.
      parameters:
      - name: GlobalNetworkId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/GlobalNetworkId'
      - name: transitGatewayArns
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/TransitGatewayArnList'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed due to an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    post:
      operationId: RegisterTransitGateway
      description: |-
        Registers a transit gateway in your global network. Not all Regions support transit gateways for global networks. For a list of the supported Regions, see [Region Availability](https://docs.aws.amazon.com/network-manager/latest/tgwnm/what-are-global-networks.html#nm-available-regions) in the _Amazon Web Services Transit Gateways for Global Networks User Guide_. The transit gateway can be in any of the supported Amazon Web Services Regions, but it must be owned by the same Amazon Web Services account that owns the global network. You cannot register a transit gateway in more than one global network.
      parameters:
      - name: GlobalNetworkId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/GlobalNetworkId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                TransitGatewayArn:
                  $ref: '#/components/schemas/TransitGatewayArn'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There was a conflict processing the request. Updating or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request has failed due to an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /transit-gateway-route-table-attachments/{AttachmentId}:
    get:
      operationId: GetTransitGatewayRouteTableAttachment
      description: |-
        Returns information about a transit gateway route table attachment.
      parameters:
      - name: AttachmentId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AttachmentId'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed due to an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /vpc-attachments/{AttachmentId}:
    get:
      operationId: GetVpcAttachment
      description: |-
        Returns information about a VPC attachment.
      parameters:
      - name: AttachmentId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AttachmentId'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed due to an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    patch:
      operationId: UpdateVpcAttachment
      description: |-
        Updates a VPC attachment.
      parameters:
      - name: AttachmentId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AttachmentId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AddSubnetArns:
                  $ref: '#/components/schemas/SubnetArnList'
                RemoveSubnetArns:
                  $ref: '#/components/schemas/SubnetArnList'
                Options:
                  $ref: '#/components/schemas/VpcOptions'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There was a conflict processing the request. Updating or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request has failed due to an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /attachments:
    get:
      operationId: ListAttachments
      description: |-
        Returns a list of core network attachments.
      parameters:
      - name: coreNetworkId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/CoreNetworkId'
      - name: attachmentType
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/AttachmentType'
      - name: edgeLocation
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ExternalRegionCode'
      - name: state
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/AttachmentState'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed due to an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /core-networks/{CoreNetworkId}/core-network-policy-versions:
    get:
      operationId: ListCoreNetworkPolicyVersions
      description: |-
        Returns a list of core network policy versions.
      parameters:
      - name: CoreNetworkId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CoreNetworkId'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed due to an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /organizations/service-access:
    get:
      operationId: ListOrganizationServiceAccessStatus
      description: |-
        Gets the status of the Service Linked Role (SLR) deployment for the accounts in a given Amazon Web Services Organization.
      parameters:
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
    post:
      operationId: StartOrganizationServiceAccessUpdate
      description: |-
        Enables the Network Manager service for an Amazon Web Services Organization. This can only be called by a management account within the organization.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Action:
                  $ref: '#/components/schemas/Action'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There was a conflict processing the request. Updating or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request has failed due to an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '402':
          description: |-
            A service limit was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /peerings:
    get:
      operationId: ListPeerings
      description: |-
        Lists the peerings for a core network.
      parameters:
      - name: coreNetworkId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/CoreNetworkId'
      - name: peeringType
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PeeringType'
      - name: edgeLocation
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ExternalRegionCode'
      - name: state
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PeeringState'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed due to an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /tags/{ResourceArn}:
    get:
      operationId: ListTagsForResource
      description: |-
        Lists the tags for a specified resource.
      parameters:
      - name: ResourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceArn'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request has failed due to an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    post:
      operationId: TagResource
      description: |-
        Tags a specified resource.
      parameters:
      - name: ResourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceArn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Tags:
                  $ref: '#/components/schemas/TagList'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There was a conflict processing the request. Updating or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request has failed due to an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            A service limit was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    delete:
      operationId: UntagResource
      description: |-
        Removes tags from a specified resource.
      parameters:
      - name: ResourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceArn'
      - name: tagKeys
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/TagKeyList'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There was a conflict processing the request. Updating or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request has failed due to an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /attachments/{AttachmentId}/reject:
    post:
      operationId: RejectAttachment
      description: |-
        Rejects a core network attachment request.
      parameters:
      - name: AttachmentId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AttachmentId'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There was a conflict processing the request. Updating or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request has failed due to an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /core-networks/{CoreNetworkId}/core-network-policy-versions/{PolicyVersionId}/restore:
    post:
      operationId: RestoreCoreNetworkPolicyVersion
      description: |-
        Restores a previous policy version as a new, immutable version of a core network policy. A subsequent change set is created showing the differences between the LIVE policy and restored policy.
      parameters:
      - name: CoreNetworkId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CoreNetworkId'
      - name: PolicyVersionId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Integer'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There was a conflict processing the request. Updating or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request has failed due to an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /global-networks/{GlobalNetworkId}/route-analyses:
    post:
      operationId: StartRouteAnalysis
      description: |-
        Starts analyzing the routing path between the specified source and destination. For more information, see [Route Analyzer](https://docs.aws.amazon.com/vpc/latest/tgw/route-analyzer.html).
      parameters:
      - name: GlobalNetworkId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/GlobalNetworkId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Source:
                  $ref: '#/components/schemas/RouteAnalysisEndpointOptionsSpecification'
                Destination:
                  $ref: '#/components/schemas/RouteAnalysisEndpointOptionsSpecification'
                IncludeReturnPath:
                  $ref: '#/components/schemas/Boolean'
                UseMiddleboxes:
                  $ref: '#/components/schemas/Boolean'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There was a conflict processing the request. Updating or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request has failed due to an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /global-networks/{GlobalNetworkId}/network-resources/{ResourceArn}/metadata:
    patch:
      operationId: UpdateNetworkResourceMetadata
      description: |-
        Updates the resource metadata for the specified global network.
      parameters:
      - name: GlobalNetworkId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/GlobalNetworkId'
      - name: ResourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceArn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Metadata:
                  $ref: '#/components/schemas/NetworkResourceMetadataMap'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There was a conflict processing the request. Updating or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request has failed due to an internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
components:
  schemas:
    AWSAccountId:
      type: string
      pattern: ^[\s\S]*$
      minLength: 12
      maxLength: 12
    AWSLocation:
      type: object
      properties:
        Zone:
          allOf:
          - $ref: '#/components/schemas/ConstrainedString'
          description: The Zone that the device is located in. Specify the ID of an
            Availability Zone, Local Zone, Wavelength Zone, or an Outpost.
        SubnetArn:
          allOf:
          - $ref: '#/components/schemas/SubnetArn'
          description: The Amazon Resource Name (ARN) of the subnet that the device
            is located in.
      description: Specifies a location in Amazon Web Services.
    AcceptAttachmentRequest:
      type: object
      properties:
        AttachmentId:
          allOf:
          - $ref: '#/components/schemas/AttachmentId'
          description: The ID of the attachment.
      required:
      - AttachmentId
    AcceptAttachmentResponse:
      type: object
      properties:
        Attachment:
          allOf:
          - $ref: '#/components/schemas/Attachment'
          description: The response to the attachment request.
    AccessDeniedException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ServerSideString'
      required:
      - Message
      description: You do not have sufficient access to perform this action.
    AccountId:
      type: string
      minLength: 0
      maxLength: 50
    AccountStatus:
      type: object
      properties:
        AccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The ID of an account within the Amazon Web Services Organization.
        SLRDeploymentStatus:
          allOf:
          - $ref: '#/components/schemas/SLRDeploymentStatus'
          description: The status of SLR deployment for the account.
      description: Describes the current status of an account within an Amazon Web
        Services Organization, including service-linked roles (SLRs).
    AccountStatusList:
      type: array
      items:
        $ref: '#/components/schemas/AccountStatus'
    Action:
      type: string
      minLength: 0
      maxLength: 50
    AssociateConnectPeerRequest:
      type: object
      properties:
        GlobalNetworkId:
          allOf:
          - $ref: '#/components/schemas/GlobalNetworkId'
          description: The ID of your global network.
        ConnectPeerId:
          allOf:
          - $ref: '#/components/schemas/ConnectPeerId'
          description: The ID of the Connect peer.
        DeviceId:
          allOf:
          - $ref: '#/components/schemas/DeviceId'
          description: The ID of the device.
        LinkId:
          allOf:
          - $ref: '#/components/schemas/LinkId'
          description: The ID of the link.
      required:
      - GlobalNetworkId
      - ConnectPeerId
      - DeviceId
    AssociateConnectPeerResponse:
      type: object
      properties:
        ConnectPeerAssociation:
          allOf:
          - $ref: '#/components/schemas/ConnectPeerAssociation'
          description: The response to the Connect peer request.
    AssociateCustomerGatewayRequest:
      type: object
      properties:
        CustomerGatewayArn:
          allOf:
          - $ref: '#/components/schemas/CustomerGatewayArn'
          description: The Amazon Resource Name (ARN) of the customer gateway.
        GlobalNetworkId:
          allOf:
          - $ref: '#/components/schemas/GlobalNetworkId'
          description: The ID of the global network.
        DeviceId:
          allOf:
          - $ref: '#/components/schemas/DeviceId'
          description: The ID of the device.
        LinkId:
          allOf:
          - $ref: '#/components/schemas/LinkId'
          description: The ID of the link.
      required:
      - CustomerGatewayArn
      - GlobalNetworkId
      - DeviceId
    AssociateCustomerGatewayResponse:
      type: object
      properties:
        CustomerGatewayAssociation:
          allOf:
          - $ref: '#/components/schemas/CustomerGatewayAssociation'
          description: The customer gateway association.
    AssociateLinkRequest:
      type: object
      properties:
        GlobalNetworkId:
          allOf:
          - $ref: '#/components/schemas/GlobalNetworkId'
          description: The ID of the global network.
        DeviceId:
          allOf:
          - $ref: '#/components/schemas/DeviceId'
          description: The ID of the device.
        LinkId:
          allOf:
          - $ref: '#/components/schemas/LinkId'
          description: The ID of the link.
      required:
      - GlobalNetworkId
      - DeviceId
      - LinkId
    AssociateLinkResponse:
      type: object
      properties:
        LinkAssociation:
          allOf:
          - $ref: '#/components/schemas/LinkAssociation'
          description: The link association.
    AssociateTransitGatewayConnectPeerRequest:
      type: object
      properties:
        GlobalNetworkId:
          allOf:
          - $ref: '#/components/schemas/GlobalNetworkId'
          description: The ID of the global network.
        TransitGatewayConnectPeerArn:
          allOf:
          - $ref: '#/components/schemas/TransitGatewayConnectPeerArn'
          description: The Amazon Resource Name (ARN) of the Connect peer.
        DeviceId:
          allOf:
          - $ref: '#/components/schemas/DeviceId'
          description: The ID of the device.
        LinkId:
          allOf:
          - $ref: '#/components/schemas/LinkId'
          description: The ID of the link.
      required:
      - GlobalNetworkId
      - TransitGatewayConnectPeerArn
      - DeviceId
    AssociateTransitGatewayConnectPeerResponse:
      type: object
      properties:
        TransitGatewayConnectPeerAssociation:
          allOf:
          - $ref: '#/components/schemas/TransitGatewayConnectPeerAssociation'
          description: The transit gateway Connect peer association.
    Attachment:
      type: object
      properties:
        CoreNetworkId:
          allOf:
          - $ref: '#/components/schemas/CoreNetworkId'
          description: The ID of a core network.
        CoreNetworkArn:
          allOf:
          - $ref: '#/components/schemas/CoreNetworkArn'
          description: The ARN of a core network.
        AttachmentId:
          allOf:
          - $ref: '#/components/schemas/AttachmentId'
          description: The ID of the attachment.
        OwnerAccountId:
          allOf:
          - $ref: '#/components/schemas/AWSAccountId'
          description: The ID of the attachment account owner.
        AttachmentType:
          allOf:
          - $ref: '#/components/schemas/AttachmentType'
          description: The type of attachment.
        State:
          allOf:
          - $ref: '#/components/schemas/AttachmentState'
          description: The state of the attachment.
        EdgeLocation:
          allOf:
          - $ref: '#/components/schemas/ExternalRegionCode'
          description: The Region where the edge is located. This is returned for
            all attachment types except a Direct Connect gateway attachment, which
            instead returns `EdgeLocations`.
        EdgeLocations:
          allOf:
          - $ref: '#/components/schemas/ExternalRegionCodeList'
          description: The edge locations that the Direct Connect gateway is associated
            with. This is returned only for Direct Connect gateway attachments. All
            other attachment types retrun `EdgeLocation`.
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          description: The attachment resource ARN.
        AttachmentPolicyRuleNumber:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The policy rule number associated with the attachment.
        SegmentName:
          allOf:
          - $ref: '#/components/schemas/ConstrainedString'
          description: The name of the segment attachment.
        NetworkFunctionGroupName:
          allOf:
          - $ref: '#/components/schemas/NetworkFunctionGroupName'
          description: The name of the network function group.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: The tags associated with the attachment.
        ProposedSegmentChange:
          allOf:
          - $ref: '#/components/schemas/ProposedSegmentChange'
          description: The attachment to move from one segment to another.
        ProposedNetworkFunctionGroupChange:
          allOf:
          - $ref: '#/components/schemas/ProposedNetworkFunctionGroupChange'
          description: Describes a proposed change to a network function group associated
            with the attachment.
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          description: The timestamp when the attachment was created.
        UpdatedAt:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          description: The timestamp when the attachment was last updated.
        LastModificationErrors:
          allOf:
          - $ref: '#/components/schemas/AttachmentErrorList'
          description: Describes the error associated with the attachment request.
      description: Describes a core network attachment.
    AttachmentError:
      type: object
      properties:
        Code:
          allOf:
          - $ref: '#/components/schemas/AttachmentErrorCode'
          description: The error code for the attachment request.
        Message:
          allOf:
          - $ref: '#/components/schemas/ServerSideString'
          description: The message associated with the error `code`.
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          description: The ARN of the requested attachment resource.
        RequestId:
          allOf:
          - $ref: '#/components/schemas/ServerSideString'
          description: The ID of the attachment request.
      description: Describes the error associated with an attachment request.
    AttachmentErrorCode:
      type: string
      enum:
      - VPC_NOT_FOUND
      - SUBNET_NOT_FOUND
      - SUBNET_DUPLICATED_IN_AVAILABILITY_ZONE
      - SUBNET_NO_FREE_ADDRESSES
      - SUBNET_UNSUPPORTED_AVAILABILITY_ZONE
      - SUBNET_NO_IPV6_CIDRS
      - VPN_CONNECTION_NOT_FOUND
      - MAXIMUM_NO_ENCAP_LIMIT_EXCEEDED
      - DIRECT_CONNECT_GATEWAY_NOT_FOUND
      - DIRECT_CONNECT_GATEWAY_EXISTING_ATTACHMENTS
      - DIRECT_CONNECT_GATEWAY_NO_PRIVATE_VIF
    AttachmentErrorList:
      type: array
      items:
        $ref: '#/components/schemas/AttachmentError'
    AttachmentId:
      type: string
      pattern: ^attachment-([0-9a-f]{8,17})$
      minLength: 0
      maxLength: 50
    AttachmentList:
      type: array
      items:
        $ref: '#/components/schemas/Attachment'
    AttachmentState:
      type: string
      enum:
      - REJECTED
      - PENDING_ATTACHMENT_ACCEPTANCE
      - CREATING
      - FAILED
      - AVAILABLE
      - UPDATING
      - PENDING_NETWORK_UPDATE
      - PENDING_TAG_ACCEPTANCE
      - DELETING
    AttachmentType:
      type: string
      enum:
      - CONNECT
      - SITE_TO_SITE_VPN
      - VPC
      - DIRECT_CONNECT_GATEWAY
      - TRANSIT_GATEWAY_ROUTE_TABLE
    Bandwidth:
      type: object
      properties:
        UploadSpeed:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: Upload speed in Mbps.
        DownloadSpeed:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: Download speed in Mbps.
      description: Describes bandwidth information.
    BgpOptions:
      type: object
      properties:
        PeerAsn:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: The Peer ASN of the BGP.
      description: Describes the BGP options.
    Boolean:
      type: boolean
      default: false
    ChangeAction:
      type: string
      enum:
      - ADD
      - MODIFY
      - REMOVE
    ChangeSetState:
      type: string
      enum:
      - PENDING_GENERATION
      - FAILED_GENERATION
      - READY_TO_EXECUTE
      - EXECUTING
      - EXECUTION_SUCCEEDED
      - OUT_OF_DATE
    ChangeStatus:
      type: string
      enum:
      - NOT_STARTED
      - IN_PROGRESS
      - COMPLETE
      - FAILED
    ChangeType:
      type: string
      enum:
      - CORE_NETWORK_SEGMENT
      - NETWORK_FUNCTION_GROUP
      - CORE_NETWORK_EDGE
      - ATTACHMENT_MAPPING
      - ATTACHMENT_ROUTE_PROPAGATION
      - ATTACHMENT_ROUTE_STATIC
      - CORE_NETWORK_CONFIGURATION
      - SEGMENTS_CONFIGURATION
      - SEGMENT_ACTIONS_CONFIGURATION
      - ATTACHMENT_POLICIES_CONFIGURATION
    ClientToken:
      type: string
      pattern: ^[\s\S]*$
      minLength: 0
      maxLength: 256
    ConflictException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ServerSideString'
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/ServerSideString'
          description: The ID of the resource.
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/ServerSideString'
          description: The resource type.
      required:
      - Message
      - ResourceId
      - ResourceType
      description: There was a conflict processing the request. Updating or deleting
        the resource can cause an inconsistent state.
    ConnectAttachment:
      type: object
      properties:
        Attachment:
          allOf:
          - $ref: '#/components/schemas/Attachment'
          description: The attachment details.
        TransportAttachmentId:
          allOf:
          - $ref: '#/components/schemas/AttachmentId'
          description: The ID of the transport attachment.
        Options:
          allOf:
          - $ref: '#/components/schemas/ConnectAttachmentOptions'
          description: Options for connecting an attachment.
      description: Describes a core network Connect attachment.
    ConnectAttachmentOptions:
      type: object
      properties:
        Protocol:
          allOf:
          - $ref: '#/components/schemas/TunnelProtocol'
          description: The protocol used for the attachment connection.
      description: Describes a core network Connect attachment options.
    ConnectPeer:
      type: object
      properties:
        CoreNetworkId:
          allOf:
          - $ref: '#/components/schemas/CoreNetworkId'
          description: The ID of a core network.
        ConnectAttachmentId:
          allOf:
          - $ref: '#/components/schemas/AttachmentId'
          description: The ID of the attachment to connect.
        ConnectPeerId:
          allOf:
          - $ref: '#/components/schemas/ConnectPeerId'
          description: The ID of the Connect peer.
        EdgeLocation:
          allOf:
          - $ref: '#/components/schemas/ExternalRegionCode'
          description: The Connect peer Regions where edges are located.
        State:
          allOf:
          - $ref: '#/components/schemas/ConnectPeerState'
          description: The state of the Connect peer.
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          description: The timestamp when the Connect peer was created.
        Configuration:
          allOf:
          - $ref: '#/components/schemas/ConnectPeerConfiguration'
          description: The configuration of the Connect peer.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: The list of key-value tags associated with the Connect peer.
        SubnetArn:
          allOf:
          - $ref: '#/components/schemas/SubnetArn'
          description: The subnet ARN for the Connect peer. This only applies only
            when the protocol is NO_ENCAP.
        LastModificationErrors:
          allOf:
          - $ref: '#/components/schemas/ConnectPeerErrorList'
          description: Describes the error associated with the attachment request.
      description: Describes a core network Connect peer.
    ConnectPeerAssociation:
      type: object
      properties:
        ConnectPeerId:
          allOf:
          - $ref: '#/components/schemas/ConnectPeerId'
          description: The ID of the Connect peer.
        GlobalNetworkId:
          allOf:
          - $ref: '#/components/schemas/GlobalNetworkId'
          description: The ID of the global network.
        DeviceId:
          allOf:
          - $ref: '#/components/schemas/DeviceId'
          description: The ID of the device to connect to.
        LinkId:
          allOf:
          - $ref: '#/components/schemas/LinkId'
          description: The ID of the link.
        State:
          allOf:
          - $ref: '#/components/schemas/ConnectPeerAssociationState'
          description: The state of the Connect peer association.
      description: Describes a core network Connect peer association.
    ConnectPeerAssociationList:
      type: array
      items:
        $ref: '#/components/schemas/ConnectPeerAssociation'
    ConnectPeerAssociationState:
      type: string
      enum:
      - PENDING
      - AVAILABLE
      - DELETING
      - DELETED
    ConnectPeerBgpConfiguration:
      type: object
      properties:
        CoreNetworkAsn:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: The ASN of the Coret Network.
        PeerAsn:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: The ASN of the Connect peer.
        CoreNetworkAddress:
          allOf:
          - $ref: '#/components/schemas/IPAddress'
          description: The address of a core network.
        PeerAddress:
          allOf:
          - $ref: '#/components/schemas/IPAddress'
          description: The address of a core network Connect peer.
      description: Describes a core network BGP configuration.
    ConnectPeerBgpConfigurationList:
      type: array
      items:
        $ref: '#/components/schemas/ConnectPeerBgpConfiguration'
    ConnectPeerConfiguration:
      type: object
      properties:
        CoreNetworkAddress:
          allOf:
          - $ref: '#/components/schemas/IPAddress'
          description: The IP address of a core network.
        PeerAddress:
          allOf:
          - $ref: '#/components/schemas/IPAddress'
          description: The IP address of the Connect peer.
        InsideCidrBlocks:
          allOf:
          - $ref: '#/components/schemas/ConstrainedStringList'
          description: The inside IP addresses used for a Connect peer configuration.
        Protocol:
          allOf:
          - $ref: '#/components/schemas/TunnelProtocol'
          description: The protocol used for a Connect peer configuration.
        BgpConfigurations:
          allOf:
          - $ref: '#/components/schemas/ConnectPeerBgpConfigurationList'
          description: The Connect peer BGP configurations.
      description: Describes a core network Connect peer configuration.
    ConnectPeerError:
      type: object
      properties:
        Code:
          allOf:
          - $ref: '#/components/schemas/ConnectPeerErrorCode'
          description: The error code for the Connect peer request.
        Message:
          allOf:
          - $ref: '#/components/schemas/ServerSideString'
          description: The message associated with the error `code`.
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          description: The ARN of the requested Connect peer resource.
        RequestId:
          allOf:
          - $ref: '#/components/schemas/ServerSideString'
          description: The ID of the Connect peer request.
      description: Describes an error associated with a Connect peer request
    ConnectPeerErrorCode:
      type: string
      enum:
      - EDGE_LOCATION_NO_FREE_IPS
      - EDGE_LOCATION_PEER_DUPLICATE
      - SUBNET_NOT_FOUND
      - IP_OUTSIDE_SUBNET_CIDR_RANGE
      - INVALID_INSIDE_CIDR_BLOCK
      - NO_ASSOCIATED_CIDR_BLOCK
    ConnectPeerErrorList:
      type: array
      items:
        $ref: '#/components/schemas/ConnectPeerError'
    ConnectPeerId:
      type: string
      pattern: ^connect-peer-([0-9a-f]{8,17})$
      minLength: 0
      maxLength: 50
    ConnectPeerIdList:
      type: array
      items:
        $ref: '#/components/schemas/ConnectPeerId'
    ConnectPeerState:
      type: string
      enum:
      - CREATING
      - FAILED
      - AVAILABLE
      - DELETING
    ConnectPeerSummary:
      type: object
      properties:
        CoreNetworkId:
          allOf:
          - $ref: '#/components/schemas/CoreNetworkId'
          description: The ID of a core network.
        ConnectAttachmentId:
          allOf:
          - $ref: '#/components/schemas/AttachmentId'
          description: The ID of a Connect peer attachment.
        ConnectPeerId:
          allOf:
          - $ref: '#/components/schemas/ConnectPeerId'
          description: The ID of a Connect peer.
        EdgeLocation:
          allOf:
          - $ref: '#/components/schemas/ExternalRegionCode'
          description: The Region where the edge is located.
        ConnectPeerState:
          allOf:
          - $ref: '#/components/schemas/ConnectPeerState'
          description: The state of a Connect peer.
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          description: The timestamp when a Connect peer was created.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: The list of key-value tags associated with the Connect peer
            summary.
        SubnetArn:
          allOf:
          - $ref: '#/components/schemas/SubnetArn'
          description: The subnet ARN for the Connect peer summary.
      description: Summary description of a Connect peer.
    ConnectPeerSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/ConnectPeerSummary'
    Connection:
      type: object
      properties:
        ConnectionId:
          allOf:
          - $ref: '#/components/schemas/ConnectionId'
          description: The ID of the connection.
        ConnectionArn:
          allOf:
          - $ref: '#/components/schemas/ConnectionArn'
          description: The Amazon Resource Name (ARN) of the connection.
        GlobalNetworkId:
          allOf:
          - $ref: '#/components/schemas/GlobalNetworkId'
          description: The ID of the global network.
        DeviceId:
          allOf:
          - $ref: '#/components/schemas/DeviceId'
          description: The ID of the first device in the connection.
        ConnectedDeviceId:
          allOf:
          - $ref: '#/components/schemas/DeviceId'
          description: The ID of the second device in the connection.
        LinkId:
          allOf:
          - $ref: '#/components/schemas/LinkId'
          description: The ID of the link for the first device in the connection.
        ConnectedLinkId:
          allOf:
          - $ref: '#/components/schemas/LinkId'
          description: The ID of the link for the second device in the connection.
        Description:
          allOf:
          - $ref: '#/components/schemas/ConstrainedString'
          description: The description of the connection.
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          description: The date and time that the connection was created.
        State:
          allOf:
          - $ref: '#/components/schemas/ConnectionState'
          description: The state of the connection.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: The tags for the connection.
      description: Describes a connection.
    ConnectionArn:
      type: string
      pattern: ^[\s\S]*$
      minLength: 0
      maxLength: 500
    ConnectionHealth:
      type: object
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/ConnectionType'
          description: The connection type.
        Status:
          allOf:
          - $ref: '#/components/schemas/ConnectionStatus'
          description: The connection status.
        Timestamp:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          description: The time the status was last updated.
      description: Describes connection health.
    ConnectionId:
      type: string
      pattern: ^[\s\S]*$
      minLength: 0
      maxLength: 50
    ConnectionIdList:
      type: array
      items:
        $ref: '#/components/schemas/ConnectionId'
    ConnectionList:
      type: array
      items:
        $ref: '#/components/schemas/Connection'
    ConnectionState:
      type: string
      enum:
      - PENDING
      - AVAILABLE
      - DELETING
      - UPDATING
    ConnectionStatus:
      type: string
      enum:
      - UP
      - DOWN
    ConnectionType:
      type: string
      enum:
      - BGP
      - IPSEC
    ConstrainedString:
      type: string
      pattern: ^[\s\S]*$
      minLength: 0
      maxLength: 256
    ConstrainedStringList:
      type: array
      items:
        $ref: '#/components/schemas/ConstrainedString'
    CoreNetwork:
      type: object
      properties:
        GlobalNetworkId:
          allOf:
          - $ref: '#/components/schemas/GlobalNetworkId'
          description: The ID of the global network that your core network is a part
            of.
        CoreNetworkId:
          allOf:
          - $ref: '#/components/schemas/CoreNetworkId'
          description: The ID of a core network.
        CoreNetworkArn:
          allOf:
          - $ref: '#/components/schemas/CoreNetworkArn'
          description: The ARN of a core network.
        Description:
          allOf:
          - $ref: '#/components/schemas/ConstrainedString'
          description: The description of a core network.
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          description: The timestamp when a core network was created.
        State:
          allOf:
          - $ref: '#/components/schemas/CoreNetworkState'
          description: The current state of a core network.
        Segments:
          allOf:
          - $ref: '#/components/schemas/CoreNetworkSegmentList'
          description: The segments within a core network.
        NetworkFunctionGroups:
          allOf:
          - $ref: '#/components/schemas/CoreNetworkNetworkFunctionGroupList'
          description: The network function groups associated with a core network.
        Edges:
          allOf:
          - $ref: '#/components/schemas/CoreNetworkEdgeList'
          description: The edges within a core network.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: The list of key-value tags associated with a core network.
      description: Describes a core network.
    CoreNetworkArn:
      type: string
      pattern: ^[\s\S]*$
      minLength: 0
      maxLength: 500
    CoreNetworkChange:
      type: object
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/ChangeType'
          description: The type of change.
        Action:
          allOf:
          - $ref: '#/components/schemas/ChangeAction'
          description: The action to take for a core network.
        Identifier:
          allOf:
          - $ref: '#/components/schemas/ConstrainedString'
          description: The resource identifier.
        PreviousValues:
          allOf:
          - $ref: '#/components/schemas/CoreNetworkChangeValues'
          description: The previous values for a core network.
        NewValues:
          allOf:
          - $ref: '#/components/schemas/CoreNetworkChangeValues'
          description: The new value for a core network
        IdentifierPath:
          allOf:
          - $ref: '#/components/schemas/ConstrainedString'
          description: Uniquely identifies the path for a change within the changeset.
            For example, the `IdentifierPath` for a core network segment change might
            be `"CORE_NETWORK_SEGMENT/us-east-1/devsegment"`.
      description: Details describing a core network change.
    CoreNetworkChangeEvent:
      type: object
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/ChangeType'
          description: Describes the type of change event.
        Action:
          allOf:
          - $ref: '#/components/schemas/ChangeAction'
          description: The action taken for the change event.
        IdentifierPath:
          allOf:
          - $ref: '#/components/schemas/ConstrainedString'
          description: Uniquely identifies the path for a change within the changeset.
            For example, the `IdentifierPath` for a core network segment change might
            be `"CORE_NETWORK_SEGMENT/us-east-1/devsegment"`.
        EventTime:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          description: The timestamp for an event change in status.
        Status:
          allOf:
          - $ref: '#/components/schemas/ChangeStatus'
          description: The status of the core network change event.
        Values:
          allOf:
          - $ref: '#/components/schemas/CoreNetworkChangeEventValues'
          description: Details of the change event.
      description: Describes a core network change event. This can be a change to
        a segment, attachment, route, etc.
    CoreNetworkChangeEventList:
      type: array
      items:
        $ref: '#/components/schemas/CoreNetworkChangeEvent'
    CoreNetworkChangeEventValues:
      type: object
      properties:
        EdgeLocation:
          allOf:
          - $ref: '#/components/schemas/ExternalRegionCode'
          description: The edge location for the core network change event.
        SegmentName:
          allOf:
          - $ref: '#/components/schemas/ConstrainedString'
          description: The segment name if the change event is associated with a segment.
        NetworkFunctionGroupName:
          allOf:
          - $ref: '#/components/schemas/ConstrainedString'
          description: The changed network function group name.
        AttachmentId:
          allOf:
          - $ref: '#/components/schemas/AttachmentId'
          description: The ID of the attachment if the change event is associated
            with an attachment.
        Cidr:
          allOf:
          - $ref: '#/components/schemas/ConstrainedString'
          description: For a `STATIC_ROUTE` event, this is the IP address.
      description: Describes a core network change event.
    CoreNetworkChangeList:
      type: array
      items:
        $ref: '#/components/schemas/CoreNetworkChange'
    CoreNetworkChangeValues:
      type: object
      properties:
        SegmentName:
          allOf:
          - $ref: '#/components/schemas/ConstrainedString'
          description: The names of the segments in a core network.
        NetworkFunctionGroupName:
          allOf:
          - $ref: '#/components/schemas/ConstrainedString'
          description: The network function group name if the change event is associated
            with a network function group.
        EdgeLocations:
          allOf:
          - $ref: '#/components/schemas/ExternalRegionCodeList'
          description: The Regions where edges are located in a core network.
        Asn:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: The ASN of a core network.
        Cidr:
          allOf:
          - $ref: '#/components/schemas/ConstrainedString'
          description: The IP addresses used for a core network.
        DestinationIdentifier:
          allOf:
          - $ref: '#/components/schemas/ConstrainedString'
          description: The ID of the destination.
        InsideCidrBlocks:
          allOf:
          - $ref: '#/components/schemas/ConstrainedStringList'
          description: The inside IP addresses used for core network change values.
        SharedSegments:
          allOf:
          - $ref: '#/components/schemas/ConstrainedStringList'
          description: The shared segments for a core network change value.
        ServiceInsertionActions:
          allOf:
          - $ref: '#/components/schemas/ServiceInsertionActionList'
          description: Describes the service insertion action.
      description: Describes a core network change.
    CoreNetworkEdge:
      type: object
      properties:
        EdgeLocation:
          allOf:
          - $ref: '#/components/schemas/ExternalRegionCode'
          description: The Region where a core network edge is located.
        Asn:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: The ASN of a core network edge.
        InsideCidrBlocks:
          allOf:
          - $ref: '#/components/schemas/ConstrainedStringList'
          description: The inside IP addresses used for core network edges.
      description: Describes a core network edge.
    CoreNetworkEdgeList:
      type: array
      items:
        $ref: '#/components/schemas/CoreNetworkEdge'
    CoreNetworkId:
      type: string
      pattern: ^core-network-([0-9a-f]{8,17})$
      minLength: 0
      maxLength: 50
    CoreNetworkNetworkFunctionGroup:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/ConstrainedString'
          description: The name of the network function group.
        EdgeLocations:
          allOf:
          - $ref: '#/components/schemas/ExternalRegionCodeList'
          description: The core network edge locations.
        Segments:
          allOf:
          - $ref: '#/components/schemas/ServiceInsertionSegments'
          description: The segments associated with the network function group.
      description: Describes a network function group.
    CoreNetworkNetworkFunctionGroupIdentifier:
      type: object
      properties:
        CoreNetworkId:
          allOf:
          - $ref: '#/components/schemas/CoreNetworkId'
          description: The ID of the core network.
        NetworkFunctionGroupName:
          allOf:
          - $ref: '#/components/schemas/ConstrainedString'
          description: The network function group name.
        EdgeLocation:
          allOf:
          - $ref: '#/components/schemas/ExternalRegionCode'
          description: The location for the core network edge.
      description: Describes a core network
    CoreNetworkNetworkFunctionGroupList:
      type: array
      items:
        $ref: '#/components/schemas/CoreNetworkNetworkFunctionGroup'
    CoreNetworkPolicy:
      type: object
      properties:
        CoreNetworkId:
          allOf:
          - $ref: '#/components/schemas/CoreNetworkId'
          description: The ID of a core network.
        PolicyVersionId:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The ID of the policy version.
        Alias:
          allOf:
          - $ref: '#/components/schemas/CoreNetworkPolicyAlias'
          description: Whether a core network policy is the current LIVE policy or
            the most recently submitted policy.
        Description:
          allOf:
          - $ref: '#/components/schemas/ConstrainedString'
          description: The description of a core network policy.
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          description: The timestamp when a core network policy was created.
        ChangeSetState:
          allOf:
          - $ref: '#/components/schemas/ChangeSetState'
          description: The state of a core network policy.
        PolicyErrors:
          allOf:
          - $ref: '#/components/schemas/CoreNetworkPolicyErrorList'
          description: Describes any errors in a core network policy.
        PolicyDocument:
          allOf:
          - $ref: '#/components/schemas/SynthesizedJsonCoreNetworkPolicyDocument'
          description: Describes a core network policy.
      description: Describes a core network policy. You can have only one LIVE Core
        Policy.
    CoreNetworkPolicyAlias:
      type: string
      enum:
      - LIVE
      - LATEST
    CoreNetworkPolicyDocument:
      type: string
      pattern: ^[\s\S]*$
      minLength: 0
      maxLength: 10000000
    CoreNetworkPolicyError:
      type: object
      properties:
        ErrorCode:
          allOf:
          - $ref: '#/components/schemas/ServerSideString'
          description: The error code associated with a core network policy error.
        Message:
          allOf:
          - $ref: '#/components/schemas/ServerSideString'
          description: The message associated with a core network policy error code.
        Path:
          allOf:
          - $ref: '#/components/schemas/ServerSideString'
          description: The JSON path where the error was discovered in the policy
            document.
      required:
      - ErrorCode
      - Message
      description: Provides details about an error in a core network policy.
    CoreNetworkPolicyErrorList:
      type: array
      items:
        $ref: '#/components/schemas/CoreNetworkPolicyError'
    CoreNetworkPolicyException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ServerSideString'
        Errors:
          allOf:
          - $ref: '#/components/schemas/CoreNetworkPolicyErrorList'
          description: Describes a core network policy exception.
      required:
      - Message
      description: Describes a core network policy exception.
    CoreNetworkPolicyVersion:
      type: object
      properties:
        CoreNetworkId:
          allOf:
          - $ref: '#/components/schemas/CoreNetworkId'
          description: The ID of a core network.
        PolicyVersionId:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The ID of the policy version.
        Alias:
          allOf:
          - $ref: '#/components/schemas/CoreNetworkPolicyAlias'
          description: Whether a core network policy is the current policy or the
            most recently submitted policy.
        Description:
          allOf:
          - $ref: '#/components/schemas/ConstrainedString'
          description: The description of a core network policy version.
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          description: The timestamp when a core network policy version was created.
        ChangeSetState:
          allOf:
          - $ref: '#/components/schemas/ChangeSetState'
          description: The status of the policy version change set.
      description: Describes a core network policy version.
    CoreNetworkPolicyVersionList:
      type: array
      items:
        $ref: '#/components/schemas/CoreNetworkPolicyVersion'
    CoreNetworkSegment:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/ConstrainedString'
          description: The name of a core network segment.
        EdgeLocations:
          allOf:
          - $ref: '#/components/schemas/ExternalRegionCodeList'
          description: The Regions where the edges are located.
        SharedSegments:
          allOf:
          - $ref: '#/components/schemas/ConstrainedStringList'
          description: The shared segments of a core network.
      description: Describes a core network segment, which are dedicated routes. Only
        attachments within this segment can communicate with each other.
    CoreNetworkSegmentEdgeIdentifier:
      type: object
      properties:
        CoreNetworkId:
          allOf:
          - $ref: '#/components/schemas/CoreNetworkId'
          description: The ID of a core network.
        SegmentName:
          allOf:
          - $ref: '#/components/schemas/ConstrainedString'
          description: The name of the segment edge.
        EdgeLocation:
          allOf:
          - $ref: '#/components/schemas/ExternalRegionCode'
          description: The Region where the segment edge is located.
      description: Returns details about a core network edge.
    CoreNetworkSegmentList:
      type: array
      items:
        $ref: '#/components/schemas/CoreNetworkSegment'
    CoreNetworkState:
      type: string
      enum:
      - CREATING
      - UPDATING
      - AVAILABLE
      - DELETING
    CoreNetworkSummary:
      type: object
      properties:
        CoreNetworkId:
          allOf:
          - $ref: '#/components/schemas/CoreNetworkId'
          description: The ID of a core network.
        CoreNetworkArn:
          allOf:
          - $ref: '#/components/schemas/CoreNetworkArn'
          description: a core network ARN.
        GlobalNetworkId:
          allOf:
          - $ref: '#/components/schemas/GlobalNetworkId'
          description: The global network ID.
        OwnerAccountId:
          allOf:
          - $ref: '#/components/schemas/AWSAccountId'
          description: The ID of the account owner.
        State:
          allOf:
          - $ref: '#/components/schemas/CoreNetworkState'
          description: The state of a core network.
        Description:
          allOf:
          - $ref: '#/components/schemas/ConstrainedString'
          description: The description of a core network.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: The key-value tags associated with a core network summary.
      description: Returns summary information about a core network.
    CoreNetworkSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/CoreNetworkSummary'
    CreateConnectAttachmentRequest:
      type: object
      properties:
        CoreNetworkId:
          allOf:
          - $ref: '#/components/schemas/CoreNetworkId'
          description: The ID of a core network where you want to create the attachment.
        EdgeLocation:
          allOf:
          - $ref: '#/components/schemas/ExternalRegionCode'
          description: The Region where the edge is located.
        TransportAttachmentId:
          allOf:
          - $ref: '#/components/schemas/AttachmentId'
          description: The ID of the attachment between the two connections.
        Options:
          allOf:
          - $ref: '#/components/schemas/ConnectAttachmentOptions'
          description: Options for creating an attachment.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: The list of key-value tags associated with the request.
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: The client token associated with the request.
      required:
      - CoreNetworkId
      - EdgeLocation
      - TransportAttachmentId
      - Options
    CreateConnectAttachmentResponse:
      type: object
      properties:
        ConnectAttachment:
          allOf:
          - $ref: '#/components/schemas/ConnectAttachment'
          description: The response to a Connect attachment request.
    CreateConnectPeerRequest:
      type: object
      properties:
        ConnectAttachmentId:
          allOf:
          - $ref: '#/components/schemas/AttachmentId'
          description: The ID of the connection attachment.
        CoreNetworkAddress:
          allOf:
          - $ref: '#/components/schemas/IPAddress'
          description: A Connect peer core network address. This only applies only
            when the protocol is `GRE`.
        PeerAddress:
          allOf:
          - $ref: '#/components/schemas/IPAddress'
          description: The Connect peer address.
        BgpOptions:
          allOf:
          - $ref: '#/components/schemas/BgpOptions'
          description: The Connect peer BGP options. This only applies only when the
            protocol is `GRE`.
        InsideCidrBlocks:
          allOf:
          - $ref: '#/components/schemas/ConstrainedStringList'
          description: The inside IP addresses used for BGP peering.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: The tags associated with the peer request.
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: The client token associated with the request.
        SubnetArn:
          allOf:
          - $ref: '#/components/schemas/SubnetArn'
          description: The subnet ARN for the Connect peer. This only applies only
            when the protocol is NO_ENCAP.
      required:
      - ConnectAttachmentId
      - PeerAddress
    CreateConnectPeerResponse:
      type: object
      properties:
        ConnectPeer:
          allOf:
          - $ref: '#/components/schemas/ConnectPeer'
          description: The response to the request.
    CreateConnectionRequest:
      type: object
      properties:
        GlobalNetworkId:
          allOf:
          - $ref: '#/components/schemas/GlobalNetworkId'
          description: The ID of the global network.
        DeviceId:
          allOf:
          - $ref: '#/components/schemas/DeviceId'
          description: The ID of the first device in the connection.
        ConnectedDeviceId:
          allOf:
          - $ref: '#/components/schemas/DeviceId'
          description: The ID of the second device in the connection.
        LinkId:
          allOf:
          - $ref: '#/components/schemas/LinkId'
          description: The ID of the link for the first device.
        ConnectedLinkId:
          allOf:
          - $ref: '#/components/schemas/LinkId'
          description: The ID of the link for the second device.
        Description:
          allOf:
          - $ref: '#/components/schemas/ConstrainedString'
          description: 'A description of the connection.


            Length Constraints: Maximum length of 256 characters.'
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: The tags to apply to the resource during creation.
      required:
      - GlobalNetworkId
      - DeviceId
      - ConnectedDeviceId
    CreateConnectionResponse:
      type: object
      properties:
        Connection:
          allOf:
          - $ref: '#/components/schemas/Connection'
          description: Information about the connection.
    CreateCoreNetworkRequest:
      type: object
      properties:
        GlobalNetworkId:
          allOf:
          - $ref: '#/components/schemas/GlobalNetworkId'
          description: The ID of the global network that a core network will be a
            part of.
        Description:
          allOf:
          - $ref: '#/components/schemas/ConstrainedString'
          description: The description of a core network.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: Key-value tags associated with a core network request.
        PolicyDocument:
          allOf:
          - $ref: '#/components/schemas/CoreNetworkPolicyDocument'
          description: The policy document for creating a core network.
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: The client token associated with a core network request.
      required:
      - GlobalNetworkId
    CreateCoreNetworkResponse:
      type: object
      properties:
        CoreNetwork:
          allOf:
          - $ref: '#/components/schemas/CoreNetwork'
          description: Returns details about a core network.
    CreateDeviceRequest:
      type: object
      properties:
        GlobalNetworkId:
          allOf:
          - $ref: '#/components/schemas/GlobalNetworkId'
          description: The ID of the global network.
        AWSLocation:
          allOf:
          - $ref: '#/components/schemas/AWSLocation'
          description: The Amazon Web Services location of the device, if applicable.
            For an on-premises device, you can omit this parameter.
        Description:
          allOf:
          - $ref: '#/components/schemas/ConstrainedString'
          description: 'A description of the device.


            Constraints: Maximum length of 256 characters.'
        Type:
          allOf:
          - $ref: '#/components/schemas/ConstrainedString'
          description: The type of the device.
        Vendor:
          allOf:
          - $ref: '#/components/schemas/ConstrainedString'
          description: 'The vendor of the device.


            Constraints: Maximum length of 128 characters.'
        Model:
          allOf:
          - $ref: '#/components/schemas/ConstrainedString'
          description: 'The model of the device.


            Constraints: Maximum length of 128 characters.'
        SerialNumber:
          allOf:
          - $ref: '#/components/schemas/ConstrainedString'
          description: 'The serial number of the device.


            Constraints: Maximum length of 128 characters.'
        Location:
          allOf:
          - $ref: '#/components/schemas/Location'
          description: The location of the device.
        SiteId:
          allOf:
          - $ref: '#/components/schemas/SiteId'
          description: The ID of the site.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: The tags to apply to the resource during creation.
      required:
      - GlobalNetworkId
    CreateDeviceResponse:
      type: object
      properties:
        Device:
          allOf:
          - $ref: '#/components/schemas/Device'
          description: Information about the device.
    CreateDirectConnectGatewayAttachmentRequest:
      type: object
      properties:
        CoreNetworkId:
          allOf:
          - $ref: '#/components/schemas/CoreNetworkId'
          description: The ID of the Cloud WAN core network that the Direct Connect
            gateway attachment should be attached to.
        DirectConnectGatewayArn:
          allOf:
          - $ref: '#/components/schemas/DirectConnectGatewayArn'
          description: The ARN of the Direct Connect gateway attachment.
        EdgeLocations:
          allOf:
          - $ref: '#/components/schemas/ExternalRegionCodeList'
          description: One or more core network edge locations that the Direct Connect
            gateway attachment is associated with.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: The key value tags to apply to the Direct Connect gateway attachment
            during creation.
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: client token
      required:
      - CoreNetworkId
      - DirectConnectGatewayArn
      - EdgeLocations
    CreateDirectConnectGatewayAttachmentResponse:
      type: object
      properties:
        DirectConnectGatewayAttachment:
          allOf:
          - $ref: '#/components/schemas/DirectConnectGatewayAttachment'
          description: Describes the details of a `CreateDirectConnectGatewayAttachment`
            request.
    CreateGlobalNetworkRequest:
      type: object
      properties:
        Description:
          allOf:
          - $ref: '#/components/schemas/ConstrainedString'
          description: 'A description of the global network.


            Constraints: Maximum length of 256 characters.'
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: The tags to apply to the resource during creation.
    CreateGlobalNetworkResponse:
      type: object
      properties:
        GlobalNetwork:
          allOf:
          - $ref: '#/components/schemas/GlobalNetwork'
          description: Information about the global network object.
    CreateLinkRequest:
      type: object
      properties:
        GlobalNetworkId:
          allOf:
          - $ref: '#/components/schemas/GlobalNetworkId'
          description: The ID of the global network.
        Description:
          allOf:
          - $ref: '#/components/schemas/ConstrainedString'
          description: 'A description of the link.


            Constraints: Maximum length of 256 characters.'
        Type:
          allOf:
          - $ref: '#/components/schemas/ConstrainedString'
          description: 'The type of the link.


            Constraints: Maximum length of 128 characters. Cannot include the following
            characters: | \ ^'
        Bandwidth:
          allOf:
          - $ref: '#/components/schemas/Bandwidth'
          description: The upload speed and download speed in Mbps.
        Provider:
          allOf:
          - $ref: '#/components/schemas/ConstrainedString'
          description: 'The provider of the link.


            Constraints: Maximum length of 128 characters. Cannot include the following
            characters: | \ ^'
        SiteId:
          allOf:
          - $ref: '#/components/schemas/SiteId'
          description: The ID of the site.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: The tags to apply to the resource during creation.
      required:
      - GlobalNetworkId
      - Bandwidth
      - SiteId
    CreateLinkResponse:
      type: object
      properties:
        Link:
          allOf:
          - $ref: '#/components/schemas/Link'
          description: Information about the link.
    CreateSiteRequest:
      type: object
      properties:
        GlobalNetworkId:
          allOf:
          - $ref: '#/components/schemas/GlobalNetworkId'
          description: The ID of the global network.
        Description:
          allOf:
          - $ref: '#/components/schemas/ConstrainedString'
          description: 'A description of your site.


            Constraints: Maximum length of 256 characters.'
        Location:
          allOf:
          - $ref: '#/components/schemas/Location'
          description: "The site location. This information is used for visualization\
            \ in the Network Manager console. If you specify the address, the latitude\
            \ and longitude are automatically calculated.\n\n  * `Address`: The physical\
            \ address of the site.\n\n  * `Latitude`: The latitude of the site. \n\
            \n  * `Longitude`: The longitude of the site."
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: The tags to apply to the resource during creation.
      required:
      - GlobalNetworkId
    CreateSiteResponse:
      type: object
      properties:
        Site:
          allOf:
          - $ref: '#/components/schemas/Site'
          description: Information about the site.
    CreateSiteToSiteVpnAttachmentRequest:
      type: object
      properties:
        CoreNetworkId:
          allOf:
          - $ref: '#/components/schemas/CoreNetworkId'
          description: The ID of a core network where you're creating a site-to-site
            VPN attachment.
        VpnConnectionArn:
          allOf:
          - $ref: '#/components/schemas/VpnConnectionArn'
          description: The ARN identifying the VPN attachment.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: The tags associated with the request.
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: The client token associated with the request.
      required:
      - CoreNetworkId
      - VpnConnectionArn
    CreateSiteToSiteVpnAttachmentResponse:
      type: object
      properties:
        SiteToSiteVpnAttachment:
          allOf:
          - $ref: '#/components/schemas/SiteToSiteVpnAttachment'
          description: Details about a site-to-site VPN attachment.
    CreateTransitGatewayPeeringRequest:
      type: object
      properties:
        CoreNetworkId:
          allOf:
          - $ref: '#/components/schemas/CoreNetworkId'
          description: The ID of a core network.
        TransitGatewayArn:
          allOf:
          - $ref: '#/components/schemas/TransitGatewayArn'
          description: The ARN of the transit gateway for the peering request.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: The list of key-value tags associated with the request.
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: The client token associated with the request.
      required:
      - CoreNetworkId
      - TransitGatewayArn
    CreateTransitGatewayPeeringResponse:
      type: object
      properties:
        TransitGatewayPeering:
          allOf:
          - $ref: '#/components/schemas/TransitGatewayPeering'
          description: Returns information about the transit gateway peering connection
            request.
    CreateTransitGatewayRouteTableAttachmentRequest:
      type: object
      properties:
        PeeringId:
          allOf:
          - $ref: '#/components/schemas/PeeringId'
          description: The ID of the peer for the
        TransitGatewayRouteTableArn:
          allOf:
          - $ref: '#/components/schemas/TransitGatewayRouteTableArn'
          description: 'The ARN of the transit gateway route table for the attachment
            request. For example, `"TransitGatewayRouteTableArn": "arn:aws:ec2:us-west-2:123456789012:transit-gateway-route-table/tgw-rtb-9876543210123456"`.'
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: The list of key-value tags associated with the request.
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: The client token associated with the request.
      required:
      - PeeringId
      - TransitGatewayRouteTableArn
    CreateTransitGatewayRouteTableAttachmentResponse:
      type: object
      properties:
        TransitGatewayRouteTableAttachment:
          allOf:
          - $ref: '#/components/schemas/TransitGatewayRouteTableAttachment'
          description: The route table associated with the create transit gateway
            route table attachment request.
    CreateVpcAttachmentRequest:
      type: object
      properties:
        CoreNetworkId:
          allOf:
          - $ref: '#/components/schemas/CoreNetworkId'
          description: The ID of a core network for the VPC attachment.
        VpcArn:
          allOf:
          - $ref: '#/components/schemas/VpcArn'
          description: The ARN of the VPC.
        SubnetArns:
          allOf:
          - $ref: '#/components/schemas/SubnetArnList'
          description: The subnet ARN of the VPC attachment.
        Options:
          allOf:
          - $ref: '#/components/schemas/VpcOptions'
          description: Options for the VPC attachment.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: The key-value tags associated with the request.
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: The client token associated with the request.
      required:
      - CoreNetworkId
      - VpcArn
      - SubnetArns
    CreateVpcAttachmentResponse:
      type: object
      properties:
        VpcAttachment:
          allOf:
          - $ref: '#/components/schemas/VpcAttachment'
          description: Provides details about the VPC attachment.
    CustomerGatewayArn:
      type: string
      pattern: ^[\s\S]*$
      minLength: 0
      maxLength: 500
    CustomerGatewayArnList:
      type: array
      items:
        $ref: '#/components/schemas/CustomerGatewayArn'
    CustomerGatewayAssociation:
      type: object
      properties:
        CustomerGatewayArn:
          allOf:
          - $ref: '#/components/schemas/CustomerGatewayArn'
          description: The Amazon Resource Name (ARN) of the customer gateway.
        GlobalNetworkId:
          allOf:
          - $ref: '#/components/schemas/GlobalNetworkId'
          description: The ID of the global network.
        DeviceId:
          allOf:
          - $ref: '#/components/schemas/DeviceId'
          description: The ID of the device.
        LinkId:
          allOf:
          - $ref: '#/components/schemas/LinkId'
          description: The ID of the link.
        State:
          allOf:
          - $ref: '#/components/schemas/CustomerGatewayAssociationState'
          description: The association state.
      description: Describes the association between a customer gateway, a device,
        and a link.
    CustomerGatewayAssociationList:
      type: array
      items:
        $ref: '#/components/schemas/CustomerGatewayAssociation'
    CustomerGatewayAssociationState:
      type: string
      enum:
      - PENDING
      - AVAILABLE
      - DELETING
      - DELETED
    DateTime:
      type: string
      format: date-time
    DeleteAttachmentRequest:
      type: object
      properties:
        AttachmentId:
          allOf:
          - $ref: '#/components/schemas/AttachmentId'
          description: The ID of the attachment to delete.
      required:
      - AttachmentId
    DeleteAttachmentResponse:
      type: object
      properties:
        Attachment:
          allOf:
          - $ref: '#/components/schemas/Attachment'
          description: Information about the deleted attachment.
    DeleteConnectPeerRequest:
      type: object
      properties:
        ConnectPeerId:
          allOf:
          - $ref: '#/components/schemas/ConnectPeerId'
          description: The ID of the deleted Connect peer.
      required:
      - ConnectPeerId
    DeleteConnectPeerResponse:
      type: object
      properties:
        ConnectPeer:
          allOf:
          - $ref: '#/components/schemas/ConnectPeer'
          description: Information about the deleted Connect peer.
    DeleteConnectionRequest:
      type: object
      properties:
        GlobalNetworkId:
          allOf:
          - $ref: '#/components/schemas/GlobalNetworkId'
          description: The ID of the global network.
        ConnectionId:
          allOf:
          - $ref: '#/components/schemas/ConnectionId'
          description: The ID of the connection.
      required:
      - GlobalNetworkId
      - ConnectionId
    DeleteConnectionResponse:
      type: object
      properties:
        Connection:
          allOf:
          - $ref: '#/components/schemas/Connection'
          description: Information about the connection.
    DeleteCoreNetworkPolicyVersionRequest:
      type: object
      properties:
        CoreNetworkId:
          allOf:
          - $ref: '#/components/schemas/CoreNetworkId'
          description: The ID of a core network for the deleted policy.
        PolicyVersionId:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The version ID of the deleted policy.
      required:
      - CoreNetworkId
      - PolicyVersionId
    DeleteCoreNetworkPolicyVersionResponse:
      type: object
      properties:
        CoreNetworkPolicy:
          allOf:
          - $ref: '#/components/schemas/CoreNetworkPolicy'
          description: Returns information about the deleted policy version.
    DeleteCoreNetworkRequest:
      type: object
      properties:
        CoreNetworkId:
          allOf:
          - $ref: '#/components/schemas/CoreNetworkId'
          description: The network ID of the deleted core network.
      required:
      - CoreNetworkId
    DeleteCoreNetworkResponse:
      type: object
      properties:
        CoreNetwork:
          allOf:
          - $ref: '#/components/schemas/CoreNetwork'
          description: Information about the deleted core network.
    DeleteDeviceRequest:
      type: object
      properties:
        GlobalNetworkId:
          allOf:
          - $ref: '#/components/schemas/GlobalNetworkId'
          description: The ID of the global network.
        DeviceId:
          allOf:
          - $ref: '#/components/schemas/DeviceId'
          description: The ID of the device.
      required:
      - GlobalNetworkId
      - DeviceId
    DeleteDeviceResponse:
      type: object
      properties:
        Device:
          allOf:
          - $ref: '#/components/schemas/Device'
          description: Information about the device.
    DeleteGlobalNetworkRequest:
      type: object
      properties:
        GlobalNetworkId:
          allOf:
          - $ref: '#/components/schemas/GlobalNetworkId'
          description: The ID of the global network.
      required:
      - GlobalNetworkId
    DeleteGlobalNetworkResponse:
      type: object
      properties:
        GlobalNetwork:
          allOf:
          - $ref: '#/components/schemas/GlobalNetwork'
          description: Information about the global network.
    DeleteLinkRequest:
      type: object
      properties:
        GlobalNetworkId:
          allOf:
          - $ref: '#/components/schemas/GlobalNetworkId'
          description: The ID of the global network.
        LinkId:
          allOf:
          - $ref: '#/components/schemas/LinkId'
          description: The ID of the link.
      required:
      - GlobalNetworkId
      - LinkId
    DeleteLinkResponse:
      type: object
      properties:
        Link:
          allOf:
          - $ref: '#/components/schemas/Link'
          description: Information about the link.
    DeletePeeringRequest:
      type: object
      properties:
        PeeringId:
          allOf:
          - $ref: '#/components/schemas/PeeringId'
          description: The ID of the peering connection to delete.
      required:
      - PeeringId
    DeletePeeringResponse:
      type: object
      properties:
        Peering:
          allOf:
          - $ref: '#/components/schemas/Peering'
          description: Information about a deleted peering connection.
    DeleteResourcePolicyRequest:
      type: object
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          description: The ARN of the policy to delete.
      required:
      - ResourceArn
    DeleteResourcePolicyResponse:
      type: object
      properties: {}
    DeleteSiteRequest:
      type: object
      properties:
        GlobalNetworkId:
          allOf:
          - $ref: '#/components/schemas/GlobalNetworkId'
          description: The ID of the global network.
        SiteId:
          allOf:
          - $ref: '#/components/schemas/SiteId'
          description: The ID of the site.
      required:
      - GlobalNetworkId
      - SiteId
    DeleteSiteResponse:
      type: object
      properties:
        Site:
          allOf:
          - $ref: '#/components/schemas/Site'
          description: Information about the site.
    DeregisterTransitGatewayRequest:
      type: object
      properties:
        GlobalNetworkId:
          allOf:
          - $ref: '#/components/schemas/GlobalNetworkId'
          description: The ID of the global network.
        TransitGatewayArn:
          allOf:
          - $ref: '#/components/schemas/TransitGatewayArn'
          description: The Amazon Resource Name (ARN) of the transit gateway.
      required:
      - GlobalNetworkId
      - TransitGatewayArn
    DeregisterTransitGatewayResponse:
      type: object
      properties:
        TransitGatewayRegistration:
          allOf:
          - $ref: '#/components/schemas/TransitGatewayRegistration'
          description: The transit gateway registration information.
    DescribeGlobalNetworksRequest:
      type: object
      properties:
        GlobalNetworkIds:
          allOf:
          - $ref: '#/components/schemas/GlobalNetworkIdList'
          description: The IDs of one or more global networks. The maximum is 10.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next page of results.
    DescribeGlobalNetworksResponse:
      type: object
      properties:
        GlobalNetworks:
          allOf:
          - $ref: '#/components/schemas/GlobalNetworkList'
          description: Information about the global networks.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next page of results.
    Device:
      type: object
      properties:
        DeviceId:
          allOf:
          - $ref: '#/components/schemas/DeviceId'
          description: The ID of the device.
        DeviceArn:
          allOf:
          - $ref: '#/components/schemas/DeviceArn'
          description: The Amazon Resource Name (ARN) of the device.
        GlobalNetworkId:
          allOf:
          - $ref: '#/components/schemas/GlobalNetworkId'
          description: The ID of the global network.
        AWSLocation:
          allOf:
          - $ref: '#/components/schemas/AWSLocation'
          description: The Amazon Web Services location of the device.
        Description:
          allOf:
          - $ref: '#/components/schemas/ConstrainedString'
          description: The description of the device.
        Type:
          allOf:
          - $ref: '#/components/schemas/ConstrainedString'
          description: The device type.
        Vendor:
          allOf:
          - $ref: '#/components/schemas/ConstrainedString'
          description: The device vendor.
        Model:
          allOf:
          - $ref: '#/components/schemas/ConstrainedString'
          description: The device model.
        SerialNumber:
          allOf:
          - $ref: '#/components/schemas/ConstrainedString'
          description: The device serial number.
        Location:
          allOf:
          - $ref: '#/components/schemas/Location'
          description: The site location.
        SiteId:
          allOf:
          - $ref: '#/components/schemas/SiteId'
          description: The site ID.
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          description: The date and time that the site was created.
        State:
          allOf:
          - $ref: '#/components/schemas/DeviceState'
          description: The device state.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: The tags for the device.
      description: Describes a device.
    DeviceArn:
      type: string
      pattern: ^[\s\S]*$
      minLength: 0
      maxLength: 500
    DeviceId:
      type: string
      pattern: ^[\s\S]*$
      minLength: 0
      maxLength: 50
    DeviceIdList:
      type: array
      items:
        $ref: '#/components/schemas/DeviceId'
    DeviceList:
      type: array
      items:
        $ref: '#/components/schemas/Device'
    DeviceState:
      type: string
      enum:
      - PENDING
      - AVAILABLE
      - DELETING
      - UPDATING
    DirectConnectGatewayArn:
      type: string
      pattern: ^arn:[^:]{1,63}:directconnect::[^:]{0,63}:dx-gateway\/[0-9a-f]{8}-([0-9a-f]{4}-){3}[0-9a-f]{12}$
      minLength: 0
      maxLength: 500
    DirectConnectGatewayAttachment:
      type: object
      properties:
        Attachment:
          $ref: '#/components/schemas/Attachment'
        DirectConnectGatewayArn:
          allOf:
          - $ref: '#/components/schemas/DirectConnectGatewayArn'
          description: The Direct Connect gateway attachment ARN.
      description: Describes a Direct Connect gateway attachment.
    DisassociateConnectPeerRequest:
      type: object
      properties:
        GlobalNetworkId:
          allOf:
          - $ref: '#/components/schemas/GlobalNetworkId'
          description: The ID of the global network.
        ConnectPeerId:
          allOf:
          - $ref: '#/components/schemas/ConnectPeerId'
          description: The ID of the Connect peer to disassociate from a device.
      required:
      - GlobalNetworkId
      - ConnectPeerId
    DisassociateConnectPeerResponse:
      type: object
      properties:
        ConnectPeerAssociation:
          allOf:
          - $ref: '#/components/schemas/ConnectPeerAssociation'
          description: Describes the Connect peer association.
    DisassociateCustomerGatewayRequest:
      type: object
      properties:
        GlobalNetworkId:
          allOf:
          - $ref: '#/components/schemas/GlobalNetworkId'
          description: The ID of the global network.
        CustomerGatewayArn:
          allOf:
          - $ref: '#/components/schemas/CustomerGatewayArn'
          description: The Amazon Resource Name (ARN) of the customer gateway.
      required:
      - GlobalNetworkId
      - CustomerGatewayArn
    DisassociateCustomerGatewayResponse:
      type: object
      properties:
        CustomerGatewayAssociation:
          allOf:
          - $ref: '#/components/schemas/CustomerGatewayAssociation'
          description: Information about the customer gateway association.
    DisassociateLinkRequest:
      type: object
      properties:
        GlobalNetworkId:
          allOf:
          - $ref: '#/components/schemas/GlobalNetworkId'
          description: The ID of the global network.
        DeviceId:
          allOf:
          - $ref: '#/components/schemas/DeviceId'
          description: The ID of the device.
        LinkId:
          allOf:
          - $ref: '#/components/schemas/LinkId'
          description: The ID of the link.
      required:
      - GlobalNetworkId
      - DeviceId
      - LinkId
    DisassociateLinkResponse:
      type: object
      properties:
        LinkAssociation:
          allOf:
          - $ref: '#/components/schemas/LinkAssociation'
          description: Information about the link association.
    DisassociateTransitGatewayConnectPeerRequest:
      type: object
      properties:
        GlobalNetworkId:
          allOf:
          - $ref: '#/components/schemas/GlobalNetworkId'
          description: The ID of the global network.
        TransitGatewayConnectPeerArn:
          allOf:
          - $ref: '#/components/schemas/TransitGatewayConnectPeerArn'
          description: The Amazon Resource Name (ARN) of the transit gateway Connect
            peer.
      required:
      - GlobalNetworkId
      - TransitGatewayConnectPeerArn
    DisassociateTransitGatewayConnectPeerResponse:
      type: object
      properties:
        TransitGatewayConnectPeerAssociation:
          allOf:
          - $ref: '#/components/schemas/TransitGatewayConnectPeerAssociation'
          description: The transit gateway Connect peer association.
    EdgeOverride:
      type: object
      properties:
        EdgeSets:
          allOf:
          - $ref: '#/components/schemas/EdgeSetList'
          description: The list of edge locations.
        UseEdge:
          allOf:
          - $ref: '#/components/schemas/ConstrainedString'
          description: The edge that should be used when overriding the current edge
            order.
      description: Describes the edge that's used for the override.
    EdgeSet:
      type: array
      items:
        $ref: '#/components/schemas/ConstrainedString'
    EdgeSetList:
      type: array
      items:
        $ref: '#/components/schemas/EdgeSet'
    ExceptionContextKey:
      type: string
    ExceptionContextMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/ExceptionContextValue'
    ExceptionContextValue:
      type: string
    ExecuteCoreNetworkChangeSetRequest:
      type: object
      properties:
        CoreNetworkId:
          allOf:
          - $ref: '#/components/schemas/CoreNetworkId'
          description: The ID of a core network.
        PolicyVersionId:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The ID of the policy version.
      required:
      - CoreNetworkId
      - PolicyVersionId
    ExecuteCoreNetworkChangeSetResponse:
      type: object
      properties: {}
    ExternalRegionCode:
      type: string
      pattern: ^[\s\S]*$
      minLength: 1
      maxLength: 63
    ExternalRegionCodeList:
      type: array
      items:
        $ref: '#/components/schemas/ExternalRegionCode'
    FilterMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/FilterValues'
    FilterName:
      type: string
      pattern: ^[0-9a-zA-Z\.-]*$
      minLength: 0
      maxLength: 128
    FilterValue:
      type: string
      pattern: ^[0-9a-zA-Z\*\.\\/\?-]*$
      minLength: 0
      maxLength: 255
    FilterValues:
      type: array
      items:
        $ref: '#/components/schemas/FilterValue'
    GetConnectAttachmentRequest:
      type: object
      properties:
        AttachmentId:
          allOf:
          - $ref: '#/components/schemas/AttachmentId'
          description: The ID of the attachment.
      required:
      - AttachmentId
    GetConnectAttachmentResponse:
      type: object
      properties:
        ConnectAttachment:
          allOf:
          - $ref: '#/components/schemas/ConnectAttachment'
          description: Details about the Connect attachment.
    GetConnectPeerAssociationsRequest:
      type: object
      properties:
        GlobalNetworkId:
          allOf:
          - $ref: '#/components/schemas/GlobalNetworkId'
          description: The ID of the global network.
        ConnectPeerIds:
          allOf:
          - $ref: '#/components/schemas/ConnectPeerIdList'
          description: The IDs of the Connect peers.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next page of results.
      required:
      - GlobalNetworkId
    GetConnectPeerAssociationsResponse:
      type: object
      properties:
        ConnectPeerAssociations:
          allOf:
          - $ref: '#/components/schemas/ConnectPeerAssociationList'
          description: Displays a list of Connect peer associations.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next page of results.
    GetConnectPeerRequest:
      type: object
      properties:
        ConnectPeerId:
          allOf:
          - $ref: '#/components/schemas/ConnectPeerId'
          description: The ID of the Connect peer.
      required:
      - ConnectPeerId
    GetConnectPeerResponse:
      type: object
      properties:
        ConnectPeer:
          allOf:
          - $ref: '#/components/schemas/ConnectPeer'
          description: Returns information about a core network Connect peer.
    GetConnectionsRequest:
      type: object
      properties:
        GlobalNetworkId:
          allOf:
          - $ref: '#/components/schemas/GlobalNetworkId'
          description: The ID of the global network.
        ConnectionIds:
          allOf:
          - $ref: '#/components/schemas/ConnectionIdList'
          description: One or more connection IDs.
        DeviceId:
          allOf:
          - $ref: '#/components/schemas/DeviceId'
          description: The ID of the device.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next page of results.
      required:
      - GlobalNetworkId
    GetConnectionsResponse:
      type: object
      properties:
        Connections:
          allOf:
          - $ref: '#/components/schemas/ConnectionList'
          description: Information about the connections.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token to use for the next page of results.
    GetCoreNetworkChangeEventsRequest:
      type: object
      properties:
        CoreNetworkId:
          allOf:
          - $ref: '#/components/schemas/CoreNetworkId'
          description: The ID of a core network.
        PolicyVersionId:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The ID of the policy version.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next page of results.
      required:
      - CoreNetworkId
      - PolicyVersionId
    GetCoreNetworkChangeEventsResponse:
      type: object
      properties:
        CoreNetworkChangeEvents:
          allOf:
          - $ref: '#/components/schemas/CoreNetworkChangeEventList'
          description: The response to `GetCoreNetworkChangeEventsRequest`.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next page of results.
    GetCoreNetworkChangeSetRequest:
      type: object
      properties:
        CoreNetworkId:
          allOf:
          - $ref: '#/components/schemas/CoreNetworkId'
          description: The ID of a core network.
        PolicyVersionId:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The ID of the policy version.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next page of results.
      required:
      - CoreNetworkId
      - PolicyVersionId
    GetCoreNetworkChangeSetResponse:
      type: object
      properties:
        CoreNetworkChanges:
          allOf:
          - $ref: '#/components/schemas/CoreNetworkChangeList'
          description: Describes a core network changes.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next page of results.
    GetCoreNetworkPolicyRequest:
      type: object
      properties:
        CoreNetworkId:
          allOf:
          - $ref: '#/components/schemas/CoreNetworkId'
          description: The ID of a core network.
        PolicyVersionId:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The ID of a core network policy version.
        Alias:
          allOf:
          - $ref: '#/components/schemas/CoreNetworkPolicyAlias'
          description: The alias of a core network policy
      required:
      - CoreNetworkId
    GetCoreNetworkPolicyResponse:
      type: object
      properties:
        CoreNetworkPolicy:
          allOf:
          - $ref: '#/components/schemas/CoreNetworkPolicy'
          description: The details about a core network policy.
    GetCoreNetworkRequest:
      type: object
      properties:
        CoreNetworkId:
          allOf:
          - $ref: '#/components/schemas/CoreNetworkId'
          description: The ID of a core network.
      required:
      - CoreNetworkId
    GetCoreNetworkResponse:
      type: object
      properties:
        CoreNetwork:
          allOf:
          - $ref: '#/components/schemas/CoreNetwork'
          description: Details about a core network.
    GetCustomerGatewayAssociationsRequest:
      type: object
      properties:
        GlobalNetworkId:
          allOf:
          - $ref: '#/components/schemas/GlobalNetworkId'
          description: The ID of the global network.
        CustomerGatewayArns:
          allOf:
          - $ref: '#/components/schemas/CustomerGatewayArnList'
          description: One or more customer gateway Amazon Resource Names (ARNs).
            The maximum is 10.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next page of results.
      required:
      - GlobalNetworkId
    GetCustomerGatewayAssociationsResponse:
      type: object
      properties:
        CustomerGatewayAssociations:
          allOf:
          - $ref: '#/components/schemas/CustomerGatewayAssociationList'
          description: The customer gateway associations.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next page of results.
    GetDevicesRequest:
      type: object
      properties:
        GlobalNetworkId:
          allOf:
          - $ref: '#/components/schemas/GlobalNetworkId'
          description: The ID of the global network.
        DeviceIds:
          allOf:
          - $ref: '#/components/schemas/DeviceIdList'
          description: One or more device IDs. The maximum is 10.
        SiteId:
          allOf:
          - $ref: '#/components/schemas/SiteId'
          description: The ID of the site.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next page of results.
      required:
      - GlobalNetworkId
    GetDevicesResponse:
      type: object
      properties:
        Devices:
          allOf:
          - $ref: '#/components/schemas/DeviceList'
          description: The devices.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next page of results.
    GetDirectConnectGatewayAttachmentRequest:
      type: object
      properties:
        AttachmentId:
          allOf:
          - $ref: '#/components/schemas/AttachmentId'
          description: The ID of the Direct Connect gateway attachment that you want
            to see details about.
      required:
      - AttachmentId
    GetDirectConnectGatewayAttachmentResponse:
      type: object
      properties:
        DirectConnectGatewayAttachment:
          allOf:
          - $ref: '#/components/schemas/DirectConnectGatewayAttachment'
          description: Shows details about the Direct Connect gateway attachment.
    GetLinkAssociationsRequest:
      type: object
      properties:
        GlobalNetworkId:
          allOf:
          - $ref: '#/components/schemas/GlobalNetworkId'
          description: The ID of the global network.
        DeviceId:
          allOf:
          - $ref: '#/components/schemas/DeviceId'
          description: The ID of the device.
        LinkId:
          allOf:
          - $ref: '#/components/schemas/LinkId'
          description: The ID of the link.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next page of results.
      required:
      - GlobalNetworkId
    GetLinkAssociationsResponse:
      type: object
      properties:
        LinkAssociations:
          allOf:
          - $ref: '#/components/schemas/LinkAssociationList'
          description: The link associations.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next page of results.
    GetLinksRequest:
      type: object
      properties:
        GlobalNetworkId:
          allOf:
          - $ref: '#/components/schemas/GlobalNetworkId'
          description: The ID of the global network.
        LinkIds:
          allOf:
          - $ref: '#/components/schemas/LinkIdList'
          description: One or more link IDs. The maximum is 10.
        SiteId:
          allOf:
          - $ref: '#/components/schemas/SiteId'
          description: The ID of the site.
        Type:
          allOf:
          - $ref: '#/components/schemas/ConstrainedString'
          description: The link type.
        Provider:
          allOf:
          - $ref: '#/components/schemas/ConstrainedString'
          description: The link provider.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next page of results.
      required:
      - GlobalNetworkId
    GetLinksResponse:
      type: object
      properties:
        Links:
          allOf:
          - $ref: '#/components/schemas/LinkList'
          description: The links.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next page of results.
    GetNetworkResourceCountsRequest:
      type: object
      properties:
        GlobalNetworkId:
          allOf:
          - $ref: '#/components/schemas/GlobalNetworkId'
          description: The ID of the global network.
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/ConstrainedString'
          description: "The resource type.\n\nThe following are the supported resource\
            \ types for Direct Connect:\n\n  * `dxcon`\n\n  * `dx-gateway`\n\n  *\
            \ `dx-vif`\n\nThe following are the supported resource types for Network\
            \ Manager:\n\n  * `attachment`\n\n  * `connect-peer`\n\n  * `connection`\n\
            \n  * `core-network`\n\n  * `device`\n\n  * `link`\n\n  * `peering`\n\n\
            \  * `site`\n\nThe following are the supported resource types for Amazon\
            \ VPC:\n\n  * `customer-gateway`\n\n  * `transit-gateway`\n\n  * `transit-gateway-attachment`\n\
            \n  * `transit-gateway-connect-peer`\n\n  * `transit-gateway-route-table`\n\
            \n  * `vpn-connection`"
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next page of results.
      required:
      - GlobalNetworkId
    GetNetworkResourceCountsResponse:
      type: object
      properties:
        NetworkResourceCounts:
          allOf:
          - $ref: '#/components/schemas/NetworkResourceCountList'
          description: The count of resources.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next page of results.
    GetNetworkResourceRelationshipsRequest:
      type: object
      properties:
        GlobalNetworkId:
          allOf:
          - $ref: '#/components/schemas/GlobalNetworkId'
          description: The ID of the global network.
        CoreNetworkId:
          allOf:
          - $ref: '#/components/schemas/CoreNetworkId'
          description: The ID of a core network.
        RegisteredGatewayArn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          description: The ARN of the registered gateway.
        AwsRegion:
          allOf:
          - $ref: '#/components/schemas/ExternalRegionCode'
          description: The Amazon Web Services Region.
        AccountId:
          allOf:
          - $ref: '#/components/schemas/AWSAccountId'
          description: The Amazon Web Services account ID.
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/ConstrainedString'
          description: "The resource type.\n\nThe following are the supported resource\
            \ types for Direct Connect:\n\n  * `dxcon`\n\n  * `dx-gateway`\n\n  *\
            \ `dx-vif`\n\nThe following are the supported resource types for Network\
            \ Manager:\n\n  * `attachment`\n\n  * `connect-peer`\n\n  * `connection`\n\
            \n  * `core-network`\n\n  * `device`\n\n  * `link`\n\n  * `peering`\n\n\
            \  * `site`\n\nThe following are the supported resource types for Amazon\
            \ VPC:\n\n  * `customer-gateway`\n\n  * `transit-gateway`\n\n  * `transit-gateway-attachment`\n\
            \n  * `transit-gateway-connect-peer`\n\n  * `transit-gateway-route-table`\n\
            \n  * `vpn-connection`"
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          description: The ARN of the gateway.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next page of results.
      required:
      - GlobalNetworkId
    GetNetworkResourceRelationshipsResponse:
      type: object
      properties:
        Relationships:
          allOf:
          - $ref: '#/components/schemas/RelationshipList'
          description: The resource relationships.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next page of results.
    GetNetworkResourcesRequest:
      type: object
      properties:
        GlobalNetworkId:
          allOf:
          - $ref: '#/components/schemas/GlobalNetworkId'
          description: The ID of the global network.
        CoreNetworkId:
          allOf:
          - $ref: '#/components/schemas/CoreNetworkId'
          description: The ID of a core network.
        RegisteredGatewayArn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          description: The ARN of the gateway.
        AwsRegion:
          allOf:
          - $ref: '#/components/schemas/ExternalRegionCode'
          description: The Amazon Web Services Region.
        AccountId:
          allOf:
          - $ref: '#/components/schemas/AWSAccountId'
          description: The Amazon Web Services account ID.
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/ConstrainedString'
          description: "The resource type.\n\nThe following are the supported resource\
            \ types for Direct Connect:\n\n  * `dxcon`\n\n  * `dx-gateway`\n\n  *\
            \ `dx-vif`\n\nThe following are the supported resource types for Network\
            \ Manager:\n\n  * `attachment`\n\n  * `connect-peer`\n\n  * `connection`\n\
            \n  * `core-network`\n\n  * `device`\n\n  * `link`\n\n  * `peering`\n\n\
            \  * `site`\n\nThe following are the supported resource types for Amazon\
            \ VPC:\n\n  * `customer-gateway`\n\n  * `transit-gateway`\n\n  * `transit-gateway-attachment`\n\
            \n  * `transit-gateway-connect-peer`\n\n  * `transit-gateway-route-table`\n\
            \n  * `vpn-connection`"
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          description: The ARN of the resource.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next page of results.
      required:
      - GlobalNetworkId
    GetNetworkResourcesResponse:
      type: object
      properties:
        NetworkResources:
          allOf:
          - $ref: '#/components/schemas/NetworkResourceList'
          description: The network resources.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next page of results.
    GetNetworkRoutesRequest:
      type: object
      properties:
        GlobalNetworkId:
          allOf:
          - $ref: '#/components/schemas/GlobalNetworkId'
          description: The ID of the global network.
        RouteTableIdentifier:
          allOf:
          - $ref: '#/components/schemas/RouteTableIdentifier'
          description: The ID of the route table.
        ExactCidrMatches:
          allOf:
          - $ref: '#/components/schemas/ConstrainedStringList'
          description: An exact CIDR block.
        LongestPrefixMatches:
          allOf:
          - $ref: '#/components/schemas/ConstrainedStringList'
          description: The most specific route that matches the traffic (longest prefix
            match).
        SubnetOfMatches:
          allOf:
          - $ref: '#/components/schemas/ConstrainedStringList'
          description: The routes with a subnet that match the specified CIDR filter.
        SupernetOfMatches:
          allOf:
          - $ref: '#/components/schemas/ConstrainedStringList'
          description: 'The routes with a CIDR that encompasses the CIDR filter. Example:
            If you specify 10.0.1.0/30, then the result returns 10.0.1.0/29.'
        PrefixListIds:
          allOf:
          - $ref: '#/components/schemas/ConstrainedStringList'
          description: The IDs of the prefix lists.
        States:
          allOf:
          - $ref: '#/components/schemas/RouteStateList'
          description: The route states.
        Types:
          allOf:
          - $ref: '#/components/schemas/RouteTypeList'
          description: The route types.
        DestinationFilters:
          allOf:
          - $ref: '#/components/schemas/FilterMap'
          description: 'Filter by route table destination. Possible Values: TRANSIT_GATEWAY_ATTACHMENT_ID,
            RESOURCE_ID, or RESOURCE_TYPE.'
      required:
      - GlobalNetworkId
      - RouteTableIdentifier
    GetNetworkRoutesResponse:
      type: object
      properties:
        RouteTableArn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          description: The ARN of the route table.
        CoreNetworkSegmentEdge:
          allOf:
          - $ref: '#/components/schemas/CoreNetworkSegmentEdgeIdentifier'
          description: Describes a core network segment edge.
        RouteTableType:
          allOf:
          - $ref: '#/components/schemas/RouteTableType'
          description: The route table type.
        RouteTableTimestamp:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          description: The route table creation time.
        NetworkRoutes:
          allOf:
          - $ref: '#/components/schemas/NetworkRouteList'
          description: The network routes.
    GetNetworkTelemetryRequest:
      type: object
      properties:
        GlobalNetworkId:
          allOf:
          - $ref: '#/components/schemas/GlobalNetworkId'
          description: The ID of the global network.
        CoreNetworkId:
          allOf:
          - $ref: '#/components/schemas/CoreNetworkId'
          description: The ID of a core network.
        RegisteredGatewayArn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          description: The ARN of the gateway.
        AwsRegion:
          allOf:
          - $ref: '#/components/schemas/ExternalRegionCode'
          description: The Amazon Web Services Region.
        AccountId:
          allOf:
          - $ref: '#/components/schemas/AWSAccountId'
          description: The Amazon Web Services account ID.
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/ConstrainedString'
          description: "The resource type. The following are the supported resource\
            \ types:\n\n  * `connect-peer`\n\n  * `transit-gateway-connect-peer`\n\
            \n  * `vpn-connection`"
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          description: The ARN of the resource.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next page of results.
      required:
      - GlobalNetworkId
    GetNetworkTelemetryResponse:
      type: object
      properties:
        NetworkTelemetry:
          allOf:
          - $ref: '#/components/schemas/NetworkTelemetryList'
          description: The network telemetry.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next page of results.
    GetResourcePolicyRequest:
      type: object
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          description: The ARN of the resource.
      required:
      - ResourceArn
    GetResourcePolicyResponse:
      type: object
      properties:
        PolicyDocument:
          allOf:
          - $ref: '#/components/schemas/SynthesizedJsonResourcePolicyDocument'
          description: The resource policy document.
    GetRouteAnalysisRequest:
      type: object
      properties:
        GlobalNetworkId:
          allOf:
          - $ref: '#/components/schemas/GlobalNetworkId'
          description: The ID of the global network.
        RouteAnalysisId:
          allOf:
          - $ref: '#/components/schemas/ConstrainedString'
          description: The ID of the route analysis.
      required:
      - GlobalNetworkId
      - RouteAnalysisId
    GetRouteAnalysisResponse:
      type: object
      properties:
        RouteAnalysis:
          allOf:
          - $ref: '#/components/schemas/RouteAnalysis'
          description: The route analysis.
    GetSiteToSiteVpnAttachmentRequest:
      type: object
      properties:
        AttachmentId:
          allOf:
          - $ref: '#/components/schemas/AttachmentId'
          description: The ID of the attachment.
      required:
      - AttachmentId
    GetSiteToSiteVpnAttachmentResponse:
      type: object
      properties:
        SiteToSiteVpnAttachment:
          allOf:
          - $ref: '#/components/schemas/SiteToSiteVpnAttachment'
          description: Describes the site-to-site attachment.
    GetSitesRequest:
      type: object
      properties:
        GlobalNetworkId:
          allOf:
          - $ref: '#/components/schemas/GlobalNetworkId'
          description: The ID of the global network.
        SiteIds:
          allOf:
          - $ref: '#/components/schemas/SiteIdList'
          description: One or more site IDs. The maximum is 10.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next page of results.
      required:
      - GlobalNetworkId
    GetSitesResponse:
      type: object
      properties:
        Sites:
          allOf:
          - $ref: '#/components/schemas/SiteList'
          description: The sites.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next page of results.
    GetTransitGatewayConnectPeerAssociationsRequest:
      type: object
      properties:
        GlobalNetworkId:
          allOf:
          - $ref: '#/components/schemas/GlobalNetworkId'
          description: The ID of the global network.
        TransitGatewayConnectPeerArns:
          allOf:
          - $ref: '#/components/schemas/TransitGatewayConnectPeerArnList'
          description: One or more transit gateway Connect peer Amazon Resource Names
            (ARNs).
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next page of results.
      required:
      - GlobalNetworkId
    GetTransitGatewayConnectPeerAssociationsResponse:
      type: object
      properties:
        TransitGatewayConnectPeerAssociations:
          allOf:
          - $ref: '#/components/schemas/TransitGatewayConnectPeerAssociationList'
          description: Information about the transit gateway Connect peer associations.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token to use for the next page of results.
    GetTransitGatewayPeeringRequest:
      type: object
      properties:
        PeeringId:
          allOf:
          - $ref: '#/components/schemas/PeeringId'
          description: The ID of the peering request.
      required:
      - PeeringId
    GetTransitGatewayPeeringResponse:
      type: object
      properties:
        TransitGatewayPeering:
          allOf:
          - $ref: '#/components/schemas/TransitGatewayPeering'
          description: Returns information about a transit gateway peering.
    GetTransitGatewayRegistrationsRequest:
      type: object
      properties:
        GlobalNetworkId:
          allOf:
          - $ref: '#/components/schemas/GlobalNetworkId'
          description: The ID of the global network.
        TransitGatewayArns:
          allOf:
          - $ref: '#/components/schemas/TransitGatewayArnList'
          description: The Amazon Resource Names (ARNs) of one or more transit gateways.
            The maximum is 10.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next page of results.
      required:
      - GlobalNetworkId
    GetTransitGatewayRegistrationsResponse:
      type: object
      properties:
        TransitGatewayRegistrations:
          allOf:
          - $ref: '#/components/schemas/TransitGatewayRegistrationList'
          description: The transit gateway registrations.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next page of results.
    GetTransitGatewayRouteTableAttachmentRequest:
      type: object
      properties:
        AttachmentId:
          allOf:
          - $ref: '#/components/schemas/AttachmentId'
          description: The ID of the transit gateway route table attachment.
      required:
      - AttachmentId
    GetTransitGatewayRouteTableAttachmentResponse:
      type: object
      properties:
        TransitGatewayRouteTableAttachment:
          allOf:
          - $ref: '#/components/schemas/TransitGatewayRouteTableAttachment'
          description: Returns information about the transit gateway route table attachment.
    GetVpcAttachmentRequest:
      type: object
      properties:
        AttachmentId:
          allOf:
          - $ref: '#/components/schemas/AttachmentId'
          description: The ID of the attachment.
      required:
      - AttachmentId
    GetVpcAttachmentResponse:
      type: object
      properties:
        VpcAttachment:
          allOf:
          - $ref: '#/components/schemas/VpcAttachment'
          description: Returns details about a VPC attachment.
    GlobalNetwork:
      type: object
      properties:
        GlobalNetworkId:
          allOf:
          - $ref: '#/components/schemas/GlobalNetworkId'
          description: The ID of the global network.
        GlobalNetworkArn:
          allOf:
          - $ref: '#/components/schemas/GlobalNetworkArn'
          description: The Amazon Resource Name (ARN) of the global network.
        Description:
          allOf:
          - $ref: '#/components/schemas/ConstrainedString'
          description: The description of the global network.
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          description: The date and time that the global network was created.
        State:
          allOf:
          - $ref: '#/components/schemas/GlobalNetworkState'
          description: The state of the global network.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: The tags for the global network.
      description: Describes a global network. This is a single private network acting
        as a high-level container for your network objects, including an Amazon Web
        Services-managed Core Network.
    GlobalNetworkArn:
      type: string
      pattern: ^[\s\S]*$
      minLength: 0
      maxLength: 500
    GlobalNetworkId:
      type: string
      pattern: ^[\s\S]*$
      minLength: 0
      maxLength: 50
    GlobalNetworkIdList:
      type: array
      items:
        $ref: '#/components/schemas/GlobalNetworkId'
    GlobalNetworkList:
      type: array
      items:
        $ref: '#/components/schemas/GlobalNetwork'
    GlobalNetworkState:
      type: string
      enum:
      - PENDING
      - AVAILABLE
      - DELETING
      - UPDATING
    IPAddress:
      type: string
      pattern: ^[\s\S]*$
      minLength: 1
      maxLength: 50
    Integer:
      type: integer
    InternalServerException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ServerSideString'
        RetryAfterSeconds:
          allOf:
          - $ref: '#/components/schemas/RetryAfterSeconds'
          description: Indicates when to retry the request.
      required:
      - Message
      description: The request has failed due to an internal error.
    Link:
      type: object
      properties:
        LinkId:
          allOf:
          - $ref: '#/components/schemas/LinkId'
          description: The ID of the link.
        LinkArn:
          allOf:
          - $ref: '#/components/schemas/LinkArn'
          description: The Amazon Resource Name (ARN) of the link.
        GlobalNetworkId:
          allOf:
          - $ref: '#/components/schemas/GlobalNetworkId'
          description: The ID of the global network.
        SiteId:
          allOf:
          - $ref: '#/components/schemas/SiteId'
          description: The ID of the site.
        Description:
          allOf:
          - $ref: '#/components/schemas/ConstrainedString'
          description: The description of the link.
        Type:
          allOf:
          - $ref: '#/components/schemas/ConstrainedString'
          description: The type of the link.
        Bandwidth:
          allOf:
          - $ref: '#/components/schemas/Bandwidth'
          description: The bandwidth for the link.
        Provider:
          allOf:
          - $ref: '#/components/schemas/ConstrainedString'
          description: The provider of the link.
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          description: The date and time that the link was created.
        State:
          allOf:
          - $ref: '#/components/schemas/LinkState'
          description: The state of the link.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: The tags for the link.
      description: Describes a link.
    LinkArn:
      type: string
      pattern: ^[\s\S]*$
      minLength: 0
      maxLength: 500
    LinkAssociation:
      type: object
      properties:
        GlobalNetworkId:
          allOf:
          - $ref: '#/components/schemas/GlobalNetworkId'
          description: The ID of the global network.
        DeviceId:
          allOf:
          - $ref: '#/components/schemas/DeviceId'
          description: The device ID for the link association.
        LinkId:
          allOf:
          - $ref: '#/components/schemas/LinkId'
          description: The ID of the link.
        LinkAssociationState:
          allOf:
          - $ref: '#/components/schemas/LinkAssociationState'
          description: The state of the association.
      description: Describes the association between a device and a link.
    LinkAssociationList:
      type: array
      items:
        $ref: '#/components/schemas/LinkAssociation'
    LinkAssociationState:
      type: string
      enum:
      - PENDING
      - AVAILABLE
      - DELETING
      - DELETED
    LinkId:
      type: string
      pattern: ^[\s\S]*$
      minLength: 0
      maxLength: 50
    LinkIdList:
      type: array
      items:
        $ref: '#/components/schemas/LinkId'
    LinkList:
      type: array
      items:
        $ref: '#/components/schemas/Link'
    LinkState:
      type: string
      enum:
      - PENDING
      - AVAILABLE
      - DELETING
      - UPDATING
    ListAttachmentsRequest:
      type: object
      properties:
        CoreNetworkId:
          allOf:
          - $ref: '#/components/schemas/CoreNetworkId'
          description: The ID of a core network.
        AttachmentType:
          allOf:
          - $ref: '#/components/schemas/AttachmentType'
          description: The type of attachment.
        EdgeLocation:
          allOf:
          - $ref: '#/components/schemas/ExternalRegionCode'
          description: The Region where the edge is located.
        State:
          allOf:
          - $ref: '#/components/schemas/AttachmentState'
          description: The state of the attachment.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next page of results.
    ListAttachmentsResponse:
      type: object
      properties:
        Attachments:
          allOf:
          - $ref: '#/components/schemas/AttachmentList'
          description: Describes the list of attachments.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next page of results.
    ListConnectPeersRequest:
      type: object
      properties:
        CoreNetworkId:
          allOf:
          - $ref: '#/components/schemas/CoreNetworkId'
          description: The ID of a core network.
        ConnectAttachmentId:
          allOf:
          - $ref: '#/components/schemas/AttachmentId'
          description: The ID of the attachment.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next page of results.
    ListConnectPeersResponse:
      type: object
      properties:
        ConnectPeers:
          allOf:
          - $ref: '#/components/schemas/ConnectPeerSummaryList'
          description: Describes the Connect peers.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next page of results.
    ListCoreNetworkPolicyVersionsRequest:
      type: object
      properties:
        CoreNetworkId:
          allOf:
          - $ref: '#/components/schemas/CoreNetworkId'
          description: The ID of a core network.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next page of results.
      required:
      - CoreNetworkId
    ListCoreNetworkPolicyVersionsResponse:
      type: object
      properties:
        CoreNetworkPolicyVersions:
          allOf:
          - $ref: '#/components/schemas/CoreNetworkPolicyVersionList'
          description: Describes core network policy versions.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next page of results.
    ListCoreNetworksRequest:
      type: object
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next page of results.
    ListCoreNetworksResponse:
      type: object
      properties:
        CoreNetworks:
          allOf:
          - $ref: '#/components/schemas/CoreNetworkSummaryList'
          description: Describes the list of core networks.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next page of results.
    ListOrganizationServiceAccessStatusRequest:
      type: object
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next page of results.
    ListOrganizationServiceAccessStatusResponse:
      type: object
      properties:
        OrganizationStatus:
          allOf:
          - $ref: '#/components/schemas/OrganizationStatus'
          description: Displays the status of an Amazon Web Services Organization.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next page of results.
    ListPeeringsRequest:
      type: object
      properties:
        CoreNetworkId:
          allOf:
          - $ref: '#/components/schemas/CoreNetworkId'
          description: The ID of a core network.
        PeeringType:
          allOf:
          - $ref: '#/components/schemas/PeeringType'
          description: Returns a list of a peering requests.
        EdgeLocation:
          allOf:
          - $ref: '#/components/schemas/ExternalRegionCode'
          description: Returns a list edge locations for the
        State:
          allOf:
          - $ref: '#/components/schemas/PeeringState'
          description: Returns a list of the peering request states.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next page of results.
    ListPeeringsResponse:
      type: object
      properties:
        Peerings:
          allOf:
          - $ref: '#/components/schemas/PeeringList'
          description: Lists the transit gateway peerings for the `ListPeerings` request.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next page of results.
    ListTagsForResourceRequest:
      type: object
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          description: The Amazon Resource Name (ARN) of the resource.
      required:
      - ResourceArn
    ListTagsForResourceResponse:
      type: object
      properties:
        TagList:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: The list of tags.
    Location:
      type: object
      properties:
        Address:
          allOf:
          - $ref: '#/components/schemas/ConstrainedString'
          description: The physical address.
        Latitude:
          allOf:
          - $ref: '#/components/schemas/ConstrainedString'
          description: The latitude.
        Longitude:
          allOf:
          - $ref: '#/components/schemas/ConstrainedString'
          description: The longitude.
      description: Describes a location.
    Long:
      type: integer
      format: int64
    MaxResults:
      type: integer
      minimum: 1
      maximum: 500
    NetworkFunctionGroup:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/ConstrainedString'
          description: The name of the network function group.
      description: Describes a network function group for service insertion.
    NetworkFunctionGroupList:
      type: array
      items:
        $ref: '#/components/schemas/NetworkFunctionGroup'
    NetworkFunctionGroupName:
      type: string
      pattern: ^[\s\S]*$
    NetworkResource:
      type: object
      properties:
        RegisteredGatewayArn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          description: The ARN of the gateway.
        CoreNetworkId:
          allOf:
          - $ref: '#/components/schemas/CoreNetworkId'
          description: The ID of a core network.
        AwsRegion:
          allOf:
          - $ref: '#/components/schemas/ExternalRegionCode'
          description: The Amazon Web Services Region.
        AccountId:
          allOf:
          - $ref: '#/components/schemas/AWSAccountId'
          description: The Amazon Web Services account ID.
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/ConstrainedString'
          description: "The resource type.\n\nThe following are the supported resource\
            \ types for Direct Connect:\n\n  * `dxcon`\n\n  * `dx-gateway`\n\n  *\
            \ `dx-vif`\n\nThe following are the supported resource types for Network\
            \ Manager:\n\n  * `attachment`\n\n  * `connect-peer`\n\n  * `connection`\n\
            \n  * `core-network`\n\n  * `device`\n\n  * `link`\n\n  * `peering`\n\n\
            \  * `site`\n\nThe following are the supported resource types for Amazon\
            \ VPC:\n\n  * `customer-gateway`\n\n  * `transit-gateway`\n\n  * `transit-gateway-attachment`\n\
            \n  * `transit-gateway-connect-peer`\n\n  * `transit-gateway-route-table`\n\
            \n  * `vpn-connection`"
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/ConstrainedString'
          description: The ID of the resource.
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          description: The ARN of the resource.
        Definition:
          allOf:
          - $ref: '#/components/schemas/ConstrainedString'
          description: Information about the resource, in JSON format. Network Manager
            gets this information by describing the resource using its Describe API
            call.
        DefinitionTimestamp:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          description: The time that the resource definition was retrieved.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: The tags.
        Metadata:
          allOf:
          - $ref: '#/components/schemas/NetworkResourceMetadataMap'
          description: The resource metadata.
      description: Describes a network resource.
    NetworkResourceCount:
      type: object
      properties:
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/ConstrainedString'
          description: The resource type.
        Count:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The resource count.
      description: Describes a resource count.
    NetworkResourceCountList:
      type: array
      items:
        $ref: '#/components/schemas/NetworkResourceCount'
    NetworkResourceList:
      type: array
      items:
        $ref: '#/components/schemas/NetworkResource'
    NetworkResourceMetadataMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/ConstrainedString'
    NetworkResourceSummary:
      type: object
      properties:
        RegisteredGatewayArn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          description: The ARN of the gateway.
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          description: The ARN of the resource.
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/ConstrainedString'
          description: The resource type.
        Definition:
          allOf:
          - $ref: '#/components/schemas/ConstrainedString'
          description: Information about the resource, in JSON format. Network Manager
            gets this information by describing the resource using its Describe API
            call.
        NameTag:
          allOf:
          - $ref: '#/components/schemas/ConstrainedString'
          description: The value for the Name tag.
        IsMiddlebox:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether this is a middlebox appliance.
      description: Describes a network resource.
    NetworkRoute:
      type: object
      properties:
        DestinationCidrBlock:
          allOf:
          - $ref: '#/components/schemas/ConstrainedString'
          description: A unique identifier for the route, such as a CIDR block.
        Destinations:
          allOf:
          - $ref: '#/components/schemas/NetworkRouteDestinationList'
          description: The destinations.
        PrefixListId:
          allOf:
          - $ref: '#/components/schemas/ConstrainedString'
          description: The ID of the prefix list.
        State:
          allOf:
          - $ref: '#/components/schemas/RouteState'
          description: The route state. The possible values are `active` and `blackhole`.
        Type:
          allOf:
          - $ref: '#/components/schemas/RouteType'
          description: The route type. The possible values are `propagated` and `static`.
      description: Describes a network route.
    NetworkRouteDestination:
      type: object
      properties:
        CoreNetworkAttachmentId:
          allOf:
          - $ref: '#/components/schemas/AttachmentId'
          description: The ID of a core network attachment.
        TransitGatewayAttachmentId:
          allOf:
          - $ref: '#/components/schemas/TransitGatewayAttachmentId'
          description: The ID of the transit gateway attachment.
        SegmentName:
          allOf:
          - $ref: '#/components/schemas/ConstrainedString'
          description: The name of the segment.
        NetworkFunctionGroupName:
          allOf:
          - $ref: '#/components/schemas/ConstrainedString'
          description: The network function group name associated with the destination.
        EdgeLocation:
          allOf:
          - $ref: '#/components/schemas/ExternalRegionCode'
          description: The edge location for the network destination.
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/ConstrainedString'
          description: The resource type.
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/ConstrainedString'
          description: The ID of the resource.
      description: Describes the destination of a network route.
    NetworkRouteDestinationList:
      type: array
      items:
        $ref: '#/components/schemas/NetworkRouteDestination'
    NetworkRouteList:
      type: array
      items:
        $ref: '#/components/schemas/NetworkRoute'
    NetworkTelemetry:
      type: object
      properties:
        RegisteredGatewayArn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          description: The ARN of the gateway.
        CoreNetworkId:
          allOf:
          - $ref: '#/components/schemas/CoreNetworkId'
          description: The ID of a core network.
        AwsRegion:
          allOf:
          - $ref: '#/components/schemas/ExternalRegionCode'
          description: The Amazon Web Services Region.
        AccountId:
          allOf:
          - $ref: '#/components/schemas/AWSAccountId'
          description: The Amazon Web Services account ID.
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/ConstrainedString'
          description: The resource type.
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/ConstrainedString'
          description: The ID of the resource.
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          description: The ARN of the resource.
        Address:
          allOf:
          - $ref: '#/components/schemas/ConstrainedString'
          description: The address.
        Health:
          allOf:
          - $ref: '#/components/schemas/ConnectionHealth'
          description: The connection health.
      description: Describes the telemetry information for a resource.
    NetworkTelemetryList:
      type: array
      items:
        $ref: '#/components/schemas/NetworkTelemetry'
    NextToken:
      type: string
      pattern: ^[\s\S]*$
      minLength: 0
      maxLength: 2048
    OrganizationAwsServiceAccessStatus:
      type: string
      minLength: 0
      maxLength: 50
    OrganizationId:
      type: string
      pattern: ^o-([0-9a-f]{8,17})$
      minLength: 0
      maxLength: 50
    OrganizationStatus:
      type: object
      properties:
        OrganizationId:
          allOf:
          - $ref: '#/components/schemas/OrganizationId'
          description: The ID of an Amazon Web Services Organization.
        OrganizationAwsServiceAccessStatus:
          allOf:
          - $ref: '#/components/schemas/OrganizationAwsServiceAccessStatus'
          description: The status of the organization's AWS service access. This will
            be `ENABLED` or `DISABLED`.
        SLRDeploymentStatus:
          allOf:
          - $ref: '#/components/schemas/SLRDeploymentStatus'
          description: The status of the SLR deployment for the account. This will
            be either `SUCCEEDED` or `IN_PROGRESS`.
        AccountStatusList:
          allOf:
          - $ref: '#/components/schemas/AccountStatusList'
          description: The current service-linked role (SLR) deployment status for
            an Amazon Web Services Organization's accounts. This will be either `SUCCEEDED`
            or `IN_PROGRESS`.
      description: The status of an Amazon Web Services Organization and the accounts
        within that organization.
    PathComponent:
      type: object
      properties:
        Sequence:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The sequence number in the path. The destination is 0.
        Resource:
          allOf:
          - $ref: '#/components/schemas/NetworkResourceSummary'
          description: The resource.
        DestinationCidrBlock:
          allOf:
          - $ref: '#/components/schemas/ConstrainedString'
          description: The destination CIDR block in the route table.
      description: Describes a path component.
    PathComponentList:
      type: array
      items:
        $ref: '#/components/schemas/PathComponent'
    Peering:
      type: object
      properties:
        CoreNetworkId:
          allOf:
          - $ref: '#/components/schemas/CoreNetworkId'
          description: The ID of the core network for the peering request.
        CoreNetworkArn:
          allOf:
          - $ref: '#/components/schemas/CoreNetworkArn'
          description: The ARN of a core network.
        PeeringId:
          allOf:
          - $ref: '#/components/schemas/PeeringId'
          description: The ID of the peering attachment.
        OwnerAccountId:
          allOf:
          - $ref: '#/components/schemas/AWSAccountId'
          description: The ID of the account owner.
        PeeringType:
          allOf:
          - $ref: '#/components/schemas/PeeringType'
          description: The type of peering. This will be `TRANSIT_GATEWAY`.
        State:
          allOf:
          - $ref: '#/components/schemas/PeeringState'
          description: The current state of the peering connection.
        EdgeLocation:
          allOf:
          - $ref: '#/components/schemas/ExternalRegionCode'
          description: The edge location for the peer.
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          description: The resource ARN of the peer.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: The list of key-value tags associated with the peering.
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          description: The timestamp when the attachment peer was created.
        LastModificationErrors:
          allOf:
          - $ref: '#/components/schemas/PeeringErrorList'
          description: Describes the error associated with the Connect peer request.
      description: Describes a peering connection.
    PeeringError:
      type: object
      properties:
        Code:
          allOf:
          - $ref: '#/components/schemas/PeeringErrorCode'
          description: The error code for the peering request.
        Message:
          allOf:
          - $ref: '#/components/schemas/ServerSideString'
          description: The message associated with the error `code`.
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          description: The ARN of the requested peering resource.
        RequestId:
          allOf:
          - $ref: '#/components/schemas/ServerSideString'
          description: The ID of the Peering request.
        MissingPermissionsContext:
          allOf:
          - $ref: '#/components/schemas/PermissionsErrorContext'
          description: Provides additional information about missing permissions for
            the peering error.
      description: Describes an error associated with a peering request.
    PeeringErrorCode:
      type: string
      enum:
      - TRANSIT_GATEWAY_NOT_FOUND
      - TRANSIT_GATEWAY_PEERS_LIMIT_EXCEEDED
      - MISSING_PERMISSIONS
      - INTERNAL_ERROR
      - EDGE_LOCATION_PEER_DUPLICATE
      - INVALID_TRANSIT_GATEWAY_STATE
    PeeringErrorList:
      type: array
      items:
        $ref: '#/components/schemas/PeeringError'
    PeeringId:
      type: string
      pattern: ^peering-([0-9a-f]{8,17})$
      minLength: 0
      maxLength: 50
    PeeringList:
      type: array
      items:
        $ref: '#/components/schemas/Peering'
    PeeringState:
      type: string
      enum:
      - CREATING
      - FAILED
      - AVAILABLE
      - DELETING
    PeeringType:
      type: string
      enum:
      - TRANSIT_GATEWAY
    PermissionsErrorContext:
      type: object
      properties:
        MissingPermission:
          allOf:
          - $ref: '#/components/schemas/ServerSideString'
          description: The missing permissions.
      description: Describes additional information about missing permissions.
    ProposedNetworkFunctionGroupChange:
      type: object
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: The list of proposed changes to the key-value tags associated
            with the network function group.
        AttachmentPolicyRuleNumber:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The proposed new attachment policy rule number for the network
            function group.
        NetworkFunctionGroupName:
          allOf:
          - $ref: '#/components/schemas/ConstrainedString'
          description: The proposed name change for the network function group name.
      description: Describes proposed changes to a network function group.
    ProposedSegmentChange:
      type: object
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: The list of key-value tags that changed for the segment.
        AttachmentPolicyRuleNumber:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The rule number in the policy document that applies to this
            change.
        SegmentName:
          allOf:
          - $ref: '#/components/schemas/ConstrainedString'
          description: The name of the segment to change.
      description: Describes a proposed segment change. In some cases, the segment
        change must first be evaluated and accepted.
    PutCoreNetworkPolicyRequest:
      type: object
      properties:
        CoreNetworkId:
          allOf:
          - $ref: '#/components/schemas/CoreNetworkId'
          description: The ID of a core network.
        PolicyDocument:
          allOf:
          - $ref: '#/components/schemas/SynthesizedJsonCoreNetworkPolicyDocument'
          description: The policy document.
        Description:
          allOf:
          - $ref: '#/components/schemas/ConstrainedString'
          description: a core network policy description.
        LatestVersionId:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The ID of a core network policy.
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: The client token associated with the request.
      required:
      - CoreNetworkId
      - PolicyDocument
    PutCoreNetworkPolicyResponse:
      type: object
      properties:
        CoreNetworkPolicy:
          allOf:
          - $ref: '#/components/schemas/CoreNetworkPolicy'
          description: Describes the changed core network policy.
    PutResourcePolicyRequest:
      type: object
      properties:
        PolicyDocument:
          allOf:
          - $ref: '#/components/schemas/SynthesizedJsonResourcePolicyDocument'
          description: The JSON resource policy document.
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          description: The ARN of the resource policy.
      required:
      - PolicyDocument
      - ResourceArn
    PutResourcePolicyResponse:
      type: object
      properties: {}
    ReasonContextKey:
      type: string
      pattern: ^[\s\S]*$
      minLength: 0
      maxLength: 10000000
    ReasonContextMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/ReasonContextValue'
    ReasonContextValue:
      type: string
      pattern: ^[\s\S]*$
      minLength: 0
      maxLength: 10000000
    RegisterTransitGatewayRequest:
      type: object
      properties:
        GlobalNetworkId:
          allOf:
          - $ref: '#/components/schemas/GlobalNetworkId'
          description: The ID of the global network.
        TransitGatewayArn:
          allOf:
          - $ref: '#/components/schemas/TransitGatewayArn'
          description: The Amazon Resource Name (ARN) of the transit gateway.
      required:
      - GlobalNetworkId
      - TransitGatewayArn
    RegisterTransitGatewayResponse:
      type: object
      properties:
        TransitGatewayRegistration:
          allOf:
          - $ref: '#/components/schemas/TransitGatewayRegistration'
          description: Information about the transit gateway registration.
    RejectAttachmentRequest:
      type: object
      properties:
        AttachmentId:
          allOf:
          - $ref: '#/components/schemas/AttachmentId'
          description: The ID of the attachment.
      required:
      - AttachmentId
    RejectAttachmentResponse:
      type: object
      properties:
        Attachment:
          allOf:
          - $ref: '#/components/schemas/Attachment'
          description: Describes the rejected attachment request.
    Relationship:
      type: object
      properties:
        From:
          allOf:
          - $ref: '#/components/schemas/ConstrainedString'
          description: The ARN of the resource.
        To:
          allOf:
          - $ref: '#/components/schemas/ConstrainedString'
          description: The ARN of the resource.
      description: Describes a resource relationship.
    RelationshipList:
      type: array
      items:
        $ref: '#/components/schemas/Relationship'
    ResourceArn:
      type: string
      pattern: ^[\s\S]*$
      minLength: 0
      maxLength: 1500
    ResourceNotFoundException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ServerSideString'
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/ServerSideString'
          description: The ID of the resource.
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/ServerSideString'
          description: The resource type.
        Context:
          allOf:
          - $ref: '#/components/schemas/ExceptionContextMap'
          description: The specified resource could not be found.
      required:
      - Message
      - ResourceId
      - ResourceType
      description: The specified resource could not be found.
    RestoreCoreNetworkPolicyVersionRequest:
      type: object
      properties:
        CoreNetworkId:
          allOf:
          - $ref: '#/components/schemas/CoreNetworkId'
          description: The ID of a core network.
        PolicyVersionId:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The ID of the policy version to restore.
      required:
      - CoreNetworkId
      - PolicyVersionId
    RestoreCoreNetworkPolicyVersionResponse:
      type: object
      properties:
        CoreNetworkPolicy:
          allOf:
          - $ref: '#/components/schemas/CoreNetworkPolicy'
          description: Describes the restored core network policy.
    RetryAfterSeconds:
      type: integer
    RouteAnalysis:
      type: object
      properties:
        GlobalNetworkId:
          allOf:
          - $ref: '#/components/schemas/GlobalNetworkId'
          description: The ID of the global network.
        OwnerAccountId:
          allOf:
          - $ref: '#/components/schemas/AWSAccountId'
          description: The ID of the AWS account that created the route analysis.
        RouteAnalysisId:
          allOf:
          - $ref: '#/components/schemas/ConstrainedString'
          description: The ID of the route analysis.
        StartTimestamp:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          description: The time that the analysis started.
        Status:
          allOf:
          - $ref: '#/components/schemas/RouteAnalysisStatus'
          description: The status of the route analysis.
        Source:
          allOf:
          - $ref: '#/components/schemas/RouteAnalysisEndpointOptions'
          description: The source.
        Destination:
          allOf:
          - $ref: '#/components/schemas/RouteAnalysisEndpointOptions'
          description: The destination.
        IncludeReturnPath:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether to analyze the return path. The return path
            is not analyzed if the forward path analysis does not succeed.
        UseMiddleboxes:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether to include the location of middlebox appliances
            in the route analysis.
        ForwardPath:
          allOf:
          - $ref: '#/components/schemas/RouteAnalysisPath'
          description: The forward path.
        ReturnPath:
          allOf:
          - $ref: '#/components/schemas/RouteAnalysisPath'
          description: The return path.
      description: Describes a route analysis.
    RouteAnalysisCompletion:
      type: object
      properties:
        ResultCode:
          allOf:
          - $ref: '#/components/schemas/RouteAnalysisCompletionResultCode'
          description: The result of the analysis. If the status is `NOT_CONNECTED`,
            check the reason code.
        ReasonCode:
          allOf:
          - $ref: '#/components/schemas/RouteAnalysisCompletionReasonCode'
          description: "The reason code. Available only if a connection is not found.\n\
            \n  * `BLACKHOLE_ROUTE_FOR_DESTINATION_FOUND` \\- Found a black hole route\
            \ with the destination CIDR block.\n\n  * `CYCLIC_PATH_DETECTED` \\- Found\
            \ the same resource multiple times while traversing the path.\n\n  * `INACTIVE_ROUTE_FOR_DESTINATION_FOUND`\
            \ \\- Found an inactive route with the destination CIDR block.\n\n  *\
            \ `MAX_HOPS_EXCEEDED` \\- Analysis exceeded 64 hops without finding the\
            \ destination.\n\n  * `ROUTE_NOT_FOUND` \\- Cannot find a route table\
            \ with the destination CIDR block.\n\n  * `TGW_ATTACH_ARN_NO_MATCH` \\\
            - Found an attachment, but not with the correct destination ARN.\n\n \
            \ * `TGW_ATTACH_NOT_FOUND` \\- Cannot find an attachment.\n\n  * `TGW_ATTACH_NOT_IN_TGW`\
            \ \\- Found an attachment, but not to the correct transit gateway.\n\n\
            \  * `TGW_ATTACH_STABLE_ROUTE_TABLE_NOT_FOUND` \\- The state of the route\
            \ table association is not associated."
        ReasonContext:
          allOf:
          - $ref: '#/components/schemas/ReasonContextMap'
          description: Additional information about the path. Available only if a
            connection is not found.
      description: Describes the status of an analysis at completion.
    RouteAnalysisCompletionReasonCode:
      type: string
      enum:
      - TRANSIT_GATEWAY_ATTACHMENT_NOT_FOUND
      - TRANSIT_GATEWAY_ATTACHMENT_NOT_IN_TRANSIT_GATEWAY
      - CYCLIC_PATH_DETECTED
      - TRANSIT_GATEWAY_ATTACHMENT_STABLE_ROUTE_TABLE_NOT_FOUND
      - ROUTE_NOT_FOUND
      - BLACKHOLE_ROUTE_FOR_DESTINATION_FOUND
      - INACTIVE_ROUTE_FOR_DESTINATION_FOUND
      - TRANSIT_GATEWAY_ATTACHMENT_ATTACH_ARN_NO_MATCH
      - MAX_HOPS_EXCEEDED
      - POSSIBLE_MIDDLEBOX
      - NO_DESTINATION_ARN_PROVIDED
    RouteAnalysisCompletionResultCode:
      type: string
      enum:
      - CONNECTED
      - NOT_CONNECTED
    RouteAnalysisEndpointOptions:
      type: object
      properties:
        TransitGatewayAttachmentArn:
          allOf:
          - $ref: '#/components/schemas/TransitGatewayAttachmentArn'
          description: The ARN of the transit gateway attachment.
        TransitGatewayArn:
          allOf:
          - $ref: '#/components/schemas/TransitGatewayArn'
          description: The ARN of the transit gateway.
        IpAddress:
          allOf:
          - $ref: '#/components/schemas/IPAddress'
          description: The IP address.
      description: Describes a source or a destination.
    RouteAnalysisEndpointOptionsSpecification:
      type: object
      properties:
        TransitGatewayAttachmentArn:
          allOf:
          - $ref: '#/components/schemas/TransitGatewayAttachmentArn'
          description: The ARN of the transit gateway attachment.
        IpAddress:
          allOf:
          - $ref: '#/components/schemas/IPAddress'
          description: The IP address.
      description: Describes a source or a destination.
    RouteAnalysisPath:
      type: object
      properties:
        CompletionStatus:
          allOf:
          - $ref: '#/components/schemas/RouteAnalysisCompletion'
          description: The status of the analysis at completion.
        Path:
          allOf:
          - $ref: '#/components/schemas/PathComponentList'
          description: The route analysis path.
      description: Describes a route analysis path.
    RouteAnalysisStatus:
      type: string
      enum:
      - RUNNING
      - COMPLETED
      - FAILED
    RouteState:
      type: string
      enum:
      - ACTIVE
      - BLACKHOLE
    RouteStateList:
      type: array
      items:
        $ref: '#/components/schemas/RouteState'
    RouteTableIdentifier:
      type: object
      properties:
        TransitGatewayRouteTableArn:
          allOf:
          - $ref: '#/components/schemas/TransitGatewayRouteTableArn'
          description: 'The ARN of the transit gateway route table for the attachment
            request. For example, `"TransitGatewayRouteTableArn": "arn:aws:ec2:us-west-2:123456789012:transit-gateway-route-table/tgw-rtb-9876543210123456"`.'
        CoreNetworkSegmentEdge:
          allOf:
          - $ref: '#/components/schemas/CoreNetworkSegmentEdgeIdentifier'
          description: The segment edge in a core network.
        CoreNetworkNetworkFunctionGroup:
          allOf:
          - $ref: '#/components/schemas/CoreNetworkNetworkFunctionGroupIdentifier'
          description: The route table identifier associated with the network function
            group.
      description: Describes a route table.
    RouteTableType:
      type: string
      enum:
      - TRANSIT_GATEWAY_ROUTE_TABLE
      - CORE_NETWORK_SEGMENT
      - NETWORK_FUNCTION_GROUP
    RouteType:
      type: string
      enum:
      - PROPAGATED
      - STATIC
    RouteTypeList:
      type: array
      items:
        $ref: '#/components/schemas/RouteType'
    SLRDeploymentStatus:
      type: string
      minLength: 0
      maxLength: 50
    SegmentActionServiceInsertion:
      type: string
      enum:
      - send-via
      - send-to
    SendViaMode:
      type: string
      enum:
      - dual-hop
      - single-hop
    ServerSideString:
      type: string
      pattern: ^[\s\S]*$
      minLength: 0
      maxLength: 10000000
    ServiceInsertionAction:
      type: object
      properties:
        Action:
          allOf:
          - $ref: '#/components/schemas/SegmentActionServiceInsertion'
          description: The action the service insertion takes for traffic. `send-via`
            sends east-west traffic between attachments. `send-to` sends north-south
            traffic to the security appliance, and then from that to either the Internet
            or to an on-premesis location.
        Mode:
          allOf:
          - $ref: '#/components/schemas/SendViaMode'
          description: Describes the mode packets take for the `send-via` action.
            This is not used when the action is `send-to`. `dual-hop` packets traverse
            attachments in both the source to the destination core network edges.
            This mode requires that an inspection attachment must be present in all
            Regions of the service insertion-enabled segments. For `single-hop`, packets
            traverse a single intermediate inserted attachment. You can use `EdgeOverride`
            to specify a specific edge to use.
        WhenSentTo:
          allOf:
          - $ref: '#/components/schemas/WhenSentTo'
          description: The list of destination segments if the service insertion action
            is `send-via`.
        Via:
          allOf:
          - $ref: '#/components/schemas/Via'
          description: The list of network function groups and any edge overrides
            for the chosen service insertion action. Used for both `send-to` or `send-via`.
      description: Describes the action that the service insertion will take for any
        segments associated with it.
    ServiceInsertionActionList:
      type: array
      items:
        $ref: '#/components/schemas/ServiceInsertionAction'
    ServiceInsertionSegments:
      type: object
      properties:
        SendVia:
          allOf:
          - $ref: '#/components/schemas/ConstrainedStringList'
          description: The list of segments associated with the `send-via` action.
        SendTo:
          allOf:
          - $ref: '#/components/schemas/ConstrainedStringList'
          description: The list of segments associated with the `send-to` action.
      description: Describes the segments associated with the service insertion action.
    ServiceQuotaExceededException:
      type: object
      properties:
        Message:
          allOf:
          - $ref: '#/components/schemas/ServerSideString'
          description: The error message.
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/ServerSideString'
          description: The ID of the resource.
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/ServerSideString'
          description: The resource type.
        LimitCode:
          allOf:
          - $ref: '#/components/schemas/ServerSideString'
          description: The limit code.
        ServiceCode:
          allOf:
          - $ref: '#/components/schemas/ServerSideString'
          description: The service code.
      required:
      - Message
      - LimitCode
      - ServiceCode
      description: A service limit was exceeded.
    Site:
      type: object
      properties:
        SiteId:
          allOf:
          - $ref: '#/components/schemas/SiteId'
          description: The ID of the site.
        SiteArn:
          allOf:
          - $ref: '#/components/schemas/SiteArn'
          description: The Amazon Resource Name (ARN) of the site.
        GlobalNetworkId:
          allOf:
          - $ref: '#/components/schemas/GlobalNetworkId'
          description: The ID of the global network.
        Description:
          allOf:
          - $ref: '#/components/schemas/ConstrainedString'
          description: The description of the site.
        Location:
          allOf:
          - $ref: '#/components/schemas/Location'
          description: The location of the site.
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          description: The date and time that the site was created.
        State:
          allOf:
          - $ref: '#/components/schemas/SiteState'
          description: The state of the site.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: The tags for the site.
      description: Describes a site.
    SiteArn:
      type: string
      pattern: ^[\s\S]*$
      minLength: 0
      maxLength: 500
    SiteId:
      type: string
      pattern: ^[\s\S]*$
      minLength: 0
      maxLength: 50
    SiteIdList:
      type: array
      items:
        $ref: '#/components/schemas/SiteId'
    SiteList:
      type: array
      items:
        $ref: '#/components/schemas/Site'
    SiteState:
      type: string
      enum:
      - PENDING
      - AVAILABLE
      - DELETING
      - UPDATING
    SiteToSiteVpnAttachment:
      type: object
      properties:
        Attachment:
          allOf:
          - $ref: '#/components/schemas/Attachment'
          description: Provides details about a site-to-site VPN attachment.
        VpnConnectionArn:
          allOf:
          - $ref: '#/components/schemas/VpnConnectionArn'
          description: The ARN of the site-to-site VPN attachment.
      description: Creates a site-to-site VPN attachment.
    StartOrganizationServiceAccessUpdateRequest:
      type: object
      properties:
        Action:
          allOf:
          - $ref: '#/components/schemas/Action'
          description: The action to take for the update request. This can be either
            `ENABLE` or `DISABLE`.
      required:
      - Action
    StartOrganizationServiceAccessUpdateResponse:
      type: object
      properties:
        OrganizationStatus:
          allOf:
          - $ref: '#/components/schemas/OrganizationStatus'
          description: The status of the service access update request for an Amazon
            Web Services Organization.
    StartRouteAnalysisRequest:
      type: object
      properties:
        GlobalNetworkId:
          allOf:
          - $ref: '#/components/schemas/GlobalNetworkId'
          description: The ID of the global network.
        Source:
          allOf:
          - $ref: '#/components/schemas/RouteAnalysisEndpointOptionsSpecification'
          description: The source from which traffic originates.
        Destination:
          allOf:
          - $ref: '#/components/schemas/RouteAnalysisEndpointOptionsSpecification'
          description: The destination.
        IncludeReturnPath:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether to analyze the return path. The default is
            `false`.
        UseMiddleboxes:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether to include the location of middlebox appliances
            in the route analysis. The default is `false`.
      required:
      - GlobalNetworkId
      - Source
      - Destination
    StartRouteAnalysisResponse:
      type: object
      properties:
        RouteAnalysis:
          allOf:
          - $ref: '#/components/schemas/RouteAnalysis'
          description: The route analysis.
    SubnetArn:
      type: string
      pattern: ^arn:[^:]{1,63}:ec2:[^:]{0,63}:[^:]{0,63}:subnet\/subnet-[0-9a-f]{8,17}$|^$
      minLength: 0
      maxLength: 500
    SubnetArnList:
      type: array
      items:
        $ref: '#/components/schemas/SubnetArn'
    SynthesizedJsonCoreNetworkPolicyDocument:
      type: string
      pattern: ^[\s\S]*$
      minLength: 0
      maxLength: 10000000
    SynthesizedJsonResourcePolicyDocument:
      type: string
      pattern: ^[\s\S]*$
      minLength: 0
      maxLength: 10000000
    Tag:
      type: object
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/TagKey'
          description: 'The tag key.


            Constraints: Maximum length of 128 characters.'
        Value:
          allOf:
          - $ref: '#/components/schemas/TagValue'
          description: 'The tag value.


            Constraints: Maximum length of 256 characters.'
      description: Describes a tag.
    TagKey:
      type: string
      pattern: ^[\s\S]*$
      minLength: 0
      maxLength: 10000000
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
    TagList:
      type: array
      items:
        $ref: '#/components/schemas/Tag'
    TagResourceRequest:
      type: object
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          description: The Amazon Resource Name (ARN) of the resource.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: The tags to apply to the specified resource.
      required:
      - ResourceArn
      - Tags
    TagResourceResponse:
      type: object
      properties: {}
    TagValue:
      type: string
      pattern: ^[\s\S]*$
      minLength: 0
      maxLength: 10000000
    ThrottlingException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ServerSideString'
        RetryAfterSeconds:
          allOf:
          - $ref: '#/components/schemas/RetryAfterSeconds'
          description: Indicates when to retry the request.
      required:
      - Message
      description: The request was denied due to request throttling.
    TransitGatewayArn:
      type: string
      pattern: ^[\s\S]*$
      minLength: 0
      maxLength: 500
    TransitGatewayArnList:
      type: array
      items:
        $ref: '#/components/schemas/TransitGatewayArn'
    TransitGatewayAttachmentArn:
      type: string
      pattern: ^[\s\S]*$
      minLength: 0
      maxLength: 500
    TransitGatewayAttachmentId:
      type: string
      pattern: ^[\s\S]*$
      minLength: 0
      maxLength: 50
    TransitGatewayConnectPeerArn:
      type: string
      pattern: ^[\s\S]*$
      minLength: 0
      maxLength: 500
    TransitGatewayConnectPeerArnList:
      type: array
      items:
        $ref: '#/components/schemas/TransitGatewayConnectPeerArn'
    TransitGatewayConnectPeerAssociation:
      type: object
      properties:
        TransitGatewayConnectPeerArn:
          allOf:
          - $ref: '#/components/schemas/TransitGatewayConnectPeerArn'
          description: The Amazon Resource Name (ARN) of the transit gateway Connect
            peer.
        GlobalNetworkId:
          allOf:
          - $ref: '#/components/schemas/GlobalNetworkId'
          description: The ID of the global network.
        DeviceId:
          allOf:
          - $ref: '#/components/schemas/DeviceId'
          description: The ID of the device.
        LinkId:
          allOf:
          - $ref: '#/components/schemas/LinkId'
          description: The ID of the link.
        State:
          allOf:
          - $ref: '#/components/schemas/TransitGatewayConnectPeerAssociationState'
          description: The state of the association.
      description: Describes a transit gateway Connect peer association.
    TransitGatewayConnectPeerAssociationList:
      type: array
      items:
        $ref: '#/components/schemas/TransitGatewayConnectPeerAssociation'
    TransitGatewayConnectPeerAssociationState:
      type: string
      enum:
      - PENDING
      - AVAILABLE
      - DELETING
      - DELETED
    TransitGatewayPeering:
      type: object
      properties:
        Peering:
          allOf:
          - $ref: '#/components/schemas/Peering'
          description: Describes a transit gateway peer connection.
        TransitGatewayArn:
          allOf:
          - $ref: '#/components/schemas/TransitGatewayArn'
          description: The ARN of the transit gateway.
        TransitGatewayPeeringAttachmentId:
          allOf:
          - $ref: '#/components/schemas/TransitGatewayPeeringAttachmentId'
          description: The ID of the transit gateway peering attachment.
      description: Describes a transit gateway peering attachment.
    TransitGatewayPeeringAttachmentId:
      type: string
      pattern: ^tgw-attach-([0-9a-f]{8,17})$
      minLength: 0
      maxLength: 50
    TransitGatewayRegistration:
      type: object
      properties:
        GlobalNetworkId:
          allOf:
          - $ref: '#/components/schemas/GlobalNetworkId'
          description: The ID of the global network.
        TransitGatewayArn:
          allOf:
          - $ref: '#/components/schemas/TransitGatewayArn'
          description: The Amazon Resource Name (ARN) of the transit gateway.
        State:
          allOf:
          - $ref: '#/components/schemas/TransitGatewayRegistrationStateReason'
          description: The state of the transit gateway registration.
      description: Describes the registration of a transit gateway to a global network.
    TransitGatewayRegistrationList:
      type: array
      items:
        $ref: '#/components/schemas/TransitGatewayRegistration'
    TransitGatewayRegistrationState:
      type: string
      enum:
      - PENDING
      - AVAILABLE
      - DELETING
      - DELETED
      - FAILED
    TransitGatewayRegistrationStateReason:
      type: object
      properties:
        Code:
          allOf:
          - $ref: '#/components/schemas/TransitGatewayRegistrationState'
          description: The code for the state reason.
        Message:
          allOf:
          - $ref: '#/components/schemas/ConstrainedString'
          description: The message for the state reason.
      description: Describes the status of a transit gateway registration.
    TransitGatewayRouteTableArn:
      type: string
      pattern: ^[\s\S]*$
      minLength: 0
      maxLength: 500
    TransitGatewayRouteTableAttachment:
      type: object
      properties:
        Attachment:
          $ref: '#/components/schemas/Attachment'
        PeeringId:
          allOf:
          - $ref: '#/components/schemas/PeeringId'
          description: The ID of the peering attachment.
        TransitGatewayRouteTableArn:
          allOf:
          - $ref: '#/components/schemas/TransitGatewayRouteTableArn'
          description: 'The ARN of the transit gateway attachment route table. For
            example, `"TransitGatewayRouteTableArn": "arn:aws:ec2:us-west-2:123456789012:transit-gateway-route-table/tgw-rtb-9876543210123456"`.'
      description: Describes a transit gateway route table attachment.
    TunnelProtocol:
      type: string
      enum:
      - GRE
      - NO_ENCAP
    UntagResourceRequest:
      type: object
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          description: The Amazon Resource Name (ARN) of the resource.
        TagKeys:
          allOf:
          - $ref: '#/components/schemas/TagKeyList'
          description: The tag keys to remove from the specified resource.
      required:
      - ResourceArn
      - TagKeys
    UntagResourceResponse:
      type: object
      properties: {}
    UpdateConnectionRequest:
      type: object
      properties:
        GlobalNetworkId:
          allOf:
          - $ref: '#/components/schemas/GlobalNetworkId'
          description: The ID of the global network.
        ConnectionId:
          allOf:
          - $ref: '#/components/schemas/ConnectionId'
          description: The ID of the connection.
        LinkId:
          allOf:
          - $ref: '#/components/schemas/LinkId'
          description: The ID of the link for the first device in the connection.
        ConnectedLinkId:
          allOf:
          - $ref: '#/components/schemas/LinkId'
          description: The ID of the link for the second device in the connection.
        Description:
          allOf:
          - $ref: '#/components/schemas/ConstrainedString'
          description: 'A description of the connection.


            Length Constraints: Maximum length of 256 characters.'
      required:
      - GlobalNetworkId
      - ConnectionId
    UpdateConnectionResponse:
      type: object
      properties:
        Connection:
          allOf:
          - $ref: '#/components/schemas/Connection'
          description: Information about the connection.
    UpdateCoreNetworkRequest:
      type: object
      properties:
        CoreNetworkId:
          allOf:
          - $ref: '#/components/schemas/CoreNetworkId'
          description: The ID of a core network.
        Description:
          allOf:
          - $ref: '#/components/schemas/ConstrainedString'
          description: The description of the update.
      required:
      - CoreNetworkId
    UpdateCoreNetworkResponse:
      type: object
      properties:
        CoreNetwork:
          allOf:
          - $ref: '#/components/schemas/CoreNetwork'
          description: Returns information about a core network update.
    UpdateDeviceRequest:
      type: object
      properties:
        GlobalNetworkId:
          allOf:
          - $ref: '#/components/schemas/GlobalNetworkId'
          description: The ID of the global network.
        DeviceId:
          allOf:
          - $ref: '#/components/schemas/DeviceId'
          description: The ID of the device.
        AWSLocation:
          allOf:
          - $ref: '#/components/schemas/AWSLocation'
          description: The Amazon Web Services location of the device, if applicable.
            For an on-premises device, you can omit this parameter.
        Description:
          allOf:
          - $ref: '#/components/schemas/ConstrainedString'
          description: 'A description of the device.


            Constraints: Maximum length of 256 characters.'
        Type:
          allOf:
          - $ref: '#/components/schemas/ConstrainedString'
          description: The type of the device.
        Vendor:
          allOf:
          - $ref: '#/components/schemas/ConstrainedString'
          description: 'The vendor of the device.


            Constraints: Maximum length of 128 characters.'
        Model:
          allOf:
          - $ref: '#/components/schemas/ConstrainedString'
          description: 'The model of the device.


            Constraints: Maximum length of 128 characters.'
        SerialNumber:
          allOf:
          - $ref: '#/components/schemas/ConstrainedString'
          description: 'The serial number of the device.


            Constraints: Maximum length of 128 characters.'
        Location:
          $ref: '#/components/schemas/Location'
        SiteId:
          allOf:
          - $ref: '#/components/schemas/SiteId'
          description: The ID of the site.
      required:
      - GlobalNetworkId
      - DeviceId
    UpdateDeviceResponse:
      type: object
      properties:
        Device:
          allOf:
          - $ref: '#/components/schemas/Device'
          description: Information about the device.
    UpdateDirectConnectGatewayAttachmentRequest:
      type: object
      properties:
        AttachmentId:
          allOf:
          - $ref: '#/components/schemas/AttachmentId'
          description: The ID of the Direct Connect gateway attachment for the updated
            edge locations.
        EdgeLocations:
          allOf:
          - $ref: '#/components/schemas/ExternalRegionCodeList'
          description: One or more edge locations to update for the Direct Connect
            gateway attachment. The updated array of edge locations overwrites the
            previous array of locations. `EdgeLocations` is only used for Direct Connect
            gateway attachments.
      required:
      - AttachmentId
    UpdateDirectConnectGatewayAttachmentResponse:
      type: object
      properties:
        DirectConnectGatewayAttachment:
          allOf:
          - $ref: '#/components/schemas/DirectConnectGatewayAttachment'
          description: Returns details of the Direct Connect gateway attachment with
            the updated edge locations.
    UpdateGlobalNetworkRequest:
      type: object
      properties:
        GlobalNetworkId:
          allOf:
          - $ref: '#/components/schemas/GlobalNetworkId'
          description: The ID of your global network.
        Description:
          allOf:
          - $ref: '#/components/schemas/ConstrainedString'
          description: 'A description of the global network.


            Constraints: Maximum length of 256 characters.'
      required:
      - GlobalNetworkId
    UpdateGlobalNetworkResponse:
      type: object
      properties:
        GlobalNetwork:
          allOf:
          - $ref: '#/components/schemas/GlobalNetwork'
          description: Information about the global network object.
    UpdateLinkRequest:
      type: object
      properties:
        GlobalNetworkId:
          allOf:
          - $ref: '#/components/schemas/GlobalNetworkId'
          description: The ID of the global network.
        LinkId:
          allOf:
          - $ref: '#/components/schemas/LinkId'
          description: The ID of the link.
        Description:
          allOf:
          - $ref: '#/components/schemas/ConstrainedString'
          description: 'A description of the link.


            Constraints: Maximum length of 256 characters.'
        Type:
          allOf:
          - $ref: '#/components/schemas/ConstrainedString'
          description: 'The type of the link.


            Constraints: Maximum length of 128 characters.'
        Bandwidth:
          allOf:
          - $ref: '#/components/schemas/Bandwidth'
          description: The upload and download speed in Mbps.
        Provider:
          allOf:
          - $ref: '#/components/schemas/ConstrainedString'
          description: 'The provider of the link.


            Constraints: Maximum length of 128 characters.'
      required:
      - GlobalNetworkId
      - LinkId
    UpdateLinkResponse:
      type: object
      properties:
        Link:
          allOf:
          - $ref: '#/components/schemas/Link'
          description: Information about the link.
    UpdateNetworkResourceMetadataRequest:
      type: object
      properties:
        GlobalNetworkId:
          allOf:
          - $ref: '#/components/schemas/GlobalNetworkId'
          description: The ID of the global network.
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          description: The ARN of the resource.
        Metadata:
          allOf:
          - $ref: '#/components/schemas/NetworkResourceMetadataMap'
          description: The resource metadata.
      required:
      - GlobalNetworkId
      - ResourceArn
      - Metadata
    UpdateNetworkResourceMetadataResponse:
      type: object
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          description: The ARN of the resource.
        Metadata:
          allOf:
          - $ref: '#/components/schemas/NetworkResourceMetadataMap'
          description: The updated resource metadata.
    UpdateSiteRequest:
      type: object
      properties:
        GlobalNetworkId:
          allOf:
          - $ref: '#/components/schemas/GlobalNetworkId'
          description: The ID of the global network.
        SiteId:
          allOf:
          - $ref: '#/components/schemas/SiteId'
          description: The ID of your site.
        Description:
          allOf:
          - $ref: '#/components/schemas/ConstrainedString'
          description: 'A description of your site.


            Constraints: Maximum length of 256 characters.'
        Location:
          allOf:
          - $ref: '#/components/schemas/Location'
          description: "The site location:\n\n  * `Address`: The physical address\
            \ of the site.\n\n  * `Latitude`: The latitude of the site. \n\n  * `Longitude`:\
            \ The longitude of the site."
      required:
      - GlobalNetworkId
      - SiteId
    UpdateSiteResponse:
      type: object
      properties:
        Site:
          allOf:
          - $ref: '#/components/schemas/Site'
          description: Information about the site.
    UpdateVpcAttachmentRequest:
      type: object
      properties:
        AttachmentId:
          allOf:
          - $ref: '#/components/schemas/AttachmentId'
          description: The ID of the attachment.
        AddSubnetArns:
          allOf:
          - $ref: '#/components/schemas/SubnetArnList'
          description: Adds a subnet ARN to the VPC attachment.
        RemoveSubnetArns:
          allOf:
          - $ref: '#/components/schemas/SubnetArnList'
          description: Removes a subnet ARN from the attachment.
        Options:
          allOf:
          - $ref: '#/components/schemas/VpcOptions'
          description: Additional options for updating the VPC attachment.
      required:
      - AttachmentId
    UpdateVpcAttachmentResponse:
      type: object
      properties:
        VpcAttachment:
          allOf:
          - $ref: '#/components/schemas/VpcAttachment'
          description: Describes the updated VPC attachment.
    ValidationException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ServerSideString'
        Reason:
          allOf:
          - $ref: '#/components/schemas/ValidationExceptionReason'
          description: The reason for the error.
        Fields:
          allOf:
          - $ref: '#/components/schemas/ValidationExceptionFieldList'
          description: The fields that caused the error, if applicable.
      required:
      - Message
      description: The input fails to satisfy the constraints.
    ValidationExceptionField:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/ServerSideString'
          description: The name of the field.
        Message:
          allOf:
          - $ref: '#/components/schemas/ServerSideString'
          description: The message for the field.
      required:
      - Name
      - Message
      description: Describes a validation exception for a field.
    ValidationExceptionFieldList:
      type: array
      items:
        $ref: '#/components/schemas/ValidationExceptionField'
    ValidationExceptionReason:
      type: string
      enum:
      - UnknownOperation
      - CannotParse
      - FieldValidationFailed
      - Other
    Via:
      type: object
      properties:
        NetworkFunctionGroups:
          allOf:
          - $ref: '#/components/schemas/NetworkFunctionGroupList'
          description: The list of network function groups associated with the service
            insertion action.
        WithEdgeOverrides:
          allOf:
          - $ref: '#/components/schemas/WithEdgeOverridesList'
          description: Describes any edge overrides. An edge override is a specific
            edge to be used for traffic.
      description: The list of network function groups and edge overrides for the
        service insertion action. Used for both the `send-to` and `send-via` actions.
    VpcArn:
      type: string
      pattern: ^arn:[^:]{1,63}:ec2:[^:]{0,63}:[^:]{0,63}:vpc\/vpc-[0-9a-f]{8,17}$
      minLength: 0
      maxLength: 500
    VpcAttachment:
      type: object
      properties:
        Attachment:
          allOf:
          - $ref: '#/components/schemas/Attachment'
          description: Provides details about the VPC attachment.
        SubnetArns:
          allOf:
          - $ref: '#/components/schemas/SubnetArnList'
          description: The subnet ARNs.
        Options:
          allOf:
          - $ref: '#/components/schemas/VpcOptions'
          description: Provides details about the VPC attachment.
      description: Describes a VPC attachment.
    VpcOptions:
      type: object
      properties:
        Ipv6Support:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether IPv6 is supported.
        ApplianceModeSupport:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether appliance mode is supported. If enabled,
            traffic flow between a source and destination use the same Availability
            Zone for the VPC attachment for the lifetime of that flow. The default
            value is `false`.
      description: Describes the VPC options.
    VpnConnectionArn:
      type: string
      pattern: ^arn:[^:]{1,63}:ec2:[^:]{0,63}:[^:]{0,63}:vpn-connection\/vpn-[0-9a-f]{8,17}$
      minLength: 0
      maxLength: 500
    WhenSentTo:
      type: object
      properties:
        WhenSentToSegmentsList:
          allOf:
          - $ref: '#/components/schemas/WhenSentToSegmentsList'
          description: The list of destination segments when the service insertion
            action is `send-to`.
      description: Displays a list of the destination segments. Used only when the
        service insertion action is `send-to`.
    WhenSentToSegmentsList:
      type: array
      items:
        $ref: '#/components/schemas/ConstrainedString'
    WithEdgeOverridesList:
      type: array
      items:
        $ref: '#/components/schemas/EdgeOverride'
