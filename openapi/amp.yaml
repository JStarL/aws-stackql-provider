openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: amp
  x-aws-serviceName: amp
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-05'
  version: '2020-08-01'
  title: Amazon Prometheus Service
  description: |-
    Amazon Managed Service for Prometheus is a serverless, Prometheus-compatible monitoring service for container metrics that makes it easier to securely monitor container environments at scale. With Amazon Managed Service for Prometheus, you can use the same open-source Prometheus data model and query language that you use today to monitor the performance of your containerized workloads, and also enjoy improved scalability, availability, and security without having to manage the underlying infrastructure.

    For more information about Amazon Managed Service for Prometheus, see the [Amazon Managed Service for Prometheus](https://docs.aws.amazon.com/prometheus/latest/userguide/what-is-Amazon-Managed-Service-Prometheus.html) User Guide.

    Amazon Managed Service for Prometheus includes two APIs.

      * Use the Amazon Web Services API described in this guide to manage Amazon Managed Service for Prometheus resources, such as workspaces, rule groups, and alert managers.

      * Use the [Prometheus-compatible API](https://docs.aws.amazon.com/prometheus/latest/userguide/AMP-APIReference.html#AMP-APIReference-Prometheus-Compatible-Apis) to work within your Prometheus workspace.
servers:
- description: The Amazon Prometheus Service regional endpoint
  url: https://aps.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths: {}
components:
  schemas:
    AlertManagerDefinitionData:
      type: string
      format: byte
      description: "<p>The base-64 encoded blob that is alert manager definition.</p>\n\
        \         <p>For details about the alert manager definition, see <a href=\"\
        https://docs.aws.amazon.com/prometheus/latest/APIReference/yaml-AlertManagerDefinitionData.html\"\
        >AlertManagedDefinitionData</a>.</p>"
    AlertManagerDefinitionStatusCode:
      type: string
      enum:
      - CREATING
      - ACTIVE
      - UPDATING
      - DELETING
      - CREATION_FAILED
      - UPDATE_FAILED
    ClusterArn:
      type: string
      pattern: ^arn:aws[-a-z]*:eks:[-a-z0-9]+:[0-9]{12}:cluster/.+$
    Destination:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/AmpConfiguration'
        description: |-
          The Amazon Managed Service for Prometheus workspace to send metrics to.
      description: |-
        Where to send the metrics from a scraper.
    FilterKey:
      type: string
      minLength: 1
      maxLength: 256
    FilterValue:
      type: string
      minLength: 1
      maxLength: 256
    FilterValues:
      type: array
      items:
        $ref: '#/components/schemas/FilterValue'
      description: <p>A list of scraper filter values.</p>
    IamRoleArn:
      type: string
      pattern: ^arn:aws[-a-z]*:iam::[0-9]{12}:role/.+$
    IdempotencyToken:
      type: string
      pattern: ^[!-~]+$
      minLength: 1
      maxLength: 64
    KmsKeyArn:
      type: string
      pattern: ^arn:aws[-a-z]*:kms:[-a-z0-9]+:[0-9]{12}:key/[-a-f0-9]+$
      minLength: 20
      maxLength: 2048
    LabelName:
      type: string
      pattern: ^[a-zA-Z_][a-zA-Z0-9_]*$
      minLength: 1
    LabelSet:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/LabelValue'
    LabelValue:
      type: string
      minLength: 1
    LimitsPerLabelSetList:
      type: array
      items:
        $ref: '#/components/schemas/LimitsPerLabelSet'
    LogGroupArn:
      type: string
      pattern: ^arn:aws[-a-z]*:logs:[-a-z0-9]+:[0-9]{12}:log-group:[A-Za-z0-9\.\-\_\#/]{1,512}\:\*$
    LoggingConfigurationStatusCode:
      type: string
      enum:
      - CREATING
      - ACTIVE
      - UPDATING
      - DELETING
      - CREATION_FAILED
      - UPDATE_FAILED
    PaginationToken:
      type: string
      maxLength: 1000
    RuleGroupsNamespaceArn:
      type: string
    RuleGroupsNamespaceData:
      type: string
      format: byte
      description: <p>The rule groups namespace data.</p>
    RuleGroupsNamespaceName:
      type: string
      pattern: '[0-9A-Za-z][-.0-9A-Z_a-z]*'
      minLength: 1
      maxLength: 64
    RuleGroupsNamespaceStatusCode:
      type: string
      enum:
      - CREATING
      - ACTIVE
      - UPDATING
      - DELETING
      - CREATION_FAILED
      - UPDATE_FAILED
    RuleGroupsNamespaceSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/RuleGroupsNamespaceSummary'
      description: <p>A list of rule groups namespace summary.</p>
    ScrapeConfiguration:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/Blob'
        description: |-
          The base 64 encoded scrape configuration file.
      description: |-
        A scrape configuration for a scraper, base 64 encoded. For more information, see [Scraper configuration](https://docs.aws.amazon.com/prometheus/latest/userguide/AMP-collector-how-to.html#AMP-collector-configuration) in the _Amazon Managed Service for Prometheus User Guide_.
    ScraperAlias:
      type: string
      pattern: ^[0-9A-Za-z][-.0-9A-Z_a-z]*$
      minLength: 1
      maxLength: 100
    ScraperArn:
      type: string
    ScraperFilters:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/FilterValues'
      description: <p>A list of scraper filters.</p>
    ScraperId:
      type: string
      pattern: ^[0-9A-Za-z][-.0-9A-Z_a-z]*$
      minLength: 1
      maxLength: 64
    ScraperStatusCode:
      type: string
      enum:
      - CREATING
      - UPDATING
      - ACTIVE
      - DELETING
      - CREATION_FAILED
      - UPDATE_FAILED
      - DELETION_FAILED
    ScraperSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/ScraperSummary'
      description: <p>A list of scraper summaries.</p>
    SecurityGroupId:
      type: string
      pattern: ^sg-[0-9a-z]+$
      minLength: 0
      maxLength: 255
    SecurityGroupIds:
      type: array
      items:
        $ref: '#/components/schemas/SecurityGroupId'
      description: <p>A list of security group IDs specified for VPC configuration.</p>
    Source:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/EksConfiguration'
        description: |-
          The Amazon EKS cluster from which a scraper collects metrics.
      description: |-
        The source of collected metrics for a scraper.
    StatusReason:
      type: string
      minLength: 1
      maxLength: 256
    SubnetId:
      type: string
      pattern: ^subnet-[0-9a-z]+$
      minLength: 0
      maxLength: 255
    SubnetIds:
      type: array
      items:
        $ref: '#/components/schemas/SubnetId'
      description: <p>A list of subnet IDs specified for VPC configuration.</p>
    TagKey:
      type: string
      pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
      minLength: 1
      maxLength: 128
    TagKeys:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
    TagMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
      description: <p>A tag associated with a resource.</p>
    TagValue:
      type: string
      pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
      minLength: 0
      maxLength: 256
    Uri:
      type: string
      minLength: 1
      maxLength: 1024
    ValidationExceptionFieldList:
      type: array
      items:
        $ref: '#/components/schemas/ValidationExceptionField'
      description: <p>A list of fields.</p>
    ValidationExceptionReason:
      type: string
      enum:
      - UNKNOWN_OPERATION
      - CANNOT_PARSE
      - FIELD_VALIDATION_FAILED
      - OTHER
    WorkspaceAlias:
      type: string
      minLength: 1
      maxLength: 100
    WorkspaceArn:
      type: string
      pattern: ^arn:aws[-a-z]*:aps:[-a-z0-9]+:[0-9]{12}:workspace/.+$
    WorkspaceConfigurationStatusCode:
      type: string
      enum:
      - ACTIVE
      - UPDATING
      - UPDATE_FAILED
    WorkspaceId:
      type: string
      pattern: '[0-9A-Za-z][-.0-9A-Z_a-z]*'
      minLength: 1
      maxLength: 64
    WorkspaceStatusCode:
      type: string
      enum:
      - CREATING
      - ACTIVE
      - UPDATING
      - DELETING
      - CREATION_FAILED
    WorkspaceSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/WorkspaceSummary'
      description: <p>A list of workspace summaries.</p>
