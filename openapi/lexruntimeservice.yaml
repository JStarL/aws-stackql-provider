openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: lex_runtime_service
  x-aws-serviceName: lexruntimeservice
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-05'
  version: '2016-11-28'
  title: Amazon Lex Runtime Service
  description: |-
    Amazon Lex provides both build and runtime endpoints. Each endpoint provides a set of operations (API). Your conversational bot uses the runtime API to understand user utterances (user input text or voice). For example, suppose a user says "I want pizza", your bot sends this input to Amazon Lex using the runtime API. Amazon Lex recognizes that the user request is for the OrderPizza intent (one of the intents defined in the bot). Then Amazon Lex engages in user conversation on behalf of the bot to elicit required information (slot values, such as pizza size and crust type), and then performs fulfillment activity (that you configured when you created the bot). You use the build-time API to create and manage your Amazon Lex bot. For a list of build-time operations, see the build-time API, .
servers:
- description: The Amazon Lex Runtime Service regional endpoint
  url: https://runtime.lex.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths: {}
components:
  schemas:
    Accept:
      type: string
    ActiveContextName:
      type: string
      pattern: ^([A-Za-z]_?)+$
      minLength: 1
      maxLength: 100
    ActiveContextParametersMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Text'
    ActiveContextTimeToLiveInSeconds:
      type: integer
      minimum: 5
      maximum: 86400
    ActiveContextTurnsToLive:
      type: integer
      minimum: 1
      maximum: 20
    ActiveContextsList:
      type: array
      items:
        $ref: '#/components/schemas/ActiveContext'
      x-sensitive: true
    BlobStream:
      type: string
      format: byte
    BotAlias:
      type: string
    BotName:
      type: string
    BotVersion:
      type: string
      pattern: ^[0-9]+|\$LATEST$
      minLength: 1
      maxLength: 64
    ButtonTextStringWithLength:
      type: string
      minLength: 1
      maxLength: 15
    ButtonValueStringWithLength:
      type: string
      minLength: 1
      maxLength: 1000
    ConfirmationStatus:
      type: string
      enum:
      - None
      - Confirmed
      - Denied
    ContentType:
      type: string
      enum:
      - application/vnd.amazonaws.card.generic
    DialogActionType:
      type: string
      enum:
      - ElicitIntent
      - ConfirmIntent
      - ElicitSlot
      - Close
      - Delegate
    DialogState:
      type: string
      enum:
      - ElicitIntent
      - ConfirmIntent
      - ElicitSlot
      - Fulfilled
      - ReadyForFulfillment
      - Failed
    Double:
      type: number
      format: double
      default: 0
    ErrorMessage:
      type: string
    FulfillmentState:
      type: string
      enum:
      - Fulfilled
      - Failed
      - ReadyForFulfillment
    HttpContentType:
      type: string
    IntentList:
      type: array
      items:
        $ref: '#/components/schemas/PredictedIntent'
    IntentName:
      type: string
    IntentSummaryCheckpointLabel:
      type: string
      pattern: ^[a-zA-Z0-9-]+$
      minLength: 1
      maxLength: 255
    IntentSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/IntentSummary'
    MessageFormatType:
      type: string
      enum:
      - PlainText
      - CustomPayload
      - SSML
      - Composite
    ParameterName:
      type: string
      minLength: 1
      maxLength: 100
    SensitiveString:
      type: string
      minLength: 1
      maxLength: 1366
    SensitiveStringUnbounded:
      type: string
    SentimentLabel:
      type: string
    SentimentScore:
      type: string
    String:
      type: string
    StringMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/String'
    StringUrlWithLength:
      type: string
      minLength: 1
      maxLength: 2048
    StringWithLength:
      type: string
      minLength: 1
      maxLength: 80
    SynthesizedJsonActiveContextsString:
      type: string
    SynthesizedJsonAttributesString:
      type: string
    SynthesizedJsonString:
      type: string
    Text:
      type: string
      minLength: 1
      maxLength: 1024
    UserId:
      type: string
      pattern: ^[0-9a-zA-Z._:-]+$
      minLength: 2
      maxLength: 100
    genericAttachmentList:
      type: array
      items:
        $ref: '#/components/schemas/GenericAttachment'
    listOfButtons:
      type: array
      items:
        $ref: '#/components/schemas/Button'
