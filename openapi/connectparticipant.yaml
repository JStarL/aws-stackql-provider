openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: connectparticipant
  x-aws-serviceName: connectparticipant
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-07'
  version: '2018-09-07'
  title: Amazon Connect Participant Service
  description: |-
    * [Participant Service actions](https://docs.aws.amazon.com/connect/latest/APIReference/API_Operations_Amazon_Connect_Participant_Service.html)

      * [Participant Service data types](https://docs.aws.amazon.com/connect/latest/APIReference/API_Types_Amazon_Connect_Participant_Service.html)

    Amazon Connect is an easy-to-use omnichannel cloud contact center service that enables companies of any size to deliver superior customer service at a lower cost. Amazon Connect communications capabilities make it easy for companies to deliver personalized interactions across communication channels, including chat.

    Use the Amazon Connect Participant Service to manage participants (for example, agents, customers, and managers listening in), and to send messages and events within a chat contact. The APIs in the service enable the following: sending chat messages, attachment sharing, managing a participant's connection state and message events, and retrieving chat transcripts.
servers:
- description: The Amazon Connect Participant Service regional endpoint
  url: https://participant.connect.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths:
  /participant/cancel-authentication:
    post:
      operationId: CancelParticipantAuthentication
      description: |-
        Cancels the authentication session. The opted out branch of the Authenticate Customer flow block will be taken.

        The current supported channel is chat. This API is not supported for Apple Messages for Business, WhatsApp, or SMS chats.
      parameters:
      - name: X-Amz-Bearer
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/ParticipantToken'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                SessionId:
                  $ref: '#/components/schemas/SessionId'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            This exception occurs when there is an internal failure in the Amazon Connect service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by Amazon Connect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /participant/complete-attachment-upload:
    post:
      operationId: CompleteAttachmentUpload
      description: |-
        Allows you to confirm that the attachment has been uploaded using the pre-signed URL provided in StartAttachmentUpload API. A conflict exception is thrown when an attachment with that identifier is already being uploaded.

        For security recommendations, see [Amazon Connect Chat security best practices](https://docs.aws.amazon.com/connect/latest/adminguide/security-best-practices.html#bp-security-chat).

        `ConnectionToken` is used for invoking this API instead of `ParticipantToken`.

        The Amazon Connect Participant Service APIs do not use [Signature Version 4 authentication](https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html).
      parameters:
      - name: X-Amz-Bearer
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/ParticipantToken'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AttachmentIds:
                  $ref: '#/components/schemas/AttachmentIdList'
                ClientToken:
                  $ref: '#/components/schemas/NonEmptyClientToken'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The requested operation conflicts with the current state of a service resource associated with the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            This exception occurs when there is an internal failure in the Amazon Connect service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '402':
          description: |-
            The number of attachments per contact exceeds the quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by Amazon Connect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /participant/connection:
    post:
      operationId: CreateParticipantConnection
      description: |-
        Creates the participant's connection.

        For security recommendations, see [Amazon Connect Chat security best practices](https://docs.aws.amazon.com/connect/latest/adminguide/security-best-practices.html#bp-security-chat).

        `ParticipantToken` is used for invoking this API instead of `ConnectionToken`.

        The participant token is valid for the lifetime of the participant â€“ until they are part of a contact.

        The response URL for `WEBSOCKET` Type has a connect expiry timeout of 100s. Clients must manually connect to the returned websocket URL and subscribe to the desired topic.

        For chat, you need to publish the following on the established websocket connection:

        `{"topic":"aws/subscribe","content":{"topics":["aws/chat"]}}`

        Upon websocket URL expiry, as specified in the response ConnectionExpiry parameter, clients need to call this API again to obtain a new websocket URL and perform the same steps as before.

        **Message streaming support** : This API can also be used together with the [StartContactStreaming](https://docs.aws.amazon.com/connect/latest/APIReference/API_StartContactStreaming.html) API to create a participant connection for chat contacts that are not using a websocket. For more information about message streaming, [Enable real-time chat message streaming](https://docs.aws.amazon.com/connect/latest/adminguide/chat-message-streaming.html) in the _Amazon Connect Administrator Guide_.

        **Feature specifications** : For information about feature specifications, such as the allowed number of open websocket connections per participant, see [Feature specifications](https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html#feature-limits) in the _Amazon Connect Administrator Guide_.

        The Amazon Connect Participant Service APIs do not use [Signature Version 4 authentication](https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html).
      parameters:
      - name: X-Amz-Bearer
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/ParticipantToken'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Type:
                  $ref: '#/components/schemas/ConnectionTypeList'
                ConnectParticipant:
                  $ref: '#/components/schemas/Bool'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            This exception occurs when there is an internal failure in the Amazon Connect service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by Amazon Connect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /participant/views/{ViewToken}:
    get:
      operationId: DescribeView
      description: |-
        Retrieves the view for the specified view token.

        For security recommendations, see [Amazon Connect Chat security best practices](https://docs.aws.amazon.com/connect/latest/adminguide/security-best-practices.html#bp-security-chat).
      parameters:
      - name: ViewToken
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ViewToken'
      - name: X-Amz-Bearer
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/ParticipantToken'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            This exception occurs when there is an internal failure in the Amazon Connect service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by Amazon Connect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /participant/disconnect:
    post:
      operationId: DisconnectParticipant
      description: |-
        Disconnects a participant.

        For security recommendations, see [Amazon Connect Chat security best practices](https://docs.aws.amazon.com/connect/latest/adminguide/security-best-practices.html#bp-security-chat).

        `ConnectionToken` is used for invoking this API instead of `ParticipantToken`.

        The Amazon Connect Participant Service APIs do not use [Signature Version 4 authentication](https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html).
      parameters:
      - name: X-Amz-Bearer
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/ParticipantToken'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ClientToken:
                  $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            This exception occurs when there is an internal failure in the Amazon Connect service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by Amazon Connect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /participant/attachment:
    post:
      operationId: GetAttachment
      description: |-
        Provides a pre-signed URL for download of a completed attachment. This is an asynchronous API for use with active contacts.

        For security recommendations, see [Amazon Connect Chat security best practices](https://docs.aws.amazon.com/connect/latest/adminguide/security-best-practices.html#bp-security-chat).

        `ConnectionToken` is used for invoking this API instead of `ParticipantToken`.

        The Amazon Connect Participant Service APIs do not use [Signature Version 4 authentication](https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html).
      parameters:
      - name: X-Amz-Bearer
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/ParticipantToken'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AttachmentId:
                  $ref: '#/components/schemas/ArtifactId'
                UrlExpiryInSeconds:
                  $ref: '#/components/schemas/URLExpiryInSeconds'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            This exception occurs when there is an internal failure in the Amazon Connect service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by Amazon Connect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /participant/authentication-url:
    post:
      operationId: GetAuthenticationUrl
      description: |-
        Retrieves the AuthenticationUrl for the current authentication session for the AuthenticateCustomer flow block.

        For security recommendations, see [Amazon Connect Chat security best practices](https://docs.aws.amazon.com/connect/latest/adminguide/security-best-practices.html#bp-security-chat).

          * This API can only be called within one minute of receiving the authenticationInitiated event.

          * The current supported channel is chat. This API is not supported for Apple Messages for Business, WhatsApp, or SMS chats.
      parameters:
      - name: X-Amz-Bearer
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/ParticipantToken'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                SessionId:
                  $ref: '#/components/schemas/SessionId'
                RedirectUri:
                  $ref: '#/components/schemas/RedirectURI'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            This exception occurs when there is an internal failure in the Amazon Connect service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by Amazon Connect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /participant/transcript:
    post:
      operationId: GetTranscript
      description: |-
        Retrieves a transcript of the session, including details about any attachments. For information about accessing past chat contact transcripts for a persistent chat, see [Enable persistent chat](https://docs.aws.amazon.com/connect/latest/adminguide/chat-persistence.html).

        For security recommendations, see [Amazon Connect Chat security best practices](https://docs.aws.amazon.com/connect/latest/adminguide/security-best-practices.html#bp-security-chat).

        If you have a process that consumes events in the transcript of an chat that has ended, note that chat transcripts contain the following event content types if the event has occurred during the chat session:

          * `application/vnd.amazonaws.connect.event.participant.left`

          * `application/vnd.amazonaws.connect.event.participant.joined`

          * `application/vnd.amazonaws.connect.event.chat.ended`

          * `application/vnd.amazonaws.connect.event.transfer.succeeded`

          * `application/vnd.amazonaws.connect.event.transfer.failed`

        `ConnectionToken` is used for invoking this API instead of `ParticipantToken`.

        The Amazon Connect Participant Service APIs do not use [Signature Version 4 authentication](https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html).
      parameters:
      - name: X-Amz-Bearer
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/ParticipantToken'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ContactId:
                  $ref: '#/components/schemas/ContactId'
                MaxResults:
                  $ref: '#/components/schemas/MaxResults'
                NextToken:
                  $ref: '#/components/schemas/NextToken'
                ScanDirection:
                  $ref: '#/components/schemas/ScanDirection'
                SortOrder:
                  $ref: '#/components/schemas/SortKey'
                StartPosition:
                  $ref: '#/components/schemas/StartPosition'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            This exception occurs when there is an internal failure in the Amazon Connect service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by Amazon Connect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /participant/event:
    post:
      operationId: SendEvent
      description: |-
        The `application/vnd.amazonaws.connect.event.connection.acknowledged` ContentType will no longer be supported starting December 31, 2024. This event has been migrated to the [CreateParticipantConnection](https://docs.aws.amazon.com/connect-participant/latest/APIReference/API_CreateParticipantConnection.html) API using the `ConnectParticipant` field.

        Sends an event. Message receipts are not supported when there are more than two active participants in the chat. Using the SendEvent API for message receipts when a supervisor is barged-in will result in a conflict exception.

        For security recommendations, see [Amazon Connect Chat security best practices](https://docs.aws.amazon.com/connect/latest/adminguide/security-best-practices.html#bp-security-chat).

        `ConnectionToken` is used for invoking this API instead of `ParticipantToken`.

        The Amazon Connect Participant Service APIs do not use [Signature Version 4 authentication](https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html).
      parameters:
      - name: X-Amz-Bearer
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/ParticipantToken'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ContentType:
                  $ref: '#/components/schemas/ChatContentType'
                Content:
                  $ref: '#/components/schemas/ChatContent'
                ClientToken:
                  $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The requested operation conflicts with the current state of a service resource associated with the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            This exception occurs when there is an internal failure in the Amazon Connect service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by Amazon Connect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /participant/message:
    post:
      operationId: SendMessage
      description: |-
        Sends a message.

        For security recommendations, see [Amazon Connect Chat security best practices](https://docs.aws.amazon.com/connect/latest/adminguide/security-best-practices.html#bp-security-chat).

        `ConnectionToken` is used for invoking this API instead of `ParticipantToken`.

        The Amazon Connect Participant Service APIs do not use [Signature Version 4 authentication](https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html).
      parameters:
      - name: X-Amz-Bearer
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/ParticipantToken'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ContentType:
                  $ref: '#/components/schemas/ChatContentType'
                Content:
                  $ref: '#/components/schemas/ChatContent'
                ClientToken:
                  $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            This exception occurs when there is an internal failure in the Amazon Connect service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by Amazon Connect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /participant/start-attachment-upload:
    post:
      operationId: StartAttachmentUpload
      description: |-
        Provides a pre-signed Amazon S3 URL in response for uploading the file directly to S3.

        For security recommendations, see [Amazon Connect Chat security best practices](https://docs.aws.amazon.com/connect/latest/adminguide/security-best-practices.html#bp-security-chat).

        `ConnectionToken` is used for invoking this API instead of `ParticipantToken`.

        The Amazon Connect Participant Service APIs do not use [Signature Version 4 authentication](https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html).
      parameters:
      - name: X-Amz-Bearer
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/ParticipantToken'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ContentType:
                  $ref: '#/components/schemas/ContentType'
                AttachmentSizeInBytes:
                  $ref: '#/components/schemas/AttachmentSizeInBytes'
                AttachmentName:
                  $ref: '#/components/schemas/AttachmentName'
                ClientToken:
                  $ref: '#/components/schemas/NonEmptyClientToken'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            This exception occurs when there is an internal failure in the Amazon Connect service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '402':
          description: |-
            The number of attachments per contact exceeds the quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by Amazon Connect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
components:
  schemas:
    ARN:
      type: string
    AccessDeniedException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/Message'
      required:
      - Message
      description: You do not have sufficient access to perform this action.
    ArtifactId:
      type: string
      minLength: 1
      maxLength: 256
    ArtifactStatus:
      type: string
      enum:
      - APPROVED
      - REJECTED
      - IN_PROGRESS
    AttachmentIdList:
      type: array
      items:
        $ref: '#/components/schemas/ArtifactId'
    AttachmentItem:
      type: object
      properties:
        ContentType:
          allOf:
          - $ref: '#/components/schemas/ContentType'
          description: Describes the MIME file type of the attachment. For a list
            of supported file types, see [Feature specifications](https://docs.aws.amazon.com/connect/latest/adminguide/feature-limits.html)
            in the _Amazon Connect Administrator Guide_.
        AttachmentId:
          allOf:
          - $ref: '#/components/schemas/ArtifactId'
          description: A unique identifier for the attachment.
        AttachmentName:
          allOf:
          - $ref: '#/components/schemas/AttachmentName'
          description: A case-sensitive name of the attachment being uploaded.
        Status:
          allOf:
          - $ref: '#/components/schemas/ArtifactStatus'
          description: Status of the attachment.
      description: The case-insensitive input to indicate standard MIME type that
        describes the format of the file that will be uploaded.
    AttachmentName:
      type: string
      minLength: 1
      maxLength: 256
    AttachmentSizeInBytes:
      type: integer
      format: int64
      default: 0
      minimum: 1
    Attachments:
      type: array
      items:
        $ref: '#/components/schemas/AttachmentItem'
    AuthenticationUrl:
      type: string
      minLength: 1
      maxLength: 2083
    Bool:
      type: boolean
    CancelParticipantAuthenticationRequest:
      type: object
      properties:
        SessionId:
          allOf:
          - $ref: '#/components/schemas/SessionId'
          description: The `sessionId` provided in the `authenticationInitiated` event.
        ConnectionToken:
          allOf:
          - $ref: '#/components/schemas/ParticipantToken'
          description: The authentication token associated with the participant's
            connection.
      required:
      - SessionId
      - ConnectionToken
    CancelParticipantAuthenticationResponse:
      type: object
      properties: {}
    ChatContent:
      type: string
      minLength: 1
      maxLength: 16384
    ChatContentType:
      type: string
      minLength: 1
      maxLength: 100
    ChatItemId:
      type: string
      minLength: 1
      maxLength: 256
    ChatItemType:
      type: string
      enum:
      - TYPING
      - PARTICIPANT_JOINED
      - PARTICIPANT_LEFT
      - CHAT_ENDED
      - TRANSFER_SUCCEEDED
      - TRANSFER_FAILED
      - MESSAGE
      - EVENT
      - ATTACHMENT
      - CONNECTION_ACK
      - MESSAGE_DELIVERED
      - MESSAGE_READ
    ClientToken:
      type: string
      minLength: 0
      maxLength: 500
    CompleteAttachmentUploadRequest:
      type: object
      properties:
        AttachmentIds:
          allOf:
          - $ref: '#/components/schemas/AttachmentIdList'
          description: A list of unique identifiers for the attachments.
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/NonEmptyClientToken'
          description: A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. If not provided, the Amazon Web Services
            SDK populates this field. For more information about idempotency, see
            [Making retries safe with idempotent APIs](https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/).
        ConnectionToken:
          allOf:
          - $ref: '#/components/schemas/ParticipantToken'
          description: The authentication token associated with the participant's
            connection.
      required:
      - AttachmentIds
      - ClientToken
      - ConnectionToken
    CompleteAttachmentUploadResponse:
      type: object
      properties: {}
    ConflictException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/Reason'
      required:
      - Message
      description: The requested operation conflicts with the current state of a service
        resource associated with the request.
    ConnectionCredentials:
      type: object
      properties:
        ConnectionToken:
          allOf:
          - $ref: '#/components/schemas/ParticipantToken'
          description: The connection token.
        Expiry:
          allOf:
          - $ref: '#/components/schemas/ISO8601Datetime'
          description: 'The expiration of the token.


            It''s specified in ISO 8601 format: yyyy-MM-ddThh:mm:ss.SSSZ. For example,
            2019-11-08T02:41:28.172Z.'
      description: Connection credentials.
    ConnectionType:
      type: string
      enum:
      - WEBSOCKET
      - CONNECTION_CREDENTIALS
    ConnectionTypeList:
      type: array
      items:
        $ref: '#/components/schemas/ConnectionType'
    ContactId:
      type: string
      minLength: 1
      maxLength: 256
    ContentType:
      type: string
      minLength: 1
      maxLength: 255
    CreateParticipantConnectionRequest:
      type: object
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/ConnectionTypeList'
          description: Type of connection information required. If you need `CONNECTION_CREDENTIALS`
            along with marking participant as connected, pass `CONNECTION_CREDENTIALS`
            in `Type`.
        ParticipantToken:
          allOf:
          - $ref: '#/components/schemas/ParticipantToken'
          description: 'This is a header parameter.


            The ParticipantToken as obtained from [StartChatContact](https://docs.aws.amazon.com/connect/latest/APIReference/API_StartChatContact.html)
            API response.'
        ConnectParticipant:
          allOf:
          - $ref: '#/components/schemas/Bool'
          description: Amazon Connect Participant is used to mark the participant
            as connected for customer participant in message streaming, as well as
            for agent or manager participant in non-streaming chats.
      required:
      - ParticipantToken
    CreateParticipantConnectionResponse:
      type: object
      properties:
        Websocket:
          allOf:
          - $ref: '#/components/schemas/Websocket'
          description: Creates the participant's websocket connection.
        ConnectionCredentials:
          allOf:
          - $ref: '#/components/schemas/ConnectionCredentials'
          description: Creates the participant's connection credentials. The authentication
            token associated with the participant's connection.
    DescribeViewRequest:
      type: object
      properties:
        ViewToken:
          allOf:
          - $ref: '#/components/schemas/ViewToken'
          description: An encrypted token originating from the interactive message
            of a ShowView block operation. Represents the desired view.
        ConnectionToken:
          allOf:
          - $ref: '#/components/schemas/ParticipantToken'
          description: The connection token.
      required:
      - ViewToken
      - ConnectionToken
    DescribeViewResponse:
      type: object
      properties:
        View:
          allOf:
          - $ref: '#/components/schemas/View'
          description: A view resource object. Contains metadata and content necessary
            to render the view.
    DisconnectParticipantRequest:
      type: object
      properties:
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. If not provided, the Amazon Web Services
            SDK populates this field. For more information about idempotency, see
            [Making retries safe with idempotent APIs](https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/).
        ConnectionToken:
          allOf:
          - $ref: '#/components/schemas/ParticipantToken'
          description: The authentication token associated with the participant's
            connection.
      required:
      - ConnectionToken
    DisconnectParticipantResponse:
      type: object
      properties: {}
    DisplayName:
      type: string
      minLength: 1
      maxLength: 256
    GetAttachmentRequest:
      type: object
      properties:
        AttachmentId:
          allOf:
          - $ref: '#/components/schemas/ArtifactId'
          description: A unique identifier for the attachment.
        ConnectionToken:
          allOf:
          - $ref: '#/components/schemas/ParticipantToken'
          description: The authentication token associated with the participant's
            connection.
        UrlExpiryInSeconds:
          allOf:
          - $ref: '#/components/schemas/URLExpiryInSeconds'
          description: 'The expiration time of the URL in ISO timestamp. It''s specified
            in ISO 8601 format: yyyy-MM-ddThh:mm:ss.SSSZ. For example, 2019-11-08T02:41:28.172Z.'
      required:
      - AttachmentId
      - ConnectionToken
    GetAttachmentResponse:
      type: object
      properties:
        Url:
          allOf:
          - $ref: '#/components/schemas/PreSignedAttachmentUrl'
          description: This is the pre-signed URL that can be used for uploading the
            file to Amazon S3 when used in response to [StartAttachmentUpload](https://docs.aws.amazon.com/connect-participant/latest/APIReference/API_StartAttachmentUpload.html).
        UrlExpiry:
          allOf:
          - $ref: '#/components/schemas/ISO8601Datetime'
          description: 'The expiration time of the URL in ISO timestamp. It''s specified
            in ISO 8601 format: yyyy-MM-ddThh:mm:ss.SSSZ. For example, 2019-11-08T02:41:28.172Z.'
        AttachmentSizeInBytes:
          allOf:
          - $ref: '#/components/schemas/AttachmentSizeInBytes'
          description: The size of the attachment in bytes.
      required:
      - AttachmentSizeInBytes
    GetAuthenticationUrlRequest:
      type: object
      properties:
        SessionId:
          allOf:
          - $ref: '#/components/schemas/SessionId'
          description: The sessionId provided in the authenticationInitiated event.
        RedirectUri:
          allOf:
          - $ref: '#/components/schemas/RedirectURI'
          description: The URL where the customer will be redirected after Amazon
            Cognito authorizes the user.
        ConnectionToken:
          allOf:
          - $ref: '#/components/schemas/ParticipantToken'
          description: The authentication token associated with the participant's
            connection.
      required:
      - SessionId
      - RedirectUri
      - ConnectionToken
    GetAuthenticationUrlResponse:
      type: object
      properties:
        AuthenticationUrl:
          allOf:
          - $ref: '#/components/schemas/AuthenticationUrl'
          description: The URL where the customer will sign in to the identity provider.
            This URL contains the authorize endpoint for the Cognito UserPool used
            in the authentication.
    GetTranscriptRequest:
      type: object
      properties:
        ContactId:
          allOf:
          - $ref: '#/components/schemas/ContactId'
          description: The contactId from the current contact chain for which transcript
            is needed.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: 'The maximum number of results to return in the page. Default:
            10.'
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token. Use the value returned previously in
            the next subsequent request to retrieve the next set of results.
        ScanDirection:
          allOf:
          - $ref: '#/components/schemas/ScanDirection'
          description: 'The direction from StartPosition from which to retrieve message.
            Default: BACKWARD when no StartPosition is provided, FORWARD with StartPosition.'
        SortOrder:
          allOf:
          - $ref: '#/components/schemas/SortKey'
          description: 'The sort order for the records. Default: DESCENDING.'
        StartPosition:
          allOf:
          - $ref: '#/components/schemas/StartPosition'
          description: A filtering option for where to start.
        ConnectionToken:
          allOf:
          - $ref: '#/components/schemas/ParticipantToken'
          description: The authentication token associated with the participant's
            connection.
      required:
      - ConnectionToken
    GetTranscriptResponse:
      type: object
      properties:
        InitialContactId:
          allOf:
          - $ref: '#/components/schemas/ContactId'
          description: The initial contact ID for the contact.
        Transcript:
          allOf:
          - $ref: '#/components/schemas/Transcript'
          description: The list of messages in the session.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token. Use the value returned previously in
            the next subsequent request to retrieve the next set of results.
    ISO8601Datetime:
      type: string
    Instant:
      type: string
      minLength: 1
      maxLength: 100
    InternalServerException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/Message'
      required:
      - Message
      description: This exception occurs when there is an internal failure in the
        Amazon Connect service.
    Item:
      type: object
      properties:
        AbsoluteTime:
          allOf:
          - $ref: '#/components/schemas/Instant'
          description: 'The time when the message or event was sent.


            It''s specified in ISO 8601 format: yyyy-MM-ddThh:mm:ss.SSSZ. For example,
            2019-11-08T02:41:28.172Z.'
        Content:
          allOf:
          - $ref: '#/components/schemas/ChatContent'
          description: The content of the message or event.
        ContentType:
          allOf:
          - $ref: '#/components/schemas/ChatContentType'
          description: The type of content of the item.
        Id:
          allOf:
          - $ref: '#/components/schemas/ChatItemId'
          description: The ID of the item.
        Type:
          allOf:
          - $ref: '#/components/schemas/ChatItemType'
          description: 'Type of the item: message or event.'
        ParticipantId:
          allOf:
          - $ref: '#/components/schemas/ParticipantId'
          description: The ID of the sender in the session.
        DisplayName:
          allOf:
          - $ref: '#/components/schemas/DisplayName'
          description: The chat display name of the sender.
        ParticipantRole:
          allOf:
          - $ref: '#/components/schemas/ParticipantRole'
          description: The role of the sender. For example, is it a customer, agent,
            or system.
        Attachments:
          allOf:
          - $ref: '#/components/schemas/Attachments'
          description: Provides information about the attachments.
        MessageMetadata:
          allOf:
          - $ref: '#/components/schemas/MessageMetadata'
          description: The metadata related to the message. Currently this supports
            only information related to message receipts.
        RelatedContactId:
          allOf:
          - $ref: '#/components/schemas/ContactId'
          description: The contactId on which the transcript item was originally sent.
            This field is only populated for persistent chats when the transcript
            item is from the past chat session. For more information, see [Enable
            persistent chat](https://docs.aws.amazon.com/connect/latest/adminguide/chat-persistence.html).
        ContactId:
          allOf:
          - $ref: '#/components/schemas/ContactId'
          description: The contactId on which the transcript item was originally sent.
            This field is populated only when the transcript item is from the current
            chat session.
      description: An item - message or event - that has been sent.
    MaxResults:
      type: integer
      default: 0
      minimum: 0
      maximum: 100
    Message:
      type: string
    MessageMetadata:
      type: object
      properties:
        MessageId:
          allOf:
          - $ref: '#/components/schemas/ChatItemId'
          description: The identifier of the message that contains the metadata information.
        Receipts:
          allOf:
          - $ref: '#/components/schemas/Receipts'
          description: The list of receipt information for a message for different
            recipients.
      description: Contains metadata related to a message.
    MostRecent:
      type: integer
      default: 0
      minimum: 0
      maximum: 100
    NextToken:
      type: string
      minLength: 1
      maxLength: 1000
    NonEmptyClientToken:
      type: string
      minLength: 1
      maxLength: 500
    ParticipantId:
      type: string
      minLength: 1
      maxLength: 256
    ParticipantRole:
      type: string
      enum:
      - AGENT
      - CUSTOMER
      - SYSTEM
      - CUSTOM_BOT
      - SUPERVISOR
    ParticipantToken:
      type: string
      minLength: 1
      maxLength: 1000
    PreSignedAttachmentUrl:
      type: string
      minLength: 1
      maxLength: 2000
    PreSignedConnectionUrl:
      type: string
      minLength: 1
      maxLength: 2000
    Reason:
      type: string
      minLength: 1
      maxLength: 2000
    Receipt:
      type: object
      properties:
        DeliveredTimestamp:
          allOf:
          - $ref: '#/components/schemas/Instant'
          description: The time when the message was delivered to the recipient.
        ReadTimestamp:
          allOf:
          - $ref: '#/components/schemas/Instant'
          description: The time when the message was read by the recipient.
        RecipientParticipantId:
          allOf:
          - $ref: '#/components/schemas/ParticipantId'
          description: The identifier of the recipient of the message.
      description: The receipt for the message delivered to the recipient.
    Receipts:
      type: array
      items:
        $ref: '#/components/schemas/Receipt'
    RedirectURI:
      type: string
      minLength: 1
      maxLength: 1024
    ResourceId:
      type: string
    ResourceNotFoundException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/Message'
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          description: The identifier of the resource.
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          description: The type of Amazon Connect resource.
      description: The resource was not found.
    ResourceType:
      type: string
      enum:
      - CONTACT
      - CONTACT_FLOW
      - INSTANCE
      - PARTICIPANT
      - HIERARCHY_LEVEL
      - HIERARCHY_GROUP
      - USER
      - PHONE_NUMBER
    ScanDirection:
      type: string
      enum:
      - FORWARD
      - BACKWARD
    SendEventRequest:
      type: object
      properties:
        ContentType:
          allOf:
          - $ref: '#/components/schemas/ChatContentType'
          description: "The content type of the request. Supported types are:\n\n\
            \  * application/vnd.amazonaws.connect.event.typing\n\n  * application/vnd.amazonaws.connect.event.connection.acknowledged\
            \ (will be deprecated on December 31, 2024) \n\n  * application/vnd.amazonaws.connect.event.message.delivered\n\
            \n  * application/vnd.amazonaws.connect.event.message.read"
        Content:
          allOf:
          - $ref: '#/components/schemas/ChatContent'
          description: 'The content of the event to be sent (for example, message
            text). For content related to message receipts, this is supported in the
            form of a JSON string.


            Sample Content: "{\"messageId\":\"11111111-aaaa-bbbb-cccc-EXAMPLE01234\"}"'
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. If not provided, the Amazon Web Services
            SDK populates this field. For more information about idempotency, see
            [Making retries safe with idempotent APIs](https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/).
        ConnectionToken:
          allOf:
          - $ref: '#/components/schemas/ParticipantToken'
          description: The authentication token associated with the participant's
            connection.
      required:
      - ContentType
      - ConnectionToken
    SendEventResponse:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/ChatItemId'
          description: The ID of the response.
        AbsoluteTime:
          allOf:
          - $ref: '#/components/schemas/Instant'
          description: 'The time when the event was sent.


            It''s specified in ISO 8601 format: yyyy-MM-ddThh:mm:ss.SSSZ. For example,
            2019-11-08T02:41:28.172Z.'
    SendMessageRequest:
      type: object
      properties:
        ContentType:
          allOf:
          - $ref: '#/components/schemas/ChatContentType'
          description: The type of the content. Supported types are `text/plain`,
            `text/markdown`, `application/json`, and `application/vnd.amazonaws.connect.message.interactive.response`.
        Content:
          allOf:
          - $ref: '#/components/schemas/ChatContent'
          description: "The content of the message.\n\n  * For `text/plain` and `text/markdown`,\
            \ the Length Constraints are Minimum of 1, Maximum of 1024. \n\n  * For\
            \ `application/json`, the Length Constraints are Minimum of 1, Maximum\
            \ of 12000. \n\n  * For `application/vnd.amazonaws.connect.message.interactive.response`,\
            \ the Length Constraints are Minimum of 1, Maximum of 12288."
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. If not provided, the Amazon Web Services
            SDK populates this field. For more information about idempotency, see
            [Making retries safe with idempotent APIs](https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/).
        ConnectionToken:
          allOf:
          - $ref: '#/components/schemas/ParticipantToken'
          description: The authentication token associated with the connection.
      required:
      - ContentType
      - Content
      - ConnectionToken
    SendMessageResponse:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/ChatItemId'
          description: The ID of the message.
        AbsoluteTime:
          allOf:
          - $ref: '#/components/schemas/Instant'
          description: 'The time when the message was sent.


            It''s specified in ISO 8601 format: yyyy-MM-ddThh:mm:ss.SSSZ. For example,
            2019-11-08T02:41:28.172Z.'
    ServiceQuotaExceededException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/Message'
      required:
      - Message
      description: The number of attachments per contact exceeds the quota.
    SessionId:
      type: string
      minLength: 36
      maxLength: 36
    SortKey:
      type: string
      enum:
      - DESCENDING
      - ASCENDING
    StartAttachmentUploadRequest:
      type: object
      properties:
        ContentType:
          allOf:
          - $ref: '#/components/schemas/ContentType'
          description: Describes the MIME file type of the attachment. For a list
            of supported file types, see [Feature specifications](https://docs.aws.amazon.com/connect/latest/adminguide/feature-limits.html)
            in the _Amazon Connect Administrator Guide_.
        AttachmentSizeInBytes:
          allOf:
          - $ref: '#/components/schemas/AttachmentSizeInBytes'
          description: The size of the attachment in bytes.
        AttachmentName:
          allOf:
          - $ref: '#/components/schemas/AttachmentName'
          description: A case-sensitive name of the attachment being uploaded.
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/NonEmptyClientToken'
          description: A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. If not provided, the Amazon Web Services
            SDK populates this field. For more information about idempotency, see
            [Making retries safe with idempotent APIs](https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/).
        ConnectionToken:
          allOf:
          - $ref: '#/components/schemas/ParticipantToken'
          description: The authentication token associated with the participant's
            connection.
      required:
      - ContentType
      - AttachmentSizeInBytes
      - AttachmentName
      - ClientToken
      - ConnectionToken
    StartAttachmentUploadResponse:
      type: object
      properties:
        AttachmentId:
          allOf:
          - $ref: '#/components/schemas/ArtifactId'
          description: A unique identifier for the attachment.
        UploadMetadata:
          allOf:
          - $ref: '#/components/schemas/UploadMetadata'
          description: The headers to be provided while uploading the file to the
            URL.
    StartPosition:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/ChatItemId'
          description: The ID of the message or event where to start.
        AbsoluteTime:
          allOf:
          - $ref: '#/components/schemas/Instant'
          description: 'The time in ISO format where to start.


            It''s specified in ISO 8601 format: yyyy-MM-ddThh:mm:ss.SSSZ. For example,
            2019-11-08T02:41:28.172Z.'
        MostRecent:
          allOf:
          - $ref: '#/components/schemas/MostRecent'
          description: The start position of the most recent message where you want
            to start.
      description: A filtering option for where to start. For example, if you sent
        100 messages, start with message 50.
    ThrottlingException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/Message'
      required:
      - Message
      description: The request was denied due to request throttling.
    Transcript:
      type: array
      items:
        $ref: '#/components/schemas/Item'
    URLExpiryInSeconds:
      type: integer
      minimum: 5
      maximum: 300
    UploadMetadata:
      type: object
      properties:
        Url:
          allOf:
          - $ref: '#/components/schemas/UploadMetadataUrl'
          description: This is the pre-signed URL that can be used for uploading the
            file to Amazon S3 when used in response to [StartAttachmentUpload](https://docs.aws.amazon.com/connect-participant/latest/APIReference/API_StartAttachmentUpload.html).
        UrlExpiry:
          allOf:
          - $ref: '#/components/schemas/ISO8601Datetime'
          description: 'The expiration time of the URL in ISO timestamp. It''s specified
            in ISO 8601 format: yyyy-MM-ddThh:mm:ss.SSSZ. For example, 2019-11-08T02:41:28.172Z.'
        HeadersToInclude:
          allOf:
          - $ref: '#/components/schemas/UploadMetadataSignedHeaders'
          description: The headers to be provided while uploading the file to the
            URL.
      description: Fields to be used while uploading the attachment.
    UploadMetadataSignedHeaders:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/UploadMetadataSignedHeadersValue'
    UploadMetadataSignedHeadersKey:
      type: string
      minLength: 1
      maxLength: 128
    UploadMetadataSignedHeadersValue:
      type: string
      minLength: 1
      maxLength: 256
    UploadMetadataUrl:
      type: string
      minLength: 1
      maxLength: 2000
    ValidationException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/Reason'
      required:
      - Message
      description: The input fails to satisfy the constraints specified by Amazon
        Connect.
    View:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/ViewId'
          description: The identifier of the view.
        Arn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the view.
        Name:
          allOf:
          - $ref: '#/components/schemas/ViewName'
          description: The name of the view.
        Version:
          allOf:
          - $ref: '#/components/schemas/ViewVersion'
          description: The current version of the view.
        Content:
          allOf:
          - $ref: '#/components/schemas/ViewContent'
          description: View content containing all content necessary to render a view
            except for runtime input data.
      description: A view resource object. Contains metadata and content necessary
        to render the view.
    ViewAction:
      type: string
      pattern: ^([\p{L}\p{N}_.:\/=+\-@()']+[\p{L}\p{Z}\p{N}_.:\/=+\-@()']*)$
      minLength: 1
      maxLength: 255
    ViewActions:
      type: array
      items:
        $ref: '#/components/schemas/ViewAction'
    ViewContent:
      type: object
      properties:
        InputSchema:
          allOf:
          - $ref: '#/components/schemas/ViewInputSchema'
          description: The schema representing the input data that the view template
            must be supplied to render.
        Template:
          allOf:
          - $ref: '#/components/schemas/ViewTemplate'
          description: The view template representing the structure of the view.
        Actions:
          allOf:
          - $ref: '#/components/schemas/ViewActions'
          description: A list of actions possible from the view
      description: View content containing all content necessary to render a view
        except for runtime input data.
    ViewId:
      type: string
      pattern: ^[a-zA-Z0-9\_\-:\/$]+$
      minLength: 1
      maxLength: 500
    ViewInputSchema:
      type: string
    ViewName:
      type: string
      pattern: ^([\p{L}\p{N}_.:\/=+\-@()']+[\p{L}\p{Z}\p{N}_.:\/=+\-@()']*)$
      minLength: 1
      maxLength: 255
    ViewTemplate:
      type: string
    ViewToken:
      type: string
      minLength: 1
      maxLength: 1000
    ViewVersion:
      type: integer
    Websocket:
      type: object
      properties:
        Url:
          allOf:
          - $ref: '#/components/schemas/PreSignedConnectionUrl'
          description: The URL of the websocket.
        ConnectionExpiry:
          allOf:
          - $ref: '#/components/schemas/ISO8601Datetime'
          description: 'The URL expiration timestamp in ISO date format.


            It''s specified in ISO 8601 format: yyyy-MM-ddThh:mm:ss.SSSZ. For example,
            2019-11-08T02:41:28.172Z.'
      description: The websocket for the participant's connection.
