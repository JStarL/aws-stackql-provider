openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: ivs_realtime
  x-aws-serviceName: ivsrealtime
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-05'
  version: '2020-07-14'
  title: Amazon Interactive Video Service RealTime
  description: |-
    The Amazon Interactive Video Service (IVS) real-time API is REST compatible, using a standard HTTP API and an AWS EventBridge event stream for responses. JSON is used for both requests and responses, including errors.

    **Key Concepts**

      * **Stage** — A virtual space where participants can exchange video in real time.

      * **Participant token** — A token that authenticates a participant when they join a stage.

      * **Participant object** — Represents participants (people) in the stage and contains information about them. When a token is created, it includes a participant ID; when a participant uses that token to join a stage, the participant is associated with that participant ID. There is a 1:1 mapping between participant tokens and participants.

    For server-side composition:

      * **Composition process** — Composites participants of a stage into a single video and forwards it to a set of outputs (e.g., IVS channels). Composition operations support this process.

      * **Composition** — Controls the look of the outputs, including how participants are positioned in the video.

    For more information about your IVS live stream, also see [Getting Started with Amazon IVS Real-Time Streaming](https://docs.aws.amazon.com/ivs/latest/RealTimeUserGuide/getting-started.html).

    **Tagging**

    A _tag_ is a metadata label that you assign to an AWS resource. A tag comprises a _key_ and a _value_ , both set by you. For example, you might set a tag as `topic:nature` to label a particular video category. See [Best practices and strategies](https://docs.aws.amazon.com/tag-editor/latest/userguide/best-practices-and-strats.html) in _Tagging AWS Resources and Tag Editor_ for details, including restrictions that apply to tags and "Tag naming limits and requirements"; Amazon IVS stages has no service-specific constraints beyond what is documented there.

    Tags can help you identify and organize your AWS resources. For example, you can use the same tag for different resources to indicate that they are related. You can also use tags to manage access (see [Access Tags](https://docs.aws.amazon.com/IAM/latest/UserGuide/access_tags.html)).

    The Amazon IVS real-time API has these tag-related operations: TagResource, UntagResource, and ListTagsForResource. The following resource supports tagging: Stage.

    At most 50 tags can be applied to a resource.
servers:
- description: The Amazon Interactive Video Service RealTime regional endpoint
  url: https://ivsrealtime.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths: {}
components:
  schemas:
    AttributeKey:
      type: string
      pattern: ^[a-zA-Z0-9-_]*$
      minLength: 0
      maxLength: 128
    AutoParticipantRecordingStorageConfigurationArn:
      type: string
      pattern: ^^$|^arn:aws:ivs:[a-z0-9-]+:[0-9]+:storage-configuration/[a-zA-Z0-9-]+$$
      minLength: 0
      maxLength: 128
    Bitrate:
      type: integer
      minimum: 1
      maximum: 8500000
    Boolean:
      type: boolean
      default: false
    ChannelArn:
      type: string
      pattern: ^arn:aws:ivs:[a-z0-9-]+:[0-9]+:channel/[a-zA-Z0-9-]+$
      minLength: 1
      maxLength: 128
    CompositionArn:
      type: string
      pattern: ^arn:aws:ivs:[a-z0-9-]+:[0-9]+:composition/[a-zA-Z0-9-]+$
      minLength: 1
      maxLength: 128
    CompositionClientToken:
      type: string
      pattern: ^[a-zA-Z0-9-_]*$
      minLength: 1
      maxLength: 64
    CompositionRecordingTargetSegmentDurationSeconds:
      type: integer
      default: 2
      minimum: 2
      maximum: 10
    CompositionState:
      type: string
      enum:
      - STARTING
      - ACTIVE
      - STOPPING
      - FAILED
      - STOPPED
    CompositionSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/CompositionSummary'
    CompositionThumbnailConfigurationList:
      type: array
      items:
        $ref: '#/components/schemas/CompositionThumbnailConfiguration'
    DestinationConfigurationList:
      type: array
      items:
        $ref: '#/components/schemas/DestinationConfiguration'
    DestinationConfigurationName:
      type: string
      pattern: ^[a-zA-Z0-9-_]*$
      minLength: 0
      maxLength: 128
    DestinationList:
      type: array
      items:
        $ref: '#/components/schemas/Destination'
    DestinationState:
      type: string
      enum:
      - STARTING
      - ACTIVE
      - STOPPING
      - RECONNECTING
      - FAILED
      - STOPPED
    DestinationSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/DestinationSummary'
    DisconnectParticipantReason:
      type: string
      minLength: 0
      maxLength: 128
    EncoderConfigurationArn:
      type: string
      pattern: ^arn:aws:ivs:[a-z0-9-]+:[0-9]+:encoder-configuration/[a-zA-Z0-9-]+$
      minLength: 1
      maxLength: 128
    EncoderConfigurationArnList:
      type: array
      items:
        $ref: '#/components/schemas/EncoderConfigurationArn'
    EncoderConfigurationName:
      type: string
      pattern: ^[a-zA-Z0-9-_]*$
      minLength: 0
      maxLength: 128
    EncoderConfigurationSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/EncoderConfigurationSummary'
    EventErrorCode:
      type: string
      enum:
      - INSUFFICIENT_CAPABILITIES
      - QUOTA_EXCEEDED
      - PUBLISHER_NOT_FOUND
      - BITRATE_EXCEEDED
      - RESOLUTION_EXCEEDED
      - STREAM_DURATION_EXCEEDED
      - INVALID_AUDIO_CODEC
      - INVALID_VIDEO_CODEC
      - INVALID_PROTOCOL
      - INVALID_STREAM_KEY
      - REUSE_OF_STREAM_KEY
      - B_FRAME_PRESENT
      - INVALID_INPUT
      - INTERNAL_SERVER_EXCEPTION
    EventList:
      type: array
      items:
        $ref: '#/components/schemas/Event'
    EventName:
      type: string
      enum:
      - JOINED
      - LEFT
      - PUBLISH_STARTED
      - PUBLISH_STOPPED
      - SUBSCRIBE_STARTED
      - SUBSCRIBE_STOPPED
      - PUBLISH_ERROR
      - SUBSCRIBE_ERROR
      - JOIN_ERROR
    Framerate:
      type: number
      format: float
      minimum: 1
      maximum: 60
    GridGap:
      type: integer
      default: 0
      minimum: 0
    Height:
      type: integer
      minimum: 2
      maximum: 1920
    IngestConfigurationArn:
      type: string
      pattern: ^arn:aws:ivs:[a-z0-9-]+:[0-9]+:ingest-configuration/[a-zA-Z0-9-]+$
      minLength: 1
      maxLength: 128
    IngestConfigurationList:
      type: array
      items:
        $ref: '#/components/schemas/IngestConfigurationSummary'
    IngestConfigurationName:
      type: string
      pattern: ^[a-zA-Z0-9-_]*$
      minLength: 0
      maxLength: 128
    IngestConfigurationStageArn:
      type: string
      pattern: ^^$|^arn:aws:ivs:[a-z0-9-]+:[0-9]+:stage/[a-zA-Z0-9-]+$$
      minLength: 0
      maxLength: 128
    IngestConfigurationState:
      type: string
      enum:
      - ACTIVE
      - INACTIVE
    IngestProtocol:
      type: string
      enum:
      - RTMP
      - RTMPS
    InsecureIngest:
      type: boolean
      default: false
    MaxCompositionResults:
      type: integer
      minimum: 1
      maximum: 100
    MaxEncoderConfigurationResults:
      type: integer
      minimum: 1
      maximum: 100
    MaxIngestConfigurationResults:
      type: integer
      minimum: 1
      maximum: 100
    MaxParticipantEventResults:
      type: integer
      minimum: 1
      maximum: 100
    MaxParticipantResults:
      type: integer
      minimum: 1
      maximum: 100
    MaxPublicKeyResults:
      type: integer
      minimum: 1
      maximum: 100
    MaxStageResults:
      type: integer
      minimum: 1
      maximum: 100
    MaxStageSessionResults:
      type: integer
      minimum: 1
      maximum: 100
    MaxStorageConfigurationResults:
      type: integer
      minimum: 1
      maximum: 100
    OmitStoppedVideo:
      type: boolean
      default: false
    PaginationToken:
      type: string
      pattern: ^[a-zA-Z0-9+/=_-]*$
      minLength: 0
      maxLength: 1024
    ParticipantAttributes:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/String'
    ParticipantClientAttribute:
      type: string
      pattern: ^[a-zA-Z0-9-_.,:;\s]*$
      minLength: 0
      maxLength: 128
    ParticipantId:
      type: string
      pattern: ^[a-zA-Z0-9-]*$
      minLength: 0
      maxLength: 64
    ParticipantList:
      type: array
      items:
        $ref: '#/components/schemas/ParticipantSummary'
    ParticipantProtocol:
      type: string
      enum:
      - UNKNOWN
      - WHIP
      - RTMP
      - RTMPS
    ParticipantRecordingFilterByRecordingState:
      type: string
      enum:
      - STARTING
      - ACTIVE
      - STOPPING
      - STOPPED
      - FAILED
    ParticipantRecordingMediaType:
      type: string
      enum:
      - AUDIO_VIDEO
      - AUDIO_ONLY
      - NONE
    ParticipantRecordingMediaTypeList:
      type: array
      items:
        $ref: '#/components/schemas/ParticipantRecordingMediaType'
    ParticipantRecordingReconnectWindowSeconds:
      type: integer
      default: 0
      minimum: 0
      maximum: 300
    ParticipantRecordingS3BucketName:
      type: string
      pattern: ^[a-z0-9-.]*$
      minLength: 0
      maxLength: 63
    ParticipantRecordingS3Prefix:
      type: string
      pattern: ^[a-zA-Z0-9-]*$
      minLength: 0
      maxLength: 256
    ParticipantRecordingState:
      type: string
      enum:
      - STARTING
      - ACTIVE
      - STOPPING
      - STOPPED
      - FAILED
      - DISABLED
    ParticipantRecordingTargetSegmentDurationSeconds:
      type: integer
      default: 6
      minimum: 2
      maximum: 10
    ParticipantState:
      type: string
      enum:
      - CONNECTED
      - DISCONNECTED
    ParticipantTokenAttributes:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/String'
    ParticipantTokenCapabilities:
      type: array
      items:
        $ref: '#/components/schemas/ParticipantTokenCapability'
    ParticipantTokenCapability:
      type: string
      enum:
      - PUBLISH
      - SUBSCRIBE
    ParticipantTokenConfigurations:
      type: array
      items:
        $ref: '#/components/schemas/ParticipantTokenConfiguration'
    ParticipantTokenDurationMinutes:
      type: integer
      minimum: 1
      maximum: 20160
    ParticipantTokenExpirationTime:
      type: string
      format: date-time
    ParticipantTokenId:
      type: string
    ParticipantTokenList:
      type: array
      items:
        $ref: '#/components/schemas/ParticipantToken'
    ParticipantTokenString:
      type: string
    ParticipantTokenUserId:
      type: string
      minLength: 0
      maxLength: 128
    PipBehavior:
      type: string
      enum:
      - STATIC
      - DYNAMIC
    PipHeight:
      type: integer
      minimum: 1
    PipOffset:
      type: integer
      default: 0
      minimum: 0
    PipPosition:
      type: string
      enum:
      - TOP_LEFT
      - TOP_RIGHT
      - BOTTOM_LEFT
      - BOTTOM_RIGHT
    PipWidth:
      type: integer
      minimum: 1
    PublicKeyArn:
      type: string
      pattern: ^arn:aws:ivs:[a-z0-9-]+:[0-9]+:public-key/[a-zA-Z0-9-]+$
      minLength: 1
      maxLength: 128
    PublicKeyFingerprint:
      type: string
    PublicKeyList:
      type: array
      items:
        $ref: '#/components/schemas/PublicKeySummary'
    PublicKeyMaterial:
      type: string
      pattern: '-----BEGIN PUBLIC KEY-----\r?\n([a-zA-Z0-9+/=\r\n]+)\r?\n-----END
        PUBLIC KEY-----(\r?\n)?'
    PublicKeyName:
      type: string
      pattern: ^[a-zA-Z0-9-_]*$
      minLength: 0
      maxLength: 128
    Published:
      type: boolean
      default: false
    RecordingConfigurationFormat:
      type: string
      enum:
      - HLS
    ResourceArn:
      type: string
      pattern: ^arn:aws:ivs:[a-z0-9-]+:[0-9]+:[a-z-]/[a-zA-Z0-9-]+$
      minLength: 1
      maxLength: 128
    S3BucketName:
      type: string
      pattern: ^[a-z0-9-.]+$
      minLength: 3
      maxLength: 63
    StageArn:
      type: string
      pattern: ^arn:aws:ivs:[a-z0-9-]+:[0-9]+:stage/[a-zA-Z0-9-]+$
      minLength: 1
      maxLength: 128
    StageEndpoint:
      type: string
      minLength: 0
      maxLength: 2048
    StageName:
      type: string
      pattern: ^[a-zA-Z0-9-_]*$
      minLength: 0
      maxLength: 128
    StageSessionId:
      type: string
      pattern: ^st-[a-zA-Z0-9]+$
      minLength: 16
      maxLength: 16
    StageSessionList:
      type: array
      items:
        $ref: '#/components/schemas/StageSessionSummary'
    StageSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/StageSummary'
    StorageConfigurationArn:
      type: string
      pattern: ^arn:aws:ivs:[a-z0-9-]+:[0-9]+:storage-configuration/[a-zA-Z0-9-]+$
      minLength: 1
      maxLength: 128
    StorageConfigurationName:
      type: string
      pattern: ^[a-zA-Z0-9-_]*$
      minLength: 0
      maxLength: 128
    StorageConfigurationSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/StorageConfigurationSummary'
    StreamKey:
      type: string
      pattern: ^rt_[0-9]+_[a-z0-9-]+_[a-zA-Z0-9-]+_.+$
    String:
      type: string
    TagKey:
      type: string
      minLength: 1
      maxLength: 128
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
    TagValue:
      type: string
      maxLength: 256
    Tags:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
    ThumbnailIntervalSeconds:
      type: integer
      minimum: 1
      maximum: 86400
    ThumbnailRecordingMode:
      type: string
      enum:
      - INTERVAL
      - DISABLED
    ThumbnailStorageType:
      type: string
      enum:
      - SEQUENTIAL
      - LATEST
    ThumbnailStorageTypeList:
      type: array
      items:
        $ref: '#/components/schemas/ThumbnailStorageType'
    Time:
      type: string
      format: date-time
    UserId:
      type: string
      minLength: 0
      maxLength: 128
    VideoAspectRatio:
      type: string
      enum:
      - AUTO
      - VIDEO
      - SQUARE
      - PORTRAIT
    VideoFillMode:
      type: string
      enum:
      - FILL
      - COVER
      - CONTAIN
    Width:
      type: integer
      minimum: 2
      maximum: 1920
    errorMessage:
      type: string
