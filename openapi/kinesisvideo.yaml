openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: kinesis_video
  x-aws-serviceName: kinesisvideo
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-07'
  version: '2017-09-30'
  title: Amazon Kinesis Video Streams
  description: ""
servers:
- description: The Amazon Kinesis Video Streams regional endpoint
  url: https://kinesisvideo.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths:
  /createSignalingChannel:
    post:
      operationId: CreateSignalingChannel
      description: |-
        Creates a signaling channel.

        `CreateSignalingChannel` is an asynchronous operation.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ChannelName:
                  $ref: '#/components/schemas/ChannelName'
                ChannelType:
                  $ref: '#/components/schemas/ChannelType'
                SingleMasterConfiguration:
                  $ref: '#/components/schemas/SingleMasterConfiguration'
                Tags:
                  $ref: '#/components/schemas/TagOnCreateList'
      responses:
        '200': {}
        '401':
          description: |-
            You do not have required permissions to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            You have exceeded the limit of tags that you can associate with the resource. A Kinesis video stream can support up to 50 tags.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsPerResourceExceededLimitException'
  /createStream:
    post:
      operationId: CreateStream
      description: |-
        Creates a new Kinesis video stream.

        When you create a new stream, Kinesis Video Streams assigns it a version number. When you change the stream's metadata, Kinesis Video Streams updates the version.

        `CreateStream` is an asynchronous operation.

        For information about how the service works, see [How it Works](https://docs.aws.amazon.com/kinesisvideostreams/latest/dg/how-it-works.html).

        You must have permissions for the `KinesisVideo:CreateStream` action.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                DeviceName:
                  $ref: '#/components/schemas/DeviceName'
                StreamName:
                  $ref: '#/components/schemas/StreamName'
                MediaType:
                  $ref: '#/components/schemas/MediaType'
                KmsKeyId:
                  $ref: '#/components/schemas/KmsKeyId'
                DataRetentionInHours:
                  $ref: '#/components/schemas/DataRetentionInHours'
                Tags:
                  $ref: '#/components/schemas/ResourceTags'
      responses:
        '200': {}
        '400':
          description: |-
            You have exceeded the limit of tags that you can associate with the resource. A Kinesis video stream can support up to 50 tags.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsPerResourceExceededLimitException'
  /deleteEdgeConfiguration:
    post:
      operationId: DeleteEdgeConfiguration
      description: |-
        An asynchronous API that deletes a stream’s existing edge configuration, as well as the corresponding media from the Edge Agent.

        When you invoke this API, the sync status is set to `DELETING`. A deletion process starts, in which active edge jobs are stopped and all media is deleted from the edge device. The time to delete varies, depending on the total amount of stored media. If the deletion process fails, the sync status changes to `DELETE_FAILED`. You will need to re-try the deletion.

        When the deletion process has completed successfully, the edge configuration is no longer accessible.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                StreamName:
                  $ref: '#/components/schemas/StreamName'
                StreamARN:
                  $ref: '#/components/schemas/ResourceARN'
      responses:
        '200': {}
        '401':
          description: |-
            You do not have required permissions to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            The value for this input parameter is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArgumentException'
        '404':
          description: |-
            The Exception rendered when the Amazon Kinesis Video Stream can't find a stream's edge configuration that you specified.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamEdgeConfigurationNotFoundException'
  /deleteSignalingChannel:
    post:
      operationId: DeleteSignalingChannel
      description: |-
        Deletes a specified signaling channel. `DeleteSignalingChannel` is an asynchronous operation. If you don't specify the channel's current version, the most recent version is deleted.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ChannelARN:
                  $ref: '#/components/schemas/ResourceARN'
                CurrentVersion:
                  $ref: '#/components/schemas/Version'
      responses:
        '200': {}
        '401':
          description: |-
            You do not have required permissions to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            The stream version that you specified is not the latest version. To get the latest version, use the [DescribeStream](https://docs.aws.amazon.com/kinesisvideostreams/latest/dg/API_DescribeStream.html) API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionMismatchException'
        '404':
          description: |-
            Amazon Kinesis Video Streams can't find the stream that you specified.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /deleteStream:
    post:
      operationId: DeleteStream
      description: |-
        Deletes a Kinesis video stream and the data contained in the stream.

        This method marks the stream for deletion, and makes the data in the stream inaccessible immediately.

        To ensure that you have the latest version of the stream before deleting it, you can specify the stream version. Kinesis Video Streams assigns a version to each stream. When you update a stream, Kinesis Video Streams assigns a new version number. To get the latest stream version, use the `DescribeStream` API.

        This operation requires permission for the `KinesisVideo:DeleteStream` action.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                StreamARN:
                  $ref: '#/components/schemas/ResourceARN'
                CurrentVersion:
                  $ref: '#/components/schemas/Version'
      responses:
        '200': {}
        '400':
          description: |-
            The stream version that you specified is not the latest version. To get the latest version, use the [DescribeStream](https://docs.aws.amazon.com/kinesisvideostreams/latest/dg/API_DescribeStream.html) API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionMismatchException'
        '401':
          description: |-
            The caller is not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
        '404':
          description: |-
            Amazon Kinesis Video Streams can't find the stream that you specified.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /describeEdgeConfiguration:
    post:
      operationId: DescribeEdgeConfiguration
      description: |-
        Describes a stream’s edge configuration that was set using the `StartEdgeConfigurationUpdate` API and the latest status of the edge agent's recorder and uploader jobs. Use this API to get the status of the configuration to determine if the configuration is in sync with the Edge Agent. Use this API to evaluate the health of the Edge Agent.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                StreamName:
                  $ref: '#/components/schemas/StreamName'
                StreamARN:
                  $ref: '#/components/schemas/ResourceARN'
      responses:
        '200': {}
        '401':
          description: |-
            You do not have required permissions to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            The value for this input parameter is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArgumentException'
        '404':
          description: |-
            The Exception rendered when the Amazon Kinesis Video Stream can't find a stream's edge configuration that you specified.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamEdgeConfigurationNotFoundException'
  /describeImageGenerationConfiguration:
    post:
      operationId: DescribeImageGenerationConfiguration
      description: |-
        Gets the `ImageGenerationConfiguration` for a given Kinesis video stream.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                StreamName:
                  $ref: '#/components/schemas/StreamName'
                StreamARN:
                  $ref: '#/components/schemas/ResourceARN'
      responses:
        '200': {}
        '401':
          description: |-
            You do not have required permissions to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            The value for this input parameter is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArgumentException'
        '404':
          description: |-
            Amazon Kinesis Video Streams can't find the stream that you specified.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /describeMappedResourceConfiguration:
    post:
      operationId: DescribeMappedResourceConfiguration
      description: |-
        Returns the most current information about the stream. The `streamName` or `streamARN` should be provided in the input.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                StreamName:
                  $ref: '#/components/schemas/StreamName'
                StreamARN:
                  $ref: '#/components/schemas/ResourceARN'
                MaxResults:
                  $ref: '#/components/schemas/MappedResourceConfigurationListLimit'
                NextToken:
                  $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '401':
          description: |-
            You do not have required permissions to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            The value for this input parameter is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArgumentException'
        '404':
          description: |-
            Amazon Kinesis Video Streams can't find the stream that you specified.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /describeMediaStorageConfiguration:
    post:
      operationId: DescribeMediaStorageConfiguration
      description: |-
        Returns the most current information about the channel. Specify the `ChannelName` or `ChannelARN` in the input.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ChannelName:
                  $ref: '#/components/schemas/ChannelName'
                ChannelARN:
                  $ref: '#/components/schemas/ResourceARN'
      responses:
        '200': {}
        '401':
          description: |-
            You do not have required permissions to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            The value for this input parameter is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArgumentException'
        '404':
          description: |-
            Amazon Kinesis Video Streams can't find the stream that you specified.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /describeNotificationConfiguration:
    post:
      operationId: DescribeNotificationConfiguration
      description: |-
        Gets the `NotificationConfiguration` for a given Kinesis video stream.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                StreamName:
                  $ref: '#/components/schemas/StreamName'
                StreamARN:
                  $ref: '#/components/schemas/ResourceARN'
      responses:
        '200': {}
        '401':
          description: |-
            You do not have required permissions to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            The value for this input parameter is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArgumentException'
        '404':
          description: |-
            Amazon Kinesis Video Streams can't find the stream that you specified.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /describeSignalingChannel:
    post:
      operationId: DescribeSignalingChannel
      description: |-
        Returns the most current information about the signaling channel. You must specify either the name or the Amazon Resource Name (ARN) of the channel that you want to describe.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ChannelName:
                  $ref: '#/components/schemas/ChannelName'
                ChannelARN:
                  $ref: '#/components/schemas/ResourceARN'
      responses:
        '200': {}
        '401':
          description: |-
            You do not have required permissions to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            The value for this input parameter is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArgumentException'
        '404':
          description: |-
            Amazon Kinesis Video Streams can't find the stream that you specified.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /describeStream:
    post:
      operationId: DescribeStream
      description: |-
        Returns the most current information about the specified stream. You must specify either the `StreamName` or the `StreamARN`.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                StreamName:
                  $ref: '#/components/schemas/StreamName'
                StreamARN:
                  $ref: '#/components/schemas/ResourceARN'
      responses:
        '200': {}
        '400':
          description: |-
            The value for this input parameter is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArgumentException'
        '401':
          description: |-
            The caller is not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
        '404':
          description: |-
            Amazon Kinesis Video Streams can't find the stream that you specified.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /getDataEndpoint:
    post:
      operationId: GetDataEndpoint
      description: |-
        Gets an endpoint for a specified stream for either reading or writing. Use this endpoint in your application to read from the specified stream (using the `GetMedia` or `GetMediaForFragmentList` operations) or write to it (using the `PutMedia` operation).

        The returned endpoint does not have the API name appended. The client needs to add the API name to the returned endpoint.

        In the request, specify the stream either by `StreamName` or `StreamARN`.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                StreamName:
                  $ref: '#/components/schemas/StreamName'
                StreamARN:
                  $ref: '#/components/schemas/ResourceARN'
                APIName:
                  $ref: '#/components/schemas/APIName'
      responses:
        '200': {}
        '400':
          description: |-
            The value for this input parameter is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArgumentException'
        '401':
          description: |-
            The caller is not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
        '404':
          description: |-
            Amazon Kinesis Video Streams can't find the stream that you specified.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /getSignalingChannelEndpoint:
    post:
      operationId: GetSignalingChannelEndpoint
      description: |-
        Provides an endpoint for the specified signaling channel to send and receive messages. This API uses the `SingleMasterChannelEndpointConfiguration` input parameter, which consists of the `Protocols` and `Role` properties.

        `Protocols` is used to determine the communication mechanism. For example, if you specify `WSS` as the protocol, this API produces a secure websocket endpoint. If you specify `HTTPS` as the protocol, this API generates an HTTPS endpoint.

        `Role` determines the messaging permissions. A `MASTER` role results in this API generating an endpoint that a client can use to communicate with any of the viewers on the channel. A `VIEWER` role results in this API generating an endpoint that a client can use to communicate only with a `MASTER`.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ChannelARN:
                  $ref: '#/components/schemas/ResourceARN'
                SingleMasterChannelEndpointConfiguration:
                  $ref: '#/components/schemas/SingleMasterChannelEndpointConfiguration'
      responses:
        '200': {}
        '401':
          description: |-
            You do not have required permissions to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: "When the input `StreamARN` or `ChannelARN` in `CLOUD_STORAGE_MODE`\
            \ is already mapped to a different Kinesis Video Stream resource, or if\
            \ the provided input `StreamARN` or `ChannelARN` is not in Active status,\
            \ try one of the following :\n\n  1. The `DescribeMediaStorageConfiguration`\
            \ API to determine what the stream given channel is mapped to. \n\n  2.\
            \ The `DescribeMappedResourceConfiguration` API to determine the channel\
            \ that the given stream is mapped to. \n\n  3. The `DescribeStream` or\
            \ `DescribeSignalingChannel` API to determine the status of the resource."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
        '404':
          description: |-
            Amazon Kinesis Video Streams can't find the stream that you specified.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /listEdgeAgentConfigurations:
    post:
      operationId: ListEdgeAgentConfigurations
      description: |-
        Returns an array of edge configurations associated with the specified Edge Agent.

        In the request, you must specify the Edge Agent `HubDeviceArn`.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                HubDeviceArn:
                  $ref: '#/components/schemas/HubDeviceArn'
                MaxResults:
                  $ref: '#/components/schemas/ListEdgeAgentConfigurationsInputLimit'
                NextToken:
                  $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '400':
          description: |-
            The value for this input parameter is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArgumentException'
        '401':
          description: |-
            The caller is not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
  /listSignalingChannels:
    post:
      operationId: ListSignalingChannels
      description: |-
        Returns an array of `ChannelInfo` objects. Each object describes a signaling channel. To retrieve only those channels that satisfy a specific condition, you can specify a `ChannelNameCondition`.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                MaxResults:
                  $ref: '#/components/schemas/ListStreamsInputLimit'
                NextToken:
                  $ref: '#/components/schemas/NextToken'
                ChannelNameCondition:
                  $ref: '#/components/schemas/ChannelNameCondition'
      responses:
        '200': {}
        '401':
          description: |-
            You do not have required permissions to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            The value for this input parameter is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArgumentException'
  /listStreams:
    post:
      operationId: ListStreams
      description: |-
        Returns an array of `StreamInfo` objects. Each object describes a stream. To retrieve only streams that satisfy a specific condition, you can specify a `StreamNameCondition`.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                MaxResults:
                  $ref: '#/components/schemas/ListStreamsInputLimit'
                NextToken:
                  $ref: '#/components/schemas/NextToken'
                StreamNameCondition:
                  $ref: '#/components/schemas/StreamNameCondition'
      responses:
        '200': {}
        '400':
          description: |-
            The value for this input parameter is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArgumentException'
  /ListTagsForResource:
    post:
      operationId: ListTagsForResource
      description: |-
        Returns a list of tags associated with the specified signaling channel.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                NextToken:
                  $ref: '#/components/schemas/NextToken'
                ResourceARN:
                  $ref: '#/components/schemas/ResourceARN'
      responses:
        '200': {}
        '401':
          description: |-
            You do not have required permissions to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            The value for this input parameter is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArgumentException'
        '404':
          description: |-
            Amazon Kinesis Video Streams can't find the stream that you specified.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /listTagsForStream:
    post:
      operationId: ListTagsForStream
      description: |-
        Returns a list of tags associated with the specified stream.

        In the request, you must specify either the `StreamName` or the `StreamARN`.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                NextToken:
                  $ref: '#/components/schemas/NextToken'
                StreamARN:
                  $ref: '#/components/schemas/ResourceARN'
                StreamName:
                  $ref: '#/components/schemas/StreamName'
      responses:
        '200': {}
        '400':
          description: |-
            The format of the `StreamARN` is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidResourceFormatException'
        '401':
          description: |-
            The caller is not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
        '404':
          description: |-
            Amazon Kinesis Video Streams can't find the stream that you specified.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /startEdgeConfigurationUpdate:
    post:
      operationId: StartEdgeConfigurationUpdate
      description: |-
        An asynchronous API that updates a stream’s existing edge configuration. The Kinesis Video Stream will sync the stream’s edge configuration with the Edge Agent IoT Greengrass component that runs on an IoT Hub Device, setup at your premise. The time to sync can vary and depends on the connectivity of the Hub Device. The `SyncStatus` will be updated as the edge configuration is acknowledged, and synced with the Edge Agent.

        If this API is invoked for the first time, a new edge configuration will be created for the stream, and the sync status will be set to `SYNCING`. You will have to wait for the sync status to reach a terminal state such as: `IN_SYNC`, or `SYNC_FAILED`, before using this API again. If you invoke this API during the syncing process, a `ResourceInUseException` will be thrown. The connectivity of the stream’s edge configuration and the Edge Agent will be retried for 15 minutes. After 15 minutes, the status will transition into the `SYNC_FAILED` state.

        To move an edge configuration from one device to another, use DeleteEdgeConfiguration to delete the current edge configuration. You can then invoke StartEdgeConfigurationUpdate with an updated Hub Device ARN.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                StreamName:
                  $ref: '#/components/schemas/StreamName'
                StreamARN:
                  $ref: '#/components/schemas/ResourceARN'
                EdgeConfig:
                  $ref: '#/components/schemas/EdgeConfig'
      responses:
        '200': {}
        '401':
          description: |-
            You do not have required permissions to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: "When the input `StreamARN` or `ChannelARN` in `CLOUD_STORAGE_MODE`\
            \ is already mapped to a different Kinesis Video Stream resource, or if\
            \ the provided input `StreamARN` or `ChannelARN` is not in Active status,\
            \ try one of the following :\n\n  1. The `DescribeMediaStorageConfiguration`\
            \ API to determine what the stream given channel is mapped to. \n\n  2.\
            \ The `DescribeMappedResourceConfiguration` API to determine the channel\
            \ that the given stream is mapped to. \n\n  3. The `DescribeStream` or\
            \ `DescribeSignalingChannel` API to determine the status of the resource."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
        '404':
          description: |-
            Amazon Kinesis Video Streams can't find the stream that you specified.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /TagResource:
    post:
      operationId: TagResource
      description: |-
        Adds one or more tags to a signaling channel. A _tag_ is a key-value pair (the value is optional) that you can define and assign to Amazon Web Services resources. If you specify a tag that already exists, the tag value is replaced with the value that you specify in the request. For more information, see [Using Cost Allocation Tags](https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html) in the _Billing and Cost Management and Cost Management User Guide_.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ResourceARN:
                  $ref: '#/components/schemas/ResourceARN'
                Tags:
                  $ref: '#/components/schemas/TagList'
      responses:
        '200': {}
        '401':
          description: |-
            You do not have required permissions to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            You have exceeded the limit of tags that you can associate with the resource. A Kinesis video stream can support up to 50 tags.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsPerResourceExceededLimitException'
        '404':
          description: |-
            Amazon Kinesis Video Streams can't find the stream that you specified.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /tagStream:
    post:
      operationId: TagStream
      description: |-
        Adds one or more tags to a stream. A _tag_ is a key-value pair (the value is optional) that you can define and assign to Amazon Web Services resources. If you specify a tag that already exists, the tag value is replaced with the value that you specify in the request. For more information, see [Using Cost Allocation Tags](https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html) in the _Billing and Cost Management and Cost Management User Guide_.

        You must provide either the `StreamName` or the `StreamARN`.

        This operation requires permission for the `KinesisVideo:TagStream` action.

        A Kinesis video stream can support up to 50 tags.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                StreamARN:
                  $ref: '#/components/schemas/ResourceARN'
                StreamName:
                  $ref: '#/components/schemas/StreamName'
                Tags:
                  $ref: '#/components/schemas/ResourceTags'
      responses:
        '200': {}
        '400':
          description: |-
            You have exceeded the limit of tags that you can associate with the resource. A Kinesis video stream can support up to 50 tags.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsPerResourceExceededLimitException'
        '401':
          description: |-
            The caller is not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
        '404':
          description: |-
            Amazon Kinesis Video Streams can't find the stream that you specified.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /UntagResource:
    post:
      operationId: UntagResource
      description: |-
        Removes one or more tags from a signaling channel. In the request, specify only a tag key or keys; don't specify the value. If you specify a tag key that does not exist, it's ignored.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ResourceARN:
                  $ref: '#/components/schemas/ResourceARN'
                TagKeyList:
                  $ref: '#/components/schemas/TagKeyList'
      responses:
        '200': {}
        '401':
          description: |-
            You do not have required permissions to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            The value for this input parameter is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArgumentException'
        '404':
          description: |-
            Amazon Kinesis Video Streams can't find the stream that you specified.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /untagStream:
    post:
      operationId: UntagStream
      description: |-
        Removes one or more tags from a stream. In the request, specify only a tag key or keys; don't specify the value. If you specify a tag key that does not exist, it's ignored.

        In the request, you must provide the `StreamName` or `StreamARN`.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                StreamARN:
                  $ref: '#/components/schemas/ResourceARN'
                StreamName:
                  $ref: '#/components/schemas/StreamName'
                TagKeyList:
                  $ref: '#/components/schemas/TagKeyList'
      responses:
        '200': {}
        '400':
          description: |-
            The format of the `StreamARN` is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidResourceFormatException'
        '401':
          description: |-
            The caller is not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
        '404':
          description: |-
            Amazon Kinesis Video Streams can't find the stream that you specified.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /updateDataRetention:
    post:
      operationId: UpdateDataRetention
      description: |-
        Increases or decreases the stream's data retention period by the value that you specify. To indicate whether you want to increase or decrease the data retention period, specify the `Operation` parameter in the request body. In the request, you must specify either the `StreamName` or the `StreamARN`.

        This operation requires permission for the `KinesisVideo:UpdateDataRetention` action.

        Changing the data retention period affects the data in the stream as follows:

          * If the data retention period is increased, existing data is retained for the new retention period. For example, if the data retention period is increased from one hour to seven hours, all existing data is retained for seven hours.

          * If the data retention period is decreased, existing data is retained for the new retention period. For example, if the data retention period is decreased from seven hours to one hour, all existing data is retained for one hour, and any data older than one hour is deleted immediately.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                StreamName:
                  $ref: '#/components/schemas/StreamName'
                StreamARN:
                  $ref: '#/components/schemas/ResourceARN'
                CurrentVersion:
                  $ref: '#/components/schemas/Version'
                Operation:
                  $ref: '#/components/schemas/UpdateDataRetentionOperation'
                DataRetentionChangeInHours:
                  $ref: '#/components/schemas/DataRetentionChangeInHours'
      responses:
        '200': {}
        '400':
          description: |-
            The stream version that you specified is not the latest version. To get the latest version, use the [DescribeStream](https://docs.aws.amazon.com/kinesisvideostreams/latest/dg/API_DescribeStream.html) API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionMismatchException'
        '401':
          description: |-
            The caller is not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
        '404':
          description: |-
            Amazon Kinesis Video Streams can't find the stream that you specified.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /updateImageGenerationConfiguration:
    post:
      operationId: UpdateImageGenerationConfiguration
      description: |-
        Updates the `StreamInfo` and `ImageProcessingConfiguration` fields.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                StreamName:
                  $ref: '#/components/schemas/StreamName'
                StreamARN:
                  $ref: '#/components/schemas/ResourceARN'
                ImageGenerationConfiguration:
                  $ref: '#/components/schemas/ImageGenerationConfiguration'
      responses:
        '200': {}
        '401':
          description: |-
            You do not have required permissions to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: "When the input `StreamARN` or `ChannelARN` in `CLOUD_STORAGE_MODE`\
            \ is already mapped to a different Kinesis Video Stream resource, or if\
            \ the provided input `StreamARN` or `ChannelARN` is not in Active status,\
            \ try one of the following :\n\n  1. The `DescribeMediaStorageConfiguration`\
            \ API to determine what the stream given channel is mapped to. \n\n  2.\
            \ The `DescribeMappedResourceConfiguration` API to determine the channel\
            \ that the given stream is mapped to. \n\n  3. The `DescribeStream` or\
            \ `DescribeSignalingChannel` API to determine the status of the resource."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
        '404':
          description: |-
            Amazon Kinesis Video Streams can't find the stream that you specified.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /updateMediaStorageConfiguration:
    post:
      operationId: UpdateMediaStorageConfiguration
      description: "Associates a `SignalingChannel` to a stream to store the media.\
        \ There are two signaling modes that you can specify :\n\n  * If `StorageStatus`\
        \ is enabled, the data will be stored in the `StreamARN` provided. In order\
        \ for WebRTC Ingestion to work, the stream must have data retention enabled.\n\
        \n  * If `StorageStatus` is disabled, no data will be stored, and the `StreamARN`\
        \ parameter will not be needed. \n\nIf `StorageStatus` is enabled, direct\
        \ peer-to-peer (master-viewer) connections no longer occur. Peers connect\
        \ directly to the storage session. You must call the `JoinStorageSession`\
        \ API to trigger an SDP offer send and establish a connection between a peer\
        \ and the storage session."
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ChannelARN:
                  $ref: '#/components/schemas/ResourceARN'
                MediaStorageConfiguration:
                  $ref: '#/components/schemas/MediaStorageConfiguration'
      responses:
        '200': {}
        '401':
          description: |-
            You do not have required permissions to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: "When the input `StreamARN` or `ChannelARN` in `CLOUD_STORAGE_MODE`\
            \ is already mapped to a different Kinesis Video Stream resource, or if\
            \ the provided input `StreamARN` or `ChannelARN` is not in Active status,\
            \ try one of the following :\n\n  1. The `DescribeMediaStorageConfiguration`\
            \ API to determine what the stream given channel is mapped to. \n\n  2.\
            \ The `DescribeMappedResourceConfiguration` API to determine the channel\
            \ that the given stream is mapped to. \n\n  3. The `DescribeStream` or\
            \ `DescribeSignalingChannel` API to determine the status of the resource."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
        '404':
          description: |-
            Amazon Kinesis Video Streams can't find the stream that you specified.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /updateNotificationConfiguration:
    post:
      operationId: UpdateNotificationConfiguration
      description: |-
        Updates the notification information for a stream.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                StreamName:
                  $ref: '#/components/schemas/StreamName'
                StreamARN:
                  $ref: '#/components/schemas/ResourceARN'
                NotificationConfiguration:
                  $ref: '#/components/schemas/NotificationConfiguration'
      responses:
        '200': {}
        '401':
          description: |-
            You do not have required permissions to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: "When the input `StreamARN` or `ChannelARN` in `CLOUD_STORAGE_MODE`\
            \ is already mapped to a different Kinesis Video Stream resource, or if\
            \ the provided input `StreamARN` or `ChannelARN` is not in Active status,\
            \ try one of the following :\n\n  1. The `DescribeMediaStorageConfiguration`\
            \ API to determine what the stream given channel is mapped to. \n\n  2.\
            \ The `DescribeMappedResourceConfiguration` API to determine the channel\
            \ that the given stream is mapped to. \n\n  3. The `DescribeStream` or\
            \ `DescribeSignalingChannel` API to determine the status of the resource."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
        '404':
          description: |-
            Amazon Kinesis Video Streams can't find the stream that you specified.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /updateSignalingChannel:
    post:
      operationId: UpdateSignalingChannel
      description: |-
        Updates the existing signaling channel. This is an asynchronous operation and takes time to complete.

        If the `MessageTtlSeconds` value is updated (either increased or reduced), it only applies to new messages sent via this channel after it's been updated. Existing messages are still expired as per the previous `MessageTtlSeconds` value.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ChannelARN:
                  $ref: '#/components/schemas/ResourceARN'
                CurrentVersion:
                  $ref: '#/components/schemas/Version'
                SingleMasterConfiguration:
                  $ref: '#/components/schemas/SingleMasterConfiguration'
      responses:
        '200': {}
        '401':
          description: |-
            You do not have required permissions to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            The stream version that you specified is not the latest version. To get the latest version, use the [DescribeStream](https://docs.aws.amazon.com/kinesisvideostreams/latest/dg/API_DescribeStream.html) API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionMismatchException'
        '404':
          description: |-
            Amazon Kinesis Video Streams can't find the stream that you specified.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /updateStream:
    post:
      operationId: UpdateStream
      description: |-
        Updates stream metadata, such as the device name and media type.

        You must provide the stream name or the Amazon Resource Name (ARN) of the stream.

        To make sure that you have the latest version of the stream before updating it, you can specify the stream version. Kinesis Video Streams assigns a version to each stream. When you update a stream, Kinesis Video Streams assigns a new version number. To get the latest stream version, use the `DescribeStream` API.

        `UpdateStream` is an asynchronous operation, and takes time to complete.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                StreamName:
                  $ref: '#/components/schemas/StreamName'
                StreamARN:
                  $ref: '#/components/schemas/ResourceARN'
                CurrentVersion:
                  $ref: '#/components/schemas/Version'
                DeviceName:
                  $ref: '#/components/schemas/DeviceName'
                MediaType:
                  $ref: '#/components/schemas/MediaType'
      responses:
        '200': {}
        '400':
          description: |-
            The stream version that you specified is not the latest version. To get the latest version, use the [DescribeStream](https://docs.aws.amazon.com/kinesisvideostreams/latest/dg/API_DescribeStream.html) API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionMismatchException'
        '401':
          description: |-
            The caller is not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
        '404':
          description: |-
            Amazon Kinesis Video Streams can't find the stream that you specified.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
components:
  schemas:
    APIName:
      type: string
      enum:
      - PUT_MEDIA
      - GET_MEDIA
      - LIST_FRAGMENTS
      - GET_MEDIA_FOR_FRAGMENT_LIST
      - GET_HLS_STREAMING_SESSION_URL
      - GET_DASH_STREAMING_SESSION_URL
      - GET_CLIP
      - GET_IMAGES
    AccessDeniedException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      description: You do not have required permissions to perform this operation.
    AccountChannelLimitExceededException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      description: You have reached the maximum limit of active signaling channels
        for this Amazon Web Services account in this region.
    AccountStreamLimitExceededException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      description: The number of streams created for the account is too high.
    ChannelInfo:
      type: object
      properties:
        ChannelName:
          allOf:
          - $ref: '#/components/schemas/ChannelName'
          description: The name of the signaling channel.
        ChannelARN:
          allOf:
          - $ref: '#/components/schemas/ResourceARN'
          description: The Amazon Resource Name (ARN) of the signaling channel.
        ChannelType:
          allOf:
          - $ref: '#/components/schemas/ChannelType'
          description: The type of the signaling channel.
        ChannelStatus:
          allOf:
          - $ref: '#/components/schemas/Status'
          description: Current status of the signaling channel.
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the signaling channel was created.
        SingleMasterConfiguration:
          allOf:
          - $ref: '#/components/schemas/SingleMasterConfiguration'
          description: A structure that contains the configuration for the `SINGLE_MASTER`
            channel type.
        Version:
          allOf:
          - $ref: '#/components/schemas/Version'
          description: The current version of the signaling channel.
      description: A structure that encapsulates a signaling channel's metadata and
        properties.
    ChannelInfoList:
      type: array
      items:
        $ref: '#/components/schemas/ChannelInfo'
    ChannelName:
      type: string
      pattern: ^[a-zA-Z0-9_.-]+$
      minLength: 1
      maxLength: 256
    ChannelNameCondition:
      type: object
      properties:
        ComparisonOperator:
          allOf:
          - $ref: '#/components/schemas/ComparisonOperator'
          description: A comparison operator. Currently, you can only specify the
            `BEGINS_WITH` operator, which finds signaling channels whose names begin
            with a given prefix.
        ComparisonValue:
          allOf:
          - $ref: '#/components/schemas/ChannelName'
          description: A value to compare.
      description: An optional input parameter for the `ListSignalingChannels` API.
        When this parameter is specified while invoking `ListSignalingChannels`, the
        API returns only the channels that satisfy a condition specified in `ChannelNameCondition`.
    ChannelProtocol:
      type: string
      enum:
      - WSS
      - HTTPS
      - WEBRTC
    ChannelRole:
      type: string
      enum:
      - MASTER
      - VIEWER
    ChannelType:
      type: string
      enum:
      - SINGLE_MASTER
      - FULL_MESH
    ClientLimitExceededException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      description: Kinesis Video Streams has throttled the request because you have
        exceeded the limit of allowed client calls. Try making the call later.
    ComparisonOperator:
      type: string
      enum:
      - BEGINS_WITH
    ConfigurationStatus:
      type: string
      enum:
      - ENABLED
      - DISABLED
    CreateSignalingChannelInput:
      type: object
      properties:
        ChannelName:
          allOf:
          - $ref: '#/components/schemas/ChannelName'
          description: A name for the signaling channel that you are creating. It
            must be unique for each Amazon Web Services account and Amazon Web Services
            Region.
        ChannelType:
          allOf:
          - $ref: '#/components/schemas/ChannelType'
          description: A type of the signaling channel that you are creating. Currently,
            `SINGLE_MASTER` is the only supported channel type.
        SingleMasterConfiguration:
          allOf:
          - $ref: '#/components/schemas/SingleMasterConfiguration'
          description: A structure containing the configuration for the `SINGLE_MASTER`
            channel type.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagOnCreateList'
          description: A set of tags (key-value pairs) that you want to associate
            with this channel.
      required:
      - ChannelName
    CreateSignalingChannelOutput:
      type: object
      properties:
        ChannelARN:
          allOf:
          - $ref: '#/components/schemas/ResourceARN'
          description: The Amazon Resource Name (ARN) of the created channel.
    CreateStreamInput:
      type: object
      properties:
        DeviceName:
          allOf:
          - $ref: '#/components/schemas/DeviceName'
          description: 'The name of the device that is writing to the stream.


            In the current implementation, Kinesis Video Streams does not use this
            name.'
        StreamName:
          allOf:
          - $ref: '#/components/schemas/StreamName'
          description: 'A name for the stream that you are creating.


            The stream name is an identifier for the stream, and must be unique for
            each account and region.'
        MediaType:
          allOf:
          - $ref: '#/components/schemas/MediaType'
          description: 'The media type of the stream. Consumers of the stream can
            use this information when processing the stream. For more information
            about media types, see [Media Types](http://www.iana.org/assignments/media-types/media-types.xhtml).
            If you choose to specify the `MediaType`, see [Naming Requirements](https://tools.ietf.org/html/rfc6838#section-4.2)
            for guidelines.


            Example valid values include "video/h264" and "video/h264,audio/aac".


            This parameter is optional; the default value is `null` (or empty in JSON).'
        KmsKeyId:
          allOf:
          - $ref: '#/components/schemas/KmsKeyId'
          description: 'The ID of the Key Management Service (KMS) key that you want
            Kinesis Video Streams to use to encrypt stream data.


            If no key ID is specified, the default, Kinesis Video-managed key (`Amazon
            Web Services/kinesisvideo`) is used.


            For more information, see [DescribeKey](https://docs.aws.amazon.com/kms/latest/APIReference/API_DescribeKey.html#API_DescribeKey_RequestParameters).'
        DataRetentionInHours:
          allOf:
          - $ref: '#/components/schemas/DataRetentionInHours'
          description: 'The number of hours that you want to retain the data in the
            stream. Kinesis Video Streams retains the data in a data store that is
            associated with the stream.


            The default value is 0, indicating that the stream does not persist data.


            When the `DataRetentionInHours` value is 0, consumers can still consume
            the fragments that remain in the service host buffer, which has a retention
            time limit of 5 minutes and a retention memory limit of 200 MB. Fragments
            are removed from the buffer when either limit is reached.'
        Tags:
          allOf:
          - $ref: '#/components/schemas/ResourceTags'
          description: A list of tags to associate with the specified stream. Each
            tag is a key-value pair (the value is optional).
      required:
      - StreamName
    CreateStreamOutput:
      type: object
      properties:
        StreamARN:
          allOf:
          - $ref: '#/components/schemas/ResourceARN'
          description: The Amazon Resource Name (ARN) of the stream.
    DataEndpoint:
      type: string
    DataRetentionChangeInHours:
      type: integer
      minimum: 1
    DataRetentionInHours:
      type: integer
      minimum: 0
    DeleteAfterUpload:
      type: boolean
    DeleteEdgeConfigurationInput:
      type: object
      properties:
        StreamName:
          allOf:
          - $ref: '#/components/schemas/StreamName'
          description: The name of the stream from which to delete the edge configuration.
            Specify either the `StreamName` or the `StreamARN`.
        StreamARN:
          allOf:
          - $ref: '#/components/schemas/ResourceARN'
          description: The Amazon Resource Name (ARN) of the stream. Specify either
            the `StreamName` or the `StreamARN`.
    DeleteEdgeConfigurationOutput:
      type: object
      properties: {}
    DeleteSignalingChannelInput:
      type: object
      properties:
        ChannelARN:
          allOf:
          - $ref: '#/components/schemas/ResourceARN'
          description: The Amazon Resource Name (ARN) of the signaling channel that
            you want to delete.
        CurrentVersion:
          allOf:
          - $ref: '#/components/schemas/Version'
          description: The current version of the signaling channel that you want
            to delete. You can obtain the current version by invoking the `DescribeSignalingChannel`
            or `ListSignalingChannels` API operations.
      required:
      - ChannelARN
    DeleteSignalingChannelOutput:
      type: object
      properties: {}
    DeleteStreamInput:
      type: object
      properties:
        StreamARN:
          allOf:
          - $ref: '#/components/schemas/ResourceARN'
          description: The Amazon Resource Name (ARN) of the stream that you want
            to delete.
        CurrentVersion:
          allOf:
          - $ref: '#/components/schemas/Version'
          description: 'Optional: The version of the stream that you want to delete.


            Specify the version as a safeguard to ensure that your are deleting the
            correct stream. To get the stream version, use the `DescribeStream` API.


            If not specified, only the `CreationTime` is checked before deleting the
            stream.'
      required:
      - StreamARN
    DeleteStreamOutput:
      type: object
      properties: {}
    DeletionConfig:
      type: object
      properties:
        EdgeRetentionInHours:
          allOf:
          - $ref: '#/components/schemas/EdgeRetentionInHours'
          description: The number of hours that you want to retain the data in the
            stream on the Edge Agent. The default value of the retention time is 720
            hours, which translates to 30 days.
        LocalSizeConfig:
          allOf:
          - $ref: '#/components/schemas/LocalSizeConfig'
          description: The value of the local size required in order to delete the
            edge configuration.
        DeleteAfterUpload:
          allOf:
          - $ref: '#/components/schemas/DeleteAfterUpload'
          description: 'The `boolean` value used to indicate whether or not you want
            to mark the media for deletion, once it has been uploaded to the Kinesis
            Video Stream cloud. The media files can be deleted if any of the deletion
            configuration values are set to `true`, such as when the limit for the
            `EdgeRetentionInHours`, or the `MaxLocalMediaSizeInMB`, has been reached.


            Since the default value is set to `true`, configure the uploader schedule
            such that the media files are not being deleted before they are initially
            uploaded to the Amazon Web Services cloud.'
      description: The configuration details required to delete the connection of
        the stream from the Edge Agent.
    DescribeEdgeConfigurationInput:
      type: object
      properties:
        StreamName:
          allOf:
          - $ref: '#/components/schemas/StreamName'
          description: The name of the stream whose edge configuration you want to
            update. Specify either the `StreamName` or the `StreamARN`.
        StreamARN:
          allOf:
          - $ref: '#/components/schemas/ResourceARN'
          description: The Amazon Resource Name (ARN) of the stream. Specify either
            the `StreamName`or the `StreamARN`.
    DescribeEdgeConfigurationOutput:
      type: object
      properties:
        StreamName:
          allOf:
          - $ref: '#/components/schemas/StreamName'
          description: The name of the stream from which the edge configuration was
            updated.
        StreamARN:
          allOf:
          - $ref: '#/components/schemas/ResourceARN'
          description: The Amazon Resource Name (ARN) of the stream.
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp at which a stream’s edge configuration was first
            created.
        LastUpdatedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp at which a stream’s edge configuration was last
            updated.
        SyncStatus:
          allOf:
          - $ref: '#/components/schemas/SyncStatus'
          description: The latest status of the edge configuration update.
        FailedStatusDetails:
          allOf:
          - $ref: '#/components/schemas/FailedStatusDetails'
          description: A description of the generated failure status.
        EdgeConfig:
          allOf:
          - $ref: '#/components/schemas/EdgeConfig'
          description: A description of the stream's edge configuration that will
            be used to sync with the Edge Agent IoT Greengrass component. The Edge
            Agent component will run on an IoT Hub Device setup at your premise.
        EdgeAgentStatus:
          allOf:
          - $ref: '#/components/schemas/EdgeAgentStatus'
          description: An object that contains the latest status details for an edge
            agent's recorder and uploader jobs. Use this information to determine
            the current health of an edge agent.
    DescribeImageGenerationConfigurationInput:
      type: object
      properties:
        StreamName:
          allOf:
          - $ref: '#/components/schemas/StreamName'
          description: The name of the stream from which to retrieve the image generation
            configuration. You must specify either the `StreamName` or the `StreamARN`.
        StreamARN:
          allOf:
          - $ref: '#/components/schemas/ResourceARN'
          description: The Amazon Resource Name (ARN) of the Kinesis video stream
            from which to retrieve the image generation configuration. You must specify
            either the `StreamName` or the `StreamARN`.
    DescribeImageGenerationConfigurationOutput:
      type: object
      properties:
        ImageGenerationConfiguration:
          allOf:
          - $ref: '#/components/schemas/ImageGenerationConfiguration'
          description: The structure that contains the information required for the
            Kinesis video stream (KVS) images delivery. If this structure is null,
            the configuration will be deleted from the stream.
    DescribeMappedResourceConfigurationInput:
      type: object
      properties:
        StreamName:
          allOf:
          - $ref: '#/components/schemas/StreamName'
          description: The name of the stream.
        StreamARN:
          allOf:
          - $ref: '#/components/schemas/ResourceARN'
          description: The Amazon Resource Name (ARN) of the stream.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MappedResourceConfigurationListLimit'
          description: The maximum number of results to return in the response.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token to provide in your next request, to get another batch
            of results.
    DescribeMappedResourceConfigurationOutput:
      type: object
      properties:
        MappedResourceConfigurationList:
          allOf:
          - $ref: '#/components/schemas/MappedResourceConfigurationList'
          description: A structure that encapsulates, or contains, the media storage
            configuration properties.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token that was used in the `NextToken`request to fetch
            the next set of results.
    DescribeMediaStorageConfigurationInput:
      type: object
      properties:
        ChannelName:
          allOf:
          - $ref: '#/components/schemas/ChannelName'
          description: The name of the channel.
        ChannelARN:
          allOf:
          - $ref: '#/components/schemas/ResourceARN'
          description: The Amazon Resource Name (ARN) of the channel.
    DescribeMediaStorageConfigurationOutput:
      type: object
      properties:
        MediaStorageConfiguration:
          allOf:
          - $ref: '#/components/schemas/MediaStorageConfiguration'
          description: A structure that encapsulates, or contains, the media storage
            configuration properties.
    DescribeNotificationConfigurationInput:
      type: object
      properties:
        StreamName:
          allOf:
          - $ref: '#/components/schemas/StreamName'
          description: The name of the stream from which to retrieve the notification
            configuration. You must specify either the `StreamName` or the `StreamARN`.
        StreamARN:
          allOf:
          - $ref: '#/components/schemas/ResourceARN'
          description: The Amazon Resource Name (ARN) of the Kinesis video stream
            from where you want to retrieve the notification configuration. You must
            specify either the `StreamName` or the StreamARN.
    DescribeNotificationConfigurationOutput:
      type: object
      properties:
        NotificationConfiguration:
          allOf:
          - $ref: '#/components/schemas/NotificationConfiguration'
          description: The structure that contains the information required for notifications.
            If the structure is null, the configuration will be deleted from the stream.
    DescribeSignalingChannelInput:
      type: object
      properties:
        ChannelName:
          allOf:
          - $ref: '#/components/schemas/ChannelName'
          description: The name of the signaling channel that you want to describe.
        ChannelARN:
          allOf:
          - $ref: '#/components/schemas/ResourceARN'
          description: The ARN of the signaling channel that you want to describe.
    DescribeSignalingChannelOutput:
      type: object
      properties:
        ChannelInfo:
          allOf:
          - $ref: '#/components/schemas/ChannelInfo'
          description: A structure that encapsulates the specified signaling channel's
            metadata and properties.
    DescribeStreamInput:
      type: object
      properties:
        StreamName:
          allOf:
          - $ref: '#/components/schemas/StreamName'
          description: The name of the stream.
        StreamARN:
          allOf:
          - $ref: '#/components/schemas/ResourceARN'
          description: The Amazon Resource Name (ARN) of the stream.
    DescribeStreamOutput:
      type: object
      properties:
        StreamInfo:
          allOf:
          - $ref: '#/components/schemas/StreamInfo'
          description: An object that describes the stream.
    DestinationRegion:
      type: string
      pattern: ^[a-z]+(-[a-z]+)?-[a-z]+-[0-9]$
      minLength: 9
      maxLength: 14
    DestinationUri:
      type: string
      pattern: ^[a-zA-Z_0-9]+:(//)?([^/]+)/?([^*]*)$
      minLength: 1
      maxLength: 255
    DeviceName:
      type: string
      pattern: ^[a-zA-Z0-9_.-]+$
      minLength: 1
      maxLength: 128
    DeviceStreamLimitExceededException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      description: Not implemented.
    DurationInSeconds:
      type: integer
      minimum: 60
      maximum: 3600
    EdgeAgentStatus:
      type: object
      properties:
        LastRecorderStatus:
          allOf:
          - $ref: '#/components/schemas/LastRecorderStatus'
          description: The latest status of a stream’s edge recording job.
        LastUploaderStatus:
          allOf:
          - $ref: '#/components/schemas/LastUploaderStatus'
          description: The latest status of a stream’s edge to cloud uploader job.
      description: An object that contains the latest status details for an edge agent's
        recorder and uploader jobs. Use this information to determine the current
        health of an edge agent.
    EdgeConfig:
      type: object
      properties:
        HubDeviceArn:
          allOf:
          - $ref: '#/components/schemas/HubDeviceArn'
          description: The "**Internet of Things (IoT) Thing** " Arn of the stream.
        RecorderConfig:
          allOf:
          - $ref: '#/components/schemas/RecorderConfig'
          description: The recorder configuration consists of the local `MediaSourceConfig`
            details, that are used as credentials to access the local media files
            streamed on the camera.
        UploaderConfig:
          allOf:
          - $ref: '#/components/schemas/UploaderConfig'
          description: The uploader configuration contains the `ScheduleExpression`
            details that are used to schedule upload jobs for the recorded media files
            from the Edge Agent to a Kinesis Video Stream.
        DeletionConfig:
          allOf:
          - $ref: '#/components/schemas/DeletionConfig'
          description: The deletion configuration is made up of the retention time
            (`EdgeRetentionInHours`) and local size configuration (`LocalSizeConfig`)
            details that are used to make the deletion.
      required:
      - HubDeviceArn
      - RecorderConfig
      description: A description of the stream's edge configuration that will be used
        to sync with the Edge Agent IoT Greengrass component. The Edge Agent component
        will run on an IoT Hub Device setup at your premise.
    EdgeRetentionInHours:
      type: integer
      minimum: 1
      maximum: 720
    ErrorMessage:
      type: string
    FailedStatusDetails:
      type: string
    Format:
      type: string
      enum:
      - JPEG
      - PNG
    FormatConfig:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/FormatConfigValue'
    FormatConfigKey:
      type: string
      enum:
      - JPEGQuality
    FormatConfigValue:
      type: string
      pattern: ^[a-zA-Z_0-9]+$
      minLength: 0
      maxLength: 256
    GetDataEndpointInput:
      type: object
      properties:
        StreamName:
          allOf:
          - $ref: '#/components/schemas/StreamName'
          description: The name of the stream that you want to get the endpoint for.
            You must specify either this parameter or a `StreamARN` in the request.
        StreamARN:
          allOf:
          - $ref: '#/components/schemas/ResourceARN'
          description: The Amazon Resource Name (ARN) of the stream that you want
            to get the endpoint for. You must specify either this parameter or a `StreamName`
            in the request.
        APIName:
          allOf:
          - $ref: '#/components/schemas/APIName'
          description: The name of the API action for which to get an endpoint.
      required:
      - APIName
    GetDataEndpointOutput:
      type: object
      properties:
        DataEndpoint:
          allOf:
          - $ref: '#/components/schemas/DataEndpoint'
          description: The endpoint value. To read data from the stream or to write
            data to it, specify this endpoint in your application.
    GetSignalingChannelEndpointInput:
      type: object
      properties:
        ChannelARN:
          allOf:
          - $ref: '#/components/schemas/ResourceARN'
          description: The Amazon Resource Name (ARN) of the signalling channel for
            which you want to get an endpoint.
        SingleMasterChannelEndpointConfiguration:
          allOf:
          - $ref: '#/components/schemas/SingleMasterChannelEndpointConfiguration'
          description: A structure containing the endpoint configuration for the `SINGLE_MASTER`
            channel type.
      required:
      - ChannelARN
    GetSignalingChannelEndpointOutput:
      type: object
      properties:
        ResourceEndpointList:
          allOf:
          - $ref: '#/components/schemas/ResourceEndpointList'
          description: A list of endpoints for the specified signaling channel.
    HeightPixels:
      type: integer
      minimum: 1
      maximum: 2160
    HubDeviceArn:
      type: string
      pattern: ^arn:[a-z\d-]+:iot:[a-z0-9-]+:[0-9]+:thing/[a-zA-Z0-9_.-]+$
      minLength: 1
      maxLength: 1024
    ImageGenerationConfiguration:
      type: object
      properties:
        Status:
          allOf:
          - $ref: '#/components/schemas/ConfigurationStatus'
          description: Indicates whether the `ContinuousImageGenerationConfigurations`
            API is enabled or disabled.
        ImageSelectorType:
          allOf:
          - $ref: '#/components/schemas/ImageSelectorType'
          description: The origin of the Server or Producer timestamps to use to generate
            the images.
        DestinationConfig:
          allOf:
          - $ref: '#/components/schemas/ImageGenerationDestinationConfig'
          description: The structure that contains the information required to deliver
            images to a customer.
        SamplingInterval:
          allOf:
          - $ref: '#/components/schemas/SamplingInterval'
          description: The time interval in milliseconds (ms) at which the images
            need to be generated from the stream. The minimum value that can be provided
            is 200 ms. If the timestamp range is less than the sampling interval,
            the Image from the `StartTimestamp` will be returned if available.
        Format:
          allOf:
          - $ref: '#/components/schemas/Format'
          description: The accepted image format.
        FormatConfig:
          allOf:
          - $ref: '#/components/schemas/FormatConfig'
          description: The list of a key-value pair structure that contains extra
            parameters that can be applied when the image is generated. The `FormatConfig`
            key is the `JPEGQuality`, which indicates the JPEG quality key to be used
            to generate the image. The `FormatConfig` value accepts ints from 1 to
            100. If the value is 1, the image will be generated with less quality
            and the best compression. If the value is 100, the image will be generated
            with the best quality and less compression. If no value is provided, the
            default value of the `JPEGQuality` key will be set to 80.
        WidthPixels:
          allOf:
          - $ref: '#/components/schemas/WidthPixels'
          description: The width of the output image that is used in conjunction with
            the `HeightPixels` parameter. When both `WidthPixels` and `HeightPixels`
            parameters are provided, the image will be stretched to fit the specified
            aspect ratio. If only the `WidthPixels` parameter is provided, its original
            aspect ratio will be used to calculate the `HeightPixels` ratio. If neither
            parameter is provided, the original image size will be returned.
        HeightPixels:
          allOf:
          - $ref: '#/components/schemas/HeightPixels'
          description: The height of the output image that is used in conjunction
            with the `WidthPixels` parameter. When both `HeightPixels` and `WidthPixels`
            parameters are provided, the image will be stretched to fit the specified
            aspect ratio. If only the `HeightPixels` parameter is provided, its original
            aspect ratio will be used to calculate the `WidthPixels` ratio. If neither
            parameter is provided, the original image size will be returned.
      required:
      - Status
      - ImageSelectorType
      - DestinationConfig
      - SamplingInterval
      - Format
      description: The structure that contains the information required for the KVS
        images delivery. If null, the configuration will be deleted from the stream.
    ImageGenerationDestinationConfig:
      type: object
      properties:
        Uri:
          allOf:
          - $ref: '#/components/schemas/DestinationUri'
          description: The Uniform Resource Identifier (URI) that identifies where
            the images will be delivered.
        DestinationRegion:
          allOf:
          - $ref: '#/components/schemas/DestinationRegion'
          description: The Amazon Web Services Region of the S3 bucket where images
            will be delivered. This `DestinationRegion` must match the Region where
            the stream is located.
      required:
      - Uri
      - DestinationRegion
      description: The structure that contains the information required to deliver
        images to a customer.
    ImageSelectorType:
      type: string
      enum:
      - SERVER_TIMESTAMP
      - PRODUCER_TIMESTAMP
    InvalidArgumentException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      description: The value for this input parameter is invalid.
    InvalidDeviceException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      description: Not implemented.
    InvalidResourceFormatException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      description: The format of the `StreamARN` is invalid.
    JobStatusDetails:
      type: string
    KmsKeyId:
      type: string
      pattern: ^.+$
      minLength: 1
      maxLength: 2048
    LastRecorderStatus:
      type: object
      properties:
        JobStatusDetails:
          allOf:
          - $ref: '#/components/schemas/JobStatusDetails'
          description: A description of a recorder job’s latest status.
        LastCollectedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp at which the recorder job was last executed and
            media stored to local disk.
        LastUpdatedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp at which the recorder status was last updated.
        RecorderStatus:
          allOf:
          - $ref: '#/components/schemas/RecorderStatus'
          description: The status of the latest recorder job.
      description: The latest status of a stream's edge recording job.
    LastUploaderStatus:
      type: object
      properties:
        JobStatusDetails:
          allOf:
          - $ref: '#/components/schemas/JobStatusDetails'
          description: A description of an uploader job’s latest status.
        LastCollectedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp at which the uploader job was last executed and
            media collected to the cloud.
        LastUpdatedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp at which the uploader status was last updated.
        UploaderStatus:
          allOf:
          - $ref: '#/components/schemas/UploaderStatus'
          description: The status of the latest uploader job.
      description: The latest status of a stream’s edge to cloud uploader job.
    ListEdgeAgentConfigurationsEdgeConfig:
      type: object
      properties:
        StreamName:
          allOf:
          - $ref: '#/components/schemas/StreamName'
          description: The name of the stream.
        StreamARN:
          allOf:
          - $ref: '#/components/schemas/ResourceARN'
          description: The Amazon Resource Name (ARN) of the stream.
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp when the stream first created the edge config.
        LastUpdatedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp when the stream last updated the edge config.
        SyncStatus:
          allOf:
          - $ref: '#/components/schemas/SyncStatus'
          description: The current sync status of the stream's edge configuration.
        FailedStatusDetails:
          allOf:
          - $ref: '#/components/schemas/FailedStatusDetails'
          description: A description of the generated failure status.
        EdgeConfig:
          $ref: '#/components/schemas/EdgeConfig'
      description: A description of a single stream's edge configuration.
    ListEdgeAgentConfigurationsEdgeConfigList:
      type: array
      items:
        $ref: '#/components/schemas/ListEdgeAgentConfigurationsEdgeConfig'
    ListEdgeAgentConfigurationsInput:
      type: object
      properties:
        HubDeviceArn:
          allOf:
          - $ref: '#/components/schemas/HubDeviceArn'
          description: The "Internet of Things (IoT) Thing" Arn of the edge agent.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/ListEdgeAgentConfigurationsInputLimit'
          description: The maximum number of edge configurations to return in the
            response. The default is 5.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If you specify this parameter, when the result of a `ListEdgeAgentConfigurations`
            operation is truncated, the call returns the `NextToken` in the response.
            To get another batch of edge configurations, provide this token in your
            next request.
      required:
      - HubDeviceArn
    ListEdgeAgentConfigurationsInputLimit:
      type: integer
      minimum: 1
      maximum: 10
    ListEdgeAgentConfigurationsOutput:
      type: object
      properties:
        EdgeConfigs:
          allOf:
          - $ref: '#/components/schemas/ListEdgeAgentConfigurationsEdgeConfigList'
          description: A description of a single stream's edge configuration.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If the response is truncated, the call returns this element
            with a given token. To get the next batch of edge configurations, use
            this token in your next request.
    ListOfProtocols:
      type: array
      items:
        $ref: '#/components/schemas/ChannelProtocol'
    ListSignalingChannelsInput:
      type: object
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/ListStreamsInputLimit'
          description: The maximum number of channels to return in the response. The
            default is 500.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If you specify this parameter, when the result of a `ListSignalingChannels`
            operation is truncated, the call returns the `NextToken` in the response.
            To get another batch of channels, provide this token in your next request.
        ChannelNameCondition:
          allOf:
          - $ref: '#/components/schemas/ChannelNameCondition'
          description: 'Optional: Returns only the channels that satisfy a specific
            condition.'
    ListSignalingChannelsOutput:
      type: object
      properties:
        ChannelInfoList:
          allOf:
          - $ref: '#/components/schemas/ChannelInfoList'
          description: An array of `ChannelInfo` objects.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If the response is truncated, the call returns this element
            with a token. To get the next batch of streams, use this token in your
            next request.
    ListStreamsInput:
      type: object
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/ListStreamsInputLimit'
          description: The maximum number of streams to return in the response. The
            default is 10,000.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If you specify this parameter, when the result of a `ListStreams`
            operation is truncated, the call returns the `NextToken` in the response.
            To get another batch of streams, provide this token in your next request.
        StreamNameCondition:
          allOf:
          - $ref: '#/components/schemas/StreamNameCondition'
          description: 'Optional: Returns only streams that satisfy a specific condition.
            Currently, you can specify only the prefix of a stream name as a condition.'
    ListStreamsInputLimit:
      type: integer
      minimum: 1
      maximum: 10000
    ListStreamsOutput:
      type: object
      properties:
        StreamInfoList:
          allOf:
          - $ref: '#/components/schemas/StreamInfoList'
          description: An array of `StreamInfo` objects.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If the response is truncated, the call returns this element
            with a token. To get the next batch of streams, use this token in your
            next request.
    ListTagsForResourceInput:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If you specify this parameter and the result of a `ListTagsForResource`
            call is truncated, the response includes a token that you can use in the
            next request to fetch the next batch of tags.
        ResourceARN:
          allOf:
          - $ref: '#/components/schemas/ResourceARN'
          description: The Amazon Resource Name (ARN) of the signaling channel for
            which you want to list tags.
      required:
      - ResourceARN
    ListTagsForResourceOutput:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If you specify this parameter and the result of a `ListTagsForResource`
            call is truncated, the response includes a token that you can use in the
            next request to fetch the next set of tags.
        Tags:
          allOf:
          - $ref: '#/components/schemas/ResourceTags'
          description: A map of tag keys and values associated with the specified
            signaling channel.
    ListTagsForStreamInput:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If you specify this parameter and the result of a `ListTagsForStream`
            call is truncated, the response includes a token that you can use in the
            next request to fetch the next batch of tags.
        StreamARN:
          allOf:
          - $ref: '#/components/schemas/ResourceARN'
          description: The Amazon Resource Name (ARN) of the stream that you want
            to list tags for.
        StreamName:
          allOf:
          - $ref: '#/components/schemas/StreamName'
          description: The name of the stream that you want to list tags for.
    ListTagsForStreamOutput:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If you specify this parameter and the result of a `ListTags`
            call is truncated, the response includes a token that you can use in the
            next request to fetch the next set of tags.
        Tags:
          allOf:
          - $ref: '#/components/schemas/ResourceTags'
          description: A map of tag keys and values associated with the specified
            stream.
    LocalSizeConfig:
      type: object
      properties:
        MaxLocalMediaSizeInMB:
          allOf:
          - $ref: '#/components/schemas/MaxLocalMediaSizeInMB'
          description: The overall maximum size of the media that you want to store
            for a stream on the Edge Agent.
        StrategyOnFullSize:
          allOf:
          - $ref: '#/components/schemas/StrategyOnFullSize'
          description: The strategy to perform when a stream’s `MaxLocalMediaSizeInMB`
            limit is reached.
      description: The configuration details that include the maximum size of the
        media (`MaxLocalMediaSizeInMB`) that you want to store for a stream on the
        Edge Agent, as well as the strategy that should be used (`StrategyOnFullSize`)
        when a stream's maximum size has been reached.
    MappedResourceConfigurationList:
      type: array
      items:
        $ref: '#/components/schemas/MappedResourceConfigurationListItem'
    MappedResourceConfigurationListItem:
      type: object
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/Type'
          description: The type of the associated resource for the kinesis video stream.
        ARN:
          allOf:
          - $ref: '#/components/schemas/ResourceARN'
          description: The Amazon Resource Name (ARN) of the Kinesis Video Stream
            resource, associated with the stream.
      description: A structure that encapsulates, or contains, the media storage configuration
        properties.
    MappedResourceConfigurationListLimit:
      type: integer
      minimum: 1
      maximum: 1
    MaxLocalMediaSizeInMB:
      type: integer
      minimum: 64
      maximum: 2000000
    MediaSourceConfig:
      type: object
      properties:
        MediaUriSecretArn:
          allOf:
          - $ref: '#/components/schemas/MediaUriSecretArn'
          description: The Amazon Web Services Secrets Manager ARN for the username
            and password of the camera, or a local media file location.
        MediaUriType:
          allOf:
          - $ref: '#/components/schemas/MediaUriType'
          description: 'The Uniform Resource Identifier (URI) type. The `FILE_URI`
            value can be used to stream local media files.


            Preview only supports the `RTSP_URI` media source URI format .'
      required:
      - MediaUriSecretArn
      - MediaUriType
      description: The configuration details that consist of the credentials required
        (`MediaUriSecretArn` and `MediaUriType`) to access the media files that are
        streamed to the camera.
    MediaStorageConfiguration:
      type: object
      properties:
        StreamARN:
          allOf:
          - $ref: '#/components/schemas/ResourceARN'
          description: The Amazon Resource Name (ARN) of the stream.
        Status:
          allOf:
          - $ref: '#/components/schemas/MediaStorageConfigurationStatus'
          description: The status of the media storage configuration.
      required:
      - Status
      description: "A structure that encapsulates, or contains, the media storage\
        \ configuration properties.\n\n  * If `StorageStatus` is enabled, the data\
        \ will be stored in the `StreamARN` provided. In order for WebRTC Ingestion\
        \ to work, the stream must have data retention enabled.\n\n  * If `StorageStatus`\
        \ is disabled, no data will be stored, and the `StreamARN` parameter will\
        \ not be needed."
    MediaStorageConfigurationStatus:
      type: string
      enum:
      - ENABLED
      - DISABLED
    MediaType:
      type: string
      pattern: ^[\w\-\.\+]+/[\w\-\.\+]+(,[\w\-\.\+]+/[\w\-\.\+]+)*$
      minLength: 1
      maxLength: 128
    MediaUriSecretArn:
      type: string
      pattern: ^arn:[a-z\d-]+:secretsmanager:[a-z0-9-]+:[0-9]+:secret:[a-zA-Z0-9_.-]+$
      minLength: 20
      maxLength: 2048
    MediaUriType:
      type: string
      enum:
      - RTSP_URI
      - FILE_URI
    MessageTtlSeconds:
      type: integer
      minimum: 5
      maximum: 120
    NextToken:
      type: string
      pattern: ^[a-zA-Z0-9+/=]*$
      minLength: 0
      maxLength: 1024
    NoDataRetentionException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      description: The Stream data retention in hours is equal to zero.
    NotAuthorizedException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      description: The caller is not authorized to perform this operation.
    NotificationConfiguration:
      type: object
      properties:
        Status:
          allOf:
          - $ref: '#/components/schemas/ConfigurationStatus'
          description: Indicates if a notification configuration is enabled or disabled.
        DestinationConfig:
          allOf:
          - $ref: '#/components/schemas/NotificationDestinationConfig'
          description: The destination information required to deliver a notification
            to a customer.
      required:
      - Status
      - DestinationConfig
      description: The structure that contains the notification information for the
        KVS images delivery. If this parameter is null, the configuration will be
        deleted from the stream.
    NotificationDestinationConfig:
      type: object
      properties:
        Uri:
          allOf:
          - $ref: '#/components/schemas/DestinationUri'
          description: The Uniform Resource Identifier (URI) that identifies where
            the images will be delivered.
      required:
      - Uri
      description: The structure that contains the information required to deliver
        a notification to a customer.
    RecorderConfig:
      type: object
      properties:
        MediaSourceConfig:
          allOf:
          - $ref: '#/components/schemas/MediaSourceConfig'
          description: The configuration details that consist of the credentials required
            (`MediaUriSecretArn` and `MediaUriType`) to access the media files streamed
            to the camera.
        ScheduleConfig:
          allOf:
          - $ref: '#/components/schemas/ScheduleConfig'
          description: The configuration that consists of the `ScheduleExpression`
            and the `DurationInMinutes` details that specify the scheduling to record
            from a camera, or local media file, onto the Edge Agent. If the `ScheduleExpression`
            attribute is not provided, then the Edge Agent will always be set to recording
            mode.
      required:
      - MediaSourceConfig
      description: The recorder configuration consists of the local `MediaSourceConfig`
        details that are used as credentials to accesss the local media files streamed
        on the camera.
    RecorderStatus:
      type: string
      enum:
      - SUCCESS
      - USER_ERROR
      - SYSTEM_ERROR
    ResourceARN:
      type: string
      pattern: ^arn:[a-z\d-]+:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+$
      minLength: 1
      maxLength: 1024
    ResourceEndpoint:
      type: string
    ResourceEndpointList:
      type: array
      items:
        $ref: '#/components/schemas/ResourceEndpointListItem'
    ResourceEndpointListItem:
      type: object
      properties:
        Protocol:
          allOf:
          - $ref: '#/components/schemas/ChannelProtocol'
          description: The protocol of the signaling channel returned by the `GetSignalingChannelEndpoint`
            API.
        ResourceEndpoint:
          allOf:
          - $ref: '#/components/schemas/ResourceEndpoint'
          description: The endpoint of the signaling channel returned by the `GetSignalingChannelEndpoint`
            API.
      description: 'An object that describes the endpoint of the signaling channel
        returned by the `GetSignalingChannelEndpoint` API.


        The media server endpoint will correspond to the `WEBRTC` Protocol.'
    ResourceInUseException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      description: "When the input `StreamARN` or `ChannelARN` in `CLOUD_STORAGE_MODE`\
        \ is already mapped to a different Kinesis Video Stream resource, or if the\
        \ provided input `StreamARN` or `ChannelARN` is not in Active status, try\
        \ one of the following :\n\n  1. The `DescribeMediaStorageConfiguration` API\
        \ to determine what the stream given channel is mapped to. \n\n  2. The `DescribeMappedResourceConfiguration`\
        \ API to determine the channel that the given stream is mapped to. \n\n  3.\
        \ The `DescribeStream` or `DescribeSignalingChannel` API to determine the\
        \ status of the resource."
    ResourceNotFoundException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      description: Amazon Kinesis Video Streams can't find the stream that you specified.
    ResourceTags:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
    SamplingInterval:
      type: integer
    ScheduleConfig:
      type: object
      properties:
        ScheduleExpression:
          allOf:
          - $ref: '#/components/schemas/ScheduleExpression'
          description: 'The Quartz cron expression that takes care of scheduling jobs
            to record from the camera, or local media file, onto the Edge Agent. If
            the `ScheduleExpression` is not provided for the `RecorderConfig`, then
            the Edge Agent will always be set to recording mode.


            For more information about Quartz, refer to the [ _Cron Trigger Tutorial_
            ](http://www.quartz-scheduler.org/documentation/quartz-2.3.0/tutorials/crontrigger.html)
            page to understand the valid expressions and its use.'
        DurationInSeconds:
          allOf:
          - $ref: '#/components/schemas/DurationInSeconds'
          description: The total duration to record the media. If the `ScheduleExpression`
            attribute is provided, then the `DurationInSeconds` attribute should also
            be specified.
      required:
      - ScheduleExpression
      - DurationInSeconds
      description: 'This API enables you to specify the duration that the camera,
        or local media file, should record onto the Edge Agent. The `ScheduleConfig`
        consists of the `ScheduleExpression` and the `DurationInMinutes` attributes.


        If the `ScheduleConfig` is not provided in the `RecorderConfig`, then the
        Edge Agent will always be set to recording mode.


        If the `ScheduleConfig` is not provided in the `UploaderConfig`, then the
        Edge Agent will upload at regular intervals (every 1 hour).'
    ScheduleExpression:
      type: string
      pattern: ^[^\n]{11,100}$
      minLength: 11
      maxLength: 100
    SingleMasterChannelEndpointConfiguration:
      type: object
      properties:
        Protocols:
          allOf:
          - $ref: '#/components/schemas/ListOfProtocols'
          description: This property is used to determine the nature of communication
            over this `SINGLE_MASTER` signaling channel. If `WSS` is specified, this
            API returns a websocket endpoint. If `HTTPS` is specified, this API returns
            an `HTTPS` endpoint.
        Role:
          allOf:
          - $ref: '#/components/schemas/ChannelRole'
          description: This property is used to determine messaging permissions in
            this `SINGLE_MASTER` signaling channel. If `MASTER` is specified, this
            API returns an endpoint that a client can use to receive offers from and
            send answers to any of the viewers on this signaling channel. If `VIEWER`
            is specified, this API returns an endpoint that a client can use only
            to send offers to another `MASTER` client on this signaling channel.
      description: An object that contains the endpoint configuration for the `SINGLE_MASTER`
        channel type.
    SingleMasterConfiguration:
      type: object
      properties:
        MessageTtlSeconds:
          allOf:
          - $ref: '#/components/schemas/MessageTtlSeconds'
          description: The period of time a signaling channel retains undelivered
            messages before they are discarded.
      description: A structure that contains the configuration for the `SINGLE_MASTER`
        channel type.
    StartEdgeConfigurationUpdateInput:
      type: object
      properties:
        StreamName:
          allOf:
          - $ref: '#/components/schemas/StreamName'
          description: The name of the stream whose edge configuration you want to
            update. Specify either the `StreamName` or the `StreamARN`.
        StreamARN:
          allOf:
          - $ref: '#/components/schemas/ResourceARN'
          description: The Amazon Resource Name (ARN) of the stream. Specify either
            the `StreamName` or the `StreamARN`.
        EdgeConfig:
          allOf:
          - $ref: '#/components/schemas/EdgeConfig'
          description: The edge configuration details required to invoke the update
            process.
      required:
      - EdgeConfig
    StartEdgeConfigurationUpdateOutput:
      type: object
      properties:
        StreamName:
          allOf:
          - $ref: '#/components/schemas/StreamName'
          description: The name of the stream from which the edge configuration was
            updated.
        StreamARN:
          allOf:
          - $ref: '#/components/schemas/ResourceARN'
          description: The Amazon Resource Name (ARN) of the stream.
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp at which a stream’s edge configuration was first
            created.
        LastUpdatedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp at which a stream’s edge configuration was last
            updated.
        SyncStatus:
          allOf:
          - $ref: '#/components/schemas/SyncStatus'
          description: The current sync status of the stream's edge configuration.
            When you invoke this API, the sync status will be set to the `SYNCING`
            state. Use the `DescribeEdgeConfiguration` API to get the latest status
            of the edge configuration.
        FailedStatusDetails:
          allOf:
          - $ref: '#/components/schemas/FailedStatusDetails'
          description: A description of the generated failure status.
        EdgeConfig:
          allOf:
          - $ref: '#/components/schemas/EdgeConfig'
          description: A description of the stream's edge configuration that will
            be used to sync with the Edge Agent IoT Greengrass component. The Edge
            Agent component will run on an IoT Hub Device setup at your premise.
    Status:
      type: string
      enum:
      - CREATING
      - ACTIVE
      - UPDATING
      - DELETING
    StrategyOnFullSize:
      type: string
      enum:
      - DELETE_OLDEST_MEDIA
      - DENY_NEW_MEDIA
    StreamEdgeConfigurationNotFoundException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      description: The Exception rendered when the Amazon Kinesis Video Stream can't
        find a stream's edge configuration that you specified.
    StreamInfo:
      type: object
      properties:
        DeviceName:
          allOf:
          - $ref: '#/components/schemas/DeviceName'
          description: The name of the device that is associated with the stream.
        StreamName:
          allOf:
          - $ref: '#/components/schemas/StreamName'
          description: The name of the stream.
        StreamARN:
          allOf:
          - $ref: '#/components/schemas/ResourceARN'
          description: The Amazon Resource Name (ARN) of the stream.
        MediaType:
          allOf:
          - $ref: '#/components/schemas/MediaType'
          description: The `MediaType` of the stream.
        KmsKeyId:
          allOf:
          - $ref: '#/components/schemas/KmsKeyId'
          description: The ID of the Key Management Service (KMS) key that Kinesis
            Video Streams uses to encrypt data on the stream.
        Version:
          allOf:
          - $ref: '#/components/schemas/Version'
          description: The version of the stream.
        Status:
          allOf:
          - $ref: '#/components/schemas/Status'
          description: The status of the stream.
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: A time stamp that indicates when the stream was created.
        DataRetentionInHours:
          allOf:
          - $ref: '#/components/schemas/DataRetentionInHours'
          description: How long the stream retains data, in hours.
      description: An object describing a Kinesis video stream.
    StreamInfoList:
      type: array
      items:
        $ref: '#/components/schemas/StreamInfo'
    StreamName:
      type: string
      pattern: ^[a-zA-Z0-9_.-]+$
      minLength: 1
      maxLength: 256
    StreamNameCondition:
      type: object
      properties:
        ComparisonOperator:
          allOf:
          - $ref: '#/components/schemas/ComparisonOperator'
          description: A comparison operator. Currently, you can specify only the
            `BEGINS_WITH` operator, which finds streams whose names start with a given
            prefix.
        ComparisonValue:
          allOf:
          - $ref: '#/components/schemas/StreamName'
          description: A value to compare.
      description: Specifies the condition that streams must satisfy to be returned
        when you list streams (see the `ListStreams` API). A condition has a comparison
        operation and a value. Currently, you can specify only the `BEGINS_WITH` operator,
        which finds streams whose names start with a given prefix.
    SyncStatus:
      type: string
      enum:
      - SYNCING
      - ACKNOWLEDGED
      - IN_SYNC
      - SYNC_FAILED
      - DELETING
      - DELETE_FAILED
      - DELETING_ACKNOWLEDGED
    Tag:
      type: object
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/TagKey'
          description: The key of the tag that is associated with the specified signaling
            channel.
        Value:
          allOf:
          - $ref: '#/components/schemas/TagValue'
          description: The value of the tag that is associated with the specified
            signaling channel.
      required:
      - Key
      - Value
      description: A key and value pair that is associated with the specified signaling
        channel.
    TagKey:
      type: string
      pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
      minLength: 1
      maxLength: 128
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
    TagList:
      type: array
      items:
        $ref: '#/components/schemas/Tag'
    TagOnCreateList:
      type: array
      items:
        $ref: '#/components/schemas/Tag'
    TagResourceInput:
      type: object
      properties:
        ResourceARN:
          allOf:
          - $ref: '#/components/schemas/ResourceARN'
          description: The Amazon Resource Name (ARN) of the signaling channel to
            which you want to add tags.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: A list of tags to associate with the specified signaling channel.
            Each tag is a key-value pair.
      required:
      - ResourceARN
      - Tags
    TagResourceOutput:
      type: object
      properties: {}
    TagStreamInput:
      type: object
      properties:
        StreamARN:
          allOf:
          - $ref: '#/components/schemas/ResourceARN'
          description: The Amazon Resource Name (ARN) of the resource that you want
            to add the tag or tags to.
        StreamName:
          allOf:
          - $ref: '#/components/schemas/StreamName'
          description: The name of the stream that you want to add the tag or tags
            to.
        Tags:
          allOf:
          - $ref: '#/components/schemas/ResourceTags'
          description: A list of tags to associate with the specified stream. Each
            tag is a key-value pair (the value is optional).
      required:
      - Tags
    TagStreamOutput:
      type: object
      properties: {}
    TagValue:
      type: string
      pattern: ^[\p{L}\p{Z}\p{N}_.:/=+\-@]*$
      minLength: 0
      maxLength: 256
    TagsPerResourceExceededLimitException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      description: You have exceeded the limit of tags that you can associate with
        the resource. A Kinesis video stream can support up to 50 tags.
    Timestamp:
      type: string
      format: date-time
    Type:
      type: string
    UntagResourceInput:
      type: object
      properties:
        ResourceARN:
          allOf:
          - $ref: '#/components/schemas/ResourceARN'
          description: The Amazon Resource Name (ARN) of the signaling channel from
            which you want to remove tags.
        TagKeyList:
          allOf:
          - $ref: '#/components/schemas/TagKeyList'
          description: A list of the keys of the tags that you want to remove.
      required:
      - ResourceARN
      - TagKeyList
    UntagResourceOutput:
      type: object
      properties: {}
    UntagStreamInput:
      type: object
      properties:
        StreamARN:
          allOf:
          - $ref: '#/components/schemas/ResourceARN'
          description: The Amazon Resource Name (ARN) of the stream that you want
            to remove tags from.
        StreamName:
          allOf:
          - $ref: '#/components/schemas/StreamName'
          description: The name of the stream that you want to remove tags from.
        TagKeyList:
          allOf:
          - $ref: '#/components/schemas/TagKeyList'
          description: A list of the keys of the tags that you want to remove.
      required:
      - TagKeyList
    UntagStreamOutput:
      type: object
      properties: {}
    UpdateDataRetentionInput:
      type: object
      properties:
        StreamName:
          allOf:
          - $ref: '#/components/schemas/StreamName'
          description: The name of the stream whose retention period you want to change.
        StreamARN:
          allOf:
          - $ref: '#/components/schemas/ResourceARN'
          description: The Amazon Resource Name (ARN) of the stream whose retention
            period you want to change.
        CurrentVersion:
          allOf:
          - $ref: '#/components/schemas/Version'
          description: The version of the stream whose retention period you want to
            change. To get the version, call either the `DescribeStream` or the `ListStreams`
            API.
        Operation:
          allOf:
          - $ref: '#/components/schemas/UpdateDataRetentionOperation'
          description: Indicates whether you want to increase or decrease the retention
            period.
        DataRetentionChangeInHours:
          allOf:
          - $ref: '#/components/schemas/DataRetentionChangeInHours'
          description: 'The number of hours to adjust the current retention by. The
            value you specify is added to or subtracted from the current value, depending
            on the `operation`.


            The minimum value for data retention is 0 and the maximum value is 87600
            (ten years).'
      required:
      - CurrentVersion
      - Operation
      - DataRetentionChangeInHours
    UpdateDataRetentionOperation:
      type: string
      enum:
      - INCREASE_DATA_RETENTION
      - DECREASE_DATA_RETENTION
    UpdateDataRetentionOutput:
      type: object
      properties: {}
    UpdateImageGenerationConfigurationInput:
      type: object
      properties:
        StreamName:
          allOf:
          - $ref: '#/components/schemas/StreamName'
          description: The name of the stream from which to update the image generation
            configuration. You must specify either the `StreamName` or the `StreamARN`.
        StreamARN:
          allOf:
          - $ref: '#/components/schemas/ResourceARN'
          description: The Amazon Resource Name (ARN) of the Kinesis video stream
            from where you want to update the image generation configuration. You
            must specify either the `StreamName` or the `StreamARN`.
        ImageGenerationConfiguration:
          allOf:
          - $ref: '#/components/schemas/ImageGenerationConfiguration'
          description: The structure that contains the information required for the
            KVS images delivery. If the structure is null, the configuration will
            be deleted from the stream.
    UpdateImageGenerationConfigurationOutput:
      type: object
      properties: {}
    UpdateMediaStorageConfigurationInput:
      type: object
      properties:
        ChannelARN:
          allOf:
          - $ref: '#/components/schemas/ResourceARN'
          description: The Amazon Resource Name (ARN) of the channel.
        MediaStorageConfiguration:
          allOf:
          - $ref: '#/components/schemas/MediaStorageConfiguration'
          description: A structure that encapsulates, or contains, the media storage
            configuration properties.
      required:
      - ChannelARN
      - MediaStorageConfiguration
    UpdateMediaStorageConfigurationOutput:
      type: object
      properties: {}
    UpdateNotificationConfigurationInput:
      type: object
      properties:
        StreamName:
          allOf:
          - $ref: '#/components/schemas/StreamName'
          description: The name of the stream from which to update the notification
            configuration. You must specify either the `StreamName` or the `StreamARN`.
        StreamARN:
          allOf:
          - $ref: '#/components/schemas/ResourceARN'
          description: The Amazon Resource Name (ARN) of the Kinesis video stream
            from where you want to update the notification configuration. You must
            specify either the `StreamName` or the `StreamARN`.
        NotificationConfiguration:
          allOf:
          - $ref: '#/components/schemas/NotificationConfiguration'
          description: The structure containing the information required for notifications.
            If the structure is null, the configuration will be deleted from the stream.
    UpdateNotificationConfigurationOutput:
      type: object
      properties: {}
    UpdateSignalingChannelInput:
      type: object
      properties:
        ChannelARN:
          allOf:
          - $ref: '#/components/schemas/ResourceARN'
          description: The Amazon Resource Name (ARN) of the signaling channel that
            you want to update.
        CurrentVersion:
          allOf:
          - $ref: '#/components/schemas/Version'
          description: The current version of the signaling channel that you want
            to update.
        SingleMasterConfiguration:
          allOf:
          - $ref: '#/components/schemas/SingleMasterConfiguration'
          description: The structure containing the configuration for the `SINGLE_MASTER`
            type of the signaling channel that you want to update.
      required:
      - ChannelARN
      - CurrentVersion
    UpdateSignalingChannelOutput:
      type: object
      properties: {}
    UpdateStreamInput:
      type: object
      properties:
        StreamName:
          allOf:
          - $ref: '#/components/schemas/StreamName'
          description: 'The name of the stream whose metadata you want to update.


            The stream name is an identifier for the stream, and must be unique for
            each account and region.'
        StreamARN:
          allOf:
          - $ref: '#/components/schemas/ResourceARN'
          description: The ARN of the stream whose metadata you want to update.
        CurrentVersion:
          allOf:
          - $ref: '#/components/schemas/Version'
          description: The version of the stream whose metadata you want to update.
        DeviceName:
          allOf:
          - $ref: '#/components/schemas/DeviceName'
          description: 'The name of the device that is writing to the stream.


            In the current implementation, Kinesis Video Streams does not use this
            name.'
        MediaType:
          allOf:
          - $ref: '#/components/schemas/MediaType'
          description: 'The stream''s media type. Use `MediaType` to specify the type
            of content that the stream contains to the consumers of the stream. For
            more information about media types, see [Media Types](http://www.iana.org/assignments/media-types/media-types.xhtml).
            If you choose to specify the `MediaType`, see [Naming Requirements](https://tools.ietf.org/html/rfc6838#section-4.2).


            To play video on the console, you must specify the correct video type.
            For example, if the video in the stream is H.264, specify `video/h264`
            as the `MediaType`.'
      required:
      - CurrentVersion
    UpdateStreamOutput:
      type: object
      properties: {}
    UploaderConfig:
      type: object
      properties:
        ScheduleConfig:
          allOf:
          - $ref: '#/components/schemas/ScheduleConfig'
          description: The configuration that consists of the `ScheduleExpression`
            and the `DurationInMinutes` details that specify the scheduling to record
            from a camera, or local media file, onto the Edge Agent. If the `ScheduleConfig`
            is not provided in this `UploaderConfig`, then the Edge Agent will upload
            at regular intervals (every 1 hour).
      required:
      - ScheduleConfig
      description: The configuration that consists of the `ScheduleExpression` and
        the `DurationInMinutes` details that specify the scheduling to record from
        a camera, or local media file, onto the Edge Agent. If the `ScheduleConfig`
        is not provided in the `UploaderConfig`, then the Edge Agent will upload at
        regular intervals (every 1 hour).
    UploaderStatus:
      type: string
      enum:
      - SUCCESS
      - USER_ERROR
      - SYSTEM_ERROR
    Version:
      type: string
      pattern: ^[a-zA-Z0-9]+$
      minLength: 1
      maxLength: 64
    VersionMismatchException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      description: The stream version that you specified is not the latest version.
        To get the latest version, use the [DescribeStream](https://docs.aws.amazon.com/kinesisvideostreams/latest/dg/API_DescribeStream.html)
        API.
    WidthPixels:
      type: integer
      minimum: 1
      maximum: 3840
