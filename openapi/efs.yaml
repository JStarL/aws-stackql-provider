openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: efs
  x-aws-serviceName: efs
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-07'
  version: '2015-02-01'
  title: Amazon Elastic File System
  description: |-
    Amazon Elastic File System

    Amazon Elastic File System (Amazon EFS) provides simple, scalable file storage for use with Amazon EC2 Linux and Mac instances in the Amazon Web Services Cloud. With Amazon EFS, storage capacity is elastic, growing and shrinking automatically as you add and remove files, so that your applications have the storage they need, when they need it. For more information, see the [Amazon Elastic File System API Reference](https://docs.aws.amazon.com/efs/latest/ug/api-reference.html) and the [Amazon Elastic File System User Guide](https://docs.aws.amazon.com/efs/latest/ug/whatisefs.html).
servers:
- description: The Amazon Elastic File System regional endpoint
  url: https://elasticfilesystem.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths:
  /2015-02-01/access-points:
    post:
      operationId: CreateAccessPoint
      description: |-
        Creates an EFS access point. An access point is an application-specific view into an EFS file system that applies an operating system user and group, and a file system path, to any file system request made through the access point. The operating system user and group override any identity information provided by the NFS client. The file system path is exposed as the access point's root directory. Applications using the access point can only access data in the application's own directory and any subdirectories. To learn more, see [Mounting a file system using EFS access points](https://docs.aws.amazon.com/efs/latest/ug/efs-access-points.html).

        If multiple requests to create access points on the same file system are sent in quick succession, and the file system is near the limit of 1,000 access points, you may experience a throttling response for these requests. This is to ensure that the file system does not exceed the stated access point limit.

        This operation requires permissions for the `elasticfilesystem:CreateAccessPoint` action.

        Access points can be tagged on creation. If tags are specified in the creation action, IAM performs additional authorization on the `elasticfilesystem:TagResource` action to verify if users have permissions to create tags. Therefore, you must grant explicit permissions to use the `elasticfilesystem:TagResource` action. For more information, see [Granting permissions to tag resources during creation](https://docs.aws.amazon.com/efs/latest/ug/using-tags-efs.html#supported-iam-actions-tagging.html).
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ClientToken:
                  $ref: '#/components/schemas/ClientToken'
                Tags:
                  $ref: '#/components/schemas/Tags'
                FileSystemId:
                  $ref: '#/components/schemas/FileSystemId'
                PosixUser:
                  $ref: '#/components/schemas/PosixUser'
                RootDirectory:
                  $ref: '#/components/schemas/RootDirectory'
      responses:
        '200': {}
        '409':
          description: |-
            Returned if the file system's lifecycle state is not "available".
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncorrectFileSystemLifeCycleState'
        '403':
          description: |-
            Returned if the Amazon Web Services account has already created the maximum number of access points allowed per file system. For more informaton, see <https://docs.aws.amazon.com/efs/latest/ug/limits.html#limits-efs-resources-per-account-per-region>.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessPointLimitExceeded'
        '400':
          description: |-
            Returned if the request is malformed or contains an error such as an invalid parameter value or a missing required parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '404':
          description: |-
            Returned if the specified `FileSystemId` value doesn't exist in the requester's Amazon Web Services account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSystemNotFound'
        '500':
          description: |-
            Returned if an error occurred on the server side.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        '429':
          description: |-
            Returned when the `CreateAccessPoint` API action is called too quickly and the number of Access Points on the file system is nearing the [limit of 120](https://docs.aws.amazon.com/efs/latest/ug/limits.html#limits-efs-resources-per-account-per-region).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    get:
      operationId: DescribeAccessPoints
      description: |-
        Returns the description of a specific Amazon EFS access point if the `AccessPointId` is provided. If you provide an EFS `FileSystemId`, it returns descriptions of all access points for that file system. You can provide either an `AccessPointId` or a `FileSystemId` in the request, but not both.

        This operation requires permissions for the `elasticfilesystem:DescribeAccessPoints` action.
      parameters:
      - name: MaxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: NextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Token'
      - name: AccessPointId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/AccessPointId'
      - name: FileSystemId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/FileSystemId'
      responses:
        '200': {}
        '404':
          description: |-
            Returned if the specified `FileSystemId` value doesn't exist in the requester's Amazon Web Services account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSystemNotFound'
        '400':
          description: |-
            Returned if the request is malformed or contains an error such as an invalid parameter value or a missing required parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: |-
            Returned if an error occurred on the server side.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /2015-02-01/file-systems:
    post:
      operationId: CreateFileSystem
      description: |-
        Creates a new, empty file system. The operation requires a creation token in the request that Amazon EFS uses to ensure idempotent creation (calling the operation with same creation token has no effect). If a file system does not currently exist that is owned by the caller's Amazon Web Services account with the specified creation token, this operation does the following:

          * Creates a new, empty file system. The file system will have an Amazon EFS assigned ID, and an initial lifecycle state `creating`.

          * Returns with the description of the created file system.

        Otherwise, this operation returns a `FileSystemAlreadyExists` error with the ID of the existing file system.

        For basic use cases, you can use a randomly generated UUID for the creation token.

        The idempotent operation allows you to retry a `CreateFileSystem` call without risk of creating an extra file system. This can happen when an initial call fails in a way that leaves it uncertain whether or not a file system was actually created. An example might be that a transport level timeout occurred or your connection was reset. As long as you use the same creation token, if the initial call had succeeded in creating a file system, the client can learn of its existence from the `FileSystemAlreadyExists` error.

        For more information, see [Creating a file system](https://docs.aws.amazon.com/efs/latest/ug/creating-using-create-fs.html#creating-using-create-fs-part1) in the _Amazon EFS User Guide_.

        The `CreateFileSystem` call returns while the file system's lifecycle state is still `creating`. You can check the file system creation status by calling the DescribeFileSystems operation, which among other things returns the file system state.

        This operation accepts an optional `PerformanceMode` parameter that you choose for your file system. We recommend `generalPurpose` `PerformanceMode` for all file systems. The `maxIO` mode is a previous generation performance type that is designed for highly parallelized workloads that can tolerate higher latencies than the `generalPurpose` mode. `MaxIO` mode is not supported for One Zone file systems or file systems that use Elastic throughput.

        The `PerformanceMode` can't be changed after the file system has been created. For more information, see [Amazon EFS performance modes](https://docs.aws.amazon.com/efs/latest/ug/performance.html#performancemodes.html).

        You can set the throughput mode for the file system using the `ThroughputMode` parameter.

        After the file system is fully created, Amazon EFS sets its lifecycle state to `available`, at which point you can create one or more mount targets for the file system in your VPC. For more information, see CreateMountTarget. You mount your Amazon EFS file system on an EC2 instances in your VPC by using the mount target. For more information, see [Amazon EFS: How it Works](https://docs.aws.amazon.com/efs/latest/ug/how-it-works.html).

        This operation requires permissions for the `elasticfilesystem:CreateFileSystem` action.

        File systems can be tagged on creation. If tags are specified in the creation action, IAM performs additional authorization on the `elasticfilesystem:TagResource` action to verify if users have permissions to create tags. Therefore, you must grant explicit permissions to use the `elasticfilesystem:TagResource` action. For more information, see [Granting permissions to tag resources during creation](https://docs.aws.amazon.com/efs/latest/ug/using-tags-efs.html#supported-iam-actions-tagging.html).
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                CreationToken:
                  $ref: '#/components/schemas/CreationToken'
                PerformanceMode:
                  $ref: '#/components/schemas/PerformanceMode'
                Encrypted:
                  $ref: '#/components/schemas/Encrypted'
                KmsKeyId:
                  $ref: '#/components/schemas/KmsKeyId'
                ThroughputMode:
                  $ref: '#/components/schemas/ThroughputMode'
                ProvisionedThroughputInMibps:
                  $ref: '#/components/schemas/ProvisionedThroughputInMibps'
                AvailabilityZoneName:
                  $ref: '#/components/schemas/AvailabilityZoneName'
                Backup:
                  $ref: '#/components/schemas/Backup'
                Tags:
                  $ref: '#/components/schemas/Tags'
      responses:
        '201': {}
        '400':
          description: |-
            Returned if the requested Amazon EFS functionality is not available in the specified Availability Zone.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedAvailabilityZone'
        '409':
          description: |-
            Returned if the file system you are trying to create already exists, with the creation token you provided.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSystemAlreadyExists'
        '403':
          description: |-
            Returned if the Amazon Web Services account has already created the maximum number of file systems allowed per account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSystemLimitExceeded'
        '503':
          description: |-
            Returned if there's not enough capacity to provision additional throughput. This value might be returned when you try to create a file system in provisioned throughput mode, when you attempt to increase the provisioned throughput of an existing file system, or when you attempt to change an existing file system from Bursting Throughput to Provisioned Throughput mode. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsufficientThroughputCapacity'
        '500':
          description: |-
            Returned if an error occurred on the server side.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    get:
      operationId: DescribeFileSystems
      description: |-
        Returns the description of a specific Amazon EFS file system if either the file system `CreationToken` or the `FileSystemId` is provided. Otherwise, it returns descriptions of all file systems owned by the caller's Amazon Web Services account in the Amazon Web Services Region of the endpoint that you're calling.

        When retrieving all file system descriptions, you can optionally specify the `MaxItems` parameter to limit the number of descriptions in a response. This number is automatically set to 100. If more file system descriptions remain, Amazon EFS returns a `NextMarker`, an opaque token, in the response. In this case, you should send a subsequent request with the `Marker` request parameter set to the value of `NextMarker`.

        To retrieve a list of your file system descriptions, this operation is used in an iterative process, where `DescribeFileSystems` is called first without the `Marker` and then the operation continues to call it with the `Marker` parameter set to the value of the `NextMarker` from the previous response until the response has no `NextMarker`.

        The order of file systems returned in the response of one `DescribeFileSystems` call and the order of file systems returned across the responses of a multi-call iteration is unspecified.

        This operation requires permissions for the `elasticfilesystem:DescribeFileSystems` action.
      parameters:
      - name: MaxItems
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxItems'
      - name: Marker
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Marker'
      - name: CreationToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/CreationToken'
      - name: FileSystemId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/FileSystemId'
      responses:
        '200': {}
        '400':
          description: |-
            Returned if the request is malformed or contains an error such as an invalid parameter value or a missing required parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '404':
          description: |-
            Returned if the specified `FileSystemId` value doesn't exist in the requester's Amazon Web Services account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSystemNotFound'
        '500':
          description: |-
            Returned if an error occurred on the server side.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /2015-02-01/mount-targets:
    post:
      operationId: CreateMountTarget
      description: |-
        Creates a mount target for a file system. You can then mount the file system on EC2 instances by using the mount target.

        You can create one mount target in each Availability Zone in your VPC. All EC2 instances in a VPC within a given Availability Zone share a single mount target for a given file system. If you have multiple subnets in an Availability Zone, you create a mount target in one of the subnets. EC2 instances do not need to be in the same subnet as the mount target in order to access their file system.

        You can create only one mount target for a One Zone file system. You must create that mount target in the same Availability Zone in which the file system is located. Use the `AvailabilityZoneName` and `AvailabiltyZoneId` properties in the DescribeFileSystems response object to get this information. Use the `subnetId` associated with the file system's Availability Zone when creating the mount target.

        For more information, see [Amazon EFS: How it Works](https://docs.aws.amazon.com/efs/latest/ug/how-it-works.html).

        To create a mount target for a file system, the file system's lifecycle state must be `available`. For more information, see DescribeFileSystems.

        In the request, provide the following:

          * The file system ID for which you are creating the mount target.

          * A subnet ID, which determines the following:

            * The VPC in which Amazon EFS creates the mount target

            * The Availability Zone in which Amazon EFS creates the mount target

            * The IP address range from which Amazon EFS selects the IP address of the mount target (if you don't specify an IP address in the request)

        After creating the mount target, Amazon EFS returns a response that includes, a `MountTargetId` and an `IpAddress`. You use this IP address when mounting the file system in an EC2 instance. You can also use the mount target's DNS name when mounting the file system. The EC2 instance on which you mount the file system by using the mount target can resolve the mount target's DNS name to its IP address. For more information, see [How it Works: Implementation Overview](https://docs.aws.amazon.com/efs/latest/ug/how-it-works.html#how-it-works-implementation).

        Note that you can create mount targets for a file system in only one VPC, and there can be only one mount target per Availability Zone. That is, if the file system already has one or more mount targets created for it, the subnet specified in the request to add another mount target must meet the following requirements:

          * Must belong to the same VPC as the subnets of the existing mount targets

          * Must not be in the same Availability Zone as any of the subnets of the existing mount targets

        If the request satisfies the requirements, Amazon EFS does the following:

          * Creates a new mount target in the specified subnet.

          * Also creates a new network interface in the subnet as follows:

            * If the request provides an `IpAddress`, Amazon EFS assigns that IP address to the network interface. Otherwise, Amazon EFS assigns a free address in the subnet (in the same way that the Amazon EC2 `CreateNetworkInterface` call does when a request does not specify a primary private IP address).

            * If the request provides `SecurityGroups`, this network interface is associated with those security groups. Otherwise, it belongs to the default security group for the subnet's VPC.

            * Assigns the description `Mount target _fsmt-id_ for file system _fs-id_ ` where ` _fsmt-id_ ` is the mount target ID, and ` _fs-id_ ` is the `FileSystemId`.

            * Sets the `requesterManaged` property of the network interface to `true`, and the `requesterId` value to `EFS`.

        Each Amazon EFS mount target has one corresponding requester-managed EC2 network interface. After the network interface is created, Amazon EFS sets the `NetworkInterfaceId` field in the mount target's description to the network interface ID, and the `IpAddress` field to its address. If network interface creation fails, the entire `CreateMountTarget` operation fails.

        The `CreateMountTarget` call returns only after creating the network interface, but while the mount target state is still `creating`, you can check the mount target creation status by calling the DescribeMountTargets operation, which among other things returns the mount target state.

        We recommend that you create a mount target in each of the Availability Zones. There are cost considerations for using a file system in an Availability Zone through a mount target created in another Availability Zone. For more information, see [Amazon EFS](http://aws.amazon.com/efs/). In addition, by always using a mount target local to the instance's Availability Zone, you eliminate a partial failure scenario. If the Availability Zone in which your mount target is created goes down, then you can't access your file system through that mount target.

        This operation requires permissions for the following action on the file system:

          * `elasticfilesystem:CreateMountTarget`

        This operation also requires permissions for the following Amazon EC2 actions:

          * `ec2:DescribeSubnets`

          * `ec2:DescribeNetworkInterfaces`

          * `ec2:CreateNetworkInterface`
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                FileSystemId:
                  $ref: '#/components/schemas/FileSystemId'
                SubnetId:
                  $ref: '#/components/schemas/SubnetId'
                IpAddress:
                  $ref: '#/components/schemas/IpAddress'
                SecurityGroups:
                  $ref: '#/components/schemas/SecurityGroups'
      responses:
        '200': {}
        '400':
          description: |-
            Returned if the requested Amazon EFS functionality is not available in the specified Availability Zone.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedAvailabilityZone'
        '404':
          description: |-
            Returned if the specified `FileSystemId` value doesn't exist in the requester's Amazon Web Services account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSystemNotFound'
        '409':
          description: |-
            Returned if `IpAddress` was not specified in the request and there are no free IP addresses in the subnet.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoFreeAddressesInSubnet'
        '500':
          description: |-
            Returned if an error occurred on the server side.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    get:
      operationId: DescribeMountTargets
      description: |-
        Returns the descriptions of all the current mount targets, or a specific mount target, for a file system. When requesting all of the current mount targets, the order of mount targets returned in the response is unspecified.

        This operation requires permissions for the `elasticfilesystem:DescribeMountTargets` action, on either the file system ID that you specify in `FileSystemId`, or on the file system of the mount target that you specify in `MountTargetId`.
      parameters:
      - name: MaxItems
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxItems'
      - name: Marker
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Marker'
      - name: FileSystemId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/FileSystemId'
      - name: MountTargetId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MountTargetId'
      - name: AccessPointId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/AccessPointId'
      responses:
        '200': {}
        '404':
          description: |-
            Returned if there is no mount target with the specified ID found in the caller's Amazon Web Services account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MountTargetNotFound'
        '400':
          description: |-
            Returned if the request is malformed or contains an error such as an invalid parameter value or a missing required parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: |-
            Returned if an error occurred on the server side.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /2015-02-01/file-systems/{SourceFileSystemId}/replication-configuration:
    post:
      operationId: CreateReplicationConfiguration
      description: "Creates a replication conﬁguration to either a new or existing\
        \ EFS file system. For more information, see [Amazon EFS replication](https://docs.aws.amazon.com/efs/latest/ug/efs-replication.html)\
        \ in the _Amazon EFS User Guide_. The replication configuration specifies\
        \ the following:\n\n  * **Source file system** – The EFS file system that\
        \ you want to replicate. \n\n  * **Destination file system** – The destination\
        \ file system to which the source file system is replicated. There can only\
        \ be one destination file system in a replication configuration. \n\nA file\
        \ system can be part of only one replication configuration.\n\nThe destination\
        \ parameters for the replication configuration depend on whether you are replicating\
        \ to a new file system or to an existing file system, and if you are replicating\
        \ across Amazon Web Services accounts. See DestinationToCreate for more information.\n\
        \nThis operation requires permissions for the `elasticfilesystem:CreateReplicationConfiguration`\
        \ action. Additionally, other permissions are required depending on how you\
        \ are replicating file systems. For more information, see [Required permissions\
        \ for replication](https://docs.aws.amazon.com/efs/latest/ug/efs-replication.html#efs-replication-permissions)\
        \ in the _Amazon EFS User Guide_."
      parameters:
      - name: SourceFileSystemId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FileSystemId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Destinations:
                  $ref: '#/components/schemas/DestinationsToCreate'
      responses:
        '200': {}
        '400':
          description: |-
            Returned if the Backup service is not available in the Amazon Web Services Region in which the request was made.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '409':
          description: |-
            Returned if the file system's lifecycle state is not "available".
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncorrectFileSystemLifeCycleState'
        '403':
          description: |-
            Returned if the Amazon Web Services account has already created the maximum number of file systems allowed per account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSystemLimitExceeded'
        '404':
          description: |-
            Returned if the specified file system does not have a replication configuration.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReplicationNotFound'
        '503':
          description: |-
            Returned if there's not enough capacity to provision additional throughput. This value might be returned when you try to create a file system in provisioned throughput mode, when you attempt to increase the provisioned throughput of an existing file system, or when you attempt to change an existing file system from Bursting Throughput to Provisioned Throughput mode. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsufficientThroughputCapacity'
        '500':
          description: |-
            Returned if an error occurred on the server side.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    delete:
      operationId: DeleteReplicationConfiguration
      description: |-
        Deletes a replication configuration. Deleting a replication configuration ends the replication process. After a replication configuration is deleted, the destination file system becomes `Writeable` and its replication overwrite protection is re-enabled. For more information, see [Delete a replication configuration](https://docs.aws.amazon.com/efs/latest/ug/delete-replications.html).

        This operation requires permissions for the `elasticfilesystem:DeleteReplicationConfiguration` action.
      parameters:
      - name: SourceFileSystemId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FileSystemId'
      - name: deletionMode
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/DeletionMode'
      responses:
        '204': {}
        '400':
          description: |-
            Returned if the request is malformed or contains an error such as an invalid parameter value or a missing required parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '404':
          description: |-
            Returned if the specified file system does not have a replication configuration.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReplicationNotFound'
        '500':
          description: |-
            Returned if an error occurred on the server side.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /2015-02-01/create-tags/{FileSystemId}:
    post:
      operationId: CreateTags
      description: |-
        DEPRECATED - `CreateTags` is deprecated and not maintained. To create tags for EFS resources, use the API action.

        Creates or overwrites tags associated with a file system. Each tag is a key-value pair. If a tag key specified in the request already exists on the file system, this operation overwrites its value with the value provided in the request. If you add the `Name` tag to your file system, Amazon EFS returns it in the response to the DescribeFileSystems operation.

        This operation requires permission for the `elasticfilesystem:CreateTags` action.
      parameters:
      - name: FileSystemId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FileSystemId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Tags:
                  $ref: '#/components/schemas/Tags'
      responses:
        '204': {}
        '400':
          description: |-
            Returned if the request is malformed or contains an error such as an invalid parameter value or a missing required parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '404':
          description: |-
            Returned if the specified `FileSystemId` value doesn't exist in the requester's Amazon Web Services account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSystemNotFound'
        '500':
          description: |-
            Returned if an error occurred on the server side.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /2015-02-01/access-points/{AccessPointId}:
    delete:
      operationId: DeleteAccessPoint
      description: |-
        Deletes the specified access point. After deletion is complete, new clients can no longer connect to the access points. Clients connected to the access point at the time of deletion will continue to function until they terminate their connection.

        This operation requires permissions for the `elasticfilesystem:DeleteAccessPoint` action.
      parameters:
      - name: AccessPointId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AccessPointId'
      responses:
        '204': {}
        '404':
          description: |-
            Returned if the specified `AccessPointId` value doesn't exist in the requester's Amazon Web Services account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessPointNotFound'
        '400':
          description: |-
            Returned if the request is malformed or contains an error such as an invalid parameter value or a missing required parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: |-
            Returned if an error occurred on the server side.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /2015-02-01/file-systems/{FileSystemId}:
    delete:
      operationId: DeleteFileSystem
      description: |-
        Deletes a file system, permanently severing access to its contents. Upon return, the file system no longer exists and you can't access any contents of the deleted file system.

        You need to manually delete mount targets attached to a file system before you can delete an EFS file system. This step is performed for you when you use the Amazon Web Services console to delete a file system.

        You cannot delete a file system that is part of an EFS replication configuration. You need to delete the replication configuration first.

        You can't delete a file system that is in use. That is, if the file system has any mount targets, you must first delete them. For more information, see DescribeMountTargets and DeleteMountTarget.

        The `DeleteFileSystem` call returns while the file system state is still `deleting`. You can check the file system deletion status by calling the DescribeFileSystems operation, which returns a list of file systems in your account. If you pass file system ID or creation token for the deleted file system, the DescribeFileSystems returns a `404 FileSystemNotFound` error.

        This operation requires permissions for the `elasticfilesystem:DeleteFileSystem` action.
      parameters:
      - name: FileSystemId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FileSystemId'
      responses:
        '204': {}
        '400':
          description: |-
            Returned if the request is malformed or contains an error such as an invalid parameter value or a missing required parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '409':
          description: |-
            Returned if a file system has mount targets.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSystemInUse'
        '404':
          description: |-
            Returned if the specified `FileSystemId` value doesn't exist in the requester's Amazon Web Services account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSystemNotFound'
        '500':
          description: |-
            Returned if an error occurred on the server side.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    put:
      operationId: UpdateFileSystem
      description: |-
        Updates the throughput mode or the amount of provisioned throughput of an existing file system.
      parameters:
      - name: FileSystemId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FileSystemId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ThroughputMode:
                  $ref: '#/components/schemas/ThroughputMode'
                ProvisionedThroughputInMibps:
                  $ref: '#/components/schemas/ProvisionedThroughputInMibps'
      responses:
        '202': {}
        '400':
          description: |-
            Returned if the throughput mode or amount of provisioned throughput can't be changed because the throughput limit of 1024 MiB/s has been reached.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThroughputLimitExceeded'
        '404':
          description: |-
            Returned if the specified `FileSystemId` value doesn't exist in the requester's Amazon Web Services account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSystemNotFound'
        '409':
          description: |-
            Returned if the file system's lifecycle state is not "available".
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncorrectFileSystemLifeCycleState'
        '503':
          description: |-
            Returned if there's not enough capacity to provision additional throughput. This value might be returned when you try to create a file system in provisioned throughput mode, when you attempt to increase the provisioned throughput of an existing file system, or when you attempt to change an existing file system from Bursting Throughput to Provisioned Throughput mode. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsufficientThroughputCapacity'
        '500':
          description: |-
            Returned if an error occurred on the server side.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        '429':
          description: |-
            Returned if you don’t wait at least 24 hours before either changing the throughput mode, or decreasing the Provisioned Throughput value.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequests'
  /2015-02-01/file-systems/{FileSystemId}/policy:
    delete:
      operationId: DeleteFileSystemPolicy
      description: |-
        Deletes the `FileSystemPolicy` for the specified file system. The default `FileSystemPolicy` goes into effect once the existing policy is deleted. For more information about the default file system policy, see [Using Resource-based Policies with EFS](https://docs.aws.amazon.com/efs/latest/ug/res-based-policies-efs.html).

        This operation requires permissions for the `elasticfilesystem:DeleteFileSystemPolicy` action.
      parameters:
      - name: FileSystemId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FileSystemId'
      responses:
        '200': {}
        '400':
          description: |-
            Returned if the request is malformed or contains an error such as an invalid parameter value or a missing required parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '404':
          description: |-
            Returned if the specified `FileSystemId` value doesn't exist in the requester's Amazon Web Services account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSystemNotFound'
        '409':
          description: |-
            Returned if the file system's lifecycle state is not "available".
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncorrectFileSystemLifeCycleState'
        '500':
          description: |-
            Returned if an error occurred on the server side.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    get:
      operationId: DescribeFileSystemPolicy
      description: |-
        Returns the `FileSystemPolicy` for the specified EFS file system.

        This operation requires permissions for the `elasticfilesystem:DescribeFileSystemPolicy` action.
      parameters:
      - name: FileSystemId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FileSystemId'
      responses:
        '200': {}
        '400':
          description: |-
            Returned if the request is malformed or contains an error such as an invalid parameter value or a missing required parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '404':
          description: |-
            Returned if the default file system policy is in effect for the EFS file system specified.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyNotFound'
        '500':
          description: |-
            Returned if an error occurred on the server side.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    put:
      operationId: PutFileSystemPolicy
      description: |-
        Applies an Amazon EFS `FileSystemPolicy` to an Amazon EFS file system. A file system policy is an IAM resource-based policy and can contain multiple policy statements. A file system always has exactly one file system policy, which can be the default policy or an explicit policy set or updated using this API operation. EFS file system policies have a 20,000 character limit. When an explicit policy is set, it overrides the default policy. For more information about the default file system policy, see [ Default EFS file system policy](https://docs.aws.amazon.com/efs/latest/ug/iam-access-control-nfs-efs.html#default-filesystempolicy).

        EFS file system policies have a 20,000 character limit.

        This operation requires permissions for the `elasticfilesystem:PutFileSystemPolicy` action.
      parameters:
      - name: FileSystemId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FileSystemId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Policy:
                  $ref: '#/components/schemas/Policy'
                BypassPolicyLockoutSafetyCheck:
                  $ref: '#/components/schemas/BypassPolicyLockoutSafetyCheck'
      responses:
        '200': {}
        '400':
          description: |-
            Returned if the `FileSystemPolicy` is malformed or contains an error such as a parameter value that is not valid or a missing required parameter. Returned in the case of a policy lockout safety check error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidPolicyException'
        '404':
          description: |-
            Returned if the specified `FileSystemId` value doesn't exist in the requester's Amazon Web Services account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSystemNotFound'
        '409':
          description: |-
            Returned if the file system's lifecycle state is not "available".
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncorrectFileSystemLifeCycleState'
        '500':
          description: |-
            Returned if an error occurred on the server side.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /2015-02-01/mount-targets/{MountTargetId}:
    delete:
      operationId: DeleteMountTarget
      description: |-
        Deletes the specified mount target.

        This operation forcibly breaks any mounts of the file system by using the mount target that is being deleted, which might disrupt instances or applications using those mounts. To avoid applications getting cut off abruptly, you might consider unmounting any mounts of the mount target, if feasible. The operation also deletes the associated network interface. Uncommitted writes might be lost, but breaking a mount target using this operation does not corrupt the file system itself. The file system you created remains. You can mount an EC2 instance in your VPC by using another mount target.

        This operation requires permissions for the following action on the file system:

          * `elasticfilesystem:DeleteMountTarget`

        The `DeleteMountTarget` call returns while the mount target state is still `deleting`. You can check the mount target deletion by calling the DescribeMountTargets operation, which returns a list of mount target descriptions for the given file system.

        The operation also requires permissions for the following Amazon EC2 action on the mount target's network interface:

          * `ec2:DeleteNetworkInterface`
      parameters:
      - name: MountTargetId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MountTargetId'
      responses:
        '204': {}
        '400':
          description: |-
            Returned if the request is malformed or contains an error such as an invalid parameter value or a missing required parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '504':
          description: |-
            The service timed out trying to fulfill the request, and the client should try the call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DependencyTimeout'
        '500':
          description: |-
            Returned if an error occurred on the server side.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        '404':
          description: |-
            Returned if there is no mount target with the specified ID found in the caller's Amazon Web Services account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MountTargetNotFound'
  /2015-02-01/delete-tags/{FileSystemId}:
    post:
      operationId: DeleteTags
      description: |-
        DEPRECATED - `DeleteTags` is deprecated and not maintained. To remove tags from EFS resources, use the API action.

        Deletes the specified tags from a file system. If the `DeleteTags` request includes a tag key that doesn't exist, Amazon EFS ignores it and doesn't cause an error. For more information about tags and related restrictions, see [Tag restrictions](https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html) in the _Billing and Cost Management User Guide_.

        This operation requires permissions for the `elasticfilesystem:DeleteTags` action.
      parameters:
      - name: FileSystemId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FileSystemId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                TagKeys:
                  $ref: '#/components/schemas/TagKeys'
      responses:
        '204': {}
        '400':
          description: |-
            Returned if the request is malformed or contains an error such as an invalid parameter value or a missing required parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '404':
          description: |-
            Returned if the specified `FileSystemId` value doesn't exist in the requester's Amazon Web Services account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSystemNotFound'
        '500':
          description: |-
            Returned if an error occurred on the server side.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /2015-02-01/account-preferences:
    get:
      operationId: DescribeAccountPreferences
      description: |-
        Returns the account preferences settings for the Amazon Web Services account associated with the user making the request, in the current Amazon Web Services Region.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                NextToken:
                  $ref: '#/components/schemas/Token'
                MaxResults:
                  $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '500':
          description: |-
            Returned if an error occurred on the server side.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    put:
      operationId: PutAccountPreferences
      description: |-
        Use this operation to set the account preference in the current Amazon Web Services Region to use long 17 character (63 bit) or short 8 character (32 bit) resource IDs for new EFS file system and mount target resources. All existing resource IDs are not affected by any changes you make. You can set the ID preference during the opt-in period as EFS transitions to long resource IDs. For more information, see [Managing Amazon EFS resource IDs](https://docs.aws.amazon.com/efs/latest/ug/manage-efs-resource-ids.html).

        Starting in October, 2021, you will receive an error if you try to set the account preference to use the short 8 character format resource ID. Contact Amazon Web Services support if you receive an error and must use short IDs for file system and mount target resources.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ResourceIdType:
                  $ref: '#/components/schemas/ResourceIdType'
      responses:
        '200': {}
        '400':
          description: |-
            Returned if the request is malformed or contains an error such as an invalid parameter value or a missing required parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: |-
            Returned if an error occurred on the server side.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /2015-02-01/file-systems/{FileSystemId}/backup-policy:
    get:
      operationId: DescribeBackupPolicy
      description: |-
        Returns the backup policy for the specified EFS file system.
      parameters:
      - name: FileSystemId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FileSystemId'
      responses:
        '200': {}
        '400':
          description: |-
            Returned if the Backup service is not available in the Amazon Web Services Region in which the request was made.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '404':
          description: |-
            Returned if the default file system policy is in effect for the EFS file system specified.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyNotFound'
        '500':
          description: |-
            Returned if an error occurred on the server side.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    put:
      operationId: PutBackupPolicy
      description: |-
        Updates the file system's backup policy. Use this action to start or stop automatic backups of the file system.
      parameters:
      - name: FileSystemId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FileSystemId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                BackupPolicy:
                  $ref: '#/components/schemas/BackupPolicy'
      responses:
        '200': {}
        '400':
          description: |-
            Returned if the Backup service is not available in the Amazon Web Services Region in which the request was made.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '404':
          description: |-
            Returned if the specified `FileSystemId` value doesn't exist in the requester's Amazon Web Services account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSystemNotFound'
        '409':
          description: |-
            Returned if the file system's lifecycle state is not "available".
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncorrectFileSystemLifeCycleState'
        '500':
          description: |-
            Returned if an error occurred on the server side.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /2015-02-01/file-systems/{FileSystemId}/lifecycle-configuration:
    get:
      operationId: DescribeLifecycleConfiguration
      description: |-
        Returns the current `LifecycleConfiguration` object for the specified Amazon EFS file system. Lifecycle management uses the `LifecycleConfiguration` object to identify when to move files between storage classes. For a file system without a `LifecycleConfiguration` object, the call returns an empty array in the response.

        This operation requires permissions for the `elasticfilesystem:DescribeLifecycleConfiguration` operation.
      parameters:
      - name: FileSystemId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FileSystemId'
      responses:
        '200': {}
        '400':
          description: |-
            Returned if the request is malformed or contains an error such as an invalid parameter value or a missing required parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '404':
          description: |-
            Returned if the specified `FileSystemId` value doesn't exist in the requester's Amazon Web Services account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSystemNotFound'
        '500':
          description: |-
            Returned if an error occurred on the server side.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    put:
      operationId: PutLifecycleConfiguration
      description: |-
        Use this action to manage storage for your file system. A `LifecycleConfiguration` consists of one or more `LifecyclePolicy` objects that define the following:

          * **`TransitionToIA` ** – When to move files in the file system from primary storage (Standard storage class) into the Infrequent Access (IA) storage.

          * **`TransitionToArchive` ** – When to move files in the file system from their current storage class (either IA or Standard storage) into the Archive storage.

        File systems cannot transition into Archive storage before transitioning into IA storage. Therefore, TransitionToArchive must either not be set or must be later than TransitionToIA.

        The Archive storage class is available only for file systems that use the Elastic throughput mode and the General Purpose performance mode.

          * **`TransitionToPrimaryStorageClass` ** – Whether to move files in the file system back to primary storage (Standard storage class) after they are accessed in IA or Archive storage.

        For more information, see [ Managing file system storage](https://docs.aws.amazon.com/efs/latest/ug/lifecycle-management-efs.html).

        Each Amazon EFS file system supports one lifecycle configuration, which applies to all files in the file system. If a `LifecycleConfiguration` object already exists for the specified file system, a `PutLifecycleConfiguration` call modifies the existing configuration. A `PutLifecycleConfiguration` call with an empty `LifecyclePolicies` array in the request body deletes any existing `LifecycleConfiguration`. In the request, specify the following:

          * The ID for the file system for which you are enabling, disabling, or modifying lifecycle management.

          * A `LifecyclePolicies` array of `LifecyclePolicy` objects that define when to move files to IA storage, to Archive storage, and back to primary storage.

        Amazon EFS requires that each `LifecyclePolicy` object have only have a single transition, so the `LifecyclePolicies` array needs to be structured with separate `LifecyclePolicy` objects. See the example requests in the following section for more information.

        This operation requires permissions for the `elasticfilesystem:PutLifecycleConfiguration` operation.

        To apply a `LifecycleConfiguration` object to an encrypted file system, you need the same Key Management Service permissions as when you created the encrypted file system.
      parameters:
      - name: FileSystemId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FileSystemId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                LifecyclePolicies:
                  $ref: '#/components/schemas/LifecyclePolicies'
      responses:
        '200': {}
        '400':
          description: |-
            Returned if the request is malformed or contains an error such as an invalid parameter value or a missing required parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '404':
          description: |-
            Returned if the specified `FileSystemId` value doesn't exist in the requester's Amazon Web Services account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSystemNotFound'
        '409':
          description: |-
            Returned if the file system's lifecycle state is not "available".
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncorrectFileSystemLifeCycleState'
        '500':
          description: |-
            Returned if an error occurred on the server side.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /2015-02-01/mount-targets/{MountTargetId}/security-groups:
    get:
      operationId: DescribeMountTargetSecurityGroups
      description: "Returns the security groups currently in effect for a mount target.\
        \ This operation requires that the network interface of the mount target has\
        \ been created and the lifecycle state of the mount target is not `deleted`.\n\
        \nThis operation requires permissions for the following actions:\n\n  * `elasticfilesystem:DescribeMountTargetSecurityGroups`\
        \ action on the mount target's file system. \n\n  * `ec2:DescribeNetworkInterfaceAttribute`\
        \ action on the mount target's network interface."
      parameters:
      - name: MountTargetId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MountTargetId'
      responses:
        '200': {}
        '400':
          description: |-
            Returned if the request is malformed or contains an error such as an invalid parameter value or a missing required parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '409':
          description: |-
            Returned if the mount target is not in the correct state for the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncorrectMountTargetState'
        '500':
          description: |-
            Returned if an error occurred on the server side.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        '404':
          description: |-
            Returned if there is no mount target with the specified ID found in the caller's Amazon Web Services account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MountTargetNotFound'
    put:
      operationId: ModifyMountTargetSecurityGroups
      description: "Modifies the set of security groups in effect for a mount target.\n\
        \nWhen you create a mount target, Amazon EFS also creates a new network interface.\
        \ For more information, see CreateMountTarget. This operation replaces the\
        \ security groups in effect for the network interface associated with a mount\
        \ target, with the `SecurityGroups` provided in the request. This operation\
        \ requires that the network interface of the mount target has been created\
        \ and the lifecycle state of the mount target is not `deleted`.\n\nThe operation\
        \ requires permissions for the following actions:\n\n  * `elasticfilesystem:ModifyMountTargetSecurityGroups`\
        \ action on the mount target's file system. \n\n  * `ec2:ModifyNetworkInterfaceAttribute`\
        \ action on the mount target's network interface."
      parameters:
      - name: MountTargetId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MountTargetId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                SecurityGroups:
                  $ref: '#/components/schemas/SecurityGroups'
      responses:
        '204': {}
        '400':
          description: |-
            Returned if one of the specified security groups doesn't exist in the subnet's virtual private cloud (VPC).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityGroupNotFound'
        '409':
          description: |-
            Returned if the mount target is not in the correct state for the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncorrectMountTargetState'
        '500':
          description: |-
            Returned if an error occurred on the server side.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        '404':
          description: |-
            Returned if there is no mount target with the specified ID found in the caller's Amazon Web Services account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MountTargetNotFound'
  /2015-02-01/file-systems/replication-configurations:
    get:
      operationId: DescribeReplicationConfigurations
      description: |-
        Retrieves the replication configuration for a specific file system. If a file system is not specified, all of the replication configurations for the Amazon Web Services account in an Amazon Web Services Region are retrieved.
      parameters:
      - name: FileSystemId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/FileSystemId'
      - name: NextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Token'
      - name: MaxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '400':
          description: |-
            Returned if the Backup service is not available in the Amazon Web Services Region in which the request was made.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '404':
          description: |-
            Returned if the specified file system does not have a replication configuration.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReplicationNotFound'
        '500':
          description: |-
            Returned if an error occurred on the server side.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /2015-02-01/tags/{FileSystemId}:
    get:
      operationId: DescribeTags
      description: |-
        DEPRECATED - The `DescribeTags` action is deprecated and not maintained. To view tags associated with EFS resources, use the `ListTagsForResource` API action.

        Returns the tags associated with a file system. The order of tags returned in the response of one `DescribeTags` call and the order of tags returned across the responses of a multiple-call iteration (when using pagination) is unspecified.

        This operation requires permissions for the `elasticfilesystem:DescribeTags` action.
      parameters:
      - name: MaxItems
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxItems'
      - name: Marker
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Marker'
      - name: FileSystemId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FileSystemId'
      responses:
        '200': {}
        '400':
          description: |-
            Returned if the request is malformed or contains an error such as an invalid parameter value or a missing required parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '404':
          description: |-
            Returned if the specified `FileSystemId` value doesn't exist in the requester's Amazon Web Services account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSystemNotFound'
        '500':
          description: |-
            Returned if an error occurred on the server side.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /2015-02-01/resource-tags/{ResourceId}:
    get:
      operationId: ListTagsForResource
      description: |-
        Lists all tags for a top-level EFS resource. You must provide the ID of the resource that you want to retrieve the tags for.

        This operation requires permissions for the `elasticfilesystem:DescribeAccessPoints` action.
      parameters:
      - name: ResourceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceId'
      - name: MaxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: NextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Token'
      responses:
        '200': {}
        '404':
          description: |-
            Returned if the specified `FileSystemId` value doesn't exist in the requester's Amazon Web Services account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSystemNotFound'
        '400':
          description: |-
            Returned if the request is malformed or contains an error such as an invalid parameter value or a missing required parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: |-
            Returned if an error occurred on the server side.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    post:
      operationId: TagResource
      description: |-
        Creates a tag for an EFS resource. You can create tags for EFS file systems and access points using this API operation.

        This operation requires permissions for the `elasticfilesystem:TagResource` action.
      parameters:
      - name: ResourceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Tags:
                  $ref: '#/components/schemas/Tags'
      responses:
        '200': {}
        '404':
          description: |-
            Returned if the specified `FileSystemId` value doesn't exist in the requester's Amazon Web Services account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSystemNotFound'
        '400':
          description: |-
            Returned if the request is malformed or contains an error such as an invalid parameter value or a missing required parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: |-
            Returned if an error occurred on the server side.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    delete:
      operationId: UntagResource
      description: |-
        Removes tags from an EFS resource. You can remove tags from EFS file systems and access points using this API operation.

        This operation requires permissions for the `elasticfilesystem:UntagResource` action.
      parameters:
      - name: ResourceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceId'
      - name: tagKeys
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/TagKeys'
      responses:
        '200': {}
        '404':
          description: |-
            Returned if the specified `FileSystemId` value doesn't exist in the requester's Amazon Web Services account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSystemNotFound'
        '400':
          description: |-
            Returned if the request is malformed or contains an error such as an invalid parameter value or a missing required parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: |-
            Returned if an error occurred on the server side.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /2015-02-01/file-systems/{FileSystemId}/protection:
    put:
      operationId: UpdateFileSystemProtection
      description: |-
        Updates protection on the file system.

        This operation requires permissions for the `elasticfilesystem:UpdateFileSystemProtection` action.
      parameters:
      - name: FileSystemId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FileSystemId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ReplicationOverwriteProtection:
                  $ref: '#/components/schemas/ReplicationOverwriteProtection'
      responses:
        '200': {}
        '400':
          description: |-
            Returned if the throughput mode or amount of provisioned throughput can't be changed because the throughput limit of 1024 MiB/s has been reached.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThroughputLimitExceeded'
        '404':
          description: |-
            Returned if the specified `FileSystemId` value doesn't exist in the requester's Amazon Web Services account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSystemNotFound'
        '409':
          description: |-
            Returned if the file system is already included in a replication configuration.>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReplicationAlreadyExists'
        '503':
          description: |-
            Returned if there's not enough capacity to provision additional throughput. This value might be returned when you try to create a file system in provisioned throughput mode, when you attempt to increase the provisioned throughput of an existing file system, or when you attempt to change an existing file system from Bursting Throughput to Provisioned Throughput mode. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsufficientThroughputCapacity'
        '500':
          description: |-
            Returned if an error occurred on the server side.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
        '429':
          description: |-
            Returned if you don’t wait at least 24 hours before either changing the throughput mode, or decreasing the Provisioned Throughput value.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequests'
components:
  schemas:
    AccessPointAlreadyExists:
      type: object
      properties:
        ErrorCode:
          $ref: '#/components/schemas/ErrorCode'
        Message:
          $ref: '#/components/schemas/ErrorMessage'
        AccessPointId:
          $ref: '#/components/schemas/AccessPointId'
      required:
      - ErrorCode
      - AccessPointId
      description: Returned if the access point that you are trying to create already
        exists, with the creation token you provided in the request.
    AccessPointArn:
      type: string
      pattern: ^arn:aws[-a-z]*:elasticfilesystem:[0-9a-z-:]+:access-point/fsap-[0-9a-f]{8,40}$
      minLength: 0
      maxLength: 128
    AccessPointDescription:
      type: object
      properties:
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: The opaque string specified in the request to ensure idempotent
            creation.
        Name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the access point. This is the value of the `Name`
            tag.
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: The tags associated with the access point, presented as an
            array of Tag objects.
        AccessPointId:
          allOf:
          - $ref: '#/components/schemas/AccessPointId'
          description: The ID of the access point, assigned by Amazon EFS.
        AccessPointArn:
          allOf:
          - $ref: '#/components/schemas/AccessPointArn'
          description: The unique Amazon Resource Name (ARN) associated with the access
            point.
        FileSystemId:
          allOf:
          - $ref: '#/components/schemas/FileSystemId'
          description: The ID of the EFS file system that the access point applies
            to.
        PosixUser:
          allOf:
          - $ref: '#/components/schemas/PosixUser'
          description: The full POSIX identity, including the user ID, group ID, and
            secondary group IDs on the access point that is used for all file operations
            by NFS clients using the access point.
        RootDirectory:
          allOf:
          - $ref: '#/components/schemas/RootDirectory'
          description: The directory on the EFS file system that the access point
            exposes as the root directory to NFS clients using the access point.
        OwnerId:
          allOf:
          - $ref: '#/components/schemas/AwsAccountId'
          description: Identifies the Amazon Web Services account that owns the access
            point resource.
        LifeCycleState:
          allOf:
          - $ref: '#/components/schemas/LifeCycleState'
          description: Identifies the lifecycle phase of the access point.
      description: Provides a description of an EFS file system access point.
    AccessPointDescriptions:
      type: array
      items:
        $ref: '#/components/schemas/AccessPointDescription'
    AccessPointId:
      type: string
      pattern: ^(arn:aws[-a-z]*:elasticfilesystem:[0-9a-z-:]+:access-point/fsap-[0-9a-f]{8,40}|fsap-[0-9a-f]{8,40})$
      minLength: 0
      maxLength: 128
    AccessPointLimitExceeded:
      type: object
      properties:
        ErrorCode:
          $ref: '#/components/schemas/ErrorCode'
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      required:
      - ErrorCode
      description: Returned if the Amazon Web Services account has already created
        the maximum number of access points allowed per file system. For more informaton,
        see <https://docs.aws.amazon.com/efs/latest/ug/limits.html#limits-efs-resources-per-account-per-region>.
    AccessPointNotFound:
      type: object
      properties:
        ErrorCode:
          $ref: '#/components/schemas/ErrorCode'
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      required:
      - ErrorCode
      description: Returned if the specified `AccessPointId` value doesn't exist in
        the requester's Amazon Web Services account.
    AvailabilityZoneId:
      type: string
    AvailabilityZoneName:
      type: string
      pattern: ^.+$
      minLength: 1
      maxLength: 64
    AvailabilityZonesMismatch:
      type: object
      properties:
        ErrorCode:
          $ref: '#/components/schemas/ErrorCode'
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      description: Returned if the Availability Zone that was specified for a mount
        target is different from the Availability Zone that was specified for One
        Zone storage. For more information, see [Regional and One Zone storage redundancy](https://docs.aws.amazon.com/efs/latest/ug/availability-durability.html).
    AwsAccountId:
      type: string
      pattern: ^(\d{12})|(\d{4}-\d{4}-\d{4})$
      minLength: 0
      maxLength: 14
    Backup:
      type: boolean
    BackupPolicy:
      type: object
      properties:
        Status:
          allOf:
          - $ref: '#/components/schemas/Status'
          description: "Describes the status of the file system's backup policy.\n\
            \n  * **`ENABLED` ** – EFS is automatically backing up the file system.\n\
            \n  * **`ENABLING` ** – EFS is turning on automatic backups for the file\
            \ system.\n\n  * **`DISABLED` ** – Automatic back ups are turned off for\
            \ the file system.\n\n  * **`DISABLING` ** – EFS is turning off automatic\
            \ backups for the file system."
      required:
      - Status
      description: The backup policy for the file system used to create automatic
        daily backups. If status has a value of `ENABLED`, the file system is being
        automatically backed up. For more information, see [Automatic backups](https://docs.aws.amazon.com/efs/latest/ug/awsbackup.html#automatic-backups).
    BackupPolicyDescription:
      type: object
      properties:
        BackupPolicy:
          allOf:
          - $ref: '#/components/schemas/BackupPolicy'
          description: Describes the file system's backup policy, indicating whether
            automatic backups are turned on or off.
    BadRequest:
      type: object
      properties:
        ErrorCode:
          $ref: '#/components/schemas/ErrorCode'
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      required:
      - ErrorCode
      description: Returned if the request is malformed or contains an error such
        as an invalid parameter value or a missing required parameter.
    BypassPolicyLockoutSafetyCheck:
      type: boolean
      default: false
    ClientToken:
      type: string
      pattern: ^.+$
      minLength: 1
      maxLength: 64
    ConflictException:
      type: object
      properties:
        ErrorCode:
          $ref: '#/components/schemas/ErrorCode'
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      description: Returned if the source file system in a replication is encrypted
        but the destination file system is unencrypted.
    CreateAccessPointRequest:
      type: object
      properties:
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A string of up to 64 ASCII characters that Amazon EFS uses
            to ensure idempotent creation.
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: Creates tags associated with the access point. Each tag is
            a key-value pair, each key must be unique. For more information, see [Tagging
            Amazon Web Services resources](https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html)
            in the _Amazon Web Services General Reference Guide_.
        FileSystemId:
          allOf:
          - $ref: '#/components/schemas/FileSystemId'
          description: The ID of the EFS file system that the access point provides
            access to.
        PosixUser:
          allOf:
          - $ref: '#/components/schemas/PosixUser'
          description: The operating system user and group applied to all file system
            requests made using the access point.
        RootDirectory:
          allOf:
          - $ref: '#/components/schemas/RootDirectory'
          description: 'Specifies the directory on the EFS file system that the access
            point exposes as the root directory of your file system to NFS clients
            using the access point. The clients using the access point can only access
            the root directory and below. If the `RootDirectory` > `Path` specified
            does not exist, Amazon EFS creates it and applies the `CreationInfo` settings
            when a client connects to an access point. When specifying a `RootDirectory`,
            you must provide the `Path`, and the `CreationInfo`.


            Amazon EFS creates a root directory only if you have provided the CreationInfo:
            OwnUid, OwnGID, and permissions for the directory. If you do not provide
            this information, Amazon EFS does not create the root directory. If the
            root directory does not exist, attempts to mount using the access point
            will fail.'
      required:
      - ClientToken
      - FileSystemId
    CreateFileSystemRequest:
      type: object
      properties:
        CreationToken:
          allOf:
          - $ref: '#/components/schemas/CreationToken'
          description: A string of up to 64 ASCII characters. Amazon EFS uses this
            to ensure idempotent creation.
        PerformanceMode:
          allOf:
          - $ref: '#/components/schemas/PerformanceMode'
          description: 'The performance mode of the file system. We recommend `generalPurpose`
            performance mode for all file systems. File systems using the `maxIO`
            performance mode can scale to higher levels of aggregate throughput and
            operations per second with a tradeoff of slightly higher latencies for
            most file operations. The performance mode can''t be changed after the
            file system has been created. The `maxIO` mode is not supported on One
            Zone file systems.


            Due to the higher per-operation latencies with Max I/O, we recommend using
            General Purpose performance mode for all file systems.


            Default is `generalPurpose`.'
        Encrypted:
          allOf:
          - $ref: '#/components/schemas/Encrypted'
          description: A Boolean value that, if true, creates an encrypted file system.
            When creating an encrypted file system, you have the option of specifying
            an existing Key Management Service key (KMS key). If you don't specify
            a KMS key, then the default KMS key for Amazon EFS, `/aws/elasticfilesystem`,
            is used to protect the encrypted file system.
        KmsKeyId:
          allOf:
          - $ref: '#/components/schemas/KmsKeyId'
          description: "The ID of the KMS key that you want to use to protect the\
            \ encrypted file system. This parameter is required only if you want to\
            \ use a non-default KMS key. If this parameter is not specified, the default\
            \ KMS key for Amazon EFS is used. You can specify a KMS key ID using the\
            \ following formats:\n\n  * Key ID - A unique identifier of the key, for\
            \ example `1234abcd-12ab-34cd-56ef-1234567890ab`.\n\n  * ARN - An Amazon\
            \ Resource Name (ARN) for the key, for example `arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab`.\n\
            \n  * Key alias - A previously created display name for a key, for example\
            \ `alias/projectKey1`.\n\n  * Key alias ARN - An ARN for a key alias,\
            \ for example `arn:aws:kms:us-west-2:444455556666:alias/projectKey1`.\n\
            \nIf you use `KmsKeyId`, you must set the CreateFileSystemRequest$Encrypted\
            \ parameter to true.\n\nEFS accepts only symmetric KMS keys. You cannot\
            \ use asymmetric KMS keys with Amazon EFS file systems."
        ThroughputMode:
          allOf:
          - $ref: '#/components/schemas/ThroughputMode'
          description: 'Specifies the throughput mode for the file system. The mode
            can be `bursting`, `provisioned`, or `elastic`. If you set `ThroughputMode`
            to `provisioned`, you must also set a value for `ProvisionedThroughputInMibps`.
            After you create the file system, you can decrease your file system''s
            Provisioned throughput or change between the throughput modes, with certain
            time restrictions. For more information, see [Specifying throughput with
            provisioned mode](https://docs.aws.amazon.com/efs/latest/ug/performance.html#provisioned-throughput)
            in the _Amazon EFS User Guide_.


            Default is `bursting`.'
        ProvisionedThroughputInMibps:
          allOf:
          - $ref: '#/components/schemas/ProvisionedThroughputInMibps'
          description: The throughput, measured in mebibytes per second (MiBps), that
            you want to provision for a file system that you're creating. Required
            if `ThroughputMode` is set to `provisioned`. Valid values are 1-3414 MiBps,
            with the upper limit depending on Region. To increase this limit, contact
            Amazon Web Services Support. For more information, see [Amazon EFS quotas
            that you can increase](https://docs.aws.amazon.com/efs/latest/ug/limits.html#soft-limits)
            in the _Amazon EFS User Guide_.
        AvailabilityZoneName:
          allOf:
          - $ref: '#/components/schemas/AvailabilityZoneName'
          description: 'For One Zone file systems, specify the Amazon Web Services
            Availability Zone in which to create the file system. Use the format `us-east-1a`
            to specify the Availability Zone. For more information about One Zone
            file systems, see [EFS file system types](https://docs.aws.amazon.com/efs/latest/ug/availability-durability.html#file-system-type)
            in the _Amazon EFS User Guide_.


            One Zone file systems are not available in all Availability Zones in Amazon
            Web Services Regions where Amazon EFS is available.'
        Backup:
          allOf:
          - $ref: '#/components/schemas/Backup'
          description: 'Specifies whether automatic backups are enabled on the file
            system that you are creating. Set the value to `true` to enable automatic
            backups. If you are creating a One Zone file system, automatic backups
            are enabled by default. For more information, see [Automatic backups](https://docs.aws.amazon.com/efs/latest/ug/awsbackup.html#automatic-backups)
            in the _Amazon EFS User Guide_.


            Default is `false`. However, if you specify an `AvailabilityZoneName`,
            the default is `true`.


            Backup is not available in all Amazon Web Services Regions where Amazon
            EFS is available.'
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: Use to create one or more tags associated with the file system.
            Each tag is a user-defined key-value pair. Name your file system on creation
            by including a `"Key":"Name","Value":"{value}"` key-value pair. Each key
            must be unique. For more information, see [Tagging Amazon Web Services
            resources](https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html)
            in the _Amazon Web Services General Reference Guide_.
      required:
      - CreationToken
    CreateMountTargetRequest:
      type: object
      properties:
        FileSystemId:
          allOf:
          - $ref: '#/components/schemas/FileSystemId'
          description: The ID of the file system for which to create the mount target.
        SubnetId:
          allOf:
          - $ref: '#/components/schemas/SubnetId'
          description: The ID of the subnet to add the mount target in. For One Zone
            file systems, use the subnet that is associated with the file system's
            Availability Zone.
        IpAddress:
          allOf:
          - $ref: '#/components/schemas/IpAddress'
          description: Valid IPv4 address within the address range of the specified
            subnet.
        SecurityGroups:
          allOf:
          - $ref: '#/components/schemas/SecurityGroups'
          description: Up to five VPC security group IDs, of the form `sg-xxxxxxxx`.
            These must be for the same VPC as subnet specified.
      required:
      - FileSystemId
      - SubnetId
      description: ''
    CreateReplicationConfigurationRequest:
      type: object
      properties:
        SourceFileSystemId:
          allOf:
          - $ref: '#/components/schemas/FileSystemId'
          description: Specifies the Amazon EFS file system that you want to replicate.
            This file system cannot already be a source or destination file system
            in another replication configuration.
        Destinations:
          allOf:
          - $ref: '#/components/schemas/DestinationsToCreate'
          description: An array of destination configuration objects. Only one destination
            configuration object is supported.
      required:
      - SourceFileSystemId
      - Destinations
    CreateTagsRequest:
      type: object
      properties:
        FileSystemId:
          allOf:
          - $ref: '#/components/schemas/FileSystemId'
          description: The ID of the file system whose tags you want to modify (String).
            This operation modifies the tags only, not the file system.
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: An array of `Tag` objects to add. Each `Tag` object is a key-value
            pair.
      required:
      - FileSystemId
      - Tags
      description: ''
    CreationInfo:
      type: object
      properties:
        OwnerUid:
          allOf:
          - $ref: '#/components/schemas/OwnerUid'
          description: Specifies the POSIX user ID to apply to the `RootDirectory`.
            Accepts values from 0 to 2^32 (4294967295).
        OwnerGid:
          allOf:
          - $ref: '#/components/schemas/OwnerGid'
          description: Specifies the POSIX group ID to apply to the `RootDirectory`.
            Accepts values from 0 to 2^32 (4294967295).
        Permissions:
          allOf:
          - $ref: '#/components/schemas/Permissions'
          description: Specifies the POSIX permissions to apply to the `RootDirectory`,
            in the format of an octal number representing the file's mode bits.
      required:
      - OwnerUid
      - OwnerGid
      - Permissions
      description: 'Required if the `RootDirectory` > `Path` specified does not exist.
        Specifies the POSIX IDs and permissions to apply to the access point''s `RootDirectory`
        > `Path`. If the access point root directory does not exist, EFS creates it
        with these settings when a client connects to the access point. When specifying
        `CreationInfo`, you must include values for all properties.


        Amazon EFS creates a root directory only if you have provided the CreationInfo:
        OwnUid, OwnGID, and permissions for the directory. If you do not provide this
        information, Amazon EFS does not create the root directory. If the root directory
        does not exist, attempts to mount using the access point will fail.


        If you do not provide `CreationInfo` and the specified `RootDirectory` does
        not exist, attempts to mount the file system using the access point will fail.'
    CreationToken:
      type: string
      pattern: ^.+$
      minLength: 1
      maxLength: 64
    DeleteAccessPointRequest:
      type: object
      properties:
        AccessPointId:
          allOf:
          - $ref: '#/components/schemas/AccessPointId'
          description: The ID of the access point that you want to delete.
      required:
      - AccessPointId
    DeleteFileSystemPolicyRequest:
      type: object
      properties:
        FileSystemId:
          allOf:
          - $ref: '#/components/schemas/FileSystemId'
          description: Specifies the EFS file system for which to delete the `FileSystemPolicy`.
      required:
      - FileSystemId
    DeleteFileSystemRequest:
      type: object
      properties:
        FileSystemId:
          allOf:
          - $ref: '#/components/schemas/FileSystemId'
          description: The ID of the file system you want to delete.
      required:
      - FileSystemId
      description: ''
    DeleteMountTargetRequest:
      type: object
      properties:
        MountTargetId:
          allOf:
          - $ref: '#/components/schemas/MountTargetId'
          description: The ID of the mount target to delete (String).
      required:
      - MountTargetId
      description: ''
    DeleteReplicationConfigurationRequest:
      type: object
      properties:
        SourceFileSystemId:
          allOf:
          - $ref: '#/components/schemas/FileSystemId'
          description: The ID of the source file system in the replication configuration.
        DeletionMode:
          allOf:
          - $ref: '#/components/schemas/DeletionMode'
          description: 'When replicating across Amazon Web Services accounts or across
            Amazon Web Services Regions, Amazon EFS deletes the replication configuration
            from both the source and destination account or Region (`ALL_CONFIGURATIONS`)
            by default. If there''s a configuration or permissions issue that prevents
            Amazon EFS from deleting the replication configuration from both sides,
            you can use the `LOCAL_CONFIGURATION_ONLY` mode to delete the replication
            configuration from only the local side (the account or Region from which
            the delete is performed).


            Only use the `LOCAL_CONFIGURATION_ONLY` mode in the case that Amazon EFS
            is unable to delete the replication configuration in both the source and
            destination account or Region. Deleting the local configuration leaves
            the configuration in the other account or Region unrecoverable.


            Additionally, do not use this mode for same-account, same-region replication
            as doing so results in a BadRequest exception error.'
      required:
      - SourceFileSystemId
    DeleteTagsRequest:
      type: object
      properties:
        FileSystemId:
          allOf:
          - $ref: '#/components/schemas/FileSystemId'
          description: The ID of the file system whose tags you want to delete (String).
        TagKeys:
          allOf:
          - $ref: '#/components/schemas/TagKeys'
          description: A list of tag keys to delete.
      required:
      - FileSystemId
      - TagKeys
      description: ''
    DeletionMode:
      type: string
      enum:
      - ALL_CONFIGURATIONS
      - LOCAL_CONFIGURATION_ONLY
    DependencyTimeout:
      type: object
      properties:
        ErrorCode:
          $ref: '#/components/schemas/ErrorCode'
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      required:
      - ErrorCode
      description: The service timed out trying to fulfill the request, and the client
        should try the call again.
    DescribeAccessPointsRequest:
      type: object
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: (Optional) When retrieving all access points for a file system,
            you can optionally specify the `MaxItems` parameter to limit the number
            of objects returned in a response. The default value is 100.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          description: '`NextToken` is present if the response is paginated. You can
            use `NextMarker` in the subsequent request to fetch the next page of access
            point descriptions.'
        AccessPointId:
          allOf:
          - $ref: '#/components/schemas/AccessPointId'
          description: (Optional) Specifies an EFS access point to describe in the
            response; mutually exclusive with `FileSystemId`.
        FileSystemId:
          allOf:
          - $ref: '#/components/schemas/FileSystemId'
          description: (Optional) If you provide a `FileSystemId`, EFS returns all
            access points for that file system; mutually exclusive with `AccessPointId`.
    DescribeAccessPointsResponse:
      type: object
      properties:
        AccessPoints:
          allOf:
          - $ref: '#/components/schemas/AccessPointDescriptions'
          description: An array of access point descriptions.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          description: Present if there are more access points than returned in the
            response. You can use the NextMarker in the subsequent request to fetch
            the additional descriptions.
    DescribeAccountPreferencesRequest:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          description: (Optional) You can use `NextToken` in a subsequent request
            to fetch the next page of Amazon Web Services account preferences if the
            response payload was paginated.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: (Optional) When retrieving account preferences, you can optionally
            specify the `MaxItems` parameter to limit the number of objects returned
            in a response. The default value is 100.
    DescribeAccountPreferencesResponse:
      type: object
      properties:
        ResourceIdPreference:
          allOf:
          - $ref: '#/components/schemas/ResourceIdPreference'
          description: Describes the resource ID preference setting for the Amazon
            Web Services account associated with the user making the request, in the
            current Amazon Web Services Region.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          description: Present if there are more records than returned in the response.
            You can use the `NextToken` in the subsequent request to fetch the additional
            descriptions.
    DescribeBackupPolicyRequest:
      type: object
      properties:
        FileSystemId:
          allOf:
          - $ref: '#/components/schemas/FileSystemId'
          description: Specifies which EFS file system for which to retrieve the `BackupPolicy`.
      required:
      - FileSystemId
    DescribeFileSystemPolicyRequest:
      type: object
      properties:
        FileSystemId:
          allOf:
          - $ref: '#/components/schemas/FileSystemId'
          description: Specifies which EFS file system to retrieve the `FileSystemPolicy`
            for.
      required:
      - FileSystemId
    DescribeFileSystemsRequest:
      type: object
      properties:
        MaxItems:
          allOf:
          - $ref: '#/components/schemas/MaxItems'
          description: (Optional) Specifies the maximum number of file systems to
            return in the response (integer). This number is automatically set to
            100. The response is paginated at 100 per page if you have more than 100
            file systems.
        Marker:
          allOf:
          - $ref: '#/components/schemas/Marker'
          description: (Optional) Opaque pagination token returned from a previous
            `DescribeFileSystems` operation (String). If present, specifies to continue
            the list from where the returning call had left off.
        CreationToken:
          allOf:
          - $ref: '#/components/schemas/CreationToken'
          description: (Optional) Restricts the list to the file system with this
            creation token (String). You specify a creation token when you create
            an Amazon EFS file system.
        FileSystemId:
          allOf:
          - $ref: '#/components/schemas/FileSystemId'
          description: (Optional) ID of the file system whose description you want
            to retrieve (String).
      description: ''
    DescribeFileSystemsResponse:
      type: object
      properties:
        Marker:
          allOf:
          - $ref: '#/components/schemas/Marker'
          description: Present if provided by caller in the request (String).
        FileSystems:
          allOf:
          - $ref: '#/components/schemas/FileSystemDescriptions'
          description: An array of file system descriptions.
        NextMarker:
          allOf:
          - $ref: '#/components/schemas/Marker'
          description: Present if there are more file systems than returned in the
            response (String). You can use the `NextMarker` in the subsequent request
            to fetch the descriptions.
    DescribeLifecycleConfigurationRequest:
      type: object
      properties:
        FileSystemId:
          allOf:
          - $ref: '#/components/schemas/FileSystemId'
          description: The ID of the file system whose `LifecycleConfiguration` object
            you want to retrieve (String).
      required:
      - FileSystemId
    DescribeMountTargetSecurityGroupsRequest:
      type: object
      properties:
        MountTargetId:
          allOf:
          - $ref: '#/components/schemas/MountTargetId'
          description: The ID of the mount target whose security groups you want to
            retrieve.
      required:
      - MountTargetId
      description: ''
    DescribeMountTargetSecurityGroupsResponse:
      type: object
      properties:
        SecurityGroups:
          allOf:
          - $ref: '#/components/schemas/SecurityGroups'
          description: An array of security groups.
      required:
      - SecurityGroups
    DescribeMountTargetsRequest:
      type: object
      properties:
        MaxItems:
          allOf:
          - $ref: '#/components/schemas/MaxItems'
          description: (Optional) Maximum number of mount targets to return in the
            response. Currently, this number is automatically set to 10, and other
            values are ignored. The response is paginated at 100 per page if you have
            more than 100 mount targets.
        Marker:
          allOf:
          - $ref: '#/components/schemas/Marker'
          description: (Optional) Opaque pagination token returned from a previous
            `DescribeMountTargets` operation (String). If present, it specifies to
            continue the list from where the previous returning call left off.
        FileSystemId:
          allOf:
          - $ref: '#/components/schemas/FileSystemId'
          description: (Optional) ID of the file system whose mount targets you want
            to list (String). It must be included in your request if an `AccessPointId`
            or `MountTargetId` is not included. Accepts either a file system ID or
            ARN as input.
        MountTargetId:
          allOf:
          - $ref: '#/components/schemas/MountTargetId'
          description: (Optional) ID of the mount target that you want to have described
            (String). It must be included in your request if `FileSystemId` is not
            included. Accepts either a mount target ID or ARN as input.
        AccessPointId:
          allOf:
          - $ref: '#/components/schemas/AccessPointId'
          description: (Optional) The ID of the access point whose mount targets that
            you want to list. It must be included in your request if a `FileSystemId`
            or `MountTargetId` is not included in your request. Accepts either an
            access point ID or ARN as input.
      description: ''
    DescribeMountTargetsResponse:
      type: object
      properties:
        Marker:
          allOf:
          - $ref: '#/components/schemas/Marker'
          description: If the request included the `Marker`, the response returns
            that value in this field.
        MountTargets:
          allOf:
          - $ref: '#/components/schemas/MountTargetDescriptions'
          description: Returns the file system's mount targets as an array of `MountTargetDescription`
            objects.
        NextMarker:
          allOf:
          - $ref: '#/components/schemas/Marker'
          description: If a value is present, there are more mount targets to return.
            In a subsequent request, you can provide `Marker` in your request with
            this value to retrieve the next set of mount targets.
      description: ''
    DescribeReplicationConfigurationsRequest:
      type: object
      properties:
        FileSystemId:
          allOf:
          - $ref: '#/components/schemas/FileSystemId'
          description: You can retrieve the replication configuration for a specific
            file system by providing its file system ID. For cross-account,cross-region
            replication, an account can only describe the replication configuration
            for a file system in its own Region.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          description: '`NextToken` is present if the response is paginated. You can
            use `NextToken` in a subsequent request to fetch the next page of output.'
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: (Optional) To limit the number of objects returned in a response,
            you can specify the `MaxItems` parameter. The default value is 100.
    DescribeReplicationConfigurationsResponse:
      type: object
      properties:
        Replications:
          allOf:
          - $ref: '#/components/schemas/ReplicationConfigurationDescriptions'
          description: The collection of replication configurations that is returned.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          description: You can use the `NextToken` from the previous response in a
            subsequent request to fetch the additional descriptions.
    DescribeTagsRequest:
      type: object
      properties:
        MaxItems:
          allOf:
          - $ref: '#/components/schemas/MaxItems'
          description: (Optional) The maximum number of file system tags to return
            in the response. Currently, this number is automatically set to 100, and
            other values are ignored. The response is paginated at 100 per page if
            you have more than 100 tags.
        Marker:
          allOf:
          - $ref: '#/components/schemas/Marker'
          description: (Optional) An opaque pagination token returned from a previous
            `DescribeTags` operation (String). If present, it specifies to continue
            the list from where the previous call left off.
        FileSystemId:
          allOf:
          - $ref: '#/components/schemas/FileSystemId'
          description: The ID of the file system whose tag set you want to retrieve.
      required:
      - FileSystemId
      description: ''
    DescribeTagsResponse:
      type: object
      properties:
        Marker:
          allOf:
          - $ref: '#/components/schemas/Marker'
          description: If the request included a `Marker`, the response returns that
            value in this field.
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: Returns tags associated with the file system as an array of
            `Tag` objects.
        NextMarker:
          allOf:
          - $ref: '#/components/schemas/Marker'
          description: If a value is present, there are more tags to return. In a
            subsequent request, you can provide the value of `NextMarker` as the value
            of the `Marker` parameter in your next request to retrieve the next set
            of tags.
      required:
      - Tags
      description: ''
    Destination:
      type: object
      properties:
        Status:
          allOf:
          - $ref: '#/components/schemas/ReplicationStatus'
          description: Describes the status of the replication configuration. For
            more information about replication status, see [Viewing replication details](https://docs.aws.amazon.com/efs/latest/ug/awsbackup.html#restoring-backup-efsmonitoring-replication-status.html)
            in the _Amazon EFS User Guide_.
        FileSystemId:
          allOf:
          - $ref: '#/components/schemas/FileSystemId'
          description: The ID of the destination Amazon EFS file system.
        Region:
          allOf:
          - $ref: '#/components/schemas/RegionName'
          description: The Amazon Web Services Region in which the destination file
            system is located.
        LastReplicatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time when the most recent sync was successfully completed
            on the destination file system. Any changes to data on the source file
            system that occurred before this time have been successfully replicated
            to the destination file system. Any changes that occurred after this time
            might not be fully replicated.
        OwnerId:
          allOf:
          - $ref: '#/components/schemas/AwsAccountId'
          description: ID of the Amazon Web Services account in which the destination
            file system resides.
        StatusMessage:
          allOf:
          - $ref: '#/components/schemas/StatusMessage'
          description: Message that provides details about the `PAUSED` or `ERRROR`
            state of the replication destination configuration. For more information
            about replication status messages, see [Viewing replication details](https://docs.aws.amazon.com/efs/latest/ug/awsbackup.html#restoring-backup-efsmonitoring-replication-status.html)
            in the _Amazon EFS User Guide_.
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          description: Amazon Resource Name (ARN) of the IAM role in the source account
            that allows Amazon EFS to perform replication on its behalf. This is optional
            for same-account replication and required for cross-account replication.
      required:
      - Status
      - FileSystemId
      - Region
      description: Describes the destination file system in the replication configuration.
    DestinationToCreate:
      type: object
      properties:
        Region:
          allOf:
          - $ref: '#/components/schemas/RegionName'
          description: To create a file system that uses Regional storage, specify
            the Amazon Web Services Region in which to create the destination file
            system. The Region must be enabled for the Amazon Web Services account
            that owns the source file system. For more information, see [Managing
            Amazon Web Services Regions](https://docs.aws.amazon.com/general/latest/gr/rande-manage.html#rande-manage-enable)
            in the _Amazon Web Services General Reference Reference Guide_.
        AvailabilityZoneName:
          allOf:
          - $ref: '#/components/schemas/AvailabilityZoneName'
          description: To create a file system that uses One Zone storage, specify
            the name of the Availability Zone in which to create the destination file
            system.
        KmsKeyId:
          allOf:
          - $ref: '#/components/schemas/KmsKeyId'
          description: "Specify the Key Management Service (KMS) key that you want\
            \ to use to encrypt the destination file system. If you do not specify\
            \ a KMS key, Amazon EFS uses your default KMS key for Amazon EFS, `/aws/elasticfilesystem`.\
            \ This ID can be in one of the following formats:\n\n  * Key ID - The\
            \ unique identifier of the key, for example `1234abcd-12ab-34cd-56ef-1234567890ab`.\n\
            \n  * ARN - The ARN for the key, for example `arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab`.\n\
            \n  * Key alias - A previously created display name for a key, for example\
            \ `alias/projectKey1`.\n\n  * Key alias ARN - The ARN for a key alias,\
            \ for example `arn:aws:kms:us-west-2:444455556666:alias/projectKey1`."
        FileSystemId:
          allOf:
          - $ref: '#/components/schemas/FileSystemId'
          description: The ID or ARN of the file system to use for the destination.
            For cross-account replication, this must be an ARN. The file system's
            replication overwrite replication must be disabled. If no ID or ARN is
            specified, then a new file system is created.
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          description: Amazon Resource Name (ARN) of the IAM role in the source account
            that allows Amazon EFS to perform replication on its behalf. This is optional
            for same-account replication and required for cross-account replication.
      description: "Describes the new or existing destination file system for the\
        \ replication configuration.\n\n  * If you want to replicate to a new file\
        \ system, do not specify the File System ID for the destination file system.\
        \ Amazon EFS creates a new, empty file system. For One Zone storage, specify\
        \ the Availability Zone to create the file system in. To use an Key Management\
        \ Service key other than the default KMS key, then specify it. For more information,\
        \ see [Configuring replication to new Amazon EFS file system](https://docs.aws.amazon.com/efs/latest/ug/create-replication.html)\
        \ in the _Amazon EFS User Guide_.\n\nAfter the file system is created, you\
        \ cannot change the KMS key or the performance mode.\n\n  * If you want to\
        \ replicate to an existing file system that's in the same account as the source\
        \ file system, then you need to provide the ID or Amazon Resource Name (ARN)\
        \ of the file system to which to replicate. The file system's replication\
        \ overwrite protection must be disabled. For more information, see [Replicating\
        \ to an existing file system](https://docs.aws.amazon.com/efs/latest/ug/efs-replication#replicate-existing-destination)\
        \ in the _Amazon EFS User Guide_.\n\n  * If you are replicating the file system\
        \ to a file system that's in a different account than the source file system\
        \ (cross-account replication), you need to provide the ARN for the file system\
        \ and the IAM role that allows Amazon EFS to perform replication on the destination\
        \ account. The file system's replication overwrite protection must be disabled.\
        \ For more information, see [Replicating across Amazon Web Services accounts](https://docs.aws.amazon.com/efs/latest/ug/cross-account-replication.html)\
        \ in the _Amazon EFS User Guide_."
    Destinations:
      type: array
      items:
        $ref: '#/components/schemas/Destination'
    DestinationsToCreate:
      type: array
      items:
        $ref: '#/components/schemas/DestinationToCreate'
    Encrypted:
      type: boolean
    ErrorCode:
      type: string
      minLength: 1
    ErrorMessage:
      type: string
    FileSystemAlreadyExists:
      type: object
      properties:
        ErrorCode:
          $ref: '#/components/schemas/ErrorCode'
        Message:
          $ref: '#/components/schemas/ErrorMessage'
        FileSystemId:
          $ref: '#/components/schemas/FileSystemId'
      required:
      - ErrorCode
      - FileSystemId
      description: Returned if the file system you are trying to create already exists,
        with the creation token you provided.
    FileSystemArn:
      type: string
    FileSystemDescription:
      type: object
      properties:
        OwnerId:
          allOf:
          - $ref: '#/components/schemas/AwsAccountId'
          description: The Amazon Web Services account that created the file system.
        CreationToken:
          allOf:
          - $ref: '#/components/schemas/CreationToken'
          description: The opaque string specified in the request.
        FileSystemId:
          allOf:
          - $ref: '#/components/schemas/FileSystemId'
          description: The ID of the file system, assigned by Amazon EFS.
        FileSystemArn:
          allOf:
          - $ref: '#/components/schemas/FileSystemArn'
          description: 'The Amazon Resource Name (ARN) for the EFS file system, in
            the format `arn:aws:elasticfilesystem:_region_ :_account-id_ :file-system/_file-system-id_
            `. Example with sample data: `arn:aws:elasticfilesystem:us-west-2:1111333322228888:file-system/fs-01234567`'
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time that the file system was created, in seconds (since
            1970-01-01T00:00:00Z).
        LifeCycleState:
          allOf:
          - $ref: '#/components/schemas/LifeCycleState'
          description: The lifecycle phase of the file system.
        Name:
          allOf:
          - $ref: '#/components/schemas/TagValue'
          description: You can add tags to a file system, including a `Name` tag.
            For more information, see CreateFileSystem. If the file system has a `Name`
            tag, Amazon EFS returns the value in this field.
        NumberOfMountTargets:
          allOf:
          - $ref: '#/components/schemas/MountTargetCount'
          description: The current number of mount targets that the file system has.
            For more information, see CreateMountTarget.
        SizeInBytes:
          allOf:
          - $ref: '#/components/schemas/FileSystemSize'
          description: The latest known metered size (in bytes) of data stored in
            the file system, in its `Value` field, and the time at which that size
            was determined in its `Timestamp` field. The `Timestamp` value is the
            integer number of seconds since 1970-01-01T00:00:00Z. The `SizeInBytes`
            value doesn't represent the size of a consistent snapshot of the file
            system, but it is eventually consistent when there are no writes to the
            file system. That is, `SizeInBytes` represents actual size only if the
            file system is not modified for a period longer than a couple of hours.
            Otherwise, the value is not the exact size that the file system was at
            any point in time.
        PerformanceMode:
          allOf:
          - $ref: '#/components/schemas/PerformanceMode'
          description: The performance mode of the file system.
        Encrypted:
          allOf:
          - $ref: '#/components/schemas/Encrypted'
          description: A Boolean value that, if true, indicates that the file system
            is encrypted.
        KmsKeyId:
          allOf:
          - $ref: '#/components/schemas/KmsKeyId'
          description: The ID of an KMS key used to protect the encrypted file system.
        ThroughputMode:
          allOf:
          - $ref: '#/components/schemas/ThroughputMode'
          description: Displays the file system's throughput mode. For more information,
            see [Throughput modes](https://docs.aws.amazon.com/efs/latest/ug/performance.html#throughput-modes)
            in the _Amazon EFS User Guide_.
        ProvisionedThroughputInMibps:
          allOf:
          - $ref: '#/components/schemas/ProvisionedThroughputInMibps'
          description: The amount of provisioned throughput, measured in MiBps, for
            the file system. Valid for file systems using `ThroughputMode` set to
            `provisioned`.
        AvailabilityZoneName:
          allOf:
          - $ref: '#/components/schemas/AvailabilityZoneName'
          description: Describes the Amazon Web Services Availability Zone in which
            the file system is located, and is valid only for One Zone file systems.
            For more information, see [Using EFS storage classes](https://docs.aws.amazon.com/efs/latest/ug/storage-classes.html)
            in the _Amazon EFS User Guide_.
        AvailabilityZoneId:
          allOf:
          - $ref: '#/components/schemas/AvailabilityZoneId'
          description: The unique and consistent identifier of the Availability Zone
            in which the file system is located, and is valid only for One Zone file
            systems. For example, `use1-az1` is an Availability Zone ID for the us-east-1
            Amazon Web Services Region, and it has the same location in every Amazon
            Web Services account.
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: The tags associated with the file system, presented as an array
            of `Tag` objects.
        FileSystemProtection:
          allOf:
          - $ref: '#/components/schemas/FileSystemProtectionDescription'
          description: Describes the protection on the file system.
      required:
      - OwnerId
      - CreationToken
      - FileSystemId
      - CreationTime
      - LifeCycleState
      - NumberOfMountTargets
      - SizeInBytes
      - PerformanceMode
      - Tags
      description: A description of the file system.
    FileSystemDescriptions:
      type: array
      items:
        $ref: '#/components/schemas/FileSystemDescription'
    FileSystemId:
      type: string
      pattern: ^(arn:aws[-a-z]*:elasticfilesystem:[0-9a-z-:]+:file-system/fs-[0-9a-f]{8,40}|fs-[0-9a-f]{8,40})$
      minLength: 0
      maxLength: 128
    FileSystemInUse:
      type: object
      properties:
        ErrorCode:
          $ref: '#/components/schemas/ErrorCode'
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      required:
      - ErrorCode
      description: Returned if a file system has mount targets.
    FileSystemLimitExceeded:
      type: object
      properties:
        ErrorCode:
          $ref: '#/components/schemas/ErrorCode'
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      required:
      - ErrorCode
      description: Returned if the Amazon Web Services account has already created
        the maximum number of file systems allowed per account.
    FileSystemNotFound:
      type: object
      properties:
        ErrorCode:
          $ref: '#/components/schemas/ErrorCode'
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      required:
      - ErrorCode
      description: Returned if the specified `FileSystemId` value doesn't exist in
        the requester's Amazon Web Services account.
    FileSystemNullableSizeValue:
      type: integer
      format: int64
      minimum: 0
    FileSystemPolicyDescription:
      type: object
      properties:
        FileSystemId:
          allOf:
          - $ref: '#/components/schemas/FileSystemId'
          description: Specifies the EFS file system to which the `FileSystemPolicy`
            applies.
        Policy:
          allOf:
          - $ref: '#/components/schemas/Policy'
          description: The JSON formatted `FileSystemPolicy` for the EFS file system.
    FileSystemProtectionDescription:
      type: object
      properties:
        ReplicationOverwriteProtection:
          allOf:
          - $ref: '#/components/schemas/ReplicationOverwriteProtection'
          description: "The status of the file system's replication overwrite protection.\n\
            \n  * `ENABLED` – The file system cannot be used as the destination file\
            \ system in a replication configuration. The file system is writeable.\
            \ Replication overwrite protection is `ENABLED` by default. \n\n  * `DISABLED`\
            \ – The file system can be used as the destination file system in a replication\
            \ configuration. The file system is read-only and can only be modified\
            \ by EFS replication.\n\n  * `REPLICATING` – The file system is being\
            \ used as the destination file system in a replication configuration.\
            \ The file system is read-only and is only modified only by EFS replication.\n\
            \nIf the replication configuration is deleted, the file system's replication\
            \ overwrite protection is re-enabled, the file system becomes writeable."
      description: Describes the protection on a file system.
    FileSystemSize:
      type: object
      properties:
        Value:
          allOf:
          - $ref: '#/components/schemas/FileSystemSizeValue'
          description: The latest known metered size (in bytes) of data stored in
            the file system.
        Timestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the size of data, returned in the `Value`
            field, was determined. The value is the integer number of seconds since
            1970-01-01T00:00:00Z.
        ValueInIA:
          allOf:
          - $ref: '#/components/schemas/FileSystemNullableSizeValue'
          description: The latest known metered size (in bytes) of data stored in
            the Infrequent Access storage class.
        ValueInStandard:
          allOf:
          - $ref: '#/components/schemas/FileSystemNullableSizeValue'
          description: The latest known metered size (in bytes) of data stored in
            the Standard storage class.
        ValueInArchive:
          allOf:
          - $ref: '#/components/schemas/FileSystemNullableSizeValue'
          description: The latest known metered size (in bytes) of data stored in
            the Archive storage class.
      required:
      - Value
      description: The latest known metered size (in bytes) of data stored in the
        file system, in its `Value` field, and the time at which that size was determined
        in its `Timestamp` field. The value doesn't represent the size of a consistent
        snapshot of the file system, but it is eventually consistent when there are
        no writes to the file system. That is, the value represents the actual size
        only if the file system is not modified for a period longer than a couple
        of hours. Otherwise, the value is not necessarily the exact size the file
        system was at any instant in time.
    FileSystemSizeValue:
      type: integer
      format: int64
      default: 0
      minimum: 0
    Gid:
      type: integer
      format: int64
      minimum: 0
      maximum: 4294967295
    IncorrectFileSystemLifeCycleState:
      type: object
      properties:
        ErrorCode:
          $ref: '#/components/schemas/ErrorCode'
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      required:
      - ErrorCode
      description: Returned if the file system's lifecycle state is not "available".
    IncorrectMountTargetState:
      type: object
      properties:
        ErrorCode:
          $ref: '#/components/schemas/ErrorCode'
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      required:
      - ErrorCode
      description: Returned if the mount target is not in the correct state for the
        operation.
    InsufficientThroughputCapacity:
      type: object
      properties:
        ErrorCode:
          $ref: '#/components/schemas/ErrorCode'
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      required:
      - ErrorCode
      description: Returned if there's not enough capacity to provision additional
        throughput. This value might be returned when you try to create a file system
        in provisioned throughput mode, when you attempt to increase the provisioned
        throughput of an existing file system, or when you attempt to change an existing
        file system from Bursting Throughput to Provisioned Throughput mode. Try again
        later.
    InternalServerError:
      type: object
      properties:
        ErrorCode:
          $ref: '#/components/schemas/ErrorCode'
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      required:
      - ErrorCode
      description: Returned if an error occurred on the server side.
    InvalidPolicyException:
      type: object
      properties:
        ErrorCode:
          $ref: '#/components/schemas/ErrorCode'
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      description: Returned if the `FileSystemPolicy` is malformed or contains an
        error such as a parameter value that is not valid or a missing required parameter.
        Returned in the case of a policy lockout safety check error.
    IpAddress:
      type: string
      pattern: ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$
      minLength: 7
      maxLength: 15
    IpAddressInUse:
      type: object
      properties:
        ErrorCode:
          $ref: '#/components/schemas/ErrorCode'
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      required:
      - ErrorCode
      description: Returned if the request specified an `IpAddress` that is already
        in use in the subnet.
    KmsKeyId:
      type: string
      pattern: ^([0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}|mrk-[0-9a-f]{32}|alias/[a-zA-Z0-9/_-]+|(arn:aws[-a-z]*:kms:[a-z0-9-]+:\d{12}:((key/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12})|(key/mrk-[0-9a-f]{32})|(alias/[a-zA-Z0-9/_-]+))))$
      minLength: 0
      maxLength: 2048
    LifeCycleState:
      type: string
      enum:
      - creating
      - available
      - updating
      - deleting
      - deleted
      - error
    LifecycleConfigurationDescription:
      type: object
      properties:
        LifecyclePolicies:
          allOf:
          - $ref: '#/components/schemas/LifecyclePolicies'
          description: An array of lifecycle management policies. EFS supports a maximum
            of one policy per file system.
    LifecyclePolicies:
      type: array
      items:
        $ref: '#/components/schemas/LifecyclePolicy'
    LifecyclePolicy:
      type: object
      properties:
        TransitionToIA:
          allOf:
          - $ref: '#/components/schemas/TransitionToIARules'
          description: The number of days after files were last accessed in primary
            storage (the Standard storage class) at which to move them to Infrequent
            Access (IA) storage. Metadata operations such as listing the contents
            of a directory don't count as file access events.
        TransitionToPrimaryStorageClass:
          allOf:
          - $ref: '#/components/schemas/TransitionToPrimaryStorageClassRules'
          description: Whether to move files back to primary (Standard) storage after
            they are accessed in IA or Archive storage. Metadata operations such as
            listing the contents of a directory don't count as file access events.
        TransitionToArchive:
          allOf:
          - $ref: '#/components/schemas/TransitionToArchiveRules'
          description: The number of days after files were last accessed in primary
            storage (the Standard storage class) at which to move them to Archive
            storage. Metadata operations such as listing the contents of a directory
            don't count as file access events.
      description: 'Describes a policy used by lifecycle management that specifies
        when to transition files into and out of storage classes. For more information,
        see [Managing file system storage](https://docs.aws.amazon.com/efs/latest/ug/lifecycle-management-efs.html).


        When using the `put-lifecycle-configuration` CLI command or the `PutLifecycleConfiguration`
        API action, Amazon EFS requires that each `LifecyclePolicy` object have only
        a single transition. This means that in a request body, `LifecyclePolicies`
        must be structured as an array of `LifecyclePolicy` objects, one object for
        each transition. For more information, see the request examples in PutLifecycleConfiguration.'
    ListTagsForResourceRequest:
      type: object
      properties:
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          description: Specifies the EFS resource you want to retrieve tags for. You
            can retrieve tags for EFS file systems and access points using this API
            endpoint.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: (Optional) Specifies the maximum number of tag objects to return
            in the response. The default value is 100.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          description: (Optional) You can use `NextToken` in a subsequent request
            to fetch the next page of access point descriptions if the response payload
            was paginated.
      required:
      - ResourceId
    ListTagsForResourceResponse:
      type: object
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: An array of the tags for the specified EFS resource.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          description: '`NextToken` is present if the response payload is paginated.
            You can use `NextToken` in a subsequent request to fetch the next page
            of access point descriptions.'
    Marker:
      type: string
      pattern: ^.+$
      minLength: 1
      maxLength: 128
    MaxItems:
      type: integer
      minimum: 1
    MaxResults:
      type: integer
      minimum: 1
      description: Max results used for pagination.
    ModifyMountTargetSecurityGroupsRequest:
      type: object
      properties:
        MountTargetId:
          allOf:
          - $ref: '#/components/schemas/MountTargetId'
          description: The ID of the mount target whose security groups you want to
            modify.
        SecurityGroups:
          allOf:
          - $ref: '#/components/schemas/SecurityGroups'
          description: An array of up to five VPC security group IDs.
      required:
      - MountTargetId
      description: ''
    MountTargetConflict:
      type: object
      properties:
        ErrorCode:
          $ref: '#/components/schemas/ErrorCode'
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      required:
      - ErrorCode
      description: Returned if the mount target would violate one of the specified
        restrictions based on the file system's existing mount targets.
    MountTargetCount:
      type: integer
      default: 0
      minimum: 0
    MountTargetDescription:
      type: object
      properties:
        OwnerId:
          allOf:
          - $ref: '#/components/schemas/AwsAccountId'
          description: Amazon Web Services account ID that owns the resource.
        MountTargetId:
          allOf:
          - $ref: '#/components/schemas/MountTargetId'
          description: System-assigned mount target ID.
        FileSystemId:
          allOf:
          - $ref: '#/components/schemas/FileSystemId'
          description: The ID of the file system for which the mount target is intended.
        SubnetId:
          allOf:
          - $ref: '#/components/schemas/SubnetId'
          description: The ID of the mount target's subnet.
        LifeCycleState:
          allOf:
          - $ref: '#/components/schemas/LifeCycleState'
          description: Lifecycle state of the mount target.
        IpAddress:
          allOf:
          - $ref: '#/components/schemas/IpAddress'
          description: Address at which the file system can be mounted by using the
            mount target.
        NetworkInterfaceId:
          allOf:
          - $ref: '#/components/schemas/NetworkInterfaceId'
          description: The ID of the network interface that Amazon EFS created when
            it created the mount target.
        AvailabilityZoneId:
          allOf:
          - $ref: '#/components/schemas/AvailabilityZoneId'
          description: The unique and consistent identifier of the Availability Zone
            that the mount target resides in. For example, `use1-az1` is an AZ ID
            for the us-east-1 Region and it has the same location in every Amazon
            Web Services account.
        AvailabilityZoneName:
          allOf:
          - $ref: '#/components/schemas/AvailabilityZoneName'
          description: The name of the Availability Zone in which the mount target
            is located. Availability Zones are independently mapped to names for each
            Amazon Web Services account. For example, the Availability Zone `us-east-1a`
            for your Amazon Web Services account might not be the same location as
            `us-east-1a` for another Amazon Web Services account.
        VpcId:
          allOf:
          - $ref: '#/components/schemas/VpcId'
          description: The virtual private cloud (VPC) ID that the mount target is
            configured in.
      required:
      - MountTargetId
      - FileSystemId
      - SubnetId
      - LifeCycleState
      description: Provides a description of a mount target.
    MountTargetDescriptions:
      type: array
      items:
        $ref: '#/components/schemas/MountTargetDescription'
    MountTargetId:
      type: string
      pattern: ^fsmt-[0-9a-f]{8,40}$
      minLength: 13
      maxLength: 45
    MountTargetNotFound:
      type: object
      properties:
        ErrorCode:
          $ref: '#/components/schemas/ErrorCode'
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      required:
      - ErrorCode
      description: Returned if there is no mount target with the specified ID found
        in the caller's Amazon Web Services account.
    Name:
      type: string
    NetworkInterfaceId:
      type: string
    NetworkInterfaceLimitExceeded:
      type: object
      properties:
        ErrorCode:
          $ref: '#/components/schemas/ErrorCode'
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      required:
      - ErrorCode
      description: The calling account has reached the limit for elastic network interfaces
        for the specific Amazon Web Services Region. Either delete some network interfaces
        or request that the account quota be raised. For more information, see [Amazon
        VPC Quotas](https://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Appendix_Limits.html)
        in the _Amazon VPC User Guide_ (see the **Network interfaces per Region**
        entry in the **Network interfaces** table).
    NoFreeAddressesInSubnet:
      type: object
      properties:
        ErrorCode:
          $ref: '#/components/schemas/ErrorCode'
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      required:
      - ErrorCode
      description: Returned if `IpAddress` was not specified in the request and there
        are no free IP addresses in the subnet.
    OwnerGid:
      type: integer
      format: int64
      minimum: 0
      maximum: 4294967295
    OwnerUid:
      type: integer
      format: int64
      minimum: 0
      maximum: 4294967295
    Path:
      type: string
      pattern: ^(\/|(\/(?!\.)+[^$#<>;`|&?{}^*/\n]+){1,4})$
      minLength: 1
      maxLength: 100
    PerformanceMode:
      type: string
      enum:
      - generalPurpose
      - maxIO
    Permissions:
      type: string
      pattern: ^[0-7]{3,4}$
      minLength: 3
      maxLength: 4
    Policy:
      type: string
      pattern: ^[\s\S]+$
      minLength: 1
      maxLength: 20000
    PolicyNotFound:
      type: object
      properties:
        ErrorCode:
          $ref: '#/components/schemas/ErrorCode'
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      description: Returned if the default file system policy is in effect for the
        EFS file system specified.
    PosixUser:
      type: object
      properties:
        Uid:
          allOf:
          - $ref: '#/components/schemas/Uid'
          description: The POSIX user ID used for all file system operations using
            this access point.
        Gid:
          allOf:
          - $ref: '#/components/schemas/Gid'
          description: The POSIX group ID used for all file system operations using
            this access point.
        SecondaryGids:
          allOf:
          - $ref: '#/components/schemas/SecondaryGids'
          description: Secondary POSIX group IDs used for all file system operations
            using this access point.
      required:
      - Uid
      - Gid
      description: The full POSIX identity, including the user ID, group ID, and any
        secondary group IDs, on the access point that is used for all file system
        operations performed by NFS clients using the access point.
    ProvisionedThroughputInMibps:
      type: number
      format: double
      minimum: 1.0
    PutAccountPreferencesRequest:
      type: object
      properties:
        ResourceIdType:
          allOf:
          - $ref: '#/components/schemas/ResourceIdType'
          description: 'Specifies the EFS resource ID preference to set for the user''s
            Amazon Web Services account, in the current Amazon Web Services Region,
            either `LONG_ID` (17 characters), or `SHORT_ID` (8 characters).


            Starting in October, 2021, you will receive an error when setting the
            account preference to `SHORT_ID`. Contact Amazon Web Services support
            if you receive an error and must use short IDs for file system and mount
            target resources.'
      required:
      - ResourceIdType
    PutAccountPreferencesResponse:
      type: object
      properties:
        ResourceIdPreference:
          $ref: '#/components/schemas/ResourceIdPreference'
    PutBackupPolicyRequest:
      type: object
      properties:
        FileSystemId:
          allOf:
          - $ref: '#/components/schemas/FileSystemId'
          description: Specifies which EFS file system to update the backup policy
            for.
        BackupPolicy:
          allOf:
          - $ref: '#/components/schemas/BackupPolicy'
          description: The backup policy included in the `PutBackupPolicy` request.
      required:
      - FileSystemId
      - BackupPolicy
    PutFileSystemPolicyRequest:
      type: object
      properties:
        FileSystemId:
          allOf:
          - $ref: '#/components/schemas/FileSystemId'
          description: The ID of the EFS file system that you want to create or update
            the `FileSystemPolicy` for.
        Policy:
          allOf:
          - $ref: '#/components/schemas/Policy'
          description: The `FileSystemPolicy` that you're creating. Accepts a JSON
            formatted policy definition. EFS file system policies have a 20,000 character
            limit. To find out more about the elements that make up a file system
            policy, see [Resource-based policies within Amazon EFS](https://docs.aws.amazon.com/efs/latest/ug/security_iam_service-with-iam.html#security_iam_service-with-iam-resource-based-policies).
        BypassPolicyLockoutSafetyCheck:
          allOf:
          - $ref: '#/components/schemas/BypassPolicyLockoutSafetyCheck'
          description: (Optional) A boolean that specifies whether or not to bypass
            the `FileSystemPolicy` lockout safety check. The lockout safety check
            determines whether the policy in the request will lock out, or prevent,
            the IAM principal that is making the request from making future `PutFileSystemPolicy`
            requests on this file system. Set `BypassPolicyLockoutSafetyCheck` to
            `True` only when you intend to prevent the IAM principal that is making
            the request from making subsequent `PutFileSystemPolicy` requests on this
            file system. The default value is `False`.
      required:
      - FileSystemId
      - Policy
    PutLifecycleConfigurationRequest:
      type: object
      properties:
        FileSystemId:
          allOf:
          - $ref: '#/components/schemas/FileSystemId'
          description: The ID of the file system for which you are creating the `LifecycleConfiguration`
            object (String).
        LifecyclePolicies:
          allOf:
          - $ref: '#/components/schemas/LifecyclePolicies'
          description: "An array of `LifecyclePolicy` objects that define the file\
            \ system's `LifecycleConfiguration` object. A `LifecycleConfiguration`\
            \ object informs lifecycle management of the following:\n\n  * **`TransitionToIA`\
            \ ** – When to move files in the file system from primary storage (Standard\
            \ storage class) into the Infrequent Access (IA) storage.\n\n  * **`TransitionToArchive`\
            \ ** – When to move files in the file system from their current storage\
            \ class (either IA or Standard storage) into the Archive storage.\n\n\
            File systems cannot transition into Archive storage before transitioning\
            \ into IA storage. Therefore, TransitionToArchive must either not be set\
            \ or must be later than TransitionToIA.\n\nThe Archive storage class is\
            \ available only for file systems that use the Elastic throughput mode\
            \ and the General Purpose performance mode.\n\n  * **`TransitionToPrimaryStorageClass`\
            \ ** – Whether to move files in the file system back to primary storage\
            \ (Standard storage class) after they are accessed in IA or Archive storage.\n\
            \nWhen using the `put-lifecycle-configuration` CLI command or the `PutLifecycleConfiguration`\
            \ API action, Amazon EFS requires that each `LifecyclePolicy` object have\
            \ only a single transition. This means that in a request body, `LifecyclePolicies`\
            \ must be structured as an array of `LifecyclePolicy` objects, one object\
            \ for each storage transition. See the example requests in the following\
            \ section for more information."
      required:
      - FileSystemId
      - LifecyclePolicies
    RegionName:
      type: string
      pattern: ^[a-z]{2}-((iso[a-z]{0,1}-)|(gov-)){0,1}[a-z]+-{0,1}[0-9]{0,1}$
      minLength: 1
      maxLength: 64
    ReplicationAlreadyExists:
      type: object
      properties:
        ErrorCode:
          $ref: '#/components/schemas/ErrorCode'
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      description: Returned if the file system is already included in a replication
        configuration.>
    ReplicationConfigurationDescription:
      type: object
      properties:
        SourceFileSystemId:
          allOf:
          - $ref: '#/components/schemas/FileSystemId'
          description: The ID of the source Amazon EFS file system that is being replicated.
        SourceFileSystemRegion:
          allOf:
          - $ref: '#/components/schemas/RegionName'
          description: The Amazon Web Services Region in which the source EFS file
            system is located.
        SourceFileSystemArn:
          allOf:
          - $ref: '#/components/schemas/FileSystemArn'
          description: The Amazon Resource Name (ARN) of the current source file system
            in the replication configuration.
        OriginalSourceFileSystemArn:
          allOf:
          - $ref: '#/components/schemas/FileSystemArn'
          description: The Amazon Resource Name (ARN) of the original source EFS file
            system in the replication configuration.
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: Describes when the replication configuration was created.
        Destinations:
          allOf:
          - $ref: '#/components/schemas/Destinations'
          description: An array of destination objects. Only one destination object
            is supported.
        SourceFileSystemOwnerId:
          allOf:
          - $ref: '#/components/schemas/AwsAccountId'
          description: ID of the Amazon Web Services account in which the source file
            system resides.
      required:
      - SourceFileSystemId
      - SourceFileSystemRegion
      - SourceFileSystemArn
      - OriginalSourceFileSystemArn
      - CreationTime
      - Destinations
      description: Describes the replication configuration for a specific file system.
    ReplicationConfigurationDescriptions:
      type: array
      items:
        $ref: '#/components/schemas/ReplicationConfigurationDescription'
    ReplicationNotFound:
      type: object
      properties:
        ErrorCode:
          allOf:
          - $ref: '#/components/schemas/ErrorCode'
          description: ReplicationNotFound
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      description: Returned if the specified file system does not have a replication
        configuration.
    ReplicationOverwriteProtection:
      type: string
      enum:
      - ENABLED
      - DISABLED
      - REPLICATING
    ReplicationStatus:
      type: string
      enum:
      - ENABLED
      - ENABLING
      - DELETING
      - ERROR
      - PAUSED
      - PAUSING
    Resource:
      type: string
      enum:
      - FILE_SYSTEM
      - MOUNT_TARGET
      description: An EFS resource, for example a file system or a mount target.
    ResourceId:
      type: string
      pattern: ^(arn:aws[-a-z]*:elasticfilesystem:[0-9a-z-:]+:(access-point/fsap|file-system/fs)-[0-9a-f]{8,40}|fs(ap)?-[0-9a-f]{8,40})$
      minLength: 0
      maxLength: 128
    ResourceIdPreference:
      type: object
      properties:
        ResourceIdType:
          allOf:
          - $ref: '#/components/schemas/ResourceIdType'
          description: Identifies the EFS resource ID preference, either `LONG_ID`
            (17 characters) or `SHORT_ID` (8 characters).
        Resources:
          allOf:
          - $ref: '#/components/schemas/Resources'
          description: Identifies the Amazon EFS resources to which the ID preference
            setting applies, `FILE_SYSTEM` and `MOUNT_TARGET`.
      description: Describes the resource type and its ID preference for the user's
        Amazon Web Services account, in the current Amazon Web Services Region.
    ResourceIdType:
      type: string
      enum:
      - LONG_ID
      - SHORT_ID
      description: A preference indicating a choice to use 63bit/32bit IDs for all
        applicable resources.
    Resources:
      type: array
      items:
        $ref: '#/components/schemas/Resource'
      description: EFS resources to which a preference applies to.
    RoleArn:
      type: string
      pattern: ^arn:(aws[a-zA-Z-]*)?:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$
      minLength: 0
      maxLength: 2048
    RootDirectory:
      type: object
      properties:
        Path:
          allOf:
          - $ref: '#/components/schemas/Path'
          description: Specifies the path on the EFS file system to expose as the
            root directory to NFS clients using the access point to access the EFS
            file system. A path can have up to four subdirectories. If the specified
            path does not exist, you are required to provide the `CreationInfo`.
        CreationInfo:
          allOf:
          - $ref: '#/components/schemas/CreationInfo'
          description: '(Optional) Specifies the POSIX IDs and permissions to apply
            to the access point''s `RootDirectory`. If the `RootDirectory` > `Path`
            specified does not exist, EFS creates the root directory using the `CreationInfo`
            settings when a client connects to an access point. When specifying the
            `CreationInfo`, you must provide values for all properties.


            If you do not provide `CreationInfo` and the specified `RootDirectory`
            > `Path` does not exist, attempts to mount the file system using the access
            point will fail.'
      description: Specifies the directory on the Amazon EFS file system that the
        access point provides access to. The access point exposes the specified file
        system path as the root directory of your file system to applications using
        the access point. NFS clients using the access point can only access data
        in the access point's `RootDirectory` and its subdirectories.
    SecondaryGids:
      type: array
      items:
        $ref: '#/components/schemas/Gid'
    SecurityGroup:
      type: string
      pattern: ^sg-[0-9a-f]{8,40}$
      minLength: 11
      maxLength: 43
    SecurityGroupLimitExceeded:
      type: object
      properties:
        ErrorCode:
          $ref: '#/components/schemas/ErrorCode'
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      required:
      - ErrorCode
      description: Returned if the size of `SecurityGroups` specified in the request
        is greater than five.
    SecurityGroupNotFound:
      type: object
      properties:
        ErrorCode:
          $ref: '#/components/schemas/ErrorCode'
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      required:
      - ErrorCode
      description: Returned if one of the specified security groups doesn't exist
        in the subnet's virtual private cloud (VPC).
    SecurityGroups:
      type: array
      items:
        $ref: '#/components/schemas/SecurityGroup'
    Status:
      type: string
      enum:
      - ENABLED
      - ENABLING
      - DISABLED
      - DISABLING
    StatusMessage:
      type: string
    SubnetId:
      type: string
      pattern: ^subnet-[0-9a-f]{8,40}$
      minLength: 15
      maxLength: 47
    SubnetNotFound:
      type: object
      properties:
        ErrorCode:
          $ref: '#/components/schemas/ErrorCode'
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      required:
      - ErrorCode
      description: Returned if there is no subnet with ID `SubnetId` provided in the
        request.
    Tag:
      type: object
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/TagKey'
          description: The tag key (String). The key can't start with `aws:`.
        Value:
          allOf:
          - $ref: '#/components/schemas/TagValue'
          description: The value of the tag key.
      required:
      - Key
      - Value
      description: 'A tag is a key-value pair. Allowed characters are letters, white
        space, and numbers that can be represented in UTF-8, and the following characters:`
        + - = . _ : /`.'
    TagKey:
      type: string
      pattern: ^(?![aA]{1}[wW]{1}[sS]{1}:)([\p{L}\p{Z}\p{N}_.:/=+\-@]+)$
      minLength: 1
      maxLength: 128
    TagKeys:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
    TagResourceRequest:
      type: object
      properties:
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          description: The ID specifying the EFS resource that you want to create
            a tag for.
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: An array of `Tag` objects to add. Each `Tag` object is a key-value
            pair.
      required:
      - ResourceId
      - Tags
    TagValue:
      type: string
      pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
      minLength: 0
      maxLength: 256
    Tags:
      type: array
      items:
        $ref: '#/components/schemas/Tag'
    ThrottlingException:
      type: object
      properties:
        ErrorCode:
          $ref: '#/components/schemas/ErrorCode'
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      description: Returned when the `CreateAccessPoint` API action is called too
        quickly and the number of Access Points on the file system is nearing the
        [limit of 120](https://docs.aws.amazon.com/efs/latest/ug/limits.html#limits-efs-resources-per-account-per-region).
    ThroughputLimitExceeded:
      type: object
      properties:
        ErrorCode:
          $ref: '#/components/schemas/ErrorCode'
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      required:
      - ErrorCode
      description: Returned if the throughput mode or amount of provisioned throughput
        can't be changed because the throughput limit of 1024 MiB/s has been reached.
    ThroughputMode:
      type: string
      enum:
      - bursting
      - provisioned
      - elastic
    Timestamp:
      type: string
      format: date-time
    Token:
      type: string
      pattern: ^.+$
      minLength: 1
      maxLength: 128
    TooManyRequests:
      type: object
      properties:
        ErrorCode:
          $ref: '#/components/schemas/ErrorCode'
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      required:
      - ErrorCode
      description: Returned if you don’t wait at least 24 hours before either changing
        the throughput mode, or decreasing the Provisioned Throughput value.
    TransitionToArchiveRules:
      type: string
      enum:
      - AFTER_1_DAY
      - AFTER_7_DAYS
      - AFTER_14_DAYS
      - AFTER_30_DAYS
      - AFTER_60_DAYS
      - AFTER_90_DAYS
      - AFTER_180_DAYS
      - AFTER_270_DAYS
      - AFTER_365_DAYS
    TransitionToIARules:
      type: string
      enum:
      - AFTER_7_DAYS
      - AFTER_14_DAYS
      - AFTER_30_DAYS
      - AFTER_60_DAYS
      - AFTER_90_DAYS
      - AFTER_1_DAY
      - AFTER_180_DAYS
      - AFTER_270_DAYS
      - AFTER_365_DAYS
    TransitionToPrimaryStorageClassRules:
      type: string
      enum:
      - AFTER_1_ACCESS
    Uid:
      type: integer
      format: int64
      minimum: 0
      maximum: 4294967295
    UnsupportedAvailabilityZone:
      type: object
      properties:
        ErrorCode:
          $ref: '#/components/schemas/ErrorCode'
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      required:
      - ErrorCode
      description: Returned if the requested Amazon EFS functionality is not available
        in the specified Availability Zone.
    UntagResourceRequest:
      type: object
      properties:
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          description: Specifies the EFS resource that you want to remove tags from.
        TagKeys:
          allOf:
          - $ref: '#/components/schemas/TagKeys'
          description: The keys of the key-value tag pairs that you want to remove
            from the specified EFS resource.
      required:
      - ResourceId
      - TagKeys
    UpdateFileSystemProtectionRequest:
      type: object
      properties:
        FileSystemId:
          allOf:
          - $ref: '#/components/schemas/FileSystemId'
          description: The ID of the file system to update.
        ReplicationOverwriteProtection:
          allOf:
          - $ref: '#/components/schemas/ReplicationOverwriteProtection'
          description: "The status of the file system's replication overwrite protection.\n\
            \n  * `ENABLED` – The file system cannot be used as the destination file\
            \ system in a replication configuration. The file system is writeable.\
            \ Replication overwrite protection is `ENABLED` by default. \n\n  * `DISABLED`\
            \ – The file system can be used as the destination file system in a replication\
            \ configuration. The file system is read-only and can only be modified\
            \ by EFS replication.\n\n  * `REPLICATING` – The file system is being\
            \ used as the destination file system in a replication configuration.\
            \ The file system is read-only and is only modified only by EFS replication.\n\
            \nIf the replication configuration is deleted, the file system's replication\
            \ overwrite protection is re-enabled and the file system becomes writeable."
      required:
      - FileSystemId
    UpdateFileSystemRequest:
      type: object
      properties:
        FileSystemId:
          allOf:
          - $ref: '#/components/schemas/FileSystemId'
          description: The ID of the file system that you want to update.
        ThroughputMode:
          allOf:
          - $ref: '#/components/schemas/ThroughputMode'
          description: (Optional) Updates the file system's throughput mode. If you're
            not updating your throughput mode, you don't need to provide this value
            in your request. If you are changing the `ThroughputMode` to `provisioned`,
            you must also set a value for `ProvisionedThroughputInMibps`.
        ProvisionedThroughputInMibps:
          allOf:
          - $ref: '#/components/schemas/ProvisionedThroughputInMibps'
          description: (Optional) The throughput, measured in mebibytes per second
            (MiBps), that you want to provision for a file system that you're creating.
            Required if `ThroughputMode` is set to `provisioned`. Valid values are
            1-3414 MiBps, with the upper limit depending on Region. To increase this
            limit, contact Amazon Web Services Support. For more information, see
            [Amazon EFS quotas that you can increase](https://docs.aws.amazon.com/efs/latest/ug/limits.html#soft-limits)
            in the _Amazon EFS User Guide_.
      required:
      - FileSystemId
    ValidationException:
      type: object
      properties:
        ErrorCode:
          $ref: '#/components/schemas/ErrorCode'
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      required:
      - ErrorCode
      description: Returned if the Backup service is not available in the Amazon Web
        Services Region in which the request was made.
    VpcId:
      type: string
