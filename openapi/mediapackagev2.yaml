openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: mediapackagev2
  x-aws-serviceName: mediapackagev2
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-07'
  version: '2022-12-25'
  title: AWS Elemental MediaPackage v2
  description: |-
    This guide is intended for creating AWS Elemental MediaPackage resources in MediaPackage Version 2 (v2) starting from May 2023. To get started with MediaPackage v2, create your MediaPackage resources. There isn't an automated process to migrate your resources from MediaPackage v1 to MediaPackage v2.

    The names of the entities that you use to access this API, like URLs and ARNs, all have the versioning information added, like "v2", to distinguish from the prior version. If you used MediaPackage prior to this release, you can't use the MediaPackage v2 CLI or the MediaPackage v2 API to access any MediaPackage v1 resources.

    If you created resources in MediaPackage v1, use video on demand (VOD) workflows, and aren't looking to migrate to MediaPackage v2 yet, see the [MediaPackage v1 Live API Reference](https://docs.aws.amazon.com/mediapackage/latest/apireference/what-is.html).

    This is the AWS Elemental MediaPackage v2 Live REST API Reference. It describes all the MediaPackage API operations for live content in detail, and provides sample requests, responses, and errors for the supported web services protocols.

    We assume that you have the IAM permissions that you need to use MediaPackage via the REST API. We also assume that you are familiar with the features and operations of MediaPackage, as described in the AWS Elemental MediaPackage User Guide.
servers:
- description: The AWS Elemental MediaPackage v2 regional endpoint
  url: https://mediapackagev2.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths:
  /channelGroup/{ChannelGroupName}/channel/{ChannelName}/originEndpoint/{OriginEndpointName}/harvestJob/{HarvestJobName}:
    put:
      operationId: CancelHarvestJob
      description: |-
        Cancels an in-progress harvest job.
      parameters:
      - name: ChannelGroupName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      - name: ChannelName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      - name: OriginEndpointName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      - name: HarvestJobName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      - name: x-amzn-update-if-match
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/EntityTag'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions. For more information, see Access Management in the IAM User Guide.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Updating or deleting this resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Indicates that an error from the service occurred while trying to process a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request throughput limit was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input failed to meet the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetHarvestJob
      description: |-
        Retrieves the details of a specific harvest job.
      parameters:
      - name: ChannelGroupName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      - name: ChannelName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      - name: OriginEndpointName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      - name: HarvestJobName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions. For more information, see Access Management in the IAM User Guide.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Indicates that an error from the service occurred while trying to process a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request throughput limit was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input failed to meet the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /channelGroup/{ChannelGroupName}/channel:
    post:
      operationId: CreateChannel
      description: |-
        Create a channel to start receiving content streams. The channel represents the input to MediaPackage for incoming live content from an encoder such as AWS Elemental MediaLive. The channel receives content, and after packaging it, outputs it through an origin endpoint to downstream devices (such as video players or CDNs) that request the content. You can create only one channel with each request. We recommend that you spread out channels between channel groups, such as putting redundant channels in the same AWS Region in different channel groups.
      parameters:
      - name: ChannelGroupName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      - name: x-amzn-client-token
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/IdempotencyToken'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ChannelName:
                  $ref: '#/components/schemas/ResourceName'
                InputType:
                  $ref: '#/components/schemas/InputType'
                Description:
                  $ref: '#/components/schemas/ResourceDescription'
                InputSwitchConfiguration:
                  $ref: '#/components/schemas/InputSwitchConfiguration'
                OutputHeaderConfiguration:
                  $ref: '#/components/schemas/OutputHeaderConfiguration'
                Tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions. For more information, see Access Management in the IAM User Guide.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Updating or deleting this resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Indicates that an error from the service occurred while trying to process a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            The request would cause a service quota to be exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The request throughput limit was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input failed to meet the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: ListChannels
      description: |-
        Retrieves all channels in a specific channel group that are configured in AWS Elemental MediaPackage, including the origin endpoints that are associated with it.
      parameters:
      - name: ChannelGroupName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ListResourceMaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions. For more information, see Access Management in the IAM User Guide.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Indicates that an error from the service occurred while trying to process a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request throughput limit was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input failed to meet the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /channelGroup:
    post:
      operationId: CreateChannelGroup
      description: |-
        Create a channel group to group your channels and origin endpoints. A channel group is the top-level resource that consists of channels and origin endpoints that are associated with it and that provides predictable URLs for stream delivery. All channels and origin endpoints within the channel group are guaranteed to share the DNS. You can create only one channel group with each request.
      parameters:
      - name: x-amzn-client-token
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/IdempotencyToken'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ChannelGroupName:
                  $ref: '#/components/schemas/ResourceName'
                Description:
                  $ref: '#/components/schemas/ResourceDescription'
                Tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions. For more information, see Access Management in the IAM User Guide.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Updating or deleting this resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Indicates that an error from the service occurred while trying to process a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            The request would cause a service quota to be exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The request throughput limit was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input failed to meet the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: ListChannelGroups
      description: |-
        Retrieves all channel groups that are configured in Elemental MediaPackage.
      parameters:
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ListResourceMaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions. For more information, see Access Management in the IAM User Guide.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Indicates that an error from the service occurred while trying to process a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request throughput limit was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input failed to meet the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /channelGroup/{ChannelGroupName}/channel/{ChannelName}/originEndpoint/{OriginEndpointName}/harvestJob:
    post:
      operationId: CreateHarvestJob
      description: |-
        Creates a new harvest job to export content from a MediaPackage v2 channel to an S3 bucket.
      parameters:
      - name: ChannelGroupName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      - name: ChannelName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      - name: OriginEndpointName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      - name: x-amzn-client-token
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/IdempotencyToken'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Description:
                  $ref: '#/components/schemas/ResourceDescription'
                HarvestedManifests:
                  $ref: '#/components/schemas/HarvestedManifests'
                ScheduleConfiguration:
                  $ref: '#/components/schemas/HarvesterScheduleConfiguration'
                Destination:
                  $ref: '#/components/schemas/Destination'
                HarvestJobName:
                  $ref: '#/components/schemas/ResourceName'
                Tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions. For more information, see Access Management in the IAM User Guide.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Updating or deleting this resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Indicates that an error from the service occurred while trying to process a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            The request would cause a service quota to be exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The request throughput limit was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input failed to meet the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /channelGroup/{ChannelGroupName}/channel/{ChannelName}/originEndpoint:
    post:
      operationId: CreateOriginEndpoint
      description: |-
        The endpoint is attached to a channel, and represents the output of the live content. You can associate multiple endpoints to a single channel. Each endpoint gives players and downstream CDNs (such as Amazon CloudFront) access to the content for playback. Content can't be served from a channel until it has an endpoint. You can create only one endpoint with each request.
      parameters:
      - name: ChannelGroupName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      - name: ChannelName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      - name: x-amzn-client-token
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/IdempotencyToken'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                OriginEndpointName:
                  $ref: '#/components/schemas/ResourceName'
                ContainerType:
                  $ref: '#/components/schemas/ContainerType'
                Segment:
                  $ref: '#/components/schemas/Segment'
                Description:
                  $ref: '#/components/schemas/ResourceDescription'
                StartoverWindowSeconds:
                  $ref: '#/components/schemas/Integer'
                HlsManifests:
                  $ref: '#/components/schemas/CreateHlsManifests'
                LowLatencyHlsManifests:
                  $ref: '#/components/schemas/CreateLowLatencyHlsManifests'
                DashManifests:
                  $ref: '#/components/schemas/CreateDashManifests'
                ForceEndpointErrorConfiguration:
                  $ref: '#/components/schemas/ForceEndpointErrorConfiguration'
                Tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions. For more information, see Access Management in the IAM User Guide.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Updating or deleting this resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Indicates that an error from the service occurred while trying to process a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            The request would cause a service quota to be exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The request throughput limit was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input failed to meet the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: ListOriginEndpoints
      description: |-
        Retrieves all origin endpoints in a specific channel that are configured in AWS Elemental MediaPackage.
      parameters:
      - name: ChannelGroupName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      - name: ChannelName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ListResourceMaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions. For more information, see Access Management in the IAM User Guide.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Indicates that an error from the service occurred while trying to process a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request throughput limit was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input failed to meet the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /channelGroup/{ChannelGroupName}/channel/{ChannelName}/:
    delete:
      operationId: DeleteChannel
      description: |-
        Delete a channel to stop AWS Elemental MediaPackage from receiving further content. You must delete the channel's origin endpoints before you can delete the channel.
      parameters:
      - name: ChannelGroupName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      - name: ChannelName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions. For more information, see Access Management in the IAM User Guide.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Updating or deleting this resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Indicates that an error from the service occurred while trying to process a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request throughput limit was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input failed to meet the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetChannel
      description: |-
        Retrieves the specified channel that's configured in AWS Elemental MediaPackage, including the origin endpoints that are associated with it.
      parameters:
      - name: ChannelGroupName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      - name: ChannelName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions. For more information, see Access Management in the IAM User Guide.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Indicates that an error from the service occurred while trying to process a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request throughput limit was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input failed to meet the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    put:
      operationId: UpdateChannel
      description: |-
        Update the specified channel. You can edit if MediaPackage sends ingest or egress access logs to the CloudWatch log group, if content will be encrypted, the description on a channel, and your channel's policy settings. You can't edit the name of the channel or CloudFront distribution details.

        Any edits you make that impact the video output may not be reflected for a few minutes.
      parameters:
      - name: ChannelGroupName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      - name: ChannelName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      - name: x-amzn-update-if-match
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/EntityTag'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Description:
                  $ref: '#/components/schemas/ResourceDescription'
                InputSwitchConfiguration:
                  $ref: '#/components/schemas/InputSwitchConfiguration'
                OutputHeaderConfiguration:
                  $ref: '#/components/schemas/OutputHeaderConfiguration'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions. For more information, see Access Management in the IAM User Guide.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Updating or deleting this resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Indicates that an error from the service occurred while trying to process a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request throughput limit was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input failed to meet the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /channelGroup/{ChannelGroupName}:
    delete:
      operationId: DeleteChannelGroup
      description: |-
        Delete a channel group. You must delete the channel group's channels and origin endpoints before you can delete the channel group. If you delete a channel group, you'll lose access to the egress domain and will have to create a new channel group to replace it.
      parameters:
      - name: ChannelGroupName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions. For more information, see Access Management in the IAM User Guide.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Updating or deleting this resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Indicates that an error from the service occurred while trying to process a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request throughput limit was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input failed to meet the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetChannelGroup
      description: |-
        Retrieves the specified channel group that's configured in AWS Elemental MediaPackage, including the channels and origin endpoints that are associated with it.
      parameters:
      - name: ChannelGroupName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions. For more information, see Access Management in the IAM User Guide.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Indicates that an error from the service occurred while trying to process a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request throughput limit was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input failed to meet the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    put:
      operationId: UpdateChannelGroup
      description: |-
        Update the specified channel group. You can edit the description on a channel group for easier identification later from the AWS Elemental MediaPackage console. You can't edit the name of the channel group.

        Any edits you make that impact the video output may not be reflected for a few minutes.
      parameters:
      - name: ChannelGroupName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      - name: x-amzn-update-if-match
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/EntityTag'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Description:
                  $ref: '#/components/schemas/ResourceDescription'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions. For more information, see Access Management in the IAM User Guide.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Updating or deleting this resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Indicates that an error from the service occurred while trying to process a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request throughput limit was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input failed to meet the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /channelGroup/{ChannelGroupName}/channel/{ChannelName}/policy:
    delete:
      operationId: DeleteChannelPolicy
      description: |-
        Delete a channel policy.
      parameters:
      - name: ChannelGroupName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      - name: ChannelName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions. For more information, see Access Management in the IAM User Guide.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Updating or deleting this resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Indicates that an error from the service occurred while trying to process a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request throughput limit was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input failed to meet the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetChannelPolicy
      description: |-
        Retrieves the specified channel policy that's configured in AWS Elemental MediaPackage. With policies, you can specify who has access to AWS resources and what actions they can perform on those resources.
      parameters:
      - name: ChannelGroupName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      - name: ChannelName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions. For more information, see Access Management in the IAM User Guide.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Indicates that an error from the service occurred while trying to process a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request throughput limit was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input failed to meet the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    put:
      operationId: PutChannelPolicy
      description: |-
        Attaches an IAM policy to the specified channel. With policies, you can specify who has access to AWS resources and what actions they can perform on those resources. You can attach only one policy with each request.
      parameters:
      - name: ChannelGroupName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      - name: ChannelName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Policy:
                  $ref: '#/components/schemas/PolicyText'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions. For more information, see Access Management in the IAM User Guide.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Updating or deleting this resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Indicates that an error from the service occurred while trying to process a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request throughput limit was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input failed to meet the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /channelGroup/{ChannelGroupName}/channel/{ChannelName}/originEndpoint/{OriginEndpointName}:
    delete:
      operationId: DeleteOriginEndpoint
      description: |-
        Origin endpoints can serve content until they're deleted. Delete the endpoint if it should no longer respond to playback requests. You must delete all endpoints from a channel before you can delete the channel.
      parameters:
      - name: ChannelGroupName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      - name: ChannelName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      - name: OriginEndpointName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions. For more information, see Access Management in the IAM User Guide.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Indicates that an error from the service occurred while trying to process a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request throughput limit was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input failed to meet the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetOriginEndpoint
      description: |-
        Retrieves the specified origin endpoint that's configured in AWS Elemental MediaPackage to obtain its playback URL and to view the packaging settings that it's currently using.
      parameters:
      - name: ChannelGroupName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      - name: ChannelName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      - name: OriginEndpointName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions. For more information, see Access Management in the IAM User Guide.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Indicates that an error from the service occurred while trying to process a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request throughput limit was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input failed to meet the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    put:
      operationId: UpdateOriginEndpoint
      description: |-
        Update the specified origin endpoint. Edit the packaging preferences on an endpoint to optimize the viewing experience. You can't edit the name of the endpoint.

        Any edits you make that impact the video output may not be reflected for a few minutes.
      parameters:
      - name: ChannelGroupName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      - name: ChannelName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      - name: OriginEndpointName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      - name: x-amzn-update-if-match
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/EntityTag'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ContainerType:
                  $ref: '#/components/schemas/ContainerType'
                Segment:
                  $ref: '#/components/schemas/Segment'
                Description:
                  $ref: '#/components/schemas/ResourceDescription'
                StartoverWindowSeconds:
                  $ref: '#/components/schemas/Integer'
                HlsManifests:
                  $ref: '#/components/schemas/CreateHlsManifests'
                LowLatencyHlsManifests:
                  $ref: '#/components/schemas/CreateLowLatencyHlsManifests'
                DashManifests:
                  $ref: '#/components/schemas/CreateDashManifests'
                ForceEndpointErrorConfiguration:
                  $ref: '#/components/schemas/ForceEndpointErrorConfiguration'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions. For more information, see Access Management in the IAM User Guide.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Updating or deleting this resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Indicates that an error from the service occurred while trying to process a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            The request would cause a service quota to be exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The request throughput limit was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input failed to meet the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /channelGroup/{ChannelGroupName}/channel/{ChannelName}/originEndpoint/{OriginEndpointName}/policy:
    delete:
      operationId: DeleteOriginEndpointPolicy
      description: |-
        Delete an origin endpoint policy.
      parameters:
      - name: ChannelGroupName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      - name: ChannelName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      - name: OriginEndpointName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions. For more information, see Access Management in the IAM User Guide.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Updating or deleting this resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Indicates that an error from the service occurred while trying to process a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request throughput limit was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input failed to meet the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetOriginEndpointPolicy
      description: |-
        Retrieves the specified origin endpoint policy that's configured in AWS Elemental MediaPackage.
      parameters:
      - name: ChannelGroupName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      - name: ChannelName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      - name: OriginEndpointName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions. For more information, see Access Management in the IAM User Guide.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Indicates that an error from the service occurred while trying to process a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request throughput limit was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input failed to meet the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    post:
      operationId: PutOriginEndpointPolicy
      description: |-
        Attaches an IAM policy to the specified origin endpoint. You can attach only one policy with each request.
      parameters:
      - name: ChannelGroupName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      - name: ChannelName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      - name: OriginEndpointName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Policy:
                  $ref: '#/components/schemas/PolicyText'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions. For more information, see Access Management in the IAM User Guide.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Updating or deleting this resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Indicates that an error from the service occurred while trying to process a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request throughput limit was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input failed to meet the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /channelGroup/{ChannelGroupName}/harvestJob:
    get:
      operationId: ListHarvestJobs
      description: |-
        Retrieves a list of harvest jobs that match the specified criteria.
      parameters:
      - name: ChannelGroupName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      - name: channelName
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ResourceName'
      - name: originEndpointName
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ResourceName'
      - name: includeStatus
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/HarvestJobStatus'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ListResourceMaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions. For more information, see Access Management in the IAM User Guide.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Indicates that an error from the service occurred while trying to process a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request throughput limit was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input failed to meet the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /tags/{ResourceArn}:
    get:
      operationId: ListTagsForResource
      description: |-
        Lists the tags assigned to a resource.
      parameters:
      - name: ResourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TagArn'
      responses:
        '200': {}
        '400':
          description: |-
            The input failed to meet the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    post:
      operationId: TagResource
      description: |-
        Assigns one of more tags (key-value pairs) to the specified MediaPackage resource.

        Tags can help you organize and categorize your resources. You can also use them to scope user permissions, by granting a user permission to access or change only resources with certain tag values. You can use the TagResource operation with a resource that already has tags. If you specify a new tag key for the resource, this tag is appended to the list of tags associated with the resource. If you specify a tag key that is already associated with the resource, the new tag value that you specify replaces the previous value for that tag.
      parameters:
      - name: ResourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TagArn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '204': {}
        '400':
          description: |-
            The input failed to meet the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    delete:
      operationId: UntagResource
      description: |-
        Removes one or more tags from the specified resource.
      parameters:
      - name: ResourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TagArn'
      - name: tagKeys
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/TagKeyList'
      responses:
        '204': {}
        '400':
          description: |-
            The input failed to meet the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /channelGroup/{ChannelGroupName}/channel/{ChannelName}/reset:
    post:
      operationId: ResetChannelState
      description: |-
        Resetting the channel can help to clear errors from misconfigurations in the encoder. A reset refreshes the ingest stream and removes previous content.

        Be sure to stop the encoder before you reset the channel, and wait at least 30 seconds before you restart the encoder.
      parameters:
      - name: ChannelGroupName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      - name: ChannelName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions. For more information, see Access Management in the IAM User Guide.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Updating or deleting this resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Indicates that an error from the service occurred while trying to process a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request throughput limit was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input failed to meet the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /channelGroup/{ChannelGroupName}/channel/{ChannelName}/originEndpoint/{OriginEndpointName}/reset:
    post:
      operationId: ResetOriginEndpointState
      description: |-
        Resetting the origin endpoint can help to resolve unexpected behavior and other content packaging issues. It also helps to preserve special events when you don't want the previous content to be available for viewing. A reset clears out all previous content from the origin endpoint.

        MediaPackage might return old content from this endpoint in the first 30 seconds after the endpoint reset. For best results, when possible, wait 30 seconds from endpoint reset to send playback requests to this endpoint.
      parameters:
      - name: ChannelGroupName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      - name: ChannelName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      - name: OriginEndpointName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions. For more information, see Access Management in the IAM User Guide.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Updating or deleting this resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Indicates that an error from the service occurred while trying to process a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request throughput limit was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input failed to meet the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
components:
  schemas:
    AccessDeniedException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
      description: You don't have permissions to perform the requested operation.
        The user or role that is making the request must have at least one IAM permissions
        policy attached that grants the required permissions. For more information,
        see Access Management in the IAM User Guide.
    AdMarkerDash:
      type: string
      enum:
      - BINARY
      - XML
    AdMarkerHls:
      type: string
      enum:
      - DATERANGE
    CancelHarvestJobRequest:
      type: object
      properties:
        ChannelGroupName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the channel group containing the channel from which
            the harvest job is running.
        ChannelName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the channel from which the harvest job is running.
        OriginEndpointName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the origin endpoint that the harvest job is harvesting
            from. This cannot be changed after the harvest job is submitted.
        HarvestJobName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the harvest job to cancel. This name must be unique
            within the channel and cannot be changed after the harvest job is submitted.
        ETag:
          allOf:
          - $ref: '#/components/schemas/EntityTag'
          description: The current Entity Tag (ETag) associated with the harvest job.
            Used for concurrency control.
      required:
      - ChannelGroupName
      - ChannelName
      - OriginEndpointName
      - HarvestJobName
    CancelHarvestJobResponse:
      type: object
      properties: {}
    ChannelGroupListConfiguration:
      type: object
      properties:
        ChannelGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name that describes the channel group. The name is the
            primary identifier for the channel group, and must be unique for your
            account in the AWS Region.
        Arn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) associated with the resource.
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time the channel group was created.
        ModifiedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time the channel group was modified.
        Description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          description: Any descriptive information that you want to add to the channel
            group for future identification purposes.
      required:
      - ChannelGroupName
      - Arn
      - CreatedAt
      - ModifiedAt
      description: The configuration of the channel group.
    ChannelGroupsList:
      type: array
      items:
        $ref: '#/components/schemas/ChannelGroupListConfiguration'
    ChannelList:
      type: array
      items:
        $ref: '#/components/schemas/ChannelListConfiguration'
    ChannelListConfiguration:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) associated with the resource.
        ChannelName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name that describes the channel. The name is the primary
            identifier for the channel, and must be unique for your account in the
            AWS Region and channel group.
        ChannelGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name that describes the channel group. The name is the
            primary identifier for the channel group, and must be unique for your
            account in the AWS Region.
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time the channel was created.
        ModifiedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time the channel was modified.
        Description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          description: Any descriptive information that you want to add to the channel
            for future identification purposes.
        InputType:
          allOf:
          - $ref: '#/components/schemas/InputType'
          description: "The input type will be an immutable field which will be used\
            \ to define whether the channel will allow CMAF ingest or HLS ingest.\
            \ If unprovided, it will default to HLS to preserve current behavior.\n\
            \nThe allowed values are:\n\n  * `HLS` \\- The HLS streaming specification\
            \ (which defines M3U8 manifests and TS segments).\n\n  * `CMAF` \\- The\
            \ DASH-IF CMAF Ingest specification (which defines CMAF segments with\
            \ optional DASH manifests)."
      required:
      - Arn
      - ChannelName
      - ChannelGroupName
      - CreatedAt
      - ModifiedAt
      description: The configuration of the channel.
    CmafEncryptionMethod:
      type: string
      enum:
      - CENC
      - CBCS
    ConflictException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
        ConflictExceptionType:
          allOf:
          - $ref: '#/components/schemas/ConflictExceptionType'
          description: The type of ConflictException.
      description: Updating or deleting this resource can cause an inconsistent state.
    ConflictExceptionType:
      type: string
      enum:
      - RESOURCE_IN_USE
      - RESOURCE_ALREADY_EXISTS
      - IDEMPOTENT_PARAMETER_MISMATCH
      - CONFLICTING_OPERATION
    ContainerType:
      type: string
      enum:
      - TS
      - CMAF
    CreateChannelGroupRequest:
      type: object
      properties:
        ChannelGroupName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name that describes the channel group. The name is the
            primary identifier for the channel group, and must be unique for your
            account in the AWS Region. You can't use spaces in the name. You can't
            change the name after you create the channel group.
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/IdempotencyToken'
          description: A unique, case-sensitive token that you provide to ensure the
            idempotency of the request.
        Description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          description: Enter any descriptive text that helps you to identify the channel
            group.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: 'A comma-separated list of tag key:value pairs that you define.
            For example:


            `"Key1": "Value1",`


            `"Key2": "Value2"`'
      required:
      - ChannelGroupName
    CreateChannelGroupResponse:
      type: object
      properties:
        ChannelGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name that describes the channel group. The name is the
            primary identifier for the channel group, and must be unique for your
            account in the AWS Region.
        Arn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) associated with the resource.
        EgressDomain:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The output domain where the source stream should be sent. Integrate
            the egress domain with a downstream CDN (such as Amazon CloudFront) or
            playback device.
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time the channel group was created.
        ModifiedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time the channel group was modified.
        ETag:
          allOf:
          - $ref: '#/components/schemas/EntityTag'
          description: The current Entity Tag (ETag) associated with this resource.
            The entity tag can be used to safely make concurrent updates to the resource.
        Description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          description: The description for your channel group.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The comma-separated list of tag key:value pairs assigned to
            the channel group.
      required:
      - ChannelGroupName
      - Arn
      - EgressDomain
      - CreatedAt
      - ModifiedAt
    CreateChannelRequest:
      type: object
      properties:
        ChannelGroupName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name that describes the channel group. The name is the
            primary identifier for the channel group, and must be unique for your
            account in the AWS Region.
        ChannelName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name that describes the channel. The name is the primary
            identifier for the channel, and must be unique for your account in the
            AWS Region and channel group. You can't change the name after you create
            the channel.
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/IdempotencyToken'
          description: A unique, case-sensitive token that you provide to ensure the
            idempotency of the request.
        InputType:
          allOf:
          - $ref: '#/components/schemas/InputType'
          description: "The input type will be an immutable field which will be used\
            \ to define whether the channel will allow CMAF ingest or HLS ingest.\
            \ If unprovided, it will default to HLS to preserve current behavior.\n\
            \nThe allowed values are:\n\n  * `HLS` \\- The HLS streaming specification\
            \ (which defines M3U8 manifests and TS segments).\n\n  * `CMAF` \\- The\
            \ DASH-IF CMAF Ingest specification (which defines CMAF segments with\
            \ optional DASH manifests)."
        Description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          description: Enter any descriptive text that helps you to identify the channel.
        InputSwitchConfiguration:
          allOf:
          - $ref: '#/components/schemas/InputSwitchConfiguration'
          description: The configuration for input switching based on the media quality
            confidence score (MQCS) as provided from AWS Elemental MediaLive. This
            setting is valid only when `InputType` is `CMAF`.
        OutputHeaderConfiguration:
          allOf:
          - $ref: '#/components/schemas/OutputHeaderConfiguration'
          description: The settings for what common media server data (CMSD) headers
            AWS Elemental MediaPackage includes in responses to the CDN. This setting
            is valid only when `InputType` is `CMAF`.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: 'A comma-separated list of tag key:value pairs that you define.
            For example:


            `"Key1": "Value1",`


            `"Key2": "Value2"`'
      required:
      - ChannelGroupName
      - ChannelName
    CreateChannelResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) associated with the resource.
        ChannelName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name that describes the channel. The name is the primary
            identifier for the channel, and must be unique for your account in the
            AWS Region and channel group.
        ChannelGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name that describes the channel group. The name is the
            primary identifier for the channel group, and must be unique for your
            account in the AWS Region.
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time the channel was created.
        ModifiedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time the channel was modified.
        Description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          description: The description for your channel.
        IngestEndpoints:
          $ref: '#/components/schemas/IngestEndpointList'
        InputType:
          allOf:
          - $ref: '#/components/schemas/InputType'
          description: "The input type will be an immutable field which will be used\
            \ to define whether the channel will allow CMAF ingest or HLS ingest.\
            \ If unprovided, it will default to HLS to preserve current behavior.\n\
            \nThe allowed values are:\n\n  * `HLS` \\- The HLS streaming specification\
            \ (which defines M3U8 manifests and TS segments).\n\n  * `CMAF` \\- The\
            \ DASH-IF CMAF Ingest specification (which defines CMAF segments with\
            \ optional DASH manifests)."
        ETag:
          allOf:
          - $ref: '#/components/schemas/EntityTag'
          description: The current Entity Tag (ETag) associated with this resource.
            The entity tag can be used to safely make concurrent updates to the resource.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The comma-separated list of tag key:value pairs assigned to
            the channel.
        InputSwitchConfiguration:
          allOf:
          - $ref: '#/components/schemas/InputSwitchConfiguration'
          description: The configuration for input switching based on the media quality
            confidence score (MQCS) as provided from AWS Elemental MediaLive. This
            setting is valid only when `InputType` is `CMAF`.
        OutputHeaderConfiguration:
          allOf:
          - $ref: '#/components/schemas/OutputHeaderConfiguration'
          description: The settings for what common media server data (CMSD) headers
            AWS Elemental MediaPackage includes in responses to the CDN. This setting
            is valid only when `InputType` is `CMAF`.
      required:
      - Arn
      - ChannelName
      - ChannelGroupName
      - CreatedAt
      - ModifiedAt
    CreateDashManifestConfiguration:
      type: object
      properties:
        ManifestName:
          allOf:
          - $ref: '#/components/schemas/ManifestName'
          description: A short string that's appended to the endpoint URL. The child
            manifest name creates a unique path to this endpoint.
        ManifestWindowSeconds:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The total duration (in seconds) of the manifest's content.
        FilterConfiguration:
          $ref: '#/components/schemas/FilterConfiguration'
        MinUpdatePeriodSeconds:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: Minimum amount of time (in seconds) that the player should
            wait before requesting updates to the manifest.
        MinBufferTimeSeconds:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: Minimum amount of content (in seconds) that a player must keep
            available in the buffer.
        SuggestedPresentationDelaySeconds:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The amount of time (in seconds) that the player should be from
            the end of the manifest.
        SegmentTemplateFormat:
          allOf:
          - $ref: '#/components/schemas/DashSegmentTemplateFormat'
          description: "Determines the type of variable used in the `media` URL of\
            \ the `SegmentTemplate` tag in the manifest. Also specifies if segment\
            \ timeline information is included in `SegmentTimeline` or `SegmentTemplate`.\n\
            \nValue description:\n\n  * `NUMBER_WITH_TIMELINE` \\- The `$Number$`\
            \ variable is used in the `media` URL. The value of this variable is the\
            \ sequential number of the segment. A full `SegmentTimeline` object is\
            \ presented in each `SegmentTemplate`."
        PeriodTriggers:
          allOf:
          - $ref: '#/components/schemas/DashPeriodTriggers'
          description: A list of triggers that controls when AWS Elemental MediaPackage
            separates the MPEG-DASH manifest into multiple periods. Type `ADS` to
            indicate that AWS Elemental MediaPackage must create periods in the output
            manifest that correspond to SCTE-35 ad markers in the input source. Leave
            this value empty to indicate that the manifest is contained all in one
            period. For more information about periods in the DASH manifest, see [Multi-period
            DASH in AWS Elemental MediaPackage](https://docs.aws.amazon.com/mediapackage/latest/userguide/multi-period.html).
        ScteDash:
          allOf:
          - $ref: '#/components/schemas/ScteDash'
          description: The SCTE configuration.
        DrmSignaling:
          allOf:
          - $ref: '#/components/schemas/DashDrmSignaling'
          description: Determines how the DASH manifest signals the DRM content.
        UtcTiming:
          allOf:
          - $ref: '#/components/schemas/DashUtcTiming'
          description: Determines the type of UTC timing included in the DASH Media
            Presentation Description (MPD).
      required:
      - ManifestName
      description: Create a DASH manifest configuration.
    CreateDashManifests:
      type: array
      items:
        $ref: '#/components/schemas/CreateDashManifestConfiguration'
    CreateHarvestJobRequest:
      type: object
      properties:
        ChannelGroupName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the channel group containing the channel from which
            to harvest content.
        ChannelName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the channel from which to harvest content.
        OriginEndpointName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the origin endpoint from which to harvest content.
        Description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          description: An optional description for the harvest job.
        HarvestedManifests:
          allOf:
          - $ref: '#/components/schemas/HarvestedManifests'
          description: A list of manifests to be harvested.
        ScheduleConfiguration:
          allOf:
          - $ref: '#/components/schemas/HarvesterScheduleConfiguration'
          description: The configuration for when the harvest job should run, including
            start and end times.
        Destination:
          allOf:
          - $ref: '#/components/schemas/Destination'
          description: The S3 destination where the harvested content will be placed.
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/IdempotencyToken'
          description: A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request.
        HarvestJobName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: A name for the harvest job. This name must be unique within
            the channel.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: A collection of tags associated with the harvest job.
      required:
      - ChannelGroupName
      - ChannelName
      - OriginEndpointName
      - HarvestedManifests
      - ScheduleConfiguration
      - Destination
      description: The request object for creating a new harvest job.
    CreateHarvestJobResponse:
      type: object
      properties:
        ChannelGroupName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the channel group containing the channel from which
            content is being harvested.
        ChannelName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the channel from which content is being harvested.
        OriginEndpointName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the origin endpoint from which content is being
            harvested.
        Destination:
          allOf:
          - $ref: '#/components/schemas/Destination'
          description: The S3 destination where the harvested content will be placed.
        HarvestJobName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the created harvest job.
        HarvestedManifests:
          allOf:
          - $ref: '#/components/schemas/HarvestedManifests'
          description: A list of manifests that will be harvested.
        Description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          description: The description of the harvest job, if provided.
        ScheduleConfiguration:
          allOf:
          - $ref: '#/components/schemas/HarvesterScheduleConfiguration'
          description: The configuration for when the harvest job will run, including
            start and end times.
        Arn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) of the created harvest job.
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time the harvest job was created.
        ModifiedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time the harvest job was last modified.
        Status:
          allOf:
          - $ref: '#/components/schemas/HarvestJobStatus'
          description: The current status of the harvest job (e.g., CREATED, IN_PROGRESS,
            ABORTED, COMPLETED, FAILED).
        ErrorMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          description: An error message if the harvest job creation failed.
        ETag:
          allOf:
          - $ref: '#/components/schemas/EntityTag'
          description: The current version of the harvest job. Used for concurrency
            control.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: A collection of tags associated with the harvest job.
      required:
      - ChannelGroupName
      - ChannelName
      - OriginEndpointName
      - Destination
      - HarvestJobName
      - HarvestedManifests
      - ScheduleConfiguration
      - Arn
      - CreatedAt
      - ModifiedAt
      - Status
      description: The response object returned after creating a harvest job.
    CreateHlsManifestConfiguration:
      type: object
      properties:
        ManifestName:
          allOf:
          - $ref: '#/components/schemas/ManifestName'
          description: A short short string that's appended to the endpoint URL. The
            manifest name creates a unique path to this endpoint. If you don't enter
            a value, MediaPackage uses the default manifest name, index. MediaPackage
            automatically inserts the format extension, such as .m3u8. You can't use
            the same manifest name if you use HLS manifest and low-latency HLS manifest.
            The manifestName on the HLSManifest object overrides the manifestName
            you provided on the originEndpoint object.
        ChildManifestName:
          allOf:
          - $ref: '#/components/schemas/ManifestName'
          description: A short string that's appended to the endpoint URL. The child
            manifest name creates a unique path to this endpoint. If you don't enter
            a value, MediaPackage uses the default manifest name, index, with an added
            suffix to distinguish it from the manifest name. The manifestName on the
            HLSManifest object overrides the manifestName you provided on the originEndpoint
            object.
        ScteHls:
          $ref: '#/components/schemas/ScteHls'
        StartTag:
          $ref: '#/components/schemas/StartTag'
        ManifestWindowSeconds:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The total duration (in seconds) of the manifest's content.
        ProgramDateTimeIntervalSeconds:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: 'Inserts EXT-X-PROGRAM-DATE-TIME tags in the output manifest
            at the interval that you specify. If you don''t enter an interval, EXT-X-PROGRAM-DATE-TIME
            tags aren''t included in the manifest. The tags sync the stream to the
            wall clock so that viewers can seek to a specific time in the playback
            timeline on the player.


            Irrespective of this parameter, if any ID3Timed metadata is in the HLS
            input, it is passed through to the HLS output.'
        FilterConfiguration:
          $ref: '#/components/schemas/FilterConfiguration'
        UrlEncodeChildManifest:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: When enabled, MediaPackage URL-encodes the query string for
            API requests for HLS child manifests to comply with Amazon Web Services
            Signature Version 4 (SigV4) signature signing protocol. For more information,
            see [Amazon Web Services Signature Version 4 for API requests](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_sigv.html)
            in _Identity and Access Management User Guide_.
      required:
      - ManifestName
      description: Create an HTTP live streaming (HLS) manifest configuration.
    CreateHlsManifests:
      type: array
      items:
        $ref: '#/components/schemas/CreateHlsManifestConfiguration'
    CreateLowLatencyHlsManifestConfiguration:
      type: object
      properties:
        ManifestName:
          allOf:
          - $ref: '#/components/schemas/ManifestName'
          description: A short short string that's appended to the endpoint URL. The
            manifest name creates a unique path to this endpoint. If you don't enter
            a value, MediaPackage uses the default manifest name, index. MediaPackage
            automatically inserts the format extension, such as .m3u8. You can't use
            the same manifest name if you use HLS manifest and low-latency HLS manifest.
            The manifestName on the HLSManifest object overrides the manifestName
            you provided on the originEndpoint object.
        ChildManifestName:
          allOf:
          - $ref: '#/components/schemas/ManifestName'
          description: A short string that's appended to the endpoint URL. The child
            manifest name creates a unique path to this endpoint. If you don't enter
            a value, MediaPackage uses the default manifest name, index, with an added
            suffix to distinguish it from the manifest name. The manifestName on the
            HLSManifest object overrides the manifestName you provided on the originEndpoint
            object.
        ScteHls:
          $ref: '#/components/schemas/ScteHls'
        StartTag:
          $ref: '#/components/schemas/StartTag'
        ManifestWindowSeconds:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The total duration (in seconds) of the manifest's content.
        ProgramDateTimeIntervalSeconds:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: 'Inserts EXT-X-PROGRAM-DATE-TIME tags in the output manifest
            at the interval that you specify. If you don''t enter an interval, EXT-X-PROGRAM-DATE-TIME
            tags aren''t included in the manifest. The tags sync the stream to the
            wall clock so that viewers can seek to a specific time in the playback
            timeline on the player.


            Irrespective of this parameter, if any ID3Timed metadata is in the HLS
            input, it is passed through to the HLS output.'
        FilterConfiguration:
          $ref: '#/components/schemas/FilterConfiguration'
        UrlEncodeChildManifest:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: When enabled, MediaPackage URL-encodes the query string for
            API requests for LL-HLS child manifests to comply with Amazon Web Services
            Signature Version 4 (SigV4) signature signing protocol. For more information,
            see [Amazon Web Services Signature Version 4 for API requests](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_sigv.html)
            in _Identity and Access Management User Guide_.
      required:
      - ManifestName
      description: Create a low-latency HTTP live streaming (HLS) manifest configuration.
    CreateLowLatencyHlsManifests:
      type: array
      items:
        $ref: '#/components/schemas/CreateLowLatencyHlsManifestConfiguration'
    CreateOriginEndpointRequest:
      type: object
      properties:
        ChannelGroupName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name that describes the channel group. The name is the
            primary identifier for the channel group, and must be unique for your
            account in the AWS Region.
        ChannelName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name that describes the channel. The name is the primary
            identifier for the channel, and must be unique for your account in the
            AWS Region and channel group.
        OriginEndpointName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name that describes the origin endpoint. The name is the
            primary identifier for the origin endpoint, and must be unique for your
            account in the AWS Region and channel. You can't use spaces in the name.
            You can't change the name after you create the endpoint.
        ContainerType:
          allOf:
          - $ref: '#/components/schemas/ContainerType'
          description: The type of container to attach to this origin endpoint. A
            container type is a file format that encapsulates one or more media streams,
            such as audio and video, into a single file. You can't change the container
            type after you create the endpoint.
        Segment:
          allOf:
          - $ref: '#/components/schemas/Segment'
          description: The segment configuration, including the segment name, duration,
            and other configuration values.
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/IdempotencyToken'
          description: A unique, case-sensitive token that you provide to ensure the
            idempotency of the request.
        Description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          description: Enter any descriptive text that helps you to identify the origin
            endpoint.
        StartoverWindowSeconds:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The size of the window (in seconds) to create a window of the
            live stream that's available for on-demand viewing. Viewers can start-over
            or catch-up on content that falls within the window. The maximum startover
            window is 1,209,600 seconds (14 days).
        HlsManifests:
          allOf:
          - $ref: '#/components/schemas/CreateHlsManifests'
          description: An HTTP live streaming (HLS) manifest configuration.
        LowLatencyHlsManifests:
          allOf:
          - $ref: '#/components/schemas/CreateLowLatencyHlsManifests'
          description: A low-latency HLS manifest configuration.
        DashManifests:
          allOf:
          - $ref: '#/components/schemas/CreateDashManifests'
          description: A DASH manifest configuration.
        ForceEndpointErrorConfiguration:
          allOf:
          - $ref: '#/components/schemas/ForceEndpointErrorConfiguration'
          description: The failover settings for the endpoint.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: 'A comma-separated list of tag key:value pairs that you define.
            For example:


            `"Key1": "Value1",`


            `"Key2": "Value2"`'
      required:
      - ChannelGroupName
      - ChannelName
      - OriginEndpointName
      - ContainerType
    CreateOriginEndpointResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) associated with the resource.
        ChannelGroupName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name that describes the channel group. The name is the
            primary identifier for the channel group, and must be unique for your
            account in the AWS Region.
        ChannelName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name that describes the channel. The name is the primary
            identifier for the channel, and must be unique for your account in the
            AWS Region and channel group.
        OriginEndpointName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name that describes the origin endpoint. The name is the
            primary identifier for the origin endpoint, and and must be unique for
            your account in the AWS Region and channel.
        ContainerType:
          allOf:
          - $ref: '#/components/schemas/ContainerType'
          description: The type of container attached to this origin endpoint.
        Segment:
          allOf:
          - $ref: '#/components/schemas/Segment'
          description: The segment configuration, including the segment name, duration,
            and other configuration values.
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time the origin endpoint was created.
        ModifiedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time the origin endpoint was modified.
        Description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          description: The description for your origin endpoint.
        StartoverWindowSeconds:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The size of the window (in seconds) to create a window of the
            live stream that's available for on-demand viewing. Viewers can start-over
            or catch-up on content that falls within the window.
        HlsManifests:
          allOf:
          - $ref: '#/components/schemas/GetHlsManifests'
          description: An HTTP live streaming (HLS) manifest configuration.
        LowLatencyHlsManifests:
          allOf:
          - $ref: '#/components/schemas/GetLowLatencyHlsManifests'
          description: A low-latency HLS manifest configuration.
        DashManifests:
          allOf:
          - $ref: '#/components/schemas/GetDashManifests'
          description: A DASH manifest configuration.
        ForceEndpointErrorConfiguration:
          allOf:
          - $ref: '#/components/schemas/ForceEndpointErrorConfiguration'
          description: The failover settings for the endpoint.
        ETag:
          allOf:
          - $ref: '#/components/schemas/EntityTag'
          description: The current Entity Tag (ETag) associated with this resource.
            The entity tag can be used to safely make concurrent updates to the resource.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The comma-separated list of tag key:value pairs assigned to
            the origin endpoint.
      required:
      - Arn
      - ChannelGroupName
      - ChannelName
      - OriginEndpointName
      - ContainerType
      - Segment
      - CreatedAt
      - ModifiedAt
    DashDrmSignaling:
      type: string
      enum:
      - INDIVIDUAL
      - REFERENCED
    DashPeriodTrigger:
      type: string
      enum:
      - AVAILS
      - DRM_KEY_ROTATION
      - SOURCE_CHANGES
      - SOURCE_DISRUPTIONS
      - NONE
    DashPeriodTriggers:
      type: array
      items:
        $ref: '#/components/schemas/DashPeriodTrigger'
    DashSegmentTemplateFormat:
      type: string
      enum:
      - NUMBER_WITH_TIMELINE
    DashUtcTiming:
      type: object
      properties:
        TimingMode:
          allOf:
          - $ref: '#/components/schemas/DashUtcTimingMode'
          description: The UTC timing mode.
        TimingSource:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The the method that the player uses to synchronize to coordinated
            universal time (UTC) wall clock time.
      description: Determines the type of UTC timing included in the DASH Media Presentation
        Description (MPD).
    DashUtcTimingMode:
      type: string
      enum:
      - HTTP_HEAD
      - HTTP_ISO
      - HTTP_XSDATE
      - UTC_DIRECT
    DeleteChannelGroupRequest:
      type: object
      properties:
        ChannelGroupName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name that describes the channel group. The name is the
            primary identifier for the channel group, and must be unique for your
            account in the AWS Region.
      required:
      - ChannelGroupName
    DeleteChannelGroupResponse:
      type: object
      properties: {}
    DeleteChannelPolicyRequest:
      type: object
      properties:
        ChannelGroupName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name that describes the channel group. The name is the
            primary identifier for the channel group, and must be unique for your
            account in the AWS Region.
        ChannelName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name that describes the channel. The name is the primary
            identifier for the channel, and must be unique for your account in the
            AWS Region and channel group.
      required:
      - ChannelGroupName
      - ChannelName
    DeleteChannelPolicyResponse:
      type: object
      properties: {}
    DeleteChannelRequest:
      type: object
      properties:
        ChannelGroupName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name that describes the channel group. The name is the
            primary identifier for the channel group, and must be unique for your
            account in the AWS Region.
        ChannelName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name that describes the channel. The name is the primary
            identifier for the channel, and must be unique for your account in the
            AWS Region and channel group.
      required:
      - ChannelGroupName
      - ChannelName
    DeleteChannelResponse:
      type: object
      properties: {}
    DeleteOriginEndpointPolicyRequest:
      type: object
      properties:
        ChannelGroupName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name that describes the channel group. The name is the
            primary identifier for the channel group, and must be unique for your
            account in the AWS Region.
        ChannelName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name that describes the channel. The name is the primary
            identifier for the channel, and must be unique for your account in the
            AWS Region and channel group.
        OriginEndpointName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name that describes the origin endpoint. The name is the
            primary identifier for the origin endpoint, and and must be unique for
            your account in the AWS Region and channel.
      required:
      - ChannelGroupName
      - ChannelName
      - OriginEndpointName
    DeleteOriginEndpointPolicyResponse:
      type: object
      properties: {}
    DeleteOriginEndpointRequest:
      type: object
      properties:
        ChannelGroupName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name that describes the channel group. The name is the
            primary identifier for the channel group, and must be unique for your
            account in the AWS Region.
        ChannelName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name that describes the channel. The name is the primary
            identifier for the channel, and must be unique for your account in the
            AWS Region and channel group.
        OriginEndpointName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name that describes the origin endpoint. The name is the
            primary identifier for the origin endpoint, and and must be unique for
            your account in the AWS Region and channel.
      required:
      - ChannelGroupName
      - ChannelName
      - OriginEndpointName
    DeleteOriginEndpointResponse:
      type: object
      properties: {}
    Destination:
      type: object
      properties:
        S3Destination:
          allOf:
          - $ref: '#/components/schemas/S3DestinationConfig'
          description: The configuration for exporting harvested content to an S3
            bucket. This includes details such as the bucket name and destination
            path within the bucket.
      required:
      - S3Destination
      description: The configuration for the destination where the harvested content
        will be exported.
    DrmSystem:
      type: string
      enum:
      - CLEAR_KEY_AES_128
      - FAIRPLAY
      - PLAYREADY
      - WIDEVINE
      - IRDETO
    DrmSystems:
      type: array
      items:
        $ref: '#/components/schemas/DrmSystem'
    Encryption:
      type: object
      properties:
        ConstantInitializationVector:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A 128-bit, 16-byte hex value represented by a 32-character
            string, used in conjunction with the key for encrypting content. If you
            don't specify a value, then MediaPackage creates the constant initialization
            vector (IV).
        EncryptionMethod:
          allOf:
          - $ref: '#/components/schemas/EncryptionMethod'
          description: The encryption method to use.
        KeyRotationIntervalSeconds:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: 'The frequency (in seconds) of key changes for live workflows,
            in which content is streamed real time. The service retrieves content
            keys before the live content begins streaming, and then retrieves them
            as needed over the lifetime of the workflow. By default, key rotation
            is set to 300 seconds (5 minutes), the minimum rotation interval, which
            is equivalent to setting it to 300. If you don''t enter an interval, content
            keys aren''t rotated.


            The following example setting causes the service to rotate keys every
            thirty minutes: `1800`'
        SpekeKeyProvider:
          allOf:
          - $ref: '#/components/schemas/SpekeKeyProvider'
          description: The parameters for the SPEKE key provider.
      required:
      - EncryptionMethod
      - SpekeKeyProvider
      description: The parameters for encrypting content.
    EncryptionContractConfiguration:
      type: object
      properties:
        PresetSpeke20Audio:
          allOf:
          - $ref: '#/components/schemas/PresetSpeke20Audio'
          description: "A collection of audio encryption presets.\n\nValue description:\n\
            \n  * PRESET-AUDIO-1 - Use one content key to encrypt all of the audio\
            \ tracks in your stream.\n\n  * PRESET-AUDIO-2 - Use one content key to\
            \ encrypt all of the stereo audio tracks and one content key to encrypt\
            \ all of the multichannel audio tracks.\n\n  * PRESET-AUDIO-3 - Use one\
            \ content key to encrypt all of the stereo audio tracks, one content key\
            \ to encrypt all of the multichannel audio tracks with 3 to 6 channels,\
            \ and one content key to encrypt all of the multichannel audio tracks\
            \ with more than 6 channels.\n\n  * SHARED - Use the same content key\
            \ for all of the audio and video tracks in your stream.\n\n  * UNENCRYPTED\
            \ - Don't encrypt any of the audio tracks in your stream."
        PresetSpeke20Video:
          allOf:
          - $ref: '#/components/schemas/PresetSpeke20Video'
          description: "A collection of video encryption presets.\n\nValue description:\n\
            \n  * PRESET-VIDEO-1 - Use one content key to encrypt all of the video\
            \ tracks in your stream.\n\n  * PRESET-VIDEO-2 - Use one content key to\
            \ encrypt all of the SD video tracks and one content key for all HD and\
            \ higher resolutions video tracks.\n\n  * PRESET-VIDEO-3 - Use one content\
            \ key to encrypt all of the SD video tracks, one content key for HD video\
            \ tracks and one content key for all UHD video tracks.\n\n  * PRESET-VIDEO-4\
            \ - Use one content key to encrypt all of the SD video tracks, one content\
            \ key for HD video tracks, one content key for all UHD1 video tracks and\
            \ one content key for all UHD2 video tracks.\n\n  * PRESET-VIDEO-5 - Use\
            \ one content key to encrypt all of the SD video tracks, one content key\
            \ for HD1 video tracks, one content key for HD2 video tracks, one content\
            \ key for all UHD1 video tracks and one content key for all UHD2 video\
            \ tracks.\n\n  * PRESET-VIDEO-6 - Use one content key to encrypt all of\
            \ the SD video tracks, one content key for HD1 video tracks, one content\
            \ key for HD2 video tracks and one content key for all UHD video tracks.\n\
            \n  * PRESET-VIDEO-7 - Use one content key to encrypt all of the SD+HD1\
            \ video tracks, one content key for HD2 video tracks and one content key\
            \ for all UHD video tracks.\n\n  * PRESET-VIDEO-8 - Use one content key\
            \ to encrypt all of the SD+HD1 video tracks, one content key for HD2 video\
            \ tracks, one content key for all UHD1 video tracks and one content key\
            \ for all UHD2 video tracks.\n\n  * SHARED - Use the same content key\
            \ for all of the video and audio tracks in your stream.\n\n  * UNENCRYPTED\
            \ - Don't encrypt any of the video tracks in your stream."
      required:
      - PresetSpeke20Audio
      - PresetSpeke20Video
      description: Configure one or more content encryption keys for your endpoints
        that use SPEKE Version 2.0. The encryption contract defines which content
        keys are used to encrypt the audio and video tracks in your stream. To configure
        the encryption contract, specify which audio and video encryption presets
        to use.
    EncryptionMethod:
      type: object
      properties:
        TsEncryptionMethod:
          allOf:
          - $ref: '#/components/schemas/TsEncryptionMethod'
          description: The encryption method to use.
        CmafEncryptionMethod:
          allOf:
          - $ref: '#/components/schemas/CmafEncryptionMethod'
          description: The encryption method to use.
      description: The encryption type.
    EndpointErrorCondition:
      type: string
      enum:
      - STALE_MANIFEST
      - INCOMPLETE_MANIFEST
      - MISSING_DRM_KEY
      - SLATE_INPUT
    EndpointErrorConditions:
      type: array
      items:
        $ref: '#/components/schemas/EndpointErrorCondition'
    EntityTag:
      type: string
      pattern: ^[\S]+$
      minLength: 1
      maxLength: 256
    FilterConfiguration:
      type: object
      properties:
        ManifestFilter:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Optionally specify one or more manifest filters for all of
            your manifest egress requests. When you include a manifest filter, note
            that you cannot use an identical manifest filter query parameter for this
            manifest's endpoint URL.
        Start:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: Optionally specify the start time for all of your manifest
            egress requests. When you include start time, note that you cannot use
            start time query parameters for this manifest's endpoint URL.
        End:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: Optionally specify the end time for all of your manifest egress
            requests. When you include end time, note that you cannot use end time
            query parameters for this manifest's endpoint URL.
        TimeDelaySeconds:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: Optionally specify the time delay for all of your manifest
            egress requests. Enter a value that is smaller than your endpoint's startover
            window. When you include time delay, note that you cannot use time delay
            query parameters for this manifest's endpoint URL.
        ClipStartTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: Optionally specify the clip start time for all of your manifest
            egress requests. When you include clip start time, note that you cannot
            use clip start time query parameters for this manifest's endpoint URL.
      description: Filter configuration includes settings for manifest filtering,
        start and end times, and time delay that apply to all of your egress requests
        for this manifest.
    ForceEndpointErrorConfiguration:
      type: object
      properties:
        EndpointErrorConditions:
          allOf:
          - $ref: '#/components/schemas/EndpointErrorConditions'
          description: "The failover conditions for the endpoint. The options are:\n\
            \n  * `STALE_MANIFEST` \\- The manifest stalled and there are no new segments\
            \ or parts.\n\n  * `INCOMPLETE_MANIFEST` \\- There is a gap in the manifest.\n\
            \n  * `MISSING_DRM_KEY` \\- Key rotation is enabled but we're unable to\
            \ fetch the key for the current key period.\n\n  * `SLATE_INPUT` \\- The\
            \ segments which contain slate content are considered to be missing content."
      description: The failover settings for the endpoint.
    GetChannelGroupRequest:
      type: object
      properties:
        ChannelGroupName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name that describes the channel group. The name is the
            primary identifier for the channel group, and must be unique for your
            account in the AWS Region.
      required:
      - ChannelGroupName
    GetChannelGroupResponse:
      type: object
      properties:
        ChannelGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name that describes the channel group. The name is the
            primary identifier for the channel group, and must be unique for your
            account in the AWS Region.
        Arn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) associated with the resource.
        EgressDomain:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The output domain where the source stream should be sent. Integrate
            the domain with a downstream CDN (such as Amazon CloudFront) or playback
            device.
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time the channel group was created.
        ModifiedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time the channel group was modified.
        Description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          description: The description for your channel group.
        ETag:
          allOf:
          - $ref: '#/components/schemas/EntityTag'
          description: The current Entity Tag (ETag) associated with this resource.
            The entity tag can be used to safely make concurrent updates to the resource.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The comma-separated list of tag key:value pairs assigned to
            the channel group.
      required:
      - ChannelGroupName
      - Arn
      - EgressDomain
      - CreatedAt
      - ModifiedAt
    GetChannelPolicyRequest:
      type: object
      properties:
        ChannelGroupName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name that describes the channel group. The name is the
            primary identifier for the channel group, and must be unique for your
            account in the AWS Region.
        ChannelName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name that describes the channel. The name is the primary
            identifier for the channel, and must be unique for your account in the
            AWS Region and channel group.
      required:
      - ChannelGroupName
      - ChannelName
    GetChannelPolicyResponse:
      type: object
      properties:
        ChannelGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name that describes the channel group. The name is the
            primary identifier for the channel group, and must be unique for your
            account in the AWS Region.
        ChannelName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name that describes the channel. The name is the primary
            identifier for the channel, and must be unique for your account in the
            AWS Region and channel group.
        Policy:
          allOf:
          - $ref: '#/components/schemas/PolicyText'
          description: The policy assigned to the channel.
      required:
      - ChannelGroupName
      - ChannelName
      - Policy
    GetChannelRequest:
      type: object
      properties:
        ChannelGroupName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name that describes the channel group. The name is the
            primary identifier for the channel group, and must be unique for your
            account in the AWS Region.
        ChannelName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name that describes the channel. The name is the primary
            identifier for the channel, and must be unique for your account in the
            AWS Region and channel group.
      required:
      - ChannelGroupName
      - ChannelName
    GetChannelResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) associated with the resource.
        ChannelName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name that describes the channel. The name is the primary
            identifier for the channel, and must be unique for your account in the
            AWS Region and channel group.
        ChannelGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name that describes the channel group. The name is the
            primary identifier for the channel group, and must be unique for your
            account in the AWS Region.
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time the channel was created.
        ModifiedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time the channel was modified.
        ResetAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time that the channel was last reset.
        Description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          description: The description for your channel.
        IngestEndpoints:
          $ref: '#/components/schemas/IngestEndpointList'
        InputType:
          allOf:
          - $ref: '#/components/schemas/InputType'
          description: "The input type will be an immutable field which will be used\
            \ to define whether the channel will allow CMAF ingest or HLS ingest.\
            \ If unprovided, it will default to HLS to preserve current behavior.\n\
            \nThe allowed values are:\n\n  * `HLS` \\- The HLS streaming specification\
            \ (which defines M3U8 manifests and TS segments).\n\n  * `CMAF` \\- The\
            \ DASH-IF CMAF Ingest specification (which defines CMAF segments with\
            \ optional DASH manifests)."
        ETag:
          allOf:
          - $ref: '#/components/schemas/EntityTag'
          description: The current Entity Tag (ETag) associated with this resource.
            The entity tag can be used to safely make concurrent updates to the resource.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The comma-separated list of tag key:value pairs assigned to
            the channel.
        InputSwitchConfiguration:
          allOf:
          - $ref: '#/components/schemas/InputSwitchConfiguration'
          description: The configuration for input switching based on the media quality
            confidence score (MQCS) as provided from AWS Elemental MediaLive. This
            setting is valid only when `InputType` is `CMAF`.
        OutputHeaderConfiguration:
          allOf:
          - $ref: '#/components/schemas/OutputHeaderConfiguration'
          description: The settings for what common media server data (CMSD) headers
            AWS Elemental MediaPackage includes in responses to the CDN. This setting
            is valid only when `InputType` is `CMAF`.
      required:
      - Arn
      - ChannelName
      - ChannelGroupName
      - CreatedAt
      - ModifiedAt
    GetDashManifestConfiguration:
      type: object
      properties:
        ManifestName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: A short string that's appended to the endpoint URL. The manifest
            name creates a unique path to this endpoint. If you don't enter a value,
            MediaPackage uses the default manifest name, index.
        Url:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The egress domain URL for stream delivery from MediaPackage.
        ManifestWindowSeconds:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The total duration (in seconds) of the manifest's content.
        FilterConfiguration:
          $ref: '#/components/schemas/FilterConfiguration'
        MinUpdatePeriodSeconds:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: Minimum amount of time (in seconds) that the player should
            wait before requesting updates to the manifest.
        MinBufferTimeSeconds:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: Minimum amount of content (in seconds) that a player must keep
            available in the buffer.
        SuggestedPresentationDelaySeconds:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The amount of time (in seconds) that the player should be from
            the end of the manifest.
        SegmentTemplateFormat:
          allOf:
          - $ref: '#/components/schemas/DashSegmentTemplateFormat'
          description: "Determines the type of variable used in the `media` URL of\
            \ the `SegmentTemplate` tag in the manifest. Also specifies if segment\
            \ timeline information is included in `SegmentTimeline` or `SegmentTemplate`.\n\
            \nValue description:\n\n  * `NUMBER_WITH_TIMELINE` \\- The `$Number$`\
            \ variable is used in the `media` URL. The value of this variable is the\
            \ sequential number of the segment. A full `SegmentTimeline` object is\
            \ presented in each `SegmentTemplate`."
        PeriodTriggers:
          allOf:
          - $ref: '#/components/schemas/DashPeriodTriggers'
          description: A list of triggers that controls when AWS Elemental MediaPackage
            separates the MPEG-DASH manifest into multiple periods. Leave this value
            empty to indicate that the manifest is contained all in one period. For
            more information about periods in the DASH manifest, see [Multi-period
            DASH in AWS Elemental MediaPackage](https://docs.aws.amazon.com/mediapackage/latest/userguide/multi-period.html).
        ScteDash:
          allOf:
          - $ref: '#/components/schemas/ScteDash'
          description: The SCTE configuration.
        DrmSignaling:
          allOf:
          - $ref: '#/components/schemas/DashDrmSignaling'
          description: Determines how the DASH manifest signals the DRM content.
        UtcTiming:
          allOf:
          - $ref: '#/components/schemas/DashUtcTiming'
          description: Determines the type of UTC timing included in the DASH Media
            Presentation Description (MPD).
      required:
      - ManifestName
      - Url
      description: Retrieve the DASH manifest configuration.
    GetDashManifests:
      type: array
      items:
        $ref: '#/components/schemas/GetDashManifestConfiguration'
    GetHarvestJobRequest:
      type: object
      properties:
        ChannelGroupName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the channel group containing the channel associated
            with the harvest job.
        ChannelName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the channel associated with the harvest job.
        OriginEndpointName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the origin endpoint associated with the harvest
            job.
        HarvestJobName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the harvest job to retrieve.
      required:
      - ChannelGroupName
      - ChannelName
      - OriginEndpointName
      - HarvestJobName
      description: The request object for retrieving a specific harvest job.
    GetHarvestJobResponse:
      type: object
      properties:
        ChannelGroupName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the channel group containing the channel associated
            with the harvest job.
        ChannelName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the channel associated with the harvest job.
        OriginEndpointName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the origin endpoint associated with the harvest
            job.
        Destination:
          allOf:
          - $ref: '#/components/schemas/Destination'
          description: The S3 destination where the harvested content is being placed.
        HarvestJobName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the harvest job.
        HarvestedManifests:
          allOf:
          - $ref: '#/components/schemas/HarvestedManifests'
          description: A list of manifests that are being or have been harvested.
        Description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          description: The description of the harvest job, if provided.
        ScheduleConfiguration:
          allOf:
          - $ref: '#/components/schemas/HarvesterScheduleConfiguration'
          description: The configuration for when the harvest job is scheduled to
            run, including start and end times.
        Arn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) of the harvest job.
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time when the harvest job was created.
        ModifiedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time when the harvest job was last modified.
        Status:
          allOf:
          - $ref: '#/components/schemas/HarvestJobStatus'
          description: The current status of the harvest job (e.g., QUEUED, IN_PROGRESS,
            CANCELLED, COMPLETED, FAILED).
        ErrorMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          description: An error message if the harvest job encountered any issues.
        ETag:
          allOf:
          - $ref: '#/components/schemas/EntityTag'
          description: The current version of the harvest job. Used for concurrency
            control.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: A collection of tags associated with the harvest job.
      required:
      - ChannelGroupName
      - ChannelName
      - OriginEndpointName
      - Destination
      - HarvestJobName
      - HarvestedManifests
      - ScheduleConfiguration
      - Arn
      - CreatedAt
      - ModifiedAt
      - Status
      description: The response object containing the details of the requested harvest
        job.
    GetHlsManifestConfiguration:
      type: object
      properties:
        ManifestName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: A short short string that's appended to the endpoint URL. The
            manifest name creates a unique path to this endpoint. If you don't enter
            a value, MediaPackage uses the default manifest name, index. MediaPackage
            automatically inserts the format extension, such as .m3u8. You can't use
            the same manifest name if you use HLS manifest and low-latency HLS manifest.
            The manifestName on the HLSManifest object overrides the manifestName
            you provided on the originEndpoint object.
        Url:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The egress domain URL for stream delivery from MediaPackage.
        ChildManifestName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: A short string that's appended to the endpoint URL. The child
            manifest name creates a unique path to this endpoint. If you don't enter
            a value, MediaPackage uses the default child manifest name, index_1. The
            manifestName on the HLSManifest object overrides the manifestName you
            provided on the originEndpoint object.
        ManifestWindowSeconds:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The total duration (in seconds) of the manifest's content.
        ProgramDateTimeIntervalSeconds:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: 'Inserts EXT-X-PROGRAM-DATE-TIME tags in the output manifest
            at the interval that you specify. If you don''t enter an interval, EXT-X-PROGRAM-DATE-TIME
            tags aren''t included in the manifest. The tags sync the stream to the
            wall clock so that viewers can seek to a specific time in the playback
            timeline on the player.


            Irrespective of this parameter, if any ID3Timed metadata is in the HLS
            input, it is passed through to the HLS output.'
        ScteHls:
          $ref: '#/components/schemas/ScteHls'
        FilterConfiguration:
          $ref: '#/components/schemas/FilterConfiguration'
        StartTag:
          $ref: '#/components/schemas/StartTag'
        UrlEncodeChildManifest:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: When enabled, MediaPackage URL-encodes the query string for
            API requests for HLS child manifests to comply with Amazon Web Services
            Signature Version 4 (SigV4) signature signing protocol. For more information,
            see [Amazon Web Services Signature Version 4 for API requests](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_sigv.html)
            in _Identity and Access Management User Guide_.
      required:
      - ManifestName
      - Url
      description: Retrieve the HTTP live streaming (HLS) manifest configuration.
    GetHlsManifests:
      type: array
      items:
        $ref: '#/components/schemas/GetHlsManifestConfiguration'
    GetLowLatencyHlsManifestConfiguration:
      type: object
      properties:
        ManifestName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: A short short string that's appended to the endpoint URL. The
            manifest name creates a unique path to this endpoint. If you don't enter
            a value, MediaPackage uses the default manifest name, index. MediaPackage
            automatically inserts the format extension, such as .m3u8. You can't use
            the same manifest name if you use HLS manifest and low-latency HLS manifest.
            The manifestName on the HLSManifest object overrides the manifestName
            you provided on the originEndpoint object.
        Url:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The egress domain URL for stream delivery from MediaPackage.
        ChildManifestName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: A short string that's appended to the endpoint URL. The child
            manifest name creates a unique path to this endpoint. If you don't enter
            a value, MediaPackage uses the default child manifest name, index_1. The
            manifestName on the HLSManifest object overrides the manifestName you
            provided on the originEndpoint object.
        ManifestWindowSeconds:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The total duration (in seconds) of the manifest's content.
        ProgramDateTimeIntervalSeconds:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: 'Inserts EXT-X-PROGRAM-DATE-TIME tags in the output manifest
            at the interval that you specify. If you don''t enter an interval, EXT-X-PROGRAM-DATE-TIME
            tags aren''t included in the manifest. The tags sync the stream to the
            wall clock so that viewers can seek to a specific time in the playback
            timeline on the player.


            Irrespective of this parameter, if any ID3Timed metadata is in the HLS
            input, it is passed through to the HLS output.'
        ScteHls:
          $ref: '#/components/schemas/ScteHls'
        FilterConfiguration:
          $ref: '#/components/schemas/FilterConfiguration'
        StartTag:
          $ref: '#/components/schemas/StartTag'
        UrlEncodeChildManifest:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: When enabled, MediaPackage URL-encodes the query string for
            API requests for LL-HLS child manifests to comply with Amazon Web Services
            Signature Version 4 (SigV4) signature signing protocol. For more information,
            see [Amazon Web Services Signature Version 4 for API requests](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_sigv.html)
            in _Identity and Access Management User Guide_.
      required:
      - ManifestName
      - Url
      description: Retrieve the low-latency HTTP live streaming (HLS) manifest configuration.
    GetLowLatencyHlsManifests:
      type: array
      items:
        $ref: '#/components/schemas/GetLowLatencyHlsManifestConfiguration'
    GetOriginEndpointPolicyRequest:
      type: object
      properties:
        ChannelGroupName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name that describes the channel group. The name is the
            primary identifier for the channel group, and must be unique for your
            account in the AWS Region.
        ChannelName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name that describes the channel. The name is the primary
            identifier for the channel, and must be unique for your account in the
            AWS Region and channel group.
        OriginEndpointName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name that describes the origin endpoint. The name is the
            primary identifier for the origin endpoint, and and must be unique for
            your account in the AWS Region and channel.
      required:
      - ChannelGroupName
      - ChannelName
      - OriginEndpointName
    GetOriginEndpointPolicyResponse:
      type: object
      properties:
        ChannelGroupName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name that describes the channel group. The name is the
            primary identifier for the channel group, and must be unique for your
            account in the AWS Region.
        ChannelName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name that describes the channel. The name is the primary
            identifier for the channel, and must be unique for your account in the
            AWS Region and channel group.
        OriginEndpointName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name that describes the origin endpoint. The name is the
            primary identifier for the origin endpoint, and and must be unique for
            your account in the AWS Region and channel.
        Policy:
          allOf:
          - $ref: '#/components/schemas/PolicyText'
          description: The policy assigned to the origin endpoint.
      required:
      - ChannelGroupName
      - ChannelName
      - OriginEndpointName
      - Policy
    GetOriginEndpointRequest:
      type: object
      properties:
        ChannelGroupName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name that describes the channel group. The name is the
            primary identifier for the channel group, and must be unique for your
            account in the AWS Region.
        ChannelName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name that describes the channel. The name is the primary
            identifier for the channel, and must be unique for your account in the
            AWS Region and channel group.
        OriginEndpointName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name that describes the origin endpoint. The name is the
            primary identifier for the origin endpoint, and and must be unique for
            your account in the AWS Region and channel.
      required:
      - ChannelGroupName
      - ChannelName
      - OriginEndpointName
    GetOriginEndpointResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) associated with the resource.
        ChannelGroupName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name that describes the channel group. The name is the
            primary identifier for the channel group, and must be unique for your
            account in the AWS Region.
        ChannelName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name that describes the channel. The name is the primary
            identifier for the channel, and must be unique for your account in the
            AWS Region and channel group.
        OriginEndpointName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name that describes the origin endpoint. The name is the
            primary identifier for the origin endpoint, and and must be unique for
            your account in the AWS Region and channel.
        ContainerType:
          allOf:
          - $ref: '#/components/schemas/ContainerType'
          description: The type of container attached to this origin endpoint.
        Segment:
          $ref: '#/components/schemas/Segment'
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time the origin endpoint was created.
        ModifiedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time the origin endpoint was modified.
        ResetAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time that the origin endpoint was last reset.
        Description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          description: The description for your origin endpoint.
        StartoverWindowSeconds:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The size of the window (in seconds) to create a window of the
            live stream that's available for on-demand viewing. Viewers can start-over
            or catch-up on content that falls within the window.
        HlsManifests:
          allOf:
          - $ref: '#/components/schemas/GetHlsManifests'
          description: An HTTP live streaming (HLS) manifest configuration.
        LowLatencyHlsManifests:
          allOf:
          - $ref: '#/components/schemas/GetLowLatencyHlsManifests'
          description: A low-latency HLS manifest configuration.
        DashManifests:
          allOf:
          - $ref: '#/components/schemas/GetDashManifests'
          description: A DASH manifest configuration.
        ForceEndpointErrorConfiguration:
          allOf:
          - $ref: '#/components/schemas/ForceEndpointErrorConfiguration'
          description: The failover settings for the endpoint.
        ETag:
          allOf:
          - $ref: '#/components/schemas/EntityTag'
          description: The current Entity Tag (ETag) associated with this resource.
            The entity tag can be used to safely make concurrent updates to the resource.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The comma-separated list of tag key:value pairs assigned to
            the origin endpoint.
      required:
      - Arn
      - ChannelGroupName
      - ChannelName
      - OriginEndpointName
      - ContainerType
      - Segment
      - CreatedAt
      - ModifiedAt
    HarvestJob:
      type: object
      properties:
        ChannelGroupName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the channel group containing the channel associated
            with this harvest job.
        ChannelName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the channel associated with this harvest job.
        OriginEndpointName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the origin endpoint associated with this harvest
            job.
        Destination:
          allOf:
          - $ref: '#/components/schemas/Destination'
          description: The S3 destination where the harvested content will be placed.
        HarvestJobName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the harvest job.
        HarvestedManifests:
          allOf:
          - $ref: '#/components/schemas/HarvestedManifests'
          description: A list of manifests that are being or have been harvested.
        Description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          description: An optional description of the harvest job.
        ScheduleConfiguration:
          allOf:
          - $ref: '#/components/schemas/HarvesterScheduleConfiguration'
          description: The configuration for when the harvest job is scheduled to
            run.
        Arn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) of the harvest job.
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time when the harvest job was created.
        ModifiedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time when the harvest job was last modified.
        Status:
          allOf:
          - $ref: '#/components/schemas/HarvestJobStatus'
          description: The current status of the harvest job (e.g., QUEUED, IN_PROGRESS,
            CANCELLED, COMPLETED, FAILED).
        ErrorMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          description: An error message if the harvest job encountered any issues.
        ETag:
          allOf:
          - $ref: '#/components/schemas/EntityTag'
          description: The current version of the harvest job. Used for concurrency
            control.
      required:
      - ChannelGroupName
      - ChannelName
      - OriginEndpointName
      - Destination
      - HarvestJobName
      - HarvestedManifests
      - ScheduleConfiguration
      - Arn
      - CreatedAt
      - ModifiedAt
      - Status
      description: Represents a harvest job resource in MediaPackage v2, which is
        used to export content from an origin endpoint to an S3 bucket.
    HarvestJobStatus:
      type: string
      enum:
      - QUEUED
      - IN_PROGRESS
      - CANCELLED
      - COMPLETED
      - FAILED
    HarvestJobsList:
      type: array
      items:
        $ref: '#/components/schemas/HarvestJob'
    HarvestedDashManifest:
      type: object
      properties:
        ManifestName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the harvested DASH manifest.
      required:
      - ManifestName
      description: Information about a harvested DASH manifest.
    HarvestedDashManifestsList:
      type: array
      items:
        $ref: '#/components/schemas/HarvestedDashManifest'
    HarvestedHlsManifest:
      type: object
      properties:
        ManifestName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the harvested HLS manifest.
      required:
      - ManifestName
      description: Information about a harvested HLS manifest.
    HarvestedHlsManifestsList:
      type: array
      items:
        $ref: '#/components/schemas/HarvestedHlsManifest'
    HarvestedLowLatencyHlsManifest:
      type: object
      properties:
        ManifestName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the harvested Low-Latency HLS manifest.
      required:
      - ManifestName
      description: Information about a harvested Low-Latency HLS manifest.
    HarvestedLowLatencyHlsManifestsList:
      type: array
      items:
        $ref: '#/components/schemas/HarvestedLowLatencyHlsManifest'
    HarvestedManifests:
      type: object
      properties:
        HlsManifests:
          allOf:
          - $ref: '#/components/schemas/HarvestedHlsManifestsList'
          description: A list of harvested HLS manifests.
        DashManifests:
          allOf:
          - $ref: '#/components/schemas/HarvestedDashManifestsList'
          description: A list of harvested DASH manifests.
        LowLatencyHlsManifests:
          allOf:
          - $ref: '#/components/schemas/HarvestedLowLatencyHlsManifestsList'
          description: A list of harvested Low-Latency HLS manifests.
      description: A collection of harvested manifests of different types.
    HarvesterScheduleConfiguration:
      type: object
      properties:
        StartTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The start time for the harvest job.
        EndTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The end time for the harvest job.
      required:
      - StartTime
      - EndTime
      description: Defines the schedule configuration for a harvest job.
    IdempotencyToken:
      type: string
      pattern: ^[\S]+$
      minLength: 1
      maxLength: 256
    IngestEndpoint:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The system-generated unique identifier for the IngestEndpoint.
        Url:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ingest domain URL where the source stream should be sent.
      description: The ingest domain URL where the source stream should be sent.
    IngestEndpointList:
      type: array
      items:
        $ref: '#/components/schemas/IngestEndpoint'
      description: <p>The list of ingest endpoints.</p>
    InputSwitchConfiguration:
      type: object
      properties:
        MQCSInputSwitching:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: When true, AWS Elemental MediaPackage performs input switching
            based on the MQCS. Default is true. This setting is valid only when `InputType`
            is `CMAF`.
      description: The configuration for input switching based on the media quality
        confidence score (MQCS) as provided from AWS Elemental MediaLive.
    InputType:
      type: string
      enum:
      - HLS
      - CMAF
    InternalServerException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
      description: Indicates that an error from the service occurred while trying
        to process a request.
    ListChannelGroupsRequest:
      type: object
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/ListResourceMaxResults'
          description: The maximum number of results to return in the response.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The pagination token from the GET list request. Use the token
            to fetch the next page of results.
    ListChannelGroupsResponse:
      type: object
      properties:
        Items:
          allOf:
          - $ref: '#/components/schemas/ChannelGroupsList'
          description: The objects being returned.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The pagination token from the GET list request. Use the token
            to fetch the next page of results.
    ListChannelsRequest:
      type: object
      properties:
        ChannelGroupName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name that describes the channel group. The name is the
            primary identifier for the channel group, and must be unique for your
            account in the AWS Region.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/ListResourceMaxResults'
          description: The maximum number of results to return in the response.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The pagination token from the GET list request. Use the token
            to fetch the next page of results.
      required:
      - ChannelGroupName
    ListChannelsResponse:
      type: object
      properties:
        Items:
          allOf:
          - $ref: '#/components/schemas/ChannelList'
          description: The objects being returned.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The pagination token from the GET list request.
    ListDashManifestConfiguration:
      type: object
      properties:
        ManifestName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: A short string that's appended to the endpoint URL. The manifest
            name creates a unique path to this endpoint. If you don't enter a value,
            MediaPackage uses the default manifest name, index.
        Url:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The egress domain URL for stream delivery from MediaPackage.
      required:
      - ManifestName
      description: List the DASH manifest configuration.
    ListDashManifests:
      type: array
      items:
        $ref: '#/components/schemas/ListDashManifestConfiguration'
    ListHarvestJobsRequest:
      type: object
      properties:
        ChannelGroupName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the channel group to filter the harvest jobs by.
            If specified, only harvest jobs associated with channels in this group
            will be returned.
        ChannelName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the channel to filter the harvest jobs by. If specified,
            only harvest jobs associated with this channel will be returned.
        OriginEndpointName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the origin endpoint to filter the harvest jobs
            by. If specified, only harvest jobs associated with this origin endpoint
            will be returned.
        Status:
          allOf:
          - $ref: '#/components/schemas/HarvestJobStatus'
          description: The status to filter the harvest jobs by. If specified, only
            harvest jobs with this status will be returned.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/ListResourceMaxResults'
          description: The maximum number of harvest jobs to return in a single request.
            If not specified, a default value will be used.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A token used for pagination. Provide this value in subsequent
            requests to retrieve the next set of results.
      required:
      - ChannelGroupName
      description: The request object for listing harvest jobs.
    ListHarvestJobsResponse:
      type: object
      properties:
        Items:
          allOf:
          - $ref: '#/components/schemas/HarvestJobsList'
          description: An array of harvest job objects that match the specified criteria.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A token used for pagination. Include this value in subsequent
            requests to retrieve the next set of results. If null, there are no more
            results to retrieve.
      description: The response object containing the list of harvest jobs that match
        the specified criteria.
    ListHlsManifestConfiguration:
      type: object
      properties:
        ManifestName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: A short short string that's appended to the endpoint URL. The
            manifest name creates a unique path to this endpoint. If you don't enter
            a value, MediaPackage uses the default manifest name, index. MediaPackage
            automatically inserts the format extension, such as .m3u8. You can't use
            the same manifest name if you use HLS manifest and low-latency HLS manifest.
            The manifestName on the HLSManifest object overrides the manifestName
            you provided on the originEndpoint object.
        ChildManifestName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: A short string that's appended to the endpoint URL. The child
            manifest name creates a unique path to this endpoint. If you don't enter
            a value, MediaPackage uses the default child manifest name, index_1. The
            manifestName on the HLSManifest object overrides the manifestName you
            provided on the originEndpoint object.
        Url:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The egress domain URL for stream delivery from MediaPackage.
      required:
      - ManifestName
      description: List the HTTP live streaming (HLS) manifest configuration.
    ListHlsManifests:
      type: array
      items:
        $ref: '#/components/schemas/ListHlsManifestConfiguration'
    ListLowLatencyHlsManifestConfiguration:
      type: object
      properties:
        ManifestName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: A short short string that's appended to the endpoint URL. The
            manifest name creates a unique path to this endpoint. If you don't enter
            a value, MediaPackage uses the default manifest name, index. MediaPackage
            automatically inserts the format extension, such as .m3u8. You can't use
            the same manifest name if you use HLS manifest and low-latency HLS manifest.
            The manifestName on the HLSManifest object overrides the manifestName
            you provided on the originEndpoint object.
        ChildManifestName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: A short string that's appended to the endpoint URL. The child
            manifest name creates a unique path to this endpoint. If you don't enter
            a value, MediaPackage uses the default child manifest name, index_1. The
            manifestName on the HLSManifest object overrides the manifestName you
            provided on the originEndpoint object.
        Url:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The egress domain URL for stream delivery from MediaPackage.
      required:
      - ManifestName
      description: List the low-latency HTTP live streaming (HLS) manifest configuration.
    ListLowLatencyHlsManifests:
      type: array
      items:
        $ref: '#/components/schemas/ListLowLatencyHlsManifestConfiguration'
    ListOriginEndpointsRequest:
      type: object
      properties:
        ChannelGroupName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name that describes the channel group. The name is the
            primary identifier for the channel group, and must be unique for your
            account in the AWS Region.
        ChannelName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name that describes the channel. The name is the primary
            identifier for the channel, and must be unique for your account in the
            AWS Region and channel group.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/ListResourceMaxResults'
          description: The maximum number of results to return in the response.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The pagination token from the GET list request. Use the token
            to fetch the next page of results.
      required:
      - ChannelGroupName
      - ChannelName
    ListOriginEndpointsResponse:
      type: object
      properties:
        Items:
          allOf:
          - $ref: '#/components/schemas/OriginEndpointsList'
          description: The objects being returned.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The pagination token from the GET list request. Use the token
            to fetch the next page of results.
    ListResourceMaxResults:
      type: integer
      minimum: 1
      maximum: 100
    ListTagsForResourceRequest:
      type: object
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/TagArn'
          description: The ARN of the CloudWatch resource that you want to view tags
            for.
      required:
      - ResourceArn
    ListTagsForResourceResponse:
      type: object
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: Contains a map of the key-value pairs for the resource tag
            or tags assigned to the resource.
    ManifestName:
      type: string
      pattern: ^[a-zA-Z0-9-]+$
      minLength: 1
      maxLength: 256
    OriginEndpointListConfiguration:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) associated with the resource.
        ChannelGroupName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name that describes the channel group. The name is the
            primary identifier for the channel group, and must be unique for your
            account in the AWS Region.
        ChannelName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name that describes the channel. The name is the primary
            identifier for the channel, and must be unique for your account in the
            AWS Region and channel group.
        OriginEndpointName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name that describes the origin endpoint. The name is the
            primary identifier for the origin endpoint, and and must be unique for
            your account in the AWS Region and channel.
        ContainerType:
          allOf:
          - $ref: '#/components/schemas/ContainerType'
          description: The type of container attached to this origin endpoint. A container
            type is a file format that encapsulates one or more media streams, such
            as audio and video, into a single file.
        Description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          description: Any descriptive information that you want to add to the origin
            endpoint for future identification purposes.
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time the origin endpoint was created.
        ModifiedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time the origin endpoint was modified.
        HlsManifests:
          allOf:
          - $ref: '#/components/schemas/ListHlsManifests'
          description: An HTTP live streaming (HLS) manifest configuration.
        LowLatencyHlsManifests:
          allOf:
          - $ref: '#/components/schemas/ListLowLatencyHlsManifests'
          description: A low-latency HLS manifest configuration.
        DashManifests:
          allOf:
          - $ref: '#/components/schemas/ListDashManifests'
          description: A DASH manifest configuration.
        ForceEndpointErrorConfiguration:
          allOf:
          - $ref: '#/components/schemas/ForceEndpointErrorConfiguration'
          description: The failover settings for the endpoint.
      required:
      - Arn
      - ChannelGroupName
      - ChannelName
      - OriginEndpointName
      - ContainerType
      description: The configuration of the origin endpoint.
    OriginEndpointsList:
      type: array
      items:
        $ref: '#/components/schemas/OriginEndpointListConfiguration'
    OutputHeaderConfiguration:
      type: object
      properties:
        PublishMQCS:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: When true, AWS Elemental MediaPackage includes the MQCS in
            responses to the CDN. This setting is valid only when `InputType` is `CMAF`.
      description: The settings for what common media server data (CMSD) headers AWS
        Elemental MediaPackage includes in responses to the CDN.
    PolicyText:
      type: string
      maxLength: 6144
    PresetSpeke20Audio:
      type: string
      enum:
      - PRESET_AUDIO_1
      - PRESET_AUDIO_2
      - PRESET_AUDIO_3
      - SHARED
      - UNENCRYPTED
    PresetSpeke20Video:
      type: string
      enum:
      - PRESET_VIDEO_1
      - PRESET_VIDEO_2
      - PRESET_VIDEO_3
      - PRESET_VIDEO_4
      - PRESET_VIDEO_5
      - PRESET_VIDEO_6
      - PRESET_VIDEO_7
      - PRESET_VIDEO_8
      - SHARED
      - UNENCRYPTED
    PutChannelPolicyRequest:
      type: object
      properties:
        ChannelGroupName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name that describes the channel group. The name is the
            primary identifier for the channel group, and must be unique for your
            account in the AWS Region.
        ChannelName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name that describes the channel. The name is the primary
            identifier for the channel, and must be unique for your account in the
            AWS Region and channel group.
        Policy:
          allOf:
          - $ref: '#/components/schemas/PolicyText'
          description: The policy to attach to the specified channel.
      required:
      - ChannelGroupName
      - ChannelName
      - Policy
    PutChannelPolicyResponse:
      type: object
      properties: {}
    PutOriginEndpointPolicyRequest:
      type: object
      properties:
        ChannelGroupName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name that describes the channel group. The name is the
            primary identifier for the channel group, and must be unique for your
            account in the AWS Region.
        ChannelName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name that describes the channel. The name is the primary
            identifier for the channel, and must be unique for your account in the
            AWS Region and channel group.
        OriginEndpointName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name that describes the origin endpoint. The name is the
            primary identifier for the origin endpoint, and and must be unique for
            your account in the AWS Region and channel.
        Policy:
          allOf:
          - $ref: '#/components/schemas/PolicyText'
          description: The policy to attach to the specified origin endpoint.
      required:
      - ChannelGroupName
      - ChannelName
      - OriginEndpointName
      - Policy
    PutOriginEndpointPolicyResponse:
      type: object
      properties: {}
    ResetChannelStateRequest:
      type: object
      properties:
        ChannelGroupName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the channel group that contains the channel that
            you are resetting.
        ChannelName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the channel that you are resetting.
      required:
      - ChannelGroupName
      - ChannelName
    ResetChannelStateResponse:
      type: object
      properties:
        ChannelGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the channel group that contains the channel that
            you just reset.
        ChannelName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the channel that you just reset.
        Arn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) associated with the channel
            that you just reset.
        ResetAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time that the channel was last reset.
      required:
      - ChannelGroupName
      - ChannelName
      - Arn
      - ResetAt
    ResetOriginEndpointStateRequest:
      type: object
      properties:
        ChannelGroupName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the channel group that contains the channel with
            the origin endpoint that you are resetting.
        ChannelName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the channel with the origin endpoint that you are
            resetting.
        OriginEndpointName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the origin endpoint that you are resetting.
      required:
      - ChannelGroupName
      - ChannelName
      - OriginEndpointName
    ResetOriginEndpointStateResponse:
      type: object
      properties:
        ChannelGroupName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the channel group that contains the channel with
            the origin endpoint that you just reset.
        ChannelName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the channel with the origin endpoint that you just
            reset.
        OriginEndpointName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the origin endpoint that you just reset.
        Arn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) associated with the endpoint
            that you just reset.
        ResetAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time that the origin endpoint was last reset.
      required:
      - ChannelGroupName
      - ChannelName
      - OriginEndpointName
      - Arn
      - ResetAt
    ResourceDescription:
      type: string
      minLength: 0
      maxLength: 1024
    ResourceName:
      type: string
      pattern: ^[a-zA-Z0-9_-]+$
      minLength: 1
      maxLength: 256
    ResourceNotFoundException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
        ResourceTypeNotFound:
          allOf:
          - $ref: '#/components/schemas/ResourceTypeNotFound'
          description: The specified resource type wasn't found.
      description: The specified resource doesn't exist.
    ResourceTypeNotFound:
      type: string
      enum:
      - CHANNEL_GROUP
      - CHANNEL
      - ORIGIN_ENDPOINT
      - HARVEST_JOB
    S3BucketName:
      type: string
      minLength: 3
      maxLength: 63
    S3DestinationConfig:
      type: object
      properties:
        BucketName:
          allOf:
          - $ref: '#/components/schemas/S3BucketName'
          description: The name of an S3 bucket within which harvested content will
            be exported.
        DestinationPath:
          allOf:
          - $ref: '#/components/schemas/S3DestinationPath'
          description: The path within the specified S3 bucket where the harvested
            content will be placed.
      required:
      - BucketName
      - DestinationPath
      description: Configuration parameters for where in an S3 bucket to place the
        harvested content.
    S3DestinationPath:
      type: string
      pattern: ^[\S]+$
      minLength: 1
      maxLength: 1024
    Scte:
      type: object
      properties:
        ScteFilter:
          allOf:
          - $ref: '#/components/schemas/ScteFilterList'
          description: The SCTE-35 message types that you want to be treated as ad
            markers in the output.
      description: The SCTE configuration.
    ScteDash:
      type: object
      properties:
        AdMarkerDash:
          allOf:
          - $ref: '#/components/schemas/AdMarkerDash'
          description: "Choose how ad markers are included in the packaged content.\
            \ If you include ad markers in the content stream in your upstream encoders,\
            \ then you need to inform MediaPackage what to do with the ad markers\
            \ in the output.\n\nValue description:\n\n  * `Binary` \\- The SCTE-35\
            \ marker is expressed as a hex-string (Base64 string) rather than full\
            \ XML.\n\n  * `XML` \\- The SCTE marker is expressed fully in XML."
      description: The SCTE configuration.
    ScteFilter:
      type: string
      enum:
      - SPLICE_INSERT
      - BREAK
      - PROVIDER_ADVERTISEMENT
      - DISTRIBUTOR_ADVERTISEMENT
      - PROVIDER_PLACEMENT_OPPORTUNITY
      - DISTRIBUTOR_PLACEMENT_OPPORTUNITY
      - PROVIDER_OVERLAY_PLACEMENT_OPPORTUNITY
      - DISTRIBUTOR_OVERLAY_PLACEMENT_OPPORTUNITY
      - PROGRAM
    ScteFilterList:
      type: array
      items:
        $ref: '#/components/schemas/ScteFilter'
    ScteHls:
      type: object
      properties:
        AdMarkerHls:
          allOf:
          - $ref: '#/components/schemas/AdMarkerHls'
          description: "Ad markers indicate when ads should be inserted during playback.\
            \ If you include ad markers in the content stream in your upstream encoders,\
            \ then you need to inform MediaPackage what to do with the ad markers\
            \ in the output. Choose what you want MediaPackage to do with the ad markers.\n\
            \nValue description:\n\n  * DATERANGE - Insert EXT-X-DATERANGE tags to\
            \ signal ad and program transition events in TS and CMAF manifests. If\
            \ you use DATERANGE, you must set a programDateTimeIntervalSeconds value\
            \ of 1 or higher. To learn more about DATERANGE, see [SCTE-35 Ad Marker\
            \ EXT-X-DATERANGE](http://docs.aws.amazon.com/mediapackage/latest/ug/scte-35-ad-marker-ext-x-daterange.html)."
      description: The SCTE configuration.
    Segment:
      type: object
      properties:
        SegmentDurationSeconds:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The duration (in seconds) of each segment. Enter a value equal
            to, or a multiple of, the input segment duration. If the value that you
            enter is different from the input segment duration, MediaPackage rounds
            segments to the nearest multiple of the input segment duration.
        SegmentName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name that describes the segment. The name is the base name
            of the segment used in all content manifests inside of the endpoint. You
            can't use spaces in the name.
        TsUseAudioRenditionGroup:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: When selected, MediaPackage bundles all audio tracks in a rendition
            group. All other tracks in the stream can be used with any audio rendition
            from the group.
        IncludeIframeOnlyStreams:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: When selected, the stream set includes an additional I-frame
            only stream, along with the other tracks. If false, this extra stream
            is not included. MediaPackage generates an I-frame only stream from the
            first rendition in the manifest. The service inserts EXT-I-FRAMES-ONLY
            tags in the output manifest, and then generates and includes an I-frames
            only playlist in the stream. This playlist permits player functionality
            like fast forward and rewind.
        TsIncludeDvbSubtitles:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: By default, MediaPackage excludes all digital video broadcasting
            (DVB) subtitles from the output. When selected, MediaPackage passes through
            DVB subtitles into the output.
        Scte:
          allOf:
          - $ref: '#/components/schemas/Scte'
          description: The SCTE configuration options in the segment settings.
        Encryption:
          $ref: '#/components/schemas/Encryption'
      description: The segment configuration, including the segment name, duration,
        and other configuration values.
    ServiceQuotaExceededException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
      description: The request would cause a service quota to be exceeded.
    SpekeKeyProvider:
      type: object
      properties:
        EncryptionContractConfiguration:
          allOf:
          - $ref: '#/components/schemas/EncryptionContractConfiguration'
          description: Configure one or more content encryption keys for your endpoints
            that use SPEKE Version 2.0. The encryption contract defines which content
            keys are used to encrypt the audio and video tracks in your stream. To
            configure the encryption contract, specify which audio and video encryption
            presets to use.
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'The unique identifier for the content. The service sends this
            to the key server to identify the current endpoint. How unique you make
            this depends on how fine-grained you want access controls to be. The service
            does not permit you to use the same ID for two simultaneous encryption
            processes. The resource ID is also known as the content ID.


            The following example shows a resource ID: `MovieNight20171126093045`'
        DrmSystems:
          allOf:
          - $ref: '#/components/schemas/DrmSystems'
          description: The DRM solution provider you're using to protect your content
            during distribution.
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'The ARN for the IAM role granted by the key provider that
            provides access to the key provider API. This role must have a trust policy
            that allows MediaPackage to assume the role, and it must have a sufficient
            permissions policy to allow access to the specific key retrieval URL.
            Get this from your DRM solution provider.


            Valid format: `arn:aws:iam::{accountID}:role/{name}`. The following example
            shows a role ARN: `arn:aws:iam::444455556666:role/SpekeAccess`'
        Url:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'The URL of the API Gateway proxy that you set up to talk to
            your key server. The API Gateway proxy must reside in the same AWS Region
            as MediaPackage and must start with https://.


            The following example shows a URL: `https://1wm2dx1f33.execute-api.us-west-2.amazonaws.com/SpekeSample/copyProtection`'
      required:
      - EncryptionContractConfiguration
      - ResourceId
      - DrmSystems
      - RoleArn
      - Url
      description: The parameters for the SPEKE key provider.
    StartTag:
      type: object
      properties:
        TimeOffset:
          allOf:
          - $ref: '#/components/schemas/Float'
          description: Specify the value for TIME-OFFSET within your EXT-X-START tag.
            Enter a signed floating point value which, if positive, must be less than
            the configured manifest duration minus three times the configured segment
            target duration. If negative, the absolute value must be larger than three
            times the configured segment target duration, and the absolute value must
            be smaller than the configured manifest duration.
        Precise:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Specify the value for PRECISE within your EXT-X-START tag.
            Leave blank, or choose false, to use the default value NO. Choose yes
            to use the value YES.
      required:
      - TimeOffset
      description: To insert an EXT-X-START tag in your HLS playlist, specify a StartTag
        configuration object with a valid TimeOffset. When you do, you can also optionally
        specify whether to include a PRECISE value in the EXT-X-START tag.
    TagArn:
      type: string
    TagKey:
      type: string
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
    TagMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
    TagResourceRequest:
      type: object
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/TagArn'
          description: The ARN of the MediaPackage resource that you're adding tags
            to.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: Contains a map of the key-value pairs for the resource tag
            or tags assigned to the resource.
      required:
      - ResourceArn
      - Tags
    TagValue:
      type: string
    ThrottlingException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
      description: The request throughput limit was exceeded.
    TsEncryptionMethod:
      type: string
      enum:
      - AES_128
      - SAMPLE_AES
    UntagResourceRequest:
      type: object
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/TagArn'
          description: The ARN of the MediaPackage resource that you're removing tags
            from.
        TagKeys:
          allOf:
          - $ref: '#/components/schemas/TagKeyList'
          description: The list of tag keys to remove from the resource.
      required:
      - ResourceArn
      - TagKeys
    UpdateChannelGroupRequest:
      type: object
      properties:
        ChannelGroupName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name that describes the channel group. The name is the
            primary identifier for the channel group, and must be unique for your
            account in the AWS Region.
        ETag:
          allOf:
          - $ref: '#/components/schemas/EntityTag'
          description: The expected current Entity Tag (ETag) for the resource. If
            the specified ETag does not match the resource's current entity tag, the
            update request will be rejected.
        Description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          description: Any descriptive information that you want to add to the channel
            group for future identification purposes.
      required:
      - ChannelGroupName
    UpdateChannelGroupResponse:
      type: object
      properties:
        ChannelGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name that describes the channel group. The name is the
            primary identifier for the channel group, and must be unique for your
            account in the AWS Region.
        Arn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) associated with the resource.
        EgressDomain:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The output domain where the source stream is sent. Integrate
            the domain with a downstream CDN (such as Amazon CloudFront) or playback
            device.
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time the channel group was created.
        ModifiedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time the channel group was modified.
        Description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          description: The description for your channel group.
        ETag:
          allOf:
          - $ref: '#/components/schemas/EntityTag'
          description: The current Entity Tag (ETag) associated with this resource.
            The entity tag can be used to safely make concurrent updates to the resource.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The comma-separated list of tag key:value pairs assigned to
            the channel group.
      required:
      - ChannelGroupName
      - Arn
      - EgressDomain
      - CreatedAt
      - ModifiedAt
    UpdateChannelRequest:
      type: object
      properties:
        ChannelGroupName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name that describes the channel group. The name is the
            primary identifier for the channel group, and must be unique for your
            account in the AWS Region.
        ChannelName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name that describes the channel. The name is the primary
            identifier for the channel, and must be unique for your account in the
            AWS Region and channel group.
        ETag:
          allOf:
          - $ref: '#/components/schemas/EntityTag'
          description: The expected current Entity Tag (ETag) for the resource. If
            the specified ETag does not match the resource's current entity tag, the
            update request will be rejected.
        Description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          description: Any descriptive information that you want to add to the channel
            for future identification purposes.
        InputSwitchConfiguration:
          allOf:
          - $ref: '#/components/schemas/InputSwitchConfiguration'
          description: The configuration for input switching based on the media quality
            confidence score (MQCS) as provided from AWS Elemental MediaLive. This
            setting is valid only when `InputType` is `CMAF`.
        OutputHeaderConfiguration:
          allOf:
          - $ref: '#/components/schemas/OutputHeaderConfiguration'
          description: The settings for what common media server data (CMSD) headers
            AWS Elemental MediaPackage includes in responses to the CDN. This setting
            is valid only when `InputType` is `CMAF`.
      required:
      - ChannelGroupName
      - ChannelName
    UpdateChannelResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) associated with the resource.
        ChannelName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name that describes the channel. The name is the primary
            identifier for the channel, and must be unique for your account in the
            AWS Region and channel group.
        ChannelGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name that describes the channel group. The name is the
            primary identifier for the channel group, and must be unique for your
            account in the AWS Region.
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time the channel was created.
        ModifiedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time the channel was modified.
        Description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          description: The description for your channel.
        IngestEndpoints:
          $ref: '#/components/schemas/IngestEndpointList'
        InputType:
          allOf:
          - $ref: '#/components/schemas/InputType'
          description: "The input type will be an immutable field which will be used\
            \ to define whether the channel will allow CMAF ingest or HLS ingest.\
            \ If unprovided, it will default to HLS to preserve current behavior.\n\
            \nThe allowed values are:\n\n  * `HLS` \\- The HLS streaming specification\
            \ (which defines M3U8 manifests and TS segments).\n\n  * `CMAF` \\- The\
            \ DASH-IF CMAF Ingest specification (which defines CMAF segments with\
            \ optional DASH manifests)."
        ETag:
          allOf:
          - $ref: '#/components/schemas/EntityTag'
          description: The current Entity Tag (ETag) associated with this resource.
            The entity tag can be used to safely make concurrent updates to the resource.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The comma-separated list of tag key:value pairs assigned to
            the channel.
        InputSwitchConfiguration:
          allOf:
          - $ref: '#/components/schemas/InputSwitchConfiguration'
          description: The configuration for input switching based on the media quality
            confidence score (MQCS) as provided from AWS Elemental MediaLive. This
            setting is valid only when `InputType` is `CMAF`.
        OutputHeaderConfiguration:
          allOf:
          - $ref: '#/components/schemas/OutputHeaderConfiguration'
          description: The settings for what common media server data (CMSD) headers
            AWS Elemental MediaPackage includes in responses to the CDN. This setting
            is valid only when `InputType` is `CMAF`.
      required:
      - Arn
      - ChannelName
      - ChannelGroupName
      - CreatedAt
      - ModifiedAt
    UpdateOriginEndpointRequest:
      type: object
      properties:
        ChannelGroupName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name that describes the channel group. The name is the
            primary identifier for the channel group, and must be unique for your
            account in the AWS Region.
        ChannelName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name that describes the channel. The name is the primary
            identifier for the channel, and must be unique for your account in the
            AWS Region and channel group.
        OriginEndpointName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name that describes the origin endpoint. The name is the
            primary identifier for the origin endpoint, and and must be unique for
            your account in the AWS Region and channel.
        ContainerType:
          allOf:
          - $ref: '#/components/schemas/ContainerType'
          description: The type of container attached to this origin endpoint. A container
            type is a file format that encapsulates one or more media streams, such
            as audio and video, into a single file.
        Segment:
          allOf:
          - $ref: '#/components/schemas/Segment'
          description: The segment configuration, including the segment name, duration,
            and other configuration values.
        Description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          description: Any descriptive information that you want to add to the origin
            endpoint for future identification purposes.
        StartoverWindowSeconds:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The size of the window (in seconds) to create a window of the
            live stream that's available for on-demand viewing. Viewers can start-over
            or catch-up on content that falls within the window. The maximum startover
            window is 1,209,600 seconds (14 days).
        HlsManifests:
          allOf:
          - $ref: '#/components/schemas/CreateHlsManifests'
          description: An HTTP live streaming (HLS) manifest configuration.
        LowLatencyHlsManifests:
          allOf:
          - $ref: '#/components/schemas/CreateLowLatencyHlsManifests'
          description: A low-latency HLS manifest configuration.
        DashManifests:
          allOf:
          - $ref: '#/components/schemas/CreateDashManifests'
          description: A DASH manifest configuration.
        ForceEndpointErrorConfiguration:
          allOf:
          - $ref: '#/components/schemas/ForceEndpointErrorConfiguration'
          description: The failover settings for the endpoint.
        ETag:
          allOf:
          - $ref: '#/components/schemas/EntityTag'
          description: The expected current Entity Tag (ETag) for the resource. If
            the specified ETag does not match the resource's current entity tag, the
            update request will be rejected.
      required:
      - ChannelGroupName
      - ChannelName
      - OriginEndpointName
      - ContainerType
    UpdateOriginEndpointResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ARN associated with the resource.
        ChannelGroupName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name that describes the channel group. The name is the
            primary identifier for the channel group, and must be unique for your
            account in the AWS Region.
        ChannelName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name that describes the channel. The name is the primary
            identifier for the channel, and must be unique for your account in the
            AWS Region and channel group.
        OriginEndpointName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name that describes the origin endpoint. The name is the
            primary identifier for the origin endpoint, and and must be unique for
            your account in the AWS Region and channel.
        ContainerType:
          allOf:
          - $ref: '#/components/schemas/ContainerType'
          description: The type of container attached to this origin endpoint.
        Segment:
          allOf:
          - $ref: '#/components/schemas/Segment'
          description: The segment configuration, including the segment name, duration,
            and other configuration values.
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time the origin endpoint was created.
        ModifiedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time the origin endpoint was modified.
        Description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          description: The description of the origin endpoint.
        StartoverWindowSeconds:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The size of the window (in seconds) to create a window of the
            live stream that's available for on-demand viewing. Viewers can start-over
            or catch-up on content that falls within the window.
        HlsManifests:
          allOf:
          - $ref: '#/components/schemas/GetHlsManifests'
          description: An HTTP live streaming (HLS) manifest configuration.
        LowLatencyHlsManifests:
          allOf:
          - $ref: '#/components/schemas/GetLowLatencyHlsManifests'
          description: A low-latency HLS manifest configuration.
        ForceEndpointErrorConfiguration:
          allOf:
          - $ref: '#/components/schemas/ForceEndpointErrorConfiguration'
          description: The failover settings for the endpoint.
        ETag:
          allOf:
          - $ref: '#/components/schemas/EntityTag'
          description: The current Entity Tag (ETag) associated with this resource.
            The entity tag can be used to safely make concurrent updates to the resource.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The comma-separated list of tag key:value pairs assigned to
            the origin endpoint.
        DashManifests:
          allOf:
          - $ref: '#/components/schemas/GetDashManifests'
          description: A DASH manifest configuration.
      required:
      - Arn
      - ChannelGroupName
      - ChannelName
      - OriginEndpointName
      - ContainerType
      - Segment
      - CreatedAt
      - ModifiedAt
    ValidationException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
        ValidationExceptionType:
          allOf:
          - $ref: '#/components/schemas/ValidationExceptionType'
          description: The type of ValidationException.
      description: The input failed to meet the constraints specified by the AWS service.
    ValidationExceptionType:
      type: string
      enum:
      - CONTAINER_TYPE_IMMUTABLE
      - INVALID_PAGINATION_TOKEN
      - INVALID_PAGINATION_MAX_RESULTS
      - INVALID_POLICY
      - INVALID_ROLE_ARN
      - MANIFEST_NAME_COLLISION
      - ENCRYPTION_METHOD_CONTAINER_TYPE_MISMATCH
      - CENC_IV_INCOMPATIBLE
      - ENCRYPTION_CONTRACT_WITHOUT_AUDIO_RENDITION_INCOMPATIBLE
      - ENCRYPTION_CONTRACT_UNENCRYPTED
      - ENCRYPTION_CONTRACT_SHARED
      - NUM_MANIFESTS_LOW
      - NUM_MANIFESTS_HIGH
      - MANIFEST_DRM_SYSTEMS_INCOMPATIBLE
      - DRM_SYSTEMS_ENCRYPTION_METHOD_INCOMPATIBLE
      - ROLE_ARN_NOT_ASSUMABLE
      - ROLE_ARN_LENGTH_OUT_OF_RANGE
      - ROLE_ARN_INVALID_FORMAT
      - URL_INVALID
      - URL_SCHEME
      - URL_USER_INFO
      - URL_PORT
      - URL_UNKNOWN_HOST
      - URL_LOCAL_ADDRESS
      - URL_LOOPBACK_ADDRESS
      - URL_LINK_LOCAL_ADDRESS
      - URL_MULTICAST_ADDRESS
      - MEMBER_INVALID
      - MEMBER_MISSING
      - MEMBER_MIN_VALUE
      - MEMBER_MAX_VALUE
      - MEMBER_MIN_LENGTH
      - MEMBER_MAX_LENGTH
      - MEMBER_INVALID_ENUM_VALUE
      - MEMBER_DOES_NOT_MATCH_PATTERN
      - INVALID_MANIFEST_FILTER
      - INVALID_TIME_DELAY_SECONDS
      - END_TIME_EARLIER_THAN_START_TIME
      - TS_CONTAINER_TYPE_WITH_DASH_MANIFEST
      - DIRECT_MODE_WITH_TIMING_SOURCE
      - NONE_MODE_WITH_TIMING_SOURCE
      - TIMING_SOURCE_MISSING
      - UPDATE_PERIOD_SMALLER_THAN_SEGMENT_DURATION
      - PERIOD_TRIGGERS_NONE_SPECIFIED_WITH_ADDITIONAL_VALUES
      - DRM_SIGNALING_MISMATCH_SEGMENT_ENCRYPTION_STATUS
      - ONLY_CMAF_INPUT_TYPE_ALLOW_FORCE_ENDPOINT_ERROR_CONFIGURATION
      - SOURCE_DISRUPTIONS_ENABLED_INCORRECTLY
      - HARVESTED_MANIFEST_HAS_START_END_FILTER_CONFIGURATION
      - HARVESTED_MANIFEST_NOT_FOUND_ON_ENDPOINT
      - TOO_MANY_IN_PROGRESS_HARVEST_JOBS
      - HARVEST_JOB_INELIGIBLE_FOR_CANCELLATION
      - INVALID_HARVEST_JOB_DURATION
      - HARVEST_JOB_S3_DESTINATION_MISSING_OR_INCOMPLETE
      - HARVEST_JOB_UNABLE_TO_WRITE_TO_S3_DESTINATION
      - HARVEST_JOB_CUSTOMER_ENDPOINT_READ_ACCESS_DENIED
      - CLIP_START_TIME_WITH_START_OR_END
      - START_TAG_TIME_OFFSET_INVALID
      - ONLY_CMAF_INPUT_TYPE_ALLOW_MQCS_INPUT_SWITCHING
      - ONLY_CMAF_INPUT_TYPE_ALLOW_MQCS_OUTPUT_CONFIGURATION
