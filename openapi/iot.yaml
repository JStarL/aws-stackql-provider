openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: iot
  x-aws-serviceName: iot
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-07'
  version: '2015-05-28'
  title: AWS IoT
  description: |-
    IoT

    IoT provides secure, bi-directional communication between Internet-connected devices (such as sensors, actuators, embedded devices, or smart appliances) and the Amazon Web Services cloud. You can discover your custom IoT-Data endpoint to communicate with, configure rules for data processing and integration with other services, organize resources associated with each device (Registry), configure logging, and create and manage policies and credentials to authenticate devices.

    The service endpoints that expose this API are listed in [Amazon Web Services IoT Core Endpoints and Quotas](https://docs.aws.amazon.com/general/latest/gr/iot-core.html). You must use the endpoint for the region that has the resources you want to access.

    The service name used by [Amazon Web Services Signature Version 4](https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html) to sign the request is: _execute-api_.

    For more information about how IoT works, see the [Developer Guide](https://docs.aws.amazon.com/iot/latest/developerguide/aws-iot-how-it-works.html).

    For information about how to use the credentials provider for IoT, see [Authorizing Direct Calls to Amazon Web Services Services](https://docs.aws.amazon.com/iot/latest/developerguide/authorizing-direct-aws.html).
servers:
- description: The AWS IoT regional endpoint
  url: https://iot.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths:
  /accept-certificate-transfer/{certificateId}:
    patch:
      operationId: AcceptCertificateTransfer
      description: |-
        Accepts a pending certificate transfer. The default state of the certificate is INACTIVE.

        To check for pending certificate transfers, call ListCertificates to enumerate your certificates.

        Requires permission to access the [AcceptCertificateTransfer](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: certificateId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CertificateId'
      - name: setAsActive
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/SetAsActive'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '410':
          description: |-
            You can't revert the certificate transfer because the transfer is already complete.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferAlreadyCompletedException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /billing-groups/addThingToBillingGroup:
    put:
      operationId: AddThingToBillingGroup
      description: |-
        Adds a thing to a billing group.

        Requires permission to access the [AddThingToBillingGroup](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                billingGroupName:
                  $ref: '#/components/schemas/BillingGroupName'
                billingGroupArn:
                  $ref: '#/components/schemas/BillingGroupArn'
                thingName:
                  $ref: '#/components/schemas/ThingName'
                thingArn:
                  $ref: '#/components/schemas/ThingArn'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /thing-groups/addThingToThingGroup:
    put:
      operationId: AddThingToThingGroup
      description: |-
        Adds a thing to a thing group.

        Requires permission to access the [AddThingToThingGroup](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                thingGroupName:
                  $ref: '#/components/schemas/ThingGroupName'
                thingGroupArn:
                  $ref: '#/components/schemas/ThingGroupArn'
                thingName:
                  $ref: '#/components/schemas/ThingName'
                thingArn:
                  $ref: '#/components/schemas/ThingArn'
                overrideDynamicGroups:
                  $ref: '#/components/schemas/OverrideDynamicGroups'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /packages/{packageName}/versions/{versionName}/sbom:
    put:
      operationId: AssociateSbomWithPackageVersion
      description: |-
        Associates the selected software bill of materials (SBOM) with a specific software package version.

        Requires permission to access the [AssociateSbomWithPackageVersion](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: packageName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PackageName'
      - name: versionName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/VersionName'
      - name: clientToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ClientToken'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sbom:
                  $ref: '#/components/schemas/Sbom'
      responses:
        '200': {}
        '409':
          description: |-
            The request conflicts with the current state of the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Internal error from the service that indicates an unexpected error or that the service is unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            Service quota has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    delete:
      operationId: DisassociateSbomFromPackageVersion
      description: |-
        Disassociates the selected software bill of materials (SBOM) from a specific software package version.

        Requires permission to access the [DisassociateSbomWithPackageVersion](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: packageName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PackageName'
      - name: versionName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/VersionName'
      - name: clientToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '409':
          description: |-
            The request conflicts with the current state of the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Internal error from the service that indicates an unexpected error or that the service is unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /jobs/{jobId}/targets:
    post:
      operationId: AssociateTargetsWithJob
      description: |-
        Associates a group with a continuous job. The following criteria must be met:

          * The job must have been created with the `targetSelection` field set to "CONTINUOUS".

          * The job status must currently be "IN_PROGRESS".

          * The total number of targets associated with a job must not exceed 100.

        Requires permission to access the [AssociateTargetsWithJob](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: jobId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/JobId'
      - name: namespaceId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NamespaceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                targets:
                  $ref: '#/components/schemas/JobTargets'
                comment:
                  $ref: '#/components/schemas/Comment'
      responses:
        '200': {}
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '410':
          description: |-
            A limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /target-policies/{policyName}:
    put:
      operationId: AttachPolicy
      description: |-
        Attaches the specified policy to the specified principal (certificate or other credential).

        Requires permission to access the [AttachPolicy](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: policyName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PolicyName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                target:
                  $ref: '#/components/schemas/PolicyTarget'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '410':
          description: |-
            A limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
    post:
      operationId: DetachPolicy
      description: |-
        Detaches a policy from the specified target.

        Because of the distributed nature of Amazon Web Services, it can take up to five minutes after a policy is detached before it's ready to be deleted.

        Requires permission to access the [DetachPolicy](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: policyName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PolicyName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                target:
                  $ref: '#/components/schemas/PolicyTarget'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '410':
          description: |-
            A limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /principal-policies/{policyName}:
    put:
      operationId: AttachPrincipalPolicy
      description: |-
        Attaches the specified policy to the specified principal (certificate or other credential).

        **Note:** This action is deprecated and works as expected for backward compatibility, but we won't add enhancements. Use AttachPolicy instead.

        Requires permission to access the [AttachPrincipalPolicy](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: policyName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PolicyName'
      - name: x-amzn-iot-principal
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Principal'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '410':
          description: |-
            A limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
    delete:
      operationId: DetachPrincipalPolicy
      description: |-
        Removes the specified policy from the specified certificate.

        **Note:** This action is deprecated and works as expected for backward compatibility, but we won't add enhancements. Use DetachPolicy instead.

        Requires permission to access the [DetachPrincipalPolicy](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: policyName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PolicyName'
      - name: x-amzn-iot-principal
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Principal'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /security-profiles/{securityProfileName}/targets:
    put:
      operationId: AttachSecurityProfile
      description: |-
        Associates a Device Defender security profile with a thing group or this account. Each thing group or account can have up to five security profiles associated with it.

        Requires permission to access the [AttachSecurityProfile](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: securityProfileName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/SecurityProfileName'
      - name: securityProfileTargetArn
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/SecurityProfileTargetArn'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '410':
          description: |-
            A limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '409':
          description: |-
            An exception thrown when the version of an entity specified with the `expectedVersion` parameter does not match the latest version in the system.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionConflictException'
    delete:
      operationId: DetachSecurityProfile
      description: |-
        Disassociates a Device Defender security profile from a thing group or from this account.

        Requires permission to access the [DetachSecurityProfile](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: securityProfileName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/SecurityProfileName'
      - name: securityProfileTargetArn
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/SecurityProfileTargetArn'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
    get:
      operationId: ListTargetsForSecurityProfile
      description: |-
        Lists the targets (thing groups) associated with a given Device Defender security profile.

        Requires permission to access the [ListTargetsForSecurityProfile](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: securityProfileName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/SecurityProfileName'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /things/{thingName}/principals:
    put:
      operationId: AttachThingPrincipal
      description: |-
        Attaches the specified principal to the specified thing. A principal can be X.509 certificates, Amazon Cognito identities or federated identities.

        Requires permission to access the [AttachThingPrincipal](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: thingName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ThingName'
      - name: x-amzn-principal
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Principal'
      - name: thingPrincipalType
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ThingPrincipalType'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
    delete:
      operationId: DetachThingPrincipal
      description: |-
        Detaches the specified principal from the specified thing. A principal can be X.509 certificates, IAM users, groups, and roles, Amazon Cognito identities or federated identities.

        This call is asynchronous. It might take several seconds for the detachment to propagate.

        Requires permission to access the [DetachThingPrincipal](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: thingName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ThingName'
      - name: x-amzn-principal
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Principal'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
    get:
      operationId: ListThingPrincipals
      description: |-
        Lists the principals associated with the specified thing. A principal can be X.509 certificates, IAM users, groups, and roles, Amazon Cognito identities or federated identities.

        Requires permission to access the [ListThingPrincipals](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/RegistryMaxResults'
      - name: thingName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ThingName'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /audit/mitigationactions/tasks/{taskId}/cancel:
    put:
      operationId: CancelAuditMitigationActionsTask
      description: |-
        Cancels a mitigation action task that is in progress. If the task is not in progress, an InvalidRequestException occurs.

        Requires permission to access the [CancelAuditMitigationActionsTask](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: taskId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MitigationActionsTaskId'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /audit/tasks/{taskId}/cancel:
    put:
      operationId: CancelAuditTask
      description: |-
        Cancels an audit that is in progress. The audit can be either scheduled or on demand. If the audit isn't in progress, an "InvalidRequestException" occurs.

        Requires permission to access the [CancelAuditTask](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: taskId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AuditTaskId'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /cancel-certificate-transfer/{certificateId}:
    patch:
      operationId: CancelCertificateTransfer
      description: |-
        Cancels a pending transfer for the specified certificate.

        **Note** Only the transfer source account can use this operation to cancel a transfer. (Transfer destinations can use RejectCertificateTransfer instead.) After transfer, IoT returns the certificate to the source account in the INACTIVE state. After the destination account has accepted the transfer, the transfer cannot be cancelled.

        After a certificate transfer is cancelled, the status of the certificate changes from PENDING_TRANSFER to INACTIVE.

        Requires permission to access the [CancelCertificateTransfer](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: certificateId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CertificateId'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '410':
          description: |-
            You can't revert the certificate transfer because the transfer is already complete.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferAlreadyCompletedException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /detect/mitigationactions/tasks/{taskId}/cancel:
    put:
      operationId: CancelDetectMitigationActionsTask
      description: |-
        Cancels a Device Defender ML Detect mitigation action.

        Requires permission to access the [CancelDetectMitigationActionsTask](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: taskId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MitigationActionsTaskId'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /jobs/{jobId}/cancel:
    put:
      operationId: CancelJob
      description: |-
        Cancels a job.

        Requires permission to access the [CancelJob](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: jobId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/JobId'
      - name: force
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ForceFlag'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                reasonCode:
                  $ref: '#/components/schemas/ReasonCode'
                comment:
                  $ref: '#/components/schemas/Comment'
      responses:
        '200': {}
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '410':
          description: |-
            A limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /things/{thingName}/jobs/{jobId}/cancel:
    put:
      operationId: CancelJobExecution
      description: |-
        Cancels the execution of a job for a given thing.

        Requires permission to access the [CancelJobExecution](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: jobId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/JobId'
      - name: thingName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ThingName'
      - name: force
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ForceFlag'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                expectedVersion:
                  $ref: '#/components/schemas/ExpectedVersion'
                statusDetails:
                  $ref: '#/components/schemas/DetailsMap'
      responses:
        '200': {}
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '409':
          description: |-
            An exception thrown when the version of an entity specified with the `expectedVersion` parameter does not match the latest version in the system.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionConflictException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /default-authorizer:
    delete:
      operationId: ClearDefaultAuthorizer
      description: |-
        Clears the default authorizer.

        Requires permission to access the [ClearDefaultAuthorizer](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters: []
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
    get:
      operationId: DescribeDefaultAuthorizer
      description: |-
        Describes the default authorizer.

        Requires permission to access the [DescribeDefaultAuthorizer](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters: []
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
    post:
      operationId: SetDefaultAuthorizer
      description: |-
        Sets the default authorizer. This will be used if a websocket connection is made without specifying an authorizer.

        Requires permission to access the [SetDefaultAuthorizer](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                authorizerName:
                  $ref: '#/components/schemas/AuthorizerName'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '409':
          description: |-
            The resource already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /confirmdestination/{confirmationToken+}:
    get:
      operationId: ConfirmTopicRuleDestination
      description: |-
        Confirms a topic rule destination. When you create a rule requiring a destination, IoT sends a confirmation message to the endpoint or base address you specify. The message includes a token which you pass back when calling `ConfirmTopicRuleDestination` to confirm that you own or have access to the endpoint.

        Requires permission to access the [ConfirmTopicRuleDestination](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: confirmationToken
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ConfirmationToken'
      responses:
        '200': {}
        '409':
          description: |-
            A conflicting resource update exception. This exception is thrown when two pending updates cause a conflict.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictingResourceUpdateException'
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /audit/suppressions/create:
    post:
      operationId: CreateAuditSuppression
      description: |-
        Creates a Device Defender audit suppression.

        Requires permission to access the [CreateAuditSuppression](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                checkName:
                  $ref: '#/components/schemas/AuditCheckName'
                resourceIdentifier:
                  $ref: '#/components/schemas/ResourceIdentifier'
                expirationDate:
                  $ref: '#/components/schemas/Timestamp'
                suppressIndefinitely:
                  $ref: '#/components/schemas/SuppressIndefinitely'
                description:
                  $ref: '#/components/schemas/AuditDescription'
                clientRequestToken:
                  $ref: '#/components/schemas/ClientRequestToken'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '410':
          description: |-
            A limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '409':
          description: |-
            The resource already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
  /authorizer/{authorizerName}:
    post:
      operationId: CreateAuthorizer
      description: |-
        Creates an authorizer.

        Requires permission to access the [CreateAuthorizer](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: authorizerName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AuthorizerName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                authorizerFunctionArn:
                  $ref: '#/components/schemas/AuthorizerFunctionArn'
                tokenKeyName:
                  $ref: '#/components/schemas/TokenKeyName'
                tokenSigningPublicKeys:
                  $ref: '#/components/schemas/PublicKeyMap'
                status:
                  $ref: '#/components/schemas/AuthorizerStatus'
                tags:
                  $ref: '#/components/schemas/TagList'
                signingDisabled:
                  $ref: '#/components/schemas/BooleanKey'
                enableCachingForHttp:
                  $ref: '#/components/schemas/EnableCachingForHttp'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '410':
          description: |-
            A limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '409':
          description: |-
            The resource already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
    delete:
      operationId: DeleteAuthorizer
      description: |-
        Deletes an authorizer.

        Requires permission to access the [DeleteAuthorizer](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: authorizerName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AuthorizerName'
      responses:
        '200': {}
        '409':
          description: |-
            You can't delete the resource because it is attached to one or more resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteConflictException'
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
    get:
      operationId: DescribeAuthorizer
      description: |-
        Describes an authorizer.

        Requires permission to access the [DescribeAuthorizer](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: authorizerName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AuthorizerName'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
    put:
      operationId: UpdateAuthorizer
      description: |-
        Updates an authorizer.

        Requires permission to access the [UpdateAuthorizer](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: authorizerName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AuthorizerName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                authorizerFunctionArn:
                  $ref: '#/components/schemas/AuthorizerFunctionArn'
                tokenKeyName:
                  $ref: '#/components/schemas/TokenKeyName'
                tokenSigningPublicKeys:
                  $ref: '#/components/schemas/PublicKeyMap'
                status:
                  $ref: '#/components/schemas/AuthorizerStatus'
                enableCachingForHttp:
                  $ref: '#/components/schemas/EnableCachingForHttp'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '410':
          description: |-
            A limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /billing-groups/{billingGroupName}:
    post:
      operationId: CreateBillingGroup
      description: |-
        Creates a billing group. If this call is made multiple times using the same billing group name and configuration, the call will succeed. If this call is made with the same billing group name but different configuration a `ResourceAlreadyExistsException` is thrown.

        Requires permission to access the [CreateBillingGroup](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: billingGroupName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BillingGroupName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                billingGroupProperties:
                  $ref: '#/components/schemas/BillingGroupProperties'
                tags:
                  $ref: '#/components/schemas/TagList'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '409':
          description: |-
            The resource already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
    delete:
      operationId: DeleteBillingGroup
      description: |-
        Deletes the billing group.

        Requires permission to access the [DeleteBillingGroup](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: billingGroupName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BillingGroupName'
      - name: expectedVersion
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/OptionalVersion'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '409':
          description: |-
            An exception thrown when the version of an entity specified with the `expectedVersion` parameter does not match the latest version in the system.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionConflictException'
    get:
      operationId: DescribeBillingGroup
      description: |-
        Returns information about a billing group.

        Requires permission to access the [DescribeBillingGroup](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: billingGroupName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BillingGroupName'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
    patch:
      operationId: UpdateBillingGroup
      description: |-
        Updates information about the billing group.

        Requires permission to access the [UpdateBillingGroup](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: billingGroupName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BillingGroupName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                billingGroupProperties:
                  $ref: '#/components/schemas/BillingGroupProperties'
                expectedVersion:
                  $ref: '#/components/schemas/OptionalVersion'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '409':
          description: |-
            An exception thrown when the version of an entity specified with the `expectedVersion` parameter does not match the latest version in the system.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionConflictException'
  /certificates:
    post:
      operationId: CreateCertificateFromCsr
      description: |-
        Creates an X.509 certificate using the specified certificate signing request.

        Requires permission to access the [CreateCertificateFromCsr](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.

        The CSR must include a public key that is either an RSA key with a length of at least 2048 bits or an ECC key from NIST P-256, NIST P-384, or NIST P-521 curves. For supported certificates, consult [ Certificate signing algorithms supported by IoT](https://docs.aws.amazon.com/iot/latest/developerguide/x509-client-certs.html#x509-cert-algorithms).

        Reusing the same certificate signing request (CSR) results in a distinct certificate.

        You can create multiple certificates in a batch by creating a directory, copying multiple `.csr` files into that directory, and then specifying that directory on the command line. The following commands show how to create a batch of certificates given a batch of CSRs. In the following commands, we assume that a set of CSRs are located inside of the directory my-csr-directory:

        On Linux and OS X, the command is:

        `$ ls my-csr-directory/ | xargs -I {} aws iot create-certificate-from-csr --certificate-signing-request file://my-csr-directory/{}`

        This command lists all of the CSRs in my-csr-directory and pipes each CSR file name to the `aws iot create-certificate-from-csr` Amazon Web Services CLI command to create a certificate for the corresponding CSR.

        You can also run the `aws iot create-certificate-from-csr` part of the command in parallel to speed up the certificate creation process:

        `$ ls my-csr-directory/ | xargs -P 10 -I {} aws iot create-certificate-from-csr --certificate-signing-request file://my-csr-directory/{} `

        On Windows PowerShell, the command to create certificates for all CSRs in my-csr-directory is:

        `> ls -Name my-csr-directory | %{aws iot create-certificate-from-csr --certificate-signing-request file://my-csr-directory/$_} `

        On a Windows command prompt, the command to create certificates for all CSRs in my-csr-directory is:

        `> forfiles /p my-csr-directory /c "cmd /c aws iot create-certificate-from-csr --certificate-signing-request file://@path" `
      parameters:
      - name: setAsActive
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/SetAsActive'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                certificateSigningRequest:
                  $ref: '#/components/schemas/CertificateSigningRequest'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
    get:
      operationId: ListCertificates
      description: |-
        Lists the certificates registered in your Amazon Web Services account.

        The results are paginated with a default page size of 25. You can use the returned marker to retrieve additional results.

        Requires permission to access the [ListCertificates](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: pageSize
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PageSize'
      - name: marker
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Marker'
      - name: isAscendingOrder
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/AscendingOrder'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /certificate-providers/{certificateProviderName}:
    post:
      operationId: CreateCertificateProvider
      description: |-
        Creates an Amazon Web Services IoT Core certificate provider. You can use Amazon Web Services IoT Core certificate provider to customize how to sign a certificate signing request (CSR) in IoT fleet provisioning. For more information, see [Customizing certificate signing using Amazon Web Services IoT Core certificate provider](https://docs.aws.amazon.com/iot/latest/developerguide/provisioning-cert-provider.html) from _Amazon Web Services IoT Core Developer Guide_.

        Requires permission to access the [CreateCertificateProvider](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.

        After you create a certificate provider, the behavior of [ `CreateCertificateFromCsr` API for fleet provisioning](https://docs.aws.amazon.com/iot/latest/developerguide/fleet-provision-api.html#create-cert-csr) will change and all API calls to `CreateCertificateFromCsr` will invoke the certificate provider to create the certificates. It can take up to a few minutes for this behavior to change after a certificate provider is created.
      parameters:
      - name: certificateProviderName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CertificateProviderName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                lambdaFunctionArn:
                  $ref: '#/components/schemas/CertificateProviderFunctionArn'
                accountDefaultForOperations:
                  $ref: '#/components/schemas/CertificateProviderAccountDefaultForOperations'
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
                tags:
                  $ref: '#/components/schemas/TagList'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '410':
          description: |-
            A limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '409':
          description: |-
            The resource already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
    delete:
      operationId: DeleteCertificateProvider
      description: |-
        Deletes a certificate provider.

        Requires permission to access the [DeleteCertificateProvider](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.

        If you delete the certificate provider resource, the behavior of `CreateCertificateFromCsr` will resume, and IoT will create certificates signed by IoT from a certificate signing request (CSR).
      parameters:
      - name: certificateProviderName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CertificateProviderName'
      responses:
        '200': {}
        '409':
          description: |-
            You can't delete the resource because it is attached to one or more resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteConflictException'
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
    get:
      operationId: DescribeCertificateProvider
      description: |-
        Describes a certificate provider.

        Requires permission to access the [DescribeCertificateProvider](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: certificateProviderName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CertificateProviderName'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
    put:
      operationId: UpdateCertificateProvider
      description: |-
        Updates a certificate provider.

        Requires permission to access the [UpdateCertificateProvider](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: certificateProviderName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CertificateProviderName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                lambdaFunctionArn:
                  $ref: '#/components/schemas/CertificateProviderFunctionArn'
                accountDefaultForOperations:
                  $ref: '#/components/schemas/CertificateProviderAccountDefaultForOperations'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /commands/{commandId}:
    put:
      operationId: CreateCommand
      description: |-
        Creates a command. A command contains reusable configurations that can be applied before they are sent to the devices.
      parameters:
      - name: commandId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CommandId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                namespace:
                  $ref: '#/components/schemas/CommandNamespace'
                displayName:
                  $ref: '#/components/schemas/DisplayName'
                description:
                  $ref: '#/components/schemas/CommandDescription'
                payload:
                  $ref: '#/components/schemas/CommandPayload'
                mandatoryParameters:
                  $ref: '#/components/schemas/CommandParameterList'
                roleArn:
                  $ref: '#/components/schemas/RoleArn'
                tags:
                  $ref: '#/components/schemas/TagList'
      responses:
        '200': {}
        '409':
          description: |-
            The request conflicts with the current state of the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Internal error from the service that indicates an unexpected error or that the service is unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '402':
          description: |-
            Service quota has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    delete:
      operationId: DeleteCommand
      description: |-
        Delete a command resource.
      parameters:
      - name: commandId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CommandId'
      responses:
        '200': {}
        '409':
          description: |-
            The request conflicts with the current state of the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Internal error from the service that indicates an unexpected error or that the service is unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetCommand
      description: |-
        Gets information about the specified command.
      parameters:
      - name: commandId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CommandId'
      responses:
        '200': {}
        '500':
          description: |-
            Internal error from the service that indicates an unexpected error or that the service is unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    patch:
      operationId: UpdateCommand
      description: |-
        Update information about a command or mark a command for deprecation.
      parameters:
      - name: commandId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CommandId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                displayName:
                  $ref: '#/components/schemas/DisplayName'
                description:
                  $ref: '#/components/schemas/CommandDescription'
                deprecated:
                  $ref: '#/components/schemas/DeprecationFlag'
      responses:
        '200': {}
        '409':
          description: |-
            The request conflicts with the current state of the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Internal error from the service that indicates an unexpected error or that the service is unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /custom-metric/{metricName}:
    post:
      operationId: CreateCustomMetric
      description: |-
        Use this API to define a Custom Metric published by your devices to Device Defender.

        Requires permission to access the [CreateCustomMetric](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: metricName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MetricName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                displayName:
                  $ref: '#/components/schemas/CustomMetricDisplayName'
                metricType:
                  $ref: '#/components/schemas/CustomMetricType'
                tags:
                  $ref: '#/components/schemas/TagList'
                clientRequestToken:
                  $ref: '#/components/schemas/ClientRequestToken'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '410':
          description: |-
            A limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '409':
          description: |-
            The resource already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
    delete:
      operationId: DeleteCustomMetric
      description: |-
        Deletes a Device Defender detect custom metric.

        Requires permission to access the [DeleteCustomMetric](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.

        Before you can delete a custom metric, you must first remove the custom metric from all security profiles it's a part of. The security profile associated with the custom metric can be found using the [ListSecurityProfiles](https://docs.aws.amazon.com/iot/latest/apireference/API_ListSecurityProfiles.html) API with `metricName` set to your custom metric name.
      parameters:
      - name: metricName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MetricName'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    get:
      operationId: DescribeCustomMetric
      description: |-
        Gets information about a Device Defender detect custom metric.

        Requires permission to access the [DescribeCustomMetric](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: metricName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MetricName'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
    patch:
      operationId: UpdateCustomMetric
      description: |-
        Updates a Device Defender detect custom metric.

        Requires permission to access the [UpdateCustomMetric](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: metricName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MetricName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                displayName:
                  $ref: '#/components/schemas/CustomMetricDisplayName'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /dimensions/{name}:
    post:
      operationId: CreateDimension
      description: |-
        Create a dimension that you can use to limit the scope of a metric used in a security profile for IoT Device Defender. For example, using a `TOPIC_FILTER` dimension, you can narrow down the scope of the metric only to MQTT topics whose name match the pattern specified in the dimension.

        Requires permission to access the [CreateDimension](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: name
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DimensionName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  $ref: '#/components/schemas/DimensionType'
                stringValues:
                  $ref: '#/components/schemas/DimensionStringValues'
                tags:
                  $ref: '#/components/schemas/TagList'
                clientRequestToken:
                  $ref: '#/components/schemas/ClientRequestToken'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '410':
          description: |-
            A limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '409':
          description: |-
            The resource already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
    delete:
      operationId: DeleteDimension
      description: |-
        Removes the specified dimension from your Amazon Web Services accounts.

        Requires permission to access the [DeleteDimension](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: name
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DimensionName'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    get:
      operationId: DescribeDimension
      description: |-
        Provides details about a dimension that is defined in your Amazon Web Services accounts.

        Requires permission to access the [DescribeDimension](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: name
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DimensionName'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
    patch:
      operationId: UpdateDimension
      description: |-
        Updates the definition for a dimension. You cannot change the type of a dimension after it is created (you can delete it and recreate it).

        Requires permission to access the [UpdateDimension](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: name
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DimensionName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                stringValues:
                  $ref: '#/components/schemas/DimensionStringValues'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /domainConfigurations/{domainConfigurationName}:
    post:
      operationId: CreateDomainConfiguration
      description: |-
        Creates a domain configuration.

        Requires permission to access the [CreateDomainConfiguration](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: domainConfigurationName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DomainConfigurationName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                domainName:
                  $ref: '#/components/schemas/DomainName'
                serverCertificateArns:
                  $ref: '#/components/schemas/ServerCertificateArns'
                validationCertificateArn:
                  $ref: '#/components/schemas/AcmCertificateArn'
                authorizerConfig:
                  $ref: '#/components/schemas/AuthorizerConfig'
                serviceType:
                  $ref: '#/components/schemas/ServiceType'
                tags:
                  $ref: '#/components/schemas/TagList'
                tlsConfig:
                  $ref: '#/components/schemas/TlsConfig'
                serverCertificateConfig:
                  $ref: '#/components/schemas/ServerCertificateConfig'
                authenticationType:
                  $ref: '#/components/schemas/AuthenticationType'
                applicationProtocol:
                  $ref: '#/components/schemas/ApplicationProtocol'
                clientCertificateConfig:
                  $ref: '#/components/schemas/ClientCertificateConfig'
      responses:
        '200': {}
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '410':
          description: |-
            A limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '409':
          description: |-
            The resource already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
    delete:
      operationId: DeleteDomainConfiguration
      description: |-
        Deletes the specified domain configuration.

        Requires permission to access the [DeleteDomainConfiguration](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: domainConfigurationName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DomainConfigurationName'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
    get:
      operationId: DescribeDomainConfiguration
      description: |-
        Gets summary information about a domain configuration.

        Requires permission to access the [DescribeDomainConfiguration](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: domainConfigurationName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ReservedDomainConfigurationName'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
    put:
      operationId: UpdateDomainConfiguration
      description: |-
        Updates values stored in the domain configuration. Domain configurations for default endpoints can't be updated.

        Requires permission to access the [UpdateDomainConfiguration](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: domainConfigurationName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ReservedDomainConfigurationName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                authorizerConfig:
                  $ref: '#/components/schemas/AuthorizerConfig'
                domainConfigurationStatus:
                  $ref: '#/components/schemas/DomainConfigurationStatus'
                removeAuthorizerConfig:
                  $ref: '#/components/schemas/RemoveAuthorizerConfig'
                tlsConfig:
                  $ref: '#/components/schemas/TlsConfig'
                serverCertificateConfig:
                  $ref: '#/components/schemas/ServerCertificateConfig'
                authenticationType:
                  $ref: '#/components/schemas/AuthenticationType'
                applicationProtocol:
                  $ref: '#/components/schemas/ApplicationProtocol'
                clientCertificateConfig:
                  $ref: '#/components/schemas/ClientCertificateConfig'
      responses:
        '200': {}
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /dynamic-thing-groups/{thingGroupName}:
    post:
      operationId: CreateDynamicThingGroup
      description: |-
        Creates a dynamic thing group.

        Requires permission to access the [CreateDynamicThingGroup](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: thingGroupName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ThingGroupName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                thingGroupProperties:
                  $ref: '#/components/schemas/ThingGroupProperties'
                indexName:
                  $ref: '#/components/schemas/IndexName'
                queryString:
                  $ref: '#/components/schemas/QueryString'
                queryVersion:
                  $ref: '#/components/schemas/QueryVersion'
                tags:
                  $ref: '#/components/schemas/TagList'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '410':
          description: |-
            A limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '409':
          description: |-
            The resource already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
    delete:
      operationId: DeleteDynamicThingGroup
      description: |-
        Deletes a dynamic thing group.

        Requires permission to access the [DeleteDynamicThingGroup](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: thingGroupName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ThingGroupName'
      - name: expectedVersion
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/OptionalVersion'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '409':
          description: |-
            An exception thrown when the version of an entity specified with the `expectedVersion` parameter does not match the latest version in the system.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionConflictException'
    patch:
      operationId: UpdateDynamicThingGroup
      description: |-
        Updates a dynamic thing group.

        Requires permission to access the [UpdateDynamicThingGroup](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: thingGroupName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ThingGroupName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                thingGroupProperties:
                  $ref: '#/components/schemas/ThingGroupProperties'
                expectedVersion:
                  $ref: '#/components/schemas/OptionalVersion'
                indexName:
                  $ref: '#/components/schemas/IndexName'
                queryString:
                  $ref: '#/components/schemas/QueryString'
                queryVersion:
                  $ref: '#/components/schemas/QueryVersion'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '409':
          description: |-
            An exception thrown when the version of an entity specified with the `expectedVersion` parameter does not match the latest version in the system.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionConflictException'
  /fleet-metric/{metricName}:
    put:
      operationId: CreateFleetMetric
      description: |-
        Creates a fleet metric.

        Requires permission to access the [CreateFleetMetric](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: metricName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FleetMetricName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                queryString:
                  $ref: '#/components/schemas/QueryString'
                aggregationType:
                  $ref: '#/components/schemas/AggregationType'
                period:
                  $ref: '#/components/schemas/FleetMetricPeriod'
                aggregationField:
                  $ref: '#/components/schemas/AggregationField'
                description:
                  $ref: '#/components/schemas/FleetMetricDescription'
                queryVersion:
                  $ref: '#/components/schemas/QueryVersion'
                indexName:
                  $ref: '#/components/schemas/IndexName'
                unit:
                  $ref: '#/components/schemas/FleetMetricUnit'
                tags:
                  $ref: '#/components/schemas/TagList'
      responses:
        '200': {}
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '410':
          description: |-
            A limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '409':
          description: |-
            The resource already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
    delete:
      operationId: DeleteFleetMetric
      description: |-
        Deletes the specified fleet metric. Returns successfully with no error if the deletion is successful or you specify a fleet metric that doesn't exist.

        Requires permission to access the [DeleteFleetMetric](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: metricName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FleetMetricName'
      - name: expectedVersion
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/OptionalVersion'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '409':
          description: |-
            An exception thrown when the version of an entity specified with the `expectedVersion` parameter does not match the latest version in the system.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionConflictException'
    get:
      operationId: DescribeFleetMetric
      description: |-
        Gets information about the specified fleet metric.

        Requires permission to access the [DescribeFleetMetric](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: metricName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FleetMetricName'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
    patch:
      operationId: UpdateFleetMetric
      description: |-
        Updates the data for a fleet metric.

        Requires permission to access the [UpdateFleetMetric](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: metricName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FleetMetricName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                queryString:
                  $ref: '#/components/schemas/QueryString'
                aggregationType:
                  $ref: '#/components/schemas/AggregationType'
                period:
                  $ref: '#/components/schemas/FleetMetricPeriod'
                aggregationField:
                  $ref: '#/components/schemas/AggregationField'
                description:
                  $ref: '#/components/schemas/FleetMetricDescription'
                queryVersion:
                  $ref: '#/components/schemas/QueryVersion'
                indexName:
                  $ref: '#/components/schemas/IndexName'
                unit:
                  $ref: '#/components/schemas/FleetMetricUnit'
                expectedVersion:
                  $ref: '#/components/schemas/OptionalVersion'
      responses:
        '200': {}
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '409':
          description: |-
            An exception thrown when the version of an entity specified with the `expectedVersion` parameter does not match the latest version in the system.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionConflictException'
  /jobs/{jobId}:
    put:
      operationId: CreateJob
      description: |-
        Creates a job.

        Requires permission to access the [CreateJob](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: jobId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/JobId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                targets:
                  $ref: '#/components/schemas/JobTargets'
                documentSource:
                  $ref: '#/components/schemas/JobDocumentSource'
                document:
                  $ref: '#/components/schemas/JobDocument'
                description:
                  $ref: '#/components/schemas/JobDescription'
                presignedUrlConfig:
                  $ref: '#/components/schemas/PresignedUrlConfig'
                targetSelection:
                  $ref: '#/components/schemas/TargetSelection'
                jobExecutionsRolloutConfig:
                  $ref: '#/components/schemas/JobExecutionsRolloutConfig'
                abortConfig:
                  $ref: '#/components/schemas/AbortConfig'
                timeoutConfig:
                  $ref: '#/components/schemas/TimeoutConfig'
                tags:
                  $ref: '#/components/schemas/TagList'
                namespaceId:
                  $ref: '#/components/schemas/NamespaceId'
                jobTemplateArn:
                  $ref: '#/components/schemas/JobTemplateArn'
                jobExecutionsRetryConfig:
                  $ref: '#/components/schemas/JobExecutionsRetryConfig'
                documentParameters:
                  $ref: '#/components/schemas/ParameterMap'
                schedulingConfig:
                  $ref: '#/components/schemas/SchedulingConfig'
                destinationPackageVersions:
                  $ref: '#/components/schemas/DestinationPackageVersions'
      responses:
        '200': {}
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '410':
          description: |-
            A limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '409':
          description: |-
            The resource already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
    delete:
      operationId: DeleteJob
      description: |-
        Deletes a job and its related job executions.

        Deleting a job may take time, depending on the number of job executions created for the job and various other factors. While the job is being deleted, the status of the job will be shown as "DELETION_IN_PROGRESS". Attempting to delete or cancel a job whose status is already "DELETION_IN_PROGRESS" will result in an error.

        Only 10 jobs may have status "DELETION_IN_PROGRESS" at the same time, or a LimitExceededException will occur.

        Requires permission to access the [DeleteJob](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: jobId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/JobId'
      - name: force
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ForceFlag'
      - name: namespaceId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NamespaceId'
      responses:
        '200': {}
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '409':
          description: |-
            An attempt was made to change to an invalid state, for example by deleting a job or a job execution which is "IN_PROGRESS" without setting the `force` parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidStateTransitionException'
        '410':
          description: |-
            A limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
    get:
      operationId: DescribeJob
      description: |-
        Describes a job.

        Requires permission to access the [DescribeJob](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: jobId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/JobId'
      - name: beforeSubstitution
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/BeforeSubstitutionFlag'
      responses:
        '200': {}
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
    patch:
      operationId: UpdateJob
      description: |-
        Updates supported fields of the specified job.

        Requires permission to access the [UpdateJob](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: jobId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/JobId'
      - name: namespaceId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NamespaceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  $ref: '#/components/schemas/JobDescription'
                presignedUrlConfig:
                  $ref: '#/components/schemas/PresignedUrlConfig'
                jobExecutionsRolloutConfig:
                  $ref: '#/components/schemas/JobExecutionsRolloutConfig'
                abortConfig:
                  $ref: '#/components/schemas/AbortConfig'
                timeoutConfig:
                  $ref: '#/components/schemas/TimeoutConfig'
                jobExecutionsRetryConfig:
                  $ref: '#/components/schemas/JobExecutionsRetryConfig'
      responses:
        '200': {}
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /job-templates/{jobTemplateId}:
    put:
      operationId: CreateJobTemplate
      description: |-
        Creates a job template.

        Requires permission to access the [CreateJobTemplate](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: jobTemplateId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/JobTemplateId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                jobArn:
                  $ref: '#/components/schemas/JobArn'
                documentSource:
                  $ref: '#/components/schemas/JobDocumentSource'
                document:
                  $ref: '#/components/schemas/JobDocument'
                description:
                  $ref: '#/components/schemas/JobDescription'
                presignedUrlConfig:
                  $ref: '#/components/schemas/PresignedUrlConfig'
                jobExecutionsRolloutConfig:
                  $ref: '#/components/schemas/JobExecutionsRolloutConfig'
                abortConfig:
                  $ref: '#/components/schemas/AbortConfig'
                timeoutConfig:
                  $ref: '#/components/schemas/TimeoutConfig'
                tags:
                  $ref: '#/components/schemas/TagList'
                jobExecutionsRetryConfig:
                  $ref: '#/components/schemas/JobExecutionsRetryConfig'
                maintenanceWindows:
                  $ref: '#/components/schemas/MaintenanceWindows'
                destinationPackageVersions:
                  $ref: '#/components/schemas/DestinationPackageVersions'
      responses:
        '200': {}
        '409':
          description: |-
            The request conflicts with the current state of the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '410':
          description: |-
            A limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
    delete:
      operationId: DeleteJobTemplate
      description: |-
        Deletes the specified job template.
      parameters:
      - name: jobTemplateId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/JobTemplateId'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
    get:
      operationId: DescribeJobTemplate
      description: |-
        Returns information about a job template.
      parameters:
      - name: jobTemplateId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/JobTemplateId'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /keys-and-certificate:
    post:
      operationId: CreateKeysAndCertificate
      description: |-
        Creates a 2048-bit RSA key pair and issues an X.509 certificate using the issued public key. You can also call `CreateKeysAndCertificate` over MQTT from a device, for more information, see [Provisioning MQTT API](https://docs.aws.amazon.com/iot/latest/developerguide/provision-wo-cert.html#provision-mqtt-api).

        **Note** This is the only time IoT issues the private key for this certificate, so it is important to keep it in a secure location.

        Requires permission to access the [CreateKeysAndCertificate](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: setAsActive
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/SetAsActive'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /mitigationactions/actions/{actionName}:
    post:
      operationId: CreateMitigationAction
      description: |-
        Defines an action that can be applied to audit findings by using StartAuditMitigationActionsTask. Only certain types of mitigation actions can be applied to specific check names. For more information, see [Mitigation actions](https://docs.aws.amazon.com/iot/latest/developerguide/device-defender-mitigation-actions.html). Each mitigation action can apply only one type of change.

        Requires permission to access the [CreateMitigationAction](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: actionName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MitigationActionName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                roleArn:
                  $ref: '#/components/schemas/RoleArn'
                actionParams:
                  $ref: '#/components/schemas/MitigationActionParams'
                tags:
                  $ref: '#/components/schemas/TagList'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '410':
          description: |-
            A limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '409':
          description: |-
            The resource already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
    delete:
      operationId: DeleteMitigationAction
      description: |-
        Deletes a defined mitigation action from your Amazon Web Services accounts.

        Requires permission to access the [DeleteMitigationAction](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: actionName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MitigationActionName'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    get:
      operationId: DescribeMitigationAction
      description: |-
        Gets information about a mitigation action.

        Requires permission to access the [DescribeMitigationAction](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: actionName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MitigationActionName'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
    patch:
      operationId: UpdateMitigationAction
      description: |-
        Updates the definition for the specified mitigation action.

        Requires permission to access the [UpdateMitigationAction](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: actionName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MitigationActionName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                roleArn:
                  $ref: '#/components/schemas/RoleArn'
                actionParams:
                  $ref: '#/components/schemas/MitigationActionParams'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /otaUpdates/{otaUpdateId}:
    post:
      operationId: CreateOTAUpdate
      description: |-
        Creates an IoT OTA update on a target group of things or groups.

        Requires permission to access the [CreateOTAUpdate](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: otaUpdateId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/OTAUpdateId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  $ref: '#/components/schemas/OTAUpdateDescription'
                targets:
                  $ref: '#/components/schemas/Targets'
                protocols:
                  $ref: '#/components/schemas/Protocols'
                targetSelection:
                  $ref: '#/components/schemas/TargetSelection'
                awsJobExecutionsRolloutConfig:
                  $ref: '#/components/schemas/AwsJobExecutionsRolloutConfig'
                awsJobPresignedUrlConfig:
                  $ref: '#/components/schemas/AwsJobPresignedUrlConfig'
                awsJobAbortConfig:
                  $ref: '#/components/schemas/AwsJobAbortConfig'
                awsJobTimeoutConfig:
                  $ref: '#/components/schemas/AwsJobTimeoutConfig'
                files:
                  $ref: '#/components/schemas/OTAUpdateFiles'
                roleArn:
                  $ref: '#/components/schemas/RoleArn'
                additionalParameters:
                  $ref: '#/components/schemas/AdditionalParameterMap'
                tags:
                  $ref: '#/components/schemas/TagList'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '410':
          description: |-
            A limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '409':
          description: |-
            The resource already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
    delete:
      operationId: DeleteOTAUpdate
      description: |-
        Delete an OTA update.

        Requires permission to access the [DeleteOTAUpdate](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: otaUpdateId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/OTAUpdateId'
      - name: deleteStream
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/DeleteStream_'
      - name: forceDeleteAWSJob
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ForceDeleteAWSJob'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '409':
          description: |-
            An exception thrown when the version of an entity specified with the `expectedVersion` parameter does not match the latest version in the system.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionConflictException'
    get:
      operationId: GetOTAUpdate
      description: |-
        Gets an OTA update.

        Requires permission to access the [GetOTAUpdate](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: otaUpdateId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/OTAUpdateId'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /packages/{packageName}:
    put:
      operationId: CreatePackage
      description: |-
        Creates an IoT software package that can be deployed to your fleet.

        Requires permission to access the [CreatePackage](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) and [GetIndexingConfiguration](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) actions.
      parameters:
      - name: packageName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PackageName'
      - name: clientToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ClientToken'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  $ref: '#/components/schemas/ResourceDescription'
                tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '200': {}
        '409':
          description: |-
            The request conflicts with the current state of the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Internal error from the service that indicates an unexpected error or that the service is unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '402':
          description: |-
            Service quota has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    delete:
      operationId: DeletePackage
      description: |-
        Deletes a specific version from a software package.

        **Note:** All package versions must be deleted before deleting the software package.

        Requires permission to access the [DeletePackageVersion](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: packageName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PackageName'
      - name: clientToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '500':
          description: |-
            Internal error from the service that indicates an unexpected error or that the service is unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetPackage
      description: |-
        Gets information about the specified software package.

        Requires permission to access the [GetPackage](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: packageName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PackageName'
      responses:
        '200': {}
        '500':
          description: |-
            Internal error from the service that indicates an unexpected error or that the service is unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    patch:
      operationId: UpdatePackage
      description: |-
        Updates the supported fields for a specific software package.

        Requires permission to access the [UpdatePackage](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) and [GetIndexingConfiguration](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) actions.
      parameters:
      - name: packageName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PackageName'
      - name: clientToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ClientToken'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  $ref: '#/components/schemas/ResourceDescription'
                defaultVersionName:
                  $ref: '#/components/schemas/VersionName'
                unsetDefaultVersion:
                  $ref: '#/components/schemas/UnsetDefaultVersion'
      responses:
        '200': {}
        '409':
          description: |-
            The request conflicts with the current state of the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Internal error from the service that indicates an unexpected error or that the service is unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /packages/{packageName}/versions/{versionName}:
    put:
      operationId: CreatePackageVersion
      description: |-
        Creates a new version for an existing IoT software package.

        Requires permission to access the [CreatePackageVersion](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) and [GetIndexingConfiguration](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) actions.
      parameters:
      - name: packageName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PackageName'
      - name: versionName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/VersionName'
      - name: clientToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ClientToken'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  $ref: '#/components/schemas/ResourceDescription'
                attributes:
                  $ref: '#/components/schemas/ResourceAttributes'
                artifact:
                  $ref: '#/components/schemas/PackageVersionArtifact'
                recipe:
                  $ref: '#/components/schemas/PackageVersionRecipe'
                tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '200': {}
        '409':
          description: |-
            The request conflicts with the current state of the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Internal error from the service that indicates an unexpected error or that the service is unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '402':
          description: |-
            Service quota has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    delete:
      operationId: DeletePackageVersion
      description: |-
        Deletes a specific version from a software package.

        **Note:** If a package version is designated as default, you must remove the designation from the software package using the UpdatePackage action.
      parameters:
      - name: packageName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PackageName'
      - name: versionName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/VersionName'
      - name: clientToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '500':
          description: |-
            Internal error from the service that indicates an unexpected error or that the service is unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetPackageVersion
      description: |-
        Gets information about the specified package version.

        Requires permission to access the [GetPackageVersion](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: packageName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PackageName'
      - name: versionName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/VersionName'
      responses:
        '200': {}
        '500':
          description: |-
            Internal error from the service that indicates an unexpected error or that the service is unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    patch:
      operationId: UpdatePackageVersion
      description: |-
        Updates the supported fields for a specific package version.

        Requires permission to access the [UpdatePackageVersion](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) and [GetIndexingConfiguration](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) actions.
      parameters:
      - name: packageName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PackageName'
      - name: versionName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/VersionName'
      - name: clientToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ClientToken'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  $ref: '#/components/schemas/ResourceDescription'
                attributes:
                  $ref: '#/components/schemas/ResourceAttributes'
                artifact:
                  $ref: '#/components/schemas/PackageVersionArtifact'
                action:
                  $ref: '#/components/schemas/PackageVersionAction'
                recipe:
                  $ref: '#/components/schemas/PackageVersionRecipe'
      responses:
        '200': {}
        '409':
          description: |-
            The request conflicts with the current state of the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Internal error from the service that indicates an unexpected error or that the service is unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /policies/{policyName}:
    post:
      operationId: CreatePolicy
      description: |-
        Creates an IoT policy.

        The created policy is the default version for the policy. This operation creates a policy version with a version identifier of **1** and sets **1** as the policy's default version.

        Requires permission to access the [CreatePolicy](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: policyName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PolicyName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                policyDocument:
                  $ref: '#/components/schemas/PolicyDocument'
                tags:
                  $ref: '#/components/schemas/TagList'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '409':
          description: |-
            The resource already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
    delete:
      operationId: DeletePolicy
      description: |-
        Deletes the specified policy.

        A policy cannot be deleted if it has non-default versions or it is attached to any certificate.

        To delete a policy, use the DeletePolicyVersion action to delete all non-default versions of the policy; use the DetachPolicy action to detach the policy from any certificate; and then use the DeletePolicy action to delete the policy.

        When a policy is deleted using DeletePolicy, its default version is deleted with it.

        Because of the distributed nature of Amazon Web Services, it can take up to five minutes after a policy is detached before it's ready to be deleted.

        Requires permission to access the [DeletePolicy](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: policyName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PolicyName'
      responses:
        '200': {}
        '409':
          description: |-
            You can't delete the resource because it is attached to one or more resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteConflictException'
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
    get:
      operationId: GetPolicy
      description: |-
        Gets information about the specified policy with the policy document of the default version.

        Requires permission to access the [GetPolicy](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: policyName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PolicyName'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /policies/{policyName}/version:
    post:
      operationId: CreatePolicyVersion
      description: |-
        Creates a new version of the specified IoT policy. To update a policy, create a new policy version. A managed policy can have up to five versions. If the policy has five versions, you must use DeletePolicyVersion to delete an existing version before you create a new one.

        Optionally, you can set the new version as the policy's default version. The default version is the operative version (that is, the version that is in effect for the certificates to which the policy is attached).

        Requires permission to access the [CreatePolicyVersion](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: policyName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PolicyName'
      - name: setAsDefault
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/SetAsDefault'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                policyDocument:
                  $ref: '#/components/schemas/PolicyDocument'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '409':
          description: |-
            The number of policy versions exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionsLimitExceededException'
    get:
      operationId: ListPolicyVersions
      description: |-
        Lists the versions of the specified policy and identifies the default version.

        Requires permission to access the [ListPolicyVersions](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: policyName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PolicyName'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /provisioning-templates/{templateName}/provisioning-claim:
    post:
      operationId: CreateProvisioningClaim
      description: |-
        Creates a provisioning claim.

        Requires permission to access the [CreateProvisioningClaim](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: templateName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TemplateName'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /provisioning-templates:
    post:
      operationId: CreateProvisioningTemplate
      description: |-
        Creates a provisioning template.

        Requires permission to access the [CreateProvisioningTemplate](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                templateName:
                  $ref: '#/components/schemas/TemplateName'
                description:
                  $ref: '#/components/schemas/TemplateDescription'
                templateBody:
                  $ref: '#/components/schemas/TemplateBody'
                enabled:
                  $ref: '#/components/schemas/Enabled2'
                provisioningRoleArn:
                  $ref: '#/components/schemas/RoleArn'
                preProvisioningHook:
                  $ref: '#/components/schemas/ProvisioningHook'
                tags:
                  $ref: '#/components/schemas/TagList'
                type:
                  $ref: '#/components/schemas/TemplateType'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '410':
          description: |-
            A limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '409':
          description: |-
            The resource already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
    get:
      operationId: ListProvisioningTemplates
      description: |-
        Lists the provisioning templates in your Amazon Web Services account.

        Requires permission to access the [ListProvisioningTemplates](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /provisioning-templates/{templateName}/versions:
    post:
      operationId: CreateProvisioningTemplateVersion
      description: |-
        Creates a new version of a provisioning template.

        Requires permission to access the [CreateProvisioningTemplateVersion](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: templateName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TemplateName'
      - name: setAsDefault
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/SetAsDefault'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                templateBody:
                  $ref: '#/components/schemas/TemplateBody'
      responses:
        '200': {}
        '409':
          description: |-
            The number of policy versions exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionsLimitExceededException'
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
    get:
      operationId: ListProvisioningTemplateVersions
      description: |-
        A list of provisioning template versions.

        Requires permission to access the [ListProvisioningTemplateVersions](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: templateName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TemplateName'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /role-aliases/{roleAlias}:
    post:
      operationId: CreateRoleAlias
      description: |-
        Creates a role alias.

        Requires permission to access the [CreateRoleAlias](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.

        The value of [ `credentialDurationSeconds` ](https://docs.aws.amazon.com/iot/latest/apireference/API_CreateRoleAlias.html#iot-CreateRoleAlias-request-credentialDurationSeconds) must be less than or equal to the maximum session duration of the IAM role that the role alias references. For more information, see [ Modifying a role maximum session duration (Amazon Web Services API)](https://docs.aws.amazon.com/IAM/latest/UserGuide/roles-managingrole-editing-api.html#roles-modify_max-session-duration-api) from the Amazon Web Services Identity and Access Management User Guide.
      parameters:
      - name: roleAlias
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/RoleAlias'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                roleArn:
                  $ref: '#/components/schemas/RoleArn'
                credentialDurationSeconds:
                  $ref: '#/components/schemas/CredentialDurationSeconds'
                tags:
                  $ref: '#/components/schemas/TagList'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '410':
          description: |-
            A limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '409':
          description: |-
            The resource already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
    delete:
      operationId: DeleteRoleAlias
      description: |-
        Deletes a role alias

        Requires permission to access the [DeleteRoleAlias](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: roleAlias
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/RoleAlias'
      responses:
        '200': {}
        '409':
          description: |-
            You can't delete the resource because it is attached to one or more resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteConflictException'
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
    get:
      operationId: DescribeRoleAlias
      description: |-
        Describes a role alias.

        Requires permission to access the [DescribeRoleAlias](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: roleAlias
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/RoleAlias'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
    put:
      operationId: UpdateRoleAlias
      description: |-
        Updates a role alias.

        Requires permission to access the [UpdateRoleAlias](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.

        The value of [ `credentialDurationSeconds` ](https://docs.aws.amazon.com/iot/latest/apireference/API_UpdateRoleAlias.html#iot-UpdateRoleAlias-request-credentialDurationSeconds) must be less than or equal to the maximum session duration of the IAM role that the role alias references. For more information, see [ Modifying a role maximum session duration (Amazon Web Services API)](https://docs.aws.amazon.com/IAM/latest/UserGuide/roles-managingrole-editing-api.html#roles-modify_max-session-duration-api) from the Amazon Web Services Identity and Access Management User Guide.
      parameters:
      - name: roleAlias
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/RoleAlias'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                roleArn:
                  $ref: '#/components/schemas/RoleArn'
                credentialDurationSeconds:
                  $ref: '#/components/schemas/CredentialDurationSeconds'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /audit/scheduledaudits/{scheduledAuditName}:
    post:
      operationId: CreateScheduledAudit
      description: |-
        Creates a scheduled audit that is run at a specified time interval.

        Requires permission to access the [CreateScheduledAudit](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: scheduledAuditName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ScheduledAuditName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                frequency:
                  $ref: '#/components/schemas/AuditFrequency'
                dayOfMonth:
                  $ref: '#/components/schemas/DayOfMonth'
                dayOfWeek:
                  $ref: '#/components/schemas/DayOfWeek'
                targetCheckNames:
                  $ref: '#/components/schemas/TargetAuditCheckNames'
                tags:
                  $ref: '#/components/schemas/TagList'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '410':
          description: |-
            A limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '409':
          description: |-
            The resource already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
    delete:
      operationId: DeleteScheduledAudit
      description: |-
        Deletes a scheduled audit.

        Requires permission to access the [DeleteScheduledAudit](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: scheduledAuditName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ScheduledAuditName'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
    get:
      operationId: DescribeScheduledAudit
      description: |-
        Gets information about a scheduled audit.

        Requires permission to access the [DescribeScheduledAudit](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: scheduledAuditName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ScheduledAuditName'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
    patch:
      operationId: UpdateScheduledAudit
      description: |-
        Updates a scheduled audit, including which checks are performed and how often the audit takes place.

        Requires permission to access the [UpdateScheduledAudit](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: scheduledAuditName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ScheduledAuditName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                frequency:
                  $ref: '#/components/schemas/AuditFrequency'
                dayOfMonth:
                  $ref: '#/components/schemas/DayOfMonth'
                dayOfWeek:
                  $ref: '#/components/schemas/DayOfWeek'
                targetCheckNames:
                  $ref: '#/components/schemas/TargetAuditCheckNames'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /security-profiles/{securityProfileName}:
    post:
      operationId: CreateSecurityProfile
      description: |-
        Creates a Device Defender security profile.

        Requires permission to access the [CreateSecurityProfile](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: securityProfileName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/SecurityProfileName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                securityProfileDescription:
                  $ref: '#/components/schemas/SecurityProfileDescription'
                behaviors:
                  $ref: '#/components/schemas/Behaviors'
                alertTargets:
                  $ref: '#/components/schemas/AlertTargets'
                additionalMetricsToRetain:
                  $ref: '#/components/schemas/AdditionalMetricsToRetainList'
                additionalMetricsToRetainV2:
                  $ref: '#/components/schemas/AdditionalMetricsToRetainV2List'
                tags:
                  $ref: '#/components/schemas/TagList'
                metricsExportConfig:
                  $ref: '#/components/schemas/MetricsExportConfig'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '409':
          description: |-
            The resource already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
    delete:
      operationId: DeleteSecurityProfile
      description: |-
        Deletes a Device Defender security profile.

        Requires permission to access the [DeleteSecurityProfile](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: securityProfileName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/SecurityProfileName'
      - name: expectedVersion
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/OptionalVersion'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '409':
          description: |-
            An exception thrown when the version of an entity specified with the `expectedVersion` parameter does not match the latest version in the system.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionConflictException'
    get:
      operationId: DescribeSecurityProfile
      description: |-
        Gets information about a Device Defender security profile.

        Requires permission to access the [DescribeSecurityProfile](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: securityProfileName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/SecurityProfileName'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
    patch:
      operationId: UpdateSecurityProfile
      description: |-
        Updates a Device Defender security profile.

        Requires permission to access the [UpdateSecurityProfile](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: securityProfileName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/SecurityProfileName'
      - name: expectedVersion
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/OptionalVersion'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                securityProfileDescription:
                  $ref: '#/components/schemas/SecurityProfileDescription'
                behaviors:
                  $ref: '#/components/schemas/Behaviors'
                alertTargets:
                  $ref: '#/components/schemas/AlertTargets'
                additionalMetricsToRetain:
                  $ref: '#/components/schemas/AdditionalMetricsToRetainList'
                additionalMetricsToRetainV2:
                  $ref: '#/components/schemas/AdditionalMetricsToRetainV2List'
                deleteBehaviors:
                  $ref: '#/components/schemas/DeleteBehaviors'
                deleteAlertTargets:
                  $ref: '#/components/schemas/DeleteAlertTargets'
                deleteAdditionalMetricsToRetain:
                  $ref: '#/components/schemas/DeleteAdditionalMetricsToRetain'
                metricsExportConfig:
                  $ref: '#/components/schemas/MetricsExportConfig'
                deleteMetricsExportConfig:
                  $ref: '#/components/schemas/DeleteMetricsExportConfig'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '409':
          description: |-
            An exception thrown when the version of an entity specified with the `expectedVersion` parameter does not match the latest version in the system.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionConflictException'
  /streams/{streamId}:
    post:
      operationId: CreateStream
      description: |-
        Creates a stream for delivering one or more large files in chunks over MQTT. A stream transports data bytes in chunks or blocks packaged as MQTT messages from a source like S3. You can have one or more files associated with a stream.

        Requires permission to access the [CreateStream](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: streamId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/StreamId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  $ref: '#/components/schemas/StreamDescription'
                files:
                  $ref: '#/components/schemas/StreamFiles'
                roleArn:
                  $ref: '#/components/schemas/RoleArn'
                tags:
                  $ref: '#/components/schemas/TagList'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '410':
          description: |-
            A limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '409':
          description: |-
            The resource already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
    delete:
      operationId: DeleteStream
      description: |-
        Deletes a stream.

        Requires permission to access the [DeleteStream](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: streamId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/StreamId'
      responses:
        '200': {}
        '409':
          description: |-
            You can't delete the resource because it is attached to one or more resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteConflictException'
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
    get:
      operationId: DescribeStream
      description: |-
        Gets information about a stream.

        Requires permission to access the [DescribeStream](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: streamId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/StreamId'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
    put:
      operationId: UpdateStream
      description: |-
        Updates an existing stream. The stream version will be incremented by one.

        Requires permission to access the [UpdateStream](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: streamId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/StreamId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  $ref: '#/components/schemas/StreamDescription'
                files:
                  $ref: '#/components/schemas/StreamFiles'
                roleArn:
                  $ref: '#/components/schemas/RoleArn'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '410':
          description: |-
            A limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /things/{thingName}:
    post:
      operationId: CreateThing
      description: |-
        Creates a thing record in the registry. If this call is made multiple times using the same thing name and configuration, the call will succeed. If this call is made with the same thing name but different configuration a `ResourceAlreadyExistsException` is thrown.

        This is a control plane operation. See [Authorization](https://docs.aws.amazon.com/iot/latest/developerguide/iot-authorization.html) for information about authorizing control plane actions.

        Requires permission to access the [CreateThing](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: thingName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ThingName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                thingTypeName:
                  $ref: '#/components/schemas/ThingTypeName'
                attributePayload:
                  $ref: '#/components/schemas/AttributePayload'
                billingGroupName:
                  $ref: '#/components/schemas/BillingGroupName'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '409':
          description: |-
            The resource already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
    delete:
      operationId: DeleteThing
      description: |-
        Deletes the specified thing. Returns successfully with no error if the deletion is successful or you specify a thing that doesn't exist.

        Requires permission to access the [DeleteThing](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: thingName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ThingName'
      - name: expectedVersion
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/OptionalVersion'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '409':
          description: |-
            An exception thrown when the version of an entity specified with the `expectedVersion` parameter does not match the latest version in the system.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionConflictException'
    get:
      operationId: DescribeThing
      description: |-
        Gets information about the specified thing.

        Requires permission to access the [DescribeThing](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: thingName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ThingName'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
    patch:
      operationId: UpdateThing
      description: |-
        Updates the data for a thing.

        Requires permission to access the [UpdateThing](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: thingName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ThingName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                thingTypeName:
                  $ref: '#/components/schemas/ThingTypeName'
                attributePayload:
                  $ref: '#/components/schemas/AttributePayload'
                expectedVersion:
                  $ref: '#/components/schemas/OptionalVersion'
                removeThingType:
                  $ref: '#/components/schemas/RemoveThingType'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '409':
          description: |-
            An exception thrown when the version of an entity specified with the `expectedVersion` parameter does not match the latest version in the system.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionConflictException'
  /thing-groups/{thingGroupName}:
    post:
      operationId: CreateThingGroup
      description: |-
        Create a thing group.

        This is a control plane operation. See [Authorization](https://docs.aws.amazon.com/iot/latest/developerguide/iot-authorization.html) for information about authorizing control plane actions.

        If the `ThingGroup` that you create has the exact same attributes as an existing `ThingGroup`, you will get a 200 success response.

        Requires permission to access the [CreateThingGroup](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: thingGroupName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ThingGroupName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                parentGroupName:
                  $ref: '#/components/schemas/ThingGroupName'
                thingGroupProperties:
                  $ref: '#/components/schemas/ThingGroupProperties'
                tags:
                  $ref: '#/components/schemas/TagList'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '409':
          description: |-
            The resource already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
    delete:
      operationId: DeleteThingGroup
      description: |-
        Deletes a thing group.

        Requires permission to access the [DeleteThingGroup](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: thingGroupName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ThingGroupName'
      - name: expectedVersion
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/OptionalVersion'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '409':
          description: |-
            An exception thrown when the version of an entity specified with the `expectedVersion` parameter does not match the latest version in the system.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionConflictException'
    get:
      operationId: DescribeThingGroup
      description: |-
        Describe a thing group.

        Requires permission to access the [DescribeThingGroup](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: thingGroupName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ThingGroupName'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
    patch:
      operationId: UpdateThingGroup
      description: |-
        Update a thing group.

        Requires permission to access the [UpdateThingGroup](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: thingGroupName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ThingGroupName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                thingGroupProperties:
                  $ref: '#/components/schemas/ThingGroupProperties'
                expectedVersion:
                  $ref: '#/components/schemas/OptionalVersion'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '409':
          description: |-
            An exception thrown when the version of an entity specified with the `expectedVersion` parameter does not match the latest version in the system.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionConflictException'
  /thing-types/{thingTypeName}:
    post:
      operationId: CreateThingType
      description: |-
        Creates a new thing type. If this call is made multiple times using the same thing type name and configuration, the call will succeed. If this call is made with the same thing type name but different configuration a `ResourceAlreadyExistsException` is thrown.

        Requires permission to access the [CreateThingType](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: thingTypeName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ThingTypeName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                thingTypeProperties:
                  $ref: '#/components/schemas/ThingTypeProperties'
                tags:
                  $ref: '#/components/schemas/TagList'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '409':
          description: |-
            The resource already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
    delete:
      operationId: DeleteThingType
      description: |-
        Deletes the specified thing type. You cannot delete a thing type if it has things associated with it. To delete a thing type, first mark it as deprecated by calling DeprecateThingType, then remove any associated things by calling UpdateThing to change the thing type on any associated thing, and finally use DeleteThingType to delete the thing type.

        Requires permission to access the [DeleteThingType](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: thingTypeName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ThingTypeName'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
    get:
      operationId: DescribeThingType
      description: |-
        Gets information about the specified thing type.

        Requires permission to access the [DescribeThingType](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: thingTypeName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ThingTypeName'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
    patch:
      operationId: UpdateThingType
      description: |-
        Updates a thing type.
      parameters:
      - name: thingTypeName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ThingTypeName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                thingTypeProperties:
                  $ref: '#/components/schemas/ThingTypeProperties'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /rules/{ruleName}:
    post:
      operationId: CreateTopicRule
      description: |-
        Creates a rule. Creating rules is an administrator-level action. Any user who has permission to create rules will be able to access data processed by the rule.

        Requires permission to access the [CreateTopicRule](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: ruleName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/RuleName'
      - name: x-amz-tagging
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/String'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                topicRulePayload:
                  $ref: '#/components/schemas/TopicRulePayload'
      responses:
        '200': {}
        '409':
          description: |-
            The resource already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '400':
          description: |-
            The Rule-SQL expression can't be parsed correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlParseException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
    delete:
      operationId: DeleteTopicRule
      description: |-
        Deletes the rule.

        Requires permission to access the [DeleteTopicRule](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: ruleName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/RuleName'
      responses:
        '200': {}
        '409':
          description: |-
            A conflicting resource update exception. This exception is thrown when two pending updates cause a conflict.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictingResourceUpdateException'
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
    get:
      operationId: GetTopicRule
      description: |-
        Gets information about the rule.

        Requires permission to access the [GetTopicRule](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: ruleName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/RuleName'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
    patch:
      operationId: ReplaceTopicRule
      description: |-
        Replaces the rule. You must specify all parameters for the new rule. Creating rules is an administrator-level action. Any user who has permission to create rules will be able to access data processed by the rule.

        Requires permission to access the [ReplaceTopicRule](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: ruleName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/RuleName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                topicRulePayload:
                  $ref: '#/components/schemas/TopicRulePayload'
      responses:
        '200': {}
        '409':
          description: |-
            A conflicting resource update exception. This exception is thrown when two pending updates cause a conflict.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictingResourceUpdateException'
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '400':
          description: |-
            The Rule-SQL expression can't be parsed correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlParseException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /destinations:
    post:
      operationId: CreateTopicRuleDestination
      description: |-
        Creates a topic rule destination. The destination must be confirmed prior to use.

        Requires permission to access the [CreateTopicRuleDestination](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                destinationConfiguration:
                  $ref: '#/components/schemas/TopicRuleDestinationConfiguration'
      responses:
        '200': {}
        '409':
          description: |-
            The resource already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
    get:
      operationId: ListTopicRuleDestinations
      description: |-
        Lists all the topic rule destinations in your Amazon Web Services account.

        Requires permission to access the [ListTopicRuleDestinations](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/TopicRuleDestinationMaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
    patch:
      operationId: UpdateTopicRuleDestination
      description: |-
        Updates a topic rule destination. You use this to change the status, endpoint URL, or confirmation URL of the destination.

        Requires permission to access the [UpdateTopicRuleDestination](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                arn:
                  $ref: '#/components/schemas/AwsArn'
                status:
                  $ref: '#/components/schemas/TopicRuleDestinationStatus'
      responses:
        '200': {}
        '409':
          description: |-
            A conflicting resource update exception. This exception is thrown when two pending updates cause a conflict.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictingResourceUpdateException'
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /audit/configuration:
    delete:
      operationId: DeleteAccountAuditConfiguration
      description: |-
        Restores the default settings for Device Defender audits for this account. Any configuration data you entered is deleted and all audit checks are reset to disabled.

        Requires permission to access the [DeleteAccountAuditConfiguration](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: deleteScheduledAudits
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/DeleteScheduledAudits'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
    get:
      operationId: DescribeAccountAuditConfiguration
      description: |-
        Gets information about the Device Defender audit settings for this account. Settings include how audit notifications are sent and which audit checks are enabled or disabled.

        Requires permission to access the [DescribeAccountAuditConfiguration](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters: []
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    patch:
      operationId: UpdateAccountAuditConfiguration
      description: |-
        Configures or reconfigures the Device Defender audit settings for this account. Settings include how audit notifications are sent and which audit checks are enabled or disabled.

        Requires permission to access the [UpdateAccountAuditConfiguration](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                roleArn:
                  $ref: '#/components/schemas/RoleArn'
                auditNotificationTargetConfigurations:
                  $ref: '#/components/schemas/AuditNotificationTargetConfigurations'
                auditCheckConfigurations:
                  $ref: '#/components/schemas/AuditCheckConfigurations'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /audit/suppressions/delete:
    post:
      operationId: DeleteAuditSuppression
      description: |-
        Deletes a Device Defender audit suppression.

        Requires permission to access the [DeleteAuditSuppression](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                checkName:
                  $ref: '#/components/schemas/AuditCheckName'
                resourceIdentifier:
                  $ref: '#/components/schemas/ResourceIdentifier'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /cacertificate/{certificateId}:
    delete:
      operationId: DeleteCACertificate
      description: |-
        Deletes a registered CA certificate.

        Requires permission to access the [DeleteCACertificate](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: certificateId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CertificateId'
      responses:
        '200': {}
        '406':
          description: |-
            The certificate operation is not allowed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateStateException'
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
    get:
      operationId: DescribeCACertificate
      description: |-
        Describes a registered CA certificate.

        Requires permission to access the [DescribeCACertificate](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: certificateId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CertificateId'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
    put:
      operationId: UpdateCACertificate
      description: |-
        Updates a registered CA certificate.

        Requires permission to access the [UpdateCACertificate](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: certificateId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CertificateId'
      - name: newStatus
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/CACertificateStatus'
      - name: newAutoRegistrationStatus
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/AutoRegistrationStatus'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                registrationConfig:
                  $ref: '#/components/schemas/RegistrationConfig'
                removeAutoRegistration:
                  $ref: '#/components/schemas/RemoveAutoRegistration'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /certificates/{certificateId}:
    delete:
      operationId: DeleteCertificate
      description: |-
        Deletes the specified certificate.

        A certificate cannot be deleted if it has a policy or IoT thing attached to it or if its status is set to ACTIVE. To delete a certificate, first use the DetachPolicy action to detach all policies. Next, use the UpdateCertificate action to set the certificate to the INACTIVE status.

        Requires permission to access the [DeleteCertificate](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: certificateId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CertificateId'
      - name: forceDelete
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ForceDelete'
      responses:
        '200': {}
        '406':
          description: |-
            The certificate operation is not allowed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateStateException'
        '409':
          description: |-
            You can't delete the resource because it is attached to one or more resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteConflictException'
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
    get:
      operationId: DescribeCertificate
      description: |-
        Gets information about the specified certificate.

        Requires permission to access the [DescribeCertificate](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: certificateId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CertificateId'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
    put:
      operationId: UpdateCertificate
      description: |-
        Updates the status of the specified certificate. This operation is idempotent.

        Requires permission to access the [UpdateCertificate](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.

        Certificates must be in the ACTIVE state to authenticate devices that use a certificate to connect to IoT.

        Within a few minutes of updating a certificate from the ACTIVE state to any other state, IoT disconnects all devices that used that certificate to connect. Devices cannot use a certificate that is not in the ACTIVE state to reconnect.
      parameters:
      - name: certificateId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CertificateId'
      - name: newStatus
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/CertificateStatus'
      responses:
        '200': {}
        '406':
          description: |-
            The certificate operation is not allowed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateStateException'
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /command-executions/{executionId}:
    delete:
      operationId: DeleteCommandExecution
      description: |-
        Delete a command execution.

        Only command executions that enter a terminal state can be deleted from your account.
      parameters:
      - name: executionId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CommandExecutionId'
      - name: targetArn
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/TargetArn'
      responses:
        '200': {}
        '409':
          description: |-
            The request conflicts with the current state of the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Internal error from the service that indicates an unexpected error or that the service is unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetCommandExecution
      description: |-
        Gets information about the specific command execution on a single device.
      parameters:
      - name: executionId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CommandExecutionId'
      - name: targetArn
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/TargetArn'
      - name: includeResult
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/BooleanWrapperObject'
      responses:
        '200': {}
        '500':
          description: |-
            Internal error from the service that indicates an unexpected error or that the service is unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /things/{thingName}/jobs/{jobId}/executionNumber/{executionNumber}:
    delete:
      operationId: DeleteJobExecution
      description: |-
        Deletes a job execution.

        Requires permission to access the [DeleteJobExecution](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: jobId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/JobId'
      - name: thingName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ThingName'
      - name: executionNumber
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ExecutionNumber'
      - name: force
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ForceFlag'
      - name: namespaceId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NamespaceId'
      responses:
        '200': {}
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '409':
          description: |-
            An attempt was made to change to an invalid state, for example by deleting a job or a job execution which is "IN_PROGRESS" without setting the `force` parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidStateTransitionException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /policies/{policyName}/version/{policyVersionId}:
    delete:
      operationId: DeletePolicyVersion
      description: |-
        Deletes the specified version of the specified policy. You cannot delete the default version of a policy using this action. To delete the default version of a policy, use DeletePolicy. To find out which version of a policy is marked as the default version, use ListPolicyVersions.

        Requires permission to access the [DeletePolicyVersion](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: policyName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PolicyName'
      - name: policyVersionId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PolicyVersionId'
      responses:
        '200': {}
        '409':
          description: |-
            You can't delete the resource because it is attached to one or more resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteConflictException'
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
    get:
      operationId: GetPolicyVersion
      description: |-
        Gets information about the specified policy version.

        Requires permission to access the [GetPolicyVersion](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: policyName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PolicyName'
      - name: policyVersionId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PolicyVersionId'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
    patch:
      operationId: SetDefaultPolicyVersion
      description: |-
        Sets the specified version of the specified policy as the policy's default (operative) version. This action affects all certificates to which the policy is attached. To list the principals the policy is attached to, use the ListPrincipalPolicies action.

        Requires permission to access the [SetDefaultPolicyVersion](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: policyName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PolicyName'
      - name: policyVersionId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PolicyVersionId'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /provisioning-templates/{templateName}:
    delete:
      operationId: DeleteProvisioningTemplate
      description: |-
        Deletes a provisioning template.

        Requires permission to access the [DeleteProvisioningTemplate](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: templateName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TemplateName'
      responses:
        '200': {}
        '409':
          description: |-
            You can't delete the resource because it is attached to one or more resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteConflictException'
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
    get:
      operationId: DescribeProvisioningTemplate
      description: |-
        Returns information about a provisioning template.

        Requires permission to access the [DescribeProvisioningTemplate](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: templateName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TemplateName'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
    patch:
      operationId: UpdateProvisioningTemplate
      description: |-
        Updates a provisioning template.

        Requires permission to access the [UpdateProvisioningTemplate](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: templateName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TemplateName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  $ref: '#/components/schemas/TemplateDescription'
                enabled:
                  $ref: '#/components/schemas/Enabled2'
                defaultVersionId:
                  $ref: '#/components/schemas/TemplateVersionId'
                provisioningRoleArn:
                  $ref: '#/components/schemas/RoleArn'
                preProvisioningHook:
                  $ref: '#/components/schemas/ProvisioningHook'
                removePreProvisioningHook:
                  $ref: '#/components/schemas/RemoveHook'
      responses:
        '200': {}
        '409':
          description: |-
            A conflicting resource update exception. This exception is thrown when two pending updates cause a conflict.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictingResourceUpdateException'
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /provisioning-templates/{templateName}/versions/{versionId}:
    delete:
      operationId: DeleteProvisioningTemplateVersion
      description: |-
        Deletes a provisioning template version.

        Requires permission to access the [DeleteProvisioningTemplateVersion](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: templateName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TemplateName'
      - name: versionId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TemplateVersionId'
      responses:
        '200': {}
        '409':
          description: |-
            You can't delete the resource because it is attached to one or more resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteConflictException'
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
    get:
      operationId: DescribeProvisioningTemplateVersion
      description: |-
        Returns information about a provisioning template version.

        Requires permission to access the [DescribeProvisioningTemplateVersion](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: templateName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TemplateName'
      - name: versionId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TemplateVersionId'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /registrationcode:
    delete:
      operationId: DeleteRegistrationCode
      description: |-
        Deletes a CA certificate registration code.

        Requires permission to access the [DeleteRegistrationCode](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters: []
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
    get:
      operationId: GetRegistrationCode
      description: |-
        Gets a registration code used to register a CA certificate with IoT.

        IoT will create a registration code as part of this API call if the registration code doesn't exist or has been deleted. If you already have a registration code, this API call will return the same registration code.

        Requires permission to access the [GetRegistrationCode](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters: []
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /destinations/{arn+}:
    delete:
      operationId: DeleteTopicRuleDestination
      description: |-
        Deletes a topic rule destination.

        Requires permission to access the [DeleteTopicRuleDestination](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: arn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AwsArn'
      responses:
        '200': {}
        '409':
          description: |-
            A conflicting resource update exception. This exception is thrown when two pending updates cause a conflict.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictingResourceUpdateException'
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
    get:
      operationId: GetTopicRuleDestination
      description: |-
        Gets information about a topic rule destination.

        Requires permission to access the [GetTopicRuleDestination](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: arn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AwsArn'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /v2LoggingLevel:
    delete:
      operationId: DeleteV2LoggingLevel
      description: |-
        Deletes a logging level.

        Requires permission to access the [DeleteV2LoggingLevel](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: targetType
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/LogTargetType'
      - name: targetName
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/LogTargetName'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
    get:
      operationId: ListV2LoggingLevels
      description: |-
        Lists logging levels.

        Requires permission to access the [ListV2LoggingLevels](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: targetType
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/LogTargetType'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/SkyfallMaxResults'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The resource is not configured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotConfiguredException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
    post:
      operationId: SetV2LoggingLevel
      description: |-
        Sets the logging level.

        Requires permission to access the [SetV2LoggingLevel](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                logTarget:
                  $ref: '#/components/schemas/LogTarget'
                logLevel:
                  $ref: '#/components/schemas/LogLevel'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '410':
          description: |-
            A limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '404':
          description: |-
            The resource is not configured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotConfiguredException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /thing-types/{thingTypeName}/deprecate:
    post:
      operationId: DeprecateThingType
      description: |-
        Deprecates a thing type. You can not associate new things with deprecated thing type.

        Requires permission to access the [DeprecateThingType](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: thingTypeName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ThingTypeName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                undoDeprecate:
                  $ref: '#/components/schemas/UndoDeprecate'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /audit/findings/{findingId}:
    get:
      operationId: DescribeAuditFinding
      description: |-
        Gets information about a single audit finding. Properties include the reason for noncompliance, the severity of the issue, and the start time when the audit that returned the finding.

        Requires permission to access the [DescribeAuditFinding](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: findingId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FindingId'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /audit/mitigationactions/tasks/{taskId}:
    get:
      operationId: DescribeAuditMitigationActionsTask
      description: |-
        Gets information about an audit mitigation task that is used to apply mitigation actions to a set of audit findings. Properties include the actions being applied, the audit checks to which they're being applied, the task status, and aggregated task statistics.
      parameters:
      - name: taskId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MitigationActionsTaskId'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
    post:
      operationId: StartAuditMitigationActionsTask
      description: |-
        Starts a task that applies a set of mitigation actions to the specified target.

        Requires permission to access the [StartAuditMitigationActionsTask](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: taskId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MitigationActionsTaskId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                target:
                  $ref: '#/components/schemas/AuditMitigationActionsTaskTarget'
                auditCheckToActionsMapping:
                  $ref: '#/components/schemas/AuditCheckToActionsMapping'
                clientRequestToken:
                  $ref: '#/components/schemas/ClientRequestToken'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '410':
          description: |-
            A limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
  /audit/suppressions/describe:
    post:
      operationId: DescribeAuditSuppression
      description: |-
        Gets information about a Device Defender audit suppression.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                checkName:
                  $ref: '#/components/schemas/AuditCheckName'
                resourceIdentifier:
                  $ref: '#/components/schemas/ResourceIdentifier'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /audit/tasks/{taskId}:
    get:
      operationId: DescribeAuditTask
      description: |-
        Gets information about a Device Defender audit.

        Requires permission to access the [DescribeAuditTask](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: taskId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AuditTaskId'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /detect/mitigationactions/tasks/{taskId}:
    get:
      operationId: DescribeDetectMitigationActionsTask
      description: |-
        Gets information about a Device Defender ML Detect mitigation action.

        Requires permission to access the [DescribeDetectMitigationActionsTask](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: taskId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MitigationActionsTaskId'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
    put:
      operationId: StartDetectMitigationActionsTask
      description: |-
        Starts a Device Defender ML Detect mitigation actions task.

        Requires permission to access the [StartDetectMitigationActionsTask](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: taskId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MitigationActionsTaskId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                target:
                  $ref: '#/components/schemas/DetectMitigationActionsTaskTarget'
                actions:
                  $ref: '#/components/schemas/DetectMitigationActionsToExecuteList'
                violationEventOccurrenceRange:
                  $ref: '#/components/schemas/ViolationEventOccurrenceRange'
                includeOnlyActiveViolations:
                  $ref: '#/components/schemas/NullableBoolean'
                includeSuppressedAlerts:
                  $ref: '#/components/schemas/NullableBoolean'
                clientRequestToken:
                  $ref: '#/components/schemas/ClientRequestToken'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '410':
          description: |-
            A limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
  /endpoint:
    get:
      operationId: DescribeEndpoint
      description: |-
        Returns or creates a unique endpoint specific to the Amazon Web Services account making the call.

        The first time `DescribeEndpoint` is called, an endpoint is created. All subsequent calls to `DescribeEndpoint` return the same endpoint.

        Requires permission to access the [DescribeEndpoint](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: endpointType
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/EndpointType'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /event-configurations:
    get:
      operationId: DescribeEventConfigurations
      description: |-
        Describes event configurations.

        Requires permission to access the [DescribeEventConfigurations](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters: []
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    patch:
      operationId: UpdateEventConfigurations
      description: |-
        Updates the event configurations.

        Requires permission to access the [UpdateEventConfigurations](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                eventConfigurations:
                  $ref: '#/components/schemas/EventConfigurations'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /indices/{indexName}:
    get:
      operationId: DescribeIndex
      description: |-
        Describes a search index.

        Requires permission to access the [DescribeIndex](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: indexName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/IndexName'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /things/{thingName}/jobs/{jobId}:
    get:
      operationId: DescribeJobExecution
      description: |-
        Describes a job execution.

        Requires permission to access the [DescribeJobExecution](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: jobId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/JobId'
      - name: thingName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ThingName'
      - name: executionNumber
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ExecutionNumber'
      responses:
        '200': {}
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /managed-job-templates/{templateName}:
    get:
      operationId: DescribeManagedJobTemplate
      description: |-
        View details of a managed job template.
      parameters:
      - name: templateName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ManagedJobTemplateName'
      - name: templateVersion
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ManagedTemplateVersion'
      responses:
        '200': {}
        '500':
          description: |-
            Internal error from the service that indicates an unexpected error or that the service is unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /thing-registration-tasks/{taskId}:
    get:
      operationId: DescribeThingRegistrationTask
      description: |-
        Describes a bulk thing provisioning task.

        Requires permission to access the [DescribeThingRegistrationTask](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: taskId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TaskId'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /rules/{ruleName}/disable:
    post:
      operationId: DisableTopicRule
      description: |-
        Disables the rule.

        Requires permission to access the [DisableTopicRule](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: ruleName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/RuleName'
      responses:
        '200': {}
        '409':
          description: |-
            A conflicting resource update exception. This exception is thrown when two pending updates cause a conflict.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictingResourceUpdateException'
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /rules/{ruleName}/enable:
    post:
      operationId: EnableTopicRule
      description: |-
        Enables the rule.

        Requires permission to access the [EnableTopicRule](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: ruleName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/RuleName'
      responses:
        '200': {}
        '409':
          description: |-
            A conflicting resource update exception. This exception is thrown when two pending updates cause a conflict.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictingResourceUpdateException'
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /behavior-model-training/summaries:
    get:
      operationId: GetBehaviorModelTrainingSummaries
      description: |-
        Returns a Device Defender's ML Detect Security Profile training model's status.

        Requires permission to access the [GetBehaviorModelTrainingSummaries](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: securityProfileName
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/SecurityProfileName'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/TinyMaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /indices/buckets:
    post:
      operationId: GetBucketsAggregation
      description: |-
        Aggregates on indexed data with search queries pertaining to particular fields.

        Requires permission to access the [GetBucketsAggregation](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                indexName:
                  $ref: '#/components/schemas/IndexName'
                queryString:
                  $ref: '#/components/schemas/QueryString'
                aggregationField:
                  $ref: '#/components/schemas/AggregationField'
                queryVersion:
                  $ref: '#/components/schemas/QueryVersion'
                bucketsAggregationType:
                  $ref: '#/components/schemas/BucketsAggregationType'
      responses:
        '200': {}
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /indices/cardinality:
    post:
      operationId: GetCardinality
      description: |-
        Returns the approximate count of unique values that match the query.

        Requires permission to access the [GetCardinality](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                indexName:
                  $ref: '#/components/schemas/IndexName'
                queryString:
                  $ref: '#/components/schemas/QueryString'
                aggregationField:
                  $ref: '#/components/schemas/AggregationField'
                queryVersion:
                  $ref: '#/components/schemas/QueryVersion'
      responses:
        '200': {}
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /effective-policies:
    post:
      operationId: GetEffectivePolicies
      description: |-
        Gets a list of the policies that have an effect on the authorization behavior of the specified device when it connects to the IoT device gateway.

        Requires permission to access the [GetEffectivePolicies](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: thingName
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ThingName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                principal:
                  $ref: '#/components/schemas/Principal'
                cognitoIdentityPoolId:
                  $ref: '#/components/schemas/CognitoIdentityPoolId'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '410':
          description: |-
            A limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /indexing/config:
    get:
      operationId: GetIndexingConfiguration
      description: |-
        Gets the indexing configuration.

        Requires permission to access the [GetIndexingConfiguration](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters: []
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
    post:
      operationId: UpdateIndexingConfiguration
      description: |-
        Updates the search configuration.

        Requires permission to access the [UpdateIndexingConfiguration](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                thingIndexingConfiguration:
                  $ref: '#/components/schemas/ThingIndexingConfiguration'
                thingGroupIndexingConfiguration:
                  $ref: '#/components/schemas/ThingGroupIndexingConfiguration'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /jobs/{jobId}/job-document:
    get:
      operationId: GetJobDocument
      description: |-
        Gets a job document.

        Requires permission to access the [GetJobDocument](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: jobId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/JobId'
      - name: beforeSubstitution
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/BeforeSubstitutionFlag'
      responses:
        '200': {}
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /loggingOptions:
    get:
      operationId: GetLoggingOptions
      description: |-
        Gets the logging options.

        NOTE: use of this command is not recommended. Use `GetV2LoggingOptions` instead.

        Requires permission to access the [GetLoggingOptions](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters: []
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
    post:
      operationId: SetLoggingOptions
      description: |-
        Sets the logging options.

        NOTE: use of this command is not recommended. Use `SetV2LoggingOptions` instead.

        Requires permission to access the [SetLoggingOptions](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                loggingOptionsPayload:
                  $ref: '#/components/schemas/LoggingOptionsPayload'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /package-configuration:
    get:
      operationId: GetPackageConfiguration
      description: |-
        Gets information about the specified software package's configuration.

        Requires permission to access the [GetPackageConfiguration](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters: []
      responses:
        '200': {}
        '500':
          description: |-
            Internal error from the service that indicates an unexpected error or that the service is unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    patch:
      operationId: UpdatePackageConfiguration
      description: |-
        Updates the software package configuration.

        Requires permission to access the [UpdatePackageConfiguration](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) and [iam:PassRole](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use_passrole.html) actions.
      parameters:
      - name: clientToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ClientToken'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                versionUpdateByJobsConfig:
                  $ref: '#/components/schemas/VersionUpdateByJobsConfig'
      responses:
        '200': {}
        '409':
          description: |-
            The request conflicts with the current state of the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Internal error from the service that indicates an unexpected error or that the service is unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /indices/percentiles:
    post:
      operationId: GetPercentiles
      description: |-
        Groups the aggregated values that match the query into percentile groupings. The default percentile groupings are: 1,5,25,50,75,95,99, although you can specify your own when you call `GetPercentiles`. This function returns a value for each percentile group specified (or the default percentile groupings). The percentile group "1" contains the aggregated field value that occurs in approximately one percent of the values that match the query. The percentile group "5" contains the aggregated field value that occurs in approximately five percent of the values that match the query, and so on. The result is an approximation, the more values that match the query, the more accurate the percentile values.

        Requires permission to access the [GetPercentiles](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                indexName:
                  $ref: '#/components/schemas/IndexName'
                queryString:
                  $ref: '#/components/schemas/QueryString'
                aggregationField:
                  $ref: '#/components/schemas/AggregationField'
                queryVersion:
                  $ref: '#/components/schemas/QueryVersion'
                percents:
                  $ref: '#/components/schemas/PercentList'
      responses:
        '200': {}
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /indices/statistics:
    post:
      operationId: GetStatistics
      description: |-
        Returns the count, average, sum, minimum, maximum, sum of squares, variance, and standard deviation for the specified aggregated field. If the aggregation field is of type `String`, only the count statistic is returned.

        Requires permission to access the [GetStatistics](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                indexName:
                  $ref: '#/components/schemas/IndexName'
                queryString:
                  $ref: '#/components/schemas/QueryString'
                aggregationField:
                  $ref: '#/components/schemas/AggregationField'
                queryVersion:
                  $ref: '#/components/schemas/QueryVersion'
      responses:
        '200': {}
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /things/{thingName}/connectivity-data:
    post:
      operationId: GetThingConnectivityData
      description: |-
        Retrieves the live connectivity status per device.
      parameters:
      - name: thingName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ConnectivityApiThingName'
      responses:
        '200': {}
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /v2LoggingOptions:
    get:
      operationId: GetV2LoggingOptions
      description: |-
        Gets the fine grained logging options.

        Requires permission to access the [GetV2LoggingOptions](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters: []
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '404':
          description: |-
            The resource is not configured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotConfiguredException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
    post:
      operationId: SetV2LoggingOptions
      description: |-
        Sets the logging options for the V2 logging service.

        Requires permission to access the [SetV2LoggingOptions](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                roleArn:
                  $ref: '#/components/schemas/AwsArn'
                defaultLogLevel:
                  $ref: '#/components/schemas/LogLevel'
                disableAllLogs:
                  $ref: '#/components/schemas/DisableAllLogs'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /active-violations:
    get:
      operationId: ListActiveViolations
      description: |-
        Lists the active violations for a given Device Defender security profile.

        Requires permission to access the [ListActiveViolations](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: thingName
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/DeviceDefenderThingName'
      - name: securityProfileName
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/SecurityProfileName'
      - name: behaviorCriteriaType
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/BehaviorCriteriaType'
      - name: listSuppressedAlerts
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ListSuppressedAlerts'
      - name: verificationState
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/VerificationState'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /attached-policies/{target}:
    post:
      operationId: ListAttachedPolicies
      description: |-
        Lists the policies attached to the specified thing group.

        Requires permission to access the [ListAttachedPolicies](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: target
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PolicyTarget'
      - name: recursive
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Recursive'
      - name: marker
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Marker'
      - name: pageSize
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PageSize'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '410':
          description: |-
            A limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /audit/findings:
    post:
      operationId: ListAuditFindings
      description: |-
        Lists the findings (results) of a Device Defender audit or of the audits performed during a specified time period. (Findings are retained for 90 days.)

        Requires permission to access the [ListAuditFindings](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                taskId:
                  $ref: '#/components/schemas/AuditTaskId'
                checkName:
                  $ref: '#/components/schemas/AuditCheckName'
                resourceIdentifier:
                  $ref: '#/components/schemas/ResourceIdentifier'
                maxResults:
                  $ref: '#/components/schemas/MaxResults'
                nextToken:
                  $ref: '#/components/schemas/NextToken'
                startTime:
                  $ref: '#/components/schemas/Timestamp'
                endTime:
                  $ref: '#/components/schemas/Timestamp'
                listSuppressedFindings:
                  $ref: '#/components/schemas/ListSuppressedFindings'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /audit/mitigationactions/executions:
    get:
      operationId: ListAuditMitigationActionsExecutions
      description: |-
        Gets the status of audit mitigation action tasks that were executed.

        Requires permission to access the [ListAuditMitigationActionsExecutions](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: taskId
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/MitigationActionsTaskId'
      - name: actionStatus
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/AuditMitigationActionsExecutionStatus'
      - name: findingId
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/FindingId'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /audit/mitigationactions/tasks:
    get:
      operationId: ListAuditMitigationActionsTasks
      description: |-
        Gets a list of audit mitigation action tasks that match the specified filters.

        Requires permission to access the [ListAuditMitigationActionsTasks](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: auditTaskId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/AuditTaskId'
      - name: findingId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/FindingId'
      - name: taskStatus
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/AuditMitigationActionsTaskStatus'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: startTime
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Timestamp'
      - name: endTime
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Timestamp'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /audit/suppressions/list:
    post:
      operationId: ListAuditSuppressions
      description: |-
        Lists your Device Defender audit listings.

        Requires permission to access the [ListAuditSuppressions](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                checkName:
                  $ref: '#/components/schemas/AuditCheckName'
                resourceIdentifier:
                  $ref: '#/components/schemas/ResourceIdentifier'
                ascendingOrder:
                  $ref: '#/components/schemas/AscendingOrder'
                nextToken:
                  $ref: '#/components/schemas/NextToken'
                maxResults:
                  $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /audit/tasks:
    get:
      operationId: ListAuditTasks
      description: |-
        Lists the Device Defender audits that have been performed during a given time period.

        Requires permission to access the [ListAuditTasks](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: startTime
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Timestamp'
      - name: endTime
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Timestamp'
      - name: taskType
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/AuditTaskType'
      - name: taskStatus
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/AuditTaskStatus'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    post:
      operationId: StartOnDemandAuditTask
      description: |-
        Starts an on-demand Device Defender audit.

        Requires permission to access the [StartOnDemandAuditTask](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                targetCheckNames:
                  $ref: '#/components/schemas/TargetAuditCheckNames'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '410':
          description: |-
            A limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
  /authorizers:
    get:
      operationId: ListAuthorizers
      description: |-
        Lists the authorizers registered in your account.

        Requires permission to access the [ListAuthorizers](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: pageSize
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PageSize'
      - name: marker
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Marker'
      - name: isAscendingOrder
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/AscendingOrder'
      - name: status
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/AuthorizerStatus'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /billing-groups:
    get:
      operationId: ListBillingGroups
      description: |-
        Lists the billing groups you have created.

        Requires permission to access the [ListBillingGroups](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/RegistryMaxResults'
      - name: namePrefixFilter
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/BillingGroupName'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /cacertificates:
    get:
      operationId: ListCACertificates
      description: |-
        Lists the CA certificates registered for your Amazon Web Services account.

        The results are paginated with a default page size of 25. You can use the returned marker to retrieve additional results.

        Requires permission to access the [ListCACertificates](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: pageSize
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PageSize'
      - name: marker
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Marker'
      - name: isAscendingOrder
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/AscendingOrder'
      - name: templateName
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/TemplateName'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /certificate-providers:
    get:
      operationId: ListCertificateProviders
      description: |-
        Lists all your certificate providers in your Amazon Web Services account.

        Requires permission to access the [ListCertificateProviders](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Marker'
      - name: isAscendingOrder
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/AscendingOrder'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /certificates-by-ca/{caCertificateId}:
    get:
      operationId: ListCertificatesByCA
      description: |-
        List the device certificates signed by the specified CA certificate.

        Requires permission to access the [ListCertificatesByCA](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: caCertificateId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CertificateId'
      - name: pageSize
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PageSize'
      - name: marker
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Marker'
      - name: isAscendingOrder
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/AscendingOrder'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /command-executions:
    post:
      operationId: ListCommandExecutions
      description: |-
        List all command executions.

          * You must provide only the `startedTimeFilter` or the `completedTimeFilter` information. If you provide both time filters, the API will generate an error. You can use this information to retrieve a list of command executions within a specific timeframe.

          * You must provide only the `commandArn` or the `thingArn` information depending on whether you want to list executions for a specific command or an IoT thing. If you provide both fields, the API will generate an error.

        For more information about considerations for using this API, see [List command executions in your account (CLI)](https://docs.aws.amazon.com/iot/latest/developerguide/iot-remote-command-execution-start-monitor.html#iot-remote-command-execution-list-cli).
      parameters:
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/CommandMaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                namespace:
                  $ref: '#/components/schemas/CommandNamespace'
                status:
                  $ref: '#/components/schemas/CommandExecutionStatus'
                sortOrder:
                  $ref: '#/components/schemas/SortOrder'
                startedTimeFilter:
                  $ref: '#/components/schemas/TimeFilter'
                completedTimeFilter:
                  $ref: '#/components/schemas/TimeFilter'
                targetArn:
                  $ref: '#/components/schemas/TargetArn'
                commandArn:
                  $ref: '#/components/schemas/CommandArn'
      responses:
        '200': {}
        '500':
          description: |-
            Internal error from the service that indicates an unexpected error or that the service is unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /commands:
    get:
      operationId: ListCommands
      description: |-
        List all commands in your account.
      parameters:
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/CommandMaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: namespace
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/CommandNamespace'
      - name: commandParameterName
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/CommandParameterName'
      - name: sortOrder
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/SortOrder'
      responses:
        '200': {}
        '500':
          description: |-
            Internal error from the service that indicates an unexpected error or that the service is unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /custom-metrics:
    get:
      operationId: ListCustomMetrics
      description: |-
        Lists your Device Defender detect custom metrics.

        Requires permission to access the [ListCustomMetrics](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /detect/mitigationactions/executions:
    get:
      operationId: ListDetectMitigationActionsExecutions
      description: |-
        Lists mitigation actions executions for a Device Defender ML Detect Security Profile.

        Requires permission to access the [ListDetectMitigationActionsExecutions](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: taskId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MitigationActionsTaskId'
      - name: violationId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ViolationId'
      - name: thingName
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/DeviceDefenderThingName'
      - name: startTime
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Timestamp'
      - name: endTime
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Timestamp'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /detect/mitigationactions/tasks:
    get:
      operationId: ListDetectMitigationActionsTasks
      description: |-
        List of Device Defender ML Detect mitigation actions tasks.

        Requires permission to access the [ListDetectMitigationActionsTasks](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: startTime
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Timestamp'
      - name: endTime
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Timestamp'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /dimensions:
    get:
      operationId: ListDimensions
      description: |-
        List the set of dimensions that are defined for your Amazon Web Services accounts.

        Requires permission to access the [ListDimensions](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /domainConfigurations:
    get:
      operationId: ListDomainConfigurations
      description: |-
        Gets a list of domain configurations for the user. This list is sorted alphabetically by domain configuration name.

        Requires permission to access the [ListDomainConfigurations](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: marker
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Marker'
      - name: pageSize
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PageSize'
      - name: serviceType
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ServiceType'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /fleet-metrics:
    get:
      operationId: ListFleetMetrics
      description: |-
        Lists all your fleet metrics.

        Requires permission to access the [ListFleetMetrics](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /indices:
    get:
      operationId: ListIndices
      description: |-
        Lists the search indices.

        Requires permission to access the [ListIndices](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/QueryMaxResults'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /jobs/{jobId}/things:
    get:
      operationId: ListJobExecutionsForJob
      description: |-
        Lists the job executions for a job.

        Requires permission to access the [ListJobExecutionsForJob](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: jobId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/JobId'
      - name: status
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/JobExecutionStatus'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/LaserMaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /things/{thingName}/jobs:
    get:
      operationId: ListJobExecutionsForThing
      description: |-
        Lists the job executions for the specified thing.

        Requires permission to access the [ListJobExecutionsForThing](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: thingName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ThingName'
      - name: status
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/JobExecutionStatus'
      - name: namespaceId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NamespaceId'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/LaserMaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: jobId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/JobId'
      responses:
        '200': {}
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /job-templates:
    get:
      operationId: ListJobTemplates
      description: |-
        Returns a list of job templates.

        Requires permission to access the [ListJobTemplates](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/LaserMaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /jobs:
    get:
      operationId: ListJobs
      description: |-
        Lists jobs.

        Requires permission to access the [ListJobs](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: status
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/JobStatus'
      - name: targetSelection
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/TargetSelection'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/LaserMaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: thingGroupName
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ThingGroupName'
      - name: thingGroupId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ThingGroupId'
      - name: namespaceId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NamespaceId'
      responses:
        '200': {}
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /managed-job-templates:
    get:
      operationId: ListManagedJobTemplates
      description: |-
        Returns a list of managed job templates.
      parameters:
      - name: templateName
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ManagedJobTemplateName'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/LaserMaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '500':
          description: |-
            Internal error from the service that indicates an unexpected error or that the service is unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /metric-values:
    get:
      operationId: ListMetricValues
      description: |-
        Lists the values reported for an IoT Device Defender metric (device-side metric, cloud-side metric, or custom metric) by the given thing during the specified time period.
      parameters:
      - name: thingName
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/DeviceDefenderThingName'
      - name: metricName
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/BehaviorMetric'
      - name: dimensionName
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/DimensionName'
      - name: dimensionValueOperator
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/DimensionValueOperator'
      - name: startTime
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Timestamp'
      - name: endTime
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Timestamp'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /mitigationactions/actions:
    get:
      operationId: ListMitigationActions
      description: |-
        Gets a list of all mitigation actions that match the specified filter criteria.

        Requires permission to access the [ListMitigationActions](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: actionType
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MitigationActionType'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /otaUpdates:
    get:
      operationId: ListOTAUpdates
      description: |-
        Lists OTA updates.

        Requires permission to access the [ListOTAUpdates](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: otaUpdateStatus
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/OTAUpdateStatus'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /certificates-out-going:
    get:
      operationId: ListOutgoingCertificates
      description: |-
        Lists certificates that are being transferred but not yet accepted.

        Requires permission to access the [ListOutgoingCertificates](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: pageSize
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PageSize'
      - name: marker
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Marker'
      - name: isAscendingOrder
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/AscendingOrder'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /packages/{packageName}/versions:
    get:
      operationId: ListPackageVersions
      description: |-
        Lists the software package versions associated to the account.

        Requires permission to access the [ListPackageVersions](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: packageName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PackageName'
      - name: status
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PackageVersionStatus'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PackageCatalogMaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '500':
          description: |-
            Internal error from the service that indicates an unexpected error or that the service is unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /packages:
    get:
      operationId: ListPackages
      description: |-
        Lists the software packages associated to the account.

        Requires permission to access the [ListPackages](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PackageCatalogMaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '500':
          description: |-
            Internal error from the service that indicates an unexpected error or that the service is unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /policies:
    get:
      operationId: ListPolicies
      description: |-
        Lists your policies.

        Requires permission to access the [ListPolicies](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: marker
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Marker'
      - name: pageSize
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PageSize'
      - name: isAscendingOrder
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/AscendingOrder'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /policy-principals:
    get:
      operationId: ListPolicyPrincipals
      description: |-
        Lists the principals associated with the specified policy.

        **Note:** This action is deprecated and works as expected for backward compatibility, but we won't add enhancements. Use ListTargetsForPolicy instead.

        Requires permission to access the [ListPolicyPrincipals](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: x-amzn-iot-policy
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/PolicyName'
      - name: marker
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Marker'
      - name: pageSize
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PageSize'
      - name: isAscendingOrder
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/AscendingOrder'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /principal-policies:
    get:
      operationId: ListPrincipalPolicies
      description: |-
        Lists the policies attached to the specified principal. If you use an Cognito identity, the ID must be in [AmazonCognito Identity format](https://docs.aws.amazon.com/cognitoidentity/latest/APIReference/API_GetCredentialsForIdentity.html#API_GetCredentialsForIdentity_RequestSyntax).

        **Note:** This action is deprecated and works as expected for backward compatibility, but we won't add enhancements. Use ListAttachedPolicies instead.

        Requires permission to access the [ListPrincipalPolicies](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: x-amzn-iot-principal
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Principal'
      - name: marker
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Marker'
      - name: pageSize
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PageSize'
      - name: isAscendingOrder
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/AscendingOrder'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /principals/things:
    get:
      operationId: ListPrincipalThings
      description: |-
        Lists the things associated with the specified principal. A principal can be X.509 certificates, IAM users, groups, and roles, Amazon Cognito identities or federated identities.

        Requires permission to access the [ListPrincipalThings](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/RegistryMaxResults'
      - name: x-amzn-principal
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Principal'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /principals/things-v2:
    get:
      operationId: ListPrincipalThingsV2
      description: |-
        Lists the things associated with the specified principal. A principal can be an X.509 certificate or an Amazon Cognito ID.

        Requires permission to access the [ListPrincipalThings](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/RegistryMaxResults'
      - name: x-amzn-principal
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/Principal'
      - name: thingPrincipalType
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ThingPrincipalType'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /audit/relatedResources:
    get:
      operationId: ListRelatedResourcesForAuditFinding
      description: |-
        The related resources of an Audit finding. The following resources can be returned from calling this API:

          * DEVICE_CERTIFICATE

          * CA_CERTIFICATE

          * IOT_POLICY

          * COGNITO_IDENTITY_POOL

          * CLIENT_ID

          * ACCOUNT_SETTINGS

          * ROLE_ALIAS

          * IAM_ROLE

          * ISSUER_CERTIFICATE

        This API is similar to DescribeAuditFinding's [RelatedResources](https://docs.aws.amazon.com/iot/latest/apireference/API_DescribeAuditFinding.html) but provides pagination and is not limited to 10 resources. When calling [DescribeAuditFinding](https://docs.aws.amazon.com/iot/latest/apireference/API_DescribeAuditFinding.html) for the intermediate CA revoked for active device certificates check, RelatedResources will not be populated. You must use this API, ListRelatedResourcesForAuditFinding, to list the certificates.
      parameters:
      - name: findingId
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/FindingId'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /role-aliases:
    get:
      operationId: ListRoleAliases
      description: |-
        Lists the role aliases registered in your account.

        Requires permission to access the [ListRoleAliases](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: pageSize
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PageSize'
      - name: marker
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Marker'
      - name: isAscendingOrder
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/AscendingOrder'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /packages/{packageName}/versions/{versionName}/sbom-validation-results:
    get:
      operationId: ListSbomValidationResults
      description: |-
        The validation results for all software bill of materials (SBOM) attached to a specific software package version.

        Requires permission to access the [ListSbomValidationResults](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: packageName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PackageName'
      - name: versionName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/VersionName'
      - name: validationResult
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/SbomValidationResult'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PackageCatalogMaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '500':
          description: |-
            Internal error from the service that indicates an unexpected error or that the service is unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /audit/scheduledaudits:
    get:
      operationId: ListScheduledAudits
      description: |-
        Lists all of your scheduled audits.

        Requires permission to access the [ListScheduledAudits](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /security-profiles:
    get:
      operationId: ListSecurityProfiles
      description: |-
        Lists the Device Defender security profiles you've created. You can filter security profiles by dimension or custom metric.

        Requires permission to access the [ListSecurityProfiles](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.

        `dimensionName` and `metricName` cannot be used in the same request.
      parameters:
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: dimensionName
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/DimensionName'
      - name: metricName
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MetricName'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /security-profiles-for-target:
    get:
      operationId: ListSecurityProfilesForTarget
      description: |-
        Lists the Device Defender security profiles attached to a target (thing group).

        Requires permission to access the [ListSecurityProfilesForTarget](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: recursive
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Recursive'
      - name: securityProfileTargetArn
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/SecurityProfileTargetArn'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /streams:
    get:
      operationId: ListStreams
      description: |-
        Lists all of the streams in your Amazon Web Services account.

        Requires permission to access the [ListStreams](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: isAscendingOrder
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/AscendingOrder'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /tags:
    get:
      operationId: ListTagsForResource
      description: |-
        Lists the tags (metadata) you have assigned to the resource.

        Requires permission to access the [ListTagsForResource](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: resourceArn
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/ResourceArn'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
    post:
      operationId: TagResource
      description: |-
        Adds to or modifies the tags of the given resource. Tags are metadata which can be used to manage a resource.

        Requires permission to access the [TagResource](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resourceArn:
                  $ref: '#/components/schemas/ResourceArn'
                tags:
                  $ref: '#/components/schemas/TagList'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '410':
          description: |-
            A limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /policy-targets/{policyName}:
    post:
      operationId: ListTargetsForPolicy
      description: |-
        List targets for the specified policy.

        Requires permission to access the [ListTargetsForPolicy](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: policyName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PolicyName'
      - name: marker
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Marker'
      - name: pageSize
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PageSize'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '410':
          description: |-
            A limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /thing-groups:
    get:
      operationId: ListThingGroups
      description: |-
        List the thing groups in your account.

        Requires permission to access the [ListThingGroups](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/RegistryMaxResults'
      - name: parentGroup
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ThingGroupName'
      - name: namePrefixFilter
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ThingGroupName'
      - name: recursive
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/RecursiveWithoutDefault'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /things/{thingName}/thing-groups:
    get:
      operationId: ListThingGroupsForThing
      description: |-
        List the thing groups to which the specified thing belongs.

        Requires permission to access the [ListThingGroupsForThing](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: thingName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ThingName'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/RegistryMaxResults'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /things/{thingName}/principals-v2:
    get:
      operationId: ListThingPrincipalsV2
      description: |-
        Lists the principals associated with the specified thing. A principal can be an X.509 certificate or an Amazon Cognito ID.

        Requires permission to access the [ListThingPrincipals](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/RegistryMaxResults'
      - name: thingName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ThingName'
      - name: thingPrincipalType
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ThingPrincipalType'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /thing-registration-tasks/{taskId}/reports:
    get:
      operationId: ListThingRegistrationTaskReports
      description: |-
        Information about the thing registration tasks.
      parameters:
      - name: taskId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TaskId'
      - name: reportType
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/ReportType'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/RegistryMaxResults'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /thing-registration-tasks:
    get:
      operationId: ListThingRegistrationTasks
      description: |-
        List bulk thing provisioning tasks.

        Requires permission to access the [ListThingRegistrationTasks](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/RegistryMaxResults'
      - name: status
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Status'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
    post:
      operationId: StartThingRegistrationTask
      description: |-
        Creates a bulk thing provisioning task.

        Requires permission to access the [StartThingRegistrationTask](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                templateBody:
                  $ref: '#/components/schemas/TemplateBody'
                inputFileBucket:
                  $ref: '#/components/schemas/RegistryS3BucketName'
                inputFileKey:
                  $ref: '#/components/schemas/RegistryS3KeyName'
                roleArn:
                  $ref: '#/components/schemas/RoleArn'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /thing-types:
    get:
      operationId: ListThingTypes
      description: |-
        Lists the existing thing types.

        Requires permission to access the [ListThingTypes](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/RegistryMaxResults'
      - name: thingTypeName
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ThingTypeName'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /things:
    get:
      operationId: ListThings
      description: |-
        Lists your things. Use the **attributeName** and **attributeValue** parameters to filter your things. For example, calling `ListThings` with attributeName=Color and attributeValue=Red retrieves all things in the registry that contain an attribute **Color** with the value **Red**. For more information, see [List Things](https://docs.aws.amazon.com/iot/latest/developerguide/thing-registry.html#list-things) from the _Amazon Web Services IoT Core Developer Guide_.

        Requires permission to access the [ListThings](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.

        You will not be charged for calling this API if an `Access denied` error is returned. You will also not be charged if no attributes or pagination token was provided in request and no pagination token and no results were returned.
      parameters:
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/RegistryMaxResults'
      - name: attributeName
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/AttributeName'
      - name: attributeValue
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/AttributeValue'
      - name: thingTypeName
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ThingTypeName'
      - name: usePrefixAttributeValue
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/usePrefixAttributeValue'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
    post:
      operationId: RegisterThing
      description: |-
        Provisions a thing in the device registry. RegisterThing calls other IoT control plane APIs. These calls might exceed your account level [ IoT Throttling Limits](https://docs.aws.amazon.com/general/latest/gr/aws_service_limits.html#limits_iot) and cause throttle errors. Please contact [Amazon Web Services Customer Support](https://console.aws.amazon.com/support/home) to raise your throttling limits if necessary.

        Requires permission to access the [RegisterThing](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                templateBody:
                  $ref: '#/components/schemas/TemplateBody'
                parameters:
                  $ref: '#/components/schemas/Parameters'
      responses:
        '200': {}
        '409':
          description: |-
            A conflicting resource update exception. This exception is thrown when two pending updates cause a conflict.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictingResourceUpdateException'
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /billing-groups/{billingGroupName}/things:
    get:
      operationId: ListThingsInBillingGroup
      description: |-
        Lists the things you have added to the given billing group.

        Requires permission to access the [ListThingsInBillingGroup](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: billingGroupName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BillingGroupName'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/RegistryMaxResults'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /thing-groups/{thingGroupName}/things:
    get:
      operationId: ListThingsInThingGroup
      description: |-
        Lists the things in the specified group.

        Requires permission to access the [ListThingsInThingGroup](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: thingGroupName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ThingGroupName'
      - name: recursive
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Recursive'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/RegistryMaxResults'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /rules:
    get:
      operationId: ListTopicRules
      description: |-
        Lists the rules for the specific topic.

        Requires permission to access the [ListTopicRules](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: topic
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Topic'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/TopicRuleMaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: ruleDisabled
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/IsDisabled'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /violation-events:
    get:
      operationId: ListViolationEvents
      description: |-
        Lists the Device Defender security profile violations discovered during the given time period. You can use filters to limit the results to those alerts issued for a particular security profile, behavior, or thing (device).

        Requires permission to access the [ListViolationEvents](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: startTime
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Timestamp'
      - name: endTime
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Timestamp'
      - name: thingName
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/DeviceDefenderThingName'
      - name: securityProfileName
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/SecurityProfileName'
      - name: behaviorCriteriaType
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/BehaviorCriteriaType'
      - name: listSuppressedAlerts
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ListSuppressedAlerts'
      - name: verificationState
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/VerificationState'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /violations/verification-state/{violationId}:
    post:
      operationId: PutVerificationStateOnViolation
      description: |-
        Set a verification state and provide a description of that verification state on a violation (detect alarm).
      parameters:
      - name: violationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ViolationId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                verificationState:
                  $ref: '#/components/schemas/VerificationState'
                verificationStateDescription:
                  $ref: '#/components/schemas/VerificationStateDescription'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /cacertificate:
    post:
      operationId: RegisterCACertificate
      description: |-
        Registers a CA certificate with Amazon Web Services IoT Core. There is no limit to the number of CA certificates you can register in your Amazon Web Services account. You can register up to 10 CA certificates with the same `CA subject field` per Amazon Web Services account.

        Requires permission to access the [RegisterCACertificate](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: setAsActive
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/SetAsActive'
      - name: allowAutoRegistration
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/AllowAutoRegistration'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                caCertificate:
                  $ref: '#/components/schemas/CertificatePem'
                verificationCertificate:
                  $ref: '#/components/schemas/CertificatePem'
                registrationConfig:
                  $ref: '#/components/schemas/RegistrationConfig'
                tags:
                  $ref: '#/components/schemas/TagList'
                certificateMode:
                  $ref: '#/components/schemas/CertificateMode'
      responses:
        '200': {}
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '410':
          description: |-
            A limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '409':
          description: |-
            The resource already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /certificate/register:
    post:
      operationId: RegisterCertificate
      description: |-
        Registers a device certificate with IoT in the same [certificate mode](https://docs.aws.amazon.com/iot/latest/apireference/API_CertificateDescription.html#iot-Type-CertificateDescription-certificateMode) as the signing CA. If you have more than one CA certificate that has the same subject field, you must specify the CA certificate that was used to sign the device certificate being registered.

        Requires permission to access the [RegisterCertificate](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: setAsActive
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/SetAsActiveFlag'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                certificatePem:
                  $ref: '#/components/schemas/CertificatePem'
                caCertificatePem:
                  $ref: '#/components/schemas/CertificatePem'
                status:
                  $ref: '#/components/schemas/CertificateStatus'
      responses:
        '200': {}
        '409':
          description: |-
            The resource already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '406':
          description: |-
            The certificate operation is not allowed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateStateException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /certificate/register-no-ca:
    post:
      operationId: RegisterCertificateWithoutCA
      description: |-
        Register a certificate that does not have a certificate authority (CA). For supported certificates, consult [ Certificate signing algorithms supported by IoT](https://docs.aws.amazon.com/iot/latest/developerguide/x509-client-certs.html#x509-cert-algorithms).
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                certificatePem:
                  $ref: '#/components/schemas/CertificatePem'
                status:
                  $ref: '#/components/schemas/CertificateStatus'
      responses:
        '200': {}
        '406':
          description: |-
            The certificate operation is not allowed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateStateException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '409':
          description: |-
            The resource already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /reject-certificate-transfer/{certificateId}:
    patch:
      operationId: RejectCertificateTransfer
      description: |-
        Rejects a pending certificate transfer. After IoT rejects a certificate transfer, the certificate status changes from **PENDING_TRANSFER** to **INACTIVE**.

        To check for pending certificate transfers, call ListCertificates to enumerate your certificates.

        This operation can only be called by the transfer destination. After it is called, the certificate will be returned to the source's account in the INACTIVE state.

        Requires permission to access the [RejectCertificateTransfer](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: certificateId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CertificateId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                rejectReason:
                  $ref: '#/components/schemas/Message'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '410':
          description: |-
            You can't revert the certificate transfer because the transfer is already complete.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferAlreadyCompletedException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /billing-groups/removeThingFromBillingGroup:
    put:
      operationId: RemoveThingFromBillingGroup
      description: |-
        Removes the given thing from the billing group.

        Requires permission to access the [RemoveThingFromBillingGroup](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.

        This call is asynchronous. It might take several seconds for the detachment to propagate.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                billingGroupName:
                  $ref: '#/components/schemas/BillingGroupName'
                billingGroupArn:
                  $ref: '#/components/schemas/BillingGroupArn'
                thingName:
                  $ref: '#/components/schemas/ThingName'
                thingArn:
                  $ref: '#/components/schemas/ThingArn'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /thing-groups/removeThingFromThingGroup:
    put:
      operationId: RemoveThingFromThingGroup
      description: |-
        Remove the specified thing from the specified group.

        You must specify either a `thingGroupArn` or a `thingGroupName` to identify the thing group and either a `thingArn` or a `thingName` to identify the thing to remove from the thing group.

        Requires permission to access the [RemoveThingFromThingGroup](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                thingGroupName:
                  $ref: '#/components/schemas/ThingGroupName'
                thingGroupArn:
                  $ref: '#/components/schemas/ThingGroupArn'
                thingName:
                  $ref: '#/components/schemas/ThingName'
                thingArn:
                  $ref: '#/components/schemas/ThingArn'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /indices/search:
    post:
      operationId: SearchIndex
      description: |-
        The query search index.

        Requires permission to access the [SearchIndex](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                indexName:
                  $ref: '#/components/schemas/IndexName'
                queryString:
                  $ref: '#/components/schemas/QueryString'
                nextToken:
                  $ref: '#/components/schemas/NextToken'
                maxResults:
                  $ref: '#/components/schemas/SearchQueryMaxResults'
                queryVersion:
                  $ref: '#/components/schemas/QueryVersion'
      responses:
        '200': {}
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /thing-registration-tasks/{taskId}/cancel:
    put:
      operationId: StopThingRegistrationTask
      description: |-
        Cancels a bulk thing provisioning task.

        Requires permission to access the [StopThingRegistrationTask](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: taskId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TaskId'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /test-authorization:
    post:
      operationId: TestAuthorization
      description: |-
        Tests if a specified principal is authorized to perform an IoT action on a specified resource. Use this to test and debug the authorization behavior of devices that connect to the IoT device gateway.

        Requires permission to access the [TestAuthorization](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: clientId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ClientId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                principal:
                  $ref: '#/components/schemas/Principal'
                cognitoIdentityPoolId:
                  $ref: '#/components/schemas/CognitoIdentityPoolId'
                authInfos:
                  $ref: '#/components/schemas/AuthInfos'
                policyNamesToAdd:
                  $ref: '#/components/schemas/PolicyNames'
                policyNamesToSkip:
                  $ref: '#/components/schemas/PolicyNames'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '410':
          description: |-
            A limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /authorizer/{authorizerName}/test:
    post:
      operationId: TestInvokeAuthorizer
      description: |-
        Tests a custom authorization behavior by invoking a specified custom authorizer. Use this to test and debug the custom authorization behavior of devices that connect to the IoT device gateway.

        Requires permission to access the [TestInvokeAuthorizer](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: authorizerName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AuthorizerName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  $ref: '#/components/schemas/Token'
                tokenSignature:
                  $ref: '#/components/schemas/TokenSignature'
                httpContext:
                  $ref: '#/components/schemas/HttpContext'
                mqttContext:
                  $ref: '#/components/schemas/MqttContext'
                tlsContext:
                  $ref: '#/components/schemas/TlsContext'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /transfer-certificate/{certificateId}:
    patch:
      operationId: TransferCertificate
      description: |-
        Transfers the specified certificate to the specified Amazon Web Services account.

        Requires permission to access the [TransferCertificate](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.

        You can cancel the transfer until it is acknowledged by the recipient.

        No notification is sent to the transfer destination's account. It is up to the caller to notify the transfer target.

        The certificate being transferred must not be in the ACTIVE state. You can use the UpdateCertificate action to deactivate it.

        The certificate must not have any policies attached to it. You can use the DetachPolicy action to detach them.
      parameters:
      - name: certificateId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CertificateId'
      - name: targetAwsAccount
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/AwsAccountId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                transferMessage:
                  $ref: '#/components/schemas/Message'
      responses:
        '200': {}
        '406':
          description: |-
            The certificate operation is not allowed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateStateException'
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '409':
          description: |-
            You can't transfer the certificate because authorization policies are still attached.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferConflictException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /untag:
    post:
      operationId: UntagResource
      description: |-
        Removes the given tags (metadata) from the resource.

        Requires permission to access the [UntagResource](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resourceArn:
                  $ref: '#/components/schemas/ResourceArn'
                tagKeys:
                  $ref: '#/components/schemas/TagKeyList'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /audit/suppressions/update:
    patch:
      operationId: UpdateAuditSuppression
      description: |-
        Updates a Device Defender audit suppression.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                checkName:
                  $ref: '#/components/schemas/AuditCheckName'
                resourceIdentifier:
                  $ref: '#/components/schemas/ResourceIdentifier'
                expirationDate:
                  $ref: '#/components/schemas/Timestamp'
                suppressIndefinitely:
                  $ref: '#/components/schemas/SuppressIndefinitely'
                description:
                  $ref: '#/components/schemas/AuditDescription'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /thing-groups/updateThingGroupsForThing:
    put:
      operationId: UpdateThingGroupsForThing
      description: |-
        Updates the groups to which the thing belongs.

        Requires permission to access the [UpdateThingGroupsForThing](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                thingName:
                  $ref: '#/components/schemas/ThingName'
                thingGroupsToAdd:
                  $ref: '#/components/schemas/ThingGroupList'
                thingGroupsToRemove:
                  $ref: '#/components/schemas/ThingGroupList'
                overrideDynamicGroups:
                  $ref: '#/components/schemas/OverrideDynamicGroups'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /security-profile-behaviors/validate:
    post:
      operationId: ValidateSecurityProfileBehaviors
      description: |-
        Validates a Device Defender security profile behaviors specification.

        Requires permission to access the [ValidateSecurityProfileBehaviors](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                behaviors:
                  $ref: '#/components/schemas/Behaviors'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
components:
  schemas:
    AbortAction:
      type: string
      enum:
      - CANCEL
    AbortConfig:
      type: object
      properties:
        criteriaList:
          allOf:
          - $ref: '#/components/schemas/AbortCriteriaList'
          description: The list of criteria that determine when and how to abort the
            job.
      required:
      - criteriaList
      description: The criteria that determine when and how a job abort takes place.
    AbortCriteria:
      type: object
      properties:
        failureType:
          allOf:
          - $ref: '#/components/schemas/JobExecutionFailureType'
          description: The type of job execution failures that can initiate a job
            abort.
        action:
          allOf:
          - $ref: '#/components/schemas/AbortAction'
          description: The type of job action to take to initiate the job abort.
        thresholdPercentage:
          allOf:
          - $ref: '#/components/schemas/AbortThresholdPercentage'
          description: 'The minimum percentage of job execution failures that must
            occur to initiate the job abort.


            Amazon Web Services IoT Core supports up to two digits after the decimal
            (for example, 10.9 and 10.99, but not 10.999).'
        minNumberOfExecutedThings:
          allOf:
          - $ref: '#/components/schemas/MinimumNumberOfExecutedThings'
          description: The minimum number of things which must receive job execution
            notifications before the job can be aborted.
      required:
      - failureType
      - action
      - thresholdPercentage
      - minNumberOfExecutedThings
      description: The criteria that determine when and how a job abort takes place.
    AbortCriteriaList:
      type: array
      items:
        $ref: '#/components/schemas/AbortCriteria'
    AbortThresholdPercentage:
      type: number
      format: double
      maximum: 100
    AcceptCertificateTransferRequest:
      type: object
      properties:
        certificateId:
          allOf:
          - $ref: '#/components/schemas/CertificateId'
          description: The ID of the certificate. (The last part of the certificate
            ARN contains the certificate ID.)
        setAsActive:
          allOf:
          - $ref: '#/components/schemas/SetAsActive'
          description: Specifies whether the certificate is active.
      required:
      - certificateId
      description: The input for the AcceptCertificateTransfer operation.
    AcmCertificateArn:
      type: string
      pattern: ^arn:aws(-cn|-us-gov|-iso-b|-iso)?:acm:[a-z]{2}-(gov-|iso-|isob-)?[a-z]{4,9}-\d{1}:\d{12}:certificate/[a-zA-Z0-9/-]+$
      minLength: 1
      maxLength: 2048
    Action:
      type: object
      properties:
        dynamoDB:
          allOf:
          - $ref: '#/components/schemas/DynamoDBAction'
          description: Write to a DynamoDB table.
        dynamoDBv2:
          allOf:
          - $ref: '#/components/schemas/DynamoDBv2Action'
          description: Write to a DynamoDB table. This is a new version of the DynamoDB
            action. It allows you to write each attribute in an MQTT message payload
            into a separate DynamoDB column.
        lambda:
          allOf:
          - $ref: '#/components/schemas/LambdaAction'
          description: Invoke a Lambda function.
        sns:
          allOf:
          - $ref: '#/components/schemas/SnsAction'
          description: Publish to an Amazon SNS topic.
        sqs:
          allOf:
          - $ref: '#/components/schemas/SqsAction'
          description: Publish to an Amazon SQS queue.
        kinesis:
          allOf:
          - $ref: '#/components/schemas/KinesisAction'
          description: Write data to an Amazon Kinesis stream.
        republish:
          allOf:
          - $ref: '#/components/schemas/RepublishAction'
          description: Publish to another MQTT topic.
        s3:
          allOf:
          - $ref: '#/components/schemas/S3Action'
          description: Write to an Amazon S3 bucket.
        firehose:
          allOf:
          - $ref: '#/components/schemas/FirehoseAction'
          description: Write to an Amazon Kinesis Firehose stream.
        cloudwatchMetric:
          allOf:
          - $ref: '#/components/schemas/CloudwatchMetricAction'
          description: Capture a CloudWatch metric.
        cloudwatchAlarm:
          allOf:
          - $ref: '#/components/schemas/CloudwatchAlarmAction'
          description: Change the state of a CloudWatch alarm.
        cloudwatchLogs:
          allOf:
          - $ref: '#/components/schemas/CloudwatchLogsAction'
          description: Send data to CloudWatch Logs.
        elasticsearch:
          allOf:
          - $ref: '#/components/schemas/ElasticsearchAction'
          description: 'Write data to an Amazon OpenSearch Service domain.


            The `Elasticsearch` action can only be used by existing rule actions.
            To create a new rule action or to update an existing rule action, use
            the `OpenSearch` rule action instead. For more information, see [OpenSearchAction](https://docs.aws.amazon.com/iot/latest/apireference/API_OpenSearchAction.html).'
        salesforce:
          allOf:
          - $ref: '#/components/schemas/SalesforceAction'
          description: Send a message to a Salesforce IoT Cloud Input Stream.
        iotAnalytics:
          allOf:
          - $ref: '#/components/schemas/IotAnalyticsAction'
          description: Sends message data to an IoT Analytics channel.
        iotEvents:
          allOf:
          - $ref: '#/components/schemas/IotEventsAction'
          description: Sends an input to an IoT Events detector.
        iotSiteWise:
          allOf:
          - $ref: '#/components/schemas/IotSiteWiseAction'
          description: Sends data from the MQTT message that triggered the rule to
            IoT SiteWise asset properties.
        stepFunctions:
          allOf:
          - $ref: '#/components/schemas/StepFunctionsAction'
          description: Starts execution of a Step Functions state machine.
        timestream:
          allOf:
          - $ref: '#/components/schemas/TimestreamAction'
          description: The Timestream rule action writes attributes (measures) from
            an MQTT message into an Amazon Timestream table. For more information,
            see the [Timestream](https://docs.aws.amazon.com/iot/latest/developerguide/timestream-rule-action.html)
            topic rule action documentation.
        http:
          allOf:
          - $ref: '#/components/schemas/HttpAction'
          description: Send data to an HTTPS endpoint.
        kafka:
          allOf:
          - $ref: '#/components/schemas/KafkaAction'
          description: Send messages to an Amazon Managed Streaming for Apache Kafka
            (Amazon MSK) or self-managed Apache Kafka cluster.
        openSearch:
          allOf:
          - $ref: '#/components/schemas/OpenSearchAction'
          description: Write data to an Amazon OpenSearch Service domain.
        location:
          allOf:
          - $ref: '#/components/schemas/LocationAction'
          description: The Amazon Location Service rule action sends device location
            updates from an MQTT message to an Amazon Location tracker resource.
      description: Describes the actions associated with a rule.
    ActionList:
      type: array
      items:
        $ref: '#/components/schemas/Action'
    ActionType:
      type: string
      enum:
      - PUBLISH
      - SUBSCRIBE
      - RECEIVE
      - CONNECT
    ActiveViolation:
      type: object
      properties:
        violationId:
          allOf:
          - $ref: '#/components/schemas/ViolationId'
          description: The ID of the active violation.
        thingName:
          allOf:
          - $ref: '#/components/schemas/DeviceDefenderThingName'
          description: The name of the thing responsible for the active violation.
        securityProfileName:
          allOf:
          - $ref: '#/components/schemas/SecurityProfileName'
          description: The security profile with the behavior is in violation.
        behavior:
          allOf:
          - $ref: '#/components/schemas/Behavior'
          description: The behavior that is being violated.
        lastViolationValue:
          allOf:
          - $ref: '#/components/schemas/MetricValue'
          description: The value of the metric (the measurement) that caused the most
            recent violation.
        violationEventAdditionalInfo:
          allOf:
          - $ref: '#/components/schemas/ViolationEventAdditionalInfo'
          description: The details of a violation event.
        verificationState:
          allOf:
          - $ref: '#/components/schemas/VerificationState'
          description: The verification state of the violation (detect alarm).
        verificationStateDescription:
          allOf:
          - $ref: '#/components/schemas/VerificationStateDescription'
          description: The description of the verification state of the violation.
        lastViolationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time the most recent violation occurred.
        violationStartTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time the violation started.
      description: Information about an active Device Defender security profile behavior
        violation.
    ActiveViolations:
      type: array
      items:
        $ref: '#/components/schemas/ActiveViolation'
    AddThingToBillingGroupRequest:
      type: object
      properties:
        billingGroupName:
          allOf:
          - $ref: '#/components/schemas/BillingGroupName'
          description: 'The name of the billing group.


            This call is asynchronous. It might take several seconds for the detachment
            to propagate.'
        billingGroupArn:
          allOf:
          - $ref: '#/components/schemas/BillingGroupArn'
          description: The ARN of the billing group.
        thingName:
          allOf:
          - $ref: '#/components/schemas/ThingName'
          description: The name of the thing to be added to the billing group.
        thingArn:
          allOf:
          - $ref: '#/components/schemas/ThingArn'
          description: The ARN of the thing to be added to the billing group.
    AddThingToBillingGroupResponse:
      type: object
      properties: {}
    AddThingToThingGroupRequest:
      type: object
      properties:
        thingGroupName:
          allOf:
          - $ref: '#/components/schemas/ThingGroupName'
          description: The name of the group to which you are adding a thing.
        thingGroupArn:
          allOf:
          - $ref: '#/components/schemas/ThingGroupArn'
          description: The ARN of the group to which you are adding a thing.
        thingName:
          allOf:
          - $ref: '#/components/schemas/ThingName'
          description: The name of the thing to add to a group.
        thingArn:
          allOf:
          - $ref: '#/components/schemas/ThingArn'
          description: The ARN of the thing to add to a group.
        overrideDynamicGroups:
          allOf:
          - $ref: '#/components/schemas/OverrideDynamicGroups'
          description: Override dynamic thing groups with static thing groups when
            10-group limit is reached. If a thing belongs to 10 thing groups, and
            one or more of those groups are dynamic thing groups, adding a thing to
            a static group removes the thing from the last dynamic group.
    AddThingToThingGroupResponse:
      type: object
      properties: {}
    AddThingsToThingGroupParams:
      type: object
      properties:
        thingGroupNames:
          allOf:
          - $ref: '#/components/schemas/ThingGroupNames'
          description: The list of groups to which you want to add the things that
            triggered the mitigation action. You can add a thing to a maximum of 10
            groups, but you can't add a thing to more than one group in the same hierarchy.
        overrideDynamicGroups:
          allOf:
          - $ref: '#/components/schemas/NullableBoolean'
          description: Specifies if this mitigation action can move the things that
            triggered the mitigation action even if they are part of one or more dynamic
            thing groups.
      required:
      - thingGroupNames
      description: Parameters used when defining a mitigation action that move a set
        of things to a thing group.
    AdditionalMetricsToRetainList:
      type: array
      items:
        $ref: '#/components/schemas/BehaviorMetric'
    AdditionalMetricsToRetainV2List:
      type: array
      items:
        $ref: '#/components/schemas/MetricToRetain'
    AdditionalParameterMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Value'
    AggregationField:
      type: string
      minLength: 1
    AggregationType:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/AggregationTypeName'
          description: The name of the aggregation type.
        values:
          allOf:
          - $ref: '#/components/schemas/AggregationTypeValues'
          description: A list of the values of aggregation types.
      required:
      - name
      description: The type of aggregation queries.
    AggregationTypeName:
      type: string
      enum:
      - Statistics
      - Percentiles
      - Cardinality
    AggregationTypeValue:
      type: string
      pattern: ^[a-zA-Z0-9]+$
      minLength: 1
      maxLength: 12
    AggregationTypeValues:
      type: array
      items:
        $ref: '#/components/schemas/AggregationTypeValue'
    AlarmName:
      type: string
    AlertTarget:
      type: object
      properties:
        alertTargetArn:
          allOf:
          - $ref: '#/components/schemas/AlertTargetArn'
          description: The Amazon Resource Name (ARN) of the notification target to
            which alerts are sent.
        roleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          description: The ARN of the role that grants permission to send alerts to
            the notification target.
      required:
      - alertTargetArn
      - roleArn
      description: A structure containing the alert target ARN and the role ARN.
    AlertTargetArn:
      type: string
    AlertTargetType:
      type: string
      enum:
      - SNS
      description: '<p>The type of alert target: one of "SNS".</p>'
    AlertTargets:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/AlertTarget'
    AllowAuthorizerOverride:
      type: boolean
      default: false
    AllowAutoRegistration:
      type: boolean
      default: false
    Allowed:
      type: object
      properties:
        policies:
          allOf:
          - $ref: '#/components/schemas/Policies'
          description: A list of policies that allowed the authentication.
      description: Contains information that allowed the authorization.
    ApplicationProtocol:
      type: string
      enum:
      - SECURE_MQTT
      - MQTT_WSS
      - HTTPS
      - DEFAULT
    ApproximateSecondsBeforeTimedOut:
      type: integer
      format: int64
    AscendingOrder:
      type: boolean
      default: false
    AssetId:
      type: string
    AssetPropertyAlias:
      type: string
      minLength: 1
    AssetPropertyBooleanValue:
      type: string
    AssetPropertyDoubleValue:
      type: string
    AssetPropertyEntryId:
      type: string
    AssetPropertyId:
      type: string
    AssetPropertyIntegerValue:
      type: string
    AssetPropertyOffsetInNanos:
      type: string
    AssetPropertyQuality:
      type: string
    AssetPropertyStringValue:
      type: string
      minLength: 1
      maxLength: 1024
    AssetPropertyTimeInSeconds:
      type: string
    AssetPropertyTimestamp:
      type: object
      properties:
        timeInSeconds:
          allOf:
          - $ref: '#/components/schemas/AssetPropertyTimeInSeconds'
          description: A string that contains the time in seconds since epoch. Accepts
            substitution templates.
        offsetInNanos:
          allOf:
          - $ref: '#/components/schemas/AssetPropertyOffsetInNanos'
          description: Optional. A string that contains the nanosecond time offset.
            Accepts substitution templates.
      required:
      - timeInSeconds
      description: An asset property timestamp entry containing the following information.
    AssetPropertyValue:
      type: object
      properties:
        value:
          allOf:
          - $ref: '#/components/schemas/AssetPropertyVariant'
          description: The value of the asset property.
        timestamp:
          allOf:
          - $ref: '#/components/schemas/AssetPropertyTimestamp'
          description: The asset property value timestamp.
        quality:
          allOf:
          - $ref: '#/components/schemas/AssetPropertyQuality'
          description: Optional. A string that describes the quality of the value.
            Accepts substitution templates. Must be `GOOD`, `BAD`, or `UNCERTAIN`.
      required:
      - value
      - timestamp
      description: An asset property value entry containing the following information.
    AssetPropertyValueList:
      type: array
      items:
        $ref: '#/components/schemas/AssetPropertyValue'
    AssetPropertyVariant:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/AssetPropertyStringValue'
        description: |-
          Optional. The string value of the value entry. Accepts substitution templates.
      - allOf:
        - $ref: '#/components/schemas/AssetPropertyIntegerValue'
        description: |-
          Optional. A string that contains the integer value of the value entry. Accepts substitution templates.
      - allOf:
        - $ref: '#/components/schemas/AssetPropertyDoubleValue'
        description: |-
          Optional. A string that contains the double value of the value entry. Accepts substitution templates.
      - allOf:
        - $ref: '#/components/schemas/AssetPropertyBooleanValue'
        description: |-
          Optional. A string that contains the boolean value (`true` or `false`) of the value entry. Accepts substitution templates.
      description: |-
        Contains an asset property value (of a single type).
    AssociateSbomWithPackageVersionRequest:
      type: object
      properties:
        packageName:
          allOf:
          - $ref: '#/components/schemas/PackageName'
          description: The name of the new software package.
        versionName:
          allOf:
          - $ref: '#/components/schemas/VersionName'
          description: The name of the new package version.
        sbom:
          $ref: '#/components/schemas/Sbom'
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique case-sensitive identifier that you can provide to
            ensure the idempotency of the request. Don't reuse this client token if
            a new idempotent request is required.
      required:
      - packageName
      - versionName
      - sbom
    AssociateSbomWithPackageVersionResponse:
      type: object
      properties:
        packageName:
          allOf:
          - $ref: '#/components/schemas/PackageName'
          description: The name of the new software package.
        versionName:
          allOf:
          - $ref: '#/components/schemas/VersionName'
          description: The name of the new package version.
        sbom:
          $ref: '#/components/schemas/Sbom'
        sbomValidationStatus:
          allOf:
          - $ref: '#/components/schemas/SbomValidationStatus'
          description: The status of the initial validation for the software bill
            of materials against the Software Package Data Exchange (SPDX) and CycloneDX
            industry standard formats.
    AssociateTargetsWithJobRequest:
      type: object
      properties:
        targets:
          allOf:
          - $ref: '#/components/schemas/JobTargets'
          description: A list of thing group ARNs that define the targets of the job.
        jobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          description: The unique identifier you assigned to this job when it was
            created.
        comment:
          allOf:
          - $ref: '#/components/schemas/Comment'
          description: An optional comment string describing why the job was associated
            with the targets.
        namespaceId:
          allOf:
          - $ref: '#/components/schemas/NamespaceId'
          description: 'The namespace used to indicate that a job is a customer-managed
            job.


            When you specify a value for this parameter, Amazon Web Services IoT Core
            sends jobs notifications to MQTT topics that contain the value in the
            following format.


            `$aws/things/_THING_NAME_ /jobs/_JOB_ID_ /notify-namespace-_NAMESPACE_ID_
            /`


            The `namespaceId` feature is only supported by IoT Greengrass at this
            time. For more information, see [Setting up IoT Greengrass core devices.](https://docs.aws.amazon.com/greengrass/v2/developerguide/setting-up.html)'
      required:
      - targets
      - jobId
    AssociateTargetsWithJobResponse:
      type: object
      properties:
        jobArn:
          allOf:
          - $ref: '#/components/schemas/JobArn'
          description: An ARN identifying the job.
        jobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          description: The unique identifier you assigned to this job when it was
            created.
        description:
          allOf:
          - $ref: '#/components/schemas/JobDescription'
          description: A short text description of the job.
    AttachPolicyRequest:
      type: object
      properties:
        policyName:
          allOf:
          - $ref: '#/components/schemas/PolicyName'
          description: The name of the policy to attach.
        target:
          allOf:
          - $ref: '#/components/schemas/PolicyTarget'
          description: The [identity](https://docs.aws.amazon.com/iot/latest/developerguide/security-iam.html)
            to which the policy is attached. For example, a thing group or a certificate.
      required:
      - policyName
      - target
    AttachPrincipalPolicyRequest:
      type: object
      properties:
        policyName:
          allOf:
          - $ref: '#/components/schemas/PolicyName'
          description: The policy name.
        principal:
          allOf:
          - $ref: '#/components/schemas/Principal'
          description: The principal, which can be a certificate ARN (as returned
            from the CreateCertificate operation) or an Amazon Cognito ID.
      required:
      - policyName
      - principal
      description: The input for the AttachPrincipalPolicy operation.
    AttachSecurityProfileRequest:
      type: object
      properties:
        securityProfileName:
          allOf:
          - $ref: '#/components/schemas/SecurityProfileName'
          description: The security profile that is attached.
        securityProfileTargetArn:
          allOf:
          - $ref: '#/components/schemas/SecurityProfileTargetArn'
          description: The ARN of the target (thing group) to which the security profile
            is attached.
      required:
      - securityProfileName
      - securityProfileTargetArn
    AttachSecurityProfileResponse:
      type: object
      properties: {}
    AttachThingPrincipalRequest:
      type: object
      properties:
        thingName:
          allOf:
          - $ref: '#/components/schemas/ThingName'
          description: The name of the thing.
        principal:
          allOf:
          - $ref: '#/components/schemas/Principal'
          description: The principal, which can be a certificate ARN (as returned
            from the CreateCertificate operation) or an Amazon Cognito ID.
        thingPrincipalType:
          allOf:
          - $ref: '#/components/schemas/ThingPrincipalType'
          description: "The type of the relation you want to specify when you attach\
            \ a principal to a thing.\n\n  * `EXCLUSIVE_THING` \\- Attaches the specified\
            \ principal to the specified thing, exclusively. The thing will be the\
            \ only thing that’s attached to the principal.\n\n  * `NON_EXCLUSIVE_THING`\
            \ \\- Attaches the specified principal to the specified thing. Multiple\
            \ things can be attached to the principal."
      required:
      - thingName
      - principal
      description: The input for the AttachThingPrincipal operation.
    AttachThingPrincipalResponse:
      type: object
      properties: {}
      description: The output from the AttachThingPrincipal operation.
    AttributeKey:
      type: string
    AttributeName:
      type: string
      pattern: ^[a-zA-Z0-9_.,@/:#-]+$
      minLength: 0
      maxLength: 128
    AttributePayload:
      type: object
      properties:
        attributes:
          allOf:
          - $ref: '#/components/schemas/Attributes'
          description: 'A JSON string containing up to three key-value pair in JSON
            format. For example:


            `{\"attributes\":{\"string1\":\"string2\"}}`'
        merge:
          allOf:
          - $ref: '#/components/schemas/Flag'
          description: 'Specifies whether the list of attributes provided in the `AttributePayload`
            is merged with the attributes stored in the registry, instead of overwriting
            them.


            To remove an attribute, call `UpdateThing` with an empty attribute value.


            The `merge` attribute is only valid when calling `UpdateThing` or `UpdateThingGroup`.'
      description: The attribute payload.
    AttributeValue:
      type: string
      pattern: ^[a-zA-Z0-9_.,@/:#=\[\]-]*$
      minLength: 0
      maxLength: 800
    Attributes:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/AttributeValue'
    AttributesMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Value'
    AuditCheckConfiguration:
      type: object
      properties:
        enabled:
          allOf:
          - $ref: '#/components/schemas/Enabled'
          description: True if this audit check is enabled for this account.
        configuration:
          allOf:
          - $ref: '#/components/schemas/CheckCustomConfiguration'
          description: A structure containing the configName and corresponding configValue
            for configuring audit checks.
      description: Which audit checks are enabled and disabled for this account.
    AuditCheckConfigurations:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/AuditCheckConfiguration'
    AuditCheckDetails:
      type: object
      properties:
        checkRunStatus:
          allOf:
          - $ref: '#/components/schemas/AuditCheckRunStatus'
          description: The completion status of this check. One of "IN_PROGRESS",
            "WAITING_FOR_DATA_COLLECTION", "CANCELED", "COMPLETED_COMPLIANT", "COMPLETED_NON_COMPLIANT",
            or "FAILED".
        checkCompliant:
          allOf:
          - $ref: '#/components/schemas/CheckCompliant'
          description: True if the check is complete and found all resources compliant.
        totalResourcesCount:
          allOf:
          - $ref: '#/components/schemas/TotalResourcesCount'
          description: The number of resources on which the check was performed.
        nonCompliantResourcesCount:
          allOf:
          - $ref: '#/components/schemas/NonCompliantResourcesCount'
          description: The number of resources that were found noncompliant during
            the check.
        suppressedNonCompliantResourcesCount:
          allOf:
          - $ref: '#/components/schemas/SuppressedNonCompliantResourcesCount'
          description: Describes how many of the non-compliant resources created during
            the evaluation of an audit check were marked as suppressed.
        errorCode:
          allOf:
          - $ref: '#/components/schemas/ErrorCode'
          description: The code of any error encountered when this check is performed
            during this audit. One of "INSUFFICIENT_PERMISSIONS" or "AUDIT_CHECK_DISABLED".
        message:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage'
          description: The message associated with any error encountered when this
            check is performed during this audit.
      description: Information about the audit check.
    AuditCheckName:
      type: string
    AuditCheckRunStatus:
      type: string
      enum:
      - IN_PROGRESS
      - WAITING_FOR_DATA_COLLECTION
      - CANCELED
      - COMPLETED_COMPLIANT
      - COMPLETED_NON_COMPLIANT
      - FAILED
    AuditCheckToActionsMapping:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/MitigationActionNameList'
    AuditCheckToReasonCodeFilter:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/ReasonForNonComplianceCodes'
    AuditDescription:
      type: string
      pattern: ^[\p{Graph}\x20]*$
      minLength: 0
      maxLength: 1000
    AuditDetails:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/AuditCheckDetails'
    AuditFinding:
      type: object
      properties:
        findingId:
          allOf:
          - $ref: '#/components/schemas/FindingId'
          description: A unique identifier for this set of audit findings. This identifier
            is used to apply mitigation tasks to one or more sets of findings.
        taskId:
          allOf:
          - $ref: '#/components/schemas/AuditTaskId'
          description: The ID of the audit that generated this result (finding).
        checkName:
          allOf:
          - $ref: '#/components/schemas/AuditCheckName'
          description: The audit check that generated this result.
        taskStartTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time the audit started.
        findingTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time the result (finding) was discovered.
        severity:
          allOf:
          - $ref: '#/components/schemas/AuditFindingSeverity'
          description: The severity of the result (finding).
        nonCompliantResource:
          allOf:
          - $ref: '#/components/schemas/NonCompliantResource'
          description: The resource that was found to be noncompliant with the audit
            check.
        relatedResources:
          allOf:
          - $ref: '#/components/schemas/RelatedResources'
          description: The list of related resources.
        reasonForNonCompliance:
          allOf:
          - $ref: '#/components/schemas/ReasonForNonCompliance'
          description: The reason the resource was noncompliant.
        reasonForNonComplianceCode:
          allOf:
          - $ref: '#/components/schemas/ReasonForNonComplianceCode'
          description: A code that indicates the reason that the resource was noncompliant.
        isSuppressed:
          allOf:
          - $ref: '#/components/schemas/IsSuppressed'
          description: Indicates whether the audit finding was suppressed or not during
            reporting.
      description: The findings (results) of the audit.
    AuditFindingSeverity:
      type: string
      enum:
      - CRITICAL
      - HIGH
      - MEDIUM
      - LOW
    AuditFindings:
      type: array
      items:
        $ref: '#/components/schemas/AuditFinding'
    AuditFrequency:
      type: string
      enum:
      - DAILY
      - WEEKLY
      - BIWEEKLY
      - MONTHLY
    AuditMitigationActionExecutionMetadata:
      type: object
      properties:
        taskId:
          allOf:
          - $ref: '#/components/schemas/MitigationActionsTaskId'
          description: The unique identifier for the task that applies the mitigation
            action.
        findingId:
          allOf:
          - $ref: '#/components/schemas/FindingId'
          description: The unique identifier for the findings to which the task and
            associated mitigation action are applied.
        actionName:
          allOf:
          - $ref: '#/components/schemas/MitigationActionName'
          description: The friendly name of the mitigation action being applied by
            the task.
        actionId:
          allOf:
          - $ref: '#/components/schemas/MitigationActionId'
          description: The unique identifier for the mitigation action being applied
            by the task.
        status:
          allOf:
          - $ref: '#/components/schemas/AuditMitigationActionsExecutionStatus'
          description: The current status of the task being executed.
        startTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time when the task was started.
        endTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time when the task was completed or canceled.
            Blank if the task is still running.
        errorCode:
          allOf:
          - $ref: '#/components/schemas/ErrorCode'
          description: If an error occurred, the code that indicates which type of
            error occurred.
        message:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage'
          description: If an error occurred, a message that describes the error.
      description: Returned by ListAuditMitigationActionsTask, this object contains
        information that describes a mitigation action that has been started.
    AuditMitigationActionExecutionMetadataList:
      type: array
      items:
        $ref: '#/components/schemas/AuditMitigationActionExecutionMetadata'
    AuditMitigationActionsExecutionStatus:
      type: string
      enum:
      - IN_PROGRESS
      - COMPLETED
      - FAILED
      - CANCELED
      - SKIPPED
      - PENDING
    AuditMitigationActionsTaskMetadata:
      type: object
      properties:
        taskId:
          allOf:
          - $ref: '#/components/schemas/MitigationActionsTaskId'
          description: The unique identifier for the task.
        startTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the audit mitigation actions task was started.
        taskStatus:
          allOf:
          - $ref: '#/components/schemas/AuditMitigationActionsTaskStatus'
          description: The current state of the audit mitigation actions task.
      description: Information about an audit mitigation actions task that is returned
        by `ListAuditMitigationActionsTasks`.
    AuditMitigationActionsTaskMetadataList:
      type: array
      items:
        $ref: '#/components/schemas/AuditMitigationActionsTaskMetadata'
    AuditMitigationActionsTaskStatistics:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/TaskStatisticsForAuditCheck'
    AuditMitigationActionsTaskStatus:
      type: string
      enum:
      - IN_PROGRESS
      - COMPLETED
      - FAILED
      - CANCELED
    AuditMitigationActionsTaskTarget:
      type: object
      properties:
        auditTaskId:
          allOf:
          - $ref: '#/components/schemas/AuditTaskId'
          description: If the task will apply a mitigation action to findings from
            a specific audit, this value uniquely identifies the audit.
        findingIds:
          allOf:
          - $ref: '#/components/schemas/FindingIds'
          description: If the task will apply a mitigation action to one or more listed
            findings, this value uniquely identifies those findings.
        auditCheckToReasonCodeFilter:
          allOf:
          - $ref: '#/components/schemas/AuditCheckToReasonCodeFilter'
          description: Specifies a filter in the form of an audit check and set of
            reason codes that identify the findings from the audit to which the audit
            mitigation actions task apply.
      description: Used in MitigationActionParams, this information identifies the
        target findings to which the mitigation actions are applied. Only one entry
        appears.
    AuditNotificationTarget:
      type: object
      properties:
        targetArn:
          allOf:
          - $ref: '#/components/schemas/TargetArn'
          description: The ARN of the target (SNS topic) to which audit notifications
            are sent.
        roleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          description: The ARN of the role that grants permission to send notifications
            to the target.
        enabled:
          allOf:
          - $ref: '#/components/schemas/Enabled'
          description: True if notifications to the target are enabled.
      description: Information about the targets to which audit notifications are
        sent.
    AuditNotificationTargetConfigurations:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/AuditNotificationTarget'
    AuditNotificationType:
      type: string
      enum:
      - SNS
    AuditSuppression:
      type: object
      properties:
        checkName:
          $ref: '#/components/schemas/AuditCheckName'
        resourceIdentifier:
          $ref: '#/components/schemas/ResourceIdentifier'
        expirationDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The expiration date (epoch timestamp in seconds) that you want
            the suppression to adhere to.
        suppressIndefinitely:
          allOf:
          - $ref: '#/components/schemas/SuppressIndefinitely'
          description: Indicates whether a suppression should exist indefinitely or
            not.
        description:
          allOf:
          - $ref: '#/components/schemas/AuditDescription'
          description: The description of the audit suppression.
      required:
      - checkName
      - resourceIdentifier
      description: Filters out specific findings of a Device Defender audit.
    AuditSuppressionList:
      type: array
      items:
        $ref: '#/components/schemas/AuditSuppression'
    AuditTaskId:
      type: string
      pattern: ^[a-zA-Z0-9\-]+$
      minLength: 1
      maxLength: 40
    AuditTaskMetadata:
      type: object
      properties:
        taskId:
          allOf:
          - $ref: '#/components/schemas/AuditTaskId'
          description: The ID of this audit.
        taskStatus:
          allOf:
          - $ref: '#/components/schemas/AuditTaskStatus'
          description: The status of this audit. One of "IN_PROGRESS", "COMPLETED",
            "FAILED", or "CANCELED".
        taskType:
          allOf:
          - $ref: '#/components/schemas/AuditTaskType'
          description: The type of this audit. One of "ON_DEMAND_AUDIT_TASK" or "SCHEDULED_AUDIT_TASK".
      description: The audits that were performed.
    AuditTaskMetadataList:
      type: array
      items:
        $ref: '#/components/schemas/AuditTaskMetadata'
    AuditTaskStatus:
      type: string
      enum:
      - IN_PROGRESS
      - COMPLETED
      - FAILED
      - CANCELED
    AuditTaskType:
      type: string
      enum:
      - ON_DEMAND_AUDIT_TASK
      - SCHEDULED_AUDIT_TASK
    AuthDecision:
      type: string
      enum:
      - ALLOWED
      - EXPLICIT_DENY
      - IMPLICIT_DENY
    AuthInfo:
      type: object
      properties:
        actionType:
          allOf:
          - $ref: '#/components/schemas/ActionType'
          description: The type of action for which the principal is being authorized.
        resources:
          allOf:
          - $ref: '#/components/schemas/Resources'
          description: The resources for which the principal is being authorized to
            perform the specified action.
      required:
      - resources
      description: A collection of authorization information.
    AuthInfos:
      type: array
      items:
        $ref: '#/components/schemas/AuthInfo'
    AuthResult:
      type: object
      properties:
        authInfo:
          allOf:
          - $ref: '#/components/schemas/AuthInfo'
          description: Authorization information.
        allowed:
          allOf:
          - $ref: '#/components/schemas/Allowed'
          description: The policies and statements that allowed the specified action.
        denied:
          allOf:
          - $ref: '#/components/schemas/Denied'
          description: The policies and statements that denied the specified action.
        authDecision:
          allOf:
          - $ref: '#/components/schemas/AuthDecision'
          description: The final authorization decision of this scenario. Multiple
            statements are taken into account when determining the authorization decision.
            An explicit deny statement can override multiple allow statements.
        missingContextValues:
          allOf:
          - $ref: '#/components/schemas/MissingContextValues'
          description: Contains any missing context values found while evaluating
            policy.
      description: The authorizer result.
    AuthResults:
      type: array
      items:
        $ref: '#/components/schemas/AuthResult'
    AuthenticationType:
      type: string
      enum:
      - CUSTOM_AUTH_X509
      - CUSTOM_AUTH
      - AWS_X509
      - AWS_SIGV4
      - DEFAULT
    AuthorizerArn:
      type: string
      minLength: 0
      maxLength: 2048
    AuthorizerConfig:
      type: object
      properties:
        defaultAuthorizerName:
          allOf:
          - $ref: '#/components/schemas/AuthorizerName'
          description: The name of the authorization service for a domain configuration.
        allowAuthorizerOverride:
          allOf:
          - $ref: '#/components/schemas/AllowAuthorizerOverride'
          description: A Boolean that specifies whether the domain configuration's
            authorization service can be overridden.
      description: An object that specifies the authorization service for a domain.
    AuthorizerDescription:
      type: object
      properties:
        authorizerName:
          allOf:
          - $ref: '#/components/schemas/AuthorizerName'
          description: The authorizer name.
        authorizerArn:
          allOf:
          - $ref: '#/components/schemas/AuthorizerArn'
          description: The authorizer ARN.
        authorizerFunctionArn:
          allOf:
          - $ref: '#/components/schemas/AuthorizerFunctionArn'
          description: The authorizer's Lambda function ARN.
        tokenKeyName:
          allOf:
          - $ref: '#/components/schemas/TokenKeyName'
          description: The key used to extract the token from the HTTP headers.
        tokenSigningPublicKeys:
          allOf:
          - $ref: '#/components/schemas/PublicKeyMap'
          description: The public keys used to validate the token signature returned
            by your custom authentication service.
        status:
          allOf:
          - $ref: '#/components/schemas/AuthorizerStatus'
          description: The status of the authorizer.
        creationDate:
          allOf:
          - $ref: '#/components/schemas/DateType'
          description: The UNIX timestamp of when the authorizer was created.
        lastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/DateType'
          description: The UNIX timestamp of when the authorizer was last updated.
        signingDisabled:
          allOf:
          - $ref: '#/components/schemas/BooleanKey'
          description: Specifies whether IoT validates the token signature in an authorization
            request.
        enableCachingForHttp:
          allOf:
          - $ref: '#/components/schemas/EnableCachingForHttp'
          description: When `true`, the result from the authorizer’s Lambda function
            is cached for the time specified in `refreshAfterInSeconds`. The cached
            result is used while the device reuses the same HTTP connection.
      description: The authorizer description.
    AuthorizerFunctionArn:
      type: string
      pattern: ^[\s\S]*$
      minLength: 0
      maxLength: 2048
    AuthorizerName:
      type: string
      pattern: ^[\w=,@-]+$
      minLength: 1
      maxLength: 128
    AuthorizerStatus:
      type: string
      enum:
      - ACTIVE
      - INACTIVE
    AuthorizerSummary:
      type: object
      properties:
        authorizerName:
          allOf:
          - $ref: '#/components/schemas/AuthorizerName'
          description: The authorizer name.
        authorizerArn:
          allOf:
          - $ref: '#/components/schemas/AuthorizerArn'
          description: The authorizer ARN.
      description: The authorizer summary.
    Authorizers:
      type: array
      items:
        $ref: '#/components/schemas/AuthorizerSummary'
    AutoRegistrationStatus:
      type: string
      enum:
      - ENABLE
      - DISABLE
    Average:
      type: number
      format: double
      default: 0
    AwsAccountId:
      type: string
      pattern: ^[0-9]+$
      minLength: 12
      maxLength: 12
    AwsArn:
      type: string
    AwsIotJobArn:
      type: string
    AwsIotJobId:
      type: string
    AwsIotSqlVersion:
      type: string
    AwsJobAbortConfig:
      type: object
      properties:
        abortCriteriaList:
          allOf:
          - $ref: '#/components/schemas/AwsJobAbortCriteriaList'
          description: The list of criteria that determine when and how to abort the
            job.
      required:
      - abortCriteriaList
      description: The criteria that determine when and how a job abort takes place.
    AwsJobAbortCriteria:
      type: object
      properties:
        failureType:
          allOf:
          - $ref: '#/components/schemas/AwsJobAbortCriteriaFailureType'
          description: The type of job execution failures that can initiate a job
            abort.
        action:
          allOf:
          - $ref: '#/components/schemas/AwsJobAbortCriteriaAbortAction'
          description: The type of job action to take to initiate the job abort.
        thresholdPercentage:
          allOf:
          - $ref: '#/components/schemas/AwsJobAbortCriteriaAbortThresholdPercentage'
          description: 'The minimum percentage of job execution failures that must
            occur to initiate the job abort.


            Amazon Web Services IoT Core supports up to two digits after the decimal
            (for example, 10.9 and 10.99, but not 10.999).'
        minNumberOfExecutedThings:
          allOf:
          - $ref: '#/components/schemas/AwsJobAbortCriteriaMinimumNumberOfExecutedThings'
          description: The minimum number of things which must receive job execution
            notifications before the job can be aborted.
      required:
      - failureType
      - action
      - thresholdPercentage
      - minNumberOfExecutedThings
      description: The criteria that determine when and how a job abort takes place.
    AwsJobAbortCriteriaAbortAction:
      type: string
      enum:
      - CANCEL
    AwsJobAbortCriteriaAbortThresholdPercentage:
      type: number
      format: double
      maximum: 100
    AwsJobAbortCriteriaFailureType:
      type: string
      enum:
      - FAILED
      - REJECTED
      - TIMED_OUT
      - ALL
    AwsJobAbortCriteriaList:
      type: array
      items:
        $ref: '#/components/schemas/AwsJobAbortCriteria'
    AwsJobAbortCriteriaMinimumNumberOfExecutedThings:
      type: integer
      minimum: 1
    AwsJobExecutionsRolloutConfig:
      type: object
      properties:
        maximumPerMinute:
          allOf:
          - $ref: '#/components/schemas/MaximumPerMinute'
          description: The maximum number of OTA update job executions started per
            minute.
        exponentialRate:
          allOf:
          - $ref: '#/components/schemas/AwsJobExponentialRolloutRate'
          description: The rate of increase for a job rollout. This parameter allows
            you to define an exponential rate increase for a job rollout.
      description: Configuration for the rollout of OTA updates.
    AwsJobExponentialRolloutRate:
      type: object
      properties:
        baseRatePerMinute:
          allOf:
          - $ref: '#/components/schemas/AwsJobRolloutRatePerMinute'
          description: The minimum number of things that will be notified of a pending
            job, per minute, at the start of the job rollout. This is the initial
            rate of the rollout.
        incrementFactor:
          allOf:
          - $ref: '#/components/schemas/AwsJobRolloutIncrementFactor'
          description: The rate of increase for a job rollout. The number of things
            notified is multiplied by this factor.
        rateIncreaseCriteria:
          allOf:
          - $ref: '#/components/schemas/AwsJobRateIncreaseCriteria'
          description: 'The criteria to initiate the increase in rate of rollout for
            a job.


            Amazon Web Services IoT Core supports up to one digit after the decimal
            (for example, 1.5, but not 1.55).'
      required:
      - baseRatePerMinute
      - incrementFactor
      - rateIncreaseCriteria
      description: The rate of increase for a job rollout. This parameter allows you
        to define an exponential rate increase for a job rollout.
    AwsJobPresignedUrlConfig:
      type: object
      properties:
        expiresInSec:
          allOf:
          - $ref: '#/components/schemas/ExpiresInSeconds'
          description: How long (in seconds) pre-signed URLs are valid. Valid values
            are 60 - 3600, the default value is 1800 seconds. Pre-signed URLs are
            generated when a request for the job document is received.
      description: Configuration information for pre-signed URLs. Valid when `protocols`
        contains HTTP.
    AwsJobRateIncreaseCriteria:
      type: object
      properties:
        numberOfNotifiedThings:
          allOf:
          - $ref: '#/components/schemas/AwsJobRateIncreaseCriteriaNumberOfThings'
          description: When this number of things have been notified, it will initiate
            an increase in the rollout rate.
        numberOfSucceededThings:
          allOf:
          - $ref: '#/components/schemas/AwsJobRateIncreaseCriteriaNumberOfThings'
          description: When this number of things have succeeded in their job execution,
            it will initiate an increase in the rollout rate.
      description: The criteria to initiate the increase in rate of rollout for a
        job.
    AwsJobRateIncreaseCriteriaNumberOfThings:
      type: integer
      minimum: 1
    AwsJobRolloutIncrementFactor:
      type: number
      format: double
      default: 0
    AwsJobRolloutRatePerMinute:
      type: integer
      minimum: 1
      maximum: 1000
    AwsJobTimeoutConfig:
      type: object
      properties:
        inProgressTimeoutInMinutes:
          allOf:
          - $ref: '#/components/schemas/AwsJobTimeoutInProgressTimeoutInMinutes'
          description: Specifies the amount of time, in minutes, this device has to
            finish execution of this job. The timeout interval can be anywhere between
            1 minute and 7 days (1 to 10080 minutes). The in progress timer can't
            be updated and will apply to all job executions for the job. Whenever
            a job execution remains in the IN_PROGRESS status for longer than this
            interval, the job execution will fail and switch to the terminal `TIMED_OUT`
            status.
      description: Specifies the amount of time each device has to finish its execution
        of the job. A timer is started when the job execution status is set to `IN_PROGRESS`.
        If the job execution status is not set to another terminal state before the
        timer expires, it will be automatically set to `TIMED_OUT`.
    AwsJobTimeoutInProgressTimeoutInMinutes:
      type: integer
      format: int64
    BatchMode:
      type: boolean
    BeforeSubstitutionFlag:
      type: boolean
      default: false
    Behavior:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/BehaviorName'
          description: The name you've given to the behavior.
        metric:
          allOf:
          - $ref: '#/components/schemas/BehaviorMetric'
          description: What is measured by the behavior.
        metricDimension:
          allOf:
          - $ref: '#/components/schemas/MetricDimension'
          description: The dimension for a metric in your behavior. For example, using
            a `TOPIC_FILTER` dimension, you can narrow down the scope of the metric
            to only MQTT topics where the name matches the pattern specified in the
            dimension. This can't be used with custom metrics.
        criteria:
          allOf:
          - $ref: '#/components/schemas/BehaviorCriteria'
          description: 'The criteria that determine if a device is behaving normally
            in regard to the `metric`.


            In the IoT console, you can choose to be sent an alert through Amazon
            SNS when IoT Device Defender detects that a device is behaving anomalously.'
        suppressAlerts:
          allOf:
          - $ref: '#/components/schemas/SuppressAlerts'
          description: Suppresses alerts.
        exportMetric:
          allOf:
          - $ref: '#/components/schemas/ExportMetric'
          description: Value indicates exporting metrics related to the behavior when
            it is true.
      required:
      - name
      description: A Device Defender security profile behavior.
    BehaviorCriteria:
      type: object
      properties:
        comparisonOperator:
          allOf:
          - $ref: '#/components/schemas/ComparisonOperator'
          description: "The operator that relates the thing measured (`metric`) to\
            \ the criteria (containing a `value` or `statisticalThreshold`). Valid\
            \ operators include:\n\n  * `string-list`: `in-set` and `not-in-set`\n\
            \n  * `number-list`: `in-set` and `not-in-set`\n\n  * `ip-address-list`:\
            \ `in-cidr-set` and `not-in-cidr-set`\n\n  * `number`: `less-than`, `less-than-equals`,\
            \ `greater-than`, and `greater-than-equals`"
        value:
          allOf:
          - $ref: '#/components/schemas/MetricValue'
          description: The value to be compared with the `metric`.
        durationSeconds:
          allOf:
          - $ref: '#/components/schemas/DurationSeconds'
          description: Use this to specify the time duration over which the behavior
            is evaluated, for those criteria that have a time dimension (for example,
            `NUM_MESSAGES_SENT`). For a `statisticalThreshhold` metric comparison,
            measurements from all devices are accumulated over this time duration
            before being used to calculate percentiles, and later, measurements from
            an individual device are also accumulated over this time duration before
            being given a percentile rank. Cannot be used with list-based metric datatypes.
        consecutiveDatapointsToAlarm:
          allOf:
          - $ref: '#/components/schemas/ConsecutiveDatapointsToAlarm'
          description: If a device is in violation of the behavior for the specified
            number of consecutive datapoints, an alarm occurs. If not specified, the
            default is 1.
        consecutiveDatapointsToClear:
          allOf:
          - $ref: '#/components/schemas/ConsecutiveDatapointsToClear'
          description: If an alarm has occurred and the offending device is no longer
            in violation of the behavior for the specified number of consecutive datapoints,
            the alarm is cleared. If not specified, the default is 1.
        statisticalThreshold:
          allOf:
          - $ref: '#/components/schemas/StatisticalThreshold'
          description: A statistical ranking (percentile)that indicates a threshold
            value by which a behavior is determined to be in compliance or in violation
            of the behavior.
        mlDetectionConfig:
          allOf:
          - $ref: '#/components/schemas/MachineLearningDetectionConfig'
          description: The configuration of an ML Detect
      description: The criteria by which the behavior is determined to be normal.
    BehaviorCriteriaType:
      type: string
      enum:
      - STATIC
      - STATISTICAL
      - MACHINE_LEARNING
    BehaviorMetric:
      type: string
    BehaviorModelTrainingSummaries:
      type: array
      items:
        $ref: '#/components/schemas/BehaviorModelTrainingSummary'
    BehaviorModelTrainingSummary:
      type: object
      properties:
        securityProfileName:
          allOf:
          - $ref: '#/components/schemas/SecurityProfileName'
          description: The name of the security profile.
        behaviorName:
          allOf:
          - $ref: '#/components/schemas/BehaviorName'
          description: The name of the behavior.
        trainingDataCollectionStartDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date a training model started collecting data.
        modelStatus:
          allOf:
          - $ref: '#/components/schemas/ModelStatus'
          description: The status of the behavior model.
        datapointsCollectionPercentage:
          allOf:
          - $ref: '#/components/schemas/DataCollectionPercentage'
          description: The percentage of datapoints collected.
        lastModelRefreshDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date the model was last refreshed.
      description: The summary of an ML Detect behavior model.
    BehaviorName:
      type: string
      pattern: ^[a-zA-Z0-9:_-]+$
      minLength: 1
      maxLength: 128
    Behaviors:
      type: array
      items:
        $ref: '#/components/schemas/Behavior'
    BillingGroupArn:
      type: string
    BillingGroupDescription:
      type: string
      pattern: ^[\p{Graph}\x20]*$
      minLength: 0
      maxLength: 2028
    BillingGroupId:
      type: string
      pattern: ^[a-zA-Z0-9\-]+$
      minLength: 1
      maxLength: 128
    BillingGroupMetadata:
      type: object
      properties:
        creationDate:
          allOf:
          - $ref: '#/components/schemas/CreationDate'
          description: The date the billing group was created.
      description: Additional information about the billing group.
    BillingGroupName:
      type: string
      pattern: ^[a-zA-Z0-9:_-]+$
      minLength: 1
      maxLength: 128
    BillingGroupNameAndArnList:
      type: array
      items:
        $ref: '#/components/schemas/GroupNameAndArn'
    BillingGroupProperties:
      type: object
      properties:
        billingGroupDescription:
          allOf:
          - $ref: '#/components/schemas/BillingGroupDescription'
          description: The description of the billing group.
      description: The properties of a billing group.
    BinaryCommandExecutionResult:
      type: string
      format: byte
      minLength: 1
    BinaryParameterValue:
      type: string
      format: byte
      minLength: 1
    Boolean:
      type: boolean
    Boolean2:
      type: boolean
      default: false
    BooleanCommandExecutionResult:
      type: boolean
    BooleanKey:
      type: boolean
    BooleanParameterValue:
      type: boolean
    BooleanWrapperObject:
      type: boolean
    Bucket:
      type: object
      properties:
        keyValue:
          allOf:
          - $ref: '#/components/schemas/BucketKeyValue'
          description: The value counted for the particular bucket.
        count:
          allOf:
          - $ref: '#/components/schemas/Count'
          description: The number of documents that have the value counted for the
            particular bucket.
      description: A count of documents that meets a specific aggregation criteria.
    BucketKeyValue:
      type: string
    BucketName:
      type: string
    Buckets:
      type: array
      items:
        $ref: '#/components/schemas/Bucket'
    BucketsAggregationType:
      type: object
      properties:
        termsAggregation:
          allOf:
          - $ref: '#/components/schemas/TermsAggregation'
          description: Performs an aggregation that will return a list of buckets.
            The list of buckets is a ranked list of the number of occurrences of an
            aggregation field value.
      description: The type of bucketed aggregation performed.
    CACertificate:
      type: object
      properties:
        certificateArn:
          allOf:
          - $ref: '#/components/schemas/CertificateArn'
          description: The ARN of the CA certificate.
        certificateId:
          allOf:
          - $ref: '#/components/schemas/CertificateId'
          description: The ID of the CA certificate.
        status:
          allOf:
          - $ref: '#/components/schemas/CACertificateStatus'
          description: 'The status of the CA certificate.


            The status value REGISTER_INACTIVE is deprecated and should not be used.'
        creationDate:
          allOf:
          - $ref: '#/components/schemas/DateType'
          description: The date the CA certificate was created.
      description: A CA certificate.
    CACertificateDescription:
      type: object
      properties:
        certificateArn:
          allOf:
          - $ref: '#/components/schemas/CertificateArn'
          description: The CA certificate ARN.
        certificateId:
          allOf:
          - $ref: '#/components/schemas/CertificateId'
          description: The CA certificate ID.
        status:
          allOf:
          - $ref: '#/components/schemas/CACertificateStatus'
          description: The status of a CA certificate.
        certificatePem:
          allOf:
          - $ref: '#/components/schemas/CertificatePem'
          description: The CA certificate data, in PEM format.
        ownedBy:
          allOf:
          - $ref: '#/components/schemas/AwsAccountId'
          description: The owner of the CA certificate.
        creationDate:
          allOf:
          - $ref: '#/components/schemas/DateType'
          description: The date the CA certificate was created.
        autoRegistrationStatus:
          allOf:
          - $ref: '#/components/schemas/AutoRegistrationStatus'
          description: Whether the CA certificate configured for auto registration
            of device certificates. Valid values are "ENABLE" and "DISABLE"
        lastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/DateType'
          description: The date the CA certificate was last modified.
        customerVersion:
          allOf:
          - $ref: '#/components/schemas/CustomerVersion'
          description: The customer version of the CA certificate.
        generationId:
          allOf:
          - $ref: '#/components/schemas/GenerationId'
          description: The generation ID of the CA certificate.
        validity:
          allOf:
          - $ref: '#/components/schemas/CertificateValidity'
          description: When the CA certificate is valid.
        certificateMode:
          allOf:
          - $ref: '#/components/schemas/CertificateMode'
          description: 'The mode of the CA.


            All the device certificates that are registered using this CA will be
            registered in the same mode as the CA. For more information about certificate
            mode for device certificates, see [certificate mode](https://docs.aws.amazon.com/iot/latest/apireference/API_CertificateDescription.html#iot-Type-CertificateDescription-certificateMode).'
      description: Describes a CA certificate.
    CACertificateStatus:
      type: string
      enum:
      - ACTIVE
      - INACTIVE
    CACertificateUpdateAction:
      type: string
      enum:
      - DEACTIVATE
    CACertificates:
      type: array
      items:
        $ref: '#/components/schemas/CACertificate'
    CancelAuditMitigationActionsTaskRequest:
      type: object
      properties:
        taskId:
          allOf:
          - $ref: '#/components/schemas/MitigationActionsTaskId'
          description: The unique identifier for the task that you want to cancel.
      required:
      - taskId
    CancelAuditMitigationActionsTaskResponse:
      type: object
      properties: {}
    CancelAuditTaskRequest:
      type: object
      properties:
        taskId:
          allOf:
          - $ref: '#/components/schemas/AuditTaskId'
          description: The ID of the audit you want to cancel. You can only cancel
            an audit that is "IN_PROGRESS".
      required:
      - taskId
    CancelAuditTaskResponse:
      type: object
      properties: {}
    CancelCertificateTransferRequest:
      type: object
      properties:
        certificateId:
          allOf:
          - $ref: '#/components/schemas/CertificateId'
          description: The ID of the certificate. (The last part of the certificate
            ARN contains the certificate ID.)
      required:
      - certificateId
      description: The input for the CancelCertificateTransfer operation.
    CancelDetectMitigationActionsTaskRequest:
      type: object
      properties:
        taskId:
          allOf:
          - $ref: '#/components/schemas/MitigationActionsTaskId'
          description: The unique identifier of the task.
      required:
      - taskId
    CancelDetectMitigationActionsTaskResponse:
      type: object
      properties: {}
    CancelJobExecutionRequest:
      type: object
      properties:
        jobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          description: The ID of the job to be canceled.
        thingName:
          allOf:
          - $ref: '#/components/schemas/ThingName'
          description: The name of the thing whose execution of the job will be canceled.
        force:
          allOf:
          - $ref: '#/components/schemas/ForceFlag'
          description: '(Optional) If `true` the job execution will be canceled if
            it has status IN_PROGRESS or QUEUED, otherwise the job execution will
            be canceled only if it has status QUEUED. If you attempt to cancel a job
            execution that is IN_PROGRESS, and you do not set `force` to `true`, then
            an `InvalidStateTransitionException` will be thrown. The default is `false`.


            Canceling a job execution which is "IN_PROGRESS", will cause the device
            to be unable to update the job execution status. Use caution and ensure
            that the device is able to recover to a valid state.'
        expectedVersion:
          allOf:
          - $ref: '#/components/schemas/ExpectedVersion'
          description: (Optional) The expected current version of the job execution.
            Each time you update the job execution, its version is incremented. If
            the version of the job execution stored in Jobs does not match, the update
            is rejected with a VersionMismatch error, and an ErrorResponse that contains
            the current job execution status data is returned. (This makes it unnecessary
            to perform a separate DescribeJobExecution request in order to obtain
            the job execution status data.)
        statusDetails:
          allOf:
          - $ref: '#/components/schemas/DetailsMap'
          description: A collection of name/value pairs that describe the status of
            the job execution. If not specified, the statusDetails are unchanged.
            You can specify at most 10 name/value pairs.
      required:
      - jobId
      - thingName
    CancelJobRequest:
      type: object
      properties:
        jobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          description: The unique identifier you assigned to this job when it was
            created.
        reasonCode:
          allOf:
          - $ref: '#/components/schemas/ReasonCode'
          description: (Optional)A reason code string that explains why the job was
            canceled.
        comment:
          allOf:
          - $ref: '#/components/schemas/Comment'
          description: An optional comment string describing why the job was canceled.
        force:
          allOf:
          - $ref: '#/components/schemas/ForceFlag'
          description: '(Optional) If `true` job executions with status "IN_PROGRESS"
            and "QUEUED" are canceled, otherwise only job executions with status "QUEUED"
            are canceled. The default is `false`.


            Canceling a job which is "IN_PROGRESS", will cause a device which is executing
            the job to be unable to update the job execution status. Use caution and
            ensure that each device executing a job which is canceled is able to recover
            to a valid state.'
      required:
      - jobId
    CancelJobResponse:
      type: object
      properties:
        jobArn:
          allOf:
          - $ref: '#/components/schemas/JobArn'
          description: The job ARN.
        jobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          description: The unique identifier you assigned to this job when it was
            created.
        description:
          allOf:
          - $ref: '#/components/schemas/JobDescription'
          description: A short text description of the job.
    CanceledChecksCount:
      type: integer
    CanceledFindingsCount:
      type: integer
      format: int64
    CanceledThings:
      type: integer
    CannedAccessControlList:
      type: string
      enum:
      - private
      - public-read
      - public-read-write
      - aws-exec-read
      - authenticated-read
      - bucket-owner-read
      - bucket-owner-full-control
      - log-delivery-write
    Certificate:
      type: object
      properties:
        certificateArn:
          allOf:
          - $ref: '#/components/schemas/CertificateArn'
          description: The ARN of the certificate.
        certificateId:
          allOf:
          - $ref: '#/components/schemas/CertificateId'
          description: The ID of the certificate. (The last part of the certificate
            ARN contains the certificate ID.)
        status:
          allOf:
          - $ref: '#/components/schemas/CertificateStatus'
          description: 'The status of the certificate.


            The status value REGISTER_INACTIVE is deprecated and should not be used.'
        certificateMode:
          allOf:
          - $ref: '#/components/schemas/CertificateMode'
          description: 'The mode of the certificate.


            `DEFAULT`: A certificate in `DEFAULT` mode is either generated by Amazon
            Web Services IoT Core or registered with an issuer certificate authority
            (CA) in `DEFAULT` mode. Devices with certificates in `DEFAULT` mode aren''t
            required to send the Server Name Indication (SNI) extension when connecting
            to Amazon Web Services IoT Core. However, to use features such as custom
            domains and VPC endpoints, we recommend that you use the SNI extension
            when connecting to Amazon Web Services IoT Core.


            `SNI_ONLY`: A certificate in `SNI_ONLY` mode is registered without an
            issuer CA. Devices with certificates in `SNI_ONLY` mode must send the
            SNI extension when connecting to Amazon Web Services IoT Core.'
        creationDate:
          allOf:
          - $ref: '#/components/schemas/DateType'
          description: The date and time the certificate was created.
      description: Information about a certificate.
    CertificateArn:
      type: string
    CertificateConflictException:
      type: object
      properties:
        message:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage2'
          description: The message for the exception.
      description: Unable to verify the CA certificate used to sign the device certificate
        you are attempting to register. This is happens when you have registered more
        than one CA certificate that has the same subject field and public key.
    CertificateDescription:
      type: object
      properties:
        certificateArn:
          allOf:
          - $ref: '#/components/schemas/CertificateArn'
          description: The ARN of the certificate.
        certificateId:
          allOf:
          - $ref: '#/components/schemas/CertificateId'
          description: The ID of the certificate.
        caCertificateId:
          allOf:
          - $ref: '#/components/schemas/CertificateId'
          description: The certificate ID of the CA certificate used to sign this
            certificate.
        status:
          allOf:
          - $ref: '#/components/schemas/CertificateStatus'
          description: The status of the certificate.
        certificatePem:
          allOf:
          - $ref: '#/components/schemas/CertificatePem'
          description: The certificate data, in PEM format.
        ownedBy:
          allOf:
          - $ref: '#/components/schemas/AwsAccountId'
          description: The ID of the Amazon Web Services account that owns the certificate.
        previousOwnedBy:
          allOf:
          - $ref: '#/components/schemas/AwsAccountId'
          description: The ID of the Amazon Web Services account of the previous owner
            of the certificate.
        creationDate:
          allOf:
          - $ref: '#/components/schemas/DateType'
          description: The date and time the certificate was created.
        lastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/DateType'
          description: The date and time the certificate was last modified.
        customerVersion:
          allOf:
          - $ref: '#/components/schemas/CustomerVersion'
          description: The customer version of the certificate.
        transferData:
          allOf:
          - $ref: '#/components/schemas/TransferData'
          description: The transfer data.
        generationId:
          allOf:
          - $ref: '#/components/schemas/GenerationId'
          description: The generation ID of the certificate.
        validity:
          allOf:
          - $ref: '#/components/schemas/CertificateValidity'
          description: When the certificate is valid.
        certificateMode:
          allOf:
          - $ref: '#/components/schemas/CertificateMode'
          description: 'The mode of the certificate.


            `DEFAULT`: A certificate in `DEFAULT` mode is either generated by Amazon
            Web Services IoT Core or registered with an issuer certificate authority
            (CA) in `DEFAULT` mode. Devices with certificates in `DEFAULT` mode aren''t
            required to send the Server Name Indication (SNI) extension when connecting
            to Amazon Web Services IoT Core. However, to use features such as custom
            domains and VPC endpoints, we recommend that you use the SNI extension
            when connecting to Amazon Web Services IoT Core.


            `SNI_ONLY`: A certificate in `SNI_ONLY` mode is registered without an
            issuer CA. Devices with certificates in `SNI_ONLY` mode must send the
            SNI extension when connecting to Amazon Web Services IoT Core.


            For more information about the value for SNI extension, see [Transport
            security in IoT](https://docs.aws.amazon.com/iot/latest/developerguide/transport-security.html).'
      description: Describes a certificate.
    CertificateId:
      type: string
      pattern: ^(0x)?[a-fA-F0-9]+$
      minLength: 64
      maxLength: 64
    CertificateMode:
      type: string
      enum:
      - DEFAULT
      - SNI_ONLY
    CertificateName:
      type: string
    CertificatePathOnDevice:
      type: string
    CertificatePem:
      type: string
      pattern: ^[\s\S]*$
      minLength: 1
      maxLength: 65536
    CertificateProviderAccountDefaultForOperations:
      type: array
      items:
        $ref: '#/components/schemas/CertificateProviderOperation'
    CertificateProviderArn:
      type: string
      minLength: 0
      maxLength: 2048
    CertificateProviderFunctionArn:
      type: string
      pattern: ^[\s\S]*$
      minLength: 0
      maxLength: 2048
    CertificateProviderName:
      type: string
      pattern: ^[\w=,@-]+$
      minLength: 1
      maxLength: 128
    CertificateProviderOperation:
      type: string
      enum:
      - CreateCertificateFromCsr
    CertificateProviderSummary:
      type: object
      properties:
        certificateProviderName:
          allOf:
          - $ref: '#/components/schemas/CertificateProviderName'
          description: The name of the certificate provider.
        certificateProviderArn:
          allOf:
          - $ref: '#/components/schemas/CertificateProviderArn'
          description: The ARN of the certificate provider.
      description: The certificate provider summary.
    CertificateProviders:
      type: array
      items:
        $ref: '#/components/schemas/CertificateProviderSummary'
    CertificateSigningRequest:
      type: string
      pattern: ^[\s\S]*$
      minLength: 1
      maxLength: 4096
    CertificateStateException:
      type: object
      properties:
        message:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage2'
          description: The message for the exception.
      description: The certificate operation is not allowed.
    CertificateStatus:
      type: string
      enum:
      - ACTIVE
      - INACTIVE
      - REVOKED
      - PENDING_TRANSFER
      - REGISTER_INACTIVE
      - PENDING_ACTIVATION
    CertificateValidationException:
      type: object
      properties:
        message:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage2'
          description: Additional information about the exception.
      description: The certificate is invalid.
    CertificateValidity:
      type: object
      properties:
        notBefore:
          allOf:
          - $ref: '#/components/schemas/DateType'
          description: The certificate is not valid before this date.
        notAfter:
          allOf:
          - $ref: '#/components/schemas/DateType'
          description: The certificate is not valid after this date.
      description: When the certificate is valid.
    Certificates:
      type: array
      items:
        $ref: '#/components/schemas/Certificate'
    ChannelName:
      type: string
    CheckCompliant:
      type: boolean
    CheckCustomConfiguration:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/ConfigValue'
    Cidr:
      type: string
      pattern: ^[a-fA-F0-9:\.\/]+$
      minLength: 2
      maxLength: 43
    Cidrs:
      type: array
      items:
        $ref: '#/components/schemas/Cidr'
    ClearDefaultAuthorizerRequest:
      type: object
      properties: {}
    ClearDefaultAuthorizerResponse:
      type: object
      properties: {}
    ClientCertificateCallbackArn:
      type: string
      pattern: ^[\s\S]*$
      minLength: 0
      maxLength: 2048
    ClientCertificateConfig:
      type: object
      properties:
        clientCertificateCallbackArn:
          allOf:
          - $ref: '#/components/schemas/ClientCertificateCallbackArn'
          description: The ARN of the Lambda function that IoT invokes after mutual
            TLS authentication during the connection.
      description: An object that speciﬁes the client certificate conﬁguration for
        a domain.
    ClientId:
      type: string
    ClientProperties:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/String'
    ClientRequestToken:
      type: string
      pattern: ^[a-zA-Z0-9-_]+$
      minLength: 1
      maxLength: 64
    ClientToken:
      type: string
      pattern: ^\S{36,64}$
      minLength: 36
      maxLength: 64
    CloudwatchAlarmAction:
      type: object
      properties:
        roleArn:
          allOf:
          - $ref: '#/components/schemas/AwsArn'
          description: The IAM role that allows access to the CloudWatch alarm.
        alarmName:
          allOf:
          - $ref: '#/components/schemas/AlarmName'
          description: The CloudWatch alarm name.
        stateReason:
          allOf:
          - $ref: '#/components/schemas/StateReason'
          description: The reason for the alarm change.
        stateValue:
          allOf:
          - $ref: '#/components/schemas/StateValue'
          description: 'The value of the alarm state. Acceptable values are: OK, ALARM,
            INSUFFICIENT_DATA.'
      required:
      - roleArn
      - alarmName
      - stateReason
      - stateValue
      description: Describes an action that updates a CloudWatch alarm.
    CloudwatchLogsAction:
      type: object
      properties:
        roleArn:
          allOf:
          - $ref: '#/components/schemas/AwsArn'
          description: The IAM role that allows access to the CloudWatch log.
        logGroupName:
          allOf:
          - $ref: '#/components/schemas/LogGroupName'
          description: The CloudWatch log group to which the action sends data.
        batchMode:
          allOf:
          - $ref: '#/components/schemas/BatchMode'
          description: Indicates whether batches of log records will be extracted
            and uploaded into CloudWatch. Values include `true` or `false` _(default)_.
      required:
      - roleArn
      - logGroupName
      description: Describes an action that sends data to CloudWatch Logs.
    CloudwatchMetricAction:
      type: object
      properties:
        roleArn:
          allOf:
          - $ref: '#/components/schemas/AwsArn'
          description: The IAM role that allows access to the CloudWatch metric.
        metricNamespace:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The CloudWatch metric namespace name.
        metricName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The CloudWatch metric name.
        metricValue:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The CloudWatch metric value.
        metricUnit:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The [metric unit](https://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#Unit)
            supported by CloudWatch.
        metricTimestamp:
          allOf:
          - $ref: '#/components/schemas/String'
          description: An optional [Unix timestamp](https://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#about_timestamp).
      required:
      - roleArn
      - metricNamespace
      - metricName
      - metricValue
      - metricUnit
      description: Describes an action that captures a CloudWatch metric.
    Code:
      type: string
    CodeSigning:
      type: object
      properties:
        awsSignerJobId:
          allOf:
          - $ref: '#/components/schemas/SigningJobId'
          description: The ID of the `AWSSignerJob` which was created to sign the
            file.
        startSigningJobParameter:
          allOf:
          - $ref: '#/components/schemas/StartSigningJobParameter'
          description: Describes the code-signing job.
        customCodeSigning:
          allOf:
          - $ref: '#/components/schemas/CustomCodeSigning'
          description: A custom method for code signing a file.
      description: Describes the method to use when code signing a file.
    CodeSigningCertificateChain:
      type: object
      properties:
        certificateName:
          allOf:
          - $ref: '#/components/schemas/CertificateName'
          description: The name of the certificate.
        inlineDocument:
          allOf:
          - $ref: '#/components/schemas/InlineDocument'
          description: A base64 encoded binary representation of the code signing
            certificate chain.
      description: Describes the certificate chain being used when code signing a
        file.
    CodeSigningSignature:
      type: object
      properties:
        inlineDocument:
          allOf:
          - $ref: '#/components/schemas/Signature'
          description: A base64 encoded binary representation of the code signing
            signature.
      description: Describes the signature for a file.
    CognitoIdentityPoolId:
      type: string
    CommandArn:
      type: string
    CommandDescription:
      type: string
      pattern: ^[^\p{C}]*$
      minLength: 0
      maxLength: 2028
    CommandExecutionId:
      type: string
      pattern: ^[a-zA-Z0-9_-]+$
      minLength: 1
      maxLength: 64
    CommandExecutionParameterMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/CommandParameterValue'
    CommandExecutionResult:
      type: object
      properties:
        S:
          allOf:
          - $ref: '#/components/schemas/StringCommandExecutionResult'
          description: 'An attribute of type String. For example:


            `"S": "Hello"`'
        B:
          allOf:
          - $ref: '#/components/schemas/BooleanCommandExecutionResult'
          description: 'An attribute of type Boolean. For example:


            `"BOOL": true`'
        BIN:
          allOf:
          - $ref: '#/components/schemas/BinaryCommandExecutionResult'
          description: An attribute of type Binary.
      description: 'The result value of the command execution. The device can use
        the result field to share additional details about the execution such as a
        return value of a remote function call.


        This field is not applicable if you use the `AWS-IoT-FleetWise` namespace.'
    CommandExecutionResultMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/CommandExecutionResult'
    CommandExecutionResultName:
      type: string
      pattern: ^[a-zA-Z0-9_-]+$
      minLength: 1
      maxLength: 32
    CommandExecutionStatus:
      type: string
      enum:
      - CREATED
      - IN_PROGRESS
      - SUCCEEDED
      - FAILED
      - REJECTED
      - TIMED_OUT
    CommandExecutionSummary:
      type: object
      properties:
        commandArn:
          allOf:
          - $ref: '#/components/schemas/CommandArn'
          description: The Amazon Resource Name (ARN) of the command execution.
        executionId:
          allOf:
          - $ref: '#/components/schemas/CommandExecutionId'
          description: The unique identifier of the command execution.
        targetArn:
          allOf:
          - $ref: '#/components/schemas/TargetArn'
          description: The Amazon Resource Name (ARN) of the target device for which
            the command is being executed.
        status:
          allOf:
          - $ref: '#/components/schemas/CommandExecutionStatus'
          description: The status of the command executions.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/DateType'
          description: The date and time at which the command execution was created
            for the target device.
        startedAt:
          allOf:
          - $ref: '#/components/schemas/DateType'
          description: The date and time at which the command started executing on
            the target device.
        completedAt:
          allOf:
          - $ref: '#/components/schemas/DateType'
          description: The date and time at which the command completed executing
            on the target device.
      description: Summary information about a particular command execution.
    CommandExecutionSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/CommandExecutionSummary'
    CommandExecutionTimeoutInSeconds:
      type: integer
      format: int64
      minimum: 1
    CommandId:
      type: string
      pattern: ^[a-zA-Z0-9_-]+$
      minLength: 1
      maxLength: 64
    CommandMaxResults:
      type: integer
      minimum: 1
      maximum: 100
    CommandNamespace:
      type: string
      enum:
      - AWS-IoT
      - AWS-IoT-FleetWise
    CommandParameter:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/CommandParameterName'
          description: The name of a specific parameter used in a command and command
            execution.
        value:
          allOf:
          - $ref: '#/components/schemas/CommandParameterValue'
          description: The value used to describe the command. When you assign a value
            to a parameter, it will override any default value that you had already
            specified.
        defaultValue:
          allOf:
          - $ref: '#/components/schemas/CommandParameterValue'
          description: The default value used to describe the command. This is the
            value assumed by the parameter if no other value is assigned to it.
        description:
          allOf:
          - $ref: '#/components/schemas/CommandParameterDescription'
          description: The description of the command parameter.
      required:
      - name
      description: A map of key-value pairs that describe the command.
    CommandParameterDescription:
      type: string
      pattern: ^[^\p{C}]*$
      minLength: 0
      maxLength: 2028
    CommandParameterList:
      type: array
      items:
        $ref: '#/components/schemas/CommandParameter'
    CommandParameterName:
      type: string
      pattern: ^[.$a-zA-Z0-9_-]+$
      minLength: 1
      maxLength: 192
    CommandParameterValue:
      type: object
      properties:
        S:
          allOf:
          - $ref: '#/components/schemas/StringParameterValue'
          description: 'An attribute of type String. For example:


            `"S": "Hello"`'
        B:
          allOf:
          - $ref: '#/components/schemas/BooleanParameterValue'
          description: 'An attribute of type Boolean. For example:


            `"BOOL": true`'
        I:
          allOf:
          - $ref: '#/components/schemas/IntegerParameterValue'
          description: An attribute of type Integer (Thirty-Two Bits).
        L:
          allOf:
          - $ref: '#/components/schemas/LongParameterValue'
          description: An attribute of type Long.
        D:
          allOf:
          - $ref: '#/components/schemas/DoubleParameterValue'
          description: An attribute of type Double (Sixty-Four Bits).
        BIN:
          allOf:
          - $ref: '#/components/schemas/BinaryParameterValue'
          description: 'An attribute of type Binary. For example:


            `"B": "dGhpcyB0ZXh0IGlzIGJhc2U2NC1lbmNvZGVk"`'
        UL:
          allOf:
          - $ref: '#/components/schemas/UnsignedLongParameterValue'
          description: An attribute of type unsigned long.
      description: 'The range of possible values that''s used to describe a specific
        command parameter.


        The `commandParameterValue` can only have one of the below fields listed.'
    CommandPayload:
      type: object
      properties:
        content:
          allOf:
          - $ref: '#/components/schemas/CommandPayloadBlob'
          description: The static payload file for the command.
        contentType:
          allOf:
          - $ref: '#/components/schemas/MimeType'
          description: The content type that specifies the format type of the payload
            file. This field must use a type/subtype format, such as `application/json`.
            For information about various content types, see [Common MIME types](https://developer.mozilla.org/en-US/docs/Web/HTTP/MIME_types/Common_types).
      description: The command payload object that contains the instructions for the
        device to process.
    CommandPayloadBlob:
      type: string
      format: byte
    CommandSummary:
      type: object
      properties:
        commandArn:
          allOf:
          - $ref: '#/components/schemas/CommandArn'
          description: The Amazon Resource Name (ARN) of the command.
        commandId:
          allOf:
          - $ref: '#/components/schemas/CommandId'
          description: The unique identifier of the command.
        displayName:
          allOf:
          - $ref: '#/components/schemas/DisplayName'
          description: The display name of the command.
        deprecated:
          allOf:
          - $ref: '#/components/schemas/DeprecationFlag'
          description: Indicates whether the command has been deprecated.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/DateType'
          description: The timestamp, when the command was created.
        lastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/DateType'
          description: The timestamp, when the command was last updated.
        pendingDeletion:
          allOf:
          - $ref: '#/components/schemas/BooleanWrapperObject'
          description: Indicates whether the command is pending deletion.
      description: Summary information about a particular command resource.
    CommandSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/CommandSummary'
    Comment:
      type: string
      pattern: ^[^\p{C}]+$
      minLength: 0
      maxLength: 2028
    ComparisonOperator:
      type: string
      enum:
      - less-than
      - less-than-equals
      - greater-than
      - greater-than-equals
      - in-cidr-set
      - not-in-cidr-set
      - in-port-set
      - not-in-port-set
      - in-set
      - not-in-set
    CompliantChecksCount:
      type: integer
    ConfidenceLevel:
      type: string
      enum:
      - LOW
      - MEDIUM
      - HIGH
    ConfigName:
      type: string
      enum:
      - CERT_AGE_THRESHOLD_IN_DAYS
      - CERT_EXPIRATION_THRESHOLD_IN_DAYS
    ConfigValue:
      type: string
      minLength: 1
      maxLength: 64
    Configuration:
      type: object
      properties:
        Enabled:
          allOf:
          - $ref: '#/components/schemas/Enabled'
          description: True to enable the configuration.
      description: Configuration.
    ConfirmTopicRuleDestinationRequest:
      type: object
      properties:
        confirmationToken:
          allOf:
          - $ref: '#/components/schemas/ConfirmationToken'
          description: The token used to confirm ownership or access to the topic
            rule confirmation URL.
      required:
      - confirmationToken
    ConfirmTopicRuleDestinationResponse:
      type: object
      properties: {}
    ConfirmationToken:
      type: string
      minLength: 1
      maxLength: 2048
    ConflictException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage2'
        resourceId:
          allOf:
          - $ref: '#/components/schemas/resourceId'
          description: A resource with the same name already exists.
      description: The request conflicts with the current state of the resource.
    ConflictingResourceUpdateException:
      type: object
      properties:
        message:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage2'
          description: The message for the exception.
      description: A conflicting resource update exception. This exception is thrown
        when two pending updates cause a conflict.
    ConnectionAttributeName:
      type: string
      pattern: ^[a-zA-Z0-9:.]+$
      minLength: 0
      maxLength: 128
    ConnectivityApiThingName:
      type: string
      pattern: ^[a-zA-Z0-9:_-]+$
      minLength: 1
      maxLength: 128
    ConnectivityTimestamp:
      type: integer
      format: int64
    ConsecutiveDatapointsToAlarm:
      type: integer
      minimum: 1
      maximum: 10
    ConsecutiveDatapointsToClear:
      type: integer
      minimum: 1
      maximum: 10
    ContentType:
      type: string
      minLength: 0
      maxLength: 1024
    CorrelationData:
      type: string
      minLength: 0
      maxLength: 1024
    Count:
      type: integer
      default: 0
    CreateAuditSuppressionRequest:
      type: object
      properties:
        checkName:
          $ref: '#/components/schemas/AuditCheckName'
        resourceIdentifier:
          $ref: '#/components/schemas/ResourceIdentifier'
        expirationDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The epoch timestamp in seconds at which this suppression expires.
        suppressIndefinitely:
          allOf:
          - $ref: '#/components/schemas/SuppressIndefinitely'
          description: Indicates whether a suppression should exist indefinitely or
            not.
        description:
          allOf:
          - $ref: '#/components/schemas/AuditDescription'
          description: The description of the audit suppression.
        clientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          description: Each audit supression must have a unique client request token.
            If you try to create a new audit suppression with the same token as one
            that already exists, an exception occurs. If you omit this value, Amazon
            Web Services SDKs will automatically generate a unique client request.
      required:
      - checkName
      - resourceIdentifier
      - clientRequestToken
    CreateAuditSuppressionResponse:
      type: object
      properties: {}
    CreateAuthorizerRequest:
      type: object
      properties:
        authorizerName:
          allOf:
          - $ref: '#/components/schemas/AuthorizerName'
          description: The authorizer name.
        authorizerFunctionArn:
          allOf:
          - $ref: '#/components/schemas/AuthorizerFunctionArn'
          description: The ARN of the authorizer's Lambda function.
        tokenKeyName:
          allOf:
          - $ref: '#/components/schemas/TokenKeyName'
          description: The name of the token key used to extract the token from the
            HTTP headers.
        tokenSigningPublicKeys:
          allOf:
          - $ref: '#/components/schemas/PublicKeyMap'
          description: The public keys used to verify the digital signature returned
            by your custom authentication service.
        status:
          allOf:
          - $ref: '#/components/schemas/AuthorizerStatus'
          description: The status of the create authorizer request.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: 'Metadata which can be used to manage the custom authorizer.


            For URI Request parameters use format: ...key1=value1&key2;=value2...


            For the CLI command-line parameter use format: &&tags; "key1=value1&key2;=value2..."


            For the cli-input-json file use format: "tags": "key1=value1&key2;=value2..."'
        signingDisabled:
          allOf:
          - $ref: '#/components/schemas/BooleanKey'
          description: Specifies whether IoT validates the token signature in an authorization
            request.
        enableCachingForHttp:
          allOf:
          - $ref: '#/components/schemas/EnableCachingForHttp'
          description: 'When `true`, the result from the authorizer’s Lambda function
            is cached for clients that use persistent HTTP connections. The results
            are cached for the time specified by the Lambda function in `refreshAfterInSeconds`.
            This value does not affect authorization of clients that use MQTT connections.


            The default value is `false`.'
      required:
      - authorizerName
      - authorizerFunctionArn
    CreateAuthorizerResponse:
      type: object
      properties:
        authorizerName:
          allOf:
          - $ref: '#/components/schemas/AuthorizerName'
          description: The authorizer's name.
        authorizerArn:
          allOf:
          - $ref: '#/components/schemas/AuthorizerArn'
          description: The authorizer ARN.
    CreateBillingGroupRequest:
      type: object
      properties:
        billingGroupName:
          allOf:
          - $ref: '#/components/schemas/BillingGroupName'
          description: The name you wish to give to the billing group.
        billingGroupProperties:
          allOf:
          - $ref: '#/components/schemas/BillingGroupProperties'
          description: The properties of the billing group.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: Metadata which can be used to manage the billing group.
      required:
      - billingGroupName
    CreateBillingGroupResponse:
      type: object
      properties:
        billingGroupName:
          allOf:
          - $ref: '#/components/schemas/BillingGroupName'
          description: The name you gave to the billing group.
        billingGroupArn:
          allOf:
          - $ref: '#/components/schemas/BillingGroupArn'
          description: The ARN of the billing group.
        billingGroupId:
          allOf:
          - $ref: '#/components/schemas/BillingGroupId'
          description: The ID of the billing group.
    CreateCertificateFromCsrRequest:
      type: object
      properties:
        certificateSigningRequest:
          allOf:
          - $ref: '#/components/schemas/CertificateSigningRequest'
          description: The certificate signing request (CSR).
        setAsActive:
          allOf:
          - $ref: '#/components/schemas/SetAsActive'
          description: Specifies whether the certificate is active.
      required:
      - certificateSigningRequest
      description: The input for the CreateCertificateFromCsr operation.
    CreateCertificateFromCsrResponse:
      type: object
      properties:
        certificateArn:
          allOf:
          - $ref: '#/components/schemas/CertificateArn'
          description: The Amazon Resource Name (ARN) of the certificate. You can
            use the ARN as a principal for policy operations.
        certificateId:
          allOf:
          - $ref: '#/components/schemas/CertificateId'
          description: The ID of the certificate. Certificate management operations
            only take a certificateId.
        certificatePem:
          allOf:
          - $ref: '#/components/schemas/CertificatePem'
          description: The certificate data, in PEM format.
      description: The output from the CreateCertificateFromCsr operation.
    CreateCertificateProviderRequest:
      type: object
      properties:
        certificateProviderName:
          allOf:
          - $ref: '#/components/schemas/CertificateProviderName'
          description: The name of the certificate provider.
        lambdaFunctionArn:
          allOf:
          - $ref: '#/components/schemas/CertificateProviderFunctionArn'
          description: The ARN of the Lambda function that defines the authentication
            logic.
        accountDefaultForOperations:
          allOf:
          - $ref: '#/components/schemas/CertificateProviderAccountDefaultForOperations'
          description: 'A list of the operations that the certificate provider will
            use to generate certificates. Valid value: `CreateCertificateFromCsr`.'
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A string that you can optionally pass in the `CreateCertificateProvider`
            request to make sure the request is idempotent.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: Metadata which can be used to manage the certificate provider.
      required:
      - certificateProviderName
      - lambdaFunctionArn
      - accountDefaultForOperations
    CreateCertificateProviderResponse:
      type: object
      properties:
        certificateProviderName:
          allOf:
          - $ref: '#/components/schemas/CertificateProviderName'
          description: The name of the certificate provider.
        certificateProviderArn:
          allOf:
          - $ref: '#/components/schemas/CertificateProviderArn'
          description: The ARN of the certificate provider.
    CreateCommandRequest:
      type: object
      properties:
        commandId:
          allOf:
          - $ref: '#/components/schemas/CommandId'
          description: A unique identifier for the command. We recommend using UUID.
            Alpha-numeric characters, hyphens, and underscores are valid for use here.
        namespace:
          allOf:
          - $ref: '#/components/schemas/CommandNamespace'
          description: The namespace of the command. The MQTT reserved topics and
            validations will be used for command executions according to the namespace
            setting.
        displayName:
          allOf:
          - $ref: '#/components/schemas/DisplayName'
          description: The user-friendly name in the console for the command. This
            name doesn't have to be unique. You can update the user-friendly name
            after you define it.
        description:
          allOf:
          - $ref: '#/components/schemas/CommandDescription'
          description: A short text decription of the command.
        payload:
          allOf:
          - $ref: '#/components/schemas/CommandPayload'
          description: 'The payload object for the command. You must specify this
            information when using the `AWS-IoT` namespace.


            You can upload a static payload file from your local storage that contains
            the instructions for the device to process. The payload file can use any
            format. To make sure that the device correctly interprets the payload,
            we recommend you to specify the payload content type.'
        mandatoryParameters:
          allOf:
          - $ref: '#/components/schemas/CommandParameterList'
          description: A list of parameters that are required by the `StartCommandExecution`
            API. These parameters need to be specified only when using the `AWS-IoT-FleetWise`
            namespace. You can either specify them here or when running the command
            using the `StartCommandExecution` API.
        roleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          description: The IAM role that you must provide when using the `AWS-IoT-FleetWise`
            namespace. The role grants IoT Device Management the permission to access
            IoT FleetWise resources for generating the payload for the command. This
            field is not required when you use the `AWS-IoT` namespace.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: Name-value pairs that are used as metadata to manage a command.
      required:
      - commandId
    CreateCommandResponse:
      type: object
      properties:
        commandId:
          allOf:
          - $ref: '#/components/schemas/CommandId'
          description: The unique identifier for the command.
        commandArn:
          allOf:
          - $ref: '#/components/schemas/CommandArn'
          description: The Amazon Resource Number (ARN) of the command. For example,
            `arn:aws:iot:::command/`
    CreateCustomMetricRequest:
      type: object
      properties:
        metricName:
          allOf:
          - $ref: '#/components/schemas/MetricName'
          description: The name of the custom metric. This will be used in the metric
            report submitted from the device/thing. The name can't begin with `aws:`.
            You can't change the name after you define it.
        displayName:
          allOf:
          - $ref: '#/components/schemas/CustomMetricDisplayName'
          description: The friendly name in the console for the custom metric. This
            name doesn't have to be unique. Don't use this name as the metric identifier
            in the device metric report. You can update the friendly name after you
            define it.
        metricType:
          allOf:
          - $ref: '#/components/schemas/CustomMetricType'
          description: 'The type of the custom metric.


            The type `number` only takes a single metric value as an input, but when
            you submit the metrics value in the DeviceMetrics report, you must pass
            it as an array with a single value.'
        tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: Metadata that can be used to manage the custom metric.
        clientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          description: Each custom metric must have a unique client request token.
            If you try to create a new custom metric that already exists with a different
            token, an exception occurs. If you omit this value, Amazon Web Services
            SDKs will automatically generate a unique client request.
      required:
      - metricName
      - metricType
      - clientRequestToken
    CreateCustomMetricResponse:
      type: object
      properties:
        metricName:
          allOf:
          - $ref: '#/components/schemas/MetricName'
          description: The name of the custom metric to be used in the metric report.
        metricArn:
          allOf:
          - $ref: '#/components/schemas/CustomMetricArn'
          description: The Amazon Resource Number (ARN) of the custom metric. For
            example, `arn:_aws-partition_ :iot:_region_ :_accountId_ :custommetric/_metricName_
            `
    CreateDimensionRequest:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/DimensionName'
          description: A unique identifier for the dimension. Choose something that
            describes the type and value to make it easy to remember what it does.
        type:
          allOf:
          - $ref: '#/components/schemas/DimensionType'
          description: 'Specifies the type of dimension. Supported types: `TOPIC_FILTER.`'
        stringValues:
          allOf:
          - $ref: '#/components/schemas/DimensionStringValues'
          description: Specifies the value or list of values for the dimension. For
            `TOPIC_FILTER` dimensions, this is a pattern used to match the MQTT topic
            (for example, "admin/#").
        tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: Metadata that can be used to manage the dimension.
        clientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          description: Each dimension must have a unique client request token. If
            you try to create a new dimension with the same token as a dimension that
            already exists, an exception occurs. If you omit this value, Amazon Web
            Services SDKs will automatically generate a unique client request.
      required:
      - name
      - type
      - stringValues
      - clientRequestToken
    CreateDimensionResponse:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/DimensionName'
          description: A unique identifier for the dimension.
        arn:
          allOf:
          - $ref: '#/components/schemas/DimensionArn'
          description: The Amazon Resource Name (ARN) of the created dimension.
    CreateDomainConfigurationRequest:
      type: object
      properties:
        domainConfigurationName:
          allOf:
          - $ref: '#/components/schemas/DomainConfigurationName'
          description: The name of the domain configuration. This value must be unique
            to a region.
        domainName:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          description: The name of the domain.
        serverCertificateArns:
          allOf:
          - $ref: '#/components/schemas/ServerCertificateArns'
          description: The ARNs of the certificates that IoT passes to the device
            during the TLS handshake. Currently you can specify only one certificate
            ARN. This value is not required for Amazon Web Services-managed domains.
        validationCertificateArn:
          allOf:
          - $ref: '#/components/schemas/AcmCertificateArn'
          description: The certificate used to validate the server certificate and
            prove domain name ownership. This certificate must be signed by a public
            certificate authority. This value is not required for Amazon Web Services-managed
            domains.
        authorizerConfig:
          allOf:
          - $ref: '#/components/schemas/AuthorizerConfig'
          description: An object that specifies the authorization service for a domain.
        serviceType:
          allOf:
          - $ref: '#/components/schemas/ServiceType'
          description: 'The type of service delivered by the endpoint.


            Amazon Web Services IoT Core currently supports only the `DATA` service
            type.'
        tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: 'Metadata which can be used to manage the domain configuration.


            For URI Request parameters use format: ...key1=value1&key2;=value2...


            For the CLI command-line parameter use format: &&tags; "key1=value1&key2;=value2..."


            For the cli-input-json file use format: "tags": "key1=value1&key2;=value2..."'
        tlsConfig:
          allOf:
          - $ref: '#/components/schemas/TlsConfig'
          description: An object that specifies the TLS configuration for a domain.
        serverCertificateConfig:
          allOf:
          - $ref: '#/components/schemas/ServerCertificateConfig'
          description: The server certificate configuration.
        authenticationType:
          allOf:
          - $ref: '#/components/schemas/AuthenticationType'
          description: "An enumerated string that speciﬁes the authentication type.\n\
            \n  * `CUSTOM_AUTH_X509` \\- Use custom authentication and authorization\
            \ with additional details from the X.509 client certificate.\n\n  * `CUSTOM_AUTH`\
            \ \\- Use custom authentication and authorization. For more information,\
            \ see [Custom authentication and authorization](https://docs.aws.amazon.com/iot/latest/developerguide/custom-authentication.html).\n\
            \n  * `AWS_X509` \\- Use X.509 client certificates without custom authentication\
            \ and authorization. For more information, see [X.509 client certificates](https://docs.aws.amazon.com/iot/latest/developerguide/x509-client-certs.html).\n\
            \n  * `AWS_SIGV4` \\- Use Amazon Web Services Signature Version 4. For\
            \ more information, see [IAM users, groups, and roles](https://docs.aws.amazon.com/iot/latest/developerguide/custom-authentication.html).\n\
            \n  * `DEFAULT` \\- Use a combination of port and Application Layer Protocol\
            \ Negotiation (ALPN) to specify authentication type. For more information,\
            \ see [Device communication protocols](https://docs.aws.amazon.com/iot/latest/developerguide/protocols.html)."
        applicationProtocol:
          allOf:
          - $ref: '#/components/schemas/ApplicationProtocol'
          description: "An enumerated string that speciﬁes the application-layer protocol.\n\
            \n  * `SECURE_MQTT` \\- MQTT over TLS.\n\n  * `MQTT_WSS` \\- MQTT over\
            \ WebSocket.\n\n  * `HTTPS` \\- HTTP over TLS.\n\n  * `DEFAULT` \\- Use\
            \ a combination of port and Application Layer Protocol Negotiation (ALPN)\
            \ to specify application_layer protocol. For more information, see [Device\
            \ communication protocols](https://docs.aws.amazon.com/iot/latest/developerguide/protocols.html)."
        clientCertificateConfig:
          allOf:
          - $ref: '#/components/schemas/ClientCertificateConfig'
          description: An object that speciﬁes the client certificate conﬁguration
            for a domain.
      required:
      - domainConfigurationName
    CreateDomainConfigurationResponse:
      type: object
      properties:
        domainConfigurationName:
          allOf:
          - $ref: '#/components/schemas/DomainConfigurationName'
          description: The name of the domain configuration.
        domainConfigurationArn:
          allOf:
          - $ref: '#/components/schemas/DomainConfigurationArn'
          description: The ARN of the domain configuration.
    CreateDynamicThingGroupRequest:
      type: object
      properties:
        thingGroupName:
          allOf:
          - $ref: '#/components/schemas/ThingGroupName'
          description: The dynamic thing group name to create.
        thingGroupProperties:
          allOf:
          - $ref: '#/components/schemas/ThingGroupProperties'
          description: The dynamic thing group properties.
        indexName:
          allOf:
          - $ref: '#/components/schemas/IndexName'
          description: 'The dynamic thing group index name.


            Currently one index is supported: `AWS_Things`.'
        queryString:
          allOf:
          - $ref: '#/components/schemas/QueryString'
          description: 'The dynamic thing group search query string.


            See [Query Syntax](https://docs.aws.amazon.com/iot/latest/developerguide/query-syntax.html)
            for information about query string syntax.'
        queryVersion:
          allOf:
          - $ref: '#/components/schemas/QueryVersion'
          description: 'The dynamic thing group query version.


            Currently one query version is supported: "2017-09-30". If not specified,
            the query version defaults to this value.'
        tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: Metadata which can be used to manage the dynamic thing group.
      required:
      - thingGroupName
      - queryString
    CreateDynamicThingGroupResponse:
      type: object
      properties:
        thingGroupName:
          allOf:
          - $ref: '#/components/schemas/ThingGroupName'
          description: The dynamic thing group name.
        thingGroupArn:
          allOf:
          - $ref: '#/components/schemas/ThingGroupArn'
          description: The dynamic thing group ARN.
        thingGroupId:
          allOf:
          - $ref: '#/components/schemas/ThingGroupId'
          description: The dynamic thing group ID.
        indexName:
          allOf:
          - $ref: '#/components/schemas/IndexName'
          description: The dynamic thing group index name.
        queryString:
          allOf:
          - $ref: '#/components/schemas/QueryString'
          description: The dynamic thing group search query string.
        queryVersion:
          allOf:
          - $ref: '#/components/schemas/QueryVersion'
          description: The dynamic thing group query version.
    CreateFleetMetricRequest:
      type: object
      properties:
        metricName:
          allOf:
          - $ref: '#/components/schemas/FleetMetricName'
          description: The name of the fleet metric to create.
        queryString:
          allOf:
          - $ref: '#/components/schemas/QueryString'
          description: The search query string.
        aggregationType:
          allOf:
          - $ref: '#/components/schemas/AggregationType'
          description: The type of the aggregation query.
        period:
          allOf:
          - $ref: '#/components/schemas/FleetMetricPeriod'
          description: The time in seconds between fleet metric emissions. Range [60(1
            min), 86400(1 day)] and must be multiple of 60.
        aggregationField:
          allOf:
          - $ref: '#/components/schemas/AggregationField'
          description: The field to aggregate.
        description:
          allOf:
          - $ref: '#/components/schemas/FleetMetricDescription'
          description: The fleet metric description.
        queryVersion:
          allOf:
          - $ref: '#/components/schemas/QueryVersion'
          description: The query version.
        indexName:
          allOf:
          - $ref: '#/components/schemas/IndexName'
          description: The name of the index to search.
        unit:
          allOf:
          - $ref: '#/components/schemas/FleetMetricUnit'
          description: Used to support unit transformation such as milliseconds to
            seconds. The unit must be supported by [CW metric](https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_MetricDatum.html).
            Default to null.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: Metadata, which can be used to manage the fleet metric.
      required:
      - metricName
      - queryString
      - aggregationType
      - period
      - aggregationField
    CreateFleetMetricResponse:
      type: object
      properties:
        metricName:
          allOf:
          - $ref: '#/components/schemas/FleetMetricName'
          description: The name of the fleet metric to create.
        metricArn:
          allOf:
          - $ref: '#/components/schemas/FleetMetricArn'
          description: The Amazon Resource Name (ARN) of the new fleet metric.
    CreateJobRequest:
      type: object
      properties:
        jobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          description: A job identifier which must be unique for your account. We
            recommend using a UUID. Alpha-numeric characters, "-" and "_" are valid
            for use here.
        targets:
          allOf:
          - $ref: '#/components/schemas/JobTargets'
          description: A list of things and thing groups to which the job should be
            sent.
        documentSource:
          allOf:
          - $ref: '#/components/schemas/JobDocumentSource'
          description: 'An S3 link, or S3 object URL, to the job document. The link
            is an Amazon S3 object URL and is required if you don''t specify a value
            for `document`.


            For example, `--document-source https://s3._region-code_.amazonaws.com/example-firmware/device-firmware.1.0`


            For more information, see [Methods for accessing a bucket](https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-bucket-intro.html).'
        document:
          allOf:
          - $ref: '#/components/schemas/JobDocument'
          description: The job document. Required if you don't specify a value for
            `documentSource`.
        description:
          allOf:
          - $ref: '#/components/schemas/JobDescription'
          description: A short text description of the job.
        presignedUrlConfig:
          allOf:
          - $ref: '#/components/schemas/PresignedUrlConfig'
          description: Configuration information for pre-signed S3 URLs.
        targetSelection:
          allOf:
          - $ref: '#/components/schemas/TargetSelection'
          description: 'Specifies whether the job will continue to run (CONTINUOUS),
            or will be complete after all those things specified as targets have completed
            the job (SNAPSHOT). If continuous, the job may also be run on a thing
            when a change is detected in a target. For example, a job will run on
            a thing when the thing is added to a target group, even after the job
            was completed by all things originally in the group.


            We recommend that you use continuous jobs instead of snapshot jobs for
            dynamic thing group targets. By using continuous jobs, devices that join
            the group receive the job execution even after the job has been created.'
        jobExecutionsRolloutConfig:
          allOf:
          - $ref: '#/components/schemas/JobExecutionsRolloutConfig'
          description: Allows you to create a staged rollout of the job.
        abortConfig:
          allOf:
          - $ref: '#/components/schemas/AbortConfig'
          description: Allows you to create the criteria to abort a job.
        timeoutConfig:
          allOf:
          - $ref: '#/components/schemas/TimeoutConfig'
          description: Specifies the amount of time each device has to finish its
            execution of the job. The timer is started when the job execution status
            is set to `IN_PROGRESS`. If the job execution status is not set to another
            terminal state before the time expires, it will be automatically set to
            `TIMED_OUT`.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: Metadata which can be used to manage the job.
        namespaceId:
          allOf:
          - $ref: '#/components/schemas/NamespaceId'
          description: 'The namespace used to indicate that a job is a customer-managed
            job.


            When you specify a value for this parameter, Amazon Web Services IoT Core
            sends jobs notifications to MQTT topics that contain the value in the
            following format.


            `$aws/things/_THING_NAME_ /jobs/_JOB_ID_ /notify-namespace-_NAMESPACE_ID_
            /`


            The `namespaceId` feature is only supported by IoT Greengrass at this
            time. For more information, see [Setting up IoT Greengrass core devices.](https://docs.aws.amazon.com/greengrass/v2/developerguide/setting-up.html)'
        jobTemplateArn:
          allOf:
          - $ref: '#/components/schemas/JobTemplateArn'
          description: The ARN of the job template used to create the job.
        jobExecutionsRetryConfig:
          allOf:
          - $ref: '#/components/schemas/JobExecutionsRetryConfig'
          description: Allows you to create the criteria to retry a job.
        documentParameters:
          allOf:
          - $ref: '#/components/schemas/ParameterMap'
          description: 'Parameters of an Amazon Web Services managed template that
            you can specify to create the job document.


            `documentParameters` can only be used when creating jobs from Amazon Web
            Services managed templates. This parameter can''t be used with custom
            job templates or to create jobs from them.'
        schedulingConfig:
          allOf:
          - $ref: '#/components/schemas/SchedulingConfig'
          description: The configuration that allows you to schedule a job for a future
            date and time in addition to specifying the end behavior for each job
            execution.
        destinationPackageVersions:
          allOf:
          - $ref: '#/components/schemas/DestinationPackageVersions'
          description: 'The package version Amazon Resource Names (ARNs) that are
            installed on the device when the job successfully completes. The package
            version must be in either the Published or Deprecated state when the job
            deploys. For more information, see [Package version lifecycle](https://docs.aws.amazon.com/iot/latest/developerguide/preparing-to-use-software-package-catalog.html#package-version-lifecycle).


            **Note:** The following Length Constraints relates to a single ARN. Up
            to 25 package version ARNs are allowed.'
      required:
      - jobId
      - targets
    CreateJobResponse:
      type: object
      properties:
        jobArn:
          allOf:
          - $ref: '#/components/schemas/JobArn'
          description: The job ARN.
        jobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          description: The unique identifier you assigned to this job.
        description:
          allOf:
          - $ref: '#/components/schemas/JobDescription'
          description: The job description.
    CreateJobTemplateRequest:
      type: object
      properties:
        jobTemplateId:
          allOf:
          - $ref: '#/components/schemas/JobTemplateId'
          description: A unique identifier for the job template. We recommend using
            a UUID. Alpha-numeric characters, "-", and "_" are valid for use here.
        jobArn:
          allOf:
          - $ref: '#/components/schemas/JobArn'
          description: The ARN of the job to use as the basis for the job template.
        documentSource:
          allOf:
          - $ref: '#/components/schemas/JobDocumentSource'
          description: 'An S3 link, or S3 object URL, to the job document. The link
            is an Amazon S3 object URL and is required if you don''t specify a value
            for `document`.


            For example, `--document-source https://s3._region-code_.amazonaws.com/example-firmware/device-firmware.1.0`


            For more information, see [Methods for accessing a bucket](https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-bucket-intro.html).'
        document:
          allOf:
          - $ref: '#/components/schemas/JobDocument'
          description: The job document. Required if you don't specify a value for
            `documentSource`.
        description:
          allOf:
          - $ref: '#/components/schemas/JobDescription'
          description: A description of the job document.
        presignedUrlConfig:
          $ref: '#/components/schemas/PresignedUrlConfig'
        jobExecutionsRolloutConfig:
          $ref: '#/components/schemas/JobExecutionsRolloutConfig'
        abortConfig:
          $ref: '#/components/schemas/AbortConfig'
        timeoutConfig:
          $ref: '#/components/schemas/TimeoutConfig'
        tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: Metadata that can be used to manage the job template.
        jobExecutionsRetryConfig:
          allOf:
          - $ref: '#/components/schemas/JobExecutionsRetryConfig'
          description: Allows you to create the criteria to retry a job.
        maintenanceWindows:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindows'
          description: Allows you to configure an optional maintenance window for
            the rollout of a job document to all devices in the target group for a
            job.
        destinationPackageVersions:
          allOf:
          - $ref: '#/components/schemas/DestinationPackageVersions'
          description: 'The package version Amazon Resource Names (ARNs) that are
            installed on the device when the job successfully completes. The package
            version must be in either the Published or Deprecated state when the job
            deploys. For more information, see [Package version lifecycle](https://docs.aws.amazon.com/iot/latest/developerguide/preparing-to-use-software-package-catalog.html#package-version-lifecycle).


            **Note:** The following Length Constraints relates to a single ARN. Up
            to 25 package version ARNs are allowed.'
      required:
      - jobTemplateId
      - description
    CreateJobTemplateResponse:
      type: object
      properties:
        jobTemplateArn:
          allOf:
          - $ref: '#/components/schemas/JobTemplateArn'
          description: The ARN of the job template.
        jobTemplateId:
          allOf:
          - $ref: '#/components/schemas/JobTemplateId'
          description: The unique identifier of the job template.
    CreateKeysAndCertificateRequest:
      type: object
      properties:
        setAsActive:
          allOf:
          - $ref: '#/components/schemas/SetAsActive'
          description: Specifies whether the certificate is active.
      description: 'The input for the CreateKeysAndCertificate operation.


        Requires permission to access the [CreateKeysAndCertificateRequest](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions)
        action.'
    CreateKeysAndCertificateResponse:
      type: object
      properties:
        certificateArn:
          allOf:
          - $ref: '#/components/schemas/CertificateArn'
          description: The ARN of the certificate.
        certificateId:
          allOf:
          - $ref: '#/components/schemas/CertificateId'
          description: The ID of the certificate. IoT issues a default subject name
            for the certificate (for example, IoT Certificate).
        certificatePem:
          allOf:
          - $ref: '#/components/schemas/CertificatePem'
          description: The certificate data, in PEM format.
        keyPair:
          allOf:
          - $ref: '#/components/schemas/KeyPair'
          description: The generated key pair.
      description: The output of the CreateKeysAndCertificate operation.
    CreateMitigationActionRequest:
      type: object
      properties:
        actionName:
          allOf:
          - $ref: '#/components/schemas/MitigationActionName'
          description: A friendly name for the action. Choose a friendly name that
            accurately describes the action (for example, `EnableLoggingAction`).
        roleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          description: The ARN of the IAM role that is used to apply the mitigation
            action.
        actionParams:
          allOf:
          - $ref: '#/components/schemas/MitigationActionParams'
          description: Defines the type of action and the parameters for that action.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: Metadata that can be used to manage the mitigation action.
      required:
      - actionName
      - roleArn
      - actionParams
    CreateMitigationActionResponse:
      type: object
      properties:
        actionArn:
          allOf:
          - $ref: '#/components/schemas/MitigationActionArn'
          description: The ARN for the new mitigation action.
        actionId:
          allOf:
          - $ref: '#/components/schemas/MitigationActionId'
          description: A unique identifier for the new mitigation action.
    CreateOTAUpdateRequest:
      type: object
      properties:
        otaUpdateId:
          allOf:
          - $ref: '#/components/schemas/OTAUpdateId'
          description: The ID of the OTA update to be created.
        description:
          allOf:
          - $ref: '#/components/schemas/OTAUpdateDescription'
          description: The description of the OTA update.
        targets:
          allOf:
          - $ref: '#/components/schemas/Targets'
          description: The devices targeted to receive OTA updates.
        protocols:
          allOf:
          - $ref: '#/components/schemas/Protocols'
          description: The protocol used to transfer the OTA update image. Valid values
            are [HTTP], [MQTT], [HTTP, MQTT]. When both HTTP and MQTT are specified,
            the target device can choose the protocol.
        targetSelection:
          allOf:
          - $ref: '#/components/schemas/TargetSelection'
          description: 'Specifies whether the update will continue to run (CONTINUOUS),
            or will be complete after all the things specified as targets have completed
            the update (SNAPSHOT). If continuous, the update may also be run on a
            thing when a change is detected in a target. For example, an update will
            run on a thing when the thing is added to a target group, even after the
            update was completed by all things originally in the group. Valid values:
            CONTINUOUS | SNAPSHOT.'
        awsJobExecutionsRolloutConfig:
          allOf:
          - $ref: '#/components/schemas/AwsJobExecutionsRolloutConfig'
          description: Configuration for the rollout of OTA updates.
        awsJobPresignedUrlConfig:
          allOf:
          - $ref: '#/components/schemas/AwsJobPresignedUrlConfig'
          description: Configuration information for pre-signed URLs.
        awsJobAbortConfig:
          allOf:
          - $ref: '#/components/schemas/AwsJobAbortConfig'
          description: The criteria that determine when and how a job abort takes
            place.
        awsJobTimeoutConfig:
          allOf:
          - $ref: '#/components/schemas/AwsJobTimeoutConfig'
          description: Specifies the amount of time each device has to finish its
            execution of the job. A timer is started when the job execution status
            is set to `IN_PROGRESS`. If the job execution status is not set to another
            terminal state before the timer expires, it will be automatically set
            to `TIMED_OUT`.
        files:
          allOf:
          - $ref: '#/components/schemas/OTAUpdateFiles'
          description: The files to be streamed by the OTA update.
        roleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          description: The IAM role that grants Amazon Web Services IoT Core access
            to the Amazon S3, IoT jobs and Amazon Web Services Code Signing resources
            to create an OTA update job.
        additionalParameters:
          allOf:
          - $ref: '#/components/schemas/AdditionalParameterMap'
          description: A list of additional OTA update parameters, which are name-value
            pairs. They won't be sent to devices as a part of the Job document.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: Metadata which can be used to manage updates.
      required:
      - otaUpdateId
      - targets
      - files
      - roleArn
    CreateOTAUpdateResponse:
      type: object
      properties:
        otaUpdateId:
          allOf:
          - $ref: '#/components/schemas/OTAUpdateId'
          description: The OTA update ID.
        awsIotJobId:
          allOf:
          - $ref: '#/components/schemas/AwsIotJobId'
          description: The IoT job ID associated with the OTA update.
        otaUpdateArn:
          allOf:
          - $ref: '#/components/schemas/OTAUpdateArn'
          description: The OTA update ARN.
        awsIotJobArn:
          allOf:
          - $ref: '#/components/schemas/AwsIotJobArn'
          description: The IoT job ARN associated with the OTA update.
        otaUpdateStatus:
          allOf:
          - $ref: '#/components/schemas/OTAUpdateStatus'
          description: The OTA update status.
    CreatePackageRequest:
      type: object
      properties:
        packageName:
          allOf:
          - $ref: '#/components/schemas/PackageName'
          description: The name of the new software package.
        description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          description: A summary of the package being created. This can be used to
            outline the package's contents or purpose.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: Metadata that can be used to manage the package.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique case-sensitive identifier that you can provide to
            ensure the idempotency of the request. Don't reuse this client token if
            a new idempotent request is required.
      required:
      - packageName
    CreatePackageResponse:
      type: object
      properties:
        packageName:
          allOf:
          - $ref: '#/components/schemas/PackageName'
          description: The name of the software package.
        packageArn:
          allOf:
          - $ref: '#/components/schemas/PackageArn'
          description: The Amazon Resource Name (ARN) for the package.
        description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          description: The package description.
    CreatePackageVersionRequest:
      type: object
      properties:
        packageName:
          allOf:
          - $ref: '#/components/schemas/PackageName'
          description: The name of the associated software package.
        versionName:
          allOf:
          - $ref: '#/components/schemas/VersionName'
          description: The name of the new package version.
        description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          description: A summary of the package version being created. This can be
            used to outline the package's contents or purpose.
        attributes:
          allOf:
          - $ref: '#/components/schemas/ResourceAttributes'
          description: 'Metadata that can be used to define a package version’s configuration.
            For example, the S3 file location, configuration options that are being
            sent to the device or fleet.


            The combined size of all the attributes on a package version is limited
            to 3KB.'
        artifact:
          allOf:
          - $ref: '#/components/schemas/PackageVersionArtifact'
          description: The various build components created during the build process
            such as libraries and configuration files that make up a software package
            version.
        recipe:
          allOf:
          - $ref: '#/components/schemas/PackageVersionRecipe'
          description: The inline job document associated with a software package
            version used for a quick job deployment.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: Metadata that can be used to manage the package version.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique case-sensitive identifier that you can provide to
            ensure the idempotency of the request. Don't reuse this client token if
            a new idempotent request is required.
      required:
      - packageName
      - versionName
    CreatePackageVersionResponse:
      type: object
      properties:
        packageVersionArn:
          allOf:
          - $ref: '#/components/schemas/PackageVersionArn'
          description: The Amazon Resource Name (ARN) for the package.
        packageName:
          allOf:
          - $ref: '#/components/schemas/PackageName'
          description: The name of the associated software package.
        versionName:
          allOf:
          - $ref: '#/components/schemas/VersionName'
          description: The name of the new package version.
        description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          description: The package version description.
        attributes:
          allOf:
          - $ref: '#/components/schemas/ResourceAttributes'
          description: Metadata that were added to the package version that can be
            used to define a package version’s configuration.
        status:
          allOf:
          - $ref: '#/components/schemas/PackageVersionStatus'
          description: The status of the package version. For more information, see
            [Package version lifecycle](https://docs.aws.amazon.com/iot/latest/developerguide/preparing-to-use-software-package-catalog.html#package-version-lifecycle).
        errorReason:
          allOf:
          - $ref: '#/components/schemas/PackageVersionErrorReason'
          description: Error reason for a package version failure during creation
            or update.
    CreatePolicyRequest:
      type: object
      properties:
        policyName:
          allOf:
          - $ref: '#/components/schemas/PolicyName'
          description: The policy name.
        policyDocument:
          allOf:
          - $ref: '#/components/schemas/PolicyDocument'
          description: The JSON document that describes the policy. **policyDocument**
            must have a minimum length of 1, with a maximum length of 2048, excluding
            whitespace.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: 'Metadata which can be used to manage the policy.


            For URI Request parameters use format: ...key1=value1&key2;=value2...


            For the CLI command-line parameter use format: &&tags; "key1=value1&key2;=value2..."


            For the cli-input-json file use format: "tags": "key1=value1&key2;=value2..."'
      required:
      - policyName
      - policyDocument
      description: The input for the CreatePolicy operation.
    CreatePolicyResponse:
      type: object
      properties:
        policyName:
          allOf:
          - $ref: '#/components/schemas/PolicyName'
          description: The policy name.
        policyArn:
          allOf:
          - $ref: '#/components/schemas/PolicyArn'
          description: The policy ARN.
        policyDocument:
          allOf:
          - $ref: '#/components/schemas/PolicyDocument'
          description: The JSON document that describes the policy.
        policyVersionId:
          allOf:
          - $ref: '#/components/schemas/PolicyVersionId'
          description: The policy version ID.
      description: The output from the CreatePolicy operation.
    CreatePolicyVersionRequest:
      type: object
      properties:
        policyName:
          allOf:
          - $ref: '#/components/schemas/PolicyName'
          description: The policy name.
        policyDocument:
          allOf:
          - $ref: '#/components/schemas/PolicyDocument'
          description: The JSON document that describes the policy. Minimum length
            of 1. Maximum length of 2048, excluding whitespace.
        setAsDefault:
          allOf:
          - $ref: '#/components/schemas/SetAsDefault'
          description: Specifies whether the policy version is set as the default.
            When this parameter is true, the new policy version becomes the operative
            version (that is, the version that is in effect for the certificates to
            which the policy is attached).
      required:
      - policyName
      - policyDocument
      description: The input for the CreatePolicyVersion operation.
    CreatePolicyVersionResponse:
      type: object
      properties:
        policyArn:
          allOf:
          - $ref: '#/components/schemas/PolicyArn'
          description: The policy ARN.
        policyDocument:
          allOf:
          - $ref: '#/components/schemas/PolicyDocument'
          description: The JSON document that describes the policy.
        policyVersionId:
          allOf:
          - $ref: '#/components/schemas/PolicyVersionId'
          description: The policy version ID.
        isDefaultVersion:
          allOf:
          - $ref: '#/components/schemas/IsDefaultVersion'
          description: Specifies whether the policy version is the default.
      description: The output of the CreatePolicyVersion operation.
    CreateProvisioningClaimRequest:
      type: object
      properties:
        templateName:
          allOf:
          - $ref: '#/components/schemas/TemplateName'
          description: The name of the provisioning template to use.
      required:
      - templateName
    CreateProvisioningClaimResponse:
      type: object
      properties:
        certificateId:
          allOf:
          - $ref: '#/components/schemas/CertificateId'
          description: The ID of the certificate.
        certificatePem:
          allOf:
          - $ref: '#/components/schemas/CertificatePem'
          description: The provisioning claim certificate.
        keyPair:
          allOf:
          - $ref: '#/components/schemas/KeyPair'
          description: The provisioning claim key pair.
        expiration:
          allOf:
          - $ref: '#/components/schemas/DateType'
          description: The provisioning claim expiration time.
    CreateProvisioningTemplateRequest:
      type: object
      properties:
        templateName:
          allOf:
          - $ref: '#/components/schemas/TemplateName'
          description: The name of the provisioning template.
        description:
          allOf:
          - $ref: '#/components/schemas/TemplateDescription'
          description: The description of the provisioning template.
        templateBody:
          allOf:
          - $ref: '#/components/schemas/TemplateBody'
          description: The JSON formatted contents of the provisioning template.
        enabled:
          allOf:
          - $ref: '#/components/schemas/Enabled2'
          description: True to enable the provisioning template, otherwise false.
        provisioningRoleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          description: The role ARN for the role associated with the provisioning
            template. This IoT role grants permission to provision a device.
        preProvisioningHook:
          allOf:
          - $ref: '#/components/schemas/ProvisioningHook'
          description: Creates a pre-provisioning hook template. Only supports template
            of type `FLEET_PROVISIONING`. For more information about provisioning
            template types, see [type](https://docs.aws.amazon.com/iot/latest/apireference/API_CreateProvisioningTemplate.html#iot-CreateProvisioningTemplate-request-type).
        tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: 'Metadata which can be used to manage the provisioning template.


            For URI Request parameters use format: ...key1=value1&key2;=value2...


            For the CLI command-line parameter use format: &&tags; "key1=value1&key2;=value2..."


            For the cli-input-json file use format: "tags": "key1=value1&key2;=value2..."'
        type:
          allOf:
          - $ref: '#/components/schemas/TemplateType'
          description: 'The type you define in a provisioning template. You can create
            a template with only one type. You can''t change the template type after
            its creation. The default value is `FLEET_PROVISIONING`. For more information
            about provisioning template, see: [Provisioning template](https://docs.aws.amazon.com/iot/latest/developerguide/provision-template.html).'
      required:
      - templateName
      - templateBody
      - provisioningRoleArn
    CreateProvisioningTemplateResponse:
      type: object
      properties:
        templateArn:
          allOf:
          - $ref: '#/components/schemas/TemplateArn'
          description: The ARN that identifies the provisioning template.
        templateName:
          allOf:
          - $ref: '#/components/schemas/TemplateName'
          description: The name of the provisioning template.
        defaultVersionId:
          allOf:
          - $ref: '#/components/schemas/TemplateVersionId'
          description: The default version of the provisioning template.
    CreateProvisioningTemplateVersionRequest:
      type: object
      properties:
        templateName:
          allOf:
          - $ref: '#/components/schemas/TemplateName'
          description: The name of the provisioning template.
        templateBody:
          allOf:
          - $ref: '#/components/schemas/TemplateBody'
          description: The JSON formatted contents of the provisioning template.
        setAsDefault:
          allOf:
          - $ref: '#/components/schemas/SetAsDefault'
          description: Sets a fleet provision template version as the default version.
      required:
      - templateName
      - templateBody
    CreateProvisioningTemplateVersionResponse:
      type: object
      properties:
        templateArn:
          allOf:
          - $ref: '#/components/schemas/TemplateArn'
          description: The ARN that identifies the provisioning template.
        templateName:
          allOf:
          - $ref: '#/components/schemas/TemplateName'
          description: The name of the provisioning template.
        versionId:
          allOf:
          - $ref: '#/components/schemas/TemplateVersionId'
          description: The version of the provisioning template.
        isDefaultVersion:
          allOf:
          - $ref: '#/components/schemas/IsDefaultVersion'
          description: True if the provisioning template version is the default version,
            otherwise false.
    CreateRoleAliasRequest:
      type: object
      properties:
        roleAlias:
          allOf:
          - $ref: '#/components/schemas/RoleAlias'
          description: The role alias that points to a role ARN. This allows you to
            change the role without having to update the device.
        roleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          description: The role ARN.
        credentialDurationSeconds:
          allOf:
          - $ref: '#/components/schemas/CredentialDurationSeconds'
          description: 'How long (in seconds) the credentials will be valid. The default
            value is 3,600 seconds.


            This value must be less than or equal to the maximum session duration
            of the IAM role that the role alias references.'
        tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: 'Metadata which can be used to manage the role alias.


            For URI Request parameters use format: ...key1=value1&key2;=value2...


            For the CLI command-line parameter use format: &&tags; "key1=value1&key2;=value2..."


            For the cli-input-json file use format: "tags": "key1=value1&key2;=value2..."'
      required:
      - roleAlias
      - roleArn
    CreateRoleAliasResponse:
      type: object
      properties:
        roleAlias:
          allOf:
          - $ref: '#/components/schemas/RoleAlias'
          description: The role alias.
        roleAliasArn:
          allOf:
          - $ref: '#/components/schemas/RoleAliasArn'
          description: The role alias ARN.
    CreateScheduledAuditRequest:
      type: object
      properties:
        frequency:
          allOf:
          - $ref: '#/components/schemas/AuditFrequency'
          description: How often the scheduled audit takes place, either `DAILY`,
            `WEEKLY`, `BIWEEKLY` or `MONTHLY`. The start time of each audit is determined
            by the system.
        dayOfMonth:
          allOf:
          - $ref: '#/components/schemas/DayOfMonth'
          description: The day of the month on which the scheduled audit takes place.
            This can be "1" through "31" or "LAST". This field is required if the
            "frequency" parameter is set to `MONTHLY`. If days 29 to 31 are specified,
            and the month doesn't have that many days, the audit takes place on the
            `LAST` day of the month.
        dayOfWeek:
          allOf:
          - $ref: '#/components/schemas/DayOfWeek'
          description: The day of the week on which the scheduled audit takes place,
            either `SUN`, `MON`, `TUE`, `WED`, `THU`, `FRI`, or `SAT`. This field
            is required if the `frequency` parameter is set to `WEEKLY` or `BIWEEKLY`.
        targetCheckNames:
          allOf:
          - $ref: '#/components/schemas/TargetAuditCheckNames'
          description: Which checks are performed during the scheduled audit. Checks
            must be enabled for your account. (Use `DescribeAccountAuditConfiguration`
            to see the list of all checks, including those that are enabled or use
            `UpdateAccountAuditConfiguration` to select which checks are enabled.)
        scheduledAuditName:
          allOf:
          - $ref: '#/components/schemas/ScheduledAuditName'
          description: The name you want to give to the scheduled audit. (Max. 128
            chars)
        tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: Metadata that can be used to manage the scheduled audit.
      required:
      - frequency
      - targetCheckNames
      - scheduledAuditName
    CreateScheduledAuditResponse:
      type: object
      properties:
        scheduledAuditArn:
          allOf:
          - $ref: '#/components/schemas/ScheduledAuditArn'
          description: The ARN of the scheduled audit.
    CreateSecurityProfileRequest:
      type: object
      properties:
        securityProfileName:
          allOf:
          - $ref: '#/components/schemas/SecurityProfileName'
          description: The name you are giving to the security profile.
        securityProfileDescription:
          allOf:
          - $ref: '#/components/schemas/SecurityProfileDescription'
          description: A description of the security profile.
        behaviors:
          allOf:
          - $ref: '#/components/schemas/Behaviors'
          description: Specifies the behaviors that, when violated by a device (thing),
            cause an alert.
        alertTargets:
          allOf:
          - $ref: '#/components/schemas/AlertTargets'
          description: Specifies the destinations to which alerts are sent. (Alerts
            are always sent to the console.) Alerts are generated when a device (thing)
            violates a behavior.
        additionalMetricsToRetain:
          allOf:
          - $ref: '#/components/schemas/AdditionalMetricsToRetainList'
          description: '_Please useCreateSecurityProfileRequest$additionalMetricsToRetainV2
            instead._


            A list of metrics whose data is retained (stored). By default, data is
            retained for any metric used in the profile''s `behaviors`, but it is
            also retained for any metric specified here. Can be used with custom metrics;
            cannot be used with dimensions.'
        additionalMetricsToRetainV2:
          allOf:
          - $ref: '#/components/schemas/AdditionalMetricsToRetainV2List'
          description: A list of metrics whose data is retained (stored). By default,
            data is retained for any metric used in the profile's `behaviors`, but
            it is also retained for any metric specified here. Can be used with custom
            metrics; cannot be used with dimensions.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: Metadata that can be used to manage the security profile.
        metricsExportConfig:
          allOf:
          - $ref: '#/components/schemas/MetricsExportConfig'
          description: Specifies the MQTT topic and role ARN required for metric export.
      required:
      - securityProfileName
    CreateSecurityProfileResponse:
      type: object
      properties:
        securityProfileName:
          allOf:
          - $ref: '#/components/schemas/SecurityProfileName'
          description: The name you gave to the security profile.
        securityProfileArn:
          allOf:
          - $ref: '#/components/schemas/SecurityProfileArn'
          description: The ARN of the security profile.
    CreateStreamRequest:
      type: object
      properties:
        streamId:
          allOf:
          - $ref: '#/components/schemas/StreamId'
          description: The stream ID.
        description:
          allOf:
          - $ref: '#/components/schemas/StreamDescription'
          description: A description of the stream.
        files:
          allOf:
          - $ref: '#/components/schemas/StreamFiles'
          description: The files to stream.
        roleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          description: An IAM role that allows the IoT service principal to access
            your S3 files.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: Metadata which can be used to manage streams.
      required:
      - streamId
      - files
      - roleArn
    CreateStreamResponse:
      type: object
      properties:
        streamId:
          allOf:
          - $ref: '#/components/schemas/StreamId'
          description: The stream ID.
        streamArn:
          allOf:
          - $ref: '#/components/schemas/StreamArn'
          description: The stream ARN.
        description:
          allOf:
          - $ref: '#/components/schemas/StreamDescription'
          description: A description of the stream.
        streamVersion:
          allOf:
          - $ref: '#/components/schemas/StreamVersion'
          description: The version of the stream.
    CreateThingGroupRequest:
      type: object
      properties:
        thingGroupName:
          allOf:
          - $ref: '#/components/schemas/ThingGroupName'
          description: The thing group name to create.
        parentGroupName:
          allOf:
          - $ref: '#/components/schemas/ThingGroupName'
          description: The name of the parent thing group.
        thingGroupProperties:
          allOf:
          - $ref: '#/components/schemas/ThingGroupProperties'
          description: The thing group properties.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: Metadata which can be used to manage the thing group.
      required:
      - thingGroupName
    CreateThingGroupResponse:
      type: object
      properties:
        thingGroupName:
          allOf:
          - $ref: '#/components/schemas/ThingGroupName'
          description: The thing group name.
        thingGroupArn:
          allOf:
          - $ref: '#/components/schemas/ThingGroupArn'
          description: The thing group ARN.
        thingGroupId:
          allOf:
          - $ref: '#/components/schemas/ThingGroupId'
          description: The thing group ID.
    CreateThingRequest:
      type: object
      properties:
        thingName:
          allOf:
          - $ref: '#/components/schemas/ThingName'
          description: 'The name of the thing to create.


            You can''t change a thing''s name after you create it. To change a thing''s
            name, you must create a new thing, give it the new name, and then delete
            the old thing.'
        thingTypeName:
          allOf:
          - $ref: '#/components/schemas/ThingTypeName'
          description: The name of the thing type associated with the new thing.
        attributePayload:
          allOf:
          - $ref: '#/components/schemas/AttributePayload'
          description: 'The attribute payload, which consists of up to three name/value
            pairs in a JSON document. For example:


            `{\"attributes\":{\"string1\":\"string2\"}}`'
        billingGroupName:
          allOf:
          - $ref: '#/components/schemas/BillingGroupName'
          description: The name of the billing group the thing will be added to.
      required:
      - thingName
      description: The input for the CreateThing operation.
    CreateThingResponse:
      type: object
      properties:
        thingName:
          allOf:
          - $ref: '#/components/schemas/ThingName'
          description: The name of the new thing.
        thingArn:
          allOf:
          - $ref: '#/components/schemas/ThingArn'
          description: The ARN of the new thing.
        thingId:
          allOf:
          - $ref: '#/components/schemas/ThingId'
          description: The thing ID.
      description: The output of the CreateThing operation.
    CreateThingTypeRequest:
      type: object
      properties:
        thingTypeName:
          allOf:
          - $ref: '#/components/schemas/ThingTypeName'
          description: The name of the thing type.
        thingTypeProperties:
          allOf:
          - $ref: '#/components/schemas/ThingTypeProperties'
          description: The ThingTypeProperties for the thing type to create. It contains
            information about the new thing type including a description, and a list
            of searchable thing attribute names.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: Metadata which can be used to manage the thing type.
      required:
      - thingTypeName
      description: The input for the CreateThingType operation.
    CreateThingTypeResponse:
      type: object
      properties:
        thingTypeName:
          allOf:
          - $ref: '#/components/schemas/ThingTypeName'
          description: The name of the thing type.
        thingTypeArn:
          allOf:
          - $ref: '#/components/schemas/ThingTypeArn'
          description: The Amazon Resource Name (ARN) of the thing type.
        thingTypeId:
          allOf:
          - $ref: '#/components/schemas/ThingTypeId'
          description: The thing type ID.
      description: The output of the CreateThingType operation.
    CreateTopicRuleDestinationRequest:
      type: object
      properties:
        destinationConfiguration:
          allOf:
          - $ref: '#/components/schemas/TopicRuleDestinationConfiguration'
          description: The topic rule destination configuration.
      required:
      - destinationConfiguration
    CreateTopicRuleDestinationResponse:
      type: object
      properties:
        topicRuleDestination:
          allOf:
          - $ref: '#/components/schemas/TopicRuleDestination'
          description: The topic rule destination.
    CreateTopicRuleRequest:
      type: object
      properties:
        ruleName:
          allOf:
          - $ref: '#/components/schemas/RuleName'
          description: The name of the rule.
        topicRulePayload:
          allOf:
          - $ref: '#/components/schemas/TopicRulePayload'
          description: The rule payload.
        tags:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'Metadata which can be used to manage the topic rule.


            For URI Request parameters use format: ...key1=value1&key2;=value2...


            For the CLI command-line parameter use format: --tags "key1=value1&key2;=value2..."


            For the cli-input-json file use format: "tags": "key1=value1&key2;=value2..."'
      required:
      - ruleName
      - topicRulePayload
      description: The input for the CreateTopicRule operation.
    CreatedAtDate:
      type: string
      format: date-time
    CreationDate:
      type: string
      format: date-time
    CredentialDurationSeconds:
      type: integer
      minimum: 900
      maximum: 43200
    CronExpression:
      type: string
      minLength: 1
      maxLength: 256
    CustomCodeSigning:
      type: object
      properties:
        signature:
          allOf:
          - $ref: '#/components/schemas/CodeSigningSignature'
          description: The signature for the file.
        certificateChain:
          allOf:
          - $ref: '#/components/schemas/CodeSigningCertificateChain'
          description: The certificate chain.
        hashAlgorithm:
          allOf:
          - $ref: '#/components/schemas/HashAlgorithm'
          description: The hash algorithm used to code sign the file. You can use
            a string as the algorithm name if the target over-the-air (OTA) update
            devices are able to verify the signature that was generated using the
            same signature algorithm. For example, FreeRTOS uses `SHA256` or `SHA1`,
            so you can pass either of them based on which was used for generating
            the signature.
        signatureAlgorithm:
          allOf:
          - $ref: '#/components/schemas/SignatureAlgorithm'
          description: The signature algorithm used to code sign the file. You can
            use a string as the algorithm name if the target over-the-air (OTA) update
            devices are able to verify the signature that was generated using the
            same signature algorithm. For example, FreeRTOS uses `ECDSA` or `RSA`,
            so you can pass either of them based on which was used for generating
            the signature.
      description: Describes a custom method used to code sign a file.
    CustomMetricArn:
      type: string
    CustomMetricDisplayName:
      type: string
      pattern: ^[\p{Graph}\x20]*$
      minLength: 0
      maxLength: 128
    CustomMetricType:
      type: string
      enum:
      - string-list
      - ip-address-list
      - number-list
      - number
    CustomerVersion:
      type: integer
      minimum: 1
    DataCollectionPercentage:
      type: number
      format: double
      minimum: 0
      maximum: 100
    DateType:
      type: string
      format: date-time
    DayOfMonth:
      type: string
      pattern: ^([1-9]|[12][0-9]|3[01])$|^LAST$
    DayOfWeek:
      type: string
      enum:
      - SUN
      - MON
      - TUE
      - WED
      - THU
      - FRI
      - SAT
    DeleteAccountAuditConfigurationRequest:
      type: object
      properties:
        deleteScheduledAudits:
          allOf:
          - $ref: '#/components/schemas/DeleteScheduledAudits'
          description: If true, all scheduled audits are deleted.
    DeleteAccountAuditConfigurationResponse:
      type: object
      properties: {}
    DeleteAdditionalMetricsToRetain:
      type: boolean
      default: false
    DeleteAlertTargets:
      type: boolean
      default: false
    DeleteAuditSuppressionRequest:
      type: object
      properties:
        checkName:
          $ref: '#/components/schemas/AuditCheckName'
        resourceIdentifier:
          $ref: '#/components/schemas/ResourceIdentifier'
      required:
      - checkName
      - resourceIdentifier
    DeleteAuditSuppressionResponse:
      type: object
      properties: {}
    DeleteAuthorizerRequest:
      type: object
      properties:
        authorizerName:
          allOf:
          - $ref: '#/components/schemas/AuthorizerName'
          description: The name of the authorizer to delete.
      required:
      - authorizerName
    DeleteAuthorizerResponse:
      type: object
      properties: {}
    DeleteBehaviors:
      type: boolean
      default: false
    DeleteBillingGroupRequest:
      type: object
      properties:
        billingGroupName:
          allOf:
          - $ref: '#/components/schemas/BillingGroupName'
          description: The name of the billing group.
        expectedVersion:
          allOf:
          - $ref: '#/components/schemas/OptionalVersion'
          description: The expected version of the billing group. If the version of
            the billing group does not match the expected version specified in the
            request, the `DeleteBillingGroup` request is rejected with a `VersionConflictException`.
      required:
      - billingGroupName
    DeleteBillingGroupResponse:
      type: object
      properties: {}
    DeleteCACertificateRequest:
      type: object
      properties:
        certificateId:
          allOf:
          - $ref: '#/components/schemas/CertificateId'
          description: The ID of the certificate to delete. (The last part of the
            certificate ARN contains the certificate ID.)
      required:
      - certificateId
      description: Input for the DeleteCACertificate operation.
    DeleteCACertificateResponse:
      type: object
      properties: {}
      description: The output for the DeleteCACertificate operation.
    DeleteCertificateProviderRequest:
      type: object
      properties:
        certificateProviderName:
          allOf:
          - $ref: '#/components/schemas/CertificateProviderName'
          description: The name of the certificate provider.
      required:
      - certificateProviderName
    DeleteCertificateProviderResponse:
      type: object
      properties: {}
    DeleteCertificateRequest:
      type: object
      properties:
        certificateId:
          allOf:
          - $ref: '#/components/schemas/CertificateId'
          description: The ID of the certificate. (The last part of the certificate
            ARN contains the certificate ID.)
        forceDelete:
          allOf:
          - $ref: '#/components/schemas/ForceDelete'
          description: Forces the deletion of a certificate if it is inactive and
            is not attached to an IoT thing.
      required:
      - certificateId
      description: The input for the DeleteCertificate operation.
    DeleteCommandExecutionRequest:
      type: object
      properties:
        executionId:
          allOf:
          - $ref: '#/components/schemas/CommandExecutionId'
          description: The unique identifier of the command execution that you want
            to delete from your account.
        targetArn:
          allOf:
          - $ref: '#/components/schemas/TargetArn'
          description: The Amazon Resource Number (ARN) of the target device for which
            you want to delete command executions.
      required:
      - executionId
      - targetArn
    DeleteCommandExecutionResponse:
      type: object
      properties: {}
    DeleteCommandRequest:
      type: object
      properties:
        commandId:
          allOf:
          - $ref: '#/components/schemas/CommandId'
          description: The unique identifier of the command to be deleted.
      required:
      - commandId
    DeleteCommandResponse:
      type: object
      properties:
        statusCode:
          allOf:
          - $ref: '#/components/schemas/StatusCode'
          description: "The status code for the command deletion request. The status\
            \ code is in the 200 range for a successful request.\n\n  * If the command\
            \ hasn't been deprecated, or has been deprecated for a duration that is\
            \ shorter than the maximum time out duration of 12 hours, when calling\
            \ the `DeleteCommand` request, the deletion will be scheduled and a 202\
            \ status code will be returned. While the command is being deleted, it\
            \ will be in a `pendingDeletion` state. Once the time out duration has\
            \ been reached, the command will be permanently removed from your account.\n\
            \n  * If the command has been deprecated for a duration that is longer\
            \ than the maximum time out duration of 12 hours, when calling the `DeleteCommand`\
            \ request, the command will be deleted immediately and a 204 status code\
            \ will be returned."
    DeleteConflictException:
      type: object
      properties:
        message:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage2'
          description: The message for the exception.
      description: You can't delete the resource because it is attached to one or
        more resources.
    DeleteCustomMetricRequest:
      type: object
      properties:
        metricName:
          allOf:
          - $ref: '#/components/schemas/MetricName'
          description: The name of the custom metric.
      required:
      - metricName
    DeleteCustomMetricResponse:
      type: object
      properties: {}
    DeleteDimensionRequest:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/DimensionName'
          description: The unique identifier for the dimension that you want to delete.
      required:
      - name
    DeleteDimensionResponse:
      type: object
      properties: {}
    DeleteDomainConfigurationRequest:
      type: object
      properties:
        domainConfigurationName:
          allOf:
          - $ref: '#/components/schemas/DomainConfigurationName'
          description: The name of the domain configuration to be deleted.
      required:
      - domainConfigurationName
    DeleteDomainConfigurationResponse:
      type: object
      properties: {}
    DeleteDynamicThingGroupRequest:
      type: object
      properties:
        thingGroupName:
          allOf:
          - $ref: '#/components/schemas/ThingGroupName'
          description: The name of the dynamic thing group to delete.
        expectedVersion:
          allOf:
          - $ref: '#/components/schemas/OptionalVersion'
          description: The expected version of the dynamic thing group to delete.
      required:
      - thingGroupName
    DeleteDynamicThingGroupResponse:
      type: object
      properties: {}
    DeleteFleetMetricRequest:
      type: object
      properties:
        metricName:
          allOf:
          - $ref: '#/components/schemas/FleetMetricName'
          description: The name of the fleet metric to delete.
        expectedVersion:
          allOf:
          - $ref: '#/components/schemas/OptionalVersion'
          description: The expected version of the fleet metric to delete.
      required:
      - metricName
    DeleteJobExecutionRequest:
      type: object
      properties:
        jobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          description: The ID of the job whose execution on a particular device will
            be deleted.
        thingName:
          allOf:
          - $ref: '#/components/schemas/ThingName'
          description: The name of the thing whose job execution will be deleted.
        executionNumber:
          allOf:
          - $ref: '#/components/schemas/ExecutionNumber'
          description: 'The ID of the job execution to be deleted. The `executionNumber`
            refers to the execution of a particular job on a particular device.


            Note that once a job execution is deleted, the `executionNumber` may be
            reused by IoT, so be sure you get and use the correct value here.'
        force:
          allOf:
          - $ref: '#/components/schemas/ForceFlag'
          description: '(Optional) When true, you can delete a job execution which
            is "IN_PROGRESS". Otherwise, you can only delete a job execution which
            is in a terminal state ("SUCCEEDED", "FAILED", "REJECTED", "REMOVED" or
            "CANCELED") or an exception will occur. The default is false.


            Deleting a job execution which is "IN_PROGRESS", will cause the device
            to be unable to access job information or update the job execution status.
            Use caution and ensure that the device is able to recover to a valid state.'
        namespaceId:
          allOf:
          - $ref: '#/components/schemas/NamespaceId'
          description: 'The namespace used to indicate that a job is a customer-managed
            job.


            When you specify a value for this parameter, Amazon Web Services IoT Core
            sends jobs notifications to MQTT topics that contain the value in the
            following format.


            `$aws/things/_THING_NAME_ /jobs/_JOB_ID_ /notify-namespace-_NAMESPACE_ID_
            /`


            The `namespaceId` feature is only supported by IoT Greengrass at this
            time. For more information, see [Setting up IoT Greengrass core devices.](https://docs.aws.amazon.com/greengrass/v2/developerguide/setting-up.html)'
      required:
      - jobId
      - thingName
      - executionNumber
    DeleteJobRequest:
      type: object
      properties:
        jobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          description: 'The ID of the job to be deleted.


            After a job deletion is completed, you may reuse this jobId when you create
            a new job. However, this is not recommended, and you must ensure that
            your devices are not using the jobId to refer to the deleted job.'
        force:
          allOf:
          - $ref: '#/components/schemas/ForceFlag'
          description: '(Optional) When true, you can delete a job which is "IN_PROGRESS".
            Otherwise, you can only delete a job which is in a terminal state ("COMPLETED"
            or "CANCELED") or an exception will occur. The default is false.


            Deleting a job which is "IN_PROGRESS", will cause a device which is executing
            the job to be unable to access job information or update the job execution
            status. Use caution and ensure that each device executing a job which
            is deleted is able to recover to a valid state.'
        namespaceId:
          allOf:
          - $ref: '#/components/schemas/NamespaceId'
          description: 'The namespace used to indicate that a job is a customer-managed
            job.


            When you specify a value for this parameter, Amazon Web Services IoT Core
            sends jobs notifications to MQTT topics that contain the value in the
            following format.


            `$aws/things/_THING_NAME_ /jobs/_JOB_ID_ /notify-namespace-_NAMESPACE_ID_
            /`


            The `namespaceId` feature is only supported by IoT Greengrass at this
            time. For more information, see [Setting up IoT Greengrass core devices.](https://docs.aws.amazon.com/greengrass/v2/developerguide/setting-up.html)'
      required:
      - jobId
    DeleteJobTemplateRequest:
      type: object
      properties:
        jobTemplateId:
          allOf:
          - $ref: '#/components/schemas/JobTemplateId'
          description: The unique identifier of the job template to delete.
      required:
      - jobTemplateId
    DeleteMetricsExportConfig:
      type: boolean
      default: false
    DeleteMitigationActionRequest:
      type: object
      properties:
        actionName:
          allOf:
          - $ref: '#/components/schemas/MitigationActionName'
          description: The name of the mitigation action that you want to delete.
      required:
      - actionName
    DeleteMitigationActionResponse:
      type: object
      properties: {}
    DeleteOTAUpdateRequest:
      type: object
      properties:
        otaUpdateId:
          allOf:
          - $ref: '#/components/schemas/OTAUpdateId'
          description: The ID of the OTA update to delete.
        deleteStream:
          allOf:
          - $ref: '#/components/schemas/DeleteStream_'
          description: When true, the stream created by the OTAUpdate process is deleted
            when the OTA update is deleted. Ignored if the stream specified in the
            OTAUpdate is supplied by the user.
        forceDeleteAWSJob:
          allOf:
          - $ref: '#/components/schemas/ForceDeleteAWSJob'
          description: When true, deletes the IoT job created by the OTAUpdate process
            even if it is "IN_PROGRESS". Otherwise, if the job is not in a terminal
            state ("COMPLETED" or "CANCELED") an exception will occur. The default
            is false.
      required:
      - otaUpdateId
    DeleteOTAUpdateResponse:
      type: object
      properties: {}
    DeletePackageRequest:
      type: object
      properties:
        packageName:
          allOf:
          - $ref: '#/components/schemas/PackageName'
          description: The name of the target software package.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique case-sensitive identifier that you can provide to
            ensure the idempotency of the request. Don't reuse this client token if
            a new idempotent request is required.
      required:
      - packageName
    DeletePackageResponse:
      type: object
      properties: {}
    DeletePackageVersionRequest:
      type: object
      properties:
        packageName:
          allOf:
          - $ref: '#/components/schemas/PackageName'
          description: The name of the associated software package.
        versionName:
          allOf:
          - $ref: '#/components/schemas/VersionName'
          description: The name of the target package version.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique case-sensitive identifier that you can provide to
            ensure the idempotency of the request. Don't reuse this client token if
            a new idempotent request is required.
      required:
      - packageName
      - versionName
    DeletePackageVersionResponse:
      type: object
      properties: {}
    DeletePolicyRequest:
      type: object
      properties:
        policyName:
          allOf:
          - $ref: '#/components/schemas/PolicyName'
          description: The name of the policy to delete.
      required:
      - policyName
      description: The input for the DeletePolicy operation.
    DeletePolicyVersionRequest:
      type: object
      properties:
        policyName:
          allOf:
          - $ref: '#/components/schemas/PolicyName'
          description: The name of the policy.
        policyVersionId:
          allOf:
          - $ref: '#/components/schemas/PolicyVersionId'
          description: The policy version ID.
      required:
      - policyName
      - policyVersionId
      description: The input for the DeletePolicyVersion operation.
    DeleteProvisioningTemplateRequest:
      type: object
      properties:
        templateName:
          allOf:
          - $ref: '#/components/schemas/TemplateName'
          description: The name of the fleet provision template to delete.
      required:
      - templateName
    DeleteProvisioningTemplateResponse:
      type: object
      properties: {}
    DeleteProvisioningTemplateVersionRequest:
      type: object
      properties:
        templateName:
          allOf:
          - $ref: '#/components/schemas/TemplateName'
          description: The name of the provisioning template version to delete.
        versionId:
          allOf:
          - $ref: '#/components/schemas/TemplateVersionId'
          description: The provisioning template version ID to delete.
      required:
      - templateName
      - versionId
    DeleteProvisioningTemplateVersionResponse:
      type: object
      properties: {}
    DeleteRegistrationCodeRequest:
      type: object
      properties: {}
      description: The input for the DeleteRegistrationCode operation.
    DeleteRegistrationCodeResponse:
      type: object
      properties: {}
      description: The output for the DeleteRegistrationCode operation.
    DeleteRoleAliasRequest:
      type: object
      properties:
        roleAlias:
          allOf:
          - $ref: '#/components/schemas/RoleAlias'
          description: The role alias to delete.
      required:
      - roleAlias
    DeleteRoleAliasResponse:
      type: object
      properties: {}
    DeleteScheduledAuditRequest:
      type: object
      properties:
        scheduledAuditName:
          allOf:
          - $ref: '#/components/schemas/ScheduledAuditName'
          description: The name of the scheduled audit you want to delete.
      required:
      - scheduledAuditName
    DeleteScheduledAuditResponse:
      type: object
      properties: {}
    DeleteScheduledAudits:
      type: boolean
      default: false
    DeleteSecurityProfileRequest:
      type: object
      properties:
        securityProfileName:
          allOf:
          - $ref: '#/components/schemas/SecurityProfileName'
          description: The name of the security profile to be deleted.
        expectedVersion:
          allOf:
          - $ref: '#/components/schemas/OptionalVersion'
          description: The expected version of the security profile. A new version
            is generated whenever the security profile is updated. If you specify
            a value that is different from the actual version, a `VersionConflictException`
            is thrown.
      required:
      - securityProfileName
    DeleteSecurityProfileResponse:
      type: object
      properties: {}
    DeleteStreamRequest:
      type: object
      properties:
        streamId:
          allOf:
          - $ref: '#/components/schemas/StreamId'
          description: The stream ID.
      required:
      - streamId
    DeleteStreamResponse:
      type: object
      properties: {}
    DeleteStream_:
      type: boolean
      default: false
    DeleteThingGroupRequest:
      type: object
      properties:
        thingGroupName:
          allOf:
          - $ref: '#/components/schemas/ThingGroupName'
          description: The name of the thing group to delete.
        expectedVersion:
          allOf:
          - $ref: '#/components/schemas/OptionalVersion'
          description: The expected version of the thing group to delete.
      required:
      - thingGroupName
    DeleteThingGroupResponse:
      type: object
      properties: {}
    DeleteThingRequest:
      type: object
      properties:
        thingName:
          allOf:
          - $ref: '#/components/schemas/ThingName'
          description: The name of the thing to delete.
        expectedVersion:
          allOf:
          - $ref: '#/components/schemas/OptionalVersion'
          description: The expected version of the thing record in the registry. If
            the version of the record in the registry does not match the expected
            version specified in the request, the `DeleteThing` request is rejected
            with a `VersionConflictException`.
      required:
      - thingName
      description: The input for the DeleteThing operation.
    DeleteThingResponse:
      type: object
      properties: {}
      description: The output of the DeleteThing operation.
    DeleteThingTypeRequest:
      type: object
      properties:
        thingTypeName:
          allOf:
          - $ref: '#/components/schemas/ThingTypeName'
          description: The name of the thing type.
      required:
      - thingTypeName
      description: The input for the DeleteThingType operation.
    DeleteThingTypeResponse:
      type: object
      properties: {}
      description: The output for the DeleteThingType operation.
    DeleteTopicRuleDestinationRequest:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/AwsArn'
          description: The ARN of the topic rule destination to delete.
      required:
      - arn
    DeleteTopicRuleDestinationResponse:
      type: object
      properties: {}
    DeleteTopicRuleRequest:
      type: object
      properties:
        ruleName:
          allOf:
          - $ref: '#/components/schemas/RuleName'
          description: The name of the rule.
      required:
      - ruleName
      description: The input for the DeleteTopicRule operation.
    DeleteV2LoggingLevelRequest:
      type: object
      properties:
        targetType:
          allOf:
          - $ref: '#/components/schemas/LogTargetType'
          description: The type of resource for which you are configuring logging.
            Must be `THING_Group`.
        targetName:
          allOf:
          - $ref: '#/components/schemas/LogTargetName'
          description: The name of the resource for which you are configuring logging.
      required:
      - targetType
      - targetName
    DeliveryStreamName:
      type: string
    Denied:
      type: object
      properties:
        implicitDeny:
          allOf:
          - $ref: '#/components/schemas/ImplicitDeny'
          description: Information that implicitly denies the authorization. When
            a policy doesn't explicitly deny or allow an action on a resource it is
            considered an implicit deny.
        explicitDeny:
          allOf:
          - $ref: '#/components/schemas/ExplicitDeny'
          description: Information that explicitly denies the authorization.
      description: Contains information that denied the authorization.
    DeprecateThingTypeRequest:
      type: object
      properties:
        thingTypeName:
          allOf:
          - $ref: '#/components/schemas/ThingTypeName'
          description: The name of the thing type to deprecate.
        undoDeprecate:
          allOf:
          - $ref: '#/components/schemas/UndoDeprecate'
          description: Whether to undeprecate a deprecated thing type. If **true**
            , the thing type will not be deprecated anymore and you can associate
            it with things.
      required:
      - thingTypeName
      description: The input for the DeprecateThingType operation.
    DeprecateThingTypeResponse:
      type: object
      properties: {}
      description: The output for the DeprecateThingType operation.
    DeprecationDate:
      type: string
      format: date-time
    DeprecationFlag:
      type: boolean
    DescribeAccountAuditConfigurationRequest:
      type: object
      properties: {}
    DescribeAccountAuditConfigurationResponse:
      type: object
      properties:
        roleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          description: 'The ARN of the role that grants permission to IoT to access
            information about your devices, policies, certificates, and other items
            as required when performing an audit.


            On the first call to `UpdateAccountAuditConfiguration`, this parameter
            is required.'
        auditNotificationTargetConfigurations:
          allOf:
          - $ref: '#/components/schemas/AuditNotificationTargetConfigurations'
          description: Information about the targets to which audit notifications
            are sent for this account.
        auditCheckConfigurations:
          allOf:
          - $ref: '#/components/schemas/AuditCheckConfigurations'
          description: Which audit checks are enabled and disabled for this account.
    DescribeAuditFindingRequest:
      type: object
      properties:
        findingId:
          allOf:
          - $ref: '#/components/schemas/FindingId'
          description: A unique identifier for a single audit finding. You can use
            this identifier to apply mitigation actions to the finding.
      required:
      - findingId
    DescribeAuditFindingResponse:
      type: object
      properties:
        finding:
          $ref: '#/components/schemas/AuditFinding'
    DescribeAuditMitigationActionsTaskRequest:
      type: object
      properties:
        taskId:
          allOf:
          - $ref: '#/components/schemas/MitigationActionsTaskId'
          description: The unique identifier for the audit mitigation task.
      required:
      - taskId
    DescribeAuditMitigationActionsTaskResponse:
      type: object
      properties:
        taskStatus:
          allOf:
          - $ref: '#/components/schemas/AuditMitigationActionsTaskStatus'
          description: The current status of the task.
        startTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time when the task was started.
        endTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time when the task was completed or canceled.
        taskStatistics:
          allOf:
          - $ref: '#/components/schemas/AuditMitigationActionsTaskStatistics'
          description: Aggregate counts of the results when the mitigation tasks were
            applied to the findings for this audit mitigation actions task.
        target:
          allOf:
          - $ref: '#/components/schemas/AuditMitigationActionsTaskTarget'
          description: Identifies the findings to which the mitigation actions are
            applied. This can be by audit checks, by audit task, or a set of findings.
        auditCheckToActionsMapping:
          allOf:
          - $ref: '#/components/schemas/AuditCheckToActionsMapping'
          description: Specifies the mitigation actions that should be applied to
            specific audit checks.
        actionsDefinition:
          allOf:
          - $ref: '#/components/schemas/MitigationActionList'
          description: Specifies the mitigation actions and their parameters that
            are applied as part of this task.
    DescribeAuditSuppressionRequest:
      type: object
      properties:
        checkName:
          $ref: '#/components/schemas/AuditCheckName'
        resourceIdentifier:
          $ref: '#/components/schemas/ResourceIdentifier'
      required:
      - checkName
      - resourceIdentifier
    DescribeAuditSuppressionResponse:
      type: object
      properties:
        checkName:
          $ref: '#/components/schemas/AuditCheckName'
        resourceIdentifier:
          $ref: '#/components/schemas/ResourceIdentifier'
        expirationDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The epoch timestamp in seconds at which this suppression expires.
        suppressIndefinitely:
          allOf:
          - $ref: '#/components/schemas/SuppressIndefinitely'
          description: Indicates whether a suppression should exist indefinitely or
            not.
        description:
          allOf:
          - $ref: '#/components/schemas/AuditDescription'
          description: The description of the audit suppression.
    DescribeAuditTaskRequest:
      type: object
      properties:
        taskId:
          allOf:
          - $ref: '#/components/schemas/AuditTaskId'
          description: The ID of the audit whose information you want to get.
      required:
      - taskId
    DescribeAuditTaskResponse:
      type: object
      properties:
        taskStatus:
          allOf:
          - $ref: '#/components/schemas/AuditTaskStatus'
          description: 'The status of the audit: one of "IN_PROGRESS", "COMPLETED",
            "FAILED", or "CANCELED".'
        taskType:
          allOf:
          - $ref: '#/components/schemas/AuditTaskType'
          description: 'The type of audit: "ON_DEMAND_AUDIT_TASK" or "SCHEDULED_AUDIT_TASK".'
        taskStartTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time the audit started.
        taskStatistics:
          allOf:
          - $ref: '#/components/schemas/TaskStatistics'
          description: Statistical information about the audit.
        scheduledAuditName:
          allOf:
          - $ref: '#/components/schemas/ScheduledAuditName'
          description: The name of the scheduled audit (only if the audit was a scheduled
            audit).
        auditDetails:
          allOf:
          - $ref: '#/components/schemas/AuditDetails'
          description: Detailed information about each check performed during this
            audit.
    DescribeAuthorizerRequest:
      type: object
      properties:
        authorizerName:
          allOf:
          - $ref: '#/components/schemas/AuthorizerName'
          description: The name of the authorizer to describe.
      required:
      - authorizerName
    DescribeAuthorizerResponse:
      type: object
      properties:
        authorizerDescription:
          allOf:
          - $ref: '#/components/schemas/AuthorizerDescription'
          description: The authorizer description.
    DescribeBillingGroupRequest:
      type: object
      properties:
        billingGroupName:
          allOf:
          - $ref: '#/components/schemas/BillingGroupName'
          description: The name of the billing group.
      required:
      - billingGroupName
    DescribeBillingGroupResponse:
      type: object
      properties:
        billingGroupName:
          allOf:
          - $ref: '#/components/schemas/BillingGroupName'
          description: The name of the billing group.
        billingGroupId:
          allOf:
          - $ref: '#/components/schemas/BillingGroupId'
          description: The ID of the billing group.
        billingGroupArn:
          allOf:
          - $ref: '#/components/schemas/BillingGroupArn'
          description: The ARN of the billing group.
        version:
          allOf:
          - $ref: '#/components/schemas/Version'
          description: The version of the billing group.
        billingGroupProperties:
          allOf:
          - $ref: '#/components/schemas/BillingGroupProperties'
          description: The properties of the billing group.
        billingGroupMetadata:
          allOf:
          - $ref: '#/components/schemas/BillingGroupMetadata'
          description: Additional information about the billing group.
    DescribeCACertificateRequest:
      type: object
      properties:
        certificateId:
          allOf:
          - $ref: '#/components/schemas/CertificateId'
          description: The CA certificate identifier.
      required:
      - certificateId
      description: The input for the DescribeCACertificate operation.
    DescribeCACertificateResponse:
      type: object
      properties:
        certificateDescription:
          allOf:
          - $ref: '#/components/schemas/CACertificateDescription'
          description: The CA certificate description.
        registrationConfig:
          allOf:
          - $ref: '#/components/schemas/RegistrationConfig'
          description: Information about the registration configuration.
      description: The output from the DescribeCACertificate operation.
    DescribeCertificateProviderRequest:
      type: object
      properties:
        certificateProviderName:
          allOf:
          - $ref: '#/components/schemas/CertificateProviderName'
          description: The name of the certificate provider.
      required:
      - certificateProviderName
    DescribeCertificateProviderResponse:
      type: object
      properties:
        certificateProviderName:
          allOf:
          - $ref: '#/components/schemas/CertificateProviderName'
          description: The name of the certificate provider.
        certificateProviderArn:
          allOf:
          - $ref: '#/components/schemas/CertificateProviderArn'
          description: The ARN of the certificate provider.
        lambdaFunctionArn:
          allOf:
          - $ref: '#/components/schemas/CertificateProviderFunctionArn'
          description: The Lambda function ARN that's associated with the certificate
            provider.
        accountDefaultForOperations:
          allOf:
          - $ref: '#/components/schemas/CertificateProviderAccountDefaultForOperations'
          description: 'A list of the operations that the certificate provider will
            use to generate certificates. Valid value: `CreateCertificateFromCsr`.'
        creationDate:
          allOf:
          - $ref: '#/components/schemas/DateType'
          description: The date-time string that indicates when the certificate provider
            was created.
        lastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/DateType'
          description: The date-time string that indicates when the certificate provider
            was last updated.
    DescribeCertificateRequest:
      type: object
      properties:
        certificateId:
          allOf:
          - $ref: '#/components/schemas/CertificateId'
          description: The ID of the certificate. (The last part of the certificate
            ARN contains the certificate ID.)
      required:
      - certificateId
      description: The input for the DescribeCertificate operation.
    DescribeCertificateResponse:
      type: object
      properties:
        certificateDescription:
          allOf:
          - $ref: '#/components/schemas/CertificateDescription'
          description: The description of the certificate.
      description: The output of the DescribeCertificate operation.
    DescribeCustomMetricRequest:
      type: object
      properties:
        metricName:
          allOf:
          - $ref: '#/components/schemas/MetricName'
          description: The name of the custom metric.
      required:
      - metricName
    DescribeCustomMetricResponse:
      type: object
      properties:
        metricName:
          allOf:
          - $ref: '#/components/schemas/MetricName'
          description: The name of the custom metric.
        metricArn:
          allOf:
          - $ref: '#/components/schemas/CustomMetricArn'
          description: The Amazon Resource Number (ARN) of the custom metric.
        metricType:
          allOf:
          - $ref: '#/components/schemas/CustomMetricType'
          description: 'The type of the custom metric.


            The type `number` only takes a single metric value as an input, but while
            submitting the metrics value in the DeviceMetrics report, it must be passed
            as an array with a single value.'
        displayName:
          allOf:
          - $ref: '#/components/schemas/CustomMetricDisplayName'
          description: Field represents a friendly name in the console for the custom
            metric; doesn't have to be unique. Don't use this name as the metric identifier
            in the device metric report. Can be updated.
        creationDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The creation date of the custom metric in milliseconds since
            epoch.
        lastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time the custom metric was last modified in milliseconds
            since epoch.
    DescribeDefaultAuthorizerRequest:
      type: object
      properties: {}
    DescribeDefaultAuthorizerResponse:
      type: object
      properties:
        authorizerDescription:
          allOf:
          - $ref: '#/components/schemas/AuthorizerDescription'
          description: The default authorizer's description.
    DescribeDetectMitigationActionsTaskRequest:
      type: object
      properties:
        taskId:
          allOf:
          - $ref: '#/components/schemas/MitigationActionsTaskId'
          description: The unique identifier of the task.
      required:
      - taskId
    DescribeDetectMitigationActionsTaskResponse:
      type: object
      properties:
        taskSummary:
          allOf:
          - $ref: '#/components/schemas/DetectMitigationActionsTaskSummary'
          description: The description of a task.
    DescribeDimensionRequest:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/DimensionName'
          description: The unique identifier for the dimension.
      required:
      - name
    DescribeDimensionResponse:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/DimensionName'
          description: The unique identifier for the dimension.
        arn:
          allOf:
          - $ref: '#/components/schemas/DimensionArn'
          description: The Amazon Resource Name (ARN) for the dimension.
        type:
          allOf:
          - $ref: '#/components/schemas/DimensionType'
          description: The type of the dimension.
        stringValues:
          allOf:
          - $ref: '#/components/schemas/DimensionStringValues'
          description: The value or list of values used to scope the dimension. For
            example, for topic filters, this is the pattern used to match the MQTT
            topic name.
        creationDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date the dimension was created.
        lastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date the dimension was last modified.
    DescribeDomainConfigurationRequest:
      type: object
      properties:
        domainConfigurationName:
          allOf:
          - $ref: '#/components/schemas/ReservedDomainConfigurationName'
          description: The name of the domain configuration.
      required:
      - domainConfigurationName
    DescribeDomainConfigurationResponse:
      type: object
      properties:
        domainConfigurationName:
          allOf:
          - $ref: '#/components/schemas/ReservedDomainConfigurationName'
          description: The name of the domain configuration.
        domainConfigurationArn:
          allOf:
          - $ref: '#/components/schemas/DomainConfigurationArn'
          description: The ARN of the domain configuration.
        domainName:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          description: The name of the domain.
        serverCertificates:
          allOf:
          - $ref: '#/components/schemas/ServerCertificates'
          description: A list containing summary information about the server certificate
            included in the domain configuration.
        authorizerConfig:
          allOf:
          - $ref: '#/components/schemas/AuthorizerConfig'
          description: An object that specifies the authorization service for a domain.
        domainConfigurationStatus:
          allOf:
          - $ref: '#/components/schemas/DomainConfigurationStatus'
          description: A Boolean value that specifies the current state of the domain
            configuration.
        serviceType:
          allOf:
          - $ref: '#/components/schemas/ServiceType'
          description: The type of service delivered by the endpoint.
        domainType:
          allOf:
          - $ref: '#/components/schemas/DomainType'
          description: The type of the domain.
        lastStatusChangeDate:
          allOf:
          - $ref: '#/components/schemas/DateType'
          description: The date and time the domain configuration's status was last
            changed.
        tlsConfig:
          allOf:
          - $ref: '#/components/schemas/TlsConfig'
          description: An object that specifies the TLS configuration for a domain.
        serverCertificateConfig:
          allOf:
          - $ref: '#/components/schemas/ServerCertificateConfig'
          description: The server certificate configuration.
        authenticationType:
          allOf:
          - $ref: '#/components/schemas/AuthenticationType'
          description: "An enumerated string that speciﬁes the authentication type.\n\
            \n  * `CUSTOM_AUTH_X509` \\- Use custom authentication and authorization\
            \ with additional details from the X.509 client certificate.\n\n  * `CUSTOM_AUTH`\
            \ \\- Use custom authentication and authorization. For more information,\
            \ see [Custom authentication and authorization](https://docs.aws.amazon.com/iot/latest/developerguide/custom-authentication.html).\n\
            \n  * `AWS_X509` \\- Use X.509 client certificates without custom authentication\
            \ and authorization. For more information, see [X.509 client certificates](https://docs.aws.amazon.com/iot/latest/developerguide/x509-client-certs.html).\n\
            \n  * `AWS_SIGV4` \\- Use Amazon Web Services Signature Version 4. For\
            \ more information, see [IAM users, groups, and roles](https://docs.aws.amazon.com/iot/latest/developerguide/custom-authentication.html).\n\
            \n  * `DEFAULT` \\- Use a combination of port and Application Layer Protocol\
            \ Negotiation (ALPN) to specify authentication type. For more information,\
            \ see [Device communication protocols](https://docs.aws.amazon.com/iot/latest/developerguide/protocols.html)."
        applicationProtocol:
          allOf:
          - $ref: '#/components/schemas/ApplicationProtocol'
          description: "An enumerated string that speciﬁes the application-layer protocol.\n\
            \n  * `SECURE_MQTT` \\- MQTT over TLS.\n\n  * `MQTT_WSS` \\- MQTT over\
            \ WebSocket.\n\n  * `HTTPS` \\- HTTP over TLS.\n\n  * `DEFAULT` \\- Use\
            \ a combination of port and Application Layer Protocol Negotiation (ALPN)\
            \ to specify application_layer protocol. For more information, see [Device\
            \ communication protocols](https://docs.aws.amazon.com/iot/latest/developerguide/protocols.html)."
        clientCertificateConfig:
          allOf:
          - $ref: '#/components/schemas/ClientCertificateConfig'
          description: An object that speciﬁes the client certificate conﬁguration
            for a domain.
    DescribeEndpointRequest:
      type: object
      properties:
        endpointType:
          allOf:
          - $ref: '#/components/schemas/EndpointType'
          description: "The endpoint type. Valid endpoint types include:\n\n  * `iot:Data`\
            \ \\- Returns a VeriSign signed data endpoint.\n\n  * `iot:Data-ATS` \\\
            - Returns an ATS signed data endpoint.\n\n  * `iot:CredentialProvider`\
            \ \\- Returns an IoT credentials provider API endpoint.\n\n  * `iot:Jobs`\
            \ \\- Returns an IoT device management Jobs API endpoint.\n\nWe strongly\
            \ recommend that customers use the newer `iot:Data-ATS` endpoint type\
            \ to avoid issues related to the widespread distrust of Symantec certificate\
            \ authorities. ATS Signed Certificates are more secure and are trusted\
            \ by most popular browsers."
      description: The input for the DescribeEndpoint operation.
    DescribeEndpointResponse:
      type: object
      properties:
        endpointAddress:
          allOf:
          - $ref: '#/components/schemas/EndpointAddress'
          description: 'The endpoint. The format of the endpoint is as follows: _identifier_.iot._region_.amazonaws.com.'
      description: The output from the DescribeEndpoint operation.
    DescribeEventConfigurationsRequest:
      type: object
      properties: {}
    DescribeEventConfigurationsResponse:
      type: object
      properties:
        eventConfigurations:
          allOf:
          - $ref: '#/components/schemas/EventConfigurations'
          description: The event configurations.
        creationDate:
          allOf:
          - $ref: '#/components/schemas/CreationDate'
          description: The creation date of the event configuration.
        lastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/LastModifiedDate'
          description: The date the event configurations were last modified.
    DescribeFleetMetricRequest:
      type: object
      properties:
        metricName:
          allOf:
          - $ref: '#/components/schemas/FleetMetricName'
          description: The name of the fleet metric to describe.
      required:
      - metricName
    DescribeFleetMetricResponse:
      type: object
      properties:
        metricName:
          allOf:
          - $ref: '#/components/schemas/FleetMetricName'
          description: The name of the fleet metric to describe.
        queryString:
          allOf:
          - $ref: '#/components/schemas/QueryString'
          description: The search query string.
        aggregationType:
          allOf:
          - $ref: '#/components/schemas/AggregationType'
          description: The type of the aggregation query.
        period:
          allOf:
          - $ref: '#/components/schemas/FleetMetricPeriod'
          description: The time in seconds between fleet metric emissions. Range [60(1
            min), 86400(1 day)] and must be multiple of 60.
        aggregationField:
          allOf:
          - $ref: '#/components/schemas/AggregationField'
          description: The field to aggregate.
        description:
          allOf:
          - $ref: '#/components/schemas/FleetMetricDescription'
          description: The fleet metric description.
        queryVersion:
          allOf:
          - $ref: '#/components/schemas/QueryVersion'
          description: The query version.
        indexName:
          allOf:
          - $ref: '#/components/schemas/IndexName'
          description: The name of the index to search.
        creationDate:
          allOf:
          - $ref: '#/components/schemas/CreationDate'
          description: The date when the fleet metric is created.
        lastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/LastModifiedDate'
          description: The date when the fleet metric is last modified.
        unit:
          allOf:
          - $ref: '#/components/schemas/FleetMetricUnit'
          description: Used to support unit transformation such as milliseconds to
            seconds. The unit must be supported by [CW metric](https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_MetricDatum.html).
        version:
          allOf:
          - $ref: '#/components/schemas/Version'
          description: The version of the fleet metric.
        metricArn:
          allOf:
          - $ref: '#/components/schemas/FleetMetricArn'
          description: The ARN of the fleet metric to describe.
    DescribeIndexRequest:
      type: object
      properties:
        indexName:
          allOf:
          - $ref: '#/components/schemas/IndexName'
          description: The index name.
      required:
      - indexName
    DescribeIndexResponse:
      type: object
      properties:
        indexName:
          allOf:
          - $ref: '#/components/schemas/IndexName'
          description: The index name.
        indexStatus:
          allOf:
          - $ref: '#/components/schemas/IndexStatus'
          description: The index status.
        schema:
          allOf:
          - $ref: '#/components/schemas/IndexSchema'
          description: "Contains a value that specifies the type of indexing performed.\
            \ Valid values are:\n\n  * REGISTRY – Your thing index contains only registry\
            \ data.\n\n  * REGISTRY_AND_SHADOW - Your thing index contains registry\
            \ data and shadow data.\n\n  * REGISTRY_AND_CONNECTIVITY_STATUS - Your\
            \ thing index contains registry data and thing connectivity status data.\n\
            \n  * REGISTRY_AND_SHADOW_AND_CONNECTIVITY_STATUS - Your thing index contains\
            \ registry data, shadow data, and thing connectivity status data.\n\n\
            \  * MULTI_INDEXING_MODE - Your thing index contains multiple data sources.\
            \ For more information, see [GetIndexingConfiguration](https://docs.aws.amazon.com/iot/latest/apireference/API_GetIndexingConfiguration.html)."
    DescribeJobExecutionRequest:
      type: object
      properties:
        jobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          description: The unique identifier you assigned to this job when it was
            created.
        thingName:
          allOf:
          - $ref: '#/components/schemas/ThingName'
          description: The name of the thing on which the job execution is running.
        executionNumber:
          allOf:
          - $ref: '#/components/schemas/ExecutionNumber'
          description: A string (consisting of the digits "0" through "9" which is
            used to specify a particular job execution on a particular device.
      required:
      - jobId
      - thingName
    DescribeJobExecutionResponse:
      type: object
      properties:
        execution:
          allOf:
          - $ref: '#/components/schemas/JobExecution'
          description: Information about the job execution.
    DescribeJobRequest:
      type: object
      properties:
        jobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          description: The unique identifier you assigned to this job when it was
            created.
        beforeSubstitution:
          allOf:
          - $ref: '#/components/schemas/BeforeSubstitutionFlag'
          description: Provides a view of the job document before and after the substitution
            parameters have been resolved with their exact values.
      required:
      - jobId
    DescribeJobResponse:
      type: object
      properties:
        documentSource:
          allOf:
          - $ref: '#/components/schemas/JobDocumentSource'
          description: An S3 link to the job document.
        job:
          allOf:
          - $ref: '#/components/schemas/Job'
          description: Information about the job.
    DescribeJobTemplateRequest:
      type: object
      properties:
        jobTemplateId:
          allOf:
          - $ref: '#/components/schemas/JobTemplateId'
          description: The unique identifier of the job template.
      required:
      - jobTemplateId
    DescribeJobTemplateResponse:
      type: object
      properties:
        jobTemplateArn:
          allOf:
          - $ref: '#/components/schemas/JobTemplateArn'
          description: The ARN of the job template.
        jobTemplateId:
          allOf:
          - $ref: '#/components/schemas/JobTemplateId'
          description: The unique identifier of the job template.
        description:
          allOf:
          - $ref: '#/components/schemas/JobDescription'
          description: A description of the job template.
        documentSource:
          allOf:
          - $ref: '#/components/schemas/JobDocumentSource'
          description: An S3 link to the job document.
        document:
          allOf:
          - $ref: '#/components/schemas/JobDocument'
          description: The job document.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/DateType'
          description: The time, in seconds since the epoch, when the job template
            was created.
        presignedUrlConfig:
          $ref: '#/components/schemas/PresignedUrlConfig'
        jobExecutionsRolloutConfig:
          $ref: '#/components/schemas/JobExecutionsRolloutConfig'
        abortConfig:
          $ref: '#/components/schemas/AbortConfig'
        timeoutConfig:
          $ref: '#/components/schemas/TimeoutConfig'
        jobExecutionsRetryConfig:
          allOf:
          - $ref: '#/components/schemas/JobExecutionsRetryConfig'
          description: The configuration that determines how many retries are allowed
            for each failure type for a job.
        maintenanceWindows:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindows'
          description: Allows you to configure an optional maintenance window for
            the rollout of a job document to all devices in the target group for a
            job.
        destinationPackageVersions:
          allOf:
          - $ref: '#/components/schemas/DestinationPackageVersions'
          description: 'The package version Amazon Resource Names (ARNs) that are
            installed on the device when the job successfully completes. The package
            version must be in either the Published or Deprecated state when the job
            deploys. For more information, see [Package version lifecycle](https://docs.aws.amazon.com/iot/latest/developerguide/preparing-to-use-software-package-catalog.html#package-version-lifecycle).


            **Note:** The following Length Constraints relates to a single ARN. Up
            to 25 package version ARNs are allowed.'
    DescribeManagedJobTemplateRequest:
      type: object
      properties:
        templateName:
          allOf:
          - $ref: '#/components/schemas/ManagedJobTemplateName'
          description: The unique name of a managed job template, which is required.
        templateVersion:
          allOf:
          - $ref: '#/components/schemas/ManagedTemplateVersion'
          description: An optional parameter to specify version of a managed template.
            If not specified, the pre-defined default version is returned.
      required:
      - templateName
    DescribeManagedJobTemplateResponse:
      type: object
      properties:
        templateName:
          allOf:
          - $ref: '#/components/schemas/ManagedJobTemplateName'
          description: The unique name of a managed template, such as `AWS-Reboot`.
        templateArn:
          allOf:
          - $ref: '#/components/schemas/JobTemplateArn'
          description: The unique Amazon Resource Name (ARN) of the managed template.
        description:
          allOf:
          - $ref: '#/components/schemas/JobDescription'
          description: The unique description of a managed template.
        templateVersion:
          allOf:
          - $ref: '#/components/schemas/ManagedTemplateVersion'
          description: The version for a managed template.
        environments:
          allOf:
          - $ref: '#/components/schemas/Environments'
          description: A list of environments that are supported with the managed
            job template.
        documentParameters:
          allOf:
          - $ref: '#/components/schemas/DocumentParameters'
          description: 'A map of key-value pairs that you can use as guidance to specify
            the inputs for creating a job from a managed template.


            `documentParameters` can only be used when creating jobs from Amazon Web
            Services managed templates. This parameter can''t be used with custom
            job templates or to create jobs from them.'
        document:
          allOf:
          - $ref: '#/components/schemas/JobDocument'
          description: The document schema for a managed job template.
    DescribeMitigationActionRequest:
      type: object
      properties:
        actionName:
          allOf:
          - $ref: '#/components/schemas/MitigationActionName'
          description: The friendly name that uniquely identifies the mitigation action.
      required:
      - actionName
    DescribeMitigationActionResponse:
      type: object
      properties:
        actionName:
          allOf:
          - $ref: '#/components/schemas/MitigationActionName'
          description: The friendly name that uniquely identifies the mitigation action.
        actionType:
          allOf:
          - $ref: '#/components/schemas/MitigationActionType'
          description: The type of mitigation action.
        actionArn:
          allOf:
          - $ref: '#/components/schemas/MitigationActionArn'
          description: The ARN that identifies this migration action.
        actionId:
          allOf:
          - $ref: '#/components/schemas/MitigationActionId'
          description: A unique identifier for this action.
        roleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          description: The ARN of the IAM role used to apply this action.
        actionParams:
          allOf:
          - $ref: '#/components/schemas/MitigationActionParams'
          description: Parameters that control how the mitigation action is applied,
            specific to the type of mitigation action.
        creationDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time when the mitigation action was added to your
            Amazon Web Services accounts.
        lastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time when the mitigation action was last changed.
    DescribeProvisioningTemplateRequest:
      type: object
      properties:
        templateName:
          allOf:
          - $ref: '#/components/schemas/TemplateName'
          description: The name of the provisioning template.
      required:
      - templateName
    DescribeProvisioningTemplateResponse:
      type: object
      properties:
        templateArn:
          allOf:
          - $ref: '#/components/schemas/TemplateArn'
          description: The ARN of the provisioning template.
        templateName:
          allOf:
          - $ref: '#/components/schemas/TemplateName'
          description: The name of the provisioning template.
        description:
          allOf:
          - $ref: '#/components/schemas/TemplateDescription'
          description: The description of the provisioning template.
        creationDate:
          allOf:
          - $ref: '#/components/schemas/DateType'
          description: The date when the provisioning template was created.
        lastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/DateType'
          description: The date when the provisioning template was last modified.
        defaultVersionId:
          allOf:
          - $ref: '#/components/schemas/TemplateVersionId'
          description: The default fleet template version ID.
        templateBody:
          allOf:
          - $ref: '#/components/schemas/TemplateBody'
          description: The JSON formatted contents of the provisioning template.
        enabled:
          allOf:
          - $ref: '#/components/schemas/Enabled2'
          description: True if the provisioning template is enabled, otherwise false.
        provisioningRoleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          description: The ARN of the role associated with the provisioning template.
            This IoT role grants permission to provision a device.
        preProvisioningHook:
          allOf:
          - $ref: '#/components/schemas/ProvisioningHook'
          description: Gets information about a pre-provisioned hook.
        type:
          allOf:
          - $ref: '#/components/schemas/TemplateType'
          description: 'The type you define in a provisioning template. You can create
            a template with only one type. You can''t change the template type after
            its creation. The default value is `FLEET_PROVISIONING`. For more information
            about provisioning template, see: [Provisioning template](https://docs.aws.amazon.com/iot/latest/developerguide/provision-template.html).'
    DescribeProvisioningTemplateVersionRequest:
      type: object
      properties:
        templateName:
          allOf:
          - $ref: '#/components/schemas/TemplateName'
          description: The template name.
        versionId:
          allOf:
          - $ref: '#/components/schemas/TemplateVersionId'
          description: The provisioning template version ID.
      required:
      - templateName
      - versionId
    DescribeProvisioningTemplateVersionResponse:
      type: object
      properties:
        versionId:
          allOf:
          - $ref: '#/components/schemas/TemplateVersionId'
          description: The provisioning template version ID.
        creationDate:
          allOf:
          - $ref: '#/components/schemas/DateType'
          description: The date when the provisioning template version was created.
        templateBody:
          allOf:
          - $ref: '#/components/schemas/TemplateBody'
          description: The JSON formatted contents of the provisioning template version.
        isDefaultVersion:
          allOf:
          - $ref: '#/components/schemas/IsDefaultVersion'
          description: True if the provisioning template version is the default version.
    DescribeRoleAliasRequest:
      type: object
      properties:
        roleAlias:
          allOf:
          - $ref: '#/components/schemas/RoleAlias'
          description: The role alias to describe.
      required:
      - roleAlias
    DescribeRoleAliasResponse:
      type: object
      properties:
        roleAliasDescription:
          allOf:
          - $ref: '#/components/schemas/RoleAliasDescription'
          description: The role alias description.
    DescribeScheduledAuditRequest:
      type: object
      properties:
        scheduledAuditName:
          allOf:
          - $ref: '#/components/schemas/ScheduledAuditName'
          description: The name of the scheduled audit whose information you want
            to get.
      required:
      - scheduledAuditName
    DescribeScheduledAuditResponse:
      type: object
      properties:
        frequency:
          allOf:
          - $ref: '#/components/schemas/AuditFrequency'
          description: How often the scheduled audit takes place, either one of `DAILY`,
            `WEEKLY`, `BIWEEKLY`, or `MONTHLY`. The start time of each audit is determined
            by the system.
        dayOfMonth:
          allOf:
          - $ref: '#/components/schemas/DayOfMonth'
          description: The day of the month on which the scheduled audit takes place.
            This is will be `1` through `31` or `LAST`. If days `29`-`31` are specified,
            and the month does not have that many days, the audit takes place on the
            `LAST` day of the month.
        dayOfWeek:
          allOf:
          - $ref: '#/components/schemas/DayOfWeek'
          description: The day of the week on which the scheduled audit takes place,
            either one of `SUN`, `MON`, `TUE`, `WED`, `THU`, `FRI`, or `SAT`.
        targetCheckNames:
          allOf:
          - $ref: '#/components/schemas/TargetAuditCheckNames'
          description: Which checks are performed during the scheduled audit. Checks
            must be enabled for your account. (Use `DescribeAccountAuditConfiguration`
            to see the list of all checks, including those that are enabled or use
            `UpdateAccountAuditConfiguration` to select which checks are enabled.)
        scheduledAuditName:
          allOf:
          - $ref: '#/components/schemas/ScheduledAuditName'
          description: The name of the scheduled audit.
        scheduledAuditArn:
          allOf:
          - $ref: '#/components/schemas/ScheduledAuditArn'
          description: The ARN of the scheduled audit.
    DescribeSecurityProfileRequest:
      type: object
      properties:
        securityProfileName:
          allOf:
          - $ref: '#/components/schemas/SecurityProfileName'
          description: The name of the security profile whose information you want
            to get.
      required:
      - securityProfileName
    DescribeSecurityProfileResponse:
      type: object
      properties:
        securityProfileName:
          allOf:
          - $ref: '#/components/schemas/SecurityProfileName'
          description: The name of the security profile.
        securityProfileArn:
          allOf:
          - $ref: '#/components/schemas/SecurityProfileArn'
          description: The ARN of the security profile.
        securityProfileDescription:
          allOf:
          - $ref: '#/components/schemas/SecurityProfileDescription'
          description: A description of the security profile (associated with the
            security profile when it was created or updated).
        behaviors:
          allOf:
          - $ref: '#/components/schemas/Behaviors'
          description: Specifies the behaviors that, when violated by a device (thing),
            cause an alert.
        alertTargets:
          allOf:
          - $ref: '#/components/schemas/AlertTargets'
          description: Where the alerts are sent. (Alerts are always sent to the console.)
        additionalMetricsToRetain:
          allOf:
          - $ref: '#/components/schemas/AdditionalMetricsToRetainList'
          description: '_Please useDescribeSecurityProfileResponse$additionalMetricsToRetainV2
            instead._


            A list of metrics whose data is retained (stored). By default, data is
            retained for any metric used in the profile''s `behaviors`, but it is
            also retained for any metric specified here.'
        additionalMetricsToRetainV2:
          allOf:
          - $ref: '#/components/schemas/AdditionalMetricsToRetainV2List'
          description: A list of metrics whose data is retained (stored). By default,
            data is retained for any metric used in the profile's behaviors, but it
            is also retained for any metric specified here.
        version:
          allOf:
          - $ref: '#/components/schemas/Version'
          description: The version of the security profile. A new version is generated
            whenever the security profile is updated.
        creationDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time the security profile was created.
        lastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time the security profile was last modified.
        metricsExportConfig:
          allOf:
          - $ref: '#/components/schemas/MetricsExportConfig'
          description: Specifies the MQTT topic and role ARN required for metric export.
    DescribeStreamRequest:
      type: object
      properties:
        streamId:
          allOf:
          - $ref: '#/components/schemas/StreamId'
          description: The stream ID.
      required:
      - streamId
    DescribeStreamResponse:
      type: object
      properties:
        streamInfo:
          allOf:
          - $ref: '#/components/schemas/StreamInfo'
          description: Information about the stream.
    DescribeThingGroupRequest:
      type: object
      properties:
        thingGroupName:
          allOf:
          - $ref: '#/components/schemas/ThingGroupName'
          description: The name of the thing group.
      required:
      - thingGroupName
    DescribeThingGroupResponse:
      type: object
      properties:
        thingGroupName:
          allOf:
          - $ref: '#/components/schemas/ThingGroupName'
          description: The name of the thing group.
        thingGroupId:
          allOf:
          - $ref: '#/components/schemas/ThingGroupId'
          description: The thing group ID.
        thingGroupArn:
          allOf:
          - $ref: '#/components/schemas/ThingGroupArn'
          description: The thing group ARN.
        version:
          allOf:
          - $ref: '#/components/schemas/Version'
          description: The version of the thing group.
        thingGroupProperties:
          allOf:
          - $ref: '#/components/schemas/ThingGroupProperties'
          description: The thing group properties.
        thingGroupMetadata:
          allOf:
          - $ref: '#/components/schemas/ThingGroupMetadata'
          description: Thing group metadata.
        indexName:
          allOf:
          - $ref: '#/components/schemas/IndexName'
          description: The dynamic thing group index name.
        queryString:
          allOf:
          - $ref: '#/components/schemas/QueryString'
          description: The dynamic thing group search query string.
        queryVersion:
          allOf:
          - $ref: '#/components/schemas/QueryVersion'
          description: The dynamic thing group query version.
        status:
          allOf:
          - $ref: '#/components/schemas/DynamicGroupStatus'
          description: The dynamic thing group status.
    DescribeThingRegistrationTaskRequest:
      type: object
      properties:
        taskId:
          allOf:
          - $ref: '#/components/schemas/TaskId'
          description: The task ID.
      required:
      - taskId
    DescribeThingRegistrationTaskResponse:
      type: object
      properties:
        taskId:
          allOf:
          - $ref: '#/components/schemas/TaskId'
          description: The task ID.
        creationDate:
          allOf:
          - $ref: '#/components/schemas/CreationDate'
          description: The task creation date.
        lastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/LastModifiedDate'
          description: The date when the task was last modified.
        templateBody:
          allOf:
          - $ref: '#/components/schemas/TemplateBody'
          description: The task's template.
        inputFileBucket:
          allOf:
          - $ref: '#/components/schemas/RegistryS3BucketName'
          description: The S3 bucket that contains the input file.
        inputFileKey:
          allOf:
          - $ref: '#/components/schemas/RegistryS3KeyName'
          description: The input file key.
        roleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          description: The role ARN that grants access to the input file bucket.
        status:
          allOf:
          - $ref: '#/components/schemas/Status'
          description: The status of the bulk thing provisioning task.
        message:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage'
          description: The message.
        successCount:
          allOf:
          - $ref: '#/components/schemas/Count'
          description: The number of things successfully provisioned.
        failureCount:
          allOf:
          - $ref: '#/components/schemas/Count'
          description: The number of things that failed to be provisioned.
        percentageProgress:
          allOf:
          - $ref: '#/components/schemas/Percentage'
          description: The progress of the bulk provisioning task expressed as a percentage.
    DescribeThingRequest:
      type: object
      properties:
        thingName:
          allOf:
          - $ref: '#/components/schemas/ThingName'
          description: The name of the thing.
      required:
      - thingName
      description: The input for the DescribeThing operation.
    DescribeThingResponse:
      type: object
      properties:
        defaultClientId:
          allOf:
          - $ref: '#/components/schemas/ClientId'
          description: 'The default MQTT client ID. For a typical device, the thing
            name is also used as the default MQTT client ID. Although we don’t require
            a mapping between a thing''s registry name and its use of MQTT client
            IDs, certificates, or shadow state, we recommend that you choose a thing
            name and use it as the MQTT client ID for the registry and the Device
            Shadow service.


            This lets you better organize your IoT fleet without removing the flexibility
            of the underlying device certificate model or shadows.'
        thingName:
          allOf:
          - $ref: '#/components/schemas/ThingName'
          description: The name of the thing.
        thingId:
          allOf:
          - $ref: '#/components/schemas/ThingId'
          description: The ID of the thing to describe.
        thingArn:
          allOf:
          - $ref: '#/components/schemas/ThingArn'
          description: The ARN of the thing to describe.
        thingTypeName:
          allOf:
          - $ref: '#/components/schemas/ThingTypeName'
          description: The thing type name.
        attributes:
          allOf:
          - $ref: '#/components/schemas/Attributes'
          description: The thing attributes.
        version:
          allOf:
          - $ref: '#/components/schemas/Version'
          description: 'The current version of the thing record in the registry.


            To avoid unintentional changes to the information in the registry, you
            can pass the version information in the `expectedVersion` parameter of
            the `UpdateThing` and `DeleteThing` calls.'
        billingGroupName:
          allOf:
          - $ref: '#/components/schemas/BillingGroupName'
          description: The name of the billing group the thing belongs to.
      description: The output from the DescribeThing operation.
    DescribeThingTypeRequest:
      type: object
      properties:
        thingTypeName:
          allOf:
          - $ref: '#/components/schemas/ThingTypeName'
          description: The name of the thing type.
      required:
      - thingTypeName
      description: The input for the DescribeThingType operation.
    DescribeThingTypeResponse:
      type: object
      properties:
        thingTypeName:
          allOf:
          - $ref: '#/components/schemas/ThingTypeName'
          description: The name of the thing type.
        thingTypeId:
          allOf:
          - $ref: '#/components/schemas/ThingTypeId'
          description: The thing type ID.
        thingTypeArn:
          allOf:
          - $ref: '#/components/schemas/ThingTypeArn'
          description: The thing type ARN.
        thingTypeProperties:
          allOf:
          - $ref: '#/components/schemas/ThingTypeProperties'
          description: The ThingTypeProperties contains information about the thing
            type including description, a list of searchable thing attribute names,
            and MQTT5 configuration.
        thingTypeMetadata:
          allOf:
          - $ref: '#/components/schemas/ThingTypeMetadata'
          description: 'The ThingTypeMetadata contains additional information about
            the thing type including: creation date and time, a value indicating whether
            the thing type is deprecated, and a date and time when it was deprecated.'
      description: The output for the DescribeThingType operation.
    Description:
      type: string
    Destination:
      type: object
      properties:
        s3Destination:
          allOf:
          - $ref: '#/components/schemas/S3Destination'
          description: Describes the location in S3 of the updated firmware.
      description: Describes the location of the updated firmware.
    DestinationPackageVersions:
      type: array
      items:
        $ref: '#/components/schemas/PackageVersionArn'
    DetachPolicyRequest:
      type: object
      properties:
        policyName:
          allOf:
          - $ref: '#/components/schemas/PolicyName'
          description: The policy to detach.
        target:
          allOf:
          - $ref: '#/components/schemas/PolicyTarget'
          description: The target from which the policy will be detached.
      required:
      - policyName
      - target
    DetachPrincipalPolicyRequest:
      type: object
      properties:
        policyName:
          allOf:
          - $ref: '#/components/schemas/PolicyName'
          description: The name of the policy to detach.
        principal:
          allOf:
          - $ref: '#/components/schemas/Principal'
          description: 'The principal.


            Valid principals are CertificateArn (arn:aws:iot:_region_ :_accountId_
            :cert/_certificateId_), thingGroupArn (arn:aws:iot:_region_ :_accountId_
            :thinggroup/_groupName_) and CognitoId (_region_ :_id_).'
      required:
      - policyName
      - principal
      description: The input for the DetachPrincipalPolicy operation.
    DetachSecurityProfileRequest:
      type: object
      properties:
        securityProfileName:
          allOf:
          - $ref: '#/components/schemas/SecurityProfileName'
          description: The security profile that is detached.
        securityProfileTargetArn:
          allOf:
          - $ref: '#/components/schemas/SecurityProfileTargetArn'
          description: The ARN of the thing group from which the security profile
            is detached.
      required:
      - securityProfileName
      - securityProfileTargetArn
    DetachSecurityProfileResponse:
      type: object
      properties: {}
    DetachThingPrincipalRequest:
      type: object
      properties:
        thingName:
          allOf:
          - $ref: '#/components/schemas/ThingName'
          description: The name of the thing.
        principal:
          allOf:
          - $ref: '#/components/schemas/Principal'
          description: If the principal is a certificate, this value must be ARN of
            the certificate. If the principal is an Amazon Cognito identity, this
            value must be the ID of the Amazon Cognito identity.
      required:
      - thingName
      - principal
      description: The input for the DetachThingPrincipal operation.
    DetachThingPrincipalResponse:
      type: object
      properties: {}
      description: The output from the DetachThingPrincipal operation.
    DetailsKey:
      type: string
      pattern: ^[a-zA-Z0-9:_-]+$
      minLength: 1
      maxLength: 128
    DetailsMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/DetailsValue'
    DetailsValue:
      type: string
      pattern: ^[^\p{C}]+$
      minLength: 1
    DetectMitigationActionExecution:
      type: object
      properties:
        taskId:
          allOf:
          - $ref: '#/components/schemas/MitigationActionsTaskId'
          description: The unique identifier of the task.
        violationId:
          allOf:
          - $ref: '#/components/schemas/ViolationId'
          description: The unique identifier of the violation.
        actionName:
          allOf:
          - $ref: '#/components/schemas/MitigationActionName'
          description: The friendly name that uniquely identifies the mitigation action.
        thingName:
          allOf:
          - $ref: '#/components/schemas/DeviceDefenderThingName'
          description: The name of the thing.
        executionStartDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date a mitigation action was started.
        executionEndDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date a mitigation action ended.
        status:
          allOf:
          - $ref: '#/components/schemas/DetectMitigationActionExecutionStatus'
          description: The status of a mitigation action.
        errorCode:
          allOf:
          - $ref: '#/components/schemas/DetectMitigationActionExecutionErrorCode'
          description: The error code of a mitigation action.
        message:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage'
          description: The message of a mitigation action.
      description: Describes which mitigation actions should be executed.
    DetectMitigationActionExecutionErrorCode:
      type: string
    DetectMitigationActionExecutionList:
      type: array
      items:
        $ref: '#/components/schemas/DetectMitigationActionExecution'
    DetectMitigationActionExecutionStatus:
      type: string
      enum:
      - IN_PROGRESS
      - SUCCESSFUL
      - FAILED
      - SKIPPED
    DetectMitigationActionsTaskStatistics:
      type: object
      properties:
        actionsExecuted:
          allOf:
          - $ref: '#/components/schemas/GenericLongValue'
          description: The actions that were performed.
        actionsSkipped:
          allOf:
          - $ref: '#/components/schemas/GenericLongValue'
          description: The actions that were skipped.
        actionsFailed:
          allOf:
          - $ref: '#/components/schemas/GenericLongValue'
          description: The actions that failed.
      description: The statistics of a mitigation action task.
    DetectMitigationActionsTaskStatus:
      type: string
      enum:
      - IN_PROGRESS
      - SUCCESSFUL
      - FAILED
      - CANCELED
    DetectMitigationActionsTaskSummary:
      type: object
      properties:
        taskId:
          allOf:
          - $ref: '#/components/schemas/MitigationActionsTaskId'
          description: The unique identifier of the task.
        taskStatus:
          allOf:
          - $ref: '#/components/schemas/DetectMitigationActionsTaskStatus'
          description: The status of the task.
        taskStartTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date the task started.
        taskEndTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date the task ended.
        target:
          allOf:
          - $ref: '#/components/schemas/DetectMitigationActionsTaskTarget'
          description: Specifies the ML Detect findings to which the mitigation actions
            are applied.
        violationEventOccurrenceRange:
          allOf:
          - $ref: '#/components/schemas/ViolationEventOccurrenceRange'
          description: Specifies the time period of which violation events occurred
            between.
        onlyActiveViolationsIncluded:
          allOf:
          - $ref: '#/components/schemas/PrimitiveBoolean'
          description: Includes only active violations.
        suppressedAlertsIncluded:
          allOf:
          - $ref: '#/components/schemas/PrimitiveBoolean'
          description: Includes suppressed alerts.
        actionsDefinition:
          allOf:
          - $ref: '#/components/schemas/MitigationActionList'
          description: The definition of the actions.
        taskStatistics:
          allOf:
          - $ref: '#/components/schemas/DetectMitigationActionsTaskStatistics'
          description: The statistics of a mitigation action task.
      description: The summary of the mitigation action tasks.
    DetectMitigationActionsTaskSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/DetectMitigationActionsTaskSummary'
    DetectMitigationActionsTaskTarget:
      type: object
      properties:
        violationIds:
          allOf:
          - $ref: '#/components/schemas/TargetViolationIdsForDetectMitigationActions'
          description: The unique identifiers of the violations.
        securityProfileName:
          allOf:
          - $ref: '#/components/schemas/SecurityProfileName'
          description: The name of the security profile.
        behaviorName:
          allOf:
          - $ref: '#/components/schemas/BehaviorName'
          description: The name of the behavior.
      description: The target of a mitigation action task.
    DetectMitigationActionsToExecuteList:
      type: array
      items:
        $ref: '#/components/schemas/MitigationActionName'
    DeviceCertificateUpdateAction:
      type: string
      enum:
      - DEACTIVATE
    DeviceDefenderIndexingMode:
      type: string
      enum:
      - 'OFF'
      - VIOLATIONS
    DeviceDefenderThingName:
      type: string
      minLength: 1
      maxLength: 128
    DimensionArn:
      type: string
    DimensionName:
      type: string
      pattern: ^[a-zA-Z0-9:_-]+$
      minLength: 1
      maxLength: 128
    DimensionNames:
      type: array
      items:
        $ref: '#/components/schemas/DimensionName'
    DimensionStringValue:
      type: string
      minLength: 1
      maxLength: 256
    DimensionStringValues:
      type: array
      items:
        $ref: '#/components/schemas/DimensionStringValue'
    DimensionType:
      type: string
      enum:
      - TOPIC_FILTER
    DimensionValueOperator:
      type: string
      enum:
      - IN
      - NOT_IN
    DisableAllLogs:
      type: boolean
      default: false
    DisableTopicRuleRequest:
      type: object
      properties:
        ruleName:
          allOf:
          - $ref: '#/components/schemas/RuleName'
          description: The name of the rule to disable.
      required:
      - ruleName
      description: The input for the DisableTopicRuleRequest operation.
    DisassociateSbomFromPackageVersionRequest:
      type: object
      properties:
        packageName:
          allOf:
          - $ref: '#/components/schemas/PackageName'
          description: The name of the new software package.
        versionName:
          allOf:
          - $ref: '#/components/schemas/VersionName'
          description: The name of the new package version.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique case-sensitive identifier that you can provide to
            ensure the idempotency of the request. Don't reuse this client token if
            a new idempotent request is required.
      required:
      - packageName
      - versionName
    DisassociateSbomFromPackageVersionResponse:
      type: object
      properties: {}
    DisconnectReason:
      type: string
    DisconnectReasonValue:
      type: string
      enum:
      - AUTH_ERROR
      - CLIENT_INITIATED_DISCONNECT
      - CLIENT_ERROR
      - CONNECTION_LOST
      - DUPLICATE_CLIENTID
      - FORBIDDEN_ACCESS
      - MQTT_KEEP_ALIVE_TIMEOUT
      - SERVER_ERROR
      - SERVER_INITIATED_DISCONNECT
      - THROTTLED
      - WEBSOCKET_TTL_EXPIRATION
      - CUSTOMAUTH_TTL_EXPIRATION
      - UNKNOWN
      - NONE
    DisplayName:
      type: string
      pattern: ^[^\p{C}]*$
      minLength: 0
      maxLength: 64
    DocumentParameter:
      type: object
      properties:
        key:
          allOf:
          - $ref: '#/components/schemas/ParameterKey'
          description: Key of the map field containing the patterns that need to be
            replaced in a managed template job document schema.
        description:
          allOf:
          - $ref: '#/components/schemas/JobDescription'
          description: Description of the map field containing the patterns that need
            to be replaced in a managed template job document schema.
        regex:
          allOf:
          - $ref: '#/components/schemas/Regex'
          description: A regular expression of the patterns that need to be replaced
            in a managed template job document schema.
        example:
          allOf:
          - $ref: '#/components/schemas/Example'
          description: An example illustrating a pattern that need to be replaced
            in a managed template job document schema.
        optional:
          allOf:
          - $ref: '#/components/schemas/Optional'
          description: Specifies whether a pattern that needs to be replaced in a
            managed template job document schema is optional or required.
      description: 'A map of key-value pairs containing the patterns that need to
        be replaced in a managed template job document schema. You can use the description
        of each key as a guidance to specify the inputs during runtime when creating
        a job.


        `documentParameters` can only be used when creating jobs from Amazon Web Services
        managed templates. This parameter can''t be used with custom job templates
        or to create jobs from them.'
    DocumentParameters:
      type: array
      items:
        $ref: '#/components/schemas/DocumentParameter'
    DomainConfigurationArn:
      type: string
    DomainConfigurationName:
      type: string
      pattern: ^[\w.-]+$
      minLength: 1
      maxLength: 128
    DomainConfigurationStatus:
      type: string
      enum:
      - ENABLED
      - DISABLED
    DomainConfigurationSummary:
      type: object
      properties:
        domainConfigurationName:
          allOf:
          - $ref: '#/components/schemas/ReservedDomainConfigurationName'
          description: The name of the domain configuration. This value must be unique
            to a region.
        domainConfigurationArn:
          allOf:
          - $ref: '#/components/schemas/DomainConfigurationArn'
          description: The ARN of the domain configuration.
        serviceType:
          allOf:
          - $ref: '#/components/schemas/ServiceType'
          description: The type of service delivered by the endpoint.
      description: "The summary of a domain configuration. A domain configuration\
        \ specifies custom IoT-specific information about a domain. A domain configuration\
        \ can be associated with an Amazon Web Services-managed domain (for example,\
        \ dbc123defghijk.iot.us-west-2.amazonaws.com), a customer managed domain,\
        \ or a default endpoint.\n\n  * Data\n\n  * Jobs\n\n  * CredentialProvider"
    DomainConfigurations:
      type: array
      items:
        $ref: '#/components/schemas/DomainConfigurationSummary'
    DomainName:
      type: string
      pattern: ^[\s\S]*$
      minLength: 1
      maxLength: 253
    DomainType:
      type: string
      enum:
      - ENDPOINT
      - AWS_MANAGED
      - CUSTOMER_MANAGED
    DoubleParameterValue:
      type: number
      format: double
    DurationInMinutes:
      type: integer
      minimum: 1
      maximum: 1430
    DurationSeconds:
      type: integer
    DynamicGroupStatus:
      type: string
      enum:
      - ACTIVE
      - BUILDING
      - REBUILDING
    DynamoDBAction:
      type: object
      properties:
        tableName:
          allOf:
          - $ref: '#/components/schemas/TableName'
          description: The name of the DynamoDB table.
        roleArn:
          allOf:
          - $ref: '#/components/schemas/AwsArn'
          description: The ARN of the IAM role that grants access to the DynamoDB
            table.
        operation:
          allOf:
          - $ref: '#/components/schemas/DynamoOperation'
          description: 'The type of operation to be performed. This follows the substitution
            template, so it can be `${operation}`, but the substitution must result
            in one of the following: `INSERT`, `UPDATE`, or `DELETE`.'
        hashKeyField:
          allOf:
          - $ref: '#/components/schemas/HashKeyField'
          description: The hash key name.
        hashKeyValue:
          allOf:
          - $ref: '#/components/schemas/HashKeyValue'
          description: The hash key value.
        hashKeyType:
          allOf:
          - $ref: '#/components/schemas/DynamoKeyType'
          description: The hash key type. Valid values are "STRING" or "NUMBER"
        rangeKeyField:
          allOf:
          - $ref: '#/components/schemas/RangeKeyField'
          description: The range key name.
        rangeKeyValue:
          allOf:
          - $ref: '#/components/schemas/RangeKeyValue'
          description: The range key value.
        rangeKeyType:
          allOf:
          - $ref: '#/components/schemas/DynamoKeyType'
          description: The range key type. Valid values are "STRING" or "NUMBER"
        payloadField:
          allOf:
          - $ref: '#/components/schemas/PayloadField'
          description: The action payload. This name can be customized.
      required:
      - tableName
      - roleArn
      - hashKeyField
      - hashKeyValue
      description: 'Describes an action to write to a DynamoDB table.


        The `tableName`, `hashKeyField`, and `rangeKeyField` values must match the
        values used when you created the table.


        The `hashKeyValue` and `rangeKeyvalue` fields use a substitution template
        syntax. These templates provide data at runtime. The syntax is as follows:
        ${_sql-expression_}.


        You can specify any valid expression in a WHERE or SELECT clause, including
        JSON properties, comparisons, calculations, and functions. For example, the
        following field uses the third level of the topic:


        `"hashKeyValue": "${topic(3)}"`


        The following field uses the timestamp:


        `"rangeKeyValue": "${timestamp()}"`'
    DynamoDBv2Action:
      type: object
      properties:
        roleArn:
          allOf:
          - $ref: '#/components/schemas/AwsArn'
          description: The ARN of the IAM role that grants access to the DynamoDB
            table.
        putItem:
          allOf:
          - $ref: '#/components/schemas/PutItemInput'
          description: 'Specifies the DynamoDB table to which the message data will
            be written. For example:


            `{ "dynamoDBv2": { "roleArn": "aws:iam:12341251:my-role" "putItem": {
            "tableName": "my-table" } } }`


            Each attribute in the message payload will be written to a separate column
            in the DynamoDB database.'
      required:
      - roleArn
      - putItem
      description: 'Describes an action to write to a DynamoDB table.


        This DynamoDB action writes each attribute in the message payload into it''s
        own column in the DynamoDB table.'
    DynamoKeyType:
      type: string
      enum:
      - STRING
      - NUMBER
    DynamoOperation:
      type: string
    EffectivePolicies:
      type: array
      items:
        $ref: '#/components/schemas/EffectivePolicy'
    EffectivePolicy:
      type: object
      properties:
        policyName:
          allOf:
          - $ref: '#/components/schemas/PolicyName'
          description: The policy name.
        policyArn:
          allOf:
          - $ref: '#/components/schemas/PolicyArn'
          description: The policy ARN.
        policyDocument:
          allOf:
          - $ref: '#/components/schemas/PolicyDocument'
          description: The IAM policy document.
      description: The policy that has the effect on the authorization results.
    ElasticsearchAction:
      type: object
      properties:
        roleArn:
          allOf:
          - $ref: '#/components/schemas/AwsArn'
          description: The IAM role ARN that has access to OpenSearch.
        endpoint:
          allOf:
          - $ref: '#/components/schemas/ElasticsearchEndpoint'
          description: The endpoint of your OpenSearch domain.
        index:
          allOf:
          - $ref: '#/components/schemas/ElasticsearchIndex'
          description: The index where you want to store your data.
        type:
          allOf:
          - $ref: '#/components/schemas/ElasticsearchType'
          description: The type of document you are storing.
        id:
          allOf:
          - $ref: '#/components/schemas/ElasticsearchId'
          description: The unique identifier for the document you are storing.
      required:
      - roleArn
      - endpoint
      - index
      - type
      - id
      description: 'Describes an action that writes data to an Amazon OpenSearch Service
        domain.


        The `Elasticsearch` action can only be used by existing rule actions. To create
        a new rule action or to update an existing rule action, use the `OpenSearch`
        rule action instead. For more information, see [OpenSearchAction](https://docs.aws.amazon.com/iot/latest/apireference/API_OpenSearchAction.html).'
    ElasticsearchEndpoint:
      type: string
      pattern: ^https?://
    ElasticsearchId:
      type: string
    ElasticsearchIndex:
      type: string
    ElasticsearchType:
      type: string
    EnableCachingForHttp:
      type: boolean
    EnableIoTLoggingParams:
      type: object
      properties:
        roleArnForLogging:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          description: The Amazon Resource Name (ARN) of the IAM role used for logging.
        logLevel:
          allOf:
          - $ref: '#/components/schemas/LogLevel'
          description: Specifies the type of information to be logged.
      required:
      - roleArnForLogging
      - logLevel
      description: Parameters used when defining a mitigation action that enable Amazon
        Web Services IoT Core logging.
    EnableOCSPCheck:
      type: boolean
    EnableTopicRuleRequest:
      type: object
      properties:
        ruleName:
          allOf:
          - $ref: '#/components/schemas/RuleName'
          description: The name of the topic rule to enable.
      required:
      - ruleName
      description: The input for the EnableTopicRuleRequest operation.
    Enabled:
      type: boolean
      default: false
    Enabled2:
      type: boolean
    EnabledBoolean:
      type: boolean
    EndpointAddress:
      type: string
    EndpointType:
      type: string
      pattern: ^[\s\S]*$
      minLength: 0
      maxLength: 128
    Environment:
      type: string
      pattern: ^[^\p{C}]+$
    Environments:
      type: array
      items:
        $ref: '#/components/schemas/Environment'
    ErrorCode:
      type: string
    ErrorInfo:
      type: object
      properties:
        code:
          allOf:
          - $ref: '#/components/schemas/Code'
          description: The error code.
        message:
          allOf:
          - $ref: '#/components/schemas/OTAUpdateErrorMessage'
          description: The error message.
      description: Error information.
    ErrorMessage:
      type: string
      minLength: 0
      maxLength: 2048
    ErrorMessage2:
      type: string
    EvaluationStatistic:
      type: string
      pattern: ^(p0|p0\.1|p0\.01|p1|p10|p50|p90|p99|p99\.9|p99\.99|p100)$
    EventConfigurations:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Configuration'
    EventType:
      type: string
      enum:
      - THING
      - THING_GROUP
      - THING_TYPE
      - THING_GROUP_MEMBERSHIP
      - THING_GROUP_HIERARCHY
      - THING_TYPE_ASSOCIATION
      - JOB
      - JOB_EXECUTION
      - POLICY
      - CERTIFICATE
      - CA_CERTIFICATE
    Example:
      type: string
      pattern: ^[^\p{C}]+$
    ExecutionNamePrefix:
      type: string
    ExecutionNumber:
      type: integer
      format: int64
    ExpectedVersion:
      type: integer
      format: int64
    ExpiresInSec:
      type: integer
      format: int64
      minimum: 60
      maximum: 3600
    ExpiresInSeconds:
      type: integer
      format: int64
    ExplicitDeny:
      type: object
      properties:
        policies:
          allOf:
          - $ref: '#/components/schemas/Policies'
          description: The policies that denied the authorization.
      description: Information that explicitly denies authorization.
    ExponentialRolloutRate:
      type: object
      properties:
        baseRatePerMinute:
          allOf:
          - $ref: '#/components/schemas/RolloutRatePerMinute'
          description: The minimum number of things that will be notified of a pending
            job, per minute at the start of job rollout. This parameter allows you
            to define the initial rate of rollout.
        incrementFactor:
          allOf:
          - $ref: '#/components/schemas/IncrementFactor'
          description: 'The exponential factor to increase the rate of rollout for
            a job.


            Amazon Web Services IoT Core supports up to one digit after the decimal
            (for example, 1.5, but not 1.55).'
        rateIncreaseCriteria:
          allOf:
          - $ref: '#/components/schemas/RateIncreaseCriteria'
          description: The criteria to initiate the increase in rate of rollout for
            a job.
      required:
      - baseRatePerMinute
      - incrementFactor
      - rateIncreaseCriteria
      description: Allows you to create an exponential rate of rollout for a job.
    ExportMetric:
      type: boolean
    FailedChecksCount:
      type: integer
    FailedFindingsCount:
      type: integer
      format: int64
    FailedThings:
      type: integer
    Field:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/FieldName'
          description: The name of the field.
        type:
          allOf:
          - $ref: '#/components/schemas/FieldType'
          description: The data type of the field.
      description: Describes the name and data type at a field.
    FieldName:
      type: string
    FieldType:
      type: string
      enum:
      - Number
      - String
      - Boolean
    Fields:
      type: array
      items:
        $ref: '#/components/schemas/Field'
    FileId:
      type: integer
      minimum: 0
      maximum: 255
    FileLocation:
      type: object
      properties:
        stream:
          allOf:
          - $ref: '#/components/schemas/Stream'
          description: The stream that contains the OTA update.
        s3Location:
          allOf:
          - $ref: '#/components/schemas/S3Location'
          description: The location of the updated firmware in S3.
      description: The location of the OTA update.
    FileName:
      type: string
    FileType:
      type: integer
      minimum: 0
      maximum: 255
    FindingId:
      type: string
      pattern: ^[a-zA-Z0-9_-]+$
      minLength: 1
      maxLength: 128
    FindingIds:
      type: array
      items:
        $ref: '#/components/schemas/FindingId'
    FirehoseAction:
      type: object
      properties:
        roleArn:
          allOf:
          - $ref: '#/components/schemas/AwsArn'
          description: The IAM role that grants access to the Amazon Kinesis Firehose
            stream.
        deliveryStreamName:
          allOf:
          - $ref: '#/components/schemas/DeliveryStreamName'
          description: The delivery stream name.
        separator:
          allOf:
          - $ref: '#/components/schemas/FirehoseSeparator'
          description: 'A character separator that will be used to separate records
            written to the Firehose stream. Valid values are: ''\n'' (newline), ''\t''
            (tab), ''\r\n'' (Windows newline), '','' (comma).'
        batchMode:
          allOf:
          - $ref: '#/components/schemas/BatchMode'
          description: 'Whether to deliver the Kinesis Data Firehose stream as a batch
            by using [ `PutRecordBatch` ](https://docs.aws.amazon.com/firehose/latest/APIReference/API_PutRecordBatch.html).
            The default value is `false`.


            When `batchMode` is `true` and the rule''s SQL statement evaluates to
            an Array, each Array element forms one record in the [ `PutRecordBatch`
            ](https://docs.aws.amazon.com/firehose/latest/APIReference/API_PutRecordBatch.html)
            request. The resulting array can''t have more than 500 records.'
      required:
      - roleArn
      - deliveryStreamName
      description: Describes an action that writes data to an Amazon Kinesis Firehose
        stream.
    FirehoseSeparator:
      type: string
      pattern: ^([\n\t])|(\r\n)|(,)$
    Flag:
      type: boolean
      default: false
    FleetMetricArn:
      type: string
    FleetMetricDescription:
      type: string
      pattern: ^[\p{Graph}\x20]*$
      minLength: 0
      maxLength: 1024
    FleetMetricName:
      type: string
      pattern: ^[a-zA-Z0-9_\-\.]+$
      minLength: 1
      maxLength: 128
    FleetMetricNameAndArn:
      type: object
      properties:
        metricName:
          allOf:
          - $ref: '#/components/schemas/FleetMetricName'
          description: The fleet metric name.
        metricArn:
          allOf:
          - $ref: '#/components/schemas/FleetMetricArn'
          description: The fleet metric ARN.
      description: The name and ARN of a fleet metric.
    FleetMetricNameAndArnList:
      type: array
      items:
        $ref: '#/components/schemas/FleetMetricNameAndArn'
    FleetMetricPeriod:
      type: integer
      minimum: 60
      maximum: 86400
    FleetMetricUnit:
      type: string
      enum:
      - Seconds
      - Microseconds
      - Milliseconds
      - Bytes
      - Kilobytes
      - Megabytes
      - Gigabytes
      - Terabytes
      - Bits
      - Kilobits
      - Megabits
      - Gigabits
      - Terabits
      - Percent
      - Count
      - Bytes/Second
      - Kilobytes/Second
      - Megabytes/Second
      - Gigabytes/Second
      - Terabytes/Second
      - Bits/Second
      - Kilobits/Second
      - Megabits/Second
      - Gigabits/Second
      - Terabits/Second
      - Count/Second
      - None
    ForceDelete:
      type: boolean
      default: false
    ForceDeleteAWSJob:
      type: boolean
      default: false
    ForceFlag:
      type: boolean
      default: false
    Forced:
      type: boolean
    FunctionArn:
      type: string
    GenerationId:
      type: string
    GenericLongValue:
      type: integer
      format: int64
    GeoLocationTarget:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/TargetFieldName'
          description: The `name` of the geolocation target field. If the target field
            is part of a named shadow, you must select the named shadow using the
            `namedShadow` filter.
        order:
          allOf:
          - $ref: '#/components/schemas/TargetFieldOrder'
          description: The `order` of the geolocation target field. This field is
            optional. The default value is `LatLon`.
      description: A geolocation target that you select to index. Each geolocation
        target contains a `name` and `order` key-value pair that specifies the geolocation
        target fields.
    GeoLocationsFilter:
      type: array
      items:
        $ref: '#/components/schemas/GeoLocationTarget'
    GetBehaviorModelTrainingSummariesRequest:
      type: object
      properties:
        securityProfileName:
          allOf:
          - $ref: '#/components/schemas/SecurityProfileName'
          description: The name of the security profile.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/TinyMaxResults'
          description: The maximum number of results to return at one time. The default
            is 10.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results.
    GetBehaviorModelTrainingSummariesResponse:
      type: object
      properties:
        summaries:
          allOf:
          - $ref: '#/components/schemas/BehaviorModelTrainingSummaries'
          description: A list of all ML Detect behaviors and their model status for
            a given Security Profile.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A token that can be used to retrieve the next set of results,
            or `null` if there are no additional results.
    GetBucketsAggregationRequest:
      type: object
      properties:
        indexName:
          allOf:
          - $ref: '#/components/schemas/IndexName'
          description: The name of the index to search.
        queryString:
          allOf:
          - $ref: '#/components/schemas/QueryString'
          description: The search query string.
        aggregationField:
          allOf:
          - $ref: '#/components/schemas/AggregationField'
          description: The aggregation field.
        queryVersion:
          allOf:
          - $ref: '#/components/schemas/QueryVersion'
          description: The version of the query.
        bucketsAggregationType:
          allOf:
          - $ref: '#/components/schemas/BucketsAggregationType'
          description: The basic control of the response shape and the bucket aggregation
            type to perform.
      required:
      - queryString
      - aggregationField
      - bucketsAggregationType
    GetBucketsAggregationResponse:
      type: object
      properties:
        totalCount:
          allOf:
          - $ref: '#/components/schemas/Count'
          description: The total number of things that fit the query string criteria.
        buckets:
          allOf:
          - $ref: '#/components/schemas/Buckets'
          description: 'The main part of the response with a list of buckets. Each
            bucket contains a `keyValue` and a `count`.


            `keyValue`: The aggregation field value counted for the particular bucket.


            `count`: The number of documents that have that value.'
    GetCardinalityRequest:
      type: object
      properties:
        indexName:
          allOf:
          - $ref: '#/components/schemas/IndexName'
          description: The name of the index to search.
        queryString:
          allOf:
          - $ref: '#/components/schemas/QueryString'
          description: The search query string.
        aggregationField:
          allOf:
          - $ref: '#/components/schemas/AggregationField'
          description: The field to aggregate.
        queryVersion:
          allOf:
          - $ref: '#/components/schemas/QueryVersion'
          description: The query version.
      required:
      - queryString
    GetCardinalityResponse:
      type: object
      properties:
        cardinality:
          allOf:
          - $ref: '#/components/schemas/Count'
          description: The approximate count of unique values that match the query.
    GetCommandExecutionRequest:
      type: object
      properties:
        executionId:
          allOf:
          - $ref: '#/components/schemas/CommandExecutionId'
          description: The unique identifier for the command execution. This information
            is returned as a response of the `StartCommandExecution` API request.
        targetArn:
          allOf:
          - $ref: '#/components/schemas/TargetArn'
          description: The Amazon Resource Number (ARN) of the device on which the
            command execution is being performed.
        includeResult:
          allOf:
          - $ref: '#/components/schemas/BooleanWrapperObject'
          description: Can be used to specify whether to include the result of the
            command execution in the `GetCommandExecution` API response. Your device
            can use this field to provide additional information about the command
            execution. You only need to specify this field when using the `AWS-IoT`
            namespace.
      required:
      - executionId
      - targetArn
    GetCommandExecutionResponse:
      type: object
      properties:
        executionId:
          allOf:
          - $ref: '#/components/schemas/CommandExecutionId'
          description: The unique identifier of the command execution.
        commandArn:
          allOf:
          - $ref: '#/components/schemas/CommandArn'
          description: The Amazon Resource Number (ARN) of the command. For example,
            ``arn:aws:iot:::command/
        targetArn:
          allOf:
          - $ref: '#/components/schemas/TargetArn'
          description: The Amazon Resource Number (ARN) of the device on which the
            command execution is being performed.
        status:
          allOf:
          - $ref: '#/components/schemas/CommandExecutionStatus'
          description: The status of the command execution. After your devices receive
            the command and start performing the operations specified in the command,
            it can use the `UpdateCommandExecution` MQTT API to update the status
            information.
        statusReason:
          allOf:
          - $ref: '#/components/schemas/StatusReason'
          description: Your devices can use this parameter to provide additional context
            about the status of a command execution using a reason code and description.
        result:
          allOf:
          - $ref: '#/components/schemas/CommandExecutionResultMap'
          description: 'The result value for the current state of the command execution.
            The status provides information about the progress of the command execution.
            The device can use the result field to share additional details about
            the execution such as a return value of a remote function call.


            If you use the `AWS-IoT-FleetWise` namespace, then this field is not applicable
            in the API response.'
        parameters:
          allOf:
          - $ref: '#/components/schemas/CommandExecutionParameterMap'
          description: The list of parameters that the `StartCommandExecution` API
            used when performing the command on the device.
        executionTimeoutSeconds:
          allOf:
          - $ref: '#/components/schemas/CommandExecutionTimeoutInSeconds'
          description: Specifies the amount of time in seconds that the device can
            take to finish a command execution. A timer starts when the command execution
            is created. If the command execution status is not set to another terminal
            state before the timer expires, it will automatically update to `TIMED_OUT`.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/DateType'
          description: The timestamp, when the command execution was created.
        lastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/DateType'
          description: The timestamp, when the command execution was last updated.
        startedAt:
          allOf:
          - $ref: '#/components/schemas/DateType'
          description: The timestamp, when the command execution was started.
        completedAt:
          allOf:
          - $ref: '#/components/schemas/DateType'
          description: The timestamp, when the command execution was completed.
        timeToLive:
          allOf:
          - $ref: '#/components/schemas/DateType'
          description: The time to live (TTL) parameter that indicates the duration
            for which executions will be retained in your account. The default value
            is six months.
    GetCommandRequest:
      type: object
      properties:
        commandId:
          allOf:
          - $ref: '#/components/schemas/CommandId'
          description: The unique identifier of the command for which you want to
            retrieve information.
      required:
      - commandId
    GetCommandResponse:
      type: object
      properties:
        commandId:
          allOf:
          - $ref: '#/components/schemas/CommandId'
          description: The unique identifier of the command.
        commandArn:
          allOf:
          - $ref: '#/components/schemas/CommandArn'
          description: The Amazon Resource Number (ARN) of the command. For example,
            `arn:aws:iot:::command/`
        namespace:
          allOf:
          - $ref: '#/components/schemas/CommandNamespace'
          description: The namespace of the command.
        displayName:
          allOf:
          - $ref: '#/components/schemas/DisplayName'
          description: The user-friendly name in the console for the command.
        description:
          allOf:
          - $ref: '#/components/schemas/CommandDescription'
          description: A short text description of the command.
        mandatoryParameters:
          allOf:
          - $ref: '#/components/schemas/CommandParameterList'
          description: A list of parameters for the command created.
        payload:
          allOf:
          - $ref: '#/components/schemas/CommandPayload'
          description: The payload object that you provided for the command.
        roleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          description: The IAM role that you provided when creating the command with
            `AWS-IoT-FleetWise` as the namespace.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/DateType'
          description: The timestamp, when the command was created.
        lastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/DateType'
          description: The timestamp, when the command was last updated.
        deprecated:
          allOf:
          - $ref: '#/components/schemas/DeprecationFlag'
          description: Indicates whether the command has been deprecated.
        pendingDeletion:
          allOf:
          - $ref: '#/components/schemas/BooleanWrapperObject'
          description: Indicates whether the command is being deleted.
    GetEffectivePoliciesRequest:
      type: object
      properties:
        principal:
          allOf:
          - $ref: '#/components/schemas/Principal'
          description: The principal. Valid principals are CertificateArn (arn:aws:iot:_region_
            :_accountId_ :cert/_certificateId_), thingGroupArn (arn:aws:iot:_region_
            :_accountId_ :thinggroup/_groupName_) and CognitoId (_region_ :_id_).
        cognitoIdentityPoolId:
          allOf:
          - $ref: '#/components/schemas/CognitoIdentityPoolId'
          description: The Cognito identity pool ID.
        thingName:
          allOf:
          - $ref: '#/components/schemas/ThingName'
          description: The thing name.
    GetEffectivePoliciesResponse:
      type: object
      properties:
        effectivePolicies:
          allOf:
          - $ref: '#/components/schemas/EffectivePolicies'
          description: The effective policies.
    GetIndexingConfigurationRequest:
      type: object
      properties: {}
    GetIndexingConfigurationResponse:
      type: object
      properties:
        thingIndexingConfiguration:
          allOf:
          - $ref: '#/components/schemas/ThingIndexingConfiguration'
          description: Thing indexing configuration.
        thingGroupIndexingConfiguration:
          allOf:
          - $ref: '#/components/schemas/ThingGroupIndexingConfiguration'
          description: The index configuration.
    GetJobDocumentRequest:
      type: object
      properties:
        jobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          description: The unique identifier you assigned to this job when it was
            created.
        beforeSubstitution:
          allOf:
          - $ref: '#/components/schemas/BeforeSubstitutionFlag'
          description: Provides a view of the job document before and after the substitution
            parameters have been resolved with their exact values.
      required:
      - jobId
    GetJobDocumentResponse:
      type: object
      properties:
        document:
          allOf:
          - $ref: '#/components/schemas/JobDocument'
          description: The job document content.
    GetLoggingOptionsRequest:
      type: object
      properties: {}
      description: The input for the GetLoggingOptions operation.
    GetLoggingOptionsResponse:
      type: object
      properties:
        roleArn:
          allOf:
          - $ref: '#/components/schemas/AwsArn'
          description: The ARN of the IAM role that grants access.
        logLevel:
          allOf:
          - $ref: '#/components/schemas/LogLevel'
          description: The logging level.
      description: The output from the GetLoggingOptions operation.
    GetOTAUpdateRequest:
      type: object
      properties:
        otaUpdateId:
          allOf:
          - $ref: '#/components/schemas/OTAUpdateId'
          description: The OTA update ID.
      required:
      - otaUpdateId
    GetOTAUpdateResponse:
      type: object
      properties:
        otaUpdateInfo:
          allOf:
          - $ref: '#/components/schemas/OTAUpdateInfo'
          description: The OTA update info.
    GetPackageConfigurationRequest:
      type: object
      properties: {}
    GetPackageConfigurationResponse:
      type: object
      properties:
        versionUpdateByJobsConfig:
          allOf:
          - $ref: '#/components/schemas/VersionUpdateByJobsConfig'
          description: The version that is associated to a specific job.
    GetPackageRequest:
      type: object
      properties:
        packageName:
          allOf:
          - $ref: '#/components/schemas/PackageName'
          description: The name of the target software package.
      required:
      - packageName
    GetPackageResponse:
      type: object
      properties:
        packageName:
          allOf:
          - $ref: '#/components/schemas/PackageName'
          description: The name of the software package.
        packageArn:
          allOf:
          - $ref: '#/components/schemas/PackageArn'
          description: The ARN for the package.
        description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          description: The package description.
        defaultVersionName:
          allOf:
          - $ref: '#/components/schemas/VersionName'
          description: The name of the default package version.
        creationDate:
          allOf:
          - $ref: '#/components/schemas/CreationDate'
          description: The date the package was created.
        lastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/LastModifiedDate'
          description: The date when the package was last updated.
    GetPackageVersionRequest:
      type: object
      properties:
        packageName:
          allOf:
          - $ref: '#/components/schemas/PackageName'
          description: The name of the associated package.
        versionName:
          allOf:
          - $ref: '#/components/schemas/VersionName'
          description: The name of the target package version.
      required:
      - packageName
      - versionName
    GetPackageVersionResponse:
      type: object
      properties:
        packageVersionArn:
          allOf:
          - $ref: '#/components/schemas/PackageVersionArn'
          description: The ARN for the package version.
        packageName:
          allOf:
          - $ref: '#/components/schemas/PackageName'
          description: The name of the software package.
        versionName:
          allOf:
          - $ref: '#/components/schemas/VersionName'
          description: The name of the package version.
        description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          description: The package version description.
        attributes:
          allOf:
          - $ref: '#/components/schemas/ResourceAttributes'
          description: Metadata that were added to the package version that can be
            used to define a package version’s configuration.
        artifact:
          allOf:
          - $ref: '#/components/schemas/PackageVersionArtifact'
          description: The various components that make up a software package version.
        status:
          allOf:
          - $ref: '#/components/schemas/PackageVersionStatus'
          description: The status associated to the package version. For more information,
            see [Package version lifecycle](https://docs.aws.amazon.com/iot/latest/developerguide/preparing-to-use-software-package-catalog.html#package-version-lifecycle).
        errorReason:
          allOf:
          - $ref: '#/components/schemas/PackageVersionErrorReason'
          description: Error reason for a package version failure during creation
            or update.
        creationDate:
          allOf:
          - $ref: '#/components/schemas/CreationDate'
          description: The date when the package version was created.
        lastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/LastModifiedDate'
          description: The date when the package version was last updated.
        sbom:
          allOf:
          - $ref: '#/components/schemas/Sbom'
          description: The software bill of materials for a software package version.
        sbomValidationStatus:
          allOf:
          - $ref: '#/components/schemas/SbomValidationStatus'
          description: The status of the validation for a new software bill of materials
            added to a software package version.
        recipe:
          allOf:
          - $ref: '#/components/schemas/PackageVersionRecipe'
          description: The inline job document associated with a software package
            version used for a quick job deployment.
    GetPercentilesRequest:
      type: object
      properties:
        indexName:
          allOf:
          - $ref: '#/components/schemas/IndexName'
          description: The name of the index to search.
        queryString:
          allOf:
          - $ref: '#/components/schemas/QueryString'
          description: The search query string.
        aggregationField:
          allOf:
          - $ref: '#/components/schemas/AggregationField'
          description: The field to aggregate.
        queryVersion:
          allOf:
          - $ref: '#/components/schemas/QueryVersion'
          description: The query version.
        percents:
          allOf:
          - $ref: '#/components/schemas/PercentList'
          description: The percentile groups returned.
      required:
      - queryString
    GetPercentilesResponse:
      type: object
      properties:
        percentiles:
          allOf:
          - $ref: '#/components/schemas/Percentiles'
          description: The percentile values of the aggregated fields.
    GetPolicyRequest:
      type: object
      properties:
        policyName:
          allOf:
          - $ref: '#/components/schemas/PolicyName'
          description: The name of the policy.
      required:
      - policyName
      description: The input for the GetPolicy operation.
    GetPolicyResponse:
      type: object
      properties:
        policyName:
          allOf:
          - $ref: '#/components/schemas/PolicyName'
          description: The policy name.
        policyArn:
          allOf:
          - $ref: '#/components/schemas/PolicyArn'
          description: The policy ARN.
        policyDocument:
          allOf:
          - $ref: '#/components/schemas/PolicyDocument'
          description: The JSON document that describes the policy.
        defaultVersionId:
          allOf:
          - $ref: '#/components/schemas/PolicyVersionId'
          description: The default policy version ID.
        creationDate:
          allOf:
          - $ref: '#/components/schemas/DateType'
          description: The date the policy was created.
        lastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/DateType'
          description: The date the policy was last modified.
        generationId:
          allOf:
          - $ref: '#/components/schemas/GenerationId'
          description: The generation ID of the policy.
      description: The output from the GetPolicy operation.
    GetPolicyVersionRequest:
      type: object
      properties:
        policyName:
          allOf:
          - $ref: '#/components/schemas/PolicyName'
          description: The name of the policy.
        policyVersionId:
          allOf:
          - $ref: '#/components/schemas/PolicyVersionId'
          description: The policy version ID.
      required:
      - policyName
      - policyVersionId
      description: The input for the GetPolicyVersion operation.
    GetPolicyVersionResponse:
      type: object
      properties:
        policyArn:
          allOf:
          - $ref: '#/components/schemas/PolicyArn'
          description: The policy ARN.
        policyName:
          allOf:
          - $ref: '#/components/schemas/PolicyName'
          description: The policy name.
        policyDocument:
          allOf:
          - $ref: '#/components/schemas/PolicyDocument'
          description: The JSON document that describes the policy.
        policyVersionId:
          allOf:
          - $ref: '#/components/schemas/PolicyVersionId'
          description: The policy version ID.
        isDefaultVersion:
          allOf:
          - $ref: '#/components/schemas/IsDefaultVersion'
          description: Specifies whether the policy version is the default.
        creationDate:
          allOf:
          - $ref: '#/components/schemas/DateType'
          description: The date the policy was created.
        lastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/DateType'
          description: The date the policy was last modified.
        generationId:
          allOf:
          - $ref: '#/components/schemas/GenerationId'
          description: The generation ID of the policy version.
      description: The output from the GetPolicyVersion operation.
    GetRegistrationCodeRequest:
      type: object
      properties: {}
      description: The input to the GetRegistrationCode operation.
    GetRegistrationCodeResponse:
      type: object
      properties:
        registrationCode:
          allOf:
          - $ref: '#/components/schemas/RegistrationCode'
          description: The CA certificate registration code.
      description: The output from the GetRegistrationCode operation.
    GetStatisticsRequest:
      type: object
      properties:
        indexName:
          allOf:
          - $ref: '#/components/schemas/IndexName'
          description: The name of the index to search. The default value is `AWS_Things`.
        queryString:
          allOf:
          - $ref: '#/components/schemas/QueryString'
          description: The query used to search. You can specify "*" for the query
            string to get the count of all indexed things in your Amazon Web Services
            account.
        aggregationField:
          allOf:
          - $ref: '#/components/schemas/AggregationField'
          description: The aggregation field name.
        queryVersion:
          allOf:
          - $ref: '#/components/schemas/QueryVersion'
          description: The version of the query used to search.
      required:
      - queryString
    GetStatisticsResponse:
      type: object
      properties:
        statistics:
          allOf:
          - $ref: '#/components/schemas/Statistics'
          description: The statistics returned by the Fleet Indexing service based
            on the query and aggregation field.
    GetThingConnectivityDataRequest:
      type: object
      properties:
        thingName:
          allOf:
          - $ref: '#/components/schemas/ConnectivityApiThingName'
          description: The name of your IoT thing.
      required:
      - thingName
    GetThingConnectivityDataResponse:
      type: object
      properties:
        thingName:
          allOf:
          - $ref: '#/components/schemas/ConnectivityApiThingName'
          description: The name of your IoT thing.
        connected:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: A Boolean that indicates the connectivity status.
        timestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp of when the event occurred.
        disconnectReason:
          allOf:
          - $ref: '#/components/schemas/DisconnectReasonValue'
          description: The reason why the client is disconnecting.
    GetTopicRuleDestinationRequest:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/AwsArn'
          description: The ARN of the topic rule destination.
      required:
      - arn
    GetTopicRuleDestinationResponse:
      type: object
      properties:
        topicRuleDestination:
          allOf:
          - $ref: '#/components/schemas/TopicRuleDestination'
          description: The topic rule destination.
    GetTopicRuleRequest:
      type: object
      properties:
        ruleName:
          allOf:
          - $ref: '#/components/schemas/RuleName'
          description: The name of the rule.
      required:
      - ruleName
      description: The input for the GetTopicRule operation.
    GetTopicRuleResponse:
      type: object
      properties:
        ruleArn:
          allOf:
          - $ref: '#/components/schemas/RuleArn'
          description: The rule ARN.
        rule:
          allOf:
          - $ref: '#/components/schemas/TopicRule'
          description: The rule.
      description: The output from the GetTopicRule operation.
    GetV2LoggingOptionsRequest:
      type: object
      properties: {}
    GetV2LoggingOptionsResponse:
      type: object
      properties:
        roleArn:
          allOf:
          - $ref: '#/components/schemas/AwsArn'
          description: The IAM role ARN IoT uses to write to your CloudWatch logs.
        defaultLogLevel:
          allOf:
          - $ref: '#/components/schemas/LogLevel'
          description: The default log level.
        disableAllLogs:
          allOf:
          - $ref: '#/components/schemas/DisableAllLogs'
          description: Disables all logs.
    GroupNameAndArn:
      type: object
      properties:
        groupName:
          allOf:
          - $ref: '#/components/schemas/ThingGroupName'
          description: The group name.
        groupArn:
          allOf:
          - $ref: '#/components/schemas/ThingGroupArn'
          description: The group ARN.
      description: The name and ARN of a group.
    HashAlgorithm:
      type: string
    HashKeyField:
      type: string
    HashKeyValue:
      type: string
    HeaderKey:
      type: string
      minLength: 1
      maxLength: 256
    HeaderList:
      type: array
      items:
        $ref: '#/components/schemas/HttpActionHeader'
    HeaderValue:
      type: string
    HttpAction:
      type: object
      properties:
        url:
          allOf:
          - $ref: '#/components/schemas/Url'
          description: The endpoint URL. If substitution templates are used in the
            URL, you must also specify a `confirmationUrl`. If this is a new destination,
            a new `TopicRuleDestination` is created if possible.
        confirmationUrl:
          allOf:
          - $ref: '#/components/schemas/Url'
          description: The URL to which IoT sends a confirmation message. The value
            of the confirmation URL must be a prefix of the endpoint URL. If you do
            not specify a confirmation URL IoT uses the endpoint URL as the confirmation
            URL. If you use substitution templates in the confirmationUrl, you must
            create and enable topic rule destinations that match each possible value
            of the substitution template before traffic is allowed to your endpoint
            URL.
        headers:
          allOf:
          - $ref: '#/components/schemas/HeaderList'
          description: The HTTP headers to send with the message data.
        auth:
          allOf:
          - $ref: '#/components/schemas/HttpAuthorization'
          description: The authentication method to use when sending data to an HTTPS
            endpoint.
      required:
      - url
      description: Send data to an HTTPS endpoint.
    HttpActionHeader:
      type: object
      properties:
        key:
          allOf:
          - $ref: '#/components/schemas/HeaderKey'
          description: The HTTP header key.
        value:
          allOf:
          - $ref: '#/components/schemas/HeaderValue'
          description: The HTTP header value. Substitution templates are supported.
      required:
      - key
      - value
      description: The HTTP action header.
    HttpAuthorization:
      type: object
      properties:
        sigv4:
          allOf:
          - $ref: '#/components/schemas/SigV4Authorization'
          description: Use Sig V4 authorization. For more information, see [Signature
            Version 4 Signing Process](https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html).
      description: The authorization method used to send messages.
    HttpContext:
      type: object
      properties:
        headers:
          allOf:
          - $ref: '#/components/schemas/HttpHeaders'
          description: The header keys and values in an HTTP authorization request.
        queryString:
          allOf:
          - $ref: '#/components/schemas/HttpQueryString'
          description: The query string keys and values in an HTTP authorization request.
      description: Specifies the HTTP context to use for the test authorizer request.
    HttpHeaderName:
      type: string
      pattern: ^[\s\S]*$
      minLength: 1
      maxLength: 8192
    HttpHeaderValue:
      type: string
      pattern: ^[\s\S]*$
      minLength: 1
      maxLength: 8192
    HttpHeaders:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/HttpHeaderValue'
    HttpQueryString:
      type: string
      pattern: ^[\s\S]*$
      minLength: 1
      maxLength: 4096
    HttpUrlDestinationConfiguration:
      type: object
      properties:
        confirmationUrl:
          allOf:
          - $ref: '#/components/schemas/Url'
          description: The URL IoT uses to confirm ownership of or access to the topic
            rule destination URL.
      required:
      - confirmationUrl
      description: HTTP URL destination configuration used by the topic rule's HTTP
        action.
    HttpUrlDestinationProperties:
      type: object
      properties:
        confirmationUrl:
          allOf:
          - $ref: '#/components/schemas/Url'
          description: The URL used to confirm the HTTP topic rule destination URL.
      description: HTTP URL destination properties.
    HttpUrlDestinationSummary:
      type: object
      properties:
        confirmationUrl:
          allOf:
          - $ref: '#/components/schemas/Url'
          description: The URL used to confirm ownership of or access to the HTTP
            topic rule destination URL.
      description: Information about an HTTP URL destination.
    ImplicitDeny:
      type: object
      properties:
        policies:
          allOf:
          - $ref: '#/components/schemas/Policies'
          description: Policies that don't contain a matching allow or deny statement
            for the specified action on the specified resource.
      description: Information that implicitly denies authorization. When policy doesn't
        explicitly deny or allow an action on a resource it is considered an implicit
        deny.
    InProgressChecksCount:
      type: integer
    InProgressThings:
      type: integer
    InProgressTimeoutInMinutes:
      type: integer
      format: int64
    IncrementFactor:
      type: number
      format: double
      minimum: 1.1
      maximum: 5
    IndexName:
      type: string
      pattern: ^[a-zA-Z0-9:_-]+$
      minLength: 1
      maxLength: 128
    IndexNamesList:
      type: array
      items:
        $ref: '#/components/schemas/IndexName'
    IndexNotReadyException:
      type: object
      properties:
        message:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage2'
          description: The message for the exception.
      description: The index is not ready.
    IndexSchema:
      type: string
    IndexStatus:
      type: string
      enum:
      - ACTIVE
      - BUILDING
      - REBUILDING
    IndexingFilter:
      type: object
      properties:
        namedShadowNames:
          allOf:
          - $ref: '#/components/schemas/NamedShadowNamesFilter'
          description: The shadow names that you select to index. The default maximum
            number of shadow names for indexing is 10. To increase the limit, see
            [Amazon Web Services IoT Device Management Quotas](https://docs.aws.amazon.com/general/latest/gr/iot_device_management.html#fleet-indexing-limits)
            in the _Amazon Web Services General Reference_.
        geoLocations:
          allOf:
          - $ref: '#/components/schemas/GeoLocationsFilter'
          description: The list of geolocation targets that you select to index. The
            default maximum number of geolocation targets for indexing is `1`. To
            increase the limit, see [Amazon Web Services IoT Device Management Quotas](https://docs.aws.amazon.com/general/latest/gr/iot_device_management.html#fleet-indexing-limits)
            in the _Amazon Web Services General Reference_.
      description: "Provides additional selections for named shadows and geolocation\
        \ data.\n\nTo add named shadows to your fleet indexing configuration, set\
        \ `namedShadowIndexingMode` to be ON and specify your shadow names in `namedShadowNames`\
        \ filter.\n\nTo add geolocation data to your fleet indexing configuration:\n\
        \n  * If you store geolocation data in a class/unnamed shadow, set `thingIndexingMode`\
        \ to be `REGISTRY_AND_SHADOW` and specify your geolocation data in `geoLocations`\
        \ filter. \n\n  * If you store geolocation data in a named shadow, set `namedShadowIndexingMode`\
        \ to be `ON`, add the shadow name in `namedShadowNames` filter, and specify\
        \ your geolocation data in `geoLocations` filter. For more information, see\
        \ [Managing fleet indexing](https://docs.aws.amazon.com/iot/latest/developerguide/managing-fleet-index.html)."
    InlineDocument:
      type: string
    InputName:
      type: string
      minLength: 1
      maxLength: 128
    IntegerParameterValue:
      type: integer
    InternalException:
      type: object
      properties:
        message:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage2'
          description: The message for the exception.
      description: An unexpected error has occurred.
    InternalFailureException:
      type: object
      properties:
        message:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage2'
          description: The message for the exception.
      description: An unexpected error has occurred.
    InternalServerException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage2'
      description: Internal error from the service that indicates an unexpected error
        or that the service is unavailable.
    InvalidAggregationException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage2'
      description: The aggregation is invalid.
    InvalidQueryException:
      type: object
      properties:
        message:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage2'
          description: The message for the exception.
      description: The query is invalid.
    InvalidRequestException:
      type: object
      properties:
        message:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage2'
          description: The message for the exception.
      description: The request is not valid.
    InvalidResponseException:
      type: object
      properties:
        message:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage2'
          description: The message for the exception.
      description: The response is invalid.
    InvalidStateTransitionException:
      type: object
      properties:
        message:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage2'
          description: The message for the exception.
      description: An attempt was made to change to an invalid state, for example
        by deleting a job or a job execution which is "IN_PROGRESS" without setting
        the `force` parameter.
    IotAnalyticsAction:
      type: object
      properties:
        channelArn:
          allOf:
          - $ref: '#/components/schemas/AwsArn'
          description: (deprecated) The ARN of the IoT Analytics channel to which
            message data will be sent.
        channelName:
          allOf:
          - $ref: '#/components/schemas/ChannelName'
          description: The name of the IoT Analytics channel to which message data
            will be sent.
        batchMode:
          allOf:
          - $ref: '#/components/schemas/BatchMode'
          description: 'Whether to process the action as a batch. The default value
            is `false`.


            When `batchMode` is `true` and the rule SQL statement evaluates to an
            Array, each Array element is delivered as a separate message when passed
            by [ `BatchPutMessage` ](https://docs.aws.amazon.com/iotanalytics/latest/APIReference/API_BatchPutMessage.html)
            to the IoT Analytics channel. The resulting array can''t have more than
            100 messages.'
        roleArn:
          allOf:
          - $ref: '#/components/schemas/AwsArn'
          description: The ARN of the role which has a policy that grants IoT Analytics
            permission to send message data via IoT Analytics (iotanalytics:BatchPutMessage).
      description: Sends message data to an IoT Analytics channel.
    IotEventsAction:
      type: object
      properties:
        inputName:
          allOf:
          - $ref: '#/components/schemas/InputName'
          description: The name of the IoT Events input.
        messageId:
          allOf:
          - $ref: '#/components/schemas/MessageId'
          description: 'The ID of the message. The default `messageId` is a new UUID
            value.


            When `batchMode` is `true`, you can''t specify a `messageId`\--a new UUID
            value will be assigned.


            Assign a value to this property to ensure that only one input (message)
            with a given `messageId` will be processed by an IoT Events detector.'
        batchMode:
          allOf:
          - $ref: '#/components/schemas/BatchMode'
          description: 'Whether to process the event actions as a batch. The default
            value is `false`.


            When `batchMode` is `true`, you can''t specify a `messageId`.


            When `batchMode` is `true` and the rule SQL statement evaluates to an
            Array, each Array element is treated as a separate message when it''s
            sent to IoT Events by calling [ `BatchPutMessage` ](https://docs.aws.amazon.com/iotevents/latest/apireference/API_iotevents-data_BatchPutMessage.html).
            The resulting array can''t have more than 10 messages.'
        roleArn:
          allOf:
          - $ref: '#/components/schemas/AwsArn'
          description: The ARN of the role that grants IoT permission to send an input
            to an IoT Events detector. ("Action":"iotevents:BatchPutMessage").
      required:
      - inputName
      - roleArn
      description: Sends an input to an IoT Events detector.
    IotSiteWiseAction:
      type: object
      properties:
        putAssetPropertyValueEntries:
          allOf:
          - $ref: '#/components/schemas/PutAssetPropertyValueEntryList'
          description: A list of asset property value entries.
        roleArn:
          allOf:
          - $ref: '#/components/schemas/AwsArn'
          description: 'The ARN of the role that grants IoT permission to send an
            asset property value to IoT SiteWise. (`"Action": "iotsitewise:BatchPutAssetPropertyValue"`).
            The trust policy can restrict access to specific asset hierarchy paths.'
      required:
      - putAssetPropertyValueEntries
      - roleArn
      description: Describes an action to send data from an MQTT message that triggered
        the rule to IoT SiteWise asset properties.
    IsAuthenticated:
      type: boolean
    IsDefaultVersion:
      type: boolean
      default: false
    IsDisabled:
      type: boolean
    IsSuppressed:
      type: boolean
    IssuerCertificateIdentifier:
      type: object
      properties:
        issuerCertificateSubject:
          allOf:
          - $ref: '#/components/schemas/IssuerCertificateSubject'
          description: The subject of the issuer certificate.
        issuerId:
          allOf:
          - $ref: '#/components/schemas/IssuerId'
          description: The issuer ID.
        issuerCertificateSerialNumber:
          allOf:
          - $ref: '#/components/schemas/IssuerCertificateSerialNumber'
          description: The issuer certificate serial number.
      description: The certificate issuer indentifier.
    IssuerCertificateSerialNumber:
      type: string
      pattern: ^[a-fA-F0-9:]+$
      minLength: 0
      maxLength: 20
    IssuerCertificateSubject:
      type: string
      pattern: ^[\p{Graph}\x20]*$
      minLength: 0
      maxLength: 1000
    IssuerId:
      type: string
      pattern: ^(0x)?[a-fA-F0-9]+$
      minLength: 0
      maxLength: 64
    Job:
      type: object
      properties:
        jobArn:
          allOf:
          - $ref: '#/components/schemas/JobArn'
          description: An ARN identifying the job with format "arn:aws:iot:region:account:job/jobId".
        jobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          description: The unique identifier you assigned to this job when it was
            created.
        targetSelection:
          allOf:
          - $ref: '#/components/schemas/TargetSelection'
          description: 'Specifies whether the job will continue to run (CONTINUOUS),
            or will be complete after all those things specified as targets have completed
            the job (SNAPSHOT). If continuous, the job may also be run on a thing
            when a change is detected in a target. For example, a job will run on
            a device when the thing representing the device is added to a target group,
            even after the job was completed by all things originally in the group.


            We recommend that you use continuous jobs instead of snapshot jobs for
            dynamic thing group targets. By using continuous jobs, devices that join
            the group receive the job execution even after the job has been created.'
        status:
          allOf:
          - $ref: '#/components/schemas/JobStatus'
          description: The status of the job, one of `IN_PROGRESS`, `CANCELED`, `DELETION_IN_PROGRESS`
            or `COMPLETED`.
        forceCanceled:
          allOf:
          - $ref: '#/components/schemas/Forced'
          description: Will be `true` if the job was canceled with the optional `force`
            parameter set to `true`.
        reasonCode:
          allOf:
          - $ref: '#/components/schemas/ReasonCode'
          description: If the job was updated, provides the reason code for the update.
        comment:
          allOf:
          - $ref: '#/components/schemas/Comment'
          description: If the job was updated, describes the reason for the update.
        targets:
          allOf:
          - $ref: '#/components/schemas/JobTargets'
          description: A list of IoT things and thing groups to which the job should
            be sent.
        description:
          allOf:
          - $ref: '#/components/schemas/JobDescription'
          description: A short text description of the job.
        presignedUrlConfig:
          allOf:
          - $ref: '#/components/schemas/PresignedUrlConfig'
          description: Configuration for pre-signed S3 URLs.
        jobExecutionsRolloutConfig:
          allOf:
          - $ref: '#/components/schemas/JobExecutionsRolloutConfig'
          description: Allows you to create a staged rollout of a job.
        abortConfig:
          allOf:
          - $ref: '#/components/schemas/AbortConfig'
          description: Configuration for criteria to abort the job.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/DateType'
          description: The time, in seconds since the epoch, when the job was created.
        lastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/DateType'
          description: The time, in seconds since the epoch, when the job was last
            updated.
        completedAt:
          allOf:
          - $ref: '#/components/schemas/DateType'
          description: The time, in seconds since the epoch, when the job was completed.
        jobProcessDetails:
          allOf:
          - $ref: '#/components/schemas/JobProcessDetails'
          description: Details about the job process.
        timeoutConfig:
          allOf:
          - $ref: '#/components/schemas/TimeoutConfig'
          description: Specifies the amount of time each device has to finish its
            execution of the job. A timer is started when the job execution status
            is set to `IN_PROGRESS`. If the job execution status is not set to another
            terminal state before the timer expires, it will be automatically set
            to `TIMED_OUT`.
        namespaceId:
          allOf:
          - $ref: '#/components/schemas/NamespaceId'
          description: 'The namespace used to indicate that a job is a customer-managed
            job.


            When you specify a value for this parameter, Amazon Web Services IoT Core
            sends jobs notifications to MQTT topics that contain the value in the
            following format.


            `$aws/things/_THING_NAME_ /jobs/_JOB_ID_ /notify-namespace-_NAMESPACE_ID_
            /`


            The `namespaceId` feature is only supported by IoT Greengrass at this
            time. For more information, see [Setting up IoT Greengrass core devices.](https://docs.aws.amazon.com/greengrass/v2/developerguide/setting-up.html)'
        jobTemplateArn:
          allOf:
          - $ref: '#/components/schemas/JobTemplateArn'
          description: The ARN of the job template used to create the job.
        jobExecutionsRetryConfig:
          allOf:
          - $ref: '#/components/schemas/JobExecutionsRetryConfig'
          description: The configuration for the criteria to retry the job.
        documentParameters:
          allOf:
          - $ref: '#/components/schemas/ParameterMap'
          description: 'A key-value map that pairs the patterns that need to be replaced
            in a managed template job document schema. You can use the description
            of each key as a guidance to specify the inputs during runtime when creating
            a job.


            `documentParameters` can only be used when creating jobs from Amazon Web
            Services managed templates. This parameter can''t be used with custom
            job templates or to create jobs from them.'
        isConcurrent:
          allOf:
          - $ref: '#/components/schemas/BooleanWrapperObject'
          description: Indicates whether a job is concurrent. Will be true when a
            job is rolling out new job executions or canceling previously created
            executions, otherwise false.
        schedulingConfig:
          allOf:
          - $ref: '#/components/schemas/SchedulingConfig'
          description: The configuration that allows you to schedule a job for a future
            date and time in addition to specifying the end behavior for each job
            execution.
        scheduledJobRollouts:
          allOf:
          - $ref: '#/components/schemas/ScheduledJobRolloutList'
          description: Displays the next seven maintenance window occurrences and
            their start times.
        destinationPackageVersions:
          allOf:
          - $ref: '#/components/schemas/DestinationPackageVersions'
          description: 'The package version Amazon Resource Names (ARNs) that are
            installed on the device when the job successfully completes. The package
            version must be in either the Published or Deprecated state when the job
            deploys. For more information, see [Package version lifecycle](https://docs.aws.amazon.com/iot/latest/developerguide/preparing-to-use-software-package-catalog.html#package-version-lifecycle).The
            package version must be in either the Published or Deprecated state when
            the job deploys. For more information, see [Package version lifecycle](https://docs.aws.amazon.com/iot/latest/developerguide/preparing-to-use-software-package-catalog.html#package-version-lifecycle).


            **Note:** The following Length Constraints relates to a single ARN. Up
            to 25 package version ARNs are allowed.'
      description: The `Job` object contains details about a job.
    JobArn:
      type: string
    JobDescription:
      type: string
      pattern: ^[^\p{C}]+$
      minLength: 0
      maxLength: 2028
    JobDocument:
      type: string
      minLength: 0
      maxLength: 32768
    JobDocumentSource:
      type: string
      minLength: 1
      maxLength: 1350
    JobEndBehavior:
      type: string
      enum:
      - STOP_ROLLOUT
      - CANCEL
      - FORCE_CANCEL
    JobExecution:
      type: object
      properties:
        jobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          description: The unique identifier you assigned to the job when it was created.
        status:
          allOf:
          - $ref: '#/components/schemas/JobExecutionStatus'
          description: The status of the job execution (IN_PROGRESS, QUEUED, FAILED,
            SUCCEEDED, TIMED_OUT, CANCELED, or REJECTED).
        forceCanceled:
          allOf:
          - $ref: '#/components/schemas/Forced'
          description: Will be `true` if the job execution was canceled with the optional
            `force` parameter set to `true`.
        statusDetails:
          allOf:
          - $ref: '#/components/schemas/JobExecutionStatusDetails'
          description: A collection of name/value pairs that describe the status of
            the job execution.
        thingArn:
          allOf:
          - $ref: '#/components/schemas/ThingArn'
          description: The ARN of the thing on which the job execution is running.
        queuedAt:
          allOf:
          - $ref: '#/components/schemas/DateType'
          description: The time, in seconds since the epoch, when the job execution
            was queued.
        startedAt:
          allOf:
          - $ref: '#/components/schemas/DateType'
          description: The time, in seconds since the epoch, when the job execution
            started.
        lastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/DateType'
          description: The time, in seconds since the epoch, when the job execution
            was last updated.
        executionNumber:
          allOf:
          - $ref: '#/components/schemas/ExecutionNumber'
          description: A string (consisting of the digits "0" through "9") which identifies
            this particular job execution on this particular device. It can be used
            in commands which return or update job execution information.
        versionNumber:
          allOf:
          - $ref: '#/components/schemas/VersionNumber'
          description: The version of the job execution. Job execution versions are
            incremented each time they are updated by a device.
        approximateSecondsBeforeTimedOut:
          allOf:
          - $ref: '#/components/schemas/ApproximateSecondsBeforeTimedOut'
          description: The estimated number of seconds that remain before the job
            execution status will be changed to `TIMED_OUT`. The timeout interval
            can be anywhere between 1 minute and 7 days (1 to 10080 minutes). The
            actual job execution timeout can occur up to 60 seconds later than the
            estimated duration. This value will not be included if the job execution
            has reached a terminal status.
      description: The job execution object represents the execution of a job on a
        particular device.
    JobExecutionFailureType:
      type: string
      enum:
      - FAILED
      - REJECTED
      - TIMED_OUT
      - ALL
    JobExecutionStatus:
      type: string
      enum:
      - QUEUED
      - IN_PROGRESS
      - SUCCEEDED
      - FAILED
      - TIMED_OUT
      - REJECTED
      - REMOVED
      - CANCELED
    JobExecutionStatusDetails:
      type: object
      properties:
        detailsMap:
          allOf:
          - $ref: '#/components/schemas/DetailsMap'
          description: The job execution status.
      description: Details of the job execution status.
    JobExecutionSummary:
      type: object
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/JobExecutionStatus'
          description: The status of the job execution.
        queuedAt:
          allOf:
          - $ref: '#/components/schemas/DateType'
          description: The time, in seconds since the epoch, when the job execution
            was queued.
        startedAt:
          allOf:
          - $ref: '#/components/schemas/DateType'
          description: The time, in seconds since the epoch, when the job execution
            started.
        lastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/DateType'
          description: The time, in seconds since the epoch, when the job execution
            was last updated.
        executionNumber:
          allOf:
          - $ref: '#/components/schemas/ExecutionNumber'
          description: A string (consisting of the digits "0" through "9") which identifies
            this particular job execution on this particular device. It can be used
            later in commands which return or update job execution information.
        retryAttempt:
          allOf:
          - $ref: '#/components/schemas/RetryAttempt'
          description: The number that indicates how many retry attempts have been
            completed for this job on this device.
      description: The job execution summary.
    JobExecutionSummaryForJob:
      type: object
      properties:
        thingArn:
          allOf:
          - $ref: '#/components/schemas/ThingArn'
          description: The ARN of the thing on which the job execution is running.
        jobExecutionSummary:
          allOf:
          - $ref: '#/components/schemas/JobExecutionSummary'
          description: Contains a subset of information about a job execution.
      description: Contains a summary of information about job executions for a specific
        job.
    JobExecutionSummaryForJobList:
      type: array
      items:
        $ref: '#/components/schemas/JobExecutionSummaryForJob'
    JobExecutionSummaryForThing:
      type: object
      properties:
        jobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          description: The unique identifier you assigned to this job when it was
            created.
        jobExecutionSummary:
          allOf:
          - $ref: '#/components/schemas/JobExecutionSummary'
          description: Contains a subset of information about a job execution.
      description: The job execution summary for a thing.
    JobExecutionSummaryForThingList:
      type: array
      items:
        $ref: '#/components/schemas/JobExecutionSummaryForThing'
    JobExecutionsRetryConfig:
      type: object
      properties:
        criteriaList:
          allOf:
          - $ref: '#/components/schemas/RetryCriteriaList'
          description: The list of criteria that determines how many retries are allowed
            for each failure type for a job.
      required:
      - criteriaList
      description: The configuration that determines how many retries are allowed
        for each failure type for a job.
    JobExecutionsRolloutConfig:
      type: object
      properties:
        maximumPerMinute:
          allOf:
          - $ref: '#/components/schemas/MaxJobExecutionsPerMin'
          description: The maximum number of things that will be notified of a pending
            job, per minute. This parameter allows you to create a staged rollout.
        exponentialRate:
          allOf:
          - $ref: '#/components/schemas/ExponentialRolloutRate'
          description: The rate of increase for a job rollout. This parameter allows
            you to define an exponential rate for a job rollout.
      description: Allows you to create a staged rollout of a job.
    JobId:
      type: string
      pattern: ^[a-zA-Z0-9_-]+$
      minLength: 1
      maxLength: 64
    JobProcessDetails:
      type: object
      properties:
        processingTargets:
          allOf:
          - $ref: '#/components/schemas/ProcessingTargetNameList'
          description: The target devices to which the job execution is being rolled
            out. This value will be null after the job execution has finished rolling
            out to all the target devices.
        numberOfCanceledThings:
          allOf:
          - $ref: '#/components/schemas/CanceledThings'
          description: The number of things that cancelled the job.
        numberOfSucceededThings:
          allOf:
          - $ref: '#/components/schemas/SucceededThings'
          description: The number of things which successfully completed the job.
        numberOfFailedThings:
          allOf:
          - $ref: '#/components/schemas/FailedThings'
          description: The number of things that failed executing the job.
        numberOfRejectedThings:
          allOf:
          - $ref: '#/components/schemas/RejectedThings'
          description: The number of things that rejected the job.
        numberOfQueuedThings:
          allOf:
          - $ref: '#/components/schemas/QueuedThings'
          description: The number of things that are awaiting execution of the job.
        numberOfInProgressThings:
          allOf:
          - $ref: '#/components/schemas/InProgressThings'
          description: The number of things currently executing the job.
        numberOfRemovedThings:
          allOf:
          - $ref: '#/components/schemas/RemovedThings'
          description: The number of things that are no longer scheduled to execute
            the job because they have been deleted or have been removed from the group
            that was a target of the job.
        numberOfTimedOutThings:
          allOf:
          - $ref: '#/components/schemas/TimedOutThings'
          description: The number of things whose job execution status is `TIMED_OUT`.
      description: The job process details.
    JobStatus:
      type: string
      enum:
      - IN_PROGRESS
      - CANCELED
      - COMPLETED
      - DELETION_IN_PROGRESS
      - SCHEDULED
    JobSummary:
      type: object
      properties:
        jobArn:
          allOf:
          - $ref: '#/components/schemas/JobArn'
          description: The job ARN.
        jobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          description: The unique identifier you assigned to this job when it was
            created.
        thingGroupId:
          allOf:
          - $ref: '#/components/schemas/ThingGroupId'
          description: The ID of the thing group.
        targetSelection:
          allOf:
          - $ref: '#/components/schemas/TargetSelection'
          description: 'Specifies whether the job will continue to run (CONTINUOUS),
            or will be complete after all those things specified as targets have completed
            the job (SNAPSHOT). If continuous, the job may also be run on a thing
            when a change is detected in a target. For example, a job will run on
            a thing when the thing is added to a target group, even after the job
            was completed by all things originally in the group.


            We recommend that you use continuous jobs instead of snapshot jobs for
            dynamic thing group targets. By using continuous jobs, devices that join
            the group receive the job execution even after the job has been created.'
        status:
          allOf:
          - $ref: '#/components/schemas/JobStatus'
          description: The job summary status.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/DateType'
          description: The time, in seconds since the epoch, when the job was created.
        lastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/DateType'
          description: The time, in seconds since the epoch, when the job was last
            updated.
        completedAt:
          allOf:
          - $ref: '#/components/schemas/DateType'
          description: The time, in seconds since the epoch, when the job completed.
        isConcurrent:
          allOf:
          - $ref: '#/components/schemas/BooleanWrapperObject'
          description: Indicates whether a job is concurrent. Will be true when a
            job is rolling out new job executions or canceling previously created
            executions, otherwise false.
      description: The job summary.
    JobSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/JobSummary'
    JobTargets:
      type: array
      items:
        $ref: '#/components/schemas/TargetArn'
    JobTemplateArn:
      type: string
      pattern: ^arn:[!-~]+$
      minLength: 1
      maxLength: 1600
    JobTemplateId:
      type: string
      pattern: ^[a-zA-Z0-9_-]+$
      minLength: 1
      maxLength: 64
    JobTemplateSummary:
      type: object
      properties:
        jobTemplateArn:
          allOf:
          - $ref: '#/components/schemas/JobTemplateArn'
          description: The ARN of the job template.
        jobTemplateId:
          allOf:
          - $ref: '#/components/schemas/JobTemplateId'
          description: The unique identifier of the job template.
        description:
          allOf:
          - $ref: '#/components/schemas/JobDescription'
          description: A description of the job template.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/DateType'
          description: The time, in seconds since the epoch, when the job template
            was created.
      description: An object that contains information about the job template.
    JobTemplateSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/JobTemplateSummary'
    JsonDocument:
      type: string
    KafkaAction:
      type: object
      properties:
        destinationArn:
          allOf:
          - $ref: '#/components/schemas/AwsArn'
          description: The ARN of Kafka action's VPC `TopicRuleDestination`.
        topic:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Kafka topic for messages to be sent to the Kafka broker.
        key:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Kafka message key.
        partition:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Kafka message partition.
        clientProperties:
          allOf:
          - $ref: '#/components/schemas/ClientProperties'
          description: Properties of the Apache Kafka producer client.
        headers:
          allOf:
          - $ref: '#/components/schemas/KafkaHeaders'
          description: The list of Kafka headers that you specify.
      required:
      - destinationArn
      - topic
      - clientProperties
      description: Send messages to an Amazon Managed Streaming for Apache Kafka (Amazon
        MSK) or self-managed Apache Kafka cluster.
    KafkaActionHeader:
      type: object
      properties:
        key:
          allOf:
          - $ref: '#/components/schemas/KafkaHeaderKey'
          description: The key of the Kafka header.
        value:
          allOf:
          - $ref: '#/components/schemas/KafkaHeaderValue'
          description: The value of the Kafka header.
      required:
      - key
      - value
      description: 'Specifies a Kafka header using key-value pairs when you create
        a Rule’s Kafka Action. You can use these headers to route data from IoT clients
        to downstream Kafka clusters without modifying your message payload.


        For more information about Rule''s Kafka action, see [Apache Kafka](https://docs.aws.amazon.com/iot/latest/developerguide/apache-kafka-rule-action.html).'
    KafkaHeaderKey:
      type: string
      minLength: 0
      maxLength: 16384
    KafkaHeaderValue:
      type: string
      minLength: 0
      maxLength: 16384
    KafkaHeaders:
      type: array
      items:
        $ref: '#/components/schemas/KafkaActionHeader'
    Key:
      type: string
    KeyName:
      type: string
      pattern: ^[a-zA-Z0-9:_-]+$
      minLength: 1
      maxLength: 128
    KeyPair:
      type: object
      properties:
        PublicKey:
          allOf:
          - $ref: '#/components/schemas/PublicKey'
          description: The public key.
        PrivateKey:
          allOf:
          - $ref: '#/components/schemas/PrivateKey'
          description: The private key.
      description: Describes a key pair.
    KeyValue:
      type: string
      pattern: ^[\s\S]*$
      minLength: 0
      maxLength: 5120
    KinesisAction:
      type: object
      properties:
        roleArn:
          allOf:
          - $ref: '#/components/schemas/AwsArn'
          description: The ARN of the IAM role that grants access to the Amazon Kinesis
            stream.
        streamName:
          allOf:
          - $ref: '#/components/schemas/StreamName'
          description: The name of the Amazon Kinesis stream.
        partitionKey:
          allOf:
          - $ref: '#/components/schemas/PartitionKey'
          description: The partition key.
      required:
      - roleArn
      - streamName
      description: Describes an action to write data to an Amazon Kinesis stream.
    LambdaAction:
      type: object
      properties:
        functionArn:
          allOf:
          - $ref: '#/components/schemas/FunctionArn'
          description: The ARN of the Lambda function.
      required:
      - functionArn
      description: Describes an action to invoke a Lambda function.
    LaserMaxResults:
      type: integer
      minimum: 1
      maximum: 250
    LastModifiedDate:
      type: string
      format: date-time
    LastUpdatedAtDate:
      type: string
      format: date-time
    LimitExceededException:
      type: object
      properties:
        message:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage2'
          description: The message for the exception.
      description: A limit has been exceeded.
    ListActiveViolationsRequest:
      type: object
      properties:
        thingName:
          allOf:
          - $ref: '#/components/schemas/DeviceDefenderThingName'
          description: The name of the thing whose active violations are listed.
        securityProfileName:
          allOf:
          - $ref: '#/components/schemas/SecurityProfileName'
          description: The name of the Device Defender security profile for which
            violations are listed.
        behaviorCriteriaType:
          allOf:
          - $ref: '#/components/schemas/BehaviorCriteriaType'
          description: The criteria for a behavior.
        listSuppressedAlerts:
          allOf:
          - $ref: '#/components/schemas/ListSuppressedAlerts'
          description: A list of all suppressed alerts.
        verificationState:
          allOf:
          - $ref: '#/components/schemas/VerificationState'
          description: The verification state of the violation (detect alarm).
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return at one time.
    ListActiveViolationsResponse:
      type: object
      properties:
        activeViolations:
          allOf:
          - $ref: '#/components/schemas/ActiveViolations'
          description: The list of active violations.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A token that can be used to retrieve the next set of results,
            or `null` if there are no additional results.
    ListAttachedPoliciesRequest:
      type: object
      properties:
        target:
          allOf:
          - $ref: '#/components/schemas/PolicyTarget'
          description: The group or principal for which the policies will be listed.
            Valid principals are CertificateArn (arn:aws:iot:_region_ :_accountId_
            :cert/_certificateId_), thingGroupArn (arn:aws:iot:_region_ :_accountId_
            :thinggroup/_groupName_) and CognitoId (_region_ :_id_).
        recursive:
          allOf:
          - $ref: '#/components/schemas/Recursive'
          description: When true, recursively list attached policies.
        marker:
          allOf:
          - $ref: '#/components/schemas/Marker'
          description: The token to retrieve the next set of results.
        pageSize:
          allOf:
          - $ref: '#/components/schemas/PageSize'
          description: The maximum number of results to be returned per request.
      required:
      - target
    ListAttachedPoliciesResponse:
      type: object
      properties:
        policies:
          allOf:
          - $ref: '#/components/schemas/Policies'
          description: The policies.
        nextMarker:
          allOf:
          - $ref: '#/components/schemas/Marker'
          description: The token to retrieve the next set of results, or ``null``
            if there are no more results.
    ListAuditFindingsRequest:
      type: object
      properties:
        taskId:
          allOf:
          - $ref: '#/components/schemas/AuditTaskId'
          description: A filter to limit results to the audit with the specified ID.
            You must specify either the taskId or the startTime and endTime, but not
            both.
        checkName:
          allOf:
          - $ref: '#/components/schemas/AuditCheckName'
          description: A filter to limit results to the findings for the specified
            audit check.
        resourceIdentifier:
          allOf:
          - $ref: '#/components/schemas/ResourceIdentifier'
          description: Information identifying the noncompliant resource.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return at one time. The default
            is 25.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results.
        startTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: A filter to limit results to those found after the specified
            time. You must specify either the startTime and endTime or the taskId,
            but not both.
        endTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: A filter to limit results to those found before the specified
            time. You must specify either the startTime and endTime or the taskId,
            but not both.
        listSuppressedFindings:
          allOf:
          - $ref: '#/components/schemas/ListSuppressedFindings'
          description: Boolean flag indicating whether only the suppressed findings
            or the unsuppressed findings should be listed. If this parameter isn't
            provided, the response will list both suppressed and unsuppressed findings.
    ListAuditFindingsResponse:
      type: object
      properties:
        findings:
          allOf:
          - $ref: '#/components/schemas/AuditFindings'
          description: The findings (results) of the audit.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A token that can be used to retrieve the next set of results,
            or `null` if there are no additional results.
    ListAuditMitigationActionsExecutionsRequest:
      type: object
      properties:
        taskId:
          allOf:
          - $ref: '#/components/schemas/MitigationActionsTaskId'
          description: Specify this filter to limit results to actions for a specific
            audit mitigation actions task.
        actionStatus:
          allOf:
          - $ref: '#/components/schemas/AuditMitigationActionsExecutionStatus'
          description: Specify this filter to limit results to those with a specific
            status.
        findingId:
          allOf:
          - $ref: '#/components/schemas/FindingId'
          description: Specify this filter to limit results to those that were applied
            to a specific audit finding.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return at one time. The default
            is 25.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results.
      required:
      - taskId
      - findingId
    ListAuditMitigationActionsExecutionsResponse:
      type: object
      properties:
        actionsExecutions:
          allOf:
          - $ref: '#/components/schemas/AuditMitigationActionExecutionMetadataList'
          description: A set of task execution results based on the input parameters.
            Details include the mitigation action applied, start time, and task status.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results.
    ListAuditMitigationActionsTasksRequest:
      type: object
      properties:
        auditTaskId:
          allOf:
          - $ref: '#/components/schemas/AuditTaskId'
          description: Specify this filter to limit results to tasks that were applied
            to results for a specific audit.
        findingId:
          allOf:
          - $ref: '#/components/schemas/FindingId'
          description: Specify this filter to limit results to tasks that were applied
            to a specific audit finding.
        taskStatus:
          allOf:
          - $ref: '#/components/schemas/AuditMitigationActionsTaskStatus'
          description: Specify this filter to limit results to tasks that are in a
            specific state.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return at one time. The default
            is 25.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results.
        startTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: Specify this filter to limit results to tasks that began on
            or after a specific date and time.
        endTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: Specify this filter to limit results to tasks that were completed
            or canceled on or before a specific date and time.
      required:
      - startTime
      - endTime
    ListAuditMitigationActionsTasksResponse:
      type: object
      properties:
        tasks:
          allOf:
          - $ref: '#/components/schemas/AuditMitigationActionsTaskMetadataList'
          description: The collection of audit mitigation tasks that matched the filter
            criteria.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results.
    ListAuditSuppressionsRequest:
      type: object
      properties:
        checkName:
          $ref: '#/components/schemas/AuditCheckName'
        resourceIdentifier:
          $ref: '#/components/schemas/ResourceIdentifier'
        ascendingOrder:
          allOf:
          - $ref: '#/components/schemas/AscendingOrder'
          description: Determines whether suppressions are listed in ascending order
            by expiration date or not. If parameter isn't provided, `ascendingOrder=true`.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return at one time. The default
            is 25.
    ListAuditSuppressionsResponse:
      type: object
      properties:
        suppressions:
          allOf:
          - $ref: '#/components/schemas/AuditSuppressionList'
          description: List of audit suppressions.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A token that can be used to retrieve the next set of results,
            or `null` if there are no additional results.
    ListAuditTasksRequest:
      type: object
      properties:
        startTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The beginning of the time period. Audit information is retained
            for a limited time (90 days). Requesting a start time prior to what is
            retained results in an "InvalidRequestException".
        endTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The end of the time period.
        taskType:
          allOf:
          - $ref: '#/components/schemas/AuditTaskType'
          description: 'A filter to limit the output to the specified type of audit:
            can be one of "ON_DEMAND_AUDIT_TASK" or "SCHEDULED__AUDIT_TASK".'
        taskStatus:
          allOf:
          - $ref: '#/components/schemas/AuditTaskStatus'
          description: 'A filter to limit the output to audits with the specified
            completion status: can be one of "IN_PROGRESS", "COMPLETED", "FAILED",
            or "CANCELED".'
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return at one time. The default
            is 25.
      required:
      - startTime
      - endTime
    ListAuditTasksResponse:
      type: object
      properties:
        tasks:
          allOf:
          - $ref: '#/components/schemas/AuditTaskMetadataList'
          description: The audits that were performed during the specified time period.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A token that can be used to retrieve the next set of results,
            or `null` if there are no additional results.
    ListAuthorizersRequest:
      type: object
      properties:
        pageSize:
          allOf:
          - $ref: '#/components/schemas/PageSize'
          description: The maximum number of results to return at one time.
        marker:
          allOf:
          - $ref: '#/components/schemas/Marker'
          description: A marker used to get the next set of results.
        ascendingOrder:
          allOf:
          - $ref: '#/components/schemas/AscendingOrder'
          description: Return the list of authorizers in ascending alphabetical order.
        status:
          allOf:
          - $ref: '#/components/schemas/AuthorizerStatus'
          description: The status of the list authorizers request.
    ListAuthorizersResponse:
      type: object
      properties:
        authorizers:
          allOf:
          - $ref: '#/components/schemas/Authorizers'
          description: The authorizers.
        nextMarker:
          allOf:
          - $ref: '#/components/schemas/Marker'
          description: A marker used to get the next set of results.
    ListBillingGroupsRequest:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: To retrieve the next set of results, the `nextToken` value
            from a previous response; otherwise **null** to receive the first set
            of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/RegistryMaxResults'
          description: The maximum number of results to return per request.
        namePrefixFilter:
          allOf:
          - $ref: '#/components/schemas/BillingGroupName'
          description: Limit the results to billing groups whose names have the given
            prefix.
    ListBillingGroupsResponse:
      type: object
      properties:
        billingGroups:
          allOf:
          - $ref: '#/components/schemas/BillingGroupNameAndArnList'
          description: The list of billing groups.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token to use to get the next set of results, or **null**
            if there are no additional results.
    ListCACertificatesRequest:
      type: object
      properties:
        pageSize:
          allOf:
          - $ref: '#/components/schemas/PageSize'
          description: The result page size.
        marker:
          allOf:
          - $ref: '#/components/schemas/Marker'
          description: The marker for the next set of results.
        ascendingOrder:
          allOf:
          - $ref: '#/components/schemas/AscendingOrder'
          description: Determines the order of the results.
        templateName:
          allOf:
          - $ref: '#/components/schemas/TemplateName'
          description: The name of the provisioning template.
      description: Input for the ListCACertificates operation.
    ListCACertificatesResponse:
      type: object
      properties:
        certificates:
          allOf:
          - $ref: '#/components/schemas/CACertificates'
          description: The CA certificates registered in your Amazon Web Services
            account.
        nextMarker:
          allOf:
          - $ref: '#/components/schemas/Marker'
          description: The current position within the list of CA certificates.
      description: The output from the ListCACertificates operation.
    ListCertificateProvidersRequest:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/Marker'
          description: The token for the next set of results, or `null` if there are
            no more results.
        ascendingOrder:
          allOf:
          - $ref: '#/components/schemas/AscendingOrder'
          description: Returns the list of certificate providers in ascending alphabetical
            order.
    ListCertificateProvidersResponse:
      type: object
      properties:
        certificateProviders:
          allOf:
          - $ref: '#/components/schemas/CertificateProviders'
          description: The list of certificate providers in your Amazon Web Services
            account.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/Marker'
          description: The token for the next set of results, or `null` if there are
            no more results.
    ListCertificatesByCARequest:
      type: object
      properties:
        caCertificateId:
          allOf:
          - $ref: '#/components/schemas/CertificateId'
          description: The ID of the CA certificate. This operation will list all
            registered device certificate that were signed by this CA certificate.
        pageSize:
          allOf:
          - $ref: '#/components/schemas/PageSize'
          description: The result page size.
        marker:
          allOf:
          - $ref: '#/components/schemas/Marker'
          description: The marker for the next set of results.
        ascendingOrder:
          allOf:
          - $ref: '#/components/schemas/AscendingOrder'
          description: Specifies the order for results. If True, the results are returned
            in ascending order, based on the creation date.
      required:
      - caCertificateId
      description: The input to the ListCertificatesByCA operation.
    ListCertificatesByCAResponse:
      type: object
      properties:
        certificates:
          allOf:
          - $ref: '#/components/schemas/Certificates'
          description: The device certificates signed by the specified CA certificate.
        nextMarker:
          allOf:
          - $ref: '#/components/schemas/Marker'
          description: The marker for the next set of results, or null if there are
            no additional results.
      description: The output of the ListCertificatesByCA operation.
    ListCertificatesRequest:
      type: object
      properties:
        pageSize:
          allOf:
          - $ref: '#/components/schemas/PageSize'
          description: The result page size.
        marker:
          allOf:
          - $ref: '#/components/schemas/Marker'
          description: The marker for the next set of results.
        ascendingOrder:
          allOf:
          - $ref: '#/components/schemas/AscendingOrder'
          description: Specifies the order for results. If True, the results are returned
            in ascending order, based on the creation date.
      description: The input for the ListCertificates operation.
    ListCertificatesResponse:
      type: object
      properties:
        certificates:
          allOf:
          - $ref: '#/components/schemas/Certificates'
          description: The descriptions of the certificates.
        nextMarker:
          allOf:
          - $ref: '#/components/schemas/Marker'
          description: The marker for the next set of results, or null if there are
            no additional results.
      description: The output of the ListCertificates operation.
    ListCommandExecutionsRequest:
      type: object
      properties:
        maxResults:
          allOf:
          - $ref: '#/components/schemas/CommandMaxResults'
          description: The maximum number of results to return in this operation.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: To retrieve the next set of results, the `nextToken` value
            from a previous response; otherwise `null` to receive the first set of
            results.
        namespace:
          allOf:
          - $ref: '#/components/schemas/CommandNamespace'
          description: The namespace of the command.
        status:
          allOf:
          - $ref: '#/components/schemas/CommandExecutionStatus'
          description: List all command executions for the device that have a particular
            status. For example, you can filter the list to display only command executions
            that have failed or timed out.
        sortOrder:
          allOf:
          - $ref: '#/components/schemas/SortOrder'
          description: Specify whether to list the command executions that were created
            in the ascending or descending order. By default, the API returns all
            commands in the descending order based on the start time or completion
            time of the executions, that are determined by the `startTimeFilter` and
            `completeTimeFilter` parameters.
        startedTimeFilter:
          allOf:
          - $ref: '#/components/schemas/TimeFilter'
          description: List all command executions that started any time before or
            after the date and time that you specify. The date and time uses the format
            `yyyy-MM-dd'T'HH:mm`.
        completedTimeFilter:
          allOf:
          - $ref: '#/components/schemas/TimeFilter'
          description: List all command executions that completed any time before
            or after the date and time that you specify. The date and time uses the
            format `yyyy-MM-dd'T'HH:mm`.
        targetArn:
          allOf:
          - $ref: '#/components/schemas/TargetArn'
          description: The Amazon Resource Number (ARN) of the target device. You
            can use this information to list all command executions for a particular
            device.
        commandArn:
          allOf:
          - $ref: '#/components/schemas/CommandArn'
          description: The Amazon Resource Number (ARN) of the command. You can use
            this information to list all command executions for a particular command.
    ListCommandExecutionsResponse:
      type: object
      properties:
        commandExecutions:
          allOf:
          - $ref: '#/components/schemas/CommandExecutionSummaryList'
          description: The list of command executions.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token to use to get the next set of results, or `null`
            if there are no additional results.
    ListCommandsRequest:
      type: object
      properties:
        maxResults:
          allOf:
          - $ref: '#/components/schemas/CommandMaxResults'
          description: The maximum number of results to return in this operation.
            By default, the API returns up to a maximum of 25 results. You can override
            this default value to return up to a maximum of 100 results for this operation.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: To retrieve the next set of results, the `nextToken` value
            from a previous response; otherwise `null` to receive the first set of
            results.
        namespace:
          allOf:
          - $ref: '#/components/schemas/CommandNamespace'
          description: The namespace of the command. By default, the API returns all
            commands that have been created for both `AWS-IoT` and `AWS-IoT-FleetWise`
            namespaces. You can override this default value if you want to return
            all commands that have been created only for a specific namespace.
        commandParameterName:
          allOf:
          - $ref: '#/components/schemas/CommandParameterName'
          description: A filter that can be used to display the list of commands that
            have a specific command parameter name.
        sortOrder:
          allOf:
          - $ref: '#/components/schemas/SortOrder'
          description: Specify whether to list the commands that you have created
            in the ascending or descending order. By default, the API returns all
            commands in the descending order based on the time that they were created.
    ListCommandsResponse:
      type: object
      properties:
        commands:
          allOf:
          - $ref: '#/components/schemas/CommandSummaryList'
          description: The list of commands.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token to use to get the next set of results, or `null`
            if there are no additional results.
    ListCustomMetricsRequest:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return at one time. The default
            is 25.
    ListCustomMetricsResponse:
      type: object
      properties:
        metricNames:
          allOf:
          - $ref: '#/components/schemas/MetricNames'
          description: The name of the custom metric.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A token that can be used to retrieve the next set of results,
            or `null` if there are no additional results.
    ListDetectMitigationActionsExecutionsRequest:
      type: object
      properties:
        taskId:
          allOf:
          - $ref: '#/components/schemas/MitigationActionsTaskId'
          description: The unique identifier of the task.
        violationId:
          allOf:
          - $ref: '#/components/schemas/ViolationId'
          description: The unique identifier of the violation.
        thingName:
          allOf:
          - $ref: '#/components/schemas/DeviceDefenderThingName'
          description: The name of the thing whose mitigation actions are listed.
        startTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: A filter to limit results to those found after the specified
            time. You must specify either the startTime and endTime or the taskId,
            but not both.
        endTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The end of the time period for which ML Detect mitigation actions
            executions are returned.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return at one time. The default
            is 25.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results.
    ListDetectMitigationActionsExecutionsResponse:
      type: object
      properties:
        actionsExecutions:
          allOf:
          - $ref: '#/components/schemas/DetectMitigationActionExecutionList'
          description: List of actions executions.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A token that can be used to retrieve the next set of results,
            or `null` if there are no additional results.
    ListDetectMitigationActionsTasksRequest:
      type: object
      properties:
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return at one time. The default
            is 25.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results.
        startTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: A filter to limit results to those found after the specified
            time. You must specify either the startTime and endTime or the taskId,
            but not both.
        endTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The end of the time period for which ML Detect mitigation actions
            tasks are returned.
      required:
      - startTime
      - endTime
    ListDetectMitigationActionsTasksResponse:
      type: object
      properties:
        tasks:
          allOf:
          - $ref: '#/components/schemas/DetectMitigationActionsTaskSummaryList'
          description: The collection of ML Detect mitigation tasks that matched the
            filter criteria.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A token that can be used to retrieve the next set of results,
            or `null` if there are no additional results.
    ListDimensionsRequest:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to retrieve at one time.
    ListDimensionsResponse:
      type: object
      properties:
        dimensionNames:
          allOf:
          - $ref: '#/components/schemas/DimensionNames'
          description: A list of the names of the defined dimensions. Use `DescribeDimension`
            to get details for a dimension.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A token that can be used to retrieve the next set of results,
            or `null` if there are no additional results.
    ListDomainConfigurationsRequest:
      type: object
      properties:
        marker:
          allOf:
          - $ref: '#/components/schemas/Marker'
          description: The marker for the next set of results.
        pageSize:
          allOf:
          - $ref: '#/components/schemas/PageSize'
          description: The result page size.
        serviceType:
          allOf:
          - $ref: '#/components/schemas/ServiceType'
          description: The type of service delivered by the endpoint.
    ListDomainConfigurationsResponse:
      type: object
      properties:
        domainConfigurations:
          allOf:
          - $ref: '#/components/schemas/DomainConfigurations'
          description: A list of objects that contain summary information about the
            user's domain configurations.
        nextMarker:
          allOf:
          - $ref: '#/components/schemas/Marker'
          description: The marker for the next set of results.
    ListFleetMetricsRequest:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: To retrieve the next set of results, the `nextToken` value
            from a previous response; otherwise `null` to receive the first set of
            results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return in this operation.
    ListFleetMetricsResponse:
      type: object
      properties:
        fleetMetrics:
          allOf:
          - $ref: '#/components/schemas/FleetMetricNameAndArnList'
          description: The list of fleet metrics objects.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results. Will not be returned
            if the operation has returned all results.
    ListIndicesRequest:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token used to get the next set of results, or `null` if
            there are no additional results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/QueryMaxResults'
          description: The maximum number of results to return at one time.
    ListIndicesResponse:
      type: object
      properties:
        indexNames:
          allOf:
          - $ref: '#/components/schemas/IndexNamesList'
          description: The index names.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token used to get the next set of results, or `null` if
            there are no additional results.
    ListJobExecutionsForJobRequest:
      type: object
      properties:
        jobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          description: The unique identifier you assigned to this job when it was
            created.
        status:
          allOf:
          - $ref: '#/components/schemas/JobExecutionStatus'
          description: The status of the job.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/LaserMaxResults'
          description: The maximum number of results to be returned per request.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token to retrieve the next set of results.
      required:
      - jobId
    ListJobExecutionsForJobResponse:
      type: object
      properties:
        executionSummaries:
          allOf:
          - $ref: '#/components/schemas/JobExecutionSummaryForJobList'
          description: A list of job execution summaries.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results, or **null** if there
            are no additional results.
    ListJobExecutionsForThingRequest:
      type: object
      properties:
        thingName:
          allOf:
          - $ref: '#/components/schemas/ThingName'
          description: The thing name.
        status:
          allOf:
          - $ref: '#/components/schemas/JobExecutionStatus'
          description: An optional filter that lets you search for jobs that have
            the specified status.
        namespaceId:
          allOf:
          - $ref: '#/components/schemas/NamespaceId'
          description: 'The namespace used to indicate that a job is a customer-managed
            job.


            When you specify a value for this parameter, Amazon Web Services IoT Core
            sends jobs notifications to MQTT topics that contain the value in the
            following format.


            `$aws/things/_THING_NAME_ /jobs/_JOB_ID_ /notify-namespace-_NAMESPACE_ID_
            /`


            The `namespaceId` feature is only supported by IoT Greengrass at this
            time. For more information, see [Setting up IoT Greengrass core devices.](https://docs.aws.amazon.com/greengrass/v2/developerguide/setting-up.html)'
        maxResults:
          allOf:
          - $ref: '#/components/schemas/LaserMaxResults'
          description: The maximum number of results to be returned per request.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token to retrieve the next set of results.
        jobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          description: The unique identifier you assigned to this job when it was
            created.
      required:
      - thingName
    ListJobExecutionsForThingResponse:
      type: object
      properties:
        executionSummaries:
          allOf:
          - $ref: '#/components/schemas/JobExecutionSummaryForThingList'
          description: A list of job execution summaries.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results, or **null** if there
            are no additional results.
    ListJobTemplatesRequest:
      type: object
      properties:
        maxResults:
          allOf:
          - $ref: '#/components/schemas/LaserMaxResults'
          description: The maximum number of results to return in the list.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token to use to return the next set of results in the list.
    ListJobTemplatesResponse:
      type: object
      properties:
        jobTemplates:
          allOf:
          - $ref: '#/components/schemas/JobTemplateSummaryList'
          description: A list of objects that contain information about the job templates.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results, or **null** if there
            are no additional results.
    ListJobsRequest:
      type: object
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/JobStatus'
          description: An optional filter that lets you search for jobs that have
            the specified status.
        targetSelection:
          allOf:
          - $ref: '#/components/schemas/TargetSelection'
          description: 'Specifies whether the job will continue to run (CONTINUOUS),
            or will be complete after all those things specified as targets have completed
            the job (SNAPSHOT). If continuous, the job may also be run on a thing
            when a change is detected in a target. For example, a job will run on
            a thing when the thing is added to a target group, even after the job
            was completed by all things originally in the group.


            We recommend that you use continuous jobs instead of snapshot jobs for
            dynamic thing group targets. By using continuous jobs, devices that join
            the group receive the job execution even after the job has been created.'
        maxResults:
          allOf:
          - $ref: '#/components/schemas/LaserMaxResults'
          description: The maximum number of results to return per request.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token to retrieve the next set of results.
        thingGroupName:
          allOf:
          - $ref: '#/components/schemas/ThingGroupName'
          description: A filter that limits the returned jobs to those for the specified
            group.
        thingGroupId:
          allOf:
          - $ref: '#/components/schemas/ThingGroupId'
          description: A filter that limits the returned jobs to those for the specified
            group.
        namespaceId:
          allOf:
          - $ref: '#/components/schemas/NamespaceId'
          description: 'The namespace used to indicate that a job is a customer-managed
            job.


            When you specify a value for this parameter, Amazon Web Services IoT Core
            sends jobs notifications to MQTT topics that contain the value in the
            following format.


            `$aws/things/_THING_NAME_ /jobs/_JOB_ID_ /notify-namespace-_NAMESPACE_ID_
            /`


            The `namespaceId` feature is only supported by IoT Greengrass at this
            time. For more information, see [Setting up IoT Greengrass core devices.](https://docs.aws.amazon.com/greengrass/v2/developerguide/setting-up.html)'
    ListJobsResponse:
      type: object
      properties:
        jobs:
          allOf:
          - $ref: '#/components/schemas/JobSummaryList'
          description: A list of jobs.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results, or **null** if there
            are no additional results.
    ListManagedJobTemplatesRequest:
      type: object
      properties:
        templateName:
          allOf:
          - $ref: '#/components/schemas/ManagedJobTemplateName'
          description: An optional parameter for template name. If specified, only
            the versions of the managed job templates that have the specified template
            name will be returned.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/LaserMaxResults'
          description: Maximum number of entries that can be returned.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token to retrieve the next set of results.
    ListManagedJobTemplatesResponse:
      type: object
      properties:
        managedJobTemplates:
          allOf:
          - $ref: '#/components/schemas/ManagedJobTemplatesSummaryList'
          description: A list of managed job templates that are returned.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token to retrieve the next set of results.
    ListMetricValuesRequest:
      type: object
      properties:
        thingName:
          allOf:
          - $ref: '#/components/schemas/DeviceDefenderThingName'
          description: The name of the thing for which security profile metric values
            are returned.
        metricName:
          allOf:
          - $ref: '#/components/schemas/BehaviorMetric'
          description: The name of the security profile metric for which values are
            returned.
        dimensionName:
          allOf:
          - $ref: '#/components/schemas/DimensionName'
          description: The dimension name.
        dimensionValueOperator:
          allOf:
          - $ref: '#/components/schemas/DimensionValueOperator'
          description: The dimension value operator.
        startTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The start of the time period for which metric values are returned.
        endTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The end of the time period for which metric values are returned.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return at one time.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results.
      required:
      - thingName
      - metricName
      - startTime
      - endTime
    ListMetricValuesResponse:
      type: object
      properties:
        metricDatumList:
          allOf:
          - $ref: '#/components/schemas/MetricDatumList'
          description: The data the thing reports for the metric during the specified
            time period.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A token that can be used to retrieve the next set of results,
            or `null` if there are no additional results.
    ListMitigationActionsRequest:
      type: object
      properties:
        actionType:
          allOf:
          - $ref: '#/components/schemas/MitigationActionType'
          description: Specify a value to limit the result to mitigation actions with
            a specific action type.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return at one time. The default
            is 25.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results.
    ListMitigationActionsResponse:
      type: object
      properties:
        actionIdentifiers:
          allOf:
          - $ref: '#/components/schemas/MitigationActionIdentifierList'
          description: A set of actions that matched the specified filter criteria.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results.
    ListOTAUpdatesRequest:
      type: object
      properties:
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return at one time.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A token used to retrieve the next set of results.
        otaUpdateStatus:
          allOf:
          - $ref: '#/components/schemas/OTAUpdateStatus'
          description: The OTA update job status.
    ListOTAUpdatesResponse:
      type: object
      properties:
        otaUpdates:
          allOf:
          - $ref: '#/components/schemas/OTAUpdatesSummary'
          description: A list of OTA update jobs.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A token to use to get the next set of results.
    ListOutgoingCertificatesRequest:
      type: object
      properties:
        pageSize:
          allOf:
          - $ref: '#/components/schemas/PageSize'
          description: The result page size.
        marker:
          allOf:
          - $ref: '#/components/schemas/Marker'
          description: The marker for the next set of results.
        ascendingOrder:
          allOf:
          - $ref: '#/components/schemas/AscendingOrder'
          description: Specifies the order for results. If True, the results are returned
            in ascending order, based on the creation date.
      description: The input to the ListOutgoingCertificates operation.
    ListOutgoingCertificatesResponse:
      type: object
      properties:
        outgoingCertificates:
          allOf:
          - $ref: '#/components/schemas/OutgoingCertificates'
          description: The certificates that are being transferred but not yet accepted.
        nextMarker:
          allOf:
          - $ref: '#/components/schemas/Marker'
          description: The marker for the next set of results.
      description: The output from the ListOutgoingCertificates operation.
    ListPackageVersionsRequest:
      type: object
      properties:
        packageName:
          allOf:
          - $ref: '#/components/schemas/PackageName'
          description: The name of the target software package.
        status:
          allOf:
          - $ref: '#/components/schemas/PackageVersionStatus'
          description: The status of the package version. For more information, see
            [Package version lifecycle](https://docs.aws.amazon.com/iot/latest/developerguide/preparing-to-use-software-package-catalog.html#package-version-lifecycle).
        maxResults:
          allOf:
          - $ref: '#/components/schemas/PackageCatalogMaxResults'
          description: The maximum number of results to return at one time.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results.
      required:
      - packageName
    ListPackageVersionsResponse:
      type: object
      properties:
        packageVersionSummaries:
          allOf:
          - $ref: '#/components/schemas/PackageVersionSummaryList'
          description: Lists the package versions associated to the package.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results.
    ListPackagesRequest:
      type: object
      properties:
        maxResults:
          allOf:
          - $ref: '#/components/schemas/PackageCatalogMaxResults'
          description: The maximum number of results returned at one time.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results.
    ListPackagesResponse:
      type: object
      properties:
        packageSummaries:
          allOf:
          - $ref: '#/components/schemas/PackageSummaryList'
          description: The software package summary.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results.
    ListPoliciesRequest:
      type: object
      properties:
        marker:
          allOf:
          - $ref: '#/components/schemas/Marker'
          description: The marker for the next set of results.
        pageSize:
          allOf:
          - $ref: '#/components/schemas/PageSize'
          description: The result page size.
        ascendingOrder:
          allOf:
          - $ref: '#/components/schemas/AscendingOrder'
          description: Specifies the order for results. If true, the results are returned
            in ascending creation order.
      description: The input for the ListPolicies operation.
    ListPoliciesResponse:
      type: object
      properties:
        policies:
          allOf:
          - $ref: '#/components/schemas/Policies'
          description: The descriptions of the policies.
        nextMarker:
          allOf:
          - $ref: '#/components/schemas/Marker'
          description: The marker for the next set of results, or null if there are
            no additional results.
      description: The output from the ListPolicies operation.
    ListPolicyPrincipalsRequest:
      type: object
      properties:
        policyName:
          allOf:
          - $ref: '#/components/schemas/PolicyName'
          description: The policy name.
        marker:
          allOf:
          - $ref: '#/components/schemas/Marker'
          description: The marker for the next set of results.
        pageSize:
          allOf:
          - $ref: '#/components/schemas/PageSize'
          description: The result page size.
        ascendingOrder:
          allOf:
          - $ref: '#/components/schemas/AscendingOrder'
          description: Specifies the order for results. If true, the results are returned
            in ascending creation order.
      required:
      - policyName
      description: The input for the ListPolicyPrincipals operation.
    ListPolicyPrincipalsResponse:
      type: object
      properties:
        principals:
          allOf:
          - $ref: '#/components/schemas/Principals'
          description: The descriptions of the principals.
        nextMarker:
          allOf:
          - $ref: '#/components/schemas/Marker'
          description: The marker for the next set of results, or null if there are
            no additional results.
      description: The output from the ListPolicyPrincipals operation.
    ListPolicyVersionsRequest:
      type: object
      properties:
        policyName:
          allOf:
          - $ref: '#/components/schemas/PolicyName'
          description: The policy name.
      required:
      - policyName
      description: The input for the ListPolicyVersions operation.
    ListPolicyVersionsResponse:
      type: object
      properties:
        policyVersions:
          allOf:
          - $ref: '#/components/schemas/PolicyVersions'
          description: The policy versions.
      description: The output from the ListPolicyVersions operation.
    ListPrincipalPoliciesRequest:
      type: object
      properties:
        principal:
          allOf:
          - $ref: '#/components/schemas/Principal'
          description: The principal. Valid principals are CertificateArn (arn:aws:iot:_region_
            :_accountId_ :cert/_certificateId_), thingGroupArn (arn:aws:iot:_region_
            :_accountId_ :thinggroup/_groupName_) and CognitoId (_region_ :_id_).
        marker:
          allOf:
          - $ref: '#/components/schemas/Marker'
          description: The marker for the next set of results.
        pageSize:
          allOf:
          - $ref: '#/components/schemas/PageSize'
          description: The result page size.
        ascendingOrder:
          allOf:
          - $ref: '#/components/schemas/AscendingOrder'
          description: Specifies the order for results. If true, results are returned
            in ascending creation order.
      required:
      - principal
      description: The input for the ListPrincipalPolicies operation.
    ListPrincipalPoliciesResponse:
      type: object
      properties:
        policies:
          allOf:
          - $ref: '#/components/schemas/Policies'
          description: The policies.
        nextMarker:
          allOf:
          - $ref: '#/components/schemas/Marker'
          description: The marker for the next set of results, or null if there are
            no additional results.
      description: The output from the ListPrincipalPolicies operation.
    ListPrincipalThingsRequest:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: To retrieve the next set of results, the `nextToken` value
            from a previous response; otherwise **null** to receive the first set
            of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/RegistryMaxResults'
          description: The maximum number of results to return in this operation.
        principal:
          allOf:
          - $ref: '#/components/schemas/Principal'
          description: The principal.
      required:
      - principal
      description: The input for the ListPrincipalThings operation.
    ListPrincipalThingsResponse:
      type: object
      properties:
        things:
          allOf:
          - $ref: '#/components/schemas/ThingNameList'
          description: The things.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token to use to get the next set of results, or **null**
            if there are no additional results.
      description: The output from the ListPrincipalThings operation.
    ListPrincipalThingsV2Request:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: To retrieve the next set of results, the `nextToken` value
            from a previous response; otherwise **null** to receive the first set
            of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/RegistryMaxResults'
          description: The maximum number of results to return in this operation.
        principal:
          allOf:
          - $ref: '#/components/schemas/Principal'
          description: The principal. A principal can be an X.509 certificate or an
            Amazon Cognito ID.
        thingPrincipalType:
          allOf:
          - $ref: '#/components/schemas/ThingPrincipalType'
          description: "The type of the relation you want to filter in the response.\
            \ If no value is provided in this field, the response will list all things,\
            \ including both the `EXCLUSIVE_THING` and `NON_EXCLUSIVE_THING` attachment\
            \ types.\n\n  * `EXCLUSIVE_THING` \\- Attaches the specified principal\
            \ to the specified thing, exclusively. The thing will be the only thing\
            \ that’s attached to the principal.\n\n  * `NON_EXCLUSIVE_THING` \\- Attaches\
            \ the specified principal to the specified thing. Multiple things can\
            \ be attached to the principal."
      required:
      - principal
    ListPrincipalThingsV2Response:
      type: object
      properties:
        principalThingObjects:
          allOf:
          - $ref: '#/components/schemas/PrincipalThingObjects'
          description: A list of `thingPrincipalObject` that represents the principal
            and the type of relation it has with the thing.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token to use to get the next set of results, or **null**
            if there are no additional results.
    ListProvisioningTemplateVersionsRequest:
      type: object
      properties:
        templateName:
          allOf:
          - $ref: '#/components/schemas/TemplateName'
          description: The name of the provisioning template.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return at one time.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A token to retrieve the next set of results.
      required:
      - templateName
    ListProvisioningTemplateVersionsResponse:
      type: object
      properties:
        versions:
          allOf:
          - $ref: '#/components/schemas/ProvisioningTemplateVersionListing'
          description: The list of provisioning template versions.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A token to retrieve the next set of results.
    ListProvisioningTemplatesRequest:
      type: object
      properties:
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return at one time.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A token to retrieve the next set of results.
    ListProvisioningTemplatesResponse:
      type: object
      properties:
        templates:
          allOf:
          - $ref: '#/components/schemas/ProvisioningTemplateListing'
          description: A list of provisioning templates
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A token to retrieve the next set of results.
    ListRelatedResourcesForAuditFindingRequest:
      type: object
      properties:
        findingId:
          allOf:
          - $ref: '#/components/schemas/FindingId'
          description: The finding Id.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A token that can be used to retrieve the next set of results,
            or `null` if there are no additional results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return at one time.
      required:
      - findingId
    ListRelatedResourcesForAuditFindingResponse:
      type: object
      properties:
        relatedResources:
          allOf:
          - $ref: '#/components/schemas/RelatedResources'
          description: The related resources.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A token that can be used to retrieve the next set of results,
            or `null` for the first API call.
    ListRoleAliasesRequest:
      type: object
      properties:
        pageSize:
          allOf:
          - $ref: '#/components/schemas/PageSize'
          description: The maximum number of results to return at one time.
        marker:
          allOf:
          - $ref: '#/components/schemas/Marker'
          description: A marker used to get the next set of results.
        ascendingOrder:
          allOf:
          - $ref: '#/components/schemas/AscendingOrder'
          description: Return the list of role aliases in ascending alphabetical order.
    ListRoleAliasesResponse:
      type: object
      properties:
        roleAliases:
          allOf:
          - $ref: '#/components/schemas/RoleAliases'
          description: The role aliases.
        nextMarker:
          allOf:
          - $ref: '#/components/schemas/Marker'
          description: A marker used to get the next set of results.
    ListSbomValidationResultsRequest:
      type: object
      properties:
        packageName:
          allOf:
          - $ref: '#/components/schemas/PackageName'
          description: The name of the new software package.
        versionName:
          allOf:
          - $ref: '#/components/schemas/VersionName'
          description: The name of the new package version.
        validationResult:
          allOf:
          - $ref: '#/components/schemas/SbomValidationResult'
          description: The end result of the
        maxResults:
          allOf:
          - $ref: '#/components/schemas/PackageCatalogMaxResults'
          description: The maximum number of results to return at one time.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A token that can be used to retrieve the next set of results,
            or null if there are no additional results.
      required:
      - packageName
      - versionName
    ListSbomValidationResultsResponse:
      type: object
      properties:
        validationResultSummaries:
          allOf:
          - $ref: '#/components/schemas/SbomValidationResultSummaryList'
          description: A summary of the validation results for each software bill
            of materials attached to a software package version.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A token that can be used to retrieve the next set of results,
            or null if there are no additional results.
    ListScheduledAuditsRequest:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return at one time. The default
            is 25.
    ListScheduledAuditsResponse:
      type: object
      properties:
        scheduledAudits:
          allOf:
          - $ref: '#/components/schemas/ScheduledAuditMetadataList'
          description: The list of scheduled audits.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A token that can be used to retrieve the next set of results,
            or `null` if there are no additional results.
    ListSecurityProfilesForTargetRequest:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return at one time.
        recursive:
          allOf:
          - $ref: '#/components/schemas/Recursive'
          description: If true, return child groups too.
        securityProfileTargetArn:
          allOf:
          - $ref: '#/components/schemas/SecurityProfileTargetArn'
          description: The ARN of the target (thing group) whose attached security
            profiles you want to get.
      required:
      - securityProfileTargetArn
    ListSecurityProfilesForTargetResponse:
      type: object
      properties:
        securityProfileTargetMappings:
          allOf:
          - $ref: '#/components/schemas/SecurityProfileTargetMappings'
          description: A list of security profiles and their associated targets.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A token that can be used to retrieve the next set of results,
            or `null` if there are no additional results.
    ListSecurityProfilesRequest:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return at one time.
        dimensionName:
          allOf:
          - $ref: '#/components/schemas/DimensionName'
          description: A filter to limit results to the security profiles that use
            the defined dimension. Cannot be used with `metricName`
        metricName:
          allOf:
          - $ref: '#/components/schemas/MetricName'
          description: The name of the custom metric. Cannot be used with `dimensionName`.
    ListSecurityProfilesResponse:
      type: object
      properties:
        securityProfileIdentifiers:
          allOf:
          - $ref: '#/components/schemas/SecurityProfileIdentifiers'
          description: A list of security profile identifiers (names and ARNs).
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A token that can be used to retrieve the next set of results,
            or `null` if there are no additional results.
    ListStreamsRequest:
      type: object
      properties:
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return at a time.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A token used to get the next set of results.
        ascendingOrder:
          allOf:
          - $ref: '#/components/schemas/AscendingOrder'
          description: Set to true to return the list of streams in ascending order.
    ListStreamsResponse:
      type: object
      properties:
        streams:
          allOf:
          - $ref: '#/components/schemas/StreamsSummary'
          description: A list of streams.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A token used to get the next set of results.
    ListSuppressedAlerts:
      type: boolean
    ListSuppressedFindings:
      type: boolean
      default: false
    ListTagsForResourceRequest:
      type: object
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          description: The ARN of the resource.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: To retrieve the next set of results, the `nextToken` value
            from a previous response; otherwise **null** to receive the first set
            of results.
      required:
      - resourceArn
    ListTagsForResourceResponse:
      type: object
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: The list of tags assigned to the resource.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token to use to get the next set of results, or **null**
            if there are no additional results.
    ListTargetsForPolicyRequest:
      type: object
      properties:
        policyName:
          allOf:
          - $ref: '#/components/schemas/PolicyName'
          description: The policy name.
        marker:
          allOf:
          - $ref: '#/components/schemas/Marker'
          description: A marker used to get the next set of results.
        pageSize:
          allOf:
          - $ref: '#/components/schemas/PageSize'
          description: The maximum number of results to return at one time.
      required:
      - policyName
    ListTargetsForPolicyResponse:
      type: object
      properties:
        targets:
          allOf:
          - $ref: '#/components/schemas/PolicyTargets'
          description: The policy targets.
        nextMarker:
          allOf:
          - $ref: '#/components/schemas/Marker'
          description: A marker used to get the next set of results.
    ListTargetsForSecurityProfileRequest:
      type: object
      properties:
        securityProfileName:
          allOf:
          - $ref: '#/components/schemas/SecurityProfileName'
          description: The security profile.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return at one time.
      required:
      - securityProfileName
    ListTargetsForSecurityProfileResponse:
      type: object
      properties:
        securityProfileTargets:
          allOf:
          - $ref: '#/components/schemas/SecurityProfileTargets'
          description: The thing groups to which the security profile is attached.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A token that can be used to retrieve the next set of results,
            or `null` if there are no additional results.
    ListThingGroupsForThingRequest:
      type: object
      properties:
        thingName:
          allOf:
          - $ref: '#/components/schemas/ThingName'
          description: The thing name.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: To retrieve the next set of results, the `nextToken` value
            from a previous response; otherwise **null** to receive the first set
            of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/RegistryMaxResults'
          description: The maximum number of results to return at one time.
      required:
      - thingName
    ListThingGroupsForThingResponse:
      type: object
      properties:
        thingGroups:
          allOf:
          - $ref: '#/components/schemas/ThingGroupNameAndArnList'
          description: The thing groups.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token to use to get the next set of results, or **null**
            if there are no additional results.
    ListThingGroupsRequest:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: To retrieve the next set of results, the `nextToken` value
            from a previous response; otherwise **null** to receive the first set
            of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/RegistryMaxResults'
          description: The maximum number of results to return at one time.
        parentGroup:
          allOf:
          - $ref: '#/components/schemas/ThingGroupName'
          description: A filter that limits the results to those with the specified
            parent group.
        namePrefixFilter:
          allOf:
          - $ref: '#/components/schemas/ThingGroupName'
          description: A filter that limits the results to those with the specified
            name prefix.
        recursive:
          allOf:
          - $ref: '#/components/schemas/RecursiveWithoutDefault'
          description: If true, return child groups as well.
    ListThingGroupsResponse:
      type: object
      properties:
        thingGroups:
          allOf:
          - $ref: '#/components/schemas/ThingGroupNameAndArnList'
          description: The thing groups.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token to use to get the next set of results. Will not be
            returned if operation has returned all results.
    ListThingPrincipalsRequest:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: To retrieve the next set of results, the `nextToken` value
            from a previous response; otherwise **null** to receive the first set
            of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/RegistryMaxResults'
          description: The maximum number of results to return in this operation.
        thingName:
          allOf:
          - $ref: '#/components/schemas/ThingName'
          description: The name of the thing.
      required:
      - thingName
      description: The input for the ListThingPrincipal operation.
    ListThingPrincipalsResponse:
      type: object
      properties:
        principals:
          allOf:
          - $ref: '#/components/schemas/Principals'
          description: The principals associated with the thing.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token to use to get the next set of results, or **null**
            if there are no additional results.
      description: The output from the ListThingPrincipals operation.
    ListThingPrincipalsV2Request:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: To retrieve the next set of results, the `nextToken` value
            from a previous response; otherwise **null** to receive the first set
            of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/RegistryMaxResults'
          description: The maximum number of results to return in this operation.
        thingName:
          allOf:
          - $ref: '#/components/schemas/ThingName'
          description: The name of the thing.
        thingPrincipalType:
          allOf:
          - $ref: '#/components/schemas/ThingPrincipalType'
          description: "The type of the relation you want to filter in the response.\
            \ If no value is provided in this field, the response will list all principals,\
            \ including both the `EXCLUSIVE_THING` and `NON_EXCLUSIVE_THING` attachment\
            \ types.\n\n  * `EXCLUSIVE_THING` \\- Attaches the specified principal\
            \ to the specified thing, exclusively. The thing will be the only thing\
            \ that’s attached to the principal.\n\n  * `NON_EXCLUSIVE_THING` \\- Attaches\
            \ the specified principal to the specified thing. Multiple things can\
            \ be attached to the principal."
      required:
      - thingName
    ListThingPrincipalsV2Response:
      type: object
      properties:
        thingPrincipalObjects:
          allOf:
          - $ref: '#/components/schemas/ThingPrincipalObjects'
          description: A list of `thingPrincipalObject` that represents the principal
            and the type of relation it has with the thing.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token to use to get the next set of results, or **null**
            if there are no additional results.
    ListThingRegistrationTaskReportsRequest:
      type: object
      properties:
        taskId:
          allOf:
          - $ref: '#/components/schemas/TaskId'
          description: The id of the task.
        reportType:
          allOf:
          - $ref: '#/components/schemas/ReportType'
          description: The type of task report.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: To retrieve the next set of results, the `nextToken` value
            from a previous response; otherwise **null** to receive the first set
            of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/RegistryMaxResults'
          description: The maximum number of results to return per request.
      required:
      - taskId
      - reportType
    ListThingRegistrationTaskReportsResponse:
      type: object
      properties:
        resourceLinks:
          allOf:
          - $ref: '#/components/schemas/S3FileUrlList'
          description: Links to the task resources.
        reportType:
          allOf:
          - $ref: '#/components/schemas/ReportType'
          description: The type of task report.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token to use to get the next set of results, or **null**
            if there are no additional results.
    ListThingRegistrationTasksRequest:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: To retrieve the next set of results, the `nextToken` value
            from a previous response; otherwise **null** to receive the first set
            of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/RegistryMaxResults'
          description: The maximum number of results to return at one time.
        status:
          allOf:
          - $ref: '#/components/schemas/Status'
          description: The status of the bulk thing provisioning task.
    ListThingRegistrationTasksResponse:
      type: object
      properties:
        taskIds:
          allOf:
          - $ref: '#/components/schemas/TaskIdList'
          description: A list of bulk thing provisioning task IDs.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token to use to get the next set of results, or **null**
            if there are no additional results.
    ListThingTypesRequest:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: To retrieve the next set of results, the `nextToken` value
            from a previous response; otherwise **null** to receive the first set
            of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/RegistryMaxResults'
          description: The maximum number of results to return in this operation.
        thingTypeName:
          allOf:
          - $ref: '#/components/schemas/ThingTypeName'
          description: The name of the thing type.
      description: The input for the ListThingTypes operation.
    ListThingTypesResponse:
      type: object
      properties:
        thingTypes:
          allOf:
          - $ref: '#/components/schemas/ThingTypeList'
          description: The thing types.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results. Will not be returned
            if operation has returned all results.
      description: The output for the ListThingTypes operation.
    ListThingsInBillingGroupRequest:
      type: object
      properties:
        billingGroupName:
          allOf:
          - $ref: '#/components/schemas/BillingGroupName'
          description: The name of the billing group.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: To retrieve the next set of results, the `nextToken` value
            from a previous response; otherwise **null** to receive the first set
            of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/RegistryMaxResults'
          description: The maximum number of results to return per request.
      required:
      - billingGroupName
    ListThingsInBillingGroupResponse:
      type: object
      properties:
        things:
          allOf:
          - $ref: '#/components/schemas/ThingNameList'
          description: A list of things in the billing group.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token to use to get the next set of results. Will not be
            returned if operation has returned all results.
    ListThingsInThingGroupRequest:
      type: object
      properties:
        thingGroupName:
          allOf:
          - $ref: '#/components/schemas/ThingGroupName'
          description: The thing group name.
        recursive:
          allOf:
          - $ref: '#/components/schemas/Recursive'
          description: When true, list things in this thing group and in all child
            groups as well.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: To retrieve the next set of results, the `nextToken` value
            from a previous response; otherwise **null** to receive the first set
            of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/RegistryMaxResults'
          description: The maximum number of results to return at one time.
      required:
      - thingGroupName
    ListThingsInThingGroupResponse:
      type: object
      properties:
        things:
          allOf:
          - $ref: '#/components/schemas/ThingNameList'
          description: The things in the specified thing group.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token to use to get the next set of results, or **null**
            if there are no additional results.
    ListThingsRequest:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: To retrieve the next set of results, the `nextToken` value
            from a previous response; otherwise **null** to receive the first set
            of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/RegistryMaxResults'
          description: The maximum number of results to return in this operation.
        attributeName:
          allOf:
          - $ref: '#/components/schemas/AttributeName'
          description: The attribute name used to search for things.
        attributeValue:
          allOf:
          - $ref: '#/components/schemas/AttributeValue'
          description: The attribute value used to search for things.
        thingTypeName:
          allOf:
          - $ref: '#/components/schemas/ThingTypeName'
          description: The name of the thing type used to search for things.
        usePrefixAttributeValue:
          allOf:
          - $ref: '#/components/schemas/usePrefixAttributeValue'
          description: 'When `true`, the action returns the thing resources with attribute
            values that start with the `attributeValue` provided.


            When `false`, or not present, the action returns only the thing resources
            with attribute values that match the entire `attributeValue` provided.'
      description: The input for the ListThings operation.
    ListThingsResponse:
      type: object
      properties:
        things:
          allOf:
          - $ref: '#/components/schemas/ThingAttributeList'
          description: The things.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token to use to get the next set of results. Will not be
            returned if operation has returned all results.
      description: The output from the ListThings operation.
    ListTopicRuleDestinationsRequest:
      type: object
      properties:
        maxResults:
          allOf:
          - $ref: '#/components/schemas/TopicRuleDestinationMaxResults'
          description: The maximum number of results to return at one time.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: To retrieve the next set of results, the `nextToken` value
            from a previous response; otherwise **null** to receive the first set
            of results.
    ListTopicRuleDestinationsResponse:
      type: object
      properties:
        destinationSummaries:
          allOf:
          - $ref: '#/components/schemas/TopicRuleDestinationSummaries'
          description: Information about a topic rule destination.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token to use to get the next set of results, or **null**
            if there are no additional results.
    ListTopicRulesRequest:
      type: object
      properties:
        topic:
          allOf:
          - $ref: '#/components/schemas/Topic'
          description: The topic.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/TopicRuleMaxResults'
          description: The maximum number of results to return.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: To retrieve the next set of results, the `nextToken` value
            from a previous response; otherwise **null** to receive the first set
            of results.
        ruleDisabled:
          allOf:
          - $ref: '#/components/schemas/IsDisabled'
          description: Specifies whether the rule is disabled.
      description: The input for the ListTopicRules operation.
    ListTopicRulesResponse:
      type: object
      properties:
        rules:
          allOf:
          - $ref: '#/components/schemas/TopicRuleList'
          description: The rules.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token to use to get the next set of results, or **null**
            if there are no additional results.
      description: The output from the ListTopicRules operation.
    ListV2LoggingLevelsRequest:
      type: object
      properties:
        targetType:
          allOf:
          - $ref: '#/components/schemas/LogTargetType'
          description: The type of resource for which you are configuring logging.
            Must be `THING_Group`.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: To retrieve the next set of results, the `nextToken` value
            from a previous response; otherwise **null** to receive the first set
            of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/SkyfallMaxResults'
          description: The maximum number of results to return at one time.
    ListV2LoggingLevelsResponse:
      type: object
      properties:
        logTargetConfigurations:
          allOf:
          - $ref: '#/components/schemas/LogTargetConfigurations'
          description: The logging configuration for a target.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token to use to get the next set of results, or **null**
            if there are no additional results.
    ListViolationEventsRequest:
      type: object
      properties:
        startTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The start time for the alerts to be listed.
        endTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The end time for the alerts to be listed.
        thingName:
          allOf:
          - $ref: '#/components/schemas/DeviceDefenderThingName'
          description: A filter to limit results to those alerts caused by the specified
            thing.
        securityProfileName:
          allOf:
          - $ref: '#/components/schemas/SecurityProfileName'
          description: A filter to limit results to those alerts generated by the
            specified security profile.
        behaviorCriteriaType:
          allOf:
          - $ref: '#/components/schemas/BehaviorCriteriaType'
          description: The criteria for a behavior.
        listSuppressedAlerts:
          allOf:
          - $ref: '#/components/schemas/ListSuppressedAlerts'
          description: A list of all suppressed alerts.
        verificationState:
          allOf:
          - $ref: '#/components/schemas/VerificationState'
          description: The verification state of the violation (detect alarm).
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return at one time.
      required:
      - startTime
      - endTime
    ListViolationEventsResponse:
      type: object
      properties:
        violationEvents:
          allOf:
          - $ref: '#/components/schemas/ViolationEvents'
          description: The security profile violation alerts issued for this account
            during the given time period, potentially filtered by security profile,
            behavior violated, or thing (device) violating.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A token that can be used to retrieve the next set of results,
            or `null` if there are no additional results.
    LocationAction:
      type: object
      properties:
        roleArn:
          allOf:
          - $ref: '#/components/schemas/AwsArn'
          description: The IAM role that grants permission to write to the Amazon
            Location resource.
        trackerName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the tracker resource in Amazon Location in which
            the location is updated.
        deviceId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique ID of the device providing the location data.
        timestamp:
          allOf:
          - $ref: '#/components/schemas/LocationTimestamp'
          description: The time that the location data was sampled. The default value
            is the time the MQTT message was processed.
        latitude:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A string that evaluates to a double value that represents the
            latitude of the device's location.
        longitude:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A string that evaluates to a double value that represents the
            longitude of the device's location.
      required:
      - roleArn
      - trackerName
      - deviceId
      - latitude
      - longitude
      description: The Amazon Location rule action sends device location updates from
        an MQTT message to an Amazon Location tracker resource.
    LocationTimestamp:
      type: object
      properties:
        value:
          allOf:
          - $ref: '#/components/schemas/String'
          description: An expression that returns a long epoch time value.
        unit:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'The precision of the timestamp value that results from the
            expression described in `value`.


            Valid values: `SECONDS` | `MILLISECONDS` | `MICROSECONDS` | `NANOSECONDS`.
            The default is `MILLISECONDS`.'
      required:
      - value
      description: Describes how to interpret an application-defined timestamp value
        from an MQTT message payload and the precision of that value.
    LogGroupName:
      type: string
    LogLevel:
      type: string
      enum:
      - DEBUG
      - INFO
      - ERROR
      - WARN
      - DISABLED
    LogTarget:
      type: object
      properties:
        targetType:
          allOf:
          - $ref: '#/components/schemas/LogTargetType'
          description: The target type.
        targetName:
          allOf:
          - $ref: '#/components/schemas/LogTargetName'
          description: The target name.
      required:
      - targetType
      description: A log target.
    LogTargetConfiguration:
      type: object
      properties:
        logTarget:
          allOf:
          - $ref: '#/components/schemas/LogTarget'
          description: A log target
        logLevel:
          allOf:
          - $ref: '#/components/schemas/LogLevel'
          description: The logging level.
      description: The target configuration.
    LogTargetConfigurations:
      type: array
      items:
        $ref: '#/components/schemas/LogTargetConfiguration'
    LogTargetName:
      type: string
    LogTargetType:
      type: string
      enum:
      - DEFAULT
      - THING_GROUP
      - CLIENT_ID
      - SOURCE_IP
      - PRINCIPAL_ID
    LoggingOptionsPayload:
      type: object
      properties:
        roleArn:
          allOf:
          - $ref: '#/components/schemas/AwsArn'
          description: The ARN of the IAM role that grants access.
        logLevel:
          allOf:
          - $ref: '#/components/schemas/LogLevel'
          description: The log level.
      required:
      - roleArn
      description: Describes the logging options payload.
    LongParameterValue:
      type: integer
      format: int64
    MachineLearningDetectionConfig:
      type: object
      properties:
        confidenceLevel:
          allOf:
          - $ref: '#/components/schemas/ConfidenceLevel'
          description: The sensitivity of anomalous behavior evaluation. Can be `Low`,
            `Medium`, or `High`.
      required:
      - confidenceLevel
      description: The configuration of an ML Detect Security Profile.
    MaintenanceWindow:
      type: object
      properties:
        startTime:
          allOf:
          - $ref: '#/components/schemas/CronExpression'
          description: Displays the start time of the next maintenance window.
        durationInMinutes:
          allOf:
          - $ref: '#/components/schemas/DurationInMinutes'
          description: Displays the duration of the next maintenance window.
      required:
      - startTime
      - durationInMinutes
      description: An optional configuration within the `SchedulingConfig` to setup
        a recurring maintenance window with a predetermined start time and duration
        for the rollout of a job document to all devices in a target group for a job.
    MaintenanceWindows:
      type: array
      items:
        $ref: '#/components/schemas/MaintenanceWindow'
    MalformedPolicyException:
      type: object
      properties:
        message:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage2'
          description: The message for the exception.
      description: The policy documentation is not valid.
    ManagedJobTemplateName:
      type: string
      minLength: 1
      maxLength: 64
    ManagedJobTemplateSummary:
      type: object
      properties:
        templateArn:
          allOf:
          - $ref: '#/components/schemas/JobTemplateArn'
          description: The Amazon Resource Name (ARN) for a managed template.
        templateName:
          allOf:
          - $ref: '#/components/schemas/ManagedJobTemplateName'
          description: The unique Name for a managed template.
        description:
          allOf:
          - $ref: '#/components/schemas/JobDescription'
          description: The description for a managed template.
        environments:
          allOf:
          - $ref: '#/components/schemas/Environments'
          description: A list of environments that are supported with the managed
            job template.
        templateVersion:
          allOf:
          - $ref: '#/components/schemas/ManagedTemplateVersion'
          description: The version for a managed template.
      description: An object that contains information about the managed template.
    ManagedJobTemplatesSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/ManagedJobTemplateSummary'
    ManagedTemplateVersion:
      type: string
      pattern: ^[1-9]+.[0-9]+$
    Marker:
      type: string
      pattern: ^[A-Za-z0-9+/]+={0,2}$
      minLength: 0
      maxLength: 1024
    MaxBuckets:
      type: integer
      minimum: 1
      maximum: 10000
    MaxJobExecutionsPerMin:
      type: integer
      minimum: 1
    MaxResults:
      type: integer
      minimum: 1
      maximum: 250
    Maximum:
      type: number
      format: double
      default: 0
    MaximumPerMinute:
      type: integer
      minimum: 1
      maximum: 1000
    Message:
      type: string
      pattern: ^[\s\S]*$
      minLength: 0
      maxLength: 128
    MessageExpiry:
      type: string
      minLength: 0
      maxLength: 1024
    MessageFormat:
      type: string
      enum:
      - RAW
      - JSON
    MessageId:
      type: string
      minLength: 0
      maxLength: 128
    MetricDatum:
      type: object
      properties:
        timestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time the metric value was reported.
        value:
          allOf:
          - $ref: '#/components/schemas/MetricValue'
          description: The value reported for the metric.
      description: A metric.
    MetricDatumList:
      type: array
      items:
        $ref: '#/components/schemas/MetricDatum'
    MetricDimension:
      type: object
      properties:
        dimensionName:
          allOf:
          - $ref: '#/components/schemas/DimensionName'
          description: A unique identifier for the dimension.
        operator:
          allOf:
          - $ref: '#/components/schemas/DimensionValueOperator'
          description: 'Defines how the `dimensionValues` of a dimension are interpreted.
            For example, for dimension type TOPIC_FILTER, the `IN` operator, a message
            will be counted only if its topic matches one of the topic filters. With
            `NOT_IN` operator, a message will be counted only if it doesn''t match
            any of the topic filters. The operator is optional: if it''s not provided
            (is `null`), it will be interpreted as `IN`.'
      required:
      - dimensionName
      description: The dimension of a metric.
    MetricName:
      type: string
      pattern: ^[a-zA-Z0-9:_-]+$
      minLength: 1
      maxLength: 128
    MetricNames:
      type: array
      items:
        $ref: '#/components/schemas/MetricName'
    MetricToRetain:
      type: object
      properties:
        metric:
          allOf:
          - $ref: '#/components/schemas/BehaviorMetric'
          description: What is measured by the behavior.
        metricDimension:
          allOf:
          - $ref: '#/components/schemas/MetricDimension'
          description: The dimension of a metric. This can't be used with custom metrics.
        exportMetric:
          allOf:
          - $ref: '#/components/schemas/ExportMetric'
          description: The value indicates exporting metrics related to the `MetricToRetain
            ` when it's true.
      required:
      - metric
      description: The metric you want to retain. Dimensions are optional.
    MetricValue:
      type: object
      properties:
        count:
          allOf:
          - $ref: '#/components/schemas/UnsignedLong'
          description: If the `comparisonOperator` calls for a numeric value, use
            this to specify that numeric value to be compared with the `metric`.
        cidrs:
          allOf:
          - $ref: '#/components/schemas/Cidrs'
          description: If the `comparisonOperator` calls for a set of CIDRs, use this
            to specify that set to be compared with the `metric`.
        ports:
          allOf:
          - $ref: '#/components/schemas/Ports'
          description: If the `comparisonOperator` calls for a set of ports, use this
            to specify that set to be compared with the `metric`.
        number:
          allOf:
          - $ref: '#/components/schemas/Number'
          description: The numeral value of a metric.
        numbers:
          allOf:
          - $ref: '#/components/schemas/NumberList'
          description: The numeral values of a metric.
        strings:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: The string values of a metric.
      description: The value to be compared with the `metric`.
    MetricsExportConfig:
      type: object
      properties:
        mqttTopic:
          allOf:
          - $ref: '#/components/schemas/MqttTopic'
          description: The MQTT topic that Device Defender Detect should publish messages
            to for metrics export.
        roleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          description: This role ARN has permission to publish MQTT messages, after
            which Device Defender Detect can assume the role and publish messages
            on your behalf.
      required:
      - mqttTopic
      - roleArn
      description: Set configurations for metrics export.
    MimeType:
      type: string
      minLength: 1
    Minimum:
      type: number
      format: double
      default: 0
    MinimumNumberOfExecutedThings:
      type: integer
      minimum: 1
    MissingContextValue:
      type: string
    MissingContextValues:
      type: array
      items:
        $ref: '#/components/schemas/MissingContextValue'
    MitigationAction:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/MitigationActionName'
          description: A user-friendly name for the mitigation action.
        id:
          allOf:
          - $ref: '#/components/schemas/MitigationActionId'
          description: A unique identifier for the mitigation action.
        roleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          description: The IAM role ARN used to apply this mitigation action.
        actionParams:
          allOf:
          - $ref: '#/components/schemas/MitigationActionParams'
          description: The set of parameters for this mitigation action. The parameters
            vary, depending on the kind of action you apply.
      description: Describes which changes should be applied as part of a mitigation
        action.
    MitigationActionArn:
      type: string
    MitigationActionId:
      type: string
    MitigationActionIdentifier:
      type: object
      properties:
        actionName:
          allOf:
          - $ref: '#/components/schemas/MitigationActionName'
          description: The friendly name of the mitigation action.
        actionArn:
          allOf:
          - $ref: '#/components/schemas/MitigationActionArn'
          description: The IAM role ARN used to apply this mitigation action.
        creationDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date when this mitigation action was created.
      description: Information that identifies a mitigation action. This information
        is returned by ListMitigationActions.
    MitigationActionIdentifierList:
      type: array
      items:
        $ref: '#/components/schemas/MitigationActionIdentifier'
    MitigationActionList:
      type: array
      items:
        $ref: '#/components/schemas/MitigationAction'
    MitigationActionName:
      type: string
      pattern: ^[a-zA-Z0-9_-]+$
      minLength: 0
      maxLength: 128
    MitigationActionNameList:
      type: array
      items:
        $ref: '#/components/schemas/MitigationActionName'
    MitigationActionParams:
      type: object
      properties:
        updateDeviceCertificateParams:
          allOf:
          - $ref: '#/components/schemas/UpdateDeviceCertificateParams'
          description: Parameters to define a mitigation action that changes the state
            of the device certificate to inactive.
        updateCACertificateParams:
          allOf:
          - $ref: '#/components/schemas/UpdateCACertificateParams'
          description: Parameters to define a mitigation action that changes the state
            of the CA certificate to inactive.
        addThingsToThingGroupParams:
          allOf:
          - $ref: '#/components/schemas/AddThingsToThingGroupParams'
          description: Parameters to define a mitigation action that moves devices
            associated with a certificate to one or more specified thing groups, typically
            for quarantine.
        replaceDefaultPolicyVersionParams:
          allOf:
          - $ref: '#/components/schemas/ReplaceDefaultPolicyVersionParams'
          description: Parameters to define a mitigation action that adds a blank
            policy to restrict permissions.
        enableIoTLoggingParams:
          allOf:
          - $ref: '#/components/schemas/EnableIoTLoggingParams'
          description: Parameters to define a mitigation action that enables Amazon
            Web Services IoT Core logging at a specified level of detail.
        publishFindingToSnsParams:
          allOf:
          - $ref: '#/components/schemas/PublishFindingToSnsParams'
          description: Parameters to define a mitigation action that publishes findings
            to Amazon Simple Notification Service (Amazon SNS. You can implement your
            own custom actions in response to the Amazon SNS messages.
      description: The set of parameters for this mitigation action. You can specify
        only one type of parameter (in other words, you can apply only one action
        for each defined mitigation action).
    MitigationActionType:
      type: string
      enum:
      - UPDATE_DEVICE_CERTIFICATE
      - UPDATE_CA_CERTIFICATE
      - ADD_THINGS_TO_THING_GROUP
      - REPLACE_DEFAULT_POLICY_VERSION
      - ENABLE_IOT_LOGGING
      - PUBLISH_FINDING_TO_SNS
    MitigationActionsTaskId:
      type: string
      pattern: ^[a-zA-Z0-9_-]+$
      minLength: 1
      maxLength: 128
    ModelStatus:
      type: string
      enum:
      - PENDING_BUILD
      - ACTIVE
      - EXPIRED
    Mqtt5Configuration:
      type: object
      properties:
        propagatingAttributes:
          allOf:
          - $ref: '#/components/schemas/PropagatingAttributeList'
          description: An object that represents the propagating thing attributes
            and the connection attributes.
      description: The configuration to add user-defined properties to enrich MQTT
        5 messages.
    MqttClientId:
      type: string
      pattern: ^[\s\S]*$
      minLength: 1
      maxLength: 65535
    MqttContext:
      type: object
      properties:
        username:
          allOf:
          - $ref: '#/components/schemas/MqttUsername'
          description: The value of the `username` key in an MQTT authorization request.
        password:
          allOf:
          - $ref: '#/components/schemas/MqttPassword'
          description: The value of the `password` key in an MQTT authorization request.
        clientId:
          allOf:
          - $ref: '#/components/schemas/MqttClientId'
          description: The value of the `clientId` key in an MQTT authorization request.
      description: Specifies the MQTT context to use for the test authorizer request
    MqttHeaders:
      type: object
      properties:
        payloadFormatIndicator:
          allOf:
          - $ref: '#/components/schemas/PayloadFormatIndicator'
          description: 'An `Enum` string value that indicates whether the payload
            is formatted as UTF-8.


            Valid values are `UNSPECIFIED_BYTES` and `UTF8_DATA`.


            For more information, see [ Payload Format Indicator](https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901111)
            from the MQTT Version 5.0 specification.


            Supports [substitution templates](https://docs.aws.amazon.com/iot/latest/developerguide/iot-substitution-templates.html).'
        contentType:
          allOf:
          - $ref: '#/components/schemas/ContentType'
          description: 'A UTF-8 encoded string that describes the content of the publishing
            message.


            For more information, see [ Content Type](https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901118)
            from the MQTT Version 5.0 specification.


            Supports [substitution templates](https://docs.aws.amazon.com/iot/latest/developerguide/iot-substitution-templates.html).'
        responseTopic:
          allOf:
          - $ref: '#/components/schemas/ResponseTopic'
          description: 'A UTF-8 encoded string that''s used as the topic name for
            a response message. The response topic is used to describe the topic which
            the receiver should publish to as part of the request-response flow. The
            topic must not contain wildcard characters.


            For more information, see [ Response Topic](https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901114)
            from the MQTT Version 5.0 specification.


            Supports [substitution templates](https://docs.aws.amazon.com/iot/latest/developerguide/iot-substitution-templates.html).'
        correlationData:
          allOf:
          - $ref: '#/components/schemas/CorrelationData'
          description: 'The base64-encoded binary data used by the sender of the request
            message to identify which request the response message is for when it''s
            received.


            For more information, see [ Correlation Data](https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901115)
            from the MQTT Version 5.0 specification.


            This binary data must be based64-encoded.


            Supports [substitution templates](https://docs.aws.amazon.com/iot/latest/developerguide/iot-substitution-templates.html).'
        messageExpiry:
          allOf:
          - $ref: '#/components/schemas/MessageExpiry'
          description: 'A user-defined integer value that will persist a message at
            the message broker for a specified amount of time to ensure that the message
            will expire if it''s no longer relevant to the subscriber. The value of
            `messageExpiry` represents the number of seconds before it expires. For
            more information about the limits of `messageExpiry`, see [Amazon Web
            Services IoT Core message broker and protocol limits and quotas ](https://docs.aws.amazon.com/iot/latest/developerguide/mqtt.html)
            from the Amazon Web Services Reference Guide.


            Supports [substitution templates](https://docs.aws.amazon.com/iot/latest/developerguide/iot-substitution-templates.html).'
        userProperties:
          allOf:
          - $ref: '#/components/schemas/UserProperties'
          description: An array of key-value pairs that you define in the MQTT5 header.
      description: Specifies MQTT Version 5.0 headers information. For more information,
        see [ MQTT](https://docs.aws.amazon.com/iot/latest/developerguide/mqtt.html)
        from Amazon Web Services IoT Core Developer Guide.
    MqttPassword:
      type: string
      format: byte
      minLength: 1
      maxLength: 65535
    MqttTopic:
      type: string
      minLength: 1
      maxLength: 512
    MqttUsername:
      type: string
      pattern: ^[\s\S]*$
      minLength: 1
      maxLength: 65535
    NamedShadowIndexingMode:
      type: string
      enum:
      - 'OFF'
      - 'ON'
    NamedShadowNamesFilter:
      type: array
      items:
        $ref: '#/components/schemas/ShadowName'
    NamespaceId:
      type: string
      pattern: ^[a-zA-Z0-9_-]+$
    NextToken:
      type: string
    NonCompliantChecksCount:
      type: integer
    NonCompliantResource:
      type: object
      properties:
        resourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          description: The type of the noncompliant resource.
        resourceIdentifier:
          allOf:
          - $ref: '#/components/schemas/ResourceIdentifier'
          description: Information that identifies the noncompliant resource.
        additionalInfo:
          allOf:
          - $ref: '#/components/schemas/StringMap'
          description: Other information about the noncompliant resource.
      description: Information about the resource that was noncompliant with the audit
        check.
    NonCompliantResourcesCount:
      type: integer
      format: int64
    NotConfiguredException:
      type: object
      properties:
        message:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage2'
          description: The message for the exception.
      description: The resource is not configured.
    NullableBoolean:
      type: boolean
    Number:
      type: number
      format: double
    NumberList:
      type: array
      items:
        $ref: '#/components/schemas/Number'
    NumberOfRetries:
      type: integer
      minimum: 0
      maximum: 10
    NumberOfThings:
      type: integer
      minimum: 1
    OCSPLambdaArn:
      type: string
      minLength: 0
      maxLength: 140
    OTAUpdateArn:
      type: string
    OTAUpdateDescription:
      type: string
      pattern: ^[^\p{C}]+$
      minLength: 0
      maxLength: 2028
    OTAUpdateErrorMessage:
      type: string
    OTAUpdateFile:
      type: object
      properties:
        fileName:
          allOf:
          - $ref: '#/components/schemas/FileName'
          description: The name of the file.
        fileType:
          allOf:
          - $ref: '#/components/schemas/FileType'
          description: An integer value you can include in the job document to allow
            your devices to identify the type of file received from the cloud.
        fileVersion:
          allOf:
          - $ref: '#/components/schemas/OTAUpdateFileVersion'
          description: The file version.
        fileLocation:
          allOf:
          - $ref: '#/components/schemas/FileLocation'
          description: The location of the updated firmware.
        codeSigning:
          allOf:
          - $ref: '#/components/schemas/CodeSigning'
          description: The code signing method of the file.
        attributes:
          allOf:
          - $ref: '#/components/schemas/AttributesMap'
          description: A list of name-attribute pairs. They won't be sent to devices
            as a part of the Job document.
      description: Describes a file to be associated with an OTA update.
    OTAUpdateFileVersion:
      type: string
    OTAUpdateFiles:
      type: array
      items:
        $ref: '#/components/schemas/OTAUpdateFile'
    OTAUpdateId:
      type: string
      pattern: ^[a-zA-Z0-9_-]+$
      minLength: 1
      maxLength: 128
    OTAUpdateInfo:
      type: object
      properties:
        otaUpdateId:
          allOf:
          - $ref: '#/components/schemas/OTAUpdateId'
          description: The OTA update ID.
        otaUpdateArn:
          allOf:
          - $ref: '#/components/schemas/OTAUpdateArn'
          description: The OTA update ARN.
        creationDate:
          allOf:
          - $ref: '#/components/schemas/DateType'
          description: The date when the OTA update was created.
        lastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/DateType'
          description: The date when the OTA update was last updated.
        description:
          allOf:
          - $ref: '#/components/schemas/OTAUpdateDescription'
          description: A description of the OTA update.
        targets:
          allOf:
          - $ref: '#/components/schemas/Targets'
          description: The targets of the OTA update.
        protocols:
          allOf:
          - $ref: '#/components/schemas/Protocols'
          description: The protocol used to transfer the OTA update image. Valid values
            are [HTTP], [MQTT], [HTTP, MQTT]. When both HTTP and MQTT are specified,
            the target device can choose the protocol.
        awsJobExecutionsRolloutConfig:
          allOf:
          - $ref: '#/components/schemas/AwsJobExecutionsRolloutConfig'
          description: Configuration for the rollout of OTA updates.
        awsJobPresignedUrlConfig:
          allOf:
          - $ref: '#/components/schemas/AwsJobPresignedUrlConfig'
          description: Configuration information for pre-signed URLs. Valid when `protocols`
            contains HTTP.
        targetSelection:
          allOf:
          - $ref: '#/components/schemas/TargetSelection'
          description: Specifies whether the OTA update will continue to run (CONTINUOUS),
            or will be complete after all those things specified as targets have completed
            the OTA update (SNAPSHOT). If continuous, the OTA update may also be run
            on a thing when a change is detected in a target. For example, an OTA
            update will run on a thing when the thing is added to a target group,
            even after the OTA update was completed by all things originally in the
            group.
        otaUpdateFiles:
          allOf:
          - $ref: '#/components/schemas/OTAUpdateFiles'
          description: A list of files associated with the OTA update.
        otaUpdateStatus:
          allOf:
          - $ref: '#/components/schemas/OTAUpdateStatus'
          description: The status of the OTA update.
        awsIotJobId:
          allOf:
          - $ref: '#/components/schemas/AwsIotJobId'
          description: The IoT job ID associated with the OTA update.
        awsIotJobArn:
          allOf:
          - $ref: '#/components/schemas/AwsIotJobArn'
          description: The IoT job ARN associated with the OTA update.
        errorInfo:
          allOf:
          - $ref: '#/components/schemas/ErrorInfo'
          description: Error information associated with the OTA update.
        additionalParameters:
          allOf:
          - $ref: '#/components/schemas/AdditionalParameterMap'
          description: A collection of name/value pairs
      description: Information about an OTA update.
    OTAUpdateStatus:
      type: string
      enum:
      - CREATE_PENDING
      - CREATE_IN_PROGRESS
      - CREATE_COMPLETE
      - CREATE_FAILED
      - DELETE_IN_PROGRESS
      - DELETE_FAILED
    OTAUpdateSummary:
      type: object
      properties:
        otaUpdateId:
          allOf:
          - $ref: '#/components/schemas/OTAUpdateId'
          description: The OTA update ID.
        otaUpdateArn:
          allOf:
          - $ref: '#/components/schemas/OTAUpdateArn'
          description: The OTA update ARN.
        creationDate:
          allOf:
          - $ref: '#/components/schemas/DateType'
          description: The date when the OTA update was created.
      description: An OTA update summary.
    OTAUpdatesSummary:
      type: array
      items:
        $ref: '#/components/schemas/OTAUpdateSummary'
    OpenSearchAction:
      type: object
      properties:
        roleArn:
          allOf:
          - $ref: '#/components/schemas/AwsArn'
          description: The IAM role ARN that has access to OpenSearch.
        endpoint:
          allOf:
          - $ref: '#/components/schemas/ElasticsearchEndpoint'
          description: The endpoint of your OpenSearch domain.
        index:
          allOf:
          - $ref: '#/components/schemas/ElasticsearchIndex'
          description: The OpenSearch index where you want to store your data.
        type:
          allOf:
          - $ref: '#/components/schemas/ElasticsearchType'
          description: The type of document you are storing.
        id:
          allOf:
          - $ref: '#/components/schemas/ElasticsearchId'
          description: The unique identifier for the document you are storing.
      required:
      - roleArn
      - endpoint
      - index
      - type
      - id
      description: Describes an action that writes data to an Amazon OpenSearch Service
        domain.
    Optional:
      type: boolean
      default: false
    OptionalVersion:
      type: integer
      format: int64
    OutgoingCertificate:
      type: object
      properties:
        certificateArn:
          allOf:
          - $ref: '#/components/schemas/CertificateArn'
          description: The certificate ARN.
        certificateId:
          allOf:
          - $ref: '#/components/schemas/CertificateId'
          description: The certificate ID.
        transferredTo:
          allOf:
          - $ref: '#/components/schemas/AwsAccountId'
          description: The Amazon Web Services account to which the transfer was made.
        transferDate:
          allOf:
          - $ref: '#/components/schemas/DateType'
          description: The date the transfer was initiated.
        transferMessage:
          allOf:
          - $ref: '#/components/schemas/Message'
          description: The transfer message.
        creationDate:
          allOf:
          - $ref: '#/components/schemas/DateType'
          description: The certificate creation date.
      description: A certificate that has been transferred but not yet accepted.
    OutgoingCertificates:
      type: array
      items:
        $ref: '#/components/schemas/OutgoingCertificate'
    OverrideDynamicGroups:
      type: boolean
      default: false
    PackageArn:
      type: string
    PackageCatalogMaxResults:
      type: integer
      minimum: 1
      maximum: 100
    PackageName:
      type: string
      pattern: ^[a-zA-Z0-9-_.]+$
      minLength: 1
      maxLength: 128
    PackageSummary:
      type: object
      properties:
        packageName:
          allOf:
          - $ref: '#/components/schemas/PackageName'
          description: The name for the target software package.
        defaultVersionName:
          allOf:
          - $ref: '#/components/schemas/VersionName'
          description: The name of the default package version.
        creationDate:
          allOf:
          - $ref: '#/components/schemas/CreationDate'
          description: The date that the package was created.
        lastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/LastModifiedDate'
          description: The date that the package was last updated.
      description: A summary of information about a software package.
    PackageSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/PackageSummary'
    PackageVersionAction:
      type: string
      enum:
      - PUBLISH
      - DEPRECATE
    PackageVersionArn:
      type: string
      pattern: ^arn:[!-~]+$
      minLength: 1
      maxLength: 1600
    PackageVersionArtifact:
      type: object
      properties:
        s3Location:
          $ref: '#/components/schemas/S3Location'
      description: A specific package version artifact associated with a software
        package version.
    PackageVersionErrorReason:
      type: string
    PackageVersionRecipe:
      type: string
      minLength: 0
      maxLength: 3072
    PackageVersionStatus:
      type: string
      enum:
      - DRAFT
      - PUBLISHED
      - DEPRECATED
    PackageVersionSummary:
      type: object
      properties:
        packageName:
          allOf:
          - $ref: '#/components/schemas/PackageName'
          description: The name of the associated software package.
        versionName:
          allOf:
          - $ref: '#/components/schemas/VersionName'
          description: The name of the target package version.
        status:
          allOf:
          - $ref: '#/components/schemas/PackageVersionStatus'
          description: The status of the package version. For more information, see
            [Package version lifecycle](https://docs.aws.amazon.com/iot/latest/developerguide/preparing-to-use-software-package-catalog.html#package-version-lifecycle).
        creationDate:
          allOf:
          - $ref: '#/components/schemas/CreationDate'
          description: The date that the package version was created.
        lastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/LastModifiedDate'
          description: The date that the package version was last updated.
      description: A summary of information about a package version.
    PackageVersionSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/PackageVersionSummary'
    PageSize:
      type: integer
      minimum: 1
      maximum: 250
    Parameter:
      type: string
      pattern: ^[\s\S]*$
      minLength: 0
      maxLength: 2048
    ParameterKey:
      type: string
      pattern: ^[a-zA-Z0-9_-]+$
      minLength: 1
      maxLength: 128
    ParameterMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/ParameterValue'
    ParameterValue:
      type: string
      pattern: ^[^\p{C}]+$
      minLength: 1
      maxLength: 30720
    Parameters:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Value'
    PartitionKey:
      type: string
    PayloadField:
      type: string
    PayloadFormatIndicator:
      type: string
      minLength: 0
      maxLength: 1024
    PayloadVersion:
      type: string
      pattern: ^[0-9-]+$
      minLength: 10
      maxLength: 32
    Percent:
      type: number
      format: double
      default: 0
      minimum: 0
      maximum: 100
    PercentList:
      type: array
      items:
        $ref: '#/components/schemas/Percent'
    PercentPair:
      type: object
      properties:
        percent:
          allOf:
          - $ref: '#/components/schemas/Percent'
          description: The percentile.
        value:
          allOf:
          - $ref: '#/components/schemas/PercentValue'
          description: The value of the percentile.
      description: Describes the percentile and percentile value.
    PercentValue:
      type: number
      format: double
      default: 0
    Percentage:
      type: integer
      default: 0
      minimum: 0
      maximum: 100
    Percentiles:
      type: array
      items:
        $ref: '#/components/schemas/PercentPair'
    Platform:
      type: string
    Policies:
      type: array
      items:
        $ref: '#/components/schemas/Policy'
    Policy:
      type: object
      properties:
        policyName:
          allOf:
          - $ref: '#/components/schemas/PolicyName'
          description: The policy name.
        policyArn:
          allOf:
          - $ref: '#/components/schemas/PolicyArn'
          description: The policy ARN.
      description: Describes an IoT policy.
    PolicyArn:
      type: string
    PolicyDocument:
      type: string
      pattern: ^[\s\S]*$
      minLength: 0
      maxLength: 404600
    PolicyDocuments:
      type: array
      items:
        $ref: '#/components/schemas/PolicyDocument'
    PolicyName:
      type: string
      pattern: ^[\w+=,.@-]+$
      minLength: 1
      maxLength: 128
    PolicyNames:
      type: array
      items:
        $ref: '#/components/schemas/PolicyName'
    PolicyTarget:
      type: string
    PolicyTargets:
      type: array
      items:
        $ref: '#/components/schemas/PolicyTarget'
    PolicyTemplateName:
      type: string
      enum:
      - BLANK_POLICY
    PolicyVersion:
      type: object
      properties:
        versionId:
          allOf:
          - $ref: '#/components/schemas/PolicyVersionId'
          description: The policy version ID.
        isDefaultVersion:
          allOf:
          - $ref: '#/components/schemas/IsDefaultVersion'
          description: Specifies whether the policy version is the default.
        createDate:
          allOf:
          - $ref: '#/components/schemas/DateType'
          description: The date and time the policy was created.
      description: Describes a policy version.
    PolicyVersionId:
      type: string
      pattern: ^[0-9]+$
    PolicyVersionIdentifier:
      type: object
      properties:
        policyName:
          allOf:
          - $ref: '#/components/schemas/PolicyName'
          description: The name of the policy.
        policyVersionId:
          allOf:
          - $ref: '#/components/schemas/PolicyVersionId'
          description: The ID of the version of the policy associated with the resource.
      description: Information about the version of the policy associated with the
        resource.
    PolicyVersions:
      type: array
      items:
        $ref: '#/components/schemas/PolicyVersion'
    Port:
      type: integer
      minimum: 0
      maximum: 65535
    Ports:
      type: array
      items:
        $ref: '#/components/schemas/Port'
    Prefix:
      type: string
    PresignedUrlConfig:
      type: object
      properties:
        roleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          description: 'The ARN of an IAM role that grants permission to download
            files from the S3 bucket where the job data/updates are stored. The role
            must also grant permission for IoT to download the files.


            For information about addressing the confused deputy problem, see [cross-service
            confused deputy prevention](https://docs.aws.amazon.com/iot/latest/developerguide/cross-service-confused-deputy-prevention.html)
            in the _Amazon Web Services IoT Core developer guide_.'
        expiresInSec:
          allOf:
          - $ref: '#/components/schemas/ExpiresInSec'
          description: How long (in seconds) pre-signed URLs are valid. Valid values
            are 60 - 3600, the default value is 3600 seconds. Pre-signed URLs are
            generated when Jobs receives an MQTT request for the job document.
      description: Configuration for pre-signed S3 URLs.
    PrimitiveBoolean:
      type: boolean
      default: false
    Principal:
      type: string
    PrincipalArn:
      type: string
    PrincipalId:
      type: string
      pattern: ^[a-zA-Z0-9]+$
      minLength: 1
      maxLength: 128
    PrincipalThingObject:
      type: object
      properties:
        thingName:
          allOf:
          - $ref: '#/components/schemas/ThingName'
          description: The name of the thing.
        thingPrincipalType:
          allOf:
          - $ref: '#/components/schemas/ThingPrincipalType'
          description: "The type of the relation you want to specify when you attach\
            \ a principal to a thing. The value defaults to `NON_EXCLUSIVE_THING`.\n\
            \n  * `EXCLUSIVE_THING` \\- Attaches the specified principal to the specified\
            \ thing, exclusively. The thing will be the only thing that’s attached\
            \ to the principal.\n\n  * `NON_EXCLUSIVE_THING` \\- Attaches the specified\
            \ principal to the specified thing. Multiple things can be attached to\
            \ the principal."
      required:
      - thingName
      description: An object that represents the thing and the type of relation it
        has with the principal.
    PrincipalThingObjects:
      type: array
      items:
        $ref: '#/components/schemas/PrincipalThingObject'
    Principals:
      type: array
      items:
        $ref: '#/components/schemas/PrincipalArn'
    PrivateKey:
      type: string
      minLength: 1
    ProcessingTargetName:
      type: string
    ProcessingTargetNameList:
      type: array
      items:
        $ref: '#/components/schemas/ProcessingTargetName'
    PropagatingAttribute:
      type: object
      properties:
        userPropertyKey:
          allOf:
          - $ref: '#/components/schemas/UserPropertyKeyName'
          description: The key of the user property key-value pair.
        thingAttribute:
          allOf:
          - $ref: '#/components/schemas/AttributeName'
          description: The user-defined thing attribute that is propagating for MQTT
            5 message enrichment.
        connectionAttribute:
          allOf:
          - $ref: '#/components/schemas/ConnectionAttributeName'
          description: The attribute associated with the connection between a device
            and Amazon Web Services IoT Core.
      description: An object that represents the connection attribute, thing attribute,
        and the user property key.
    PropagatingAttributeList:
      type: array
      items:
        $ref: '#/components/schemas/PropagatingAttribute'
    Protocol:
      type: string
      enum:
      - MQTT
      - HTTP
    Protocols:
      type: array
      items:
        $ref: '#/components/schemas/Protocol'
    ProvisioningHook:
      type: object
      properties:
        payloadVersion:
          allOf:
          - $ref: '#/components/schemas/PayloadVersion'
          description: 'The payload that was sent to the target function.


            _Note:_ Only Lambda functions are currently supported.'
        targetArn:
          allOf:
          - $ref: '#/components/schemas/TargetArn'
          description: 'The ARN of the target function.


            _Note:_ Only Lambda functions are currently supported.'
      required:
      - targetArn
      description: Structure that contains `payloadVersion` and `targetArn`.
    ProvisioningTemplateListing:
      type: array
      items:
        $ref: '#/components/schemas/ProvisioningTemplateSummary'
    ProvisioningTemplateSummary:
      type: object
      properties:
        templateArn:
          allOf:
          - $ref: '#/components/schemas/TemplateArn'
          description: The ARN of the provisioning template.
        templateName:
          allOf:
          - $ref: '#/components/schemas/TemplateName'
          description: The name of the provisioning template.
        description:
          allOf:
          - $ref: '#/components/schemas/TemplateDescription'
          description: The description of the provisioning template.
        creationDate:
          allOf:
          - $ref: '#/components/schemas/DateType'
          description: The date when the provisioning template summary was created.
        lastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/DateType'
          description: The date when the provisioning template summary was last modified.
        enabled:
          allOf:
          - $ref: '#/components/schemas/Enabled2'
          description: True if the fleet provision template is enabled, otherwise
            false.
        type:
          allOf:
          - $ref: '#/components/schemas/TemplateType'
          description: 'The type you define in a provisioning template. You can create
            a template with only one type. You can''t change the template type after
            its creation. The default value is `FLEET_PROVISIONING`. For more information
            about provisioning template, see: [Provisioning template](https://docs.aws.amazon.com/iot/latest/developerguide/provision-template.html).'
      description: A summary of information about a provisioning template.
    ProvisioningTemplateVersionListing:
      type: array
      items:
        $ref: '#/components/schemas/ProvisioningTemplateVersionSummary'
    ProvisioningTemplateVersionSummary:
      type: object
      properties:
        versionId:
          allOf:
          - $ref: '#/components/schemas/TemplateVersionId'
          description: The ID of the fleet provisioning template version.
        creationDate:
          allOf:
          - $ref: '#/components/schemas/DateType'
          description: The date when the provisioning template version was created
        isDefaultVersion:
          allOf:
          - $ref: '#/components/schemas/IsDefaultVersion'
          description: True if the provisioning template version is the default version,
            otherwise false.
      description: A summary of information about a fleet provision template version.
    PublicKey:
      type: string
      minLength: 1
    PublicKeyMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/KeyValue'
    PublishFindingToSnsParams:
      type: object
      properties:
        topicArn:
          allOf:
          - $ref: '#/components/schemas/SnsTopicArn'
          description: The ARN of the topic to which you want to publish the findings.
      required:
      - topicArn
      description: Parameters to define a mitigation action that publishes findings
        to Amazon SNS. You can implement your own custom actions in response to the
        Amazon SNS messages.
    PutAssetPropertyValueEntry:
      type: object
      properties:
        entryId:
          allOf:
          - $ref: '#/components/schemas/AssetPropertyEntryId'
          description: Optional. A unique identifier for this entry that you can define
            to better track which message caused an error in case of failure. Accepts
            substitution templates. Defaults to a new UUID.
        assetId:
          allOf:
          - $ref: '#/components/schemas/AssetId'
          description: The ID of the IoT SiteWise asset. You must specify either a
            `propertyAlias` or both an `aliasId` and a `propertyId`. Accepts substitution
            templates.
        propertyId:
          allOf:
          - $ref: '#/components/schemas/AssetPropertyId'
          description: The ID of the asset's property. You must specify either a `propertyAlias`
            or both an `aliasId` and a `propertyId`. Accepts substitution templates.
        propertyAlias:
          allOf:
          - $ref: '#/components/schemas/AssetPropertyAlias'
          description: The name of the property alias associated with your asset property.
            You must specify either a `propertyAlias` or both an `aliasId` and a `propertyId`.
            Accepts substitution templates.
        propertyValues:
          allOf:
          - $ref: '#/components/schemas/AssetPropertyValueList'
          description: A list of property values to insert that each contain timestamp,
            quality, and value (TQV) information.
      required:
      - propertyValues
      description: An asset property value entry containing the following information.
    PutAssetPropertyValueEntryList:
      type: array
      items:
        $ref: '#/components/schemas/PutAssetPropertyValueEntry'
    PutItemInput:
      type: object
      properties:
        tableName:
          allOf:
          - $ref: '#/components/schemas/TableName'
          description: The table where the message data will be written.
      required:
      - tableName
      description: The input for the DynamoActionVS action that specifies the DynamoDB
        table to which the message data will be written.
    PutVerificationStateOnViolationRequest:
      type: object
      properties:
        violationId:
          allOf:
          - $ref: '#/components/schemas/ViolationId'
          description: The violation ID.
        verificationState:
          allOf:
          - $ref: '#/components/schemas/VerificationState'
          description: The verification state of the violation.
        verificationStateDescription:
          allOf:
          - $ref: '#/components/schemas/VerificationStateDescription'
          description: The description of the verification state of the violation
            (detect alarm).
      required:
      - violationId
      - verificationState
    PutVerificationStateOnViolationResponse:
      type: object
      properties: {}
    Qos:
      type: integer
      minimum: 0
      maximum: 1
    QueryMaxResults:
      type: integer
      minimum: 1
      maximum: 500
    QueryString:
      type: string
      minLength: 1
    QueryVersion:
      type: string
    QueueUrl:
      type: string
    QueuedThings:
      type: integer
    RangeKeyField:
      type: string
    RangeKeyValue:
      type: string
    RateIncreaseCriteria:
      type: object
      properties:
        numberOfNotifiedThings:
          allOf:
          - $ref: '#/components/schemas/NumberOfThings'
          description: The threshold for number of notified things that will initiate
            the increase in rate of rollout.
        numberOfSucceededThings:
          allOf:
          - $ref: '#/components/schemas/NumberOfThings'
          description: The threshold for number of succeeded things that will initiate
            the increase in rate of rollout.
      description: Allows you to define a criteria to initiate the increase in rate
        of rollout for a job.
    ReasonCode:
      type: string
      pattern: ^[\p{Upper}\p{Digit}_]+$
      minLength: 0
      maxLength: 128
    ReasonForNonCompliance:
      type: string
    ReasonForNonComplianceCode:
      type: string
    ReasonForNonComplianceCodes:
      type: array
      items:
        $ref: '#/components/schemas/ReasonForNonComplianceCode'
    Recursive:
      type: boolean
      default: false
    RecursiveWithoutDefault:
      type: boolean
    Regex:
      type: string
    RegisterCACertificateRequest:
      type: object
      properties:
        caCertificate:
          allOf:
          - $ref: '#/components/schemas/CertificatePem'
          description: The CA certificate.
        verificationCertificate:
          allOf:
          - $ref: '#/components/schemas/CertificatePem'
          description: The private key verification certificate. If `certificateMode`
            is `SNI_ONLY`, the `verificationCertificate` field must be empty. If `certificateMode`
            is `DEFAULT` or not provided, the `verificationCertificate` field must
            not be empty.
        setAsActive:
          allOf:
          - $ref: '#/components/schemas/SetAsActive'
          description: 'A boolean value that specifies if the CA certificate is set
            to active.


            Valid values: `ACTIVE | INACTIVE`'
        allowAutoRegistration:
          allOf:
          - $ref: '#/components/schemas/AllowAutoRegistration'
          description: Allows this CA certificate to be used for auto registration
            of device certificates.
        registrationConfig:
          allOf:
          - $ref: '#/components/schemas/RegistrationConfig'
          description: Information about the registration configuration.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: 'Metadata which can be used to manage the CA certificate.


            For URI Request parameters use format: ...key1=value1&key2;=value2...


            For the CLI command-line parameter use format: &&tags; "key1=value1&key2;=value2..."


            For the cli-input-json file use format: "tags": "key1=value1&key2;=value2..."'
        certificateMode:
          allOf:
          - $ref: '#/components/schemas/CertificateMode'
          description: Describes the certificate mode in which the Certificate Authority
            (CA) will be registered. If the `verificationCertificate` field is not
            provided, set `certificateMode` to be `SNI_ONLY`. If the `verificationCertificate`
            field is provided, set `certificateMode` to be `DEFAULT`. When `certificateMode`
            is not provided, it defaults to `DEFAULT`. All the device certificates
            that are registered using this CA will be registered in the same certificate
            mode as the CA. For more information about certificate mode for device
            certificates, see [ certificate mode](https://docs.aws.amazon.com/iot/latest/apireference/API_CertificateDescription.html#iot-Type-CertificateDescription-certificateMode).
      required:
      - caCertificate
      description: The input to the RegisterCACertificate operation.
    RegisterCACertificateResponse:
      type: object
      properties:
        certificateArn:
          allOf:
          - $ref: '#/components/schemas/CertificateArn'
          description: The CA certificate ARN.
        certificateId:
          allOf:
          - $ref: '#/components/schemas/CertificateId'
          description: The CA certificate identifier.
      description: The output from the RegisterCACertificateResponse operation.
    RegisterCertificateRequest:
      type: object
      properties:
        certificatePem:
          allOf:
          - $ref: '#/components/schemas/CertificatePem'
          description: The certificate data, in PEM format.
        caCertificatePem:
          allOf:
          - $ref: '#/components/schemas/CertificatePem'
          description: The CA certificate used to sign the device certificate being
            registered.
        setAsActive:
          allOf:
          - $ref: '#/components/schemas/SetAsActiveFlag'
          description: 'A boolean value that specifies if the certificate is set to
            active.


            Valid values: `ACTIVE | INACTIVE`'
        status:
          allOf:
          - $ref: '#/components/schemas/CertificateStatus'
          description: The status of the register certificate request. Valid values
            that you can use include `ACTIVE`, `INACTIVE`, and `REVOKED`.
      required:
      - certificatePem
      description: The input to the RegisterCertificate operation.
    RegisterCertificateResponse:
      type: object
      properties:
        certificateArn:
          allOf:
          - $ref: '#/components/schemas/CertificateArn'
          description: The certificate ARN.
        certificateId:
          allOf:
          - $ref: '#/components/schemas/CertificateId'
          description: The certificate identifier.
      description: The output from the RegisterCertificate operation.
    RegisterCertificateWithoutCARequest:
      type: object
      properties:
        certificatePem:
          allOf:
          - $ref: '#/components/schemas/CertificatePem'
          description: The certificate data, in PEM format.
        status:
          allOf:
          - $ref: '#/components/schemas/CertificateStatus'
          description: The status of the register certificate request.
      required:
      - certificatePem
    RegisterCertificateWithoutCAResponse:
      type: object
      properties:
        certificateArn:
          allOf:
          - $ref: '#/components/schemas/CertificateArn'
          description: The Amazon Resource Name (ARN) of the registered certificate.
        certificateId:
          allOf:
          - $ref: '#/components/schemas/CertificateId'
          description: The ID of the registered certificate. (The last part of the
            certificate ARN contains the certificate ID.
    RegisterThingRequest:
      type: object
      properties:
        templateBody:
          allOf:
          - $ref: '#/components/schemas/TemplateBody'
          description: The provisioning template. See [Provisioning Devices That Have
            Device Certificates](https://docs.aws.amazon.com/iot/latest/developerguide/provision-w-cert.html)
            for more information.
        parameters:
          allOf:
          - $ref: '#/components/schemas/Parameters'
          description: The parameters for provisioning a thing. See [Provisioning
            Templates](https://docs.aws.amazon.com/iot/latest/developerguide/provision-template.html)
            for more information.
      required:
      - templateBody
    RegisterThingResponse:
      type: object
      properties:
        certificatePem:
          allOf:
          - $ref: '#/components/schemas/CertificatePem'
          description: The certificate data, in PEM format.
        resourceArns:
          allOf:
          - $ref: '#/components/schemas/ResourceArns'
          description: ARNs for the generated resources.
    RegistrationCode:
      type: string
      pattern: ^(0x)?[a-fA-F0-9]+$
      minLength: 64
      maxLength: 64
    RegistrationCodeValidationException:
      type: object
      properties:
        message:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage2'
          description: Additional information about the exception.
      description: The registration code is invalid.
    RegistrationConfig:
      type: object
      properties:
        templateBody:
          allOf:
          - $ref: '#/components/schemas/TemplateBody'
          description: The template body.
        roleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          description: The ARN of the role.
        templateName:
          allOf:
          - $ref: '#/components/schemas/TemplateName'
          description: The name of the provisioning template.
      description: The registration configuration.
    RegistryMaxResults:
      type: integer
      minimum: 1
      maximum: 250
    RegistryS3BucketName:
      type: string
      pattern: ^[a-zA-Z0-9._-]+$
      minLength: 3
      maxLength: 256
    RegistryS3KeyName:
      type: string
      pattern: ^[a-zA-Z0-9!_.*'()-\/]+$
      minLength: 1
      maxLength: 1024
    RejectCertificateTransferRequest:
      type: object
      properties:
        certificateId:
          allOf:
          - $ref: '#/components/schemas/CertificateId'
          description: The ID of the certificate. (The last part of the certificate
            ARN contains the certificate ID.)
        rejectReason:
          allOf:
          - $ref: '#/components/schemas/Message'
          description: The reason the certificate transfer was rejected.
      required:
      - certificateId
      description: The input for the RejectCertificateTransfer operation.
    RejectedThings:
      type: integer
    RelatedResource:
      type: object
      properties:
        resourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          description: The type of resource.
        resourceIdentifier:
          allOf:
          - $ref: '#/components/schemas/ResourceIdentifier'
          description: Information that identifies the resource.
        additionalInfo:
          allOf:
          - $ref: '#/components/schemas/StringMap'
          description: Other information about the resource.
      description: Information about a related resource.
    RelatedResources:
      type: array
      items:
        $ref: '#/components/schemas/RelatedResource'
    RemoveAuthorizerConfig:
      type: boolean
      default: false
    RemoveAutoRegistration:
      type: boolean
      default: false
    RemoveHook:
      type: boolean
    RemoveThingFromBillingGroupRequest:
      type: object
      properties:
        billingGroupName:
          allOf:
          - $ref: '#/components/schemas/BillingGroupName'
          description: The name of the billing group.
        billingGroupArn:
          allOf:
          - $ref: '#/components/schemas/BillingGroupArn'
          description: The ARN of the billing group.
        thingName:
          allOf:
          - $ref: '#/components/schemas/ThingName'
          description: The name of the thing to be removed from the billing group.
        thingArn:
          allOf:
          - $ref: '#/components/schemas/ThingArn'
          description: The ARN of the thing to be removed from the billing group.
    RemoveThingFromBillingGroupResponse:
      type: object
      properties: {}
    RemoveThingFromThingGroupRequest:
      type: object
      properties:
        thingGroupName:
          allOf:
          - $ref: '#/components/schemas/ThingGroupName'
          description: The group name.
        thingGroupArn:
          allOf:
          - $ref: '#/components/schemas/ThingGroupArn'
          description: The group ARN.
        thingName:
          allOf:
          - $ref: '#/components/schemas/ThingName'
          description: The name of the thing to remove from the group.
        thingArn:
          allOf:
          - $ref: '#/components/schemas/ThingArn'
          description: The ARN of the thing to remove from the group.
    RemoveThingFromThingGroupResponse:
      type: object
      properties: {}
    RemoveThingType:
      type: boolean
      default: false
    RemovedThings:
      type: integer
    ReplaceDefaultPolicyVersionParams:
      type: object
      properties:
        templateName:
          allOf:
          - $ref: '#/components/schemas/PolicyTemplateName'
          description: The name of the template to be applied. The only supported
            value is `BLANK_POLICY`.
      required:
      - templateName
      description: Parameters to define a mitigation action that adds a blank policy
        to restrict permissions.
    ReplaceTopicRuleRequest:
      type: object
      properties:
        ruleName:
          allOf:
          - $ref: '#/components/schemas/RuleName'
          description: The name of the rule.
        topicRulePayload:
          allOf:
          - $ref: '#/components/schemas/TopicRulePayload'
          description: The rule payload.
      required:
      - ruleName
      - topicRulePayload
      description: The input for the ReplaceTopicRule operation.
    ReportType:
      type: string
      enum:
      - ERRORS
      - RESULTS
    RepublishAction:
      type: object
      properties:
        roleArn:
          allOf:
          - $ref: '#/components/schemas/AwsArn'
          description: The ARN of the IAM role that grants access.
        topic:
          allOf:
          - $ref: '#/components/schemas/TopicPattern'
          description: The name of the MQTT topic.
        qos:
          allOf:
          - $ref: '#/components/schemas/Qos'
          description: The Quality of Service (QoS) level to use when republishing
            messages. The default value is 0.
        headers:
          allOf:
          - $ref: '#/components/schemas/MqttHeaders'
          description: MQTT Version 5.0 headers information. For more information,
            see [ MQTT](https://docs.aws.amazon.com/iot/latest/developerguide/mqtt.html)
            from the Amazon Web Services IoT Core Developer Guide.
      required:
      - roleArn
      - topic
      description: Describes an action to republish to another topic.
    ReservedDomainConfigurationName:
      type: string
      pattern: ^[\w.:-]+$
      minLength: 1
      maxLength: 128
    Resource:
      type: string
      pattern: ^[\s\S]*$
      minLength: 0
      maxLength: 2048
    ResourceAlreadyExistsException:
      type: object
      properties:
        message:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage2'
          description: The message for the exception.
        resourceId:
          allOf:
          - $ref: '#/components/schemas/resourceId'
          description: The ID of the resource that caused the exception.
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          description: The ARN of the resource that caused the exception.
      description: The resource already exists.
    ResourceArn:
      type: string
    ResourceArns:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/ResourceArn'
    ResourceAttributeKey:
      type: string
      pattern: ^[a-zA-Z0-9:_-]+$
      minLength: 1
    ResourceAttributeValue:
      type: string
      pattern: ^[^\p{C}]+$
      minLength: 1
    ResourceAttributes:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/ResourceAttributeValue'
    ResourceDescription:
      type: string
      pattern: ^[^\p{C}]+$
      minLength: 0
      maxLength: 1024
    ResourceIdentifier:
      type: object
      properties:
        deviceCertificateId:
          allOf:
          - $ref: '#/components/schemas/CertificateId'
          description: The ID of the certificate attached to the resource.
        caCertificateId:
          allOf:
          - $ref: '#/components/schemas/CertificateId'
          description: The ID of the CA certificate used to authorize the certificate.
        cognitoIdentityPoolId:
          allOf:
          - $ref: '#/components/schemas/CognitoIdentityPoolId'
          description: The ID of the Amazon Cognito identity pool.
        clientId:
          allOf:
          - $ref: '#/components/schemas/ClientId'
          description: The client ID.
        policyVersionIdentifier:
          allOf:
          - $ref: '#/components/schemas/PolicyVersionIdentifier'
          description: The version of the policy associated with the resource.
        account:
          allOf:
          - $ref: '#/components/schemas/AwsAccountId'
          description: The account with which the resource is associated.
        iamRoleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          description: The ARN of the IAM role that has overly permissive actions.
        roleAliasArn:
          allOf:
          - $ref: '#/components/schemas/RoleAliasArn'
          description: The ARN of the role alias that has overly permissive actions.
        issuerCertificateIdentifier:
          allOf:
          - $ref: '#/components/schemas/IssuerCertificateIdentifier'
          description: The issuer certificate identifier.
        deviceCertificateArn:
          allOf:
          - $ref: '#/components/schemas/CertificateArn'
          description: The ARN of the identified device certificate.
      description: Information that identifies the noncompliant resource.
    ResourceLogicalId:
      type: string
    ResourceNotFoundException:
      type: object
      properties:
        message:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage2'
          description: The message for the exception.
      description: The specified resource does not exist.
    ResourceRegistrationFailureException:
      type: object
      properties:
        message:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage2'
          description: The message for the exception.
      description: The resource registration failed.
    ResourceType:
      type: string
      enum:
      - DEVICE_CERTIFICATE
      - CA_CERTIFICATE
      - IOT_POLICY
      - COGNITO_IDENTITY_POOL
      - CLIENT_ID
      - ACCOUNT_SETTINGS
      - ROLE_ALIAS
      - IAM_ROLE
      - ISSUER_CERTIFICATE
    Resources:
      type: array
      items:
        $ref: '#/components/schemas/Resource'
    ResponseTopic:
      type: string
      minLength: 0
      maxLength: 1024
    RetryAttempt:
      type: integer
    RetryCriteria:
      type: object
      properties:
        failureType:
          allOf:
          - $ref: '#/components/schemas/RetryableFailureType'
          description: The type of job execution failures that can initiate a job
            retry.
        numberOfRetries:
          allOf:
          - $ref: '#/components/schemas/NumberOfRetries'
          description: The number of retries allowed for a failure type for the job.
      required:
      - failureType
      - numberOfRetries
      description: The criteria that determines how many retries are allowed for each
        failure type for a job.
    RetryCriteriaList:
      type: array
      items:
        $ref: '#/components/schemas/RetryCriteria'
    RetryableFailureType:
      type: string
      enum:
      - FAILED
      - TIMED_OUT
      - ALL
    RoleAlias:
      type: string
      pattern: ^[\w=,@-]+$
      minLength: 1
      maxLength: 128
    RoleAliasArn:
      type: string
      minLength: 1
      maxLength: 2048
    RoleAliasDescription:
      type: object
      properties:
        roleAlias:
          allOf:
          - $ref: '#/components/schemas/RoleAlias'
          description: The role alias.
        roleAliasArn:
          allOf:
          - $ref: '#/components/schemas/RoleAliasArn'
          description: The ARN of the role alias.
        roleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          description: The role ARN.
        owner:
          allOf:
          - $ref: '#/components/schemas/AwsAccountId'
          description: The role alias owner.
        credentialDurationSeconds:
          allOf:
          - $ref: '#/components/schemas/CredentialDurationSeconds'
          description: The number of seconds for which the credential is valid.
        creationDate:
          allOf:
          - $ref: '#/components/schemas/DateType'
          description: The UNIX timestamp of when the role alias was created.
        lastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/DateType'
          description: The UNIX timestamp of when the role alias was last modified.
      description: Role alias description.
    RoleAliases:
      type: array
      items:
        $ref: '#/components/schemas/RoleAlias'
    RoleArn:
      type: string
      minLength: 20
      maxLength: 2048
    RolloutRatePerMinute:
      type: integer
      minimum: 1
      maximum: 1000
    RuleArn:
      type: string
    RuleName:
      type: string
      pattern: ^[a-zA-Z0-9_]+$
      minLength: 1
      maxLength: 128
    S3Action:
      type: object
      properties:
        roleArn:
          allOf:
          - $ref: '#/components/schemas/AwsArn'
          description: The ARN of the IAM role that grants access.
        bucketName:
          allOf:
          - $ref: '#/components/schemas/BucketName'
          description: The Amazon S3 bucket.
        key:
          allOf:
          - $ref: '#/components/schemas/Key'
          description: The object key. For more information, see [Actions, resources,
            and condition keys for Amazon S3](https://docs.aws.amazon.com/AmazonS3/latest/dev/list_amazons3.html).
        cannedAcl:
          allOf:
          - $ref: '#/components/schemas/CannedAccessControlList'
          description: The Amazon S3 canned ACL that controls access to the object
            identified by the object key. For more information, see [S3 canned ACLs](https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl).
      required:
      - roleArn
      - bucketName
      - key
      description: Describes an action to write data to an Amazon S3 bucket.
    S3Bucket:
      type: string
      minLength: 1
    S3Destination:
      type: object
      properties:
        bucket:
          allOf:
          - $ref: '#/components/schemas/S3Bucket'
          description: The S3 bucket that contains the updated firmware.
        prefix:
          allOf:
          - $ref: '#/components/schemas/Prefix'
          description: The S3 prefix.
      description: Describes the location of updated firmware in S3.
    S3FileUrl:
      type: string
      minLength: 0
      maxLength: 65535
    S3FileUrlList:
      type: array
      items:
        $ref: '#/components/schemas/S3FileUrl'
    S3Key:
      type: string
      minLength: 1
    S3Location:
      type: object
      properties:
        bucket:
          allOf:
          - $ref: '#/components/schemas/S3Bucket'
          description: The S3 bucket.
        key:
          allOf:
          - $ref: '#/components/schemas/S3Key'
          description: The S3 key.
        version:
          allOf:
          - $ref: '#/components/schemas/S3Version'
          description: The S3 bucket version.
      description: The S3 location.
    S3Version:
      type: string
    SQL:
      type: string
    SalesforceAction:
      type: object
      properties:
        token:
          allOf:
          - $ref: '#/components/schemas/SalesforceToken'
          description: The token used to authenticate access to the Salesforce IoT
            Cloud Input Stream. The token is available from the Salesforce IoT Cloud
            platform after creation of the Input Stream.
        url:
          allOf:
          - $ref: '#/components/schemas/SalesforceEndpoint'
          description: The URL exposed by the Salesforce IoT Cloud Input Stream. The
            URL is available from the Salesforce IoT Cloud platform after creation
            of the Input Stream.
      required:
      - token
      - url
      description: Describes an action to write a message to a Salesforce IoT Cloud
        Input Stream.
    SalesforceEndpoint:
      type: string
      pattern: ^https://ingestion-[a-zA-Z0-9]{1,12}\.[a-zA-Z0-9]+\.((sfdc-matrix\.net)|(sfdcnow\.com))/streams/\w{1,20}/\w{1,20}/event$
      minLength: 0
      maxLength: 2000
    SalesforceToken:
      type: string
      minLength: 40
    Sbom:
      type: object
      properties:
        s3Location:
          $ref: '#/components/schemas/S3Location'
      description: A specific software bill of matrerials associated with a software
        package version.
    SbomValidationErrorCode:
      type: string
      enum:
      - INCOMPATIBLE_FORMAT
      - FILE_SIZE_LIMIT_EXCEEDED
    SbomValidationErrorMessage:
      type: string
    SbomValidationResult:
      type: string
      enum:
      - FAILED
      - SUCCEEDED
    SbomValidationResultSummary:
      type: object
      properties:
        fileName:
          allOf:
          - $ref: '#/components/schemas/FileName'
          description: The name of the SBOM file.
        validationResult:
          allOf:
          - $ref: '#/components/schemas/SbomValidationResult'
          description: The end result of the SBOM validation.
        errorCode:
          allOf:
          - $ref: '#/components/schemas/SbomValidationErrorCode'
          description: The `errorCode` representing the validation failure error if
            the SBOM validation failed.
        errorMessage:
          allOf:
          - $ref: '#/components/schemas/SbomValidationErrorMessage'
          description: The `errorMessage` representing the validation failure error
            if the SBOM validation failed.
      description: A summary of the validation results for a specific software bill
        of materials (SBOM) attached to a software package version.
    SbomValidationResultSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/SbomValidationResultSummary'
    SbomValidationStatus:
      type: string
      enum:
      - IN_PROGRESS
      - FAILED
      - SUCCEEDED
    ScheduledAuditArn:
      type: string
    ScheduledAuditMetadata:
      type: object
      properties:
        scheduledAuditName:
          allOf:
          - $ref: '#/components/schemas/ScheduledAuditName'
          description: The name of the scheduled audit.
        scheduledAuditArn:
          allOf:
          - $ref: '#/components/schemas/ScheduledAuditArn'
          description: The ARN of the scheduled audit.
        frequency:
          allOf:
          - $ref: '#/components/schemas/AuditFrequency'
          description: How often the scheduled audit occurs.
        dayOfMonth:
          allOf:
          - $ref: '#/components/schemas/DayOfMonth'
          description: The day of the month on which the scheduled audit is run (if
            the `frequency` is "MONTHLY"). If days 29-31 are specified, and the month
            does not have that many days, the audit takes place on the "LAST" day
            of the month.
        dayOfWeek:
          allOf:
          - $ref: '#/components/schemas/DayOfWeek'
          description: The day of the week on which the scheduled audit is run (if
            the `frequency` is "WEEKLY" or "BIWEEKLY").
      description: Information about the scheduled audit.
    ScheduledAuditMetadataList:
      type: array
      items:
        $ref: '#/components/schemas/ScheduledAuditMetadata'
    ScheduledAuditName:
      type: string
      pattern: ^[a-zA-Z0-9_-]+$
      minLength: 1
      maxLength: 128
    ScheduledJobRollout:
      type: object
      properties:
        startTime:
          allOf:
          - $ref: '#/components/schemas/StringDateTime'
          description: Displays the start times of the next seven maintenance window
            occurrences.
      description: Displays the next seven maintenance window occurrences and their
        start times.
    ScheduledJobRolloutList:
      type: array
      items:
        $ref: '#/components/schemas/ScheduledJobRollout'
    SchedulingConfig:
      type: object
      properties:
        startTime:
          allOf:
          - $ref: '#/components/schemas/StringDateTime'
          description: 'The time a job will begin rollout of the job document to all
            devices in the target group for a job. The `startTime` can be scheduled
            up to a year in advance and must be scheduled a minimum of thirty minutes
            from the current time. The date and time format for the `startTime` is
            YYYY-MM-DD for the date and HH:MM for the time.


            For more information on the syntax for `startTime` when using an API command
            or the Command Line Interface, see [Timestamp](https://docs.aws.amazon.com/cli/latest/userguide/cli-usage-parameters-types.html#parameter-type-timestamp).'
        endTime:
          allOf:
          - $ref: '#/components/schemas/StringDateTime'
          description: 'The time a job will stop rollout of the job document to all
            devices in the target group for a job. The `endTime` must take place no
            later than two years from the current time and be scheduled a minimum
            of thirty minutes from the current time. The minimum duration between
            `startTime` and `endTime` is thirty minutes. The maximum duration between
            `startTime` and `endTime` is two years. The date and time format for the
            `endTime` is YYYY-MM-DD for the date and HH:MM for the time.


            For more information on the syntax for `endTime` when using an API command
            or the Command Line Interface, see [Timestamp](https://docs.aws.amazon.com/cli/latest/userguide/cli-usage-parameters-types.html#parameter-type-timestamp).'
        endBehavior:
          allOf:
          - $ref: '#/components/schemas/JobEndBehavior'
          description: Specifies the end behavior for all job executions after a job
            reaches the selected `endTime`. If `endTime` is not selected when creating
            the job, then `endBehavior` does not apply.
        maintenanceWindows:
          allOf:
          - $ref: '#/components/schemas/MaintenanceWindows'
          description: An optional configuration within the `SchedulingConfig` to
            setup a recurring maintenance window with a predetermined start time and
            duration for the rollout of a job document to all devices in a target
            group for a job.
      description: Specifies the date and time that a job will begin the rollout of
        the job document to all devices in the target group. Additionally, you can
        specify the end behavior for each job execution when it reaches the scheduled
        end time.
    SearchIndexRequest:
      type: object
      properties:
        indexName:
          allOf:
          - $ref: '#/components/schemas/IndexName'
          description: The search index name.
        queryString:
          allOf:
          - $ref: '#/components/schemas/QueryString'
          description: The search query string. For more information about the search
            query syntax, see [Query syntax](https://docs.aws.amazon.com/iot/latest/developerguide/query-syntax.html).
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token used to get the next set of results, or `null` if
            there are no additional results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/SearchQueryMaxResults'
          description: The maximum number of results to return per page at one time.
            This maximum number cannot exceed 100. The response might contain fewer
            results but will never contain more. You can use [ `nextToken` ](https://docs.aws.amazon.com/iot/latest/apireference/API_SearchIndex.html#iot-SearchIndex-request-nextToken)
            to retrieve the next set of results until `nextToken` returns `NULL`.
        queryVersion:
          allOf:
          - $ref: '#/components/schemas/QueryVersion'
          description: The query version.
      required:
      - queryString
    SearchIndexResponse:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token used to get the next set of results, or `null` if
            there are no additional results.
        things:
          allOf:
          - $ref: '#/components/schemas/ThingDocumentList'
          description: The things that match the search query.
        thingGroups:
          allOf:
          - $ref: '#/components/schemas/ThingGroupDocumentList'
          description: The thing groups that match the search query.
    SearchQueryMaxResults:
      type: integer
      minimum: 1
    SearchableAttributes:
      type: array
      items:
        $ref: '#/components/schemas/AttributeName'
    Seconds:
      type: integer
    SecurityGroupId:
      type: string
    SecurityGroupList:
      type: array
      items:
        $ref: '#/components/schemas/SecurityGroupId'
    SecurityPolicy:
      type: string
      pattern: ^[\s\S]*$
      minLength: 0
      maxLength: 128
    SecurityProfileArn:
      type: string
    SecurityProfileDescription:
      type: string
      pattern: ^[\p{Graph}\x20]*$
      minLength: 0
      maxLength: 1000
    SecurityProfileIdentifier:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/SecurityProfileName'
          description: The name you've given to the security profile.
        arn:
          allOf:
          - $ref: '#/components/schemas/SecurityProfileArn'
          description: The ARN of the security profile.
      required:
      - name
      - arn
      description: Identifying information for a Device Defender security profile.
    SecurityProfileIdentifiers:
      type: array
      items:
        $ref: '#/components/schemas/SecurityProfileIdentifier'
    SecurityProfileName:
      type: string
      pattern: ^[a-zA-Z0-9:_-]+$
      minLength: 1
      maxLength: 128
    SecurityProfileTarget:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/SecurityProfileTargetArn'
          description: The ARN of the security profile.
      required:
      - arn
      description: A target to which an alert is sent when a security profile behavior
        is violated.
    SecurityProfileTargetArn:
      type: string
    SecurityProfileTargetMapping:
      type: object
      properties:
        securityProfileIdentifier:
          allOf:
          - $ref: '#/components/schemas/SecurityProfileIdentifier'
          description: Information that identifies the security profile.
        target:
          allOf:
          - $ref: '#/components/schemas/SecurityProfileTarget'
          description: Information about the target (thing group) associated with
            the security profile.
      description: Information about a security profile and the target associated
        with it.
    SecurityProfileTargetMappings:
      type: array
      items:
        $ref: '#/components/schemas/SecurityProfileTargetMapping'
    SecurityProfileTargets:
      type: array
      items:
        $ref: '#/components/schemas/SecurityProfileTarget'
    ServerCertificateArns:
      type: array
      items:
        $ref: '#/components/schemas/AcmCertificateArn'
    ServerCertificateConfig:
      type: object
      properties:
        enableOCSPCheck:
          allOf:
          - $ref: '#/components/schemas/EnableOCSPCheck'
          description: 'A Boolean value that indicates whether Online Certificate
            Status Protocol (OCSP) server certificate check is enabled or not.


            For more information, see [ Server certificate configuration for OCSP
            stapling](https://docs.aws.amazon.com/iot/latest/developerguide/iot-custom-endpoints-cert-config.html)
            from Amazon Web Services IoT Core Developer Guide.'
        ocspLambdaArn:
          allOf:
          - $ref: '#/components/schemas/OCSPLambdaArn'
          description: The Amazon Resource Name (ARN) for a Lambda function that acts
            as a Request for Comments (RFC) 6960-compliant Online Certificate Status
            Protocol (OCSP) responder, supporting basic OCSP responses. The Lambda
            function accepts a base64-encoding of the OCSP request in the Distinguished
            Encoding Rules (DER) format. The Lambda function's response is also a
            base64-encoded OCSP response in the DER format. The response size must
            not exceed 4 kilobytes (KiB). The Lambda function must be in the same
            Amazon Web Services account and region as the domain configuration. For
            more information, see [Configuring server certificate OCSP for private
            endpoints in Amazon Web Services IoT Core](https://docs.aws.amazon.com/iot/latest/developerguide/iot-custom-endpoints-cert-config.html#iot-custom-endpoints-cert-config-ocsp-private-endpoint.html)
            from the Amazon Web Services IoT Core developer guide.
        ocspAuthorizedResponderArn:
          allOf:
          - $ref: '#/components/schemas/AcmCertificateArn'
          description: The Amazon Resource Name (ARN) for an X.509 certificate stored
            in Amazon Web Services Certificate Manager (ACM). If provided, Amazon
            Web Services IoT Core will use this certificate to validate the signature
            of the received OCSP response. The OCSP responder must sign responses
            using either this authorized responder certificate or the issuing certificate,
            depending on whether the ARN is provided or not. The certificate must
            be in the same Amazon Web Services account and region as the domain configuration.
      description: The server certificate configuration.
    ServerCertificateStatus:
      type: string
      enum:
      - INVALID
      - VALID
    ServerCertificateStatusDetail:
      type: string
    ServerCertificateSummary:
      type: object
      properties:
        serverCertificateArn:
          allOf:
          - $ref: '#/components/schemas/AcmCertificateArn'
          description: The ARN of the server certificate.
        serverCertificateStatus:
          allOf:
          - $ref: '#/components/schemas/ServerCertificateStatus'
          description: The status of the server certificate.
        serverCertificateStatusDetail:
          allOf:
          - $ref: '#/components/schemas/ServerCertificateStatusDetail'
          description: Details that explain the status of the server certificate.
      description: An object that contains information about a server certificate.
    ServerCertificates:
      type: array
      items:
        $ref: '#/components/schemas/ServerCertificateSummary'
    ServerName:
      type: string
      pattern: ^[\s\S]*$
      minLength: 1
      maxLength: 253
    ServiceName:
      type: string
    ServiceQuotaExceededException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage2'
      description: Service quota has been exceeded.
    ServiceType:
      type: string
      enum:
      - DATA
      - CREDENTIAL_PROVIDER
      - JOBS
    ServiceUnavailableException:
      type: object
      properties:
        message:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage2'
          description: The message for the exception.
      description: The service is temporarily unavailable.
    SetAsActive:
      type: boolean
      default: false
    SetAsActiveFlag:
      type: boolean
    SetAsDefault:
      type: boolean
      default: false
    SetDefaultAuthorizerRequest:
      type: object
      properties:
        authorizerName:
          allOf:
          - $ref: '#/components/schemas/AuthorizerName'
          description: The authorizer name.
      required:
      - authorizerName
    SetDefaultAuthorizerResponse:
      type: object
      properties:
        authorizerName:
          allOf:
          - $ref: '#/components/schemas/AuthorizerName'
          description: The authorizer name.
        authorizerArn:
          allOf:
          - $ref: '#/components/schemas/AuthorizerArn'
          description: The authorizer ARN.
    SetDefaultPolicyVersionRequest:
      type: object
      properties:
        policyName:
          allOf:
          - $ref: '#/components/schemas/PolicyName'
          description: The policy name.
        policyVersionId:
          allOf:
          - $ref: '#/components/schemas/PolicyVersionId'
          description: The policy version ID.
      required:
      - policyName
      - policyVersionId
      description: The input for the SetDefaultPolicyVersion operation.
    SetLoggingOptionsRequest:
      type: object
      properties:
        loggingOptionsPayload:
          allOf:
          - $ref: '#/components/schemas/LoggingOptionsPayload'
          description: The logging options payload.
      required:
      - loggingOptionsPayload
      description: The input for the SetLoggingOptions operation.
    SetV2LoggingLevelRequest:
      type: object
      properties:
        logTarget:
          allOf:
          - $ref: '#/components/schemas/LogTarget'
          description: The log target.
        logLevel:
          allOf:
          - $ref: '#/components/schemas/LogLevel'
          description: The log level.
      required:
      - logTarget
      - logLevel
    SetV2LoggingOptionsRequest:
      type: object
      properties:
        roleArn:
          allOf:
          - $ref: '#/components/schemas/AwsArn'
          description: The ARN of the role that allows IoT to write to Cloudwatch
            logs.
        defaultLogLevel:
          allOf:
          - $ref: '#/components/schemas/LogLevel'
          description: The default logging level.
        disableAllLogs:
          allOf:
          - $ref: '#/components/schemas/DisableAllLogs'
          description: If true all logs are disabled. The default is false.
    ShadowName:
      type: string
      pattern: ^[$a-zA-Z0-9:_-]+$
      minLength: 1
      maxLength: 64
    SigV4Authorization:
      type: object
      properties:
        signingRegion:
          allOf:
          - $ref: '#/components/schemas/SigningRegion'
          description: The signing region.
        serviceName:
          allOf:
          - $ref: '#/components/schemas/ServiceName'
          description: The service name to use while signing with Sig V4.
        roleArn:
          allOf:
          - $ref: '#/components/schemas/AwsArn'
          description: The ARN of the signing role.
      required:
      - signingRegion
      - serviceName
      - roleArn
      description: For more information, see [Signature Version 4 signing process](https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html).
    Signature:
      type: string
      format: byte
    SignatureAlgorithm:
      type: string
    SigningJobId:
      type: string
    SigningProfileName:
      type: string
    SigningProfileParameter:
      type: object
      properties:
        certificateArn:
          allOf:
          - $ref: '#/components/schemas/CertificateArn'
          description: Certificate ARN.
        platform:
          allOf:
          - $ref: '#/components/schemas/Platform'
          description: The hardware platform of your device.
        certificatePathOnDevice:
          allOf:
          - $ref: '#/components/schemas/CertificatePathOnDevice'
          description: The location of the code-signing certificate on your device.
      description: Describes the code-signing profile.
    SigningRegion:
      type: string
    SkippedFindingsCount:
      type: integer
      format: int64
    SkyfallMaxResults:
      type: integer
      minimum: 1
      maximum: 250
    SnsAction:
      type: object
      properties:
        targetArn:
          allOf:
          - $ref: '#/components/schemas/AwsArn'
          description: The ARN of the SNS topic.
        roleArn:
          allOf:
          - $ref: '#/components/schemas/AwsArn'
          description: The ARN of the IAM role that grants access.
        messageFormat:
          allOf:
          - $ref: '#/components/schemas/MessageFormat'
          description: (Optional) The message format of the message to publish. Accepted
            values are "JSON" and "RAW". The default value of the attribute is "RAW".
            SNS uses this setting to determine if the payload should be parsed and
            relevant platform-specific bits of the payload should be extracted. To
            read more about SNS message formats, see <https://docs.aws.amazon.com/sns/latest/dg/json-formats.html>
            refer to their official documentation.
      required:
      - targetArn
      - roleArn
      description: Describes an action to publish to an Amazon SNS topic.
    SnsTopicArn:
      type: string
      minLength: 0
      maxLength: 350
    SortOrder:
      type: string
      enum:
      - ASCENDING
      - DESCENDING
    SqlParseException:
      type: object
      properties:
        message:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage2'
          description: The message for the exception.
      description: The Rule-SQL expression can't be parsed correctly.
    SqsAction:
      type: object
      properties:
        roleArn:
          allOf:
          - $ref: '#/components/schemas/AwsArn'
          description: The ARN of the IAM role that grants access.
        queueUrl:
          allOf:
          - $ref: '#/components/schemas/QueueUrl'
          description: The URL of the Amazon SQS queue.
        useBase64:
          allOf:
          - $ref: '#/components/schemas/UseBase64'
          description: Specifies whether to use Base64 encoding.
      required:
      - roleArn
      - queueUrl
      description: Describes an action to publish data to an Amazon SQS queue.
    StartAuditMitigationActionsTaskRequest:
      type: object
      properties:
        taskId:
          allOf:
          - $ref: '#/components/schemas/MitigationActionsTaskId'
          description: A unique identifier for the task. You can use this identifier
            to check the status of the task or to cancel it.
        target:
          allOf:
          - $ref: '#/components/schemas/AuditMitigationActionsTaskTarget'
          description: Specifies the audit findings to which the mitigation actions
            are applied. You can apply them to a type of audit check, to all findings
            from an audit, or to a specific set of findings.
        auditCheckToActionsMapping:
          allOf:
          - $ref: '#/components/schemas/AuditCheckToActionsMapping'
          description: For an audit check, specifies which mitigation actions to apply.
            Those actions must be defined in your Amazon Web Services accounts.
        clientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          description: Each audit mitigation task must have a unique client request
            token. If you try to start a new task with the same token as a task that
            already exists, an exception occurs. If you omit this value, a unique
            client request token is generated automatically.
      required:
      - taskId
      - target
      - auditCheckToActionsMapping
      - clientRequestToken
    StartAuditMitigationActionsTaskResponse:
      type: object
      properties:
        taskId:
          allOf:
          - $ref: '#/components/schemas/MitigationActionsTaskId'
          description: The unique identifier for the audit mitigation task. This matches
            the `taskId` that you specified in the request.
    StartDetectMitigationActionsTaskRequest:
      type: object
      properties:
        taskId:
          allOf:
          - $ref: '#/components/schemas/MitigationActionsTaskId'
          description: The unique identifier of the task.
        target:
          allOf:
          - $ref: '#/components/schemas/DetectMitigationActionsTaskTarget'
          description: Specifies the ML Detect findings to which the mitigation actions
            are applied.
        actions:
          allOf:
          - $ref: '#/components/schemas/DetectMitigationActionsToExecuteList'
          description: The actions to be performed when a device has unexpected behavior.
        violationEventOccurrenceRange:
          allOf:
          - $ref: '#/components/schemas/ViolationEventOccurrenceRange'
          description: Specifies the time period of which violation events occurred
            between.
        includeOnlyActiveViolations:
          allOf:
          - $ref: '#/components/schemas/NullableBoolean'
          description: Specifies to list only active violations.
        includeSuppressedAlerts:
          allOf:
          - $ref: '#/components/schemas/NullableBoolean'
          description: Specifies to include suppressed alerts.
        clientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          description: Each mitigation action task must have a unique client request
            token. If you try to create a new task with the same token as a task that
            already exists, an exception occurs. If you omit this value, Amazon Web
            Services SDKs will automatically generate a unique client request.
      required:
      - taskId
      - target
      - actions
      - clientRequestToken
    StartDetectMitigationActionsTaskResponse:
      type: object
      properties:
        taskId:
          allOf:
          - $ref: '#/components/schemas/MitigationActionsTaskId'
          description: The unique identifier of the task.
    StartOnDemandAuditTaskRequest:
      type: object
      properties:
        targetCheckNames:
          allOf:
          - $ref: '#/components/schemas/TargetAuditCheckNames'
          description: Which checks are performed during the audit. The checks you
            specify must be enabled for your account or an exception occurs. Use `DescribeAccountAuditConfiguration`
            to see the list of all checks, including those that are enabled or `UpdateAccountAuditConfiguration`
            to select which checks are enabled.
      required:
      - targetCheckNames
    StartOnDemandAuditTaskResponse:
      type: object
      properties:
        taskId:
          allOf:
          - $ref: '#/components/schemas/AuditTaskId'
          description: The ID of the on-demand audit you started.
    StartSigningJobParameter:
      type: object
      properties:
        signingProfileParameter:
          allOf:
          - $ref: '#/components/schemas/SigningProfileParameter'
          description: Describes the code-signing profile.
        signingProfileName:
          allOf:
          - $ref: '#/components/schemas/SigningProfileName'
          description: The code-signing profile name.
        destination:
          allOf:
          - $ref: '#/components/schemas/Destination'
          description: The location to write the code-signed file.
      description: Information required to start a signing job.
    StartThingRegistrationTaskRequest:
      type: object
      properties:
        templateBody:
          allOf:
          - $ref: '#/components/schemas/TemplateBody'
          description: The provisioning template.
        inputFileBucket:
          allOf:
          - $ref: '#/components/schemas/RegistryS3BucketName'
          description: The S3 bucket that contains the input file.
        inputFileKey:
          allOf:
          - $ref: '#/components/schemas/RegistryS3KeyName'
          description: The name of input file within the S3 bucket. This file contains
            a newline delimited JSON file. Each line contains the parameter values
            to provision one device (thing).
        roleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          description: The IAM role ARN that grants permission the input file.
      required:
      - templateBody
      - inputFileBucket
      - inputFileKey
      - roleArn
    StartThingRegistrationTaskResponse:
      type: object
      properties:
        taskId:
          allOf:
          - $ref: '#/components/schemas/TaskId'
          description: The bulk thing provisioning task ID.
    StateMachineName:
      type: string
    StateReason:
      type: string
    StateValue:
      type: string
    StatisticalThreshold:
      type: object
      properties:
        statistic:
          allOf:
          - $ref: '#/components/schemas/EvaluationStatistic'
          description: The percentile that resolves to a threshold value by which
            compliance with a behavior is determined. Metrics are collected over the
            specified period (`durationSeconds`) from all reporting devices in your
            account and statistical ranks are calculated. Then, the measurements from
            a device are collected over the same period. If the accumulated measurements
            from the device fall above or below (`comparisonOperator`) the value associated
            with the percentile specified, then the device is considered to be in
            compliance with the behavior, otherwise a violation occurs.
      description: A statistical ranking (percentile) that indicates a threshold value
        by which a behavior is determined to be in compliance or in violation of the
        behavior.
    Statistics:
      type: object
      properties:
        count:
          allOf:
          - $ref: '#/components/schemas/Count'
          description: The count of things that match the query string criteria and
            contain a valid aggregation field value.
        average:
          allOf:
          - $ref: '#/components/schemas/Average'
          description: The average of the aggregated field values.
        sum:
          allOf:
          - $ref: '#/components/schemas/Sum'
          description: The sum of the aggregated field values.
        minimum:
          allOf:
          - $ref: '#/components/schemas/Minimum'
          description: The minimum aggregated field value.
        maximum:
          allOf:
          - $ref: '#/components/schemas/Maximum'
          description: The maximum aggregated field value.
        sumOfSquares:
          allOf:
          - $ref: '#/components/schemas/SumOfSquares'
          description: The sum of the squares of the aggregated field values.
        variance:
          allOf:
          - $ref: '#/components/schemas/Variance'
          description: The variance of the aggregated field values.
        stdDeviation:
          allOf:
          - $ref: '#/components/schemas/StdDeviation'
          description: The standard deviation of the aggregated field values.
      description: A map of key-value pairs for all supported statistics. For issues
        with missing or unexpected values for this API, consult [ Fleet indexing troubleshooting
        guide](https://docs.aws.amazon.com/iot/latest/developerguide/fleet-indexing-troubleshooting.html).
    Status:
      type: string
      enum:
      - InProgress
      - Completed
      - Failed
      - Cancelled
      - Cancelling
    StatusCode:
      type: integer
      default: 0
    StatusReason:
      type: object
      properties:
        reasonCode:
          allOf:
          - $ref: '#/components/schemas/StatusReasonCode'
          description: A code that provides additional context for the command execution
            status.
        reasonDescription:
          allOf:
          - $ref: '#/components/schemas/StatusReasonDescription'
          description: A literal string for devices to optionally provide additional
            information about the reason code for a command execution status.
      required:
      - reasonCode
      description: Provide additional context about the status of a command execution
        using a reason code and description.
    StatusReasonCode:
      type: string
      pattern: ^[A-Z0-9_-]+$
      minLength: 0
      maxLength: 64
    StatusReasonDescription:
      type: string
      pattern: ^[^\p{C}]*$
      minLength: 0
      maxLength: 1024
    StdDeviation:
      type: number
      format: double
      default: 0
    StepFunctionsAction:
      type: object
      properties:
        executionNamePrefix:
          allOf:
          - $ref: '#/components/schemas/ExecutionNamePrefix'
          description: (Optional) A name will be given to the state machine execution
            consisting of this prefix followed by a UUID. Step Functions automatically
            creates a unique name for each state machine execution if one is not provided.
        stateMachineName:
          allOf:
          - $ref: '#/components/schemas/StateMachineName'
          description: The name of the Step Functions state machine whose execution
            will be started.
        roleArn:
          allOf:
          - $ref: '#/components/schemas/AwsArn'
          description: The ARN of the role that grants IoT permission to start execution
            of a state machine ("Action":"states:StartExecution").
      required:
      - stateMachineName
      - roleArn
      description: Starts execution of a Step Functions state machine.
    StopThingRegistrationTaskRequest:
      type: object
      properties:
        taskId:
          allOf:
          - $ref: '#/components/schemas/TaskId'
          description: The bulk thing provisioning task ID.
      required:
      - taskId
    StopThingRegistrationTaskResponse:
      type: object
      properties: {}
    Stream:
      type: object
      properties:
        streamId:
          allOf:
          - $ref: '#/components/schemas/StreamId'
          description: The stream ID.
        fileId:
          allOf:
          - $ref: '#/components/schemas/FileId'
          description: The ID of a file associated with a stream.
      description: Describes a group of files that can be streamed.
    StreamArn:
      type: string
    StreamDescription:
      type: string
      pattern: ^[^\p{C}]+$
      minLength: 0
      maxLength: 2028
    StreamFile:
      type: object
      properties:
        fileId:
          allOf:
          - $ref: '#/components/schemas/FileId'
          description: The file ID.
        s3Location:
          allOf:
          - $ref: '#/components/schemas/S3Location'
          description: The location of the file in S3.
      description: Represents a file to stream.
    StreamFiles:
      type: array
      items:
        $ref: '#/components/schemas/StreamFile'
    StreamId:
      type: string
      pattern: ^[a-zA-Z0-9_-]+$
      minLength: 1
      maxLength: 128
    StreamInfo:
      type: object
      properties:
        streamId:
          allOf:
          - $ref: '#/components/schemas/StreamId'
          description: The stream ID.
        streamArn:
          allOf:
          - $ref: '#/components/schemas/StreamArn'
          description: The stream ARN.
        streamVersion:
          allOf:
          - $ref: '#/components/schemas/StreamVersion'
          description: The stream version.
        description:
          allOf:
          - $ref: '#/components/schemas/StreamDescription'
          description: The description of the stream.
        files:
          allOf:
          - $ref: '#/components/schemas/StreamFiles'
          description: The files to stream.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/DateType'
          description: The date when the stream was created.
        lastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/DateType'
          description: The date when the stream was last updated.
        roleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          description: An IAM role IoT assumes to access your S3 files.
      description: Information about a stream.
    StreamName:
      type: string
    StreamSummary:
      type: object
      properties:
        streamId:
          allOf:
          - $ref: '#/components/schemas/StreamId'
          description: The stream ID.
        streamArn:
          allOf:
          - $ref: '#/components/schemas/StreamArn'
          description: The stream ARN.
        streamVersion:
          allOf:
          - $ref: '#/components/schemas/StreamVersion'
          description: The stream version.
        description:
          allOf:
          - $ref: '#/components/schemas/StreamDescription'
          description: A description of the stream.
      description: A summary of a stream.
    StreamVersion:
      type: integer
      minimum: 0
      maximum: 65535
    StreamsSummary:
      type: array
      items:
        $ref: '#/components/schemas/StreamSummary'
    String:
      type: string
    StringCommandExecutionResult:
      type: string
      minLength: 1
    StringDateTime:
      type: string
      minLength: 1
      maxLength: 64
    StringList:
      type: array
      items:
        $ref: '#/components/schemas/stringValue'
    StringMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/String'
    StringParameterValue:
      type: string
      minLength: 1
    SubnetId:
      type: string
    SubnetIdList:
      type: array
      items:
        $ref: '#/components/schemas/SubnetId'
    SucceededFindingsCount:
      type: integer
      format: int64
    SucceededThings:
      type: integer
    Sum:
      type: number
      format: double
      default: 0
    SumOfSquares:
      type: number
      format: double
      default: 0
    SuppressAlerts:
      type: boolean
    SuppressIndefinitely:
      type: boolean
    SuppressedNonCompliantResourcesCount:
      type: integer
      format: int64
    TableName:
      type: string
    Tag:
      type: object
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/TagKey'
          description: The tag's key.
        Value:
          allOf:
          - $ref: '#/components/schemas/TagValue'
          description: The tag's value.
      required:
      - Key
      description: A set of key/value pairs that are used to manage the resource.
    TagKey:
      type: string
      pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
      minLength: 1
      maxLength: 128
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
    TagList:
      type: array
      items:
        $ref: '#/components/schemas/Tag'
    TagMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
    TagResourceRequest:
      type: object
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          description: The ARN of the resource.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: The new or modified tags for the resource.
      required:
      - resourceArn
      - tags
    TagResourceResponse:
      type: object
      properties: {}
    TagValue:
      type: string
      minLength: 0
      maxLength: 256
    Target:
      type: string
    TargetArn:
      type: string
      minLength: 0
      maxLength: 2048
    TargetAuditCheckNames:
      type: array
      items:
        $ref: '#/components/schemas/AuditCheckName'
    TargetFieldName:
      type: string
    TargetFieldOrder:
      type: string
      enum:
      - LatLon
      - LonLat
    TargetSelection:
      type: string
      enum:
      - CONTINUOUS
      - SNAPSHOT
    TargetViolationIdsForDetectMitigationActions:
      type: array
      items:
        $ref: '#/components/schemas/ViolationId'
    Targets:
      type: array
      items:
        $ref: '#/components/schemas/Target'
    TaskAlreadyExistsException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage2'
      description: This exception occurs if you attempt to start a task with the same
        task-id as an existing task but with a different clientRequestToken.
    TaskId:
      type: string
      minLength: 0
      maxLength: 40
    TaskIdList:
      type: array
      items:
        $ref: '#/components/schemas/TaskId'
    TaskStatistics:
      type: object
      properties:
        totalChecks:
          allOf:
          - $ref: '#/components/schemas/TotalChecksCount'
          description: The number of checks in this audit.
        inProgressChecks:
          allOf:
          - $ref: '#/components/schemas/InProgressChecksCount'
          description: The number of checks in progress.
        waitingForDataCollectionChecks:
          allOf:
          - $ref: '#/components/schemas/WaitingForDataCollectionChecksCount'
          description: The number of checks waiting for data collection.
        compliantChecks:
          allOf:
          - $ref: '#/components/schemas/CompliantChecksCount'
          description: The number of checks that found compliant resources.
        nonCompliantChecks:
          allOf:
          - $ref: '#/components/schemas/NonCompliantChecksCount'
          description: The number of checks that found noncompliant resources.
        failedChecks:
          allOf:
          - $ref: '#/components/schemas/FailedChecksCount'
          description: The number of checks.
        canceledChecks:
          allOf:
          - $ref: '#/components/schemas/CanceledChecksCount'
          description: The number of checks that did not run because the audit was
            canceled.
      description: Statistics for the checks performed during the audit.
    TaskStatisticsForAuditCheck:
      type: object
      properties:
        totalFindingsCount:
          allOf:
          - $ref: '#/components/schemas/TotalFindingsCount'
          description: The total number of findings to which a task is being applied.
        failedFindingsCount:
          allOf:
          - $ref: '#/components/schemas/FailedFindingsCount'
          description: The number of findings for which at least one of the actions
            failed when applied.
        succeededFindingsCount:
          allOf:
          - $ref: '#/components/schemas/SucceededFindingsCount'
          description: The number of findings for which all mitigation actions succeeded
            when applied.
        skippedFindingsCount:
          allOf:
          - $ref: '#/components/schemas/SkippedFindingsCount'
          description: The number of findings skipped because of filter conditions
            provided in the parameters to the command.
        canceledFindingsCount:
          allOf:
          - $ref: '#/components/schemas/CanceledFindingsCount'
          description: The number of findings to which the mitigation action task
            was canceled when applied.
      description: Provides summary counts of how many tasks for findings are in a
        particular state. This information is included in the response from DescribeAuditMitigationActionsTask.
    TemplateArn:
      type: string
    TemplateBody:
      type: string
      pattern: ^[\s\S]*$
      minLength: 0
      maxLength: 10240
    TemplateDescription:
      type: string
      pattern: ^[^\p{C}]*$
      minLength: 0
      maxLength: 500
    TemplateName:
      type: string
      pattern: ^[0-9A-Za-z_-]+$
      minLength: 1
      maxLength: 36
    TemplateType:
      type: string
      enum:
      - FLEET_PROVISIONING
      - JITP
    TemplateVersionId:
      type: integer
    TermsAggregation:
      type: object
      properties:
        maxBuckets:
          allOf:
          - $ref: '#/components/schemas/MaxBuckets'
          description: The number of buckets to return in the response. Default to
            10.
      description: Performs an aggregation that will return a list of buckets. The
        list of buckets is a ranked list of the number of occurrences of an aggregation
        field value.
    TestAuthorizationRequest:
      type: object
      properties:
        principal:
          allOf:
          - $ref: '#/components/schemas/Principal'
          description: The principal. Valid principals are CertificateArn (arn:aws:iot:_region_
            :_accountId_ :cert/_certificateId_), thingGroupArn (arn:aws:iot:_region_
            :_accountId_ :thinggroup/_groupName_) and CognitoId (_region_ :_id_).
        cognitoIdentityPoolId:
          allOf:
          - $ref: '#/components/schemas/CognitoIdentityPoolId'
          description: The Cognito identity pool ID.
        authInfos:
          allOf:
          - $ref: '#/components/schemas/AuthInfos'
          description: A list of authorization info objects. Simulating authorization
            will create a response for each `authInfo` object in the list.
        clientId:
          allOf:
          - $ref: '#/components/schemas/ClientId'
          description: The MQTT client ID.
        policyNamesToAdd:
          allOf:
          - $ref: '#/components/schemas/PolicyNames'
          description: When testing custom authorization, the policies specified here
            are treated as if they are attached to the principal being authorized.
        policyNamesToSkip:
          allOf:
          - $ref: '#/components/schemas/PolicyNames'
          description: When testing custom authorization, the policies specified here
            are treated as if they are not attached to the principal being authorized.
      required:
      - authInfos
    TestAuthorizationResponse:
      type: object
      properties:
        authResults:
          allOf:
          - $ref: '#/components/schemas/AuthResults'
          description: The authentication results.
    TestInvokeAuthorizerRequest:
      type: object
      properties:
        authorizerName:
          allOf:
          - $ref: '#/components/schemas/AuthorizerName'
          description: The custom authorizer name.
        token:
          allOf:
          - $ref: '#/components/schemas/Token'
          description: The token returned by your custom authentication service.
        tokenSignature:
          allOf:
          - $ref: '#/components/schemas/TokenSignature'
          description: The signature made with the token and your custom authentication
            service's private key. This value must be Base-64-encoded.
        httpContext:
          allOf:
          - $ref: '#/components/schemas/HttpContext'
          description: Specifies a test HTTP authorization request.
        mqttContext:
          allOf:
          - $ref: '#/components/schemas/MqttContext'
          description: Specifies a test MQTT authorization request.
        tlsContext:
          allOf:
          - $ref: '#/components/schemas/TlsContext'
          description: Specifies a test TLS authorization request.
      required:
      - authorizerName
    TestInvokeAuthorizerResponse:
      type: object
      properties:
        isAuthenticated:
          allOf:
          - $ref: '#/components/schemas/IsAuthenticated'
          description: True if the token is authenticated, otherwise false.
        principalId:
          allOf:
          - $ref: '#/components/schemas/PrincipalId'
          description: The principal ID.
        policyDocuments:
          allOf:
          - $ref: '#/components/schemas/PolicyDocuments'
          description: IAM policy documents.
        refreshAfterInSeconds:
          allOf:
          - $ref: '#/components/schemas/Seconds'
          description: The number of seconds after which the temporary credentials
            are refreshed.
        disconnectAfterInSeconds:
          allOf:
          - $ref: '#/components/schemas/Seconds'
          description: The number of seconds after which the connection is terminated.
    ThingArn:
      type: string
    ThingAttribute:
      type: object
      properties:
        thingName:
          allOf:
          - $ref: '#/components/schemas/ThingName'
          description: The name of the thing.
        thingTypeName:
          allOf:
          - $ref: '#/components/schemas/ThingTypeName'
          description: The name of the thing type, if the thing has been associated
            with a type.
        thingArn:
          allOf:
          - $ref: '#/components/schemas/ThingArn'
          description: The thing ARN.
        attributes:
          allOf:
          - $ref: '#/components/schemas/Attributes'
          description: A list of thing attributes which are name-value pairs.
        version:
          allOf:
          - $ref: '#/components/schemas/Version'
          description: The version of the thing record in the registry.
      description: The properties of the thing, including thing name, thing type name,
        and a list of thing attributes.
    ThingAttributeList:
      type: array
      items:
        $ref: '#/components/schemas/ThingAttribute'
    ThingConnectivity:
      type: object
      properties:
        connected:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: True if the thing is connected to the Amazon Web Services IoT
            Core service; false if it is not connected.
        timestamp:
          allOf:
          - $ref: '#/components/schemas/ConnectivityTimestamp'
          description: The epoch time (in milliseconds) when the thing last connected
            or disconnected. If the thing has been disconnected for approximately
            an hour, the time value might be missing.
        disconnectReason:
          allOf:
          - $ref: '#/components/schemas/DisconnectReason'
          description: The reason why the client is disconnected. If the thing has
            been disconnected for approximately an hour, the `disconnectReason` value
            might be missing.
      description: The connectivity status of the thing.
    ThingConnectivityIndexingMode:
      type: string
      enum:
      - 'OFF'
      - STATUS
    ThingDocument:
      type: object
      properties:
        thingName:
          allOf:
          - $ref: '#/components/schemas/ThingName'
          description: The thing name.
        thingId:
          allOf:
          - $ref: '#/components/schemas/ThingId'
          description: The thing ID.
        thingTypeName:
          allOf:
          - $ref: '#/components/schemas/ThingTypeName'
          description: The thing type name.
        thingGroupNames:
          allOf:
          - $ref: '#/components/schemas/ThingGroupNameList'
          description: Thing group and billing group names.
        attributes:
          allOf:
          - $ref: '#/components/schemas/Attributes'
          description: The attributes.
        shadow:
          allOf:
          - $ref: '#/components/schemas/JsonDocument'
          description: 'The unnamed shadow and named shadow.


            For more information about shadows, see [IoT Device Shadow service.](https://docs.aws.amazon.com/iot/latest/developerguide/iot-device-shadows.html)'
        deviceDefender:
          allOf:
          - $ref: '#/components/schemas/JsonDocument'
          description: 'Contains Device Defender data.


            For more information about Device Defender, see [Device Defender](https://docs.aws.amazon.com/iot/latest/developerguide/device-defender.html).'
        connectivity:
          allOf:
          - $ref: '#/components/schemas/ThingConnectivity'
          description: Indicates whether the thing is connected to the Amazon Web
            Services IoT Core service.
      description: The thing search index document.
    ThingDocumentList:
      type: array
      items:
        $ref: '#/components/schemas/ThingDocument'
    ThingGroupArn:
      type: string
    ThingGroupDescription:
      type: string
      pattern: ^[\p{Graph}\x20]*$
      minLength: 0
      maxLength: 2028
    ThingGroupDocument:
      type: object
      properties:
        thingGroupName:
          allOf:
          - $ref: '#/components/schemas/ThingGroupName'
          description: The thing group name.
        thingGroupId:
          allOf:
          - $ref: '#/components/schemas/ThingGroupId'
          description: The thing group ID.
        thingGroupDescription:
          allOf:
          - $ref: '#/components/schemas/ThingGroupDescription'
          description: The thing group description.
        attributes:
          allOf:
          - $ref: '#/components/schemas/Attributes'
          description: The thing group attributes.
        parentGroupNames:
          allOf:
          - $ref: '#/components/schemas/ThingGroupNameList'
          description: Parent group names.
      description: The thing group search index document.
    ThingGroupDocumentList:
      type: array
      items:
        $ref: '#/components/schemas/ThingGroupDocument'
    ThingGroupId:
      type: string
      pattern: ^[a-zA-Z0-9\-]+$
      minLength: 1
      maxLength: 128
    ThingGroupIndexingConfiguration:
      type: object
      properties:
        thingGroupIndexingMode:
          allOf:
          - $ref: '#/components/schemas/ThingGroupIndexingMode'
          description: Thing group indexing mode.
        managedFields:
          allOf:
          - $ref: '#/components/schemas/Fields'
          description: 'Contains fields that are indexed and whose types are already
            known by the Fleet Indexing service. This is an optional field. For more
            information, see [Managed fields](https://docs.aws.amazon.com/iot/latest/developerguide/managing-fleet-index.html#managed-field)
            in the _Amazon Web Services IoT Core Developer Guide_.


            You can''t modify managed fields by updating fleet indexing configuration.'
        customFields:
          allOf:
          - $ref: '#/components/schemas/Fields'
          description: 'A list of thing group fields to index. This list cannot contain
            any managed fields. Use the GetIndexingConfiguration API to get a list
            of managed fields.


            Contains custom field names and their data type.'
      required:
      - thingGroupIndexingMode
      description: Thing group indexing configuration.
    ThingGroupIndexingMode:
      type: string
      enum:
      - 'OFF'
      - 'ON'
    ThingGroupList:
      type: array
      items:
        $ref: '#/components/schemas/ThingGroupName'
    ThingGroupMetadata:
      type: object
      properties:
        parentGroupName:
          allOf:
          - $ref: '#/components/schemas/ThingGroupName'
          description: The parent thing group name.
        rootToParentThingGroups:
          allOf:
          - $ref: '#/components/schemas/ThingGroupNameAndArnList'
          description: The root parent thing group.
        creationDate:
          allOf:
          - $ref: '#/components/schemas/CreationDate'
          description: The UNIX timestamp of when the thing group was created.
      description: Thing group metadata.
    ThingGroupName:
      type: string
      pattern: ^[a-zA-Z0-9:_-]+$
      minLength: 1
      maxLength: 128
    ThingGroupNameAndArnList:
      type: array
      items:
        $ref: '#/components/schemas/GroupNameAndArn'
    ThingGroupNameList:
      type: array
      items:
        $ref: '#/components/schemas/ThingGroupName'
    ThingGroupNames:
      type: array
      items:
        $ref: '#/components/schemas/ThingGroupName'
    ThingGroupProperties:
      type: object
      properties:
        thingGroupDescription:
          allOf:
          - $ref: '#/components/schemas/ThingGroupDescription'
          description: The thing group description.
        attributePayload:
          allOf:
          - $ref: '#/components/schemas/AttributePayload'
          description: The thing group attributes in JSON format.
      description: Thing group properties.
    ThingId:
      type: string
    ThingIndexingConfiguration:
      type: object
      properties:
        thingIndexingMode:
          allOf:
          - $ref: '#/components/schemas/ThingIndexingMode'
          description: "Thing indexing mode. Valid values are:\n\n  * REGISTRY – Your\
            \ thing index contains registry data only.\n\n  * REGISTRY_AND_SHADOW\
            \ - Your thing index contains registry and shadow data.\n\n  * OFF - Thing\
            \ indexing is disabled."
        thingConnectivityIndexingMode:
          allOf:
          - $ref: '#/components/schemas/ThingConnectivityIndexingMode'
          description: "Thing connectivity indexing mode. Valid values are:\n\n  *\
            \ STATUS – Your thing index contains connectivity status. To enable thing\
            \ connectivity indexing, _thingIndexMode_ must not be set to OFF.\n\n\
            \  * OFF - Thing connectivity status indexing is disabled."
        deviceDefenderIndexingMode:
          allOf:
          - $ref: '#/components/schemas/DeviceDefenderIndexingMode'
          description: "Device Defender indexing mode. Valid values are:\n\n  * VIOLATIONS\
            \ – Your thing index contains Device Defender violations. To enable Device\
            \ Defender indexing, _deviceDefenderIndexingMode_ must not be set to OFF.\n\
            \n  * OFF - Device Defender indexing is disabled.\n\nFor more information\
            \ about Device Defender violations, see [Device Defender Detect.](https://docs.aws.amazon.com/iot/latest/developerguide/device-defender-detect.html)"
        namedShadowIndexingMode:
          allOf:
          - $ref: '#/components/schemas/NamedShadowIndexingMode'
          description: "Named shadow indexing mode. Valid values are:\n\n  * ON –\
            \ Your thing index contains named shadow. To enable thing named shadow\
            \ indexing, _namedShadowIndexingMode_ must not be set to OFF.\n\n  * OFF\
            \ - Named shadow indexing is disabled.\n\nFor more information about Shadows,\
            \ see [IoT Device Shadow service.](https://docs.aws.amazon.com/iot/latest/developerguide/iot-device-shadows.html)"
        managedFields:
          allOf:
          - $ref: '#/components/schemas/Fields'
          description: 'Contains fields that are indexed and whose types are already
            known by the Fleet Indexing service. This is an optional field. For more
            information, see [Managed fields](https://docs.aws.amazon.com/iot/latest/developerguide/managing-fleet-index.html#managed-field)
            in the _Amazon Web Services IoT Core Developer Guide_.


            You can''t modify managed fields by updating fleet indexing configuration.'
        customFields:
          allOf:
          - $ref: '#/components/schemas/Fields'
          description: Contains custom field names and their data type.
        filter:
          allOf:
          - $ref: '#/components/schemas/IndexingFilter'
          description: "Provides additional selections for named shadows and geolocation\
            \ data.\n\nTo add named shadows to your fleet indexing configuration,\
            \ set `namedShadowIndexingMode` to be ON and specify your shadow names\
            \ in `namedShadowNames` filter.\n\nTo add geolocation data to your fleet\
            \ indexing configuration:\n\n  * If you store geolocation data in a class/unnamed\
            \ shadow, set `thingIndexingMode` to be `REGISTRY_AND_SHADOW` and specify\
            \ your geolocation data in `geoLocations` filter. \n\n  * If you store\
            \ geolocation data in a named shadow, set `namedShadowIndexingMode` to\
            \ be `ON`, add the shadow name in `namedShadowNames` filter, and specify\
            \ your geolocation data in `geoLocations` filter. For more information,\
            \ see [Managing fleet indexing](https://docs.aws.amazon.com/iot/latest/developerguide/managing-fleet-index.html)."
      required:
      - thingIndexingMode
      description: The thing indexing configuration. For more information, see [Managing
        Thing Indexing](https://docs.aws.amazon.com/iot/latest/developerguide/managing-index.html).
    ThingIndexingMode:
      type: string
      enum:
      - 'OFF'
      - REGISTRY
      - REGISTRY_AND_SHADOW
    ThingName:
      type: string
      pattern: ^[a-zA-Z0-9:_-]+$
      minLength: 1
      maxLength: 128
    ThingNameList:
      type: array
      items:
        $ref: '#/components/schemas/ThingName'
    ThingPrincipalObject:
      type: object
      properties:
        principal:
          allOf:
          - $ref: '#/components/schemas/Principal'
          description: The principal of the thing principal object.
        thingPrincipalType:
          allOf:
          - $ref: '#/components/schemas/ThingPrincipalType'
          description: "The type of the relation you want to specify when you attach\
            \ a principal to a thing. The value defaults to `NON_EXCLUSIVE_THING`.\n\
            \n  * `EXCLUSIVE_THING` \\- Attaches the specified principal to the specified\
            \ thing, exclusively. The thing will be the only thing that’s attached\
            \ to the principal.\n\n  * `NON_EXCLUSIVE_THING` \\- Attaches the specified\
            \ principal to the specified thing. Multiple things can be attached to\
            \ the principal."
      required:
      - principal
      description: An object that represents the principal and the type of relation
        it has with the thing.
    ThingPrincipalObjects:
      type: array
      items:
        $ref: '#/components/schemas/ThingPrincipalObject'
    ThingPrincipalType:
      type: string
      enum:
      - EXCLUSIVE_THING
      - NON_EXCLUSIVE_THING
    ThingTypeArn:
      type: string
    ThingTypeDefinition:
      type: object
      properties:
        thingTypeName:
          allOf:
          - $ref: '#/components/schemas/ThingTypeName'
          description: The name of the thing type.
        thingTypeArn:
          allOf:
          - $ref: '#/components/schemas/ThingTypeArn'
          description: The thing type ARN.
        thingTypeProperties:
          allOf:
          - $ref: '#/components/schemas/ThingTypeProperties'
          description: The ThingTypeProperties for the thing type.
        thingTypeMetadata:
          allOf:
          - $ref: '#/components/schemas/ThingTypeMetadata'
          description: 'The ThingTypeMetadata contains additional information about
            the thing type including: creation date and time, a value indicating whether
            the thing type is deprecated, and a date and time when it was deprecated.'
      description: The definition of the thing type, including thing type name and
        description.
    ThingTypeDescription:
      type: string
      pattern: ^[\p{Graph}\x20]*$
      minLength: 0
      maxLength: 2028
    ThingTypeId:
      type: string
    ThingTypeList:
      type: array
      items:
        $ref: '#/components/schemas/ThingTypeDefinition'
    ThingTypeMetadata:
      type: object
      properties:
        deprecated:
          allOf:
          - $ref: '#/components/schemas/Boolean2'
          description: Whether the thing type is deprecated. If **true** , no new
            things could be associated with this type.
        deprecationDate:
          allOf:
          - $ref: '#/components/schemas/DeprecationDate'
          description: The date and time when the thing type was deprecated.
        creationDate:
          allOf:
          - $ref: '#/components/schemas/CreationDate'
          description: The date and time when the thing type was created.
      description: 'The ThingTypeMetadata contains additional information about the
        thing type including: creation date and time, a value indicating whether the
        thing type is deprecated, and a date and time when time was deprecated.'
    ThingTypeName:
      type: string
      pattern: ^[a-zA-Z0-9:_-]+$
      minLength: 1
      maxLength: 128
    ThingTypeProperties:
      type: object
      properties:
        thingTypeDescription:
          allOf:
          - $ref: '#/components/schemas/ThingTypeDescription'
          description: The description of the thing type.
        searchableAttributes:
          allOf:
          - $ref: '#/components/schemas/SearchableAttributes'
          description: A list of searchable thing attribute names.
        mqtt5Configuration:
          allOf:
          - $ref: '#/components/schemas/Mqtt5Configuration'
          description: The configuration to add user-defined properties to enrich
            MQTT 5 messages.
      description: 'The ThingTypeProperties contains information about the thing type
        including: a thing type description, and a list of searchable thing attribute
        names.'
    ThrottlingException:
      type: object
      properties:
        message:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage2'
          description: The message for the exception.
      description: The rate exceeds the limit.
    TimeFilter:
      type: object
      properties:
        after:
          allOf:
          - $ref: '#/components/schemas/StringDateTime'
          description: Filter to display command executions that started or completed
            only after a particular date and time.
        before:
          allOf:
          - $ref: '#/components/schemas/StringDateTime'
          description: Filter to display command executions that started or completed
            only before a particular date and time.
      description: A filter that can be used to list command executions for a device
        that started or completed before or after a particular date and time.
    TimedOutThings:
      type: integer
    TimeoutConfig:
      type: object
      properties:
        inProgressTimeoutInMinutes:
          allOf:
          - $ref: '#/components/schemas/InProgressTimeoutInMinutes'
          description: Specifies the amount of time, in minutes, this device has to
            finish execution of this job. The timeout interval can be anywhere between
            1 minute and 7 days (1 to 10080 minutes). The in progress timer can't
            be updated and will apply to all job executions for the job. Whenever
            a job execution remains in the IN_PROGRESS status for longer than this
            interval, the job execution will fail and switch to the terminal `TIMED_OUT`
            status.
      description: Specifies the amount of time each device has to finish its execution
        of the job. A timer is started when the job execution status is set to `IN_PROGRESS`.
        If the job execution status is not set to another terminal state before the
        timer expires, it will be automatically set to `TIMED_OUT`.
    Timestamp:
      type: string
      format: date-time
    TimestreamAction:
      type: object
      properties:
        roleArn:
          allOf:
          - $ref: '#/components/schemas/AwsArn'
          description: The ARN of the role that grants permission to write to the
            Amazon Timestream database table.
        databaseName:
          allOf:
          - $ref: '#/components/schemas/TimestreamDatabaseName'
          description: The name of an Amazon Timestream database.
        tableName:
          allOf:
          - $ref: '#/components/schemas/TimestreamTableName'
          description: The name of the database table into which to write the measure
            records.
        dimensions:
          allOf:
          - $ref: '#/components/schemas/TimestreamDimensionList'
          description: Metadata attributes of the time series that are written in
            each measure record.
        timestamp:
          allOf:
          - $ref: '#/components/schemas/TimestreamTimestamp'
          description: 'Specifies an application-defined value to replace the default
            value assigned to the Timestream record''s timestamp in the `time` column.


            You can use this property to specify the value and the precision of the
            Timestream record''s timestamp. You can specify a value from the message
            payload or a value computed by a substitution template.


            If omitted, the topic rule action assigns the timestamp, in milliseconds,
            at the time it processed the rule.'
      required:
      - roleArn
      - databaseName
      - tableName
      - dimensions
      description: The Timestream rule action writes attributes (measures) from an
        MQTT message into an Amazon Timestream table. For more information, see the
        [Timestream](https://docs.aws.amazon.com/iot/latest/developerguide/timestream-rule-action.html)
        topic rule action documentation.
    TimestreamDatabaseName:
      type: string
    TimestreamDimension:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/TimestreamDimensionName'
          description: 'The metadata dimension name. This is the name of the column
            in the Amazon Timestream database table record.


            Dimensions cannot be named: `measure_name`, `measure_value`, or `time`.
            These names are reserved. Dimension names cannot start with `ts_` or `measure_value`
            and they cannot contain the colon (`:`) character.'
        value:
          allOf:
          - $ref: '#/components/schemas/TimestreamDimensionValue'
          description: The value to write in this column of the database record.
      required:
      - name
      - value
      description: Metadata attributes of the time series that are written in each
        measure record.
    TimestreamDimensionList:
      type: array
      items:
        $ref: '#/components/schemas/TimestreamDimension'
    TimestreamDimensionName:
      type: string
    TimestreamDimensionValue:
      type: string
    TimestreamTableName:
      type: string
    TimestreamTimestamp:
      type: object
      properties:
        value:
          allOf:
          - $ref: '#/components/schemas/TimestreamTimestampValue'
          description: An expression that returns a long epoch time value.
        unit:
          allOf:
          - $ref: '#/components/schemas/TimestreamTimestampUnit'
          description: 'The precision of the timestamp value that results from the
            expression described in `value`.


            Valid values: `SECONDS` | `MILLISECONDS` | `MICROSECONDS` | `NANOSECONDS`.
            The default is `MILLISECONDS`.'
      required:
      - value
      - unit
      description: Describes how to interpret an application-defined timestamp value
        from an MQTT message payload and the precision of that value.
    TimestreamTimestampUnit:
      type: string
    TimestreamTimestampValue:
      type: string
    TinyMaxResults:
      type: integer
      minimum: 1
      maximum: 10
    TlsConfig:
      type: object
      properties:
        securityPolicy:
          allOf:
          - $ref: '#/components/schemas/SecurityPolicy'
          description: The security policy for a domain configuration. For more information,
            see [Security policies ](https://docs.aws.amazon.com/iot/latest/developerguide/transport-security.html#tls-policy-table)
            in the _Amazon Web Services IoT Core developer guide_.
      description: An object that specifies the TLS configuration for a domain.
    TlsContext:
      type: object
      properties:
        serverName:
          allOf:
          - $ref: '#/components/schemas/ServerName'
          description: The value of the `serverName` key in a TLS authorization request.
      description: Specifies the TLS context to use for the test authorizer request.
    Token:
      type: string
      pattern: ^[\s\S]*$
      minLength: 1
      maxLength: 6144
    TokenKeyName:
      type: string
      pattern: ^[a-zA-Z0-9_-]+$
      minLength: 1
      maxLength: 128
    TokenSignature:
      type: string
      pattern: ^[A-Za-z0-9+/]+={0,2}$
      minLength: 1
      maxLength: 2560
    Topic:
      type: string
    TopicPattern:
      type: string
    TopicRule:
      type: object
      properties:
        ruleName:
          allOf:
          - $ref: '#/components/schemas/RuleName'
          description: The name of the rule.
        sql:
          allOf:
          - $ref: '#/components/schemas/SQL'
          description: The SQL statement used to query the topic. When using a SQL
            query with multiple lines, be sure to escape the newline characters.
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: The description of the rule.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/CreatedAtDate'
          description: The date and time the rule was created.
        actions:
          allOf:
          - $ref: '#/components/schemas/ActionList'
          description: The actions associated with the rule.
        ruleDisabled:
          allOf:
          - $ref: '#/components/schemas/IsDisabled'
          description: Specifies whether the rule is disabled.
        awsIotSqlVersion:
          allOf:
          - $ref: '#/components/schemas/AwsIotSqlVersion'
          description: The version of the SQL rules engine to use when evaluating
            the rule.
        errorAction:
          allOf:
          - $ref: '#/components/schemas/Action'
          description: The action to perform when an error occurs.
      description: Describes a rule.
    TopicRuleDestination:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/AwsArn'
          description: The topic rule destination URL.
        status:
          allOf:
          - $ref: '#/components/schemas/TopicRuleDestinationStatus'
          description: "The status of the topic rule destination. Valid values are:\n\
            \nIN_PROGRESS\n\n    \n\nA topic rule destination was created but has\
            \ not been confirmed. You can set `status` to `IN_PROGRESS` by calling\
            \ `UpdateTopicRuleDestination`. Calling `UpdateTopicRuleDestination` causes\
            \ a new confirmation challenge to be sent to your confirmation endpoint.\n\
            \nENABLED\n\n    \n\nConfirmation was completed, and traffic to this destination\
            \ is allowed. You can set `status` to `DISABLED` by calling `UpdateTopicRuleDestination`.\n\
            \nDISABLED\n\n    \n\nConfirmation was completed, and traffic to this\
            \ destination is not allowed. You can set `status` to `ENABLED` by calling\
            \ `UpdateTopicRuleDestination`.\n\nERROR\n\n    \n\nConfirmation could\
            \ not be completed, for example if the confirmation timed out. You can\
            \ call `GetTopicRuleDestination` for details about the error. You can\
            \ set `status` to `IN_PROGRESS` by calling `UpdateTopicRuleDestination`.\
            \ Calling `UpdateTopicRuleDestination` causes a new confirmation challenge\
            \ to be sent to your confirmation endpoint."
        createdAt:
          allOf:
          - $ref: '#/components/schemas/CreatedAtDate'
          description: The date and time when the topic rule destination was created.
        lastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/LastUpdatedAtDate'
          description: The date and time when the topic rule destination was last
            updated.
        statusReason:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Additional details or reason why the topic rule destination
            is in the current status.
        httpUrlProperties:
          allOf:
          - $ref: '#/components/schemas/HttpUrlDestinationProperties'
          description: Properties of the HTTP URL.
        vpcProperties:
          allOf:
          - $ref: '#/components/schemas/VpcDestinationProperties'
          description: Properties of the virtual private cloud (VPC) connection.
      description: A topic rule destination.
    TopicRuleDestinationConfiguration:
      type: object
      properties:
        httpUrlConfiguration:
          allOf:
          - $ref: '#/components/schemas/HttpUrlDestinationConfiguration'
          description: Configuration of the HTTP URL.
        vpcConfiguration:
          allOf:
          - $ref: '#/components/schemas/VpcDestinationConfiguration'
          description: Configuration of the virtual private cloud (VPC) connection.
      description: Configuration of the topic rule destination.
    TopicRuleDestinationMaxResults:
      type: integer
      minimum: 1
      maximum: 1000
    TopicRuleDestinationStatus:
      type: string
      enum:
      - ENABLED
      - IN_PROGRESS
      - DISABLED
      - ERROR
      - DELETING
    TopicRuleDestinationSummaries:
      type: array
      items:
        $ref: '#/components/schemas/TopicRuleDestinationSummary'
    TopicRuleDestinationSummary:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/AwsArn'
          description: The topic rule destination ARN.
        status:
          allOf:
          - $ref: '#/components/schemas/TopicRuleDestinationStatus'
          description: "The status of the topic rule destination. Valid values are:\n\
            \nIN_PROGRESS\n\n    \n\nA topic rule destination was created but has\
            \ not been confirmed. You can set `status` to `IN_PROGRESS` by calling\
            \ `UpdateTopicRuleDestination`. Calling `UpdateTopicRuleDestination` causes\
            \ a new confirmation challenge to be sent to your confirmation endpoint.\n\
            \nENABLED\n\n    \n\nConfirmation was completed, and traffic to this destination\
            \ is allowed. You can set `status` to `DISABLED` by calling `UpdateTopicRuleDestination`.\n\
            \nDISABLED\n\n    \n\nConfirmation was completed, and traffic to this\
            \ destination is not allowed. You can set `status` to `ENABLED` by calling\
            \ `UpdateTopicRuleDestination`.\n\nERROR\n\n    \n\nConfirmation could\
            \ not be completed, for example if the confirmation timed out. You can\
            \ call `GetTopicRuleDestination` for details about the error. You can\
            \ set `status` to `IN_PROGRESS` by calling `UpdateTopicRuleDestination`.\
            \ Calling `UpdateTopicRuleDestination` causes a new confirmation challenge\
            \ to be sent to your confirmation endpoint."
        createdAt:
          allOf:
          - $ref: '#/components/schemas/CreatedAtDate'
          description: The date and time when the topic rule destination was created.
        lastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/LastUpdatedAtDate'
          description: The date and time when the topic rule destination was last
            updated.
        statusReason:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The reason the topic rule destination is in the current status.
        httpUrlSummary:
          allOf:
          - $ref: '#/components/schemas/HttpUrlDestinationSummary'
          description: Information about the HTTP URL.
        vpcDestinationSummary:
          allOf:
          - $ref: '#/components/schemas/VpcDestinationSummary'
          description: Information about the virtual private cloud (VPC) connection.
      description: Information about the topic rule destination.
    TopicRuleList:
      type: array
      items:
        $ref: '#/components/schemas/TopicRuleListItem'
    TopicRuleListItem:
      type: object
      properties:
        ruleArn:
          allOf:
          - $ref: '#/components/schemas/RuleArn'
          description: The rule ARN.
        ruleName:
          allOf:
          - $ref: '#/components/schemas/RuleName'
          description: The name of the rule.
        topicPattern:
          allOf:
          - $ref: '#/components/schemas/TopicPattern'
          description: The pattern for the topic names that apply.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/CreatedAtDate'
          description: The date and time the rule was created.
        ruleDisabled:
          allOf:
          - $ref: '#/components/schemas/IsDisabled'
          description: Specifies whether the rule is disabled.
      description: Describes a rule.
    TopicRuleMaxResults:
      type: integer
      minimum: 1
      maximum: 10000
    TopicRulePayload:
      type: object
      properties:
        sql:
          allOf:
          - $ref: '#/components/schemas/SQL'
          description: The SQL statement used to query the topic. For more information,
            see [IoT SQL Reference](https://docs.aws.amazon.com/iot/latest/developerguide/iot-sql-reference.html)
            in the _IoT Developer Guide_.
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: The description of the rule.
        actions:
          allOf:
          - $ref: '#/components/schemas/ActionList'
          description: The actions associated with the rule.
        ruleDisabled:
          allOf:
          - $ref: '#/components/schemas/IsDisabled'
          description: Specifies whether the rule is disabled.
        awsIotSqlVersion:
          allOf:
          - $ref: '#/components/schemas/AwsIotSqlVersion'
          description: The version of the SQL rules engine to use when evaluating
            the rule.
        errorAction:
          allOf:
          - $ref: '#/components/schemas/Action'
          description: The action to take when an error occurs.
      required:
      - sql
      - actions
      description: Describes a rule.
    TotalChecksCount:
      type: integer
    TotalFindingsCount:
      type: integer
      format: int64
    TotalResourcesCount:
      type: integer
      format: int64
    TransferAlreadyCompletedException:
      type: object
      properties:
        message:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage2'
          description: The message for the exception.
      description: You can't revert the certificate transfer because the transfer
        is already complete.
    TransferCertificateRequest:
      type: object
      properties:
        certificateId:
          allOf:
          - $ref: '#/components/schemas/CertificateId'
          description: The ID of the certificate. (The last part of the certificate
            ARN contains the certificate ID.)
        targetAwsAccount:
          allOf:
          - $ref: '#/components/schemas/AwsAccountId'
          description: The Amazon Web Services account.
        transferMessage:
          allOf:
          - $ref: '#/components/schemas/Message'
          description: The transfer message.
      required:
      - certificateId
      - targetAwsAccount
      description: The input for the TransferCertificate operation.
    TransferCertificateResponse:
      type: object
      properties:
        transferredCertificateArn:
          allOf:
          - $ref: '#/components/schemas/CertificateArn'
          description: The ARN of the certificate.
      description: The output from the TransferCertificate operation.
    TransferConflictException:
      type: object
      properties:
        message:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage2'
          description: The message for the exception.
      description: You can't transfer the certificate because authorization policies
        are still attached.
    TransferData:
      type: object
      properties:
        transferMessage:
          allOf:
          - $ref: '#/components/schemas/Message'
          description: The transfer message.
        rejectReason:
          allOf:
          - $ref: '#/components/schemas/Message'
          description: The reason why the transfer was rejected.
        transferDate:
          allOf:
          - $ref: '#/components/schemas/DateType'
          description: The date the transfer took place.
        acceptDate:
          allOf:
          - $ref: '#/components/schemas/DateType'
          description: The date the transfer was accepted.
        rejectDate:
          allOf:
          - $ref: '#/components/schemas/DateType'
          description: The date the transfer was rejected.
      description: Data used to transfer a certificate to an Amazon Web Services account.
    UnauthorizedException:
      type: object
      properties:
        message:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage2'
          description: The message for the exception.
      description: You are not authorized to perform this operation.
    UndoDeprecate:
      type: boolean
      default: false
    UnsetDefaultVersion:
      type: boolean
    UnsignedLong:
      type: integer
      format: int64
      minimum: 0
    UnsignedLongParameterValue:
      type: string
      pattern: ^[0-9]*$
      minLength: 1
      maxLength: 20
    UntagResourceRequest:
      type: object
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          description: The ARN of the resource.
        tagKeys:
          allOf:
          - $ref: '#/components/schemas/TagKeyList'
          description: A list of the keys of the tags to be removed from the resource.
      required:
      - resourceArn
      - tagKeys
    UntagResourceResponse:
      type: object
      properties: {}
    UpdateAccountAuditConfigurationRequest:
      type: object
      properties:
        roleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          description: The Amazon Resource Name (ARN) of the role that grants permission
            to IoT to access information about your devices, policies, certificates,
            and other items as required when performing an audit.
        auditNotificationTargetConfigurations:
          allOf:
          - $ref: '#/components/schemas/AuditNotificationTargetConfigurations'
          description: Information about the targets to which audit notifications
            are sent.
        auditCheckConfigurations:
          allOf:
          - $ref: '#/components/schemas/AuditCheckConfigurations'
          description: 'Specifies which audit checks are enabled and disabled for
            this account. Use `DescribeAccountAuditConfiguration` to see the list
            of all checks, including those that are currently enabled.


            Some data collection might start immediately when certain checks are enabled.
            When a check is disabled, any data collected so far in relation to the
            check is deleted.


            You cannot disable a check if it''s used by any scheduled audit. You must
            first delete the check from the scheduled audit or delete the scheduled
            audit itself.


            On the first call to `UpdateAccountAuditConfiguration`, this parameter
            is required and must specify at least one enabled check.'
    UpdateAccountAuditConfigurationResponse:
      type: object
      properties: {}
    UpdateAuditSuppressionRequest:
      type: object
      properties:
        checkName:
          $ref: '#/components/schemas/AuditCheckName'
        resourceIdentifier:
          $ref: '#/components/schemas/ResourceIdentifier'
        expirationDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The expiration date (epoch timestamp in seconds) that you want
            the suppression to adhere to.
        suppressIndefinitely:
          allOf:
          - $ref: '#/components/schemas/SuppressIndefinitely'
          description: Indicates whether a suppression should exist indefinitely or
            not.
        description:
          allOf:
          - $ref: '#/components/schemas/AuditDescription'
          description: The description of the audit suppression.
      required:
      - checkName
      - resourceIdentifier
    UpdateAuditSuppressionResponse:
      type: object
      properties: {}
    UpdateAuthorizerRequest:
      type: object
      properties:
        authorizerName:
          allOf:
          - $ref: '#/components/schemas/AuthorizerName'
          description: The authorizer name.
        authorizerFunctionArn:
          allOf:
          - $ref: '#/components/schemas/AuthorizerFunctionArn'
          description: The ARN of the authorizer's Lambda function.
        tokenKeyName:
          allOf:
          - $ref: '#/components/schemas/TokenKeyName'
          description: The key used to extract the token from the HTTP headers.
        tokenSigningPublicKeys:
          allOf:
          - $ref: '#/components/schemas/PublicKeyMap'
          description: The public keys used to verify the token signature.
        status:
          allOf:
          - $ref: '#/components/schemas/AuthorizerStatus'
          description: The status of the update authorizer request.
        enableCachingForHttp:
          allOf:
          - $ref: '#/components/schemas/EnableCachingForHttp'
          description: When `true`, the result from the authorizer’s Lambda function
            is cached for the time specified in `refreshAfterInSeconds`. The cached
            result is used while the device reuses the same HTTP connection.
      required:
      - authorizerName
    UpdateAuthorizerResponse:
      type: object
      properties:
        authorizerName:
          allOf:
          - $ref: '#/components/schemas/AuthorizerName'
          description: The authorizer name.
        authorizerArn:
          allOf:
          - $ref: '#/components/schemas/AuthorizerArn'
          description: The authorizer ARN.
    UpdateBillingGroupRequest:
      type: object
      properties:
        billingGroupName:
          allOf:
          - $ref: '#/components/schemas/BillingGroupName'
          description: The name of the billing group.
        billingGroupProperties:
          allOf:
          - $ref: '#/components/schemas/BillingGroupProperties'
          description: The properties of the billing group.
        expectedVersion:
          allOf:
          - $ref: '#/components/schemas/OptionalVersion'
          description: The expected version of the billing group. If the version of
            the billing group does not match the expected version specified in the
            request, the `UpdateBillingGroup` request is rejected with a `VersionConflictException`.
      required:
      - billingGroupName
      - billingGroupProperties
    UpdateBillingGroupResponse:
      type: object
      properties:
        version:
          allOf:
          - $ref: '#/components/schemas/Version'
          description: The latest version of the billing group.
    UpdateCACertificateParams:
      type: object
      properties:
        action:
          allOf:
          - $ref: '#/components/schemas/CACertificateUpdateAction'
          description: The action that you want to apply to the CA certificate. The
            only supported value is `DEACTIVATE`.
      required:
      - action
      description: Parameters to define a mitigation action that changes the state
        of the CA certificate to inactive.
    UpdateCACertificateRequest:
      type: object
      properties:
        certificateId:
          allOf:
          - $ref: '#/components/schemas/CertificateId'
          description: The CA certificate identifier.
        newStatus:
          allOf:
          - $ref: '#/components/schemas/CACertificateStatus'
          description: 'The updated status of the CA certificate.


            **Note:** The status value REGISTER_INACTIVE is deprecated and should
            not be used.'
        newAutoRegistrationStatus:
          allOf:
          - $ref: '#/components/schemas/AutoRegistrationStatus'
          description: 'The new value for the auto registration status. Valid values
            are: "ENABLE" or "DISABLE".'
        registrationConfig:
          allOf:
          - $ref: '#/components/schemas/RegistrationConfig'
          description: Information about the registration configuration.
        removeAutoRegistration:
          allOf:
          - $ref: '#/components/schemas/RemoveAutoRegistration'
          description: If true, removes auto registration.
      required:
      - certificateId
      description: The input to the UpdateCACertificate operation.
    UpdateCertificateProviderRequest:
      type: object
      properties:
        certificateProviderName:
          allOf:
          - $ref: '#/components/schemas/CertificateProviderName'
          description: The name of the certificate provider.
        lambdaFunctionArn:
          allOf:
          - $ref: '#/components/schemas/CertificateProviderFunctionArn'
          description: The Lambda function ARN that's associated with the certificate
            provider.
        accountDefaultForOperations:
          allOf:
          - $ref: '#/components/schemas/CertificateProviderAccountDefaultForOperations'
          description: 'A list of the operations that the certificate provider will
            use to generate certificates. Valid value: `CreateCertificateFromCsr`.'
      required:
      - certificateProviderName
    UpdateCertificateProviderResponse:
      type: object
      properties:
        certificateProviderName:
          allOf:
          - $ref: '#/components/schemas/CertificateProviderName'
          description: The name of the certificate provider.
        certificateProviderArn:
          allOf:
          - $ref: '#/components/schemas/CertificateProviderArn'
          description: The ARN of the certificate provider.
    UpdateCertificateRequest:
      type: object
      properties:
        certificateId:
          allOf:
          - $ref: '#/components/schemas/CertificateId'
          description: The ID of the certificate. (The last part of the certificate
            ARN contains the certificate ID.)
        newStatus:
          allOf:
          - $ref: '#/components/schemas/CertificateStatus'
          description: 'The new status.


            **Note:** Setting the status to PENDING_TRANSFER or PENDING_ACTIVATION
            will result in an exception being thrown. PENDING_TRANSFER and PENDING_ACTIVATION
            are statuses used internally by IoT. They are not intended for developer
            use.


            **Note:** The status value REGISTER_INACTIVE is deprecated and should
            not be used.'
      required:
      - certificateId
      - newStatus
      description: The input for the UpdateCertificate operation.
    UpdateCommandRequest:
      type: object
      properties:
        commandId:
          allOf:
          - $ref: '#/components/schemas/CommandId'
          description: The unique identifier of the command to be updated.
        displayName:
          allOf:
          - $ref: '#/components/schemas/DisplayName'
          description: The new user-friendly name to use in the console for the command.
        description:
          allOf:
          - $ref: '#/components/schemas/CommandDescription'
          description: A short text description of the command.
        deprecated:
          allOf:
          - $ref: '#/components/schemas/DeprecationFlag'
          description: A boolean that you can use to specify whether to deprecate
            a command.
      required:
      - commandId
    UpdateCommandResponse:
      type: object
      properties:
        commandId:
          allOf:
          - $ref: '#/components/schemas/CommandId'
          description: The unique identifier of the command.
        displayName:
          allOf:
          - $ref: '#/components/schemas/DisplayName'
          description: The updated user-friendly display name in the console for the
            command.
        description:
          allOf:
          - $ref: '#/components/schemas/CommandDescription'
          description: The updated text description of the command.
        deprecated:
          allOf:
          - $ref: '#/components/schemas/DeprecationFlag'
          description: The boolean that indicates whether the command was deprecated.
        lastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/DateType'
          description: The date and time (epoch timestamp in seconds) when the command
            was last updated.
    UpdateCustomMetricRequest:
      type: object
      properties:
        metricName:
          allOf:
          - $ref: '#/components/schemas/MetricName'
          description: The name of the custom metric. Cannot be updated.
        displayName:
          allOf:
          - $ref: '#/components/schemas/CustomMetricDisplayName'
          description: Field represents a friendly name in the console for the custom
            metric, it doesn't have to be unique. Don't use this name as the metric
            identifier in the device metric report. Can be updated.
      required:
      - metricName
      - displayName
    UpdateCustomMetricResponse:
      type: object
      properties:
        metricName:
          allOf:
          - $ref: '#/components/schemas/MetricName'
          description: The name of the custom metric.
        metricArn:
          allOf:
          - $ref: '#/components/schemas/CustomMetricArn'
          description: The Amazon Resource Number (ARN) of the custom metric.
        metricType:
          allOf:
          - $ref: '#/components/schemas/CustomMetricType'
          description: 'The type of the custom metric.


            The type `number` only takes a single metric value as an input, but while
            submitting the metrics value in the DeviceMetrics report, it must be passed
            as an array with a single value.'
        displayName:
          allOf:
          - $ref: '#/components/schemas/CustomMetricDisplayName'
          description: A friendly name in the console for the custom metric
        creationDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The creation date of the custom metric in milliseconds since
            epoch.
        lastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time the custom metric was last modified in milliseconds
            since epoch.
    UpdateDeviceCertificateParams:
      type: object
      properties:
        action:
          allOf:
          - $ref: '#/components/schemas/DeviceCertificateUpdateAction'
          description: The action that you want to apply to the device certificate.
            The only supported value is `DEACTIVATE`.
      required:
      - action
      description: Parameters to define a mitigation action that changes the state
        of the device certificate to inactive.
    UpdateDimensionRequest:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/DimensionName'
          description: A unique identifier for the dimension. Choose something that
            describes the type and value to make it easy to remember what it does.
        stringValues:
          allOf:
          - $ref: '#/components/schemas/DimensionStringValues'
          description: Specifies the value or list of values for the dimension. For
            `TOPIC_FILTER` dimensions, this is a pattern used to match the MQTT topic
            (for example, "admin/#").
      required:
      - name
      - stringValues
    UpdateDimensionResponse:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/DimensionName'
          description: A unique identifier for the dimension.
        arn:
          allOf:
          - $ref: '#/components/schemas/DimensionArn'
          description: The Amazon Resource Name (ARN)of the created dimension.
        type:
          allOf:
          - $ref: '#/components/schemas/DimensionType'
          description: The type of the dimension.
        stringValues:
          allOf:
          - $ref: '#/components/schemas/DimensionStringValues'
          description: The value or list of values used to scope the dimension. For
            example, for topic filters, this is the pattern used to match the MQTT
            topic name.
        creationDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time, in milliseconds since epoch, when the dimension
            was initially created.
        lastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time, in milliseconds since epoch, when the dimension
            was most recently updated.
    UpdateDomainConfigurationRequest:
      type: object
      properties:
        domainConfigurationName:
          allOf:
          - $ref: '#/components/schemas/ReservedDomainConfigurationName'
          description: The name of the domain configuration to be updated.
        authorizerConfig:
          allOf:
          - $ref: '#/components/schemas/AuthorizerConfig'
          description: An object that specifies the authorization service for a domain.
        domainConfigurationStatus:
          allOf:
          - $ref: '#/components/schemas/DomainConfigurationStatus'
          description: The status to which the domain configuration should be updated.
        removeAuthorizerConfig:
          allOf:
          - $ref: '#/components/schemas/RemoveAuthorizerConfig'
          description: Removes the authorization configuration from a domain.
        tlsConfig:
          allOf:
          - $ref: '#/components/schemas/TlsConfig'
          description: An object that specifies the TLS configuration for a domain.
        serverCertificateConfig:
          allOf:
          - $ref: '#/components/schemas/ServerCertificateConfig'
          description: The server certificate configuration.
        authenticationType:
          allOf:
          - $ref: '#/components/schemas/AuthenticationType'
          description: "An enumerated string that speciﬁes the authentication type.\n\
            \n  * `CUSTOM_AUTH_X509` \\- Use custom authentication and authorization\
            \ with additional details from the X.509 client certificate.\n\n  * `CUSTOM_AUTH`\
            \ \\- Use custom authentication and authorization. For more information,\
            \ see [Custom authentication and authorization](https://docs.aws.amazon.com/iot/latest/developerguide/custom-authentication.html).\n\
            \n  * `AWS_X509` \\- Use X.509 client certificates without custom authentication\
            \ and authorization. For more information, see [X.509 client certificates](https://docs.aws.amazon.com/iot/latest/developerguide/x509-client-certs.html).\n\
            \n  * `AWS_SIGV4` \\- Use Amazon Web Services Signature Version 4. For\
            \ more information, see [IAM users, groups, and roles](https://docs.aws.amazon.com/iot/latest/developerguide/custom-authentication.html).\n\
            \n  * `DEFAULT ` \\- Use a combination of port and Application Layer Protocol\
            \ Negotiation (ALPN) to specify authentication type. For more information,\
            \ see [Device communication protocols](https://docs.aws.amazon.com/iot/latest/developerguide/protocols.html)."
        applicationProtocol:
          allOf:
          - $ref: '#/components/schemas/ApplicationProtocol'
          description: "An enumerated string that speciﬁes the application-layer protocol.\n\
            \n  * `SECURE_MQTT` \\- MQTT over TLS.\n\n  * `MQTT_WSS` \\- MQTT over\
            \ WebSocket.\n\n  * `HTTPS` \\- HTTP over TLS.\n\n  * `DEFAULT` \\- Use\
            \ a combination of port and Application Layer Protocol Negotiation (ALPN)\
            \ to specify application_layer protocol. For more information, see [Device\
            \ communication protocols](https://docs.aws.amazon.com/iot/latest/developerguide/protocols.html)."
        clientCertificateConfig:
          allOf:
          - $ref: '#/components/schemas/ClientCertificateConfig'
          description: An object that speciﬁes the client certificate conﬁguration
            for a domain.
      required:
      - domainConfigurationName
    UpdateDomainConfigurationResponse:
      type: object
      properties:
        domainConfigurationName:
          allOf:
          - $ref: '#/components/schemas/ReservedDomainConfigurationName'
          description: The name of the domain configuration that was updated.
        domainConfigurationArn:
          allOf:
          - $ref: '#/components/schemas/DomainConfigurationArn'
          description: The ARN of the domain configuration that was updated.
    UpdateDynamicThingGroupRequest:
      type: object
      properties:
        thingGroupName:
          allOf:
          - $ref: '#/components/schemas/ThingGroupName'
          description: The name of the dynamic thing group to update.
        thingGroupProperties:
          allOf:
          - $ref: '#/components/schemas/ThingGroupProperties'
          description: The dynamic thing group properties to update.
        expectedVersion:
          allOf:
          - $ref: '#/components/schemas/OptionalVersion'
          description: The expected version of the dynamic thing group to update.
        indexName:
          allOf:
          - $ref: '#/components/schemas/IndexName'
          description: 'The dynamic thing group index to update.


            Currently one index is supported: `AWS_Things`.'
        queryString:
          allOf:
          - $ref: '#/components/schemas/QueryString'
          description: The dynamic thing group search query string to update.
        queryVersion:
          allOf:
          - $ref: '#/components/schemas/QueryVersion'
          description: 'The dynamic thing group query version to update.


            Currently one query version is supported: "2017-09-30". If not specified,
            the query version defaults to this value.'
      required:
      - thingGroupName
      - thingGroupProperties
    UpdateDynamicThingGroupResponse:
      type: object
      properties:
        version:
          allOf:
          - $ref: '#/components/schemas/Version'
          description: The dynamic thing group version.
    UpdateEventConfigurationsRequest:
      type: object
      properties:
        eventConfigurations:
          allOf:
          - $ref: '#/components/schemas/EventConfigurations'
          description: The new event configuration values.
    UpdateEventConfigurationsResponse:
      type: object
      properties: {}
    UpdateFleetMetricRequest:
      type: object
      properties:
        metricName:
          allOf:
          - $ref: '#/components/schemas/FleetMetricName'
          description: The name of the fleet metric to update.
        queryString:
          allOf:
          - $ref: '#/components/schemas/QueryString'
          description: The search query string.
        aggregationType:
          allOf:
          - $ref: '#/components/schemas/AggregationType'
          description: The type of the aggregation query.
        period:
          allOf:
          - $ref: '#/components/schemas/FleetMetricPeriod'
          description: The time in seconds between fleet metric emissions. Range [60(1
            min), 86400(1 day)] and must be multiple of 60.
        aggregationField:
          allOf:
          - $ref: '#/components/schemas/AggregationField'
          description: The field to aggregate.
        description:
          allOf:
          - $ref: '#/components/schemas/FleetMetricDescription'
          description: The description of the fleet metric.
        queryVersion:
          allOf:
          - $ref: '#/components/schemas/QueryVersion'
          description: The version of the query.
        indexName:
          allOf:
          - $ref: '#/components/schemas/IndexName'
          description: The name of the index to search.
        unit:
          allOf:
          - $ref: '#/components/schemas/FleetMetricUnit'
          description: Used to support unit transformation such as milliseconds to
            seconds. The unit must be supported by [CW metric](https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_MetricDatum.html).
        expectedVersion:
          allOf:
          - $ref: '#/components/schemas/OptionalVersion'
          description: The expected version of the fleet metric record in the registry.
      required:
      - metricName
      - indexName
    UpdateIndexingConfigurationRequest:
      type: object
      properties:
        thingIndexingConfiguration:
          allOf:
          - $ref: '#/components/schemas/ThingIndexingConfiguration'
          description: Thing indexing configuration.
        thingGroupIndexingConfiguration:
          allOf:
          - $ref: '#/components/schemas/ThingGroupIndexingConfiguration'
          description: Thing group indexing configuration.
    UpdateIndexingConfigurationResponse:
      type: object
      properties: {}
    UpdateJobRequest:
      type: object
      properties:
        jobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          description: The ID of the job to be updated.
        description:
          allOf:
          - $ref: '#/components/schemas/JobDescription'
          description: A short text description of the job.
        presignedUrlConfig:
          allOf:
          - $ref: '#/components/schemas/PresignedUrlConfig'
          description: Configuration information for pre-signed S3 URLs.
        jobExecutionsRolloutConfig:
          allOf:
          - $ref: '#/components/schemas/JobExecutionsRolloutConfig'
          description: Allows you to create a staged rollout of the job.
        abortConfig:
          allOf:
          - $ref: '#/components/schemas/AbortConfig'
          description: Allows you to create criteria to abort a job.
        timeoutConfig:
          allOf:
          - $ref: '#/components/schemas/TimeoutConfig'
          description: Specifies the amount of time each device has to finish its
            execution of the job. The timer is started when the job execution status
            is set to `IN_PROGRESS`. If the job execution status is not set to another
            terminal state before the time expires, it will be automatically set to
            `TIMED_OUT`.
        namespaceId:
          allOf:
          - $ref: '#/components/schemas/NamespaceId'
          description: 'The namespace used to indicate that a job is a customer-managed
            job.


            When you specify a value for this parameter, Amazon Web Services IoT Core
            sends jobs notifications to MQTT topics that contain the value in the
            following format.


            `$aws/things/_THING_NAME_ /jobs/_JOB_ID_ /notify-namespace-_NAMESPACE_ID_
            /`


            The `namespaceId` feature is only supported by IoT Greengrass at this
            time. For more information, see [Setting up IoT Greengrass core devices.](https://docs.aws.amazon.com/greengrass/v2/developerguide/setting-up.html)'
        jobExecutionsRetryConfig:
          allOf:
          - $ref: '#/components/schemas/JobExecutionsRetryConfig'
          description: Allows you to create the criteria to retry a job.
      required:
      - jobId
    UpdateMitigationActionRequest:
      type: object
      properties:
        actionName:
          allOf:
          - $ref: '#/components/schemas/MitigationActionName'
          description: The friendly name for the mitigation action. You cannot change
            the name by using `UpdateMitigationAction`. Instead, you must delete and
            recreate the mitigation action with the new name.
        roleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          description: The ARN of the IAM role that is used to apply the mitigation
            action.
        actionParams:
          allOf:
          - $ref: '#/components/schemas/MitigationActionParams'
          description: Defines the type of action and the parameters for that action.
      required:
      - actionName
    UpdateMitigationActionResponse:
      type: object
      properties:
        actionArn:
          allOf:
          - $ref: '#/components/schemas/MitigationActionArn'
          description: The ARN for the new mitigation action.
        actionId:
          allOf:
          - $ref: '#/components/schemas/MitigationActionId'
          description: A unique identifier for the mitigation action.
    UpdatePackageConfigurationRequest:
      type: object
      properties:
        versionUpdateByJobsConfig:
          allOf:
          - $ref: '#/components/schemas/VersionUpdateByJobsConfig'
          description: Configuration to manage job's package version reporting. This
            updates the thing's reserved named shadow that the job targets.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique case-sensitive identifier that you can provide to
            ensure the idempotency of the request. Don't reuse this client token if
            a new idempotent request is required.
    UpdatePackageConfigurationResponse:
      type: object
      properties: {}
    UpdatePackageRequest:
      type: object
      properties:
        packageName:
          allOf:
          - $ref: '#/components/schemas/PackageName'
          description: The name of the target software package.
        description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          description: The package description.
        defaultVersionName:
          allOf:
          - $ref: '#/components/schemas/VersionName'
          description: 'The name of the default package version.


            **Note:** You cannot name a `defaultVersion` and set `unsetDefaultVersion`
            equal to `true` at the same time.'
        unsetDefaultVersion:
          allOf:
          - $ref: '#/components/schemas/UnsetDefaultVersion'
          description: 'Indicates whether you want to remove the named default package
            version from the software package. Set as `true` to remove the default
            package version.


            **Note:** You cannot name a `defaultVersion` and set `unsetDefaultVersion`
            equal to `true` at the same time.'
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique case-sensitive identifier that you can provide to
            ensure the idempotency of the request. Don't reuse this client token if
            a new idempotent request is required.
      required:
      - packageName
    UpdatePackageResponse:
      type: object
      properties: {}
    UpdatePackageVersionRequest:
      type: object
      properties:
        packageName:
          allOf:
          - $ref: '#/components/schemas/PackageName'
          description: The name of the associated software package.
        versionName:
          allOf:
          - $ref: '#/components/schemas/VersionName'
          description: The name of the target package version.
        description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          description: The package version description.
        attributes:
          allOf:
          - $ref: '#/components/schemas/ResourceAttributes'
          description: 'Metadata that can be used to define a package version’s configuration.
            For example, the Amazon S3 file location, configuration options that are
            being sent to the device or fleet.


            **Note:** Attributes can be updated only when the package version is in
            a draft state.


            The combined size of all the attributes on a package version is limited
            to 3KB.'
        artifact:
          allOf:
          - $ref: '#/components/schemas/PackageVersionArtifact'
          description: The various components that make up a software package version.
        action:
          allOf:
          - $ref: '#/components/schemas/PackageVersionAction'
          description: The status that the package version should be assigned. For
            more information, see [Package version lifecycle](https://docs.aws.amazon.com/iot/latest/developerguide/preparing-to-use-software-package-catalog.html#package-version-lifecycle).
        recipe:
          allOf:
          - $ref: '#/components/schemas/PackageVersionRecipe'
          description: The inline job document associated with a software package
            version used for a quick job deployment.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique case-sensitive identifier that you can provide to
            ensure the idempotency of the request. Don't reuse this client token if
            a new idempotent request is required.
      required:
      - packageName
      - versionName
    UpdatePackageVersionResponse:
      type: object
      properties: {}
    UpdateProvisioningTemplateRequest:
      type: object
      properties:
        templateName:
          allOf:
          - $ref: '#/components/schemas/TemplateName'
          description: The name of the provisioning template.
        description:
          allOf:
          - $ref: '#/components/schemas/TemplateDescription'
          description: The description of the provisioning template.
        enabled:
          allOf:
          - $ref: '#/components/schemas/Enabled2'
          description: True to enable the provisioning template, otherwise false.
        defaultVersionId:
          allOf:
          - $ref: '#/components/schemas/TemplateVersionId'
          description: The ID of the default provisioning template version.
        provisioningRoleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          description: The ARN of the role associated with the provisioning template.
            This IoT role grants permission to provision a device.
        preProvisioningHook:
          allOf:
          - $ref: '#/components/schemas/ProvisioningHook'
          description: Updates the pre-provisioning hook template. Only supports template
            of type `FLEET_PROVISIONING`. For more information about provisioning
            template types, see [type](https://docs.aws.amazon.com/iot/latest/apireference/API_CreateProvisioningTemplate.html#iot-CreateProvisioningTemplate-request-type).
        removePreProvisioningHook:
          allOf:
          - $ref: '#/components/schemas/RemoveHook'
          description: Removes pre-provisioning hook template.
      required:
      - templateName
    UpdateProvisioningTemplateResponse:
      type: object
      properties: {}
    UpdateRoleAliasRequest:
      type: object
      properties:
        roleAlias:
          allOf:
          - $ref: '#/components/schemas/RoleAlias'
          description: The role alias to update.
        roleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          description: The role ARN.
        credentialDurationSeconds:
          allOf:
          - $ref: '#/components/schemas/CredentialDurationSeconds'
          description: 'The number of seconds the credential will be valid.


            This value must be less than or equal to the maximum session duration
            of the IAM role that the role alias references.'
      required:
      - roleAlias
    UpdateRoleAliasResponse:
      type: object
      properties:
        roleAlias:
          allOf:
          - $ref: '#/components/schemas/RoleAlias'
          description: The role alias.
        roleAliasArn:
          allOf:
          - $ref: '#/components/schemas/RoleAliasArn'
          description: The role alias ARN.
    UpdateScheduledAuditRequest:
      type: object
      properties:
        frequency:
          allOf:
          - $ref: '#/components/schemas/AuditFrequency'
          description: How often the scheduled audit takes place, either `DAILY`,
            `WEEKLY`, `BIWEEKLY`, or `MONTHLY`. The start time of each audit is determined
            by the system.
        dayOfMonth:
          allOf:
          - $ref: '#/components/schemas/DayOfMonth'
          description: The day of the month on which the scheduled audit takes place.
            This can be `1` through `31` or `LAST`. This field is required if the
            `frequency` parameter is set to `MONTHLY`. If days 29-31 are specified,
            and the month does not have that many days, the audit takes place on the
            "LAST" day of the month.
        dayOfWeek:
          allOf:
          - $ref: '#/components/schemas/DayOfWeek'
          description: The day of the week on which the scheduled audit takes place.
            This can be one of `SUN`, `MON`, `TUE`, `WED`, `THU`, `FRI`, or `SAT`.
            This field is required if the "frequency" parameter is set to `WEEKLY`
            or `BIWEEKLY`.
        targetCheckNames:
          allOf:
          - $ref: '#/components/schemas/TargetAuditCheckNames'
          description: Which checks are performed during the scheduled audit. Checks
            must be enabled for your account. (Use `DescribeAccountAuditConfiguration`
            to see the list of all checks, including those that are enabled or use
            `UpdateAccountAuditConfiguration` to select which checks are enabled.)
        scheduledAuditName:
          allOf:
          - $ref: '#/components/schemas/ScheduledAuditName'
          description: The name of the scheduled audit. (Max. 128 chars)
      required:
      - scheduledAuditName
    UpdateScheduledAuditResponse:
      type: object
      properties:
        scheduledAuditArn:
          allOf:
          - $ref: '#/components/schemas/ScheduledAuditArn'
          description: The ARN of the scheduled audit.
    UpdateSecurityProfileRequest:
      type: object
      properties:
        securityProfileName:
          allOf:
          - $ref: '#/components/schemas/SecurityProfileName'
          description: The name of the security profile you want to update.
        securityProfileDescription:
          allOf:
          - $ref: '#/components/schemas/SecurityProfileDescription'
          description: A description of the security profile.
        behaviors:
          allOf:
          - $ref: '#/components/schemas/Behaviors'
          description: Specifies the behaviors that, when violated by a device (thing),
            cause an alert.
        alertTargets:
          allOf:
          - $ref: '#/components/schemas/AlertTargets'
          description: Where the alerts are sent. (Alerts are always sent to the console.)
        additionalMetricsToRetain:
          allOf:
          - $ref: '#/components/schemas/AdditionalMetricsToRetainList'
          description: '_Please useUpdateSecurityProfileRequest$additionalMetricsToRetainV2
            instead._


            A list of metrics whose data is retained (stored). By default, data is
            retained for any metric used in the profile''s `behaviors`, but it is
            also retained for any metric specified here. Can be used with custom metrics;
            cannot be used with dimensions.'
        additionalMetricsToRetainV2:
          allOf:
          - $ref: '#/components/schemas/AdditionalMetricsToRetainV2List'
          description: A list of metrics whose data is retained (stored). By default,
            data is retained for any metric used in the profile's behaviors, but it
            is also retained for any metric specified here. Can be used with custom
            metrics; cannot be used with dimensions.
        deleteBehaviors:
          allOf:
          - $ref: '#/components/schemas/DeleteBehaviors'
          description: If true, delete all `behaviors` defined for this security profile.
            If any `behaviors` are defined in the current invocation, an exception
            occurs.
        deleteAlertTargets:
          allOf:
          - $ref: '#/components/schemas/DeleteAlertTargets'
          description: If true, delete all `alertTargets` defined for this security
            profile. If any `alertTargets` are defined in the current invocation,
            an exception occurs.
        deleteAdditionalMetricsToRetain:
          allOf:
          - $ref: '#/components/schemas/DeleteAdditionalMetricsToRetain'
          description: If true, delete all `additionalMetricsToRetain` defined for
            this security profile. If any `additionalMetricsToRetain` are defined
            in the current invocation, an exception occurs.
        expectedVersion:
          allOf:
          - $ref: '#/components/schemas/OptionalVersion'
          description: The expected version of the security profile. A new version
            is generated whenever the security profile is updated. If you specify
            a value that is different from the actual version, a `VersionConflictException`
            is thrown.
        metricsExportConfig:
          allOf:
          - $ref: '#/components/schemas/MetricsExportConfig'
          description: Specifies the MQTT topic and role ARN required for metric export.
        deleteMetricsExportConfig:
          allOf:
          - $ref: '#/components/schemas/DeleteMetricsExportConfig'
          description: Set the value as true to delete metrics export related configurations.
      required:
      - securityProfileName
    UpdateSecurityProfileResponse:
      type: object
      properties:
        securityProfileName:
          allOf:
          - $ref: '#/components/schemas/SecurityProfileName'
          description: The name of the security profile that was updated.
        securityProfileArn:
          allOf:
          - $ref: '#/components/schemas/SecurityProfileArn'
          description: The ARN of the security profile that was updated.
        securityProfileDescription:
          allOf:
          - $ref: '#/components/schemas/SecurityProfileDescription'
          description: The description of the security profile.
        behaviors:
          allOf:
          - $ref: '#/components/schemas/Behaviors'
          description: Specifies the behaviors that, when violated by a device (thing),
            cause an alert.
        alertTargets:
          allOf:
          - $ref: '#/components/schemas/AlertTargets'
          description: Where the alerts are sent. (Alerts are always sent to the console.)
        additionalMetricsToRetain:
          allOf:
          - $ref: '#/components/schemas/AdditionalMetricsToRetainList'
          description: '_Please useUpdateSecurityProfileResponse$additionalMetricsToRetainV2
            instead._


            A list of metrics whose data is retained (stored). By default, data is
            retained for any metric used in the security profile''s `behaviors`, but
            it is also retained for any metric specified here.'
        additionalMetricsToRetainV2:
          allOf:
          - $ref: '#/components/schemas/AdditionalMetricsToRetainV2List'
          description: A list of metrics whose data is retained (stored). By default,
            data is retained for any metric used in the profile's behaviors, but it
            is also retained for any metric specified here. Can be used with custom
            metrics; cannot be used with dimensions.
        version:
          allOf:
          - $ref: '#/components/schemas/Version'
          description: The updated version of the security profile.
        creationDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time the security profile was created.
        lastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time the security profile was last modified.
        metricsExportConfig:
          allOf:
          - $ref: '#/components/schemas/MetricsExportConfig'
          description: Specifies the MQTT topic and role ARN required for metric export.
    UpdateStreamRequest:
      type: object
      properties:
        streamId:
          allOf:
          - $ref: '#/components/schemas/StreamId'
          description: The stream ID.
        description:
          allOf:
          - $ref: '#/components/schemas/StreamDescription'
          description: The description of the stream.
        files:
          allOf:
          - $ref: '#/components/schemas/StreamFiles'
          description: The files associated with the stream.
        roleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          description: An IAM role that allows the IoT service principal assumes to
            access your S3 files.
      required:
      - streamId
    UpdateStreamResponse:
      type: object
      properties:
        streamId:
          allOf:
          - $ref: '#/components/schemas/StreamId'
          description: The stream ID.
        streamArn:
          allOf:
          - $ref: '#/components/schemas/StreamArn'
          description: The stream ARN.
        description:
          allOf:
          - $ref: '#/components/schemas/StreamDescription'
          description: A description of the stream.
        streamVersion:
          allOf:
          - $ref: '#/components/schemas/StreamVersion'
          description: The stream version.
    UpdateThingGroupRequest:
      type: object
      properties:
        thingGroupName:
          allOf:
          - $ref: '#/components/schemas/ThingGroupName'
          description: The thing group to update.
        thingGroupProperties:
          allOf:
          - $ref: '#/components/schemas/ThingGroupProperties'
          description: The thing group properties.
        expectedVersion:
          allOf:
          - $ref: '#/components/schemas/OptionalVersion'
          description: The expected version of the thing group. If this does not match
            the version of the thing group being updated, the update will fail.
      required:
      - thingGroupName
      - thingGroupProperties
    UpdateThingGroupResponse:
      type: object
      properties:
        version:
          allOf:
          - $ref: '#/components/schemas/Version'
          description: The version of the updated thing group.
    UpdateThingGroupsForThingRequest:
      type: object
      properties:
        thingName:
          allOf:
          - $ref: '#/components/schemas/ThingName'
          description: The thing whose group memberships will be updated.
        thingGroupsToAdd:
          allOf:
          - $ref: '#/components/schemas/ThingGroupList'
          description: The groups to which the thing will be added.
        thingGroupsToRemove:
          allOf:
          - $ref: '#/components/schemas/ThingGroupList'
          description: The groups from which the thing will be removed.
        overrideDynamicGroups:
          allOf:
          - $ref: '#/components/schemas/OverrideDynamicGroups'
          description: Override dynamic thing groups with static thing groups when
            10-group limit is reached. If a thing belongs to 10 thing groups, and
            one or more of those groups are dynamic thing groups, adding a thing to
            a static group removes the thing from the last dynamic group.
    UpdateThingGroupsForThingResponse:
      type: object
      properties: {}
    UpdateThingRequest:
      type: object
      properties:
        thingName:
          allOf:
          - $ref: '#/components/schemas/ThingName'
          description: 'The name of the thing to update.


            You can''t change a thing''s name. To change a thing''s name, you must
            create a new thing, give it the new name, and then delete the old thing.'
        thingTypeName:
          allOf:
          - $ref: '#/components/schemas/ThingTypeName'
          description: The name of the thing type.
        attributePayload:
          allOf:
          - $ref: '#/components/schemas/AttributePayload'
          description: 'A list of thing attributes, a JSON string containing name-value
            pairs. For example:


            `{\"attributes\":{\"name1\":\"value2\"}}`


            This data is used to add new attributes or update existing attributes.'
        expectedVersion:
          allOf:
          - $ref: '#/components/schemas/OptionalVersion'
          description: The expected version of the thing record in the registry. If
            the version of the record in the registry does not match the expected
            version specified in the request, the `UpdateThing` request is rejected
            with a `VersionConflictException`.
        removeThingType:
          allOf:
          - $ref: '#/components/schemas/RemoveThingType'
          description: Remove a thing type association. If **true** , the association
            is removed.
      required:
      - thingName
      description: The input for the UpdateThing operation.
    UpdateThingResponse:
      type: object
      properties: {}
      description: The output from the UpdateThing operation.
    UpdateThingTypeRequest:
      type: object
      properties:
        thingTypeName:
          allOf:
          - $ref: '#/components/schemas/ThingTypeName'
          description: The name of a thing type.
        thingTypeProperties:
          $ref: '#/components/schemas/ThingTypeProperties'
      required:
      - thingTypeName
    UpdateThingTypeResponse:
      type: object
      properties: {}
    UpdateTopicRuleDestinationRequest:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/AwsArn'
          description: The ARN of the topic rule destination.
        status:
          allOf:
          - $ref: '#/components/schemas/TopicRuleDestinationStatus'
          description: "The status of the topic rule destination. Valid values are:\n\
            \nIN_PROGRESS\n\n    \n\nA topic rule destination was created but has\
            \ not been confirmed. You can set `status` to `IN_PROGRESS` by calling\
            \ `UpdateTopicRuleDestination`. Calling `UpdateTopicRuleDestination` causes\
            \ a new confirmation challenge to be sent to your confirmation endpoint.\n\
            \nENABLED\n\n    \n\nConfirmation was completed, and traffic to this destination\
            \ is allowed. You can set `status` to `DISABLED` by calling `UpdateTopicRuleDestination`.\n\
            \nDISABLED\n\n    \n\nConfirmation was completed, and traffic to this\
            \ destination is not allowed. You can set `status` to `ENABLED` by calling\
            \ `UpdateTopicRuleDestination`.\n\nERROR\n\n    \n\nConfirmation could\
            \ not be completed, for example if the confirmation timed out. You can\
            \ call `GetTopicRuleDestination` for details about the error. You can\
            \ set `status` to `IN_PROGRESS` by calling `UpdateTopicRuleDestination`.\
            \ Calling `UpdateTopicRuleDestination` causes a new confirmation challenge\
            \ to be sent to your confirmation endpoint."
      required:
      - arn
      - status
    UpdateTopicRuleDestinationResponse:
      type: object
      properties: {}
    Url:
      type: string
      minLength: 0
      maxLength: 2000
    UseBase64:
      type: boolean
    UserProperties:
      type: array
      items:
        $ref: '#/components/schemas/UserProperty'
    UserProperty:
      type: object
      properties:
        key:
          allOf:
          - $ref: '#/components/schemas/UserPropertyKey'
          description: A key to be specified in `UserProperty`.
        value:
          allOf:
          - $ref: '#/components/schemas/UserPropertyValue'
          description: A value to be specified in `UserProperty`.
      required:
      - key
      - value
      description: A key-value pair that you define in the header. Both the key and
        the value are either literal strings or valid [substitution templates](https://docs.aws.amazon.com/iot/latest/developerguide/iot-substitution-templates.html).
    UserPropertyKey:
      type: string
      minLength: 0
      maxLength: 1024
    UserPropertyKeyName:
      type: string
      pattern: ^[a-zA-Z0-9:$.]+$
      minLength: 0
      maxLength: 128
    UserPropertyValue:
      type: string
      minLength: 0
      maxLength: 1024
    Valid:
      type: boolean
      default: false
    ValidateSecurityProfileBehaviorsRequest:
      type: object
      properties:
        behaviors:
          allOf:
          - $ref: '#/components/schemas/Behaviors'
          description: Specifies the behaviors that, when violated by a device (thing),
            cause an alert.
      required:
      - behaviors
    ValidateSecurityProfileBehaviorsResponse:
      type: object
      properties:
        valid:
          allOf:
          - $ref: '#/components/schemas/Valid'
          description: True if the behaviors were valid.
        validationErrors:
          allOf:
          - $ref: '#/components/schemas/ValidationErrors'
          description: The list of any errors found in the behaviors.
    ValidationError:
      type: object
      properties:
        errorMessage:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage'
          description: The description of an error found in the behaviors.
      description: Information about an error found in a behavior specification.
    ValidationErrors:
      type: array
      items:
        $ref: '#/components/schemas/ValidationError'
    ValidationException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage2'
      description: The request is not valid.
    Value:
      type: string
      pattern: ^[\s\S]*$
      minLength: 0
      maxLength: 4096
    Variance:
      type: number
      format: double
      default: 0
    VerificationState:
      type: string
      enum:
      - FALSE_POSITIVE
      - BENIGN_POSITIVE
      - TRUE_POSITIVE
      - UNKNOWN
    VerificationStateDescription:
      type: string
      pattern: ^[^\p{Cntrl}]*$
      minLength: 0
      maxLength: 1000
    Version:
      type: integer
      format: int64
      default: 0
    VersionConflictException:
      type: object
      properties:
        message:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage2'
          description: The message for the exception.
      description: An exception thrown when the version of an entity specified with
        the `expectedVersion` parameter does not match the latest version in the system.
    VersionName:
      type: string
      pattern: ^[a-zA-Z0-9-_.]+$
      minLength: 1
      maxLength: 64
    VersionNumber:
      type: integer
      format: int64
      default: 0
    VersionUpdateByJobsConfig:
      type: object
      properties:
        enabled:
          allOf:
          - $ref: '#/components/schemas/EnabledBoolean'
          description: Indicates whether the Job is enabled or not.
        roleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          description: The Amazon Resource Name (ARN) of the role that grants permission
            to the IoT jobs service to update the reserved named shadow when the job
            successfully completes.
      description: 'Configuration to manage IoT Job''s package version reporting.
        If configured, Jobs updates the thing''s reserved named shadow with the package
        version information up on successful job completion.


        **Note:** For each job, the destinationPackageVersions attribute has to be
        set with the correct data for Jobs to report to the thing shadow.'
    VersionsLimitExceededException:
      type: object
      properties:
        message:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage2'
          description: The message for the exception.
      description: The number of policy versions exceeds the limit.
    ViolationEvent:
      type: object
      properties:
        violationId:
          allOf:
          - $ref: '#/components/schemas/ViolationId'
          description: The ID of the violation event.
        thingName:
          allOf:
          - $ref: '#/components/schemas/DeviceDefenderThingName'
          description: The name of the thing responsible for the violation event.
        securityProfileName:
          allOf:
          - $ref: '#/components/schemas/SecurityProfileName'
          description: The name of the security profile whose behavior was violated.
        behavior:
          allOf:
          - $ref: '#/components/schemas/Behavior'
          description: The behavior that was violated.
        metricValue:
          allOf:
          - $ref: '#/components/schemas/MetricValue'
          description: The value of the metric (the measurement).
        violationEventAdditionalInfo:
          allOf:
          - $ref: '#/components/schemas/ViolationEventAdditionalInfo'
          description: The details of a violation event.
        violationEventType:
          allOf:
          - $ref: '#/components/schemas/ViolationEventType'
          description: The type of violation event.
        verificationState:
          allOf:
          - $ref: '#/components/schemas/VerificationState'
          description: The verification state of the violation (detect alarm).
        verificationStateDescription:
          allOf:
          - $ref: '#/components/schemas/VerificationStateDescription'
          description: The description of the verification state of the violation.
        violationEventTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time the violation event occurred.
      description: Information about a Device Defender security profile behavior violation.
    ViolationEventAdditionalInfo:
      type: object
      properties:
        confidenceLevel:
          allOf:
          - $ref: '#/components/schemas/ConfidenceLevel'
          description: The sensitivity of anomalous behavior evaluation. Can be `Low`,
            `Medium`, or `High`.
      description: The details of a violation event.
    ViolationEventOccurrenceRange:
      type: object
      properties:
        startTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The start date and time of a time period in which violation
            events occurred.
        endTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The end date and time of a time period in which violation events
            occurred.
      required:
      - startTime
      - endTime
      description: Specifies the time period of which violation events occurred between.
    ViolationEventType:
      type: string
      enum:
      - in-alarm
      - alarm-cleared
      - alarm-invalidated
    ViolationEvents:
      type: array
      items:
        $ref: '#/components/schemas/ViolationEvent'
    ViolationId:
      type: string
      pattern: ^[a-zA-Z0-9\-]+$
      minLength: 1
      maxLength: 128
    VpcDestinationConfiguration:
      type: object
      properties:
        subnetIds:
          allOf:
          - $ref: '#/components/schemas/SubnetIdList'
          description: The subnet IDs of the VPC destination.
        securityGroups:
          allOf:
          - $ref: '#/components/schemas/SecurityGroupList'
          description: The security groups of the VPC destination.
        vpcId:
          allOf:
          - $ref: '#/components/schemas/VpcId'
          description: The ID of the VPC.
        roleArn:
          allOf:
          - $ref: '#/components/schemas/AwsArn'
          description: The ARN of a role that has permission to create and attach
            to elastic network interfaces (ENIs).
      required:
      - subnetIds
      - vpcId
      - roleArn
      description: The configuration information for a virtual private cloud (VPC)
        destination.
    VpcDestinationProperties:
      type: object
      properties:
        subnetIds:
          allOf:
          - $ref: '#/components/schemas/SubnetIdList'
          description: The subnet IDs of the VPC destination.
        securityGroups:
          allOf:
          - $ref: '#/components/schemas/SecurityGroupList'
          description: The security groups of the VPC destination.
        vpcId:
          allOf:
          - $ref: '#/components/schemas/VpcId'
          description: The ID of the VPC.
        roleArn:
          allOf:
          - $ref: '#/components/schemas/AwsArn'
          description: The ARN of a role that has permission to create and attach
            to elastic network interfaces (ENIs).
      description: The properties of a virtual private cloud (VPC) destination.
    VpcDestinationSummary:
      type: object
      properties:
        subnetIds:
          allOf:
          - $ref: '#/components/schemas/SubnetIdList'
          description: The subnet IDs of the VPC destination.
        securityGroups:
          allOf:
          - $ref: '#/components/schemas/SecurityGroupList'
          description: The security groups of the VPC destination.
        vpcId:
          allOf:
          - $ref: '#/components/schemas/VpcId'
          description: The ID of the VPC.
        roleArn:
          allOf:
          - $ref: '#/components/schemas/AwsArn'
          description: The ARN of a role that has permission to create and attach
            to elastic network interfaces (ENIs).
      description: The summary of a virtual private cloud (VPC) destination.
    VpcId:
      type: string
    WaitingForDataCollectionChecksCount:
      type: integer
    resourceId:
      type: string
    stringValue:
      type: string
    usePrefixAttributeValue:
      type: boolean
      default: false
