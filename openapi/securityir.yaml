openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: security_ir
  x-aws-serviceName: securityir
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-07'
  version: '2018-05-10'
  title: Security Incident Response
  description: |-
    This guide provides documents the action and response elements for customer use of the service.
servers:
- description: The Security Incident Response regional endpoint
  url: https://security-ir.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths:
  /v1/membership/{membershipId}/batch-member-details:
    post:
      operationId: BatchGetMemberAccountDetails
      description: |-
        Grants permission to view an existing membership.
      parameters:
      - name: membershipId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MembershipId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                accountIds:
                  $ref: '#/components/schemas/AWSAccountIds'
      responses:
        '200': {}
  /v1/membership/{membershipId}:
    put:
      operationId: CancelMembership
      description: |-
        Grants permissions to cancel an existing membership.
      parameters:
      - name: membershipId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MembershipId'
      responses:
        '200': {}
    get:
      operationId: GetMembership
      description: |-
        Grants permission to get details of a designated service membership.
      parameters:
      - name: membershipId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MembershipId'
      responses:
        '200': {}
  /v1/cases/{caseId}/close-case:
    post:
      operationId: CloseCase
      description: |-
        Grants permission to close an existing case.
      parameters:
      - name: caseId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CaseId'
      responses:
        '200': {}
  /v1/create-case:
    post:
      operationId: CreateCase
      description: |-
        Grants permission to create a new case.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                clientToken:
                  $ref: '#/components/schemas/String'
                resolverType:
                  $ref: '#/components/schemas/ResolverType'
                title:
                  $ref: '#/components/schemas/CaseTitle'
                description:
                  $ref: '#/components/schemas/CaseDescription'
                engagementType:
                  $ref: '#/components/schemas/EngagementType'
                reportedIncidentStartDate:
                  $ref: '#/components/schemas/Timestamp'
                impactedAccounts:
                  $ref: '#/components/schemas/ImpactedAccounts'
                watchers:
                  $ref: '#/components/schemas/Watchers'
                threatActorIpAddresses:
                  $ref: '#/components/schemas/ThreatActorIpList'
                impactedServices:
                  $ref: '#/components/schemas/ImpactedServicesList'
                impactedAwsRegions:
                  $ref: '#/components/schemas/ImpactedAwsRegionList'
                tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '201': {}
  /v1/cases/{caseId}/create-comment:
    post:
      operationId: CreateCaseComment
      description: |-
        Grants permission to add a comment to an existing case.
      parameters:
      - name: caseId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CaseId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                clientToken:
                  $ref: '#/components/schemas/String'
                body:
                  $ref: '#/components/schemas/CommentBody'
      responses:
        '201': {}
  /v1/membership:
    post:
      operationId: CreateMembership
      description: |-
        Grants permissions to create a new membership.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                clientToken:
                  $ref: '#/components/schemas/String'
                membershipName:
                  $ref: '#/components/schemas/MembershipName'
                incidentResponseTeam:
                  $ref: '#/components/schemas/IncidentResponseTeam'
                optInFeatures:
                  $ref: '#/components/schemas/OptInFeatures'
                tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '201': {}
  /v1/cases/{caseId}/get-case:
    get:
      operationId: GetCase
      description: |-
        Grant permission to view a designated case.
      parameters:
      - name: caseId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CaseId'
      responses:
        '200': {}
  /v1/cases/{caseId}/get-presigned-url/{attachmentId}:
    get:
      operationId: GetCaseAttachmentDownloadUrl
      description: |-
        Grants permission to obtain an Amazon S3 presigned URL to download an attachment.
      parameters:
      - name: caseId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CaseId'
      - name: attachmentId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AttachmentId'
      responses:
        '201': {}
  /v1/cases/{caseId}/get-presigned-url:
    post:
      operationId: GetCaseAttachmentUploadUrl
      description: |-
        Grants permission to upload an attachment to a case.
      parameters:
      - name: caseId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CaseId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fileName:
                  $ref: '#/components/schemas/FileName'
                contentLength:
                  $ref: '#/components/schemas/ContentLength'
                clientToken:
                  $ref: '#/components/schemas/String'
      responses:
        '201': {}
  /v1/cases/{caseId}/list-case-edits:
    post:
      operationId: ListCaseEdits
      description: |-
        Grants permissions to view the aidt log for edits made to a designated case.
      parameters:
      - name: caseId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CaseId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nextToken:
                  $ref: '#/components/schemas/String'
                maxResults:
                  $ref: '#/components/schemas/Integer'
      responses:
        '200': {}
  /v1/list-cases:
    post:
      operationId: ListCases
      description: |-
        Grants permission to list all cases the requester has access to.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nextToken:
                  $ref: '#/components/schemas/String'
                maxResults:
                  $ref: '#/components/schemas/Integer'
      responses:
        '200': {}
  /v1/cases/{caseId}/list-comments:
    post:
      operationId: ListComments
      description: |-
        Grants permissions to list and view comments for a designated case.
      parameters:
      - name: caseId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CaseId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nextToken:
                  $ref: '#/components/schemas/String'
                maxResults:
                  $ref: '#/components/schemas/Integer'
      responses:
        '200': {}
  /v1/memberships:
    post:
      operationId: ListMemberships
      description: |-
        Grants permission to query the memberships a principal has access to.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nextToken:
                  $ref: '#/components/schemas/String'
                maxResults:
                  $ref: '#/components/schemas/Integer'
      responses:
        '200': {}
  /v1/tags/{resourceArn}:
    get:
      operationId: ListTagsForResource
      description: |-
        Grants permission to view currently configured tags on a resource.
      parameters:
      - name: resourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      responses:
        '200': {}
        '403':
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '404':
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    post:
      operationId: TagResource
      description: |-
        Grants permission to add a tag(s) to a designated resource.
      parameters:
      - name: resourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '204': {}
        '403':
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '404':
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    delete:
      operationId: UntagResource
      description: |-
        Grants permission to remove a tag(s) from a designate resource.
      parameters:
      - name: resourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      - name: tagKeys
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/TagKeys'
      responses:
        '200': {}
        '403':
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '404':
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /v1/cases/{caseId}/update-case:
    post:
      operationId: UpdateCase
      description: |-
        Grants permission to update an existing case.
      parameters:
      - name: caseId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CaseId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  $ref: '#/components/schemas/CaseTitle'
                description:
                  $ref: '#/components/schemas/CaseDescription'
                reportedIncidentStartDate:
                  $ref: '#/components/schemas/Timestamp'
                actualIncidentStartDate:
                  $ref: '#/components/schemas/Timestamp'
                engagementType:
                  $ref: '#/components/schemas/EngagementType'
                watchersToAdd:
                  $ref: '#/components/schemas/Watchers'
                watchersToDelete:
                  $ref: '#/components/schemas/Watchers'
                threatActorIpAddressesToAdd:
                  $ref: '#/components/schemas/ThreatActorIpList'
                threatActorIpAddressesToDelete:
                  $ref: '#/components/schemas/ThreatActorIpList'
                impactedServicesToAdd:
                  $ref: '#/components/schemas/ImpactedServicesList'
                impactedServicesToDelete:
                  $ref: '#/components/schemas/ImpactedServicesList'
                impactedAwsRegionsToAdd:
                  $ref: '#/components/schemas/ImpactedAwsRegionList'
                impactedAwsRegionsToDelete:
                  $ref: '#/components/schemas/ImpactedAwsRegionList'
                impactedAccountsToAdd:
                  $ref: '#/components/schemas/ImpactedAccounts'
                impactedAccountsToDelete:
                  $ref: '#/components/schemas/ImpactedAccounts'
      responses:
        '200': {}
  /v1/cases/{caseId}/update-case-comment/{commentId}:
    put:
      operationId: UpdateCaseComment
      description: |-
        Grants permission to update an existing case comment.
      parameters:
      - name: caseId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CaseId'
      - name: commentId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CommentId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                body:
                  $ref: '#/components/schemas/CommentBody'
      responses:
        '200': {}
  /v1/cases/{caseId}/update-case-status:
    post:
      operationId: UpdateCaseStatus
      description: |-
        Grants permission to update the status for a designated cases. Options include `Submitted | Detection and Analysis | Eradication, Containment and Recovery | Post-Incident Activities | Closed`.
      parameters:
      - name: caseId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CaseId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                caseStatus:
                  $ref: '#/components/schemas/SelfManagedCaseStatus'
      responses:
        '201': {}
  /v1/membership/{membershipId}/update-membership:
    put:
      operationId: UpdateMembership
      description: |-
        Grants access to UpdateMembership to change membership configuration.
      parameters:
      - name: membershipId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MembershipId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                membershipName:
                  $ref: '#/components/schemas/MembershipName'
                incidentResponseTeam:
                  $ref: '#/components/schemas/IncidentResponseTeam'
                optInFeatures:
                  $ref: '#/components/schemas/OptInFeatures'
      responses:
        '200': {}
  /v1/cases/{caseId}/update-resolver-type:
    post:
      operationId: UpdateResolverType
      description: |-
        Grants permission to update the resolver type for a case.

        This is a one-way action and cannot be reversed.

        Options include self-supported > AWS-supported.
      parameters:
      - name: caseId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CaseId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resolverType:
                  $ref: '#/components/schemas/ResolverType'
      responses:
        '200': {}
components:
  schemas:
    AWSAccountId:
      type: string
      pattern: ^[0-9]{12}$
      minLength: 12
      maxLength: 12
    AWSAccountIds:
      type: array
      items:
        $ref: '#/components/schemas/AWSAccountId'
    AccessDeniedException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      required:
      - message
      description: ''
    Arn:
      type: string
      pattern: ^arn:aws:security-ir:\w+?-\w+?-\d+:[0-9]{12}:(membership/m-[a-z0-9]{10,32}|case/[0-9]{10})$
      minLength: 12
      maxLength: 1010
    AttachmentId:
      type: string
      pattern: ^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$
    AwsRegion:
      type: string
      enum:
      - af-south-1
      - ap-east-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-south-1
      - ap-south-2
      - ap-southeast-1
      - ap-southeast-2
      - ap-southeast-3
      - ap-southeast-4
      - ap-southeast-5
      - ca-central-1
      - ca-west-1
      - cn-north-1
      - cn-northwest-1
      - eu-central-1
      - eu-central-2
      - eu-north-1
      - eu-south-1
      - eu-south-2
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - il-central-1
      - me-central-1
      - me-south-1
      - sa-east-1
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
    AwsService:
      type: string
      pattern: ^[a-zA-Z0-9 -.():]+$
      minLength: 3
      maxLength: 50
    BatchGetMemberAccountDetailsRequest:
      type: object
      properties:
        membershipId:
          allOf:
          - $ref: '#/components/schemas/MembershipId'
          description: Required element used in combination with BatchGetMemberAccountDetails
            to identify the membership ID to query.
        accountIds:
          allOf:
          - $ref: '#/components/schemas/AWSAccountIds'
          description: Optional element to query the membership relationship status
            to a provided list of account IDs.
      required:
      - membershipId
      - accountIds
    BatchGetMemberAccountDetailsResponse:
      type: object
      properties:
        items:
          allOf:
          - $ref: '#/components/schemas/GetMembershipAccountDetailItems'
          description: The response element providing responses for requests to GetMembershipAccountDetails.
        errors:
          allOf:
          - $ref: '#/components/schemas/GetMembershipAccountDetailErrors'
          description: The response element providing errors messages for requests
            to GetMembershipAccountDetails.
    CancelMembershipRequest:
      type: object
      properties:
        membershipId:
          allOf:
          - $ref: '#/components/schemas/MembershipId'
          description: Required element used in combination with CancelMembershipRequest
            to identify the membership ID to cancel.
      required:
      - membershipId
    CancelMembershipResponse:
      type: object
      properties:
        membershipId:
          allOf:
          - $ref: '#/components/schemas/MembershipId'
          description: The response element providing responses for requests to CancelMembershipRequest.
      required:
      - membershipId
    CaseArn:
      type: string
      pattern: ^arn:aws:security-ir:\w+?-\w+?-\d+:[0-9]{12}:case/[0-9]{10}$
      minLength: 12
      maxLength: 80
    CaseAttachmentAttributes:
      type: object
      properties:
        attachmentId:
          allOf:
          - $ref: '#/components/schemas/AttachmentId'
          description: ''
        fileName:
          allOf:
          - $ref: '#/components/schemas/FileName'
          description: ''
        attachmentStatus:
          allOf:
          - $ref: '#/components/schemas/CaseAttachmentStatus'
          description: ''
        creator:
          allOf:
          - $ref: '#/components/schemas/PrincipalId'
          description: ''
        createdDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: ''
      required:
      - attachmentId
      - fileName
      - attachmentStatus
      - creator
      - createdDate
      description: ''
    CaseAttachmentStatus:
      type: string
      enum:
      - Verified
      - Failed
      - Pending
    CaseAttachmentsList:
      type: array
      items:
        $ref: '#/components/schemas/CaseAttachmentAttributes'
    CaseDescription:
      type: string
      minLength: 1
      maxLength: 8000
    CaseEditAction:
      type: string
      minLength: 1
      maxLength: 100
    CaseEditItem:
      type: object
      properties:
        eventTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: ''
        principal:
          allOf:
          - $ref: '#/components/schemas/String'
          description: ''
        action:
          allOf:
          - $ref: '#/components/schemas/CaseEditAction'
          description: ''
        message:
          allOf:
          - $ref: '#/components/schemas/CaseEditMessage'
          description: ''
      description: ''
    CaseEditItems:
      type: array
      items:
        $ref: '#/components/schemas/CaseEditItem'
    CaseEditMessage:
      type: string
      minLength: 10
      maxLength: 4096
    CaseId:
      type: string
      pattern: ^\d{10,32}
      minLength: 10
      maxLength: 32
    CaseStatus:
      type: string
      enum:
      - Submitted
      - Acknowledged
      - Detection and Analysis
      - Containment, Eradication and Recovery
      - Post-incident Activities
      - Ready to Close
      - Closed
    CaseTitle:
      type: string
      minLength: 1
      maxLength: 300
    CloseCaseRequest:
      type: object
      properties:
        caseId:
          allOf:
          - $ref: '#/components/schemas/CaseId'
          description: Required element used in combination with CloseCase to identify
            the case ID to close.
      required:
      - caseId
    CloseCaseResponse:
      type: object
      properties:
        caseStatus:
          allOf:
          - $ref: '#/components/schemas/CaseStatus'
          description: A response element providing responses for requests to CloseCase.
            This element responds with the case status following the action.
        closedDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: A response element providing responses for requests to CloseCase.
            This element responds with the case closure date following the action.
    ClosureCode:
      type: string
      enum:
      - Investigation Completed
      - Not Resolved
      - False Positive
      - Duplicate
    CommentBody:
      type: string
      minLength: 1
      maxLength: 12000
    CommentId:
      type: string
      pattern: ^\d{6}$
      minLength: 6
      maxLength: 6
    ConflictException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
        resourceId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Element providing the ID of the resource affected.
        resourceType:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Element providing the type of the resource affected.
      required:
      - message
      - resourceId
      - resourceType
      description: ''
    ContentLength:
      type: integer
      format: int64
      minimum: 1
      maximum: 104857600
    CreateCaseCommentRequest:
      type: object
      properties:
        caseId:
          allOf:
          - $ref: '#/components/schemas/CaseId'
          description: Required element used in combination with CreateCaseComment
            to specify a case ID.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: An optional element used in combination with CreateCaseComment.
        body:
          allOf:
          - $ref: '#/components/schemas/CommentBody'
          description: Required element used in combination with CreateCaseComment
            to add content for the new comment.
      required:
      - caseId
      - body
    CreateCaseCommentResponse:
      type: object
      properties:
        commentId:
          allOf:
          - $ref: '#/components/schemas/CommentId'
          description: Response element indicating the new comment ID.
      required:
      - commentId
    CreateCaseRequest:
      type: object
      properties:
        clientToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Required element used in combination with CreateCase.
        resolverType:
          allOf:
          - $ref: '#/components/schemas/ResolverType'
          description: Required element used in combination with CreateCase to identify
            the resolver type. Available resolvers include self-supported | aws-supported.
        title:
          allOf:
          - $ref: '#/components/schemas/CaseTitle'
          description: Required element used in combination with CreateCase to provide
            a title for the new case.
        description:
          allOf:
          - $ref: '#/components/schemas/CaseDescription'
          description: Required element used in combination with CreateCase to provide
            a description for the new case.
        engagementType:
          allOf:
          - $ref: '#/components/schemas/EngagementType'
          description: Required element used in combination with CreateCase to provide
            an engagement type for the new cases. Available engagement types include
            Security Incident | Investigation
        reportedIncidentStartDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: Required element used in combination with CreateCase to provide
            an initial start date for the unauthorized activity.
        impactedAccounts:
          allOf:
          - $ref: '#/components/schemas/ImpactedAccounts'
          description: Required element used in combination with CreateCase to provide
            a list of impacted accounts.
        watchers:
          allOf:
          - $ref: '#/components/schemas/Watchers'
          description: Required element used in combination with CreateCase to provide
            a list of entities to receive notifications for case updates.
        threatActorIpAddresses:
          allOf:
          - $ref: '#/components/schemas/ThreatActorIpList'
          description: An optional element used in combination with CreateCase to
            provide a list of suspicious internet protocol addresses associated with
            unauthorized activity.
        impactedServices:
          allOf:
          - $ref: '#/components/schemas/ImpactedServicesList'
          description: An optional element used in combination with CreateCase to
            provide a list of services impacted.
        impactedAwsRegions:
          allOf:
          - $ref: '#/components/schemas/ImpactedAwsRegionList'
          description: An optional element used in combination with CreateCase to
            provide a list of impacted regions.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: An optional element used in combination with CreateCase to
            add customer specified tags to a case.
      required:
      - resolverType
      - title
      - description
      - engagementType
      - reportedIncidentStartDate
      - impactedAccounts
      - watchers
    CreateCaseResponse:
      type: object
      properties:
        caseId:
          allOf:
          - $ref: '#/components/schemas/CaseId'
          description: A response element providing responses for requests to CreateCase.
            This element responds with the case ID.
      required:
      - caseId
    CreateMembershipRequest:
      type: object
      properties:
        clientToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: An optional element used in combination with CreateMembership.
        membershipName:
          allOf:
          - $ref: '#/components/schemas/MembershipName'
          description: Required element use in combination with CreateMembership to
            create a name for the membership.
        incidentResponseTeam:
          allOf:
          - $ref: '#/components/schemas/IncidentResponseTeam'
          description: Required element use in combination with CreateMembership to
            add customer incident response team members and trusted partners to the
            membership.
        optInFeatures:
          allOf:
          - $ref: '#/components/schemas/OptInFeatures'
          description: Optional element to enable the monitoring and investigation
            opt-in features for the service.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: Optional element for customer configured tags.
      required:
      - membershipName
      - incidentResponseTeam
    CreateMembershipResponse:
      type: object
      properties:
        membershipId:
          allOf:
          - $ref: '#/components/schemas/MembershipId'
          description: Response element for CreateMembership providing the newly created
            membership ID.
      required:
      - membershipId
    CustomerType:
      type: string
      enum:
      - Standalone
      - Organization
    EmailAddress:
      type: string
      pattern: ^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\.[a-zA-Z0-9-]+)*$
      minLength: 6
      maxLength: 254
    EngagementType:
      type: string
      enum:
      - Security Incident
      - Investigation
    FileName:
      type: string
      pattern: ^[a-zA-Z0-9._-]+$
      minLength: 1
      maxLength: 255
    GetCaseAttachmentDownloadUrlRequest:
      type: object
      properties:
        caseId:
          allOf:
          - $ref: '#/components/schemas/CaseId'
          description: Required element for GetCaseAttachmentDownloadUrl to identify
            the case ID for downloading an attachment from.
        attachmentId:
          allOf:
          - $ref: '#/components/schemas/AttachmentId'
          description: Required element for GetCaseAttachmentDownloadUrl to identify
            the attachment ID for downloading an attachment.
      required:
      - caseId
      - attachmentId
    GetCaseAttachmentDownloadUrlResponse:
      type: object
      properties:
        attachmentPresignedUrl:
          allOf:
          - $ref: '#/components/schemas/Url'
          description: Response element providing the Amazon S3 presigned URL to download
            an attachment.
      required:
      - attachmentPresignedUrl
    GetCaseAttachmentUploadUrlRequest:
      type: object
      properties:
        caseId:
          allOf:
          - $ref: '#/components/schemas/CaseId'
          description: Required element for GetCaseAttachmentUploadUrl to identify
            the case ID for uploading an attachment to.
        fileName:
          allOf:
          - $ref: '#/components/schemas/FileName'
          description: Required element for GetCaseAttachmentUploadUrl to identify
            the file name of the attachment to upload.
        contentLength:
          allOf:
          - $ref: '#/components/schemas/ContentLength'
          description: Required element for GetCaseAttachmentUploadUrl to identify
            the size od the file attachment.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Optional element for customer provided token.
      required:
      - caseId
      - fileName
      - contentLength
    GetCaseAttachmentUploadUrlResponse:
      type: object
      properties:
        attachmentPresignedUrl:
          allOf:
          - $ref: '#/components/schemas/Url'
          description: Response element providing the Amazon S3 presigned UTL to upload
            the attachment.
      required:
      - attachmentPresignedUrl
    GetCaseRequest:
      type: object
      properties:
        caseId:
          allOf:
          - $ref: '#/components/schemas/CaseId'
          description: Required element for GetCase to identify the requested case
            ID.
      required:
      - caseId
    GetCaseResponse:
      type: object
      properties:
        title:
          allOf:
          - $ref: '#/components/schemas/CaseTitle'
          description: Response element for GetCase that provides the case title.
        caseArn:
          allOf:
          - $ref: '#/components/schemas/CaseArn'
          description: Response element for GetCase that provides the case ARN
        description:
          allOf:
          - $ref: '#/components/schemas/CaseDescription'
          description: Response element for GetCase that provides contents of the
            case description.
        caseStatus:
          allOf:
          - $ref: '#/components/schemas/CaseStatus'
          description: Response element for GetCase that provides the case status.
            Options for statuses include `Submitted | Detection and Analysis | Eradication,
            Containment and Recovery | Post-Incident Activities | Closed `
        engagementType:
          allOf:
          - $ref: '#/components/schemas/EngagementType'
          description: Response element for GetCase that provides the engagement type.
            Options for engagement type include `Active Security Event | Investigations`
        reportedIncidentStartDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: Response element for GetCase that provides the customer provided
            incident start date.
        actualIncidentStartDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: Response element for GetCase that provides the actual incident
            start date as identified by data analysis during the investigation.
        impactedAwsRegions:
          allOf:
          - $ref: '#/components/schemas/ImpactedAwsRegionList'
          description: Response element for GetCase that provides the impacted regions.
        threatActorIpAddresses:
          allOf:
          - $ref: '#/components/schemas/ThreatActorIpList'
          description: Response element for GetCase that provides a list of suspicious
            IP addresses associated with unauthorized activity.
        pendingAction:
          allOf:
          - $ref: '#/components/schemas/PendingAction'
          description: Response element for GetCase that provides identifies the case
            is waiting on customer input.
        impactedAccounts:
          allOf:
          - $ref: '#/components/schemas/ImpactedAccounts'
          description: Response element for GetCase that provides a list of impacted
            accounts.
        watchers:
          allOf:
          - $ref: '#/components/schemas/Watchers'
          description: Response element for GetCase that provides a list of Watchers
            added to the case.
        createdDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: Response element for GetCase that provides the date the case
            was created.
        lastUpdatedDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: Response element for GetCase that provides the date a case
            was last modified.
        closureCode:
          allOf:
          - $ref: '#/components/schemas/ClosureCode'
          description: Response element for GetCase that provides the summary code
            for why a case was closed.
        resolverType:
          allOf:
          - $ref: '#/components/schemas/ResolverType'
          description: Response element for GetCase that provides the current resolver
            types. Options include ` self-supported | AWS-supported`.
        impactedServices:
          allOf:
          - $ref: '#/components/schemas/ImpactedServicesList'
          description: Response element for GetCase that provides a list of impacted
            services.
        caseAttachments:
          allOf:
          - $ref: '#/components/schemas/CaseAttachmentsList'
          description: Response element for GetCase that provides a list of current
            case attachments.
        closedDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: Response element for GetCase that provides the date a specified
            case was closed.
    GetMembershipAccountDetailError:
      type: object
      properties:
        accountId:
          allOf:
          - $ref: '#/components/schemas/AWSAccountId'
          description: ''
        error:
          allOf:
          - $ref: '#/components/schemas/String'
          description: ''
        message:
          allOf:
          - $ref: '#/components/schemas/String'
          description: ''
      required:
      - accountId
      - error
      - message
      description: ''
    GetMembershipAccountDetailErrors:
      type: array
      items:
        $ref: '#/components/schemas/GetMembershipAccountDetailError'
    GetMembershipAccountDetailItem:
      type: object
      properties:
        accountId:
          allOf:
          - $ref: '#/components/schemas/AWSAccountId'
          description: ''
        relationshipStatus:
          allOf:
          - $ref: '#/components/schemas/MembershipAccountRelationshipStatus'
          description: ''
        relationshipType:
          allOf:
          - $ref: '#/components/schemas/MembershipAccountRelationshipType'
          description: ''
      description: ''
    GetMembershipAccountDetailItems:
      type: array
      items:
        $ref: '#/components/schemas/GetMembershipAccountDetailItem'
    GetMembershipRequest:
      type: object
      properties:
        membershipId:
          allOf:
          - $ref: '#/components/schemas/MembershipId'
          description: Required element for GetMembership to identify the membership
            ID to query.
      required:
      - membershipId
    GetMembershipResponse:
      type: object
      properties:
        membershipId:
          allOf:
          - $ref: '#/components/schemas/MembershipId'
          description: Response element for GetMembership that provides the queried
            membership ID.
        accountId:
          allOf:
          - $ref: '#/components/schemas/AWSAccountId'
          description: Response element for GetMembership that provides the configured
            account for managing the membership.
        region:
          allOf:
          - $ref: '#/components/schemas/AwsRegion'
          description: Response element for GetMembership that provides the configured
            region for managing the membership.
        membershipName:
          allOf:
          - $ref: '#/components/schemas/MembershipName'
          description: Response element for GetMembership that provides the configured
            membership name.
        membershipArn:
          allOf:
          - $ref: '#/components/schemas/MembershipArn'
          description: Response element for GetMembership that provides the membership
            ARN.
        membershipStatus:
          allOf:
          - $ref: '#/components/schemas/MembershipStatus'
          description: Response element for GetMembership that provides the current
            membership status.
        membershipActivationTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: Response element for GetMembership that provides the configured
            membership activation timestamp.
        membershipDeactivationTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: Response element for GetMembership that provides the configured
            membership name deactivation timestamp.
        customerType:
          allOf:
          - $ref: '#/components/schemas/CustomerType'
          description: Response element for GetMembership that provides the configured
            membership type. Options include ` Standalone | Organizations`.
        numberOfAccountsCovered:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: Response element for GetMembership that provides the number
            of accounts in the membership.
        incidentResponseTeam:
          allOf:
          - $ref: '#/components/schemas/IncidentResponseTeam'
          description: Response element for GetMembership that provides the configured
            membership incident response team members.
        optInFeatures:
          allOf:
          - $ref: '#/components/schemas/OptInFeatures'
          description: Response element for GetMembership that provides the if opt-in
            features have been enabled.
      required:
      - membershipId
    IPAddress:
      type: string
      pattern: ^(?:(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))|(?:(?:[A-F0-9]{1,4}:){7}[A-F0-9]{1,4})|(?:(?:[A-F0-9]{1,4}:){6}(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))$
    ImpactedAccounts:
      type: array
      items:
        $ref: '#/components/schemas/AWSAccountId'
    ImpactedAwsRegion:
      type: object
      properties:
        region:
          allOf:
          - $ref: '#/components/schemas/AwsRegion'
          description: ''
      required:
      - region
      description: ''
    ImpactedAwsRegionList:
      type: array
      items:
        $ref: '#/components/schemas/ImpactedAwsRegion'
    ImpactedServicesList:
      type: array
      items:
        $ref: '#/components/schemas/AwsService'
    IncidentResponder:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/IncidentResponderName'
          description: ''
        jobTitle:
          allOf:
          - $ref: '#/components/schemas/JobTitle'
          description: ''
        email:
          allOf:
          - $ref: '#/components/schemas/EmailAddress'
          description: ''
      required:
      - name
      - jobTitle
      - email
      description: ''
    IncidentResponderName:
      type: string
      minLength: 3
      maxLength: 50
    IncidentResponseTeam:
      type: array
      items:
        $ref: '#/components/schemas/IncidentResponder'
    InternalServerException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
        retryAfterSeconds:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: Element providing advice to clients on when the call can be
            safely retried.
      required:
      - message
      description: ''
    InvalidTokenException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      required:
      - message
      description: ''
    JobTitle:
      type: string
      minLength: 1
      maxLength: 50
    ListCaseEditsRequest:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Optional element for a customer provided token.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: Optional element to identify how many results to obtain. There
            is a maximum value of 25.
        caseId:
          allOf:
          - $ref: '#/components/schemas/CaseId'
          description: Required element used with ListCaseEdits to identify the case
            to query.
      required:
      - caseId
    ListCaseEditsResponse:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Optional element.
        items:
          allOf:
          - $ref: '#/components/schemas/CaseEditItems'
          description: Response element for ListCaseEdits that includes the action,
            eventtimestamp, message, and principal for the response.
        total:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: Response element for ListCaseEdits that identifies the total
            number of edits.
    ListCasesItem:
      type: object
      properties:
        caseId:
          allOf:
          - $ref: '#/components/schemas/CaseId'
          description: ''
        lastUpdatedDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: ''
        title:
          allOf:
          - $ref: '#/components/schemas/CaseTitle'
          description: ''
        caseArn:
          allOf:
          - $ref: '#/components/schemas/CaseArn'
          description: ''
        engagementType:
          allOf:
          - $ref: '#/components/schemas/EngagementType'
          description: ''
        caseStatus:
          allOf:
          - $ref: '#/components/schemas/CaseStatus'
          description: ''
        createdDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: ''
        closedDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: ''
        resolverType:
          allOf:
          - $ref: '#/components/schemas/ResolverType'
          description: ''
        pendingAction:
          allOf:
          - $ref: '#/components/schemas/PendingAction'
          description: ''
      required:
      - caseId
      description: ''
    ListCasesItems:
      type: array
      items:
        $ref: '#/components/schemas/ListCasesItem'
    ListCasesRequest:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Optional element.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: Optional element for ListCases to limit the number of responses.
    ListCasesResponse:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Optional element.
        items:
          allOf:
          - $ref: '#/components/schemas/ListCasesItems'
          description: Response element for ListCases that includes caseARN, caseID,
            caseStatus, closedDate, createdDate, engagementType, lastUpdatedDate,
            pendingAction, resolverType, and title for each response.
        total:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: Response element for ListCases providing the total number of
            responses.
    ListCommentsItem:
      type: object
      properties:
        commentId:
          allOf:
          - $ref: '#/components/schemas/CommentId'
          description: ''
        createdDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: ''
        lastUpdatedDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: ''
        creator:
          allOf:
          - $ref: '#/components/schemas/PrincipalId'
          description: ''
        lastUpdatedBy:
          allOf:
          - $ref: '#/components/schemas/PrincipalId'
          description: ''
        body:
          allOf:
          - $ref: '#/components/schemas/CommentBody'
          description: ''
      required:
      - commentId
      description: ''
    ListCommentsItems:
      type: array
      items:
        $ref: '#/components/schemas/ListCommentsItem'
    ListCommentsRequest:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Optional element.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: Optional element for ListComments to limit the number of responses.
        caseId:
          allOf:
          - $ref: '#/components/schemas/CaseId'
          description: Required element for ListComments to designate the case to
            query.
      required:
      - caseId
    ListCommentsResponse:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Optional request elements.
        items:
          allOf:
          - $ref: '#/components/schemas/ListCommentsItems'
          description: Response element for ListComments providing the body, commentID,
            createDate, creator, lastUpdatedBy and lastUpdatedDate for each response.
        total:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: Response element for ListComments identifying the number of
            responses.
    ListMembershipItem:
      type: object
      properties:
        membershipId:
          allOf:
          - $ref: '#/components/schemas/MembershipId'
          description: ''
        accountId:
          allOf:
          - $ref: '#/components/schemas/AWSAccountId'
          description: ''
        region:
          allOf:
          - $ref: '#/components/schemas/AwsRegion'
          description: ''
        membershipArn:
          allOf:
          - $ref: '#/components/schemas/MembershipArn'
          description: ''
        membershipStatus:
          allOf:
          - $ref: '#/components/schemas/MembershipStatus'
          description: ''
      required:
      - membershipId
      description: ''
    ListMembershipItems:
      type: array
      items:
        $ref: '#/components/schemas/ListMembershipItem'
    ListMembershipsRequest:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Optional element.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: Request element for ListMemberships to limit the number of
            responses.
    ListMembershipsResponse:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Optional element.
        items:
          allOf:
          - $ref: '#/components/schemas/ListMembershipItems'
          description: Request element for ListMemberships including the accountID,
            membershipARN, membershipID, membershipStatus, and region for each response.
    ListTagsForResourceInput:
      type: object
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: Required element for ListTagsForResource to provide the ARN
            to identify a specific resource.
      required:
      - resourceArn
    ListTagsForResourceOutput:
      type: object
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: Response element for ListTagsForResource providing content
            for each configured tag.
      required:
      - tags
    MembershipAccountRelationshipStatus:
      type: string
      enum:
      - Associated
      - Disassociated
    MembershipAccountRelationshipType:
      type: string
      enum:
      - Organization
    MembershipArn:
      type: string
      pattern: ^arn:aws:security-ir:\w+?-\w+?-\d+:[0-9]{12}:membership/m-[a-z0-9]{10,32}$
      minLength: 12
      maxLength: 80
    MembershipId:
      type: string
      pattern: ^m-[a-z0-9]{10,32}$
      minLength: 12
      maxLength: 34
    MembershipName:
      type: string
      minLength: 3
      maxLength: 50
    MembershipStatus:
      type: string
      enum:
      - Active
      - Cancelled
      - Terminated
    OptInFeature:
      type: object
      properties:
        featureName:
          allOf:
          - $ref: '#/components/schemas/OptInFeatureName'
          description: ''
        isEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: ''
      required:
      - featureName
      - isEnabled
      description: ''
    OptInFeatureName:
      type: string
      enum:
      - Triage
    OptInFeatures:
      type: array
      items:
        $ref: '#/components/schemas/OptInFeature'
    PendingAction:
      type: string
      enum:
      - Customer
      - None
    PersonName:
      type: string
      minLength: 1
      maxLength: 50
    PrincipalId:
      type: string
      pattern: (^internal:midway:([a-z]{3,8}|svc-mw-[0-9]{12}[a-zA-Z0-9-]{5,20})$)|(^external:aws:\d{12}$)
    ResolverType:
      type: string
      enum:
      - AWS
      - Self
    ResourceNotFoundException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      required:
      - message
      description: ''
    SecurityIncidentResponseNotActiveException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      required:
      - message
      description: ''
    SelfManagedCaseStatus:
      type: string
      enum:
      - Submitted
      - Detection and Analysis
      - Containment, Eradication and Recovery
      - Post-incident Activities
    ServiceQuotaExceededException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
        resourceId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Element that provides the ID of the resource affected.
        resourceType:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Element that provides the type of the resource affected.
        serviceCode:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Element that provides the originating service who made the
            call.
        quotaCode:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Element that provides the quota that was exceeded.
      required:
      - message
      - resourceId
      - resourceType
      - serviceCode
      - quotaCode
      description: ''
    TagKey:
      type: string
      minLength: 1
      maxLength: 128
    TagKeys:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
    TagMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
    TagResourceInput:
      type: object
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: Required element for TagResource to identify the ARN for the
            resource to add a tag to.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: Required element for ListTagsForResource to provide the content
            for a tag.
      required:
      - resourceArn
      - tags
    TagResourceOutput:
      type: object
      properties: {}
    TagValue:
      type: string
      minLength: 0
      maxLength: 256
    ThreatActorIp:
      type: object
      properties:
        ipAddress:
          allOf:
          - $ref: '#/components/schemas/IPAddress'
          description: ''
        userAgent:
          allOf:
          - $ref: '#/components/schemas/UserAgent'
          description: ''
      required:
      - ipAddress
      description: ''
    ThreatActorIpList:
      type: array
      items:
        $ref: '#/components/schemas/ThreatActorIp'
    ThrottlingException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
        serviceCode:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Element providing the service code of the originating service.
        quotaCode:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Element providing the quota of the originating service.
        retryAfterSeconds:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: Element providing advice to clients on when the call can be
            safely retried.
      required:
      - message
      description: ''
    UntagResourceInput:
      type: object
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: Required element for UnTagResource to identify the ARN for
            the resource to remove a tag from.
        tagKeys:
          allOf:
          - $ref: '#/components/schemas/TagKeys'
          description: Required element for UnTagResource to identify tag to remove.
      required:
      - resourceArn
      - tagKeys
    UntagResourceOutput:
      type: object
      properties: {}
    UpdateCaseCommentRequest:
      type: object
      properties:
        caseId:
          allOf:
          - $ref: '#/components/schemas/CaseId'
          description: Required element for UpdateCaseComment to identify the case
            ID containing the comment to be updated.
        commentId:
          allOf:
          - $ref: '#/components/schemas/CommentId'
          description: Required element for UpdateCaseComment to identify the case
            ID to be updated.
        body:
          allOf:
          - $ref: '#/components/schemas/CommentBody'
          description: Required element for UpdateCaseComment to identify the content
            for the comment to be updated.
      required:
      - caseId
      - commentId
      - body
    UpdateCaseCommentResponse:
      type: object
      properties:
        commentId:
          allOf:
          - $ref: '#/components/schemas/CommentId'
          description: Response element for UpdateCaseComment providing the updated
            comment ID.
        body:
          allOf:
          - $ref: '#/components/schemas/CommentBody'
          description: Response element for UpdateCaseComment providing the updated
            comment content.
      required:
      - commentId
    UpdateCaseRequest:
      type: object
      properties:
        caseId:
          allOf:
          - $ref: '#/components/schemas/CaseId'
          description: Required element for UpdateCase to identify the case ID for
            updates.
        title:
          allOf:
          - $ref: '#/components/schemas/CaseTitle'
          description: Optional element for UpdateCase to provide content for the
            title field.
        description:
          allOf:
          - $ref: '#/components/schemas/CaseDescription'
          description: Optional element for UpdateCase to provide content for the
            description field.
        reportedIncidentStartDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: Optional element for UpdateCase to provide content for the
            customer reported incident start date field.
        actualIncidentStartDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: Optional element for UpdateCase to provide content for the
            incident start date field.
        engagementType:
          allOf:
          - $ref: '#/components/schemas/EngagementType'
          description: Optional element for UpdateCase to provide content for the
            engagement type field. `Available engagement types include Security Incident
            | Investigation`.
        watchersToAdd:
          allOf:
          - $ref: '#/components/schemas/Watchers'
          description: Optional element for UpdateCase to provide content to add additional
            watchers to a case.
        watchersToDelete:
          allOf:
          - $ref: '#/components/schemas/Watchers'
          description: Optional element for UpdateCase to provide content to remove
            existing watchers from a case.
        threatActorIpAddressesToAdd:
          allOf:
          - $ref: '#/components/schemas/ThreatActorIpList'
          description: Optional element for UpdateCase to provide content to add additional
            suspicious IP addresses related to a case.
        threatActorIpAddressesToDelete:
          allOf:
          - $ref: '#/components/schemas/ThreatActorIpList'
          description: Optional element for UpdateCase to provide content to remove
            suspicious IP addresses from a case.
        impactedServicesToAdd:
          allOf:
          - $ref: '#/components/schemas/ImpactedServicesList'
          description: Optional element for UpdateCase to provide content to add services
            impacted.
        impactedServicesToDelete:
          allOf:
          - $ref: '#/components/schemas/ImpactedServicesList'
          description: Optional element for UpdateCase to provide content to remove
            services impacted.
        impactedAwsRegionsToAdd:
          allOf:
          - $ref: '#/components/schemas/ImpactedAwsRegionList'
          description: Optional element for UpdateCase to provide content to add regions
            impacted.
        impactedAwsRegionsToDelete:
          allOf:
          - $ref: '#/components/schemas/ImpactedAwsRegionList'
          description: Optional element for UpdateCase to provide content to remove
            regions impacted.
        impactedAccountsToAdd:
          allOf:
          - $ref: '#/components/schemas/ImpactedAccounts'
          description: Optional element for UpdateCase to provide content to add accounts
            impacted.
        impactedAccountsToDelete:
          allOf:
          - $ref: '#/components/schemas/ImpactedAccounts'
          description: Optional element for UpdateCase to provide content to add accounts
            impacted.
      required:
      - caseId
    UpdateCaseResponse:
      type: object
      properties: {}
    UpdateCaseStatusRequest:
      type: object
      properties:
        caseId:
          allOf:
          - $ref: '#/components/schemas/CaseId'
          description: Required element for UpdateCaseStatus to identify the case
            to update.
        caseStatus:
          allOf:
          - $ref: '#/components/schemas/SelfManagedCaseStatus'
          description: Required element for UpdateCaseStatus to identify the status
            for a case. Options include `Submitted | Detection and Analysis | Containment,
            Eradication and Recovery | Post-incident Activities`.
      required:
      - caseId
      - caseStatus
    UpdateCaseStatusResponse:
      type: object
      properties:
        caseStatus:
          allOf:
          - $ref: '#/components/schemas/SelfManagedCaseStatus'
          description: Response element for UpdateCaseStatus showing the newly configured
            status.
    UpdateMembershipRequest:
      type: object
      properties:
        membershipId:
          allOf:
          - $ref: '#/components/schemas/MembershipId'
          description: Required element for UpdateMembership to identify the membership
            to update.
        membershipName:
          allOf:
          - $ref: '#/components/schemas/MembershipName'
          description: Optional element for UpdateMembership to update the membership
            name.
        incidentResponseTeam:
          allOf:
          - $ref: '#/components/schemas/IncidentResponseTeam'
          description: Optional element for UpdateMembership to update the membership
            name.
        optInFeatures:
          allOf:
          - $ref: '#/components/schemas/OptInFeatures'
          description: Optional element for UpdateMembership to enable or disable
            opt-in features for the service.
      required:
      - membershipId
    UpdateMembershipResponse:
      type: object
      properties: {}
    UpdateResolverTypeRequest:
      type: object
      properties:
        caseId:
          allOf:
          - $ref: '#/components/schemas/CaseId'
          description: Required element for UpdateResolverType to identify the case
            to update.
        resolverType:
          allOf:
          - $ref: '#/components/schemas/ResolverType'
          description: Required element for UpdateResolverType to identify the new
            resolver.
      required:
      - caseId
      - resolverType
    UpdateResolverTypeResponse:
      type: object
      properties:
        caseId:
          allOf:
          - $ref: '#/components/schemas/CaseId'
          description: Response element for UpdateResolver identifying the case ID
            being updated.
        caseStatus:
          allOf:
          - $ref: '#/components/schemas/CaseStatus'
          description: Response element for UpdateResolver identifying the current
            status of the case.
        resolverType:
          allOf:
          - $ref: '#/components/schemas/ResolverType'
          description: Response element for UpdateResolver identifying the current
            resolver of the case.
      required:
      - caseId
    Url:
      type: string
      pattern: ^https?://(?:www.)?[a-zA-Z0-9@:._+~#=-]{2,256}\.[a-z]{2,6}\b(?:[-a-zA-Z0-9@:%_+.~#?&/=]{0,2048})$
    UserAgent:
      type: string
      minLength: 1
      maxLength: 500
    ValidationException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
        reason:
          allOf:
          - $ref: '#/components/schemas/ValidationExceptionReason'
          description: Element that provides the reason the request failed validation.
        fieldList:
          allOf:
          - $ref: '#/components/schemas/ValidationExceptionFieldList'
          description: Element that provides the list of field(s) that caused the
            error, if applicable.
      required:
      - message
      - reason
      description: ''
    ValidationExceptionField:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: ''
        message:
          allOf:
          - $ref: '#/components/schemas/String'
          description: ''
      required:
      - name
      - message
      description: ''
    ValidationExceptionFieldList:
      type: array
      items:
        $ref: '#/components/schemas/ValidationExceptionField'
    ValidationExceptionReason:
      type: string
      enum:
      - UNKNOWN_OPERATION
      - CANNOT_PARSE
      - FIELD_VALIDATION_FAILED
      - OTHER
    Watcher:
      type: object
      properties:
        email:
          allOf:
          - $ref: '#/components/schemas/EmailAddress'
          description: ''
        name:
          allOf:
          - $ref: '#/components/schemas/PersonName'
          description: ''
        jobTitle:
          allOf:
          - $ref: '#/components/schemas/JobTitle'
          description: ''
      required:
      - email
      description: ''
    Watchers:
      type: array
      items:
        $ref: '#/components/schemas/Watcher'
