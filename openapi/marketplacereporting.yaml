openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: marketplace_reporting
  x-aws-serviceName: marketplacereporting
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-07'
  version: '2018-05-10'
  title: AWS Marketplace Reporting Service
  description: |-
    The Amazon Web Services Marketplace `GetBuyerDashboard` API enables you to get a procurement insights dashboard programmatically. The API gets the agreement and cost analysis dashboards with data for all of the Amazon Web Services accounts in your Amazon Web Services Organization.

    To use the Amazon Web Services Marketplace Reporting API, you must complete the following prerequisites:

      * Enable all features for your organization. For more information, see [Enabling all features for an organization with Organizations](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_org_support-all-features.html), in the _Organizations User Guide_.

      * Call the service as the Organizations management account or an account registered as a delegated administrator for the procurement insights service.

    For more information about management accounts, see [Tutorial: Creating and configuring an organization](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_tutorials_basic.html) and [Managing the management account with Organizations](https://docs.aws.amazon.com/organizations/latest/userguide/orgs-manage_accounts_management.html), both in the _Organizations User Guide_.

    For more information about delegated administrators, see [Using delegated administrators](https://docs.aws.amazon.com/marketplace/latest/buyerguide/management-delegates.html), in the _Amazon Web Services Marketplace Buyer Guide_.

      * Create an IAM policy that enables the `aws-marketplace:GetBuyerDashboard` and `organizations:DescribeOrganization` permissions. In addition, the management account requires the `organizations:EnableAWSServiceAccess` and `iam:CreateServiceLinkedRole` permissions to create. For more information about creating the policy, see [Policies and permissions in Identity and Access Management](https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html), in the _IAM User Guide_.

    Access can be shared only by registering the desired linked account as a delegated administrator. That requires `organizations:RegisterDelegatedAdministrator` `organizations:ListDelegatedAdministrators` and `organizations:DeregisterDelegatedAdministrator` permissions.

      * Use the Amazon Web Services Marketplace console to create the `AWSServiceRoleForProcurementInsightsPolicy` service-linked role. The role enables Amazon Web Services Marketplace procurement visibility integration. The management account requires an IAM policy with the `organizations:EnableAWSServiceAccess` and `iam:CreateServiceLinkedRole` permissions to create the service-linked role and enable the service access. For more information, see [Granting access to Organizations](https://docs.aws.amazon.com/marketplace/latest/buyerguide/orgs-access-slr.html) and [Service-linked role to share procurement data](https://docs.aws.amazon.com/marketplace/latest/buyerguide/buyer-service-linked-role-procurement.html) in the _Amazon Web Services Marketplace Buyer Guide_.

      * After creating the service-linked role, you must enable trusted access that grants Amazon Web Services Marketplace permission to access data from your Organizations. For more information, see [Granting access to Organizations](https://docs.aws.amazon.com/marketplace/latest/buyerguide/orgs-access-slr.html) in the _Amazon Web Services Marketplace Buyer Guide_.
servers:
- description: The AWS Marketplace Reporting Service regional endpoint
  url: https://reporting-marketplace.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths:
  /getBuyerDashboard:
    post:
      operationId: GetBuyerDashboard
      description: |-
        Generates an embedding URL for an Amazon QuickSight dashboard for an anonymous user.

        This API is available only to Amazon Web Services Organization management accounts or delegated administrators registered for the procurement insights (`procurement-insights.marketplace.amazonaws.com`) feature.

        The following rules apply to a generated URL:

          * It contains a temporary bearer token, valid for 5 minutes after it is generated. Once redeemed within that period, it cannot be re-used again.

          * It has a session lifetime of one hour. The 5-minute validity period runs separately from the session lifetime.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                dashboardIdentifier:
                  $ref: '#/components/schemas/DashboardIdentifier'
                embeddingDomains:
                  $ref: '#/components/schemas/EmbeddingDomains'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            The request is malformed, or it contains an error such as an invalid parameter. Ensure the request has all required parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            The operation failed due to a server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '401':
          description: |-
            You do not have permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
components:
  schemas:
    AccessDeniedException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      description: You do not have sufficient access to perform this action.
    BadRequestException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      description: The request is malformed, or it contains an error such as an invalid
        parameter. Ensure the request has all required parameters.
    DashboardIdentifier:
      type: string
      pattern: ^arn:aws:aws-marketplace::[0-9]{12}:AWSMarketplace/ReportingData/(Agreement_V1/Dashboard/AgreementSummary_V1|BillingEvent_V1/Dashboard/CostAnalysis_V1)$
      minLength: 1
      maxLength: 1023
    EmbeddingDomain:
      type: string
      pattern: ^(https://[a-zA-Z\.\*0-9\-_]+[\.]{1}[a-zA-Z]{1,}[a-zA-Z0-9&?/-_=]*[a-zA-Z\*0-9/]+|http[s]*://localhost(:[0-9]{1,5})?)$
      minLength: 1
      maxLength: 2000
    EmbeddingDomains:
      type: array
      items:
        $ref: '#/components/schemas/EmbeddingDomain'
    GetBuyerDashboardInput:
      type: object
      properties:
        dashboardIdentifier:
          allOf:
          - $ref: '#/components/schemas/DashboardIdentifier'
          description: The ARN of the requested dashboard.
        embeddingDomains:
          allOf:
          - $ref: '#/components/schemas/EmbeddingDomains'
          description: Fully qualified domains that you add to the allow list for
            access to the generated URL that is then embedded. You can list up to
            two domains or subdomains in each API call. To include all subdomains
            under a specific domain, use `*`. For example, `https://*.amazon.com`
            includes all subdomains under `https://aws.amazon.com`.
      required:
      - dashboardIdentifier
      - embeddingDomains
    GetBuyerDashboardOutput:
      type: object
      properties:
        embedUrl:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The dashboard's embedding URL.
        dashboardIdentifier:
          allOf:
          - $ref: '#/components/schemas/DashboardIdentifier'
          description: The ARN of the returned dashboard.
        embeddingDomains:
          allOf:
          - $ref: '#/components/schemas/EmbeddingDomains'
          description: The fully qualified domains specified in the request. The domains
            enable access to the generated URL that is then embedded. You can list
            up to two domains or subdomains in each API call. To include all subdomains
            under a specific domain, use `*`. For example, `https://*.amazon.com`
            includes all subdomains under `https://aws.amazon.com`.
      required:
      - embedUrl
      - dashboardIdentifier
      - embeddingDomains
    InternalServerException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      description: The operation failed due to a server error.
    UnauthorizedException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      description: You do not have permission to perform this action.
