openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: iotsitewise
  x-aws-serviceName: iotsitewise
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-07'
  version: '2019-12-02'
  title: AWS IoT SiteWise
  description: |-
    Welcome to the IoT SiteWise API Reference. IoT SiteWise is an Amazon Web Services service that connects [Industrial Internet of Things (IIoT)](https://en.wikipedia.org/wiki/Internet_of_things#Industrial_applications) devices to the power of the Amazon Web Services Cloud. For more information, see the [IoT SiteWise User Guide](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/). For information about IoT SiteWise quotas, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
servers:
- description: The AWS IoT SiteWise regional endpoint
  url: https://iotsitewise.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths:
  /assets/{assetId}/associate:
    post:
      operationId: AssociateAssets
      description: |-
        Associates a child asset with the given parent asset through a hierarchy defined in the parent asset's model. For more information, see [Associating assets](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/add-associated-assets.html) in the _IoT SiteWise User Guide_.
      parameters:
      - name: assetId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CustomID'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                hierarchyId:
                  $ref: '#/components/schemas/CustomID'
                childAssetId:
                  $ref: '#/components/schemas/CustomID'
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '409':
          description: |-
            The resource already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '500':
          description: |-
            IoT SiteWise can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters. Check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '410':
          description: |-
            You've reached the limit for a resource. For example, this can occur if you're trying to associate more than the allowed number of child assets or attempting to create more than the allowed number of properties for an asset model.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a rate limit. For example, you might have exceeded the number of IoT SiteWise assets that can be created per second, the allowed number of messages per second, and so on.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /timeseries/associate:
    post:
      operationId: AssociateTimeSeriesToAssetProperty
      description: |-
        Associates a time series (data stream) with an asset property.
      parameters:
      - name: alias
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/PropertyAlias'
      - name: assetId
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/CustomID'
      - name: propertyId
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/CustomID'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '409':
          description: |-
            Your request has conflicting operations. This can occur if you're trying to perform more than one operation on the same resource at the same time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictingOperationException'
        '500':
          description: |-
            IoT SiteWise can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters. Check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a rate limit. For example, you might have exceeded the number of IoT SiteWise assets that can be created per second, the allowed number of messages per second, and so on.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /projects/{projectId}/assets/associate:
    post:
      operationId: BatchAssociateProjectAssets
      description: |-
        Associates a group (batch) of assets with an IoT SiteWise Monitor project.
      parameters:
      - name: projectId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ID'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                assetIds:
                  $ref: '#/components/schemas/IDs'
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '500':
          description: |-
            IoT SiteWise can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters. Check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '410':
          description: |-
            You've reached the limit for a resource. For example, this can occur if you're trying to associate more than the allowed number of child assets or attempting to create more than the allowed number of properties for an asset model.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a rate limit. For example, you might have exceeded the number of IoT SiteWise assets that can be created per second, the allowed number of messages per second, and so on.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /projects/{projectId}/assets/disassociate:
    post:
      operationId: BatchDisassociateProjectAssets
      description: |-
        Disassociates a group (batch) of assets from an IoT SiteWise Monitor project.
      parameters:
      - name: projectId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ID'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                assetIds:
                  $ref: '#/components/schemas/IDs'
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '500':
          description: |-
            IoT SiteWise can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters. Check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a rate limit. For example, you might have exceeded the number of IoT SiteWise assets that can be created per second, the allowed number of messages per second, and so on.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /properties/batch/aggregates:
    post:
      operationId: BatchGetAssetPropertyAggregates
      description: |-
        Gets aggregated values (for example, average, minimum, and maximum) for one or more asset properties. For more information, see [Querying aggregates](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/query-industrial-data.html#aggregates) in the _IoT SiteWise User Guide_.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                entries:
                  $ref: '#/components/schemas/BatchGetAssetPropertyAggregatesEntries'
                nextToken:
                  $ref: '#/components/schemas/NextToken'
                maxResults:
                  $ref: '#/components/schemas/BatchGetAssetPropertyAggregatesMaxResults'
      responses:
        '200': {}
        '500':
          description: |-
            IoT SiteWise can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters. Check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '503':
          description: |-
            The requested service is unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            Your request exceeded a rate limit. For example, you might have exceeded the number of IoT SiteWise assets that can be created per second, the allowed number of messages per second, and so on.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /properties/batch/latest:
    post:
      operationId: BatchGetAssetPropertyValue
      description: |-
        Gets the current value for one or more asset properties. For more information, see [Querying current values](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/query-industrial-data.html#current-values) in the _IoT SiteWise User Guide_.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                entries:
                  $ref: '#/components/schemas/BatchGetAssetPropertyValueEntries'
                nextToken:
                  $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '500':
          description: |-
            IoT SiteWise can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters. Check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '503':
          description: |-
            The requested service is unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            Your request exceeded a rate limit. For example, you might have exceeded the number of IoT SiteWise assets that can be created per second, the allowed number of messages per second, and so on.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /properties/batch/history:
    post:
      operationId: BatchGetAssetPropertyValueHistory
      description: |-
        Gets the historical values for one or more asset properties. For more information, see [Querying historical values](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/query-industrial-data.html#historical-values) in the _IoT SiteWise User Guide_.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                entries:
                  $ref: '#/components/schemas/BatchGetAssetPropertyValueHistoryEntries'
                nextToken:
                  $ref: '#/components/schemas/NextToken'
                maxResults:
                  $ref: '#/components/schemas/BatchGetAssetPropertyValueHistoryMaxResults'
      responses:
        '200': {}
        '500':
          description: |-
            IoT SiteWise can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters. Check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '503':
          description: |-
            The requested service is unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            Your request exceeded a rate limit. For example, you might have exceeded the number of IoT SiteWise assets that can be created per second, the allowed number of messages per second, and so on.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /properties:
    post:
      operationId: BatchPutAssetPropertyValue
      description: |-
        Sends a list of asset property values to IoT SiteWise. Each value is a timestamp-quality-value (TQV) data point. For more information, see [Ingesting data using the API](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/ingest-api.html) in the _IoT SiteWise User Guide_.

        To identify an asset property, you must specify one of the following:

          * The `assetId` and `propertyId` of an asset property.

          * A `propertyAlias`, which is a data stream alias (for example, `/company/windfarm/3/turbine/7/temperature`). To define an asset property's alias, see [UpdateAssetProperty](https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_UpdateAssetProperty.html).

        With respect to Unix epoch time, IoT SiteWise accepts only TQVs that have a timestamp of no more than 7 days in the past and no more than 10 minutes in the future. IoT SiteWise rejects timestamps outside of the inclusive range of [-7 days, +10 minutes] and returns a `TimestampOutOfRangeException` error.

        For each asset property, IoT SiteWise overwrites TQVs with duplicate timestamps unless the newer TQV has a different quality. For example, if you store a TQV `{T1, GOOD, V1}`, then storing `{T1, GOOD, V2}` replaces the existing TQV.

        IoT SiteWise authorizes access to each `BatchPutAssetPropertyValue` entry individually. For more information, see [BatchPutAssetPropertyValue authorization](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/security_iam_service-with-iam.html#security_iam_service-with-iam-id-based-policies-batchputassetpropertyvalue-action) in the _IoT SiteWise User Guide_.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                enablePartialEntryProcessing:
                  $ref: '#/components/schemas/BooleanValue'
                entries:
                  $ref: '#/components/schemas/PutAssetPropertyValueEntries'
      responses:
        '200': {}
        '409':
          description: |-
            Your request has conflicting operations. This can occur if you're trying to perform more than one operation on the same resource at the same time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictingOperationException'
        '500':
          description: |-
            IoT SiteWise can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters. Check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '410':
          description: |-
            You've reached the limit for a resource. For example, this can occur if you're trying to associate more than the allowed number of child assets or attempting to create more than the allowed number of properties for an asset model.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '503':
          description: |-
            The requested service is unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            Your request exceeded a rate limit. For example, you might have exceeded the number of IoT SiteWise assets that can be created per second, the allowed number of messages per second, and so on.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /access-policies:
    post:
      operationId: CreateAccessPolicy
      description: |-
        Creates an access policy that grants the specified identity (IAM Identity Center user, IAM Identity Center group, or IAM user) access to the specified IoT SiteWise Monitor portal or project resource.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                accessPolicyIdentity:
                  $ref: '#/components/schemas/Identity'
                accessPolicyResource:
                  $ref: '#/components/schemas/Resource'
                accessPolicyPermission:
                  $ref: '#/components/schemas/Permission'
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
                tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '201': {}
        '500':
          description: |-
            IoT SiteWise can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters. Check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '410':
          description: |-
            You've reached the limit for a resource. For example, this can occur if you're trying to associate more than the allowed number of child assets or attempting to create more than the allowed number of properties for an asset model.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a rate limit. For example, you might have exceeded the number of IoT SiteWise assets that can be created per second, the allowed number of messages per second, and so on.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    get:
      operationId: ListAccessPolicies
      description: |-
        Retrieves a paginated list of access policies for an identity (an IAM Identity Center user, an IAM Identity Center group, or an IAM user) or an IoT SiteWise Monitor resource (a portal or project).
      parameters:
      - name: identityType
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/IdentityType'
      - name: identityId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/IdentityId'
      - name: resourceType
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ResourceType'
      - name: resourceId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ID'
      - name: iamArn
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/IamArn'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '500':
          description: |-
            IoT SiteWise can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters. Check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '429':
          description: |-
            Your request exceeded a rate limit. For example, you might have exceeded the number of IoT SiteWise assets that can be created per second, the allowed number of messages per second, and so on.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /assets:
    post:
      operationId: CreateAsset
      description: |-
        Creates an asset from an existing asset model. For more information, see [Creating assets](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/create-assets.html) in the _IoT SiteWise User Guide_.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                assetName:
                  $ref: '#/components/schemas/Name'
                assetModelId:
                  $ref: '#/components/schemas/CustomID'
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
                tags:
                  $ref: '#/components/schemas/TagMap'
                assetDescription:
                  $ref: '#/components/schemas/Description'
                assetId:
                  $ref: '#/components/schemas/ID'
                assetExternalId:
                  $ref: '#/components/schemas/ExternalId'
      responses:
        '202': {}
        '409':
          description: |-
            The resource already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '500':
          description: |-
            IoT SiteWise can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters. Check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '410':
          description: |-
            You've reached the limit for a resource. For example, this can occur if you're trying to associate more than the allowed number of child assets or attempting to create more than the allowed number of properties for an asset model.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a rate limit. For example, you might have exceeded the number of IoT SiteWise assets that can be created per second, the allowed number of messages per second, and so on.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    get:
      operationId: ListAssets
      description: |-
        Retrieves a paginated list of asset summaries.

        You can use this operation to do the following:

          * List assets based on a specific asset model.

          * List top-level assets.

        You can't use this operation to list all assets. To retrieve summaries for all of your assets, use [ListAssetModels](https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_ListAssetModels.html) to get all of your asset model IDs. Then, use ListAssets to get all assets for each asset model.
      parameters:
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: assetModelId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/CustomID'
      - name: filter
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ListAssetsFilter'
      responses:
        '200': {}
        '500':
          description: |-
            IoT SiteWise can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters. Check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a rate limit. For example, you might have exceeded the number of IoT SiteWise assets that can be created per second, the allowed number of messages per second, and so on.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /asset-models:
    post:
      operationId: CreateAssetModel
      description: |-
        Creates an asset model from specified property and hierarchy definitions. You create assets from asset models. With asset models, you can easily create assets of the same type that have standardized definitions. Each asset created from a model inherits the asset model's property and hierarchy definitions. For more information, see [Defining asset models](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/define-models.html) in the _IoT SiteWise User Guide_.

        You can create two types of asset models, `ASSET_MODEL` or `COMPONENT_MODEL`.

          * **ASSET_MODEL** – (default) An asset model that you can use to create assets. Can't be included as a component in another asset model.

          * **COMPONENT_MODEL** – A reusable component that you can include in the composite models of other asset models. You can't create assets directly from this type of asset model.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                assetModelName:
                  $ref: '#/components/schemas/Name'
                assetModelType:
                  $ref: '#/components/schemas/AssetModelType'
                assetModelId:
                  $ref: '#/components/schemas/ID'
                assetModelExternalId:
                  $ref: '#/components/schemas/ExternalId'
                assetModelDescription:
                  $ref: '#/components/schemas/Description'
                assetModelProperties:
                  $ref: '#/components/schemas/AssetModelPropertyDefinitions'
                assetModelHierarchies:
                  $ref: '#/components/schemas/AssetModelHierarchyDefinitions'
                assetModelCompositeModels:
                  $ref: '#/components/schemas/AssetModelCompositeModelDefinitions'
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
                tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '202': {}
        '409':
          description: |-
            The resource already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '500':
          description: |-
            IoT SiteWise can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters. Check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '410':
          description: |-
            You've reached the limit for a resource. For example, this can occur if you're trying to associate more than the allowed number of child assets or attempting to create more than the allowed number of properties for an asset model.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a rate limit. For example, you might have exceeded the number of IoT SiteWise assets that can be created per second, the allowed number of messages per second, and so on.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    get:
      operationId: ListAssetModels
      description: |-
        Retrieves a paginated list of summaries of all asset models.
      parameters:
      - name: assetModelTypes
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ListAssetModelsTypeFilter'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: assetModelVersion
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/AssetModelVersionFilter'
      responses:
        '200': {}
        '500':
          description: |-
            IoT SiteWise can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters. Check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '429':
          description: |-
            Your request exceeded a rate limit. For example, you might have exceeded the number of IoT SiteWise assets that can be created per second, the allowed number of messages per second, and so on.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /asset-models/{assetModelId}/composite-models:
    post:
      operationId: CreateAssetModelCompositeModel
      description: |-
        Creates a custom composite model from specified property and hierarchy definitions. There are two types of custom composite models, `inline` and `component-model-based`.

        Use component-model-based custom composite models to define standard, reusable components. A component-model-based custom composite model consists of a name, a description, and the ID of the component model it references. A component-model-based custom composite model has no properties of its own; its referenced component model provides its associated properties to any created assets. For more information, see [Custom composite models (Components)](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/custom-composite-models.html) in the _IoT SiteWise User Guide_.

        Use inline custom composite models to organize the properties of an asset model. The properties of inline custom composite models are local to the asset model where they are included and can't be used to create multiple assets.

        To create a component-model-based model, specify the `composedAssetModelId` of an existing asset model with `assetModelType` of `COMPONENT_MODEL`.

        To create an inline model, specify the `assetModelCompositeModelProperties` and don't include an `composedAssetModelId`.
      parameters:
      - name: assetModelId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CustomID'
      - name: If-Match
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/ETag'
      - name: If-None-Match
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/SelectAll'
      - name: Match-For-Version-Type
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/AssetModelVersionType'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                assetModelCompositeModelExternalId:
                  $ref: '#/components/schemas/ExternalId'
                parentAssetModelCompositeModelId:
                  $ref: '#/components/schemas/CustomID'
                assetModelCompositeModelId:
                  $ref: '#/components/schemas/ID'
                assetModelCompositeModelDescription:
                  $ref: '#/components/schemas/Description'
                assetModelCompositeModelName:
                  $ref: '#/components/schemas/Name'
                assetModelCompositeModelType:
                  $ref: '#/components/schemas/Name'
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
                composedAssetModelId:
                  $ref: '#/components/schemas/CustomID'
                assetModelCompositeModelProperties:
                  $ref: '#/components/schemas/AssetModelPropertyDefinitions'
      responses:
        '202': {}
        '409':
          description: |-
            The resource already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '500':
          description: |-
            IoT SiteWise can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters. Check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '410':
          description: |-
            You've reached the limit for a resource. For example, this can occur if you're trying to associate more than the allowed number of child assets or attempting to create more than the allowed number of properties for an asset model.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '412':
          description: |-
            The precondition in one or more of the request-header fields evaluated to `FALSE`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreconditionFailedException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a rate limit. For example, you might have exceeded the number of IoT SiteWise assets that can be created per second, the allowed number of messages per second, and so on.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    get:
      operationId: ListAssetModelCompositeModels
      description: |-
        Retrieves a paginated list of composite models associated with the asset model
      parameters:
      - name: assetModelId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CustomID'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: assetModelVersion
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/AssetModelVersionFilter'
      responses:
        '200': {}
        '500':
          description: |-
            IoT SiteWise can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters. Check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a rate limit. For example, you might have exceeded the number of IoT SiteWise assets that can be created per second, the allowed number of messages per second, and so on.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /jobs:
    post:
      operationId: CreateBulkImportJob
      description: |-
        Defines a job to ingest data to IoT SiteWise from Amazon S3. For more information, see [Create a bulk import job (CLI)](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/CreateBulkImportJob.html) in the _Amazon Simple Storage Service User Guide_.

        Before you create a bulk import job, you must enable IoT SiteWise warm tier or IoT SiteWise cold tier. For more information about how to configure storage settings, see [PutStorageConfiguration](https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_PutStorageConfiguration.html).

        Bulk import is designed to store historical data to IoT SiteWise. It does not trigger computations or notifications on IoT SiteWise warm or cold tier storage.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                jobName:
                  $ref: '#/components/schemas/Name'
                jobRoleArn:
                  $ref: '#/components/schemas/ARN'
                files:
                  $ref: '#/components/schemas/Files'
                errorReportLocation:
                  $ref: '#/components/schemas/ErrorReportLocation'
                jobConfiguration:
                  $ref: '#/components/schemas/JobConfiguration'
                adaptiveIngestion:
                  $ref: '#/components/schemas/AdaptiveIngestion'
                deleteFilesAfterImport:
                  $ref: '#/components/schemas/DeleteFilesAfterImport'
      responses:
        '202': {}
        '409':
          description: |-
            The resource already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '500':
          description: |-
            IoT SiteWise can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters. Check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '410':
          description: |-
            You've reached the limit for a resource. For example, this can occur if you're trying to associate more than the allowed number of child assets or attempting to create more than the allowed number of properties for an asset model.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a rate limit. For example, you might have exceeded the number of IoT SiteWise assets that can be created per second, the allowed number of messages per second, and so on.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    get:
      operationId: ListBulkImportJobs
      description: |-
        Retrieves a paginated list of bulk import job requests. For more information, see [List bulk import jobs (CLI)](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/ListBulkImportJobs.html) in the _IoT SiteWise User Guide_.
      parameters:
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: filter
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ListBulkImportJobsFilter'
      responses:
        '200': {}
        '500':
          description: |-
            IoT SiteWise can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters. Check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a rate limit. For example, you might have exceeded the number of IoT SiteWise assets that can be created per second, the allowed number of messages per second, and so on.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /dashboards:
    post:
      operationId: CreateDashboard
      description: |-
        Creates a dashboard in an IoT SiteWise Monitor project.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                projectId:
                  $ref: '#/components/schemas/ID'
                dashboardName:
                  $ref: '#/components/schemas/Name'
                dashboardDescription:
                  $ref: '#/components/schemas/Description'
                dashboardDefinition:
                  $ref: '#/components/schemas/DashboardDefinition'
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
                tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '201': {}
        '500':
          description: |-
            IoT SiteWise can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters. Check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '410':
          description: |-
            You've reached the limit for a resource. For example, this can occur if you're trying to associate more than the allowed number of child assets or attempting to create more than the allowed number of properties for an asset model.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a rate limit. For example, you might have exceeded the number of IoT SiteWise assets that can be created per second, the allowed number of messages per second, and so on.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    get:
      operationId: ListDashboards
      description: |-
        Retrieves a paginated list of dashboards for an IoT SiteWise Monitor project.
      parameters:
      - name: projectId
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/ID'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '500':
          description: |-
            IoT SiteWise can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters. Check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '429':
          description: |-
            Your request exceeded a rate limit. For example, you might have exceeded the number of IoT SiteWise assets that can be created per second, the allowed number of messages per second, and so on.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /datasets:
    post:
      operationId: CreateDataset
      description: |-
        Creates a dataset to connect an external datasource.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                datasetId:
                  $ref: '#/components/schemas/ID'
                datasetName:
                  $ref: '#/components/schemas/RestrictedName'
                datasetDescription:
                  $ref: '#/components/schemas/RestrictedDescription'
                datasetSource:
                  $ref: '#/components/schemas/DatasetSource'
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
                tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '202': {}
        '409':
          description: |-
            The resource already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '500':
          description: |-
            IoT SiteWise can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters. Check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '410':
          description: |-
            You've reached the limit for a resource. For example, this can occur if you're trying to associate more than the allowed number of child assets or attempting to create more than the allowed number of properties for an asset model.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a rate limit. For example, you might have exceeded the number of IoT SiteWise assets that can be created per second, the allowed number of messages per second, and so on.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    get:
      operationId: ListDatasets
      description: |-
        Retrieves a paginated list of datasets for a specific target resource.
      parameters:
      - name: sourceType
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/DatasetSourceType'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '500':
          description: |-
            IoT SiteWise can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters. Check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '429':
          description: |-
            Your request exceeded a rate limit. For example, you might have exceeded the number of IoT SiteWise assets that can be created per second, the allowed number of messages per second, and so on.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /20200301/gateways:
    post:
      operationId: CreateGateway
      description: |-
        Creates a gateway, which is a virtual or edge device that delivers industrial data streams from local servers to IoT SiteWise. For more information, see [Ingesting data using a gateway](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/gateway-connector.html) in the _IoT SiteWise User Guide_.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                gatewayName:
                  $ref: '#/components/schemas/GatewayName'
                gatewayPlatform:
                  $ref: '#/components/schemas/GatewayPlatform'
                gatewayVersion:
                  $ref: '#/components/schemas/GatewayVersion'
                tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '201': {}
        '500':
          description: |-
            IoT SiteWise can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters. Check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '410':
          description: |-
            You've reached the limit for a resource. For example, this can occur if you're trying to associate more than the allowed number of child assets or attempting to create more than the allowed number of properties for an asset model.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '409':
          description: |-
            The resource already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '429':
          description: |-
            Your request exceeded a rate limit. For example, you might have exceeded the number of IoT SiteWise assets that can be created per second, the allowed number of messages per second, and so on.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    get:
      operationId: ListGateways
      description: |-
        Retrieves a paginated list of gateways.
      parameters:
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '500':
          description: |-
            IoT SiteWise can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters. Check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '429':
          description: |-
            Your request exceeded a rate limit. For example, you might have exceeded the number of IoT SiteWise assets that can be created per second, the allowed number of messages per second, and so on.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /portals:
    post:
      operationId: CreatePortal
      description: |-
        Creates a portal, which can contain projects and dashboards. IoT SiteWise Monitor uses IAM Identity Center or IAM to authenticate portal users and manage user permissions.

        Before you can sign in to a new portal, you must add at least one identity to that portal. For more information, see [Adding or removing portal administrators](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/administer-portals.html#portal-change-admins) in the _IoT SiteWise User Guide_.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                portalName:
                  $ref: '#/components/schemas/Name'
                portalDescription:
                  $ref: '#/components/schemas/Description'
                portalContactEmail:
                  $ref: '#/components/schemas/Email'
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
                portalLogoImageFile:
                  $ref: '#/components/schemas/ImageFile'
                roleArn:
                  $ref: '#/components/schemas/IamArn'
                tags:
                  $ref: '#/components/schemas/TagMap'
                portalAuthMode:
                  $ref: '#/components/schemas/AuthMode'
                notificationSenderEmail:
                  $ref: '#/components/schemas/Email'
                alarms:
                  $ref: '#/components/schemas/Alarms'
                portalType:
                  $ref: '#/components/schemas/PortalType'
                portalTypeConfiguration:
                  $ref: '#/components/schemas/PortalTypeConfiguration'
      responses:
        '202': {}
        '500':
          description: |-
            IoT SiteWise can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters. Check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '410':
          description: |-
            You've reached the limit for a resource. For example, this can occur if you're trying to associate more than the allowed number of child assets or attempting to create more than the allowed number of properties for an asset model.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a rate limit. For example, you might have exceeded the number of IoT SiteWise assets that can be created per second, the allowed number of messages per second, and so on.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    get:
      operationId: ListPortals
      description: |-
        Retrieves a paginated list of IoT SiteWise Monitor portals.
      parameters:
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '500':
          description: |-
            IoT SiteWise can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters. Check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '429':
          description: |-
            Your request exceeded a rate limit. For example, you might have exceeded the number of IoT SiteWise assets that can be created per second, the allowed number of messages per second, and so on.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /projects:
    post:
      operationId: CreateProject
      description: |-
        Creates a project in the specified portal.

        Make sure that the project name and description don't contain confidential information.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                portalId:
                  $ref: '#/components/schemas/ID'
                projectName:
                  $ref: '#/components/schemas/Name'
                projectDescription:
                  $ref: '#/components/schemas/Description'
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
                tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '201': {}
        '500':
          description: |-
            IoT SiteWise can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters. Check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '410':
          description: |-
            You've reached the limit for a resource. For example, this can occur if you're trying to associate more than the allowed number of child assets or attempting to create more than the allowed number of properties for an asset model.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a rate limit. For example, you might have exceeded the number of IoT SiteWise assets that can be created per second, the allowed number of messages per second, and so on.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    get:
      operationId: ListProjects
      description: |-
        Retrieves a paginated list of projects for an IoT SiteWise Monitor portal.
      parameters:
      - name: portalId
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/ID'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '500':
          description: |-
            IoT SiteWise can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters. Check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '429':
          description: |-
            Your request exceeded a rate limit. For example, you might have exceeded the number of IoT SiteWise assets that can be created per second, the allowed number of messages per second, and so on.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /access-policies/{accessPolicyId}:
    delete:
      operationId: DeleteAccessPolicy
      description: |-
        Deletes an access policy that grants the specified identity access to the specified IoT SiteWise Monitor resource. You can use this operation to revoke access to an IoT SiteWise Monitor resource.
      parameters:
      - name: accessPolicyId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ID'
      - name: clientToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ClientToken'
      responses:
        '204': {}
        '500':
          description: |-
            IoT SiteWise can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters. Check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a rate limit. For example, you might have exceeded the number of IoT SiteWise assets that can be created per second, the allowed number of messages per second, and so on.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    get:
      operationId: DescribeAccessPolicy
      description: |-
        Describes an access policy, which specifies an identity's access to an IoT SiteWise Monitor portal or project.
      parameters:
      - name: accessPolicyId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ID'
      responses:
        '200': {}
        '500':
          description: |-
            IoT SiteWise can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters. Check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a rate limit. For example, you might have exceeded the number of IoT SiteWise assets that can be created per second, the allowed number of messages per second, and so on.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    put:
      operationId: UpdateAccessPolicy
      description: |-
        Updates an existing access policy that specifies an identity's access to an IoT SiteWise Monitor portal or project resource.
      parameters:
      - name: accessPolicyId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ID'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                accessPolicyIdentity:
                  $ref: '#/components/schemas/Identity'
                accessPolicyResource:
                  $ref: '#/components/schemas/Resource'
                accessPolicyPermission:
                  $ref: '#/components/schemas/Permission'
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '500':
          description: |-
            IoT SiteWise can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters. Check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a rate limit. For example, you might have exceeded the number of IoT SiteWise assets that can be created per second, the allowed number of messages per second, and so on.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /assets/{assetId}:
    delete:
      operationId: DeleteAsset
      description: |-
        Deletes an asset. This action can't be undone. For more information, see [Deleting assets and models](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/delete-assets-and-models.html) in the _IoT SiteWise User Guide_.

        You can't delete an asset that's associated to another asset. For more information, see [DisassociateAssets](https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_DisassociateAssets.html).
      parameters:
      - name: assetId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CustomID'
      - name: clientToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ClientToken'
      responses:
        '202': {}
        '409':
          description: |-
            Your request has conflicting operations. This can occur if you're trying to perform more than one operation on the same resource at the same time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictingOperationException'
        '500':
          description: |-
            IoT SiteWise can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters. Check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a rate limit. For example, you might have exceeded the number of IoT SiteWise assets that can be created per second, the allowed number of messages per second, and so on.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    get:
      operationId: DescribeAsset
      description: |-
        Retrieves information about an asset.
      parameters:
      - name: assetId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CustomID'
      - name: excludeProperties
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ExcludeProperties'
      responses:
        '200': {}
        '500':
          description: |-
            IoT SiteWise can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters. Check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a rate limit. For example, you might have exceeded the number of IoT SiteWise assets that can be created per second, the allowed number of messages per second, and so on.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    put:
      operationId: UpdateAsset
      description: |-
        Updates an asset's name. For more information, see [Updating assets and models](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/update-assets-and-models.html) in the _IoT SiteWise User Guide_.
      parameters:
      - name: assetId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CustomID'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                assetName:
                  $ref: '#/components/schemas/Name'
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
                assetDescription:
                  $ref: '#/components/schemas/Description'
                assetExternalId:
                  $ref: '#/components/schemas/ExternalId'
      responses:
        '202': {}
        '409':
          description: |-
            The resource already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '500':
          description: |-
            IoT SiteWise can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters. Check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a rate limit. For example, you might have exceeded the number of IoT SiteWise assets that can be created per second, the allowed number of messages per second, and so on.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /asset-models/{assetModelId}:
    delete:
      operationId: DeleteAssetModel
      description: |-
        Deletes an asset model. This action can't be undone. You must delete all assets created from an asset model before you can delete the model. Also, you can't delete an asset model if a parent asset model exists that contains a property formula expression that depends on the asset model that you want to delete. For more information, see [Deleting assets and models](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/delete-assets-and-models.html) in the _IoT SiteWise User Guide_.
      parameters:
      - name: assetModelId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CustomID'
      - name: clientToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ClientToken'
      - name: If-Match
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/ETag'
      - name: If-None-Match
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/SelectAll'
      - name: Match-For-Version-Type
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/AssetModelVersionType'
      responses:
        '202': {}
        '409':
          description: |-
            Your request has conflicting operations. This can occur if you're trying to perform more than one operation on the same resource at the same time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictingOperationException'
        '500':
          description: |-
            IoT SiteWise can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters. Check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '412':
          description: |-
            The precondition in one or more of the request-header fields evaluated to `FALSE`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreconditionFailedException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a rate limit. For example, you might have exceeded the number of IoT SiteWise assets that can be created per second, the allowed number of messages per second, and so on.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    get:
      operationId: DescribeAssetModel
      description: |-
        Retrieves information about an asset model.
      parameters:
      - name: assetModelId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CustomID'
      - name: excludeProperties
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ExcludeProperties'
      - name: assetModelVersion
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/AssetModelVersionFilter'
      responses:
        '200': {}
        '500':
          description: |-
            IoT SiteWise can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters. Check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a rate limit. For example, you might have exceeded the number of IoT SiteWise assets that can be created per second, the allowed number of messages per second, and so on.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    put:
      operationId: UpdateAssetModel
      description: |-
        Updates an asset model and all of the assets that were created from the model. Each asset created from the model inherits the updated asset model's property and hierarchy definitions. For more information, see [Updating assets and models](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/update-assets-and-models.html) in the _IoT SiteWise User Guide_.

        If you remove a property from an asset model, IoT SiteWise deletes all previous data for that property. You can’t change the type or data type of an existing property.

        To replace an existing asset model property with a new one with the same `name`, do the following:

          1. Submit an `UpdateAssetModel` request with the entire existing property removed.

          2. Submit a second `UpdateAssetModel` request that includes the new property. The new asset property will have the same `name` as the previous one and IoT SiteWise will generate a new unique `id`.
      parameters:
      - name: assetModelId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CustomID'
      - name: If-Match
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/ETag'
      - name: If-None-Match
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/SelectAll'
      - name: Match-For-Version-Type
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/AssetModelVersionType'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                assetModelExternalId:
                  $ref: '#/components/schemas/ExternalId'
                assetModelName:
                  $ref: '#/components/schemas/Name'
                assetModelDescription:
                  $ref: '#/components/schemas/Description'
                assetModelProperties:
                  $ref: '#/components/schemas/AssetModelProperties'
                assetModelHierarchies:
                  $ref: '#/components/schemas/AssetModelHierarchies'
                assetModelCompositeModels:
                  $ref: '#/components/schemas/AssetModelCompositeModels'
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
      responses:
        '202': {}
        '409':
          description: |-
            The resource already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '500':
          description: |-
            IoT SiteWise can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters. Check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '410':
          description: |-
            You've reached the limit for a resource. For example, this can occur if you're trying to associate more than the allowed number of child assets or attempting to create more than the allowed number of properties for an asset model.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '412':
          description: |-
            The precondition in one or more of the request-header fields evaluated to `FALSE`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreconditionFailedException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a rate limit. For example, you might have exceeded the number of IoT SiteWise assets that can be created per second, the allowed number of messages per second, and so on.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /asset-models/{assetModelId}/composite-models/{assetModelCompositeModelId}:
    delete:
      operationId: DeleteAssetModelCompositeModel
      description: |-
        Deletes a composite model. This action can't be undone. You must delete all assets created from a composite model before you can delete the model. Also, you can't delete a composite model if a parent asset model exists that contains a property formula expression that depends on the asset model that you want to delete. For more information, see [Deleting assets and models](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/delete-assets-and-models.html) in the _IoT SiteWise User Guide_.
      parameters:
      - name: assetModelId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CustomID'
      - name: assetModelCompositeModelId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CustomID'
      - name: clientToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ClientToken'
      - name: If-Match
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/ETag'
      - name: If-None-Match
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/SelectAll'
      - name: Match-For-Version-Type
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/AssetModelVersionType'
      responses:
        '202': {}
        '409':
          description: |-
            Your request has conflicting operations. This can occur if you're trying to perform more than one operation on the same resource at the same time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictingOperationException'
        '500':
          description: |-
            IoT SiteWise can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters. Check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '412':
          description: |-
            The precondition in one or more of the request-header fields evaluated to `FALSE`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreconditionFailedException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a rate limit. For example, you might have exceeded the number of IoT SiteWise assets that can be created per second, the allowed number of messages per second, and so on.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    get:
      operationId: DescribeAssetModelCompositeModel
      description: |-
        Retrieves information about an asset model composite model (also known as an asset model component). For more information, see [Custom composite models (Components)](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/custom-composite-models.html) in the _IoT SiteWise User Guide_.
      parameters:
      - name: assetModelId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CustomID'
      - name: assetModelCompositeModelId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CustomID'
      - name: assetModelVersion
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/AssetModelVersionFilter'
      responses:
        '200': {}
        '500':
          description: |-
            IoT SiteWise can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters. Check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a rate limit. For example, you might have exceeded the number of IoT SiteWise assets that can be created per second, the allowed number of messages per second, and so on.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    put:
      operationId: UpdateAssetModelCompositeModel
      description: |-
        Updates a composite model and all of the assets that were created from the model. Each asset created from the model inherits the updated asset model's property and hierarchy definitions. For more information, see [Updating assets and models](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/update-assets-and-models.html) in the _IoT SiteWise User Guide_.

        If you remove a property from a composite asset model, IoT SiteWise deletes all previous data for that property. You can’t change the type or data type of an existing property.

        To replace an existing composite asset model property with a new one with the same `name`, do the following:

          1. Submit an `UpdateAssetModelCompositeModel` request with the entire existing property removed.

          2. Submit a second `UpdateAssetModelCompositeModel` request that includes the new property. The new asset property will have the same `name` as the previous one and IoT SiteWise will generate a new unique `id`.
      parameters:
      - name: assetModelId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CustomID'
      - name: assetModelCompositeModelId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CustomID'
      - name: If-Match
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/ETag'
      - name: If-None-Match
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/SelectAll'
      - name: Match-For-Version-Type
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/AssetModelVersionType'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                assetModelCompositeModelExternalId:
                  $ref: '#/components/schemas/ExternalId'
                assetModelCompositeModelDescription:
                  $ref: '#/components/schemas/Description'
                assetModelCompositeModelName:
                  $ref: '#/components/schemas/Name'
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
                assetModelCompositeModelProperties:
                  $ref: '#/components/schemas/AssetModelProperties'
      responses:
        '202': {}
        '409':
          description: |-
            The resource already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '500':
          description: |-
            IoT SiteWise can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters. Check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '410':
          description: |-
            You've reached the limit for a resource. For example, this can occur if you're trying to associate more than the allowed number of child assets or attempting to create more than the allowed number of properties for an asset model.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '412':
          description: |-
            The precondition in one or more of the request-header fields evaluated to `FALSE`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreconditionFailedException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a rate limit. For example, you might have exceeded the number of IoT SiteWise assets that can be created per second, the allowed number of messages per second, and so on.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /dashboards/{dashboardId}:
    delete:
      operationId: DeleteDashboard
      description: |-
        Deletes a dashboard from IoT SiteWise Monitor.
      parameters:
      - name: dashboardId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ID'
      - name: clientToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ClientToken'
      responses:
        '204': {}
        '500':
          description: |-
            IoT SiteWise can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters. Check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a rate limit. For example, you might have exceeded the number of IoT SiteWise assets that can be created per second, the allowed number of messages per second, and so on.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    get:
      operationId: DescribeDashboard
      description: |-
        Retrieves information about a dashboard.
      parameters:
      - name: dashboardId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ID'
      responses:
        '200': {}
        '500':
          description: |-
            IoT SiteWise can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters. Check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a rate limit. For example, you might have exceeded the number of IoT SiteWise assets that can be created per second, the allowed number of messages per second, and so on.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    put:
      operationId: UpdateDashboard
      description: |-
        Updates an IoT SiteWise Monitor dashboard.
      parameters:
      - name: dashboardId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ID'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                dashboardName:
                  $ref: '#/components/schemas/Name'
                dashboardDescription:
                  $ref: '#/components/schemas/Description'
                dashboardDefinition:
                  $ref: '#/components/schemas/DashboardDefinition'
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '500':
          description: |-
            IoT SiteWise can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters. Check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a rate limit. For example, you might have exceeded the number of IoT SiteWise assets that can be created per second, the allowed number of messages per second, and so on.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /datasets/{datasetId}:
    delete:
      operationId: DeleteDataset
      description: |-
        Deletes a dataset. This cannot be undone.
      parameters:
      - name: datasetId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CustomID'
      - name: clientToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ClientToken'
      responses:
        '202': {}
        '409':
          description: |-
            Your request has conflicting operations. This can occur if you're trying to perform more than one operation on the same resource at the same time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictingOperationException'
        '500':
          description: |-
            IoT SiteWise can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters. Check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a rate limit. For example, you might have exceeded the number of IoT SiteWise assets that can be created per second, the allowed number of messages per second, and so on.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    get:
      operationId: DescribeDataset
      description: |-
        Retrieves information about a dataset.
      parameters:
      - name: datasetId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CustomID'
      responses:
        '200': {}
        '500':
          description: |-
            IoT SiteWise can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters. Check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a rate limit. For example, you might have exceeded the number of IoT SiteWise assets that can be created per second, the allowed number of messages per second, and so on.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    put:
      operationId: UpdateDataset
      description: |-
        Updates a dataset.
      parameters:
      - name: datasetId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CustomID'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                datasetName:
                  $ref: '#/components/schemas/RestrictedName'
                datasetDescription:
                  $ref: '#/components/schemas/RestrictedDescription'
                datasetSource:
                  $ref: '#/components/schemas/DatasetSource'
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
      responses:
        '202': {}
        '409':
          description: |-
            Your request has conflicting operations. This can occur if you're trying to perform more than one operation on the same resource at the same time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictingOperationException'
        '500':
          description: |-
            IoT SiteWise can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters. Check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '410':
          description: |-
            You've reached the limit for a resource. For example, this can occur if you're trying to associate more than the allowed number of child assets or attempting to create more than the allowed number of properties for an asset model.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a rate limit. For example, you might have exceeded the number of IoT SiteWise assets that can be created per second, the allowed number of messages per second, and so on.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /20200301/gateways/{gatewayId}:
    delete:
      operationId: DeleteGateway
      description: |-
        Deletes a gateway from IoT SiteWise. When you delete a gateway, some of the gateway's files remain in your gateway's file system.
      parameters:
      - name: gatewayId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ID'
      responses:
        '200': {}
        '409':
          description: |-
            Your request has conflicting operations. This can occur if you're trying to perform more than one operation on the same resource at the same time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictingOperationException'
        '500':
          description: |-
            IoT SiteWise can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters. Check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a rate limit. For example, you might have exceeded the number of IoT SiteWise assets that can be created per second, the allowed number of messages per second, and so on.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    get:
      operationId: DescribeGateway
      description: |-
        Retrieves information about a gateway.
      parameters:
      - name: gatewayId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ID'
      responses:
        '200': {}
        '500':
          description: |-
            IoT SiteWise can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters. Check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a rate limit. For example, you might have exceeded the number of IoT SiteWise assets that can be created per second, the allowed number of messages per second, and so on.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    put:
      operationId: UpdateGateway
      description: |-
        Updates a gateway's name.
      parameters:
      - name: gatewayId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ID'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                gatewayName:
                  $ref: '#/components/schemas/GatewayName'
      responses:
        '200': {}
        '409':
          description: |-
            Your request has conflicting operations. This can occur if you're trying to perform more than one operation on the same resource at the same time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictingOperationException'
        '500':
          description: |-
            IoT SiteWise can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters. Check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a rate limit. For example, you might have exceeded the number of IoT SiteWise assets that can be created per second, the allowed number of messages per second, and so on.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /portals/{portalId}:
    delete:
      operationId: DeletePortal
      description: |-
        Deletes a portal from IoT SiteWise Monitor.
      parameters:
      - name: portalId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ID'
      - name: clientToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ClientToken'
      responses:
        '202': {}
        '409':
          description: |-
            Your request has conflicting operations. This can occur if you're trying to perform more than one operation on the same resource at the same time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictingOperationException'
        '500':
          description: |-
            IoT SiteWise can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters. Check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a rate limit. For example, you might have exceeded the number of IoT SiteWise assets that can be created per second, the allowed number of messages per second, and so on.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    get:
      operationId: DescribePortal
      description: |-
        Retrieves information about a portal.
      parameters:
      - name: portalId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ID'
      responses:
        '200': {}
        '500':
          description: |-
            IoT SiteWise can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters. Check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a rate limit. For example, you might have exceeded the number of IoT SiteWise assets that can be created per second, the allowed number of messages per second, and so on.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    put:
      operationId: UpdatePortal
      description: |-
        Updates an IoT SiteWise Monitor portal.
      parameters:
      - name: portalId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ID'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                portalName:
                  $ref: '#/components/schemas/Name'
                portalDescription:
                  $ref: '#/components/schemas/Description'
                portalContactEmail:
                  $ref: '#/components/schemas/Email'
                portalLogoImage:
                  $ref: '#/components/schemas/Image'
                roleArn:
                  $ref: '#/components/schemas/IamArn'
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
                notificationSenderEmail:
                  $ref: '#/components/schemas/Email'
                alarms:
                  $ref: '#/components/schemas/Alarms'
                portalType:
                  $ref: '#/components/schemas/PortalType'
                portalTypeConfiguration:
                  $ref: '#/components/schemas/PortalTypeConfiguration'
      responses:
        '202': {}
        '409':
          description: |-
            Your request has conflicting operations. This can occur if you're trying to perform more than one operation on the same resource at the same time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictingOperationException'
        '500':
          description: |-
            IoT SiteWise can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters. Check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a rate limit. For example, you might have exceeded the number of IoT SiteWise assets that can be created per second, the allowed number of messages per second, and so on.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /projects/{projectId}:
    delete:
      operationId: DeleteProject
      description: |-
        Deletes a project from IoT SiteWise Monitor.
      parameters:
      - name: projectId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ID'
      - name: clientToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ClientToken'
      responses:
        '204': {}
        '500':
          description: |-
            IoT SiteWise can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters. Check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a rate limit. For example, you might have exceeded the number of IoT SiteWise assets that can be created per second, the allowed number of messages per second, and so on.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    get:
      operationId: DescribeProject
      description: |-
        Retrieves information about a project.
      parameters:
      - name: projectId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ID'
      responses:
        '200': {}
        '500':
          description: |-
            IoT SiteWise can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters. Check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a rate limit. For example, you might have exceeded the number of IoT SiteWise assets that can be created per second, the allowed number of messages per second, and so on.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    put:
      operationId: UpdateProject
      description: |-
        Updates an IoT SiteWise Monitor project.
      parameters:
      - name: projectId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ID'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                projectName:
                  $ref: '#/components/schemas/Name'
                projectDescription:
                  $ref: '#/components/schemas/Description'
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '500':
          description: |-
            IoT SiteWise can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters. Check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a rate limit. For example, you might have exceeded the number of IoT SiteWise assets that can be created per second, the allowed number of messages per second, and so on.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /timeseries/delete:
    post:
      operationId: DeleteTimeSeries
      description: "Deletes a time series (data stream). If you delete a time series\
        \ that's associated with an asset property, the asset property still exists,\
        \ but the time series will no longer be associated with this asset property.\n\
        \nTo identify a time series, do one of the following:\n\n  * If the time series\
        \ isn't associated with an asset property, specify the `alias` of the time\
        \ series.\n\n  * If the time series is associated with an asset property,\
        \ specify one of the following: \n\n    * The `alias` of the time series.\n\
        \n    * The `assetId` and `propertyId` that identifies the asset property."
      parameters:
      - name: alias
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PropertyAlias'
      - name: assetId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/CustomID'
      - name: propertyId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/CustomID'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '409':
          description: |-
            Your request has conflicting operations. This can occur if you're trying to perform more than one operation on the same resource at the same time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictingOperationException'
        '500':
          description: |-
            IoT SiteWise can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters. Check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a rate limit. For example, you might have exceeded the number of IoT SiteWise assets that can be created per second, the allowed number of messages per second, and so on.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /actions/{actionId}:
    get:
      operationId: DescribeAction
      description: |-
        Retrieves information about an action.
      parameters:
      - name: actionId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ID'
      responses:
        '200': {}
        '500':
          description: |-
            IoT SiteWise can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters. Check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a rate limit. For example, you might have exceeded the number of IoT SiteWise assets that can be created per second, the allowed number of messages per second, and so on.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /assets/{assetId}/composite-models/{assetCompositeModelId}:
    get:
      operationId: DescribeAssetCompositeModel
      description: |-
        Retrieves information about an asset composite model (also known as an asset component). An `AssetCompositeModel` is an instance of an `AssetModelCompositeModel`. If you want to see information about the model this is based on, call [DescribeAssetModelCompositeModel](https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_DescribeAssetModelCompositeModel.html).
      parameters:
      - name: assetId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CustomID'
      - name: assetCompositeModelId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CustomID'
      responses:
        '200': {}
        '500':
          description: |-
            IoT SiteWise can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters. Check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a rate limit. For example, you might have exceeded the number of IoT SiteWise assets that can be created per second, the allowed number of messages per second, and so on.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /assets/{assetId}/properties/{propertyId}:
    get:
      operationId: DescribeAssetProperty
      description: |-
        Retrieves information about an asset property.

        When you call this operation for an attribute property, this response includes the default attribute value that you define in the asset model. If you update the default value in the model, this operation's response includes the new default value.

        This operation doesn't return the value of the asset property. To get the value of an asset property, use [GetAssetPropertyValue](https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_GetAssetPropertyValue.html).
      parameters:
      - name: assetId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CustomID'
      - name: propertyId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CustomID'
      responses:
        '200': {}
        '500':
          description: |-
            IoT SiteWise can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters. Check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a rate limit. For example, you might have exceeded the number of IoT SiteWise assets that can be created per second, the allowed number of messages per second, and so on.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    put:
      operationId: UpdateAssetProperty
      description: |-
        Updates an asset property's alias and notification state.

        This operation overwrites the property's existing alias and notification state. To keep your existing property's alias or notification state, you must include the existing values in the UpdateAssetProperty request. For more information, see [DescribeAssetProperty](https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_DescribeAssetProperty.html).
      parameters:
      - name: assetId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CustomID'
      - name: propertyId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CustomID'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                propertyAlias:
                  $ref: '#/components/schemas/PropertyAlias'
                propertyNotificationState:
                  $ref: '#/components/schemas/PropertyNotificationState'
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
                propertyUnit:
                  $ref: '#/components/schemas/PropertyUnit'
      responses:
        '200': {}
        '409':
          description: |-
            Your request has conflicting operations. This can occur if you're trying to perform more than one operation on the same resource at the same time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictingOperationException'
        '500':
          description: |-
            IoT SiteWise can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters. Check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a rate limit. For example, you might have exceeded the number of IoT SiteWise assets that can be created per second, the allowed number of messages per second, and so on.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /jobs/{jobId}:
    get:
      operationId: DescribeBulkImportJob
      description: |-
        Retrieves information about a bulk import job request. For more information, see [Describe a bulk import job (CLI)](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/DescribeBulkImportJob.html) in the _Amazon Simple Storage Service User Guide_.
      parameters:
      - name: jobId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ID'
      responses:
        '200': {}
        '500':
          description: |-
            IoT SiteWise can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters. Check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a rate limit. For example, you might have exceeded the number of IoT SiteWise assets that can be created per second, the allowed number of messages per second, and so on.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /configuration/account/encryption:
    get:
      operationId: DescribeDefaultEncryptionConfiguration
      description: |-
        Retrieves information about the default encryption configuration for the Amazon Web Services account in the default or specified Region. For more information, see [Key management](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/key-management.html) in the _IoT SiteWise User Guide_.
      parameters: []
      responses:
        '200': {}
        '500':
          description: |-
            IoT SiteWise can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters. Check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '429':
          description: |-
            Your request exceeded a rate limit. For example, you might have exceeded the number of IoT SiteWise assets that can be created per second, the allowed number of messages per second, and so on.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    post:
      operationId: PutDefaultEncryptionConfiguration
      description: |-
        Sets the default encryption configuration for the Amazon Web Services account. For more information, see [Key management](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/key-management.html) in the _IoT SiteWise User Guide_.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                encryptionType:
                  $ref: '#/components/schemas/EncryptionType'
                kmsKeyId:
                  $ref: '#/components/schemas/KmsKeyId'
      responses:
        '200': {}
        '409':
          description: |-
            Your request has conflicting operations. This can occur if you're trying to perform more than one operation on the same resource at the same time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictingOperationException'
        '500':
          description: |-
            IoT SiteWise can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters. Check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '410':
          description: |-
            You've reached the limit for a resource. For example, this can occur if you're trying to associate more than the allowed number of child assets or attempting to create more than the allowed number of properties for an asset model.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '429':
          description: |-
            Your request exceeded a rate limit. For example, you might have exceeded the number of IoT SiteWise assets that can be created per second, the allowed number of messages per second, and so on.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /20200301/gateways/{gatewayId}/capability/{capabilityNamespace}:
    get:
      operationId: DescribeGatewayCapabilityConfiguration
      description: |-
        Retrieves information about a gateway capability configuration. Each gateway capability defines data sources for a gateway. A capability configuration can contain multiple data source configurations. If you define OPC-UA sources for a gateway in the IoT SiteWise console, all of your OPC-UA sources are stored in one capability configuration. To list all capability configurations for a gateway, use [DescribeGateway](https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_DescribeGateway.html).
      parameters:
      - name: gatewayId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ID'
      - name: capabilityNamespace
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CapabilityNamespace'
      responses:
        '200': {}
        '500':
          description: |-
            IoT SiteWise can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters. Check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a rate limit. For example, you might have exceeded the number of IoT SiteWise assets that can be created per second, the allowed number of messages per second, and so on.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /logging:
    get:
      operationId: DescribeLoggingOptions
      description: |-
        Retrieves the current IoT SiteWise logging options.
      parameters: []
      responses:
        '200': {}
        '500':
          description: |-
            IoT SiteWise can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters. Check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a rate limit. For example, you might have exceeded the number of IoT SiteWise assets that can be created per second, the allowed number of messages per second, and so on.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    put:
      operationId: PutLoggingOptions
      description: |-
        Sets logging options for IoT SiteWise.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                loggingOptions:
                  $ref: '#/components/schemas/LoggingOptions'
      responses:
        '200': {}
        '409':
          description: |-
            Your request has conflicting operations. This can occur if you're trying to perform more than one operation on the same resource at the same time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictingOperationException'
        '500':
          description: |-
            IoT SiteWise can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters. Check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a rate limit. For example, you might have exceeded the number of IoT SiteWise assets that can be created per second, the allowed number of messages per second, and so on.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /configuration/account/storage:
    get:
      operationId: DescribeStorageConfiguration
      description: |-
        Retrieves information about the storage configuration for IoT SiteWise.
      parameters: []
      responses:
        '200': {}
        '409':
          description: |-
            Your request has conflicting operations. This can occur if you're trying to perform more than one operation on the same resource at the same time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictingOperationException'
        '500':
          description: |-
            IoT SiteWise can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters. Check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '410':
          description: |-
            You've reached the limit for a resource. For example, this can occur if you're trying to associate more than the allowed number of child assets or attempting to create more than the allowed number of properties for an asset model.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a rate limit. For example, you might have exceeded the number of IoT SiteWise assets that can be created per second, the allowed number of messages per second, and so on.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    post:
      operationId: PutStorageConfiguration
      description: |-
        Configures storage settings for IoT SiteWise.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                storageType:
                  $ref: '#/components/schemas/StorageType'
                multiLayerStorage:
                  $ref: '#/components/schemas/MultiLayerStorage'
                disassociatedDataStorage:
                  $ref: '#/components/schemas/DisassociatedDataStorageState'
                retentionPeriod:
                  $ref: '#/components/schemas/RetentionPeriod'
                warmTier:
                  $ref: '#/components/schemas/WarmTierState'
                warmTierRetentionPeriod:
                  $ref: '#/components/schemas/WarmTierRetentionPeriod'
                disallowIngestNullNaN:
                  $ref: '#/components/schemas/DisallowIngestNullNaN'
      responses:
        '200': {}
        '409':
          description: |-
            The resource already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '500':
          description: |-
            IoT SiteWise can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters. Check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '410':
          description: |-
            You've reached the limit for a resource. For example, this can occur if you're trying to associate more than the allowed number of child assets or attempting to create more than the allowed number of properties for an asset model.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a rate limit. For example, you might have exceeded the number of IoT SiteWise assets that can be created per second, the allowed number of messages per second, and so on.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /timeseries/describe:
    get:
      operationId: DescribeTimeSeries
      description: "Retrieves information about a time series (data stream).\n\nTo\
        \ identify a time series, do one of the following:\n\n  * If the time series\
        \ isn't associated with an asset property, specify the `alias` of the time\
        \ series.\n\n  * If the time series is associated with an asset property,\
        \ specify one of the following: \n\n    * The `alias` of the time series.\n\
        \n    * The `assetId` and `propertyId` that identifies the asset property."
      parameters:
      - name: alias
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PropertyAlias'
      - name: assetId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/CustomID'
      - name: propertyId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/CustomID'
      responses:
        '200': {}
        '500':
          description: |-
            IoT SiteWise can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters. Check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a rate limit. For example, you might have exceeded the number of IoT SiteWise assets that can be created per second, the allowed number of messages per second, and so on.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /assets/{assetId}/disassociate:
    post:
      operationId: DisassociateAssets
      description: |-
        Disassociates a child asset from the given parent asset through a hierarchy defined in the parent asset's model.
      parameters:
      - name: assetId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CustomID'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                hierarchyId:
                  $ref: '#/components/schemas/CustomID'
                childAssetId:
                  $ref: '#/components/schemas/CustomID'
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '409':
          description: |-
            Your request has conflicting operations. This can occur if you're trying to perform more than one operation on the same resource at the same time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictingOperationException'
        '500':
          description: |-
            IoT SiteWise can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters. Check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a rate limit. For example, you might have exceeded the number of IoT SiteWise assets that can be created per second, the allowed number of messages per second, and so on.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /timeseries/disassociate:
    post:
      operationId: DisassociateTimeSeriesFromAssetProperty
      description: |-
        Disassociates a time series (data stream) from an asset property.
      parameters:
      - name: alias
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/PropertyAlias'
      - name: assetId
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/CustomID'
      - name: propertyId
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/CustomID'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '409':
          description: |-
            Your request has conflicting operations. This can occur if you're trying to perform more than one operation on the same resource at the same time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictingOperationException'
        '500':
          description: |-
            IoT SiteWise can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters. Check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a rate limit. For example, you might have exceeded the number of IoT SiteWise assets that can be created per second, the allowed number of messages per second, and so on.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /actions:
    post:
      operationId: ExecuteAction
      description: |-
        Executes an action on a target resource.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                targetResource:
                  $ref: '#/components/schemas/TargetResource'
                actionDefinitionId:
                  $ref: '#/components/schemas/ID'
                actionPayload:
                  $ref: '#/components/schemas/ActionPayload'
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
      responses:
        '202': {}
        '409':
          description: |-
            Your request has conflicting operations. This can occur if you're trying to perform more than one operation on the same resource at the same time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictingOperationException'
        '500':
          description: |-
            IoT SiteWise can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters. Check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '410':
          description: |-
            You've reached the limit for a resource. For example, this can occur if you're trying to associate more than the allowed number of child assets or attempting to create more than the allowed number of properties for an asset model.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a rate limit. For example, you might have exceeded the number of IoT SiteWise assets that can be created per second, the allowed number of messages per second, and so on.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    get:
      operationId: ListActions
      description: |-
        Retrieves a paginated list of actions for a specific target resource.
      parameters:
      - name: targetResourceType
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/TargetResourceType'
      - name: targetResourceId
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/CustomID'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '500':
          description: |-
            IoT SiteWise can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters. Check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a rate limit. For example, you might have exceeded the number of IoT SiteWise assets that can be created per second, the allowed number of messages per second, and so on.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /queries/execution:
    post:
      operationId: ExecuteQuery
      description: |-
        Run SQL queries to retrieve metadata and time-series data from asset models, assets, measurements, metrics, transforms, and aggregates.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                queryStatement:
                  $ref: '#/components/schemas/QueryStatement'
                nextToken:
                  $ref: '#/components/schemas/ExecuteQueryNextToken'
                maxResults:
                  $ref: '#/components/schemas/ExecuteQueryMaxResults'
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '403':
          description: |-
            Access is denied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            IoT SiteWise can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The validation failed for this query.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '503':
          description: |-
            The requested service is unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            Your request exceeded a rate limit. For example, you might have exceeded the number of IoT SiteWise assets that can be created per second, the allowed number of messages per second, and so on.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /properties/aggregates:
    get:
      operationId: GetAssetPropertyAggregates
      description: |-
        Gets aggregated values for an asset property. For more information, see [Querying aggregates](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/query-industrial-data.html#aggregates) in the _IoT SiteWise User Guide_.

        To identify an asset property, you must specify one of the following:

          * The `assetId` and `propertyId` of an asset property.

          * A `propertyAlias`, which is a data stream alias (for example, `/company/windfarm/3/turbine/7/temperature`). To define an asset property's alias, see [UpdateAssetProperty](https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_UpdateAssetProperty.html).
      parameters:
      - name: assetId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ID'
      - name: propertyId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ID'
      - name: propertyAlias
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/AssetPropertyAlias'
      - name: aggregateTypes
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/AggregateTypes'
      - name: resolution
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Resolution'
      - name: qualities
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Qualities'
      - name: startDate
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Timestamp'
      - name: endDate
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Timestamp'
      - name: timeOrdering
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/TimeOrdering'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/GetAssetPropertyValueAggregatesMaxResults'
      responses:
        '200': {}
        '500':
          description: |-
            IoT SiteWise can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters. Check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '503':
          description: |-
            The requested service is unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            Your request exceeded a rate limit. For example, you might have exceeded the number of IoT SiteWise assets that can be created per second, the allowed number of messages per second, and so on.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /properties/latest:
    get:
      operationId: GetAssetPropertyValue
      description: |-
        Gets an asset property's current value. For more information, see [Querying current values](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/query-industrial-data.html#current-values) in the _IoT SiteWise User Guide_.

        To identify an asset property, you must specify one of the following:

          * The `assetId` and `propertyId` of an asset property.

          * A `propertyAlias`, which is a data stream alias (for example, `/company/windfarm/3/turbine/7/temperature`). To define an asset property's alias, see [UpdateAssetProperty](https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_UpdateAssetProperty.html).
      parameters:
      - name: assetId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ID'
      - name: propertyId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ID'
      - name: propertyAlias
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/AssetPropertyAlias'
      responses:
        '200': {}
        '500':
          description: |-
            IoT SiteWise can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters. Check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '503':
          description: |-
            The requested service is unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            Your request exceeded a rate limit. For example, you might have exceeded the number of IoT SiteWise assets that can be created per second, the allowed number of messages per second, and so on.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /properties/history:
    get:
      operationId: GetAssetPropertyValueHistory
      description: |-
        Gets the history of an asset property's values. For more information, see [Querying historical values](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/query-industrial-data.html#historical-values) in the _IoT SiteWise User Guide_.

        To identify an asset property, you must specify one of the following:

          * The `assetId` and `propertyId` of an asset property.

          * A `propertyAlias`, which is a data stream alias (for example, `/company/windfarm/3/turbine/7/temperature`). To define an asset property's alias, see [UpdateAssetProperty](https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_UpdateAssetProperty.html).
      parameters:
      - name: assetId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ID'
      - name: propertyId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ID'
      - name: propertyAlias
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/AssetPropertyAlias'
      - name: startDate
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Timestamp'
      - name: endDate
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Timestamp'
      - name: qualities
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Qualities'
      - name: timeOrdering
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/TimeOrdering'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/GetAssetPropertyValueHistoryMaxResults'
      responses:
        '200': {}
        '500':
          description: |-
            IoT SiteWise can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters. Check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '503':
          description: |-
            The requested service is unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            Your request exceeded a rate limit. For example, you might have exceeded the number of IoT SiteWise assets that can be created per second, the allowed number of messages per second, and so on.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /properties/interpolated:
    get:
      operationId: GetInterpolatedAssetPropertyValues
      description: |-
        Get interpolated values for an asset property for a specified time interval, during a period of time. If your time series is missing data points during the specified time interval, you can use interpolation to estimate the missing data.

        For example, you can use this operation to return the interpolated temperature values for a wind turbine every 24 hours over a duration of 7 days.

        To identify an asset property, you must specify one of the following:

          * The `assetId` and `propertyId` of an asset property.

          * A `propertyAlias`, which is a data stream alias (for example, `/company/windfarm/3/turbine/7/temperature`). To define an asset property's alias, see [UpdateAssetProperty](https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_UpdateAssetProperty.html).
      parameters:
      - name: assetId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ID'
      - name: propertyId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ID'
      - name: propertyAlias
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/AssetPropertyAlias'
      - name: startTimeInSeconds
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/TimeInSeconds'
      - name: startTimeOffsetInNanos
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/OffsetInNanos'
      - name: endTimeInSeconds
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/TimeInSeconds'
      - name: endTimeOffsetInNanos
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/OffsetInNanos'
      - name: quality
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Quality'
      - name: intervalInSeconds
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/IntervalInSeconds'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxInterpolatedResults'
      - name: type
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/InterpolationType'
      - name: intervalWindowInSeconds
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/IntervalWindowInSeconds'
      responses:
        '200': {}
        '500':
          description: |-
            IoT SiteWise can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters. Check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '503':
          description: |-
            The requested service is unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            Your request exceeded a rate limit. For example, you might have exceeded the number of IoT SiteWise assets that can be created per second, the allowed number of messages per second, and so on.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /assistant/invocation:
    post:
      operationId: InvokeAssistant
      description: |-
        Invokes SiteWise Assistant to start or continue a conversation.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                conversationId:
                  $ref: '#/components/schemas/ConversationId'
                message:
                  $ref: '#/components/schemas/MessageInput'
                enableTrace:
                  $ref: '#/components/schemas/PrimitiveBoolean'
      responses:
        '200': {}
        '403':
          description: |-
            Access is denied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Your request has conflicting operations. This can occur if you're trying to perform more than one operation on the same resource at the same time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictingOperationException'
        '500':
          description: |-
            IoT SiteWise can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters. Check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '410':
          description: |-
            You've reached the limit for a resource. For example, this can occur if you're trying to associate more than the allowed number of child assets or attempting to create more than the allowed number of properties for an asset model.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a rate limit. For example, you might have exceeded the number of IoT SiteWise assets that can be created per second, the allowed number of messages per second, and so on.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /asset-models/{assetModelId}/properties:
    get:
      operationId: ListAssetModelProperties
      description: |-
        Retrieves a paginated list of properties associated with an asset model. If you update properties associated with the model before you finish listing all the properties, you need to start all over again.
      parameters:
      - name: assetModelId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CustomID'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: filter
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ListAssetModelPropertiesFilter'
      - name: assetModelVersion
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/AssetModelVersionFilter'
      responses:
        '200': {}
        '500':
          description: |-
            IoT SiteWise can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters. Check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a rate limit. For example, you might have exceeded the number of IoT SiteWise assets that can be created per second, the allowed number of messages per second, and so on.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /assets/{assetId}/properties:
    get:
      operationId: ListAssetProperties
      description: |-
        Retrieves a paginated list of properties associated with an asset. If you update properties associated with the model before you finish listing all the properties, you need to start all over again.
      parameters:
      - name: assetId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CustomID'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: filter
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ListAssetPropertiesFilter'
      responses:
        '200': {}
        '500':
          description: |-
            IoT SiteWise can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters. Check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a rate limit. For example, you might have exceeded the number of IoT SiteWise assets that can be created per second, the allowed number of messages per second, and so on.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /assets/{assetId}/assetRelationships:
    get:
      operationId: ListAssetRelationships
      description: |-
        Retrieves a paginated list of asset relationships for an asset. You can use this operation to identify an asset's root asset and all associated assets between that asset and its root.
      parameters:
      - name: assetId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CustomID'
      - name: traversalType
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/TraversalType'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '500':
          description: |-
            IoT SiteWise can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters. Check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a rate limit. For example, you might have exceeded the number of IoT SiteWise assets that can be created per second, the allowed number of messages per second, and so on.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /assets/{assetId}/hierarchies:
    get:
      operationId: ListAssociatedAssets
      description: |-
        Retrieves a paginated list of associated assets.

        You can use this operation to do the following:

          * `CHILD` \- List all child assets associated to the asset.

          * `PARENT` \- List the asset's parent asset.
      parameters:
      - name: assetId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CustomID'
      - name: hierarchyId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/CustomID'
      - name: traversalDirection
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/TraversalDirection'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '500':
          description: |-
            IoT SiteWise can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters. Check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a rate limit. For example, you might have exceeded the number of IoT SiteWise assets that can be created per second, the allowed number of messages per second, and so on.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /asset-models/{assetModelId}/composition-relationships:
    get:
      operationId: ListCompositionRelationships
      description: |-
        Retrieves a paginated list of composition relationships for an asset model of type `COMPONENT_MODEL`.
      parameters:
      - name: assetModelId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ID'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '500':
          description: |-
            IoT SiteWise can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters. Check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a rate limit. For example, you might have exceeded the number of IoT SiteWise assets that can be created per second, the allowed number of messages per second, and so on.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /projects/{projectId}/assets:
    get:
      operationId: ListProjectAssets
      description: |-
        Retrieves a paginated list of assets associated with an IoT SiteWise Monitor project.
      parameters:
      - name: projectId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ID'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '500':
          description: |-
            IoT SiteWise can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters. Check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '429':
          description: |-
            Your request exceeded a rate limit. For example, you might have exceeded the number of IoT SiteWise assets that can be created per second, the allowed number of messages per second, and so on.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /tags:
    get:
      operationId: ListTagsForResource
      description: |-
        Retrieves the list of tags for an IoT SiteWise resource.
      parameters:
      - name: resourceArn
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/AmazonResourceName'
      responses:
        '200': {}
        '409':
          description: |-
            Your request has conflicting operations. This can occur if you're trying to perform more than one operation on the same resource at the same time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictingOperationException'
        '500':
          description: |-
            IoT SiteWise can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters. Check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '410':
          description: |-
            You've reached the limit for a resource. For example, this can occur if you're trying to associate more than the allowed number of child assets or attempting to create more than the allowed number of properties for an asset model.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a rate limit. For example, you might have exceeded the number of IoT SiteWise assets that can be created per second, the allowed number of messages per second, and so on.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '401':
          description: |-
            You are not authorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
    post:
      operationId: TagResource
      description: |-
        Adds tags to an IoT SiteWise resource. If a tag already exists for the resource, this operation updates the tag's value.
      parameters:
      - name: resourceArn
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/AmazonResourceName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '200': {}
        '409':
          description: |-
            Your request has conflicting operations. This can occur if you're trying to perform more than one operation on the same resource at the same time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictingOperationException'
        '500':
          description: |-
            IoT SiteWise can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            You've reached the limit for the number of tags allowed for a resource. For more information, see [Tag naming limits and requirements](https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html#tag-conventions) in the _Amazon Web Services General Reference_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyTagsException'
        '410':
          description: |-
            You've reached the limit for a resource. For example, this can occur if you're trying to associate more than the allowed number of child assets or attempting to create more than the allowed number of properties for an asset model.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a rate limit. For example, you might have exceeded the number of IoT SiteWise assets that can be created per second, the allowed number of messages per second, and so on.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '401':
          description: |-
            You are not authorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
    delete:
      operationId: UntagResource
      description: |-
        Removes a tag from an IoT SiteWise resource.
      parameters:
      - name: resourceArn
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/AmazonResourceName'
      - name: tagKeys
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/TagKeyList'
      responses:
        '200': {}
        '409':
          description: |-
            Your request has conflicting operations. This can occur if you're trying to perform more than one operation on the same resource at the same time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictingOperationException'
        '500':
          description: |-
            IoT SiteWise can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters. Check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '410':
          description: |-
            You've reached the limit for a resource. For example, this can occur if you're trying to associate more than the allowed number of child assets or attempting to create more than the allowed number of properties for an asset model.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a rate limit. For example, you might have exceeded the number of IoT SiteWise assets that can be created per second, the allowed number of messages per second, and so on.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '401':
          description: |-
            You are not authorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /timeseries:
    get:
      operationId: ListTimeSeries
      description: |-
        Retrieves a paginated list of time series (data streams).
      parameters:
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: assetId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/CustomID'
      - name: aliasPrefix
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PropertyAlias'
      - name: timeSeriesType
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ListTimeSeriesType'
      responses:
        '200': {}
        '500':
          description: |-
            IoT SiteWise can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters. Check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a rate limit. For example, you might have exceeded the number of IoT SiteWise assets that can be created per second, the allowed number of messages per second, and so on.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /20200301/gateways/{gatewayId}/capability:
    post:
      operationId: UpdateGatewayCapabilityConfiguration
      description: |-
        Updates a gateway capability configuration or defines a new capability configuration. Each gateway capability defines data sources for a gateway. A capability configuration can contain multiple data source configurations. If you define OPC-UA sources for a gateway in the IoT SiteWise console, all of your OPC-UA sources are stored in one capability configuration. To list all capability configurations for a gateway, use [DescribeGateway](https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_DescribeGateway.html).
      parameters:
      - name: gatewayId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ID'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                capabilityNamespace:
                  $ref: '#/components/schemas/CapabilityNamespace'
                capabilityConfiguration:
                  $ref: '#/components/schemas/CapabilityConfiguration'
      responses:
        '201': {}
        '409':
          description: |-
            Your request has conflicting operations. This can occur if you're trying to perform more than one operation on the same resource at the same time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictingOperationException'
        '500':
          description: |-
            IoT SiteWise can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters. Check your request and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '410':
          description: |-
            You've reached the limit for a resource. For example, this can occur if you're trying to associate more than the allowed number of child assets or attempting to create more than the allowed number of properties for an asset model.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a rate limit. For example, you might have exceeded the number of IoT SiteWise assets that can be created per second, the allowed number of messages per second, and so on.

            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html) in the _IoT SiteWise User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
components:
  schemas:
    ARN:
      type: string
      pattern: ^arn:aws(-cn|-us-gov)?:[a-zA-Z0-9-:\/_\.]+$
      minLength: 1
      maxLength: 1600
    AccessDeniedException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: Access is denied.
    AccessPolicySummaries:
      type: array
      items:
        $ref: '#/components/schemas/AccessPolicySummary'
    AccessPolicySummary:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the access policy.
        identity:
          allOf:
          - $ref: '#/components/schemas/Identity'
          description: The identity (an IAM Identity Center user, an IAM Identity
            Center group, or an IAM user).
        resource:
          allOf:
          - $ref: '#/components/schemas/Resource'
          description: The IoT SiteWise Monitor resource (a portal or project).
        permission:
          allOf:
          - $ref: '#/components/schemas/Permission'
          description: The permissions for the access policy. Note that a project
            `ADMINISTRATOR` is also known as a project owner.
        creationDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date the access policy was created, in Unix epoch time.
        lastUpdateDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date the access policy was last updated, in Unix epoch
            time.
      required:
      - id
      - identity
      - resource
      - permission
      description: Contains an access policy that defines an identity's access to
        an IoT SiteWise Monitor resource.
    ActionDefinition:
      type: object
      properties:
        actionDefinitionId:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the action definition.
        actionName:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the action definition.
        actionType:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The type of the action definition.
      required:
      - actionDefinitionId
      - actionName
      - actionType
      description: Contains a definition for an action.
    ActionDefinitions:
      type: array
      items:
        $ref: '#/components/schemas/ActionDefinition'
    ActionPayload:
      type: object
      properties:
        stringValue:
          allOf:
          - $ref: '#/components/schemas/ActionPayloadString'
          description: The payload of the action in a JSON string.
      required:
      - stringValue
      description: The JSON payload of the action.
    ActionPayloadString:
      type: string
      pattern: ^[^\u0000-\u001F\u007F]+$
    ActionSummaries:
      type: array
      items:
        $ref: '#/components/schemas/ActionSummary'
    ActionSummary:
      type: object
      properties:
        actionId:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the action.
        actionDefinitionId:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the action definition.
        targetResource:
          allOf:
          - $ref: '#/components/schemas/TargetResource'
          description: The resource the action will be taken on.
      description: Contains the summary of the actions.
    AdaptiveIngestion:
      type: boolean
    AggregateType:
      type: string
      enum:
      - AVERAGE
      - COUNT
      - MAXIMUM
      - MINIMUM
      - SUM
      - STANDARD_DEVIATION
    AggregateTypes:
      type: array
      items:
        $ref: '#/components/schemas/AggregateType'
    AggregatedDoubleValue:
      type: number
      format: double
    AggregatedValue:
      type: object
      properties:
        timestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date the aggregating computations occurred, in Unix epoch
            time.
        quality:
          allOf:
          - $ref: '#/components/schemas/Quality'
          description: The quality of the aggregated data.
        value:
          allOf:
          - $ref: '#/components/schemas/Aggregates'
          description: The value of the aggregates.
      required:
      - timestamp
      - value
      description: Contains aggregated asset property values (for example, average,
        minimum, and maximum).
    AggregatedValues:
      type: array
      items:
        $ref: '#/components/schemas/AggregatedValue'
    Aggregates:
      type: object
      properties:
        average:
          allOf:
          - $ref: '#/components/schemas/AggregatedDoubleValue'
          description: The average (mean) value of the time series over a time interval
            window.
        count:
          allOf:
          - $ref: '#/components/schemas/AggregatedDoubleValue'
          description: The count of data points in the time series over a time interval
            window.
        maximum:
          allOf:
          - $ref: '#/components/schemas/AggregatedDoubleValue'
          description: The maximum value of the time series over a time interval window.
        minimum:
          allOf:
          - $ref: '#/components/schemas/AggregatedDoubleValue'
          description: The minimum value of the time series over a time interval window.
        sum:
          allOf:
          - $ref: '#/components/schemas/AggregatedDoubleValue'
          description: The sum of the time series over a time interval window.
        standardDeviation:
          allOf:
          - $ref: '#/components/schemas/AggregatedDoubleValue'
          description: The standard deviation of the time series over a time interval
            window.
      description: Contains the (pre-calculated) aggregate values for an asset property.
    Alarms:
      type: object
      properties:
        alarmRoleArn:
          allOf:
          - $ref: '#/components/schemas/IamArn'
          description: The [ARN](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            of the IAM role that allows the alarm to perform actions and access Amazon
            Web Services resources and services, such as IoT Events.
        notificationLambdaArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The [ARN](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            of the Lambda function that manages alarm notifications. For more information,
            see [Managing alarm notifications](https://docs.aws.amazon.com/iotevents/latest/developerguide/lambda-support.html)
            in the _IoT Events Developer Guide_.
      required:
      - alarmRoleArn
      description: Contains the configuration information of an alarm created in an
        IoT SiteWise Monitor portal. You can use the alarm to monitor an asset property
        and get notified when the asset property value is outside a specified range.
        For more information, see [Monitoring with alarms](https://docs.aws.amazon.com/iot-sitewise/latest/appguide/monitor-alarms.html)
        in the _IoT SiteWise Application Guide_.
    AmazonResourceName:
      type: string
      minLength: 1
      maxLength: 1011
    AssetCompositeModel:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the composite model.
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: The description of the composite model.
        type:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The type of the composite model. For alarm composite models,
            this type is `AWS/ALARM`.
        properties:
          allOf:
          - $ref: '#/components/schemas/AssetProperties'
          description: The asset properties that this composite model defines.
        id:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the asset composite model.
        externalId:
          allOf:
          - $ref: '#/components/schemas/ExternalId'
          description: The external ID of the asset composite model. For more information,
            see [Using external IDs](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/object-ids.html#external-ids)
            in the _IoT SiteWise User Guide_.
      required:
      - name
      - type
      - properties
      description: Contains information about a composite model in an asset. This
        object contains the asset's properties that you define in the composite model.
    AssetCompositeModelPath:
      type: array
      items:
        $ref: '#/components/schemas/AssetCompositeModelPathSegment'
    AssetCompositeModelPathSegment:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the path segment.
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the path segment.
      description: Represents one level between a composite model and the root of
        the asset.
    AssetCompositeModelSummaries:
      type: array
      items:
        $ref: '#/components/schemas/AssetCompositeModelSummary'
    AssetCompositeModelSummary:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the composite model that this summary describes.
        externalId:
          allOf:
          - $ref: '#/components/schemas/ExternalId'
          description: 'An external ID to assign to the asset model.


            If the composite model is a derived composite model, or one nested inside
            a component model, you can only set the external ID using `UpdateAssetModelCompositeModel`
            and specifying the derived ID of the model or property from the created
            model it''s a part of.'
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the composite model that this summary describes.
        type:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: "The type of asset model.\n\n  * **ASSET_MODEL** – (default)\
            \ An asset model that you can use to create assets. Can't be included\
            \ as a component in another asset model.\n\n  * **COMPONENT_MODEL** –\
            \ A reusable component that you can include in the composite models of\
            \ other asset models. You can't create assets directly from this type\
            \ of asset model."
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: A description of the composite model that this summary describes.
        path:
          allOf:
          - $ref: '#/components/schemas/AssetCompositeModelPath'
          description: The path that includes all the components of the asset model
            for the asset.
      required:
      - id
      - name
      - type
      - description
      - path
      description: Contains a summary of the composite model for a specific asset.
    AssetCompositeModels:
      type: array
      items:
        $ref: '#/components/schemas/AssetCompositeModel'
    AssetErrorCode:
      type: string
      enum:
      - INTERNAL_FAILURE
    AssetErrorDetails:
      type: object
      properties:
        assetId:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the asset, in UUID format.
        code:
          allOf:
          - $ref: '#/components/schemas/AssetErrorCode'
          description: The error code.
        message:
          allOf:
          - $ref: '#/components/schemas/AssetErrorMessage'
          description: The error message.
      required:
      - assetId
      - code
      - message
      description: Contains error details for the requested associate project asset
        action.
    AssetErrorMessage:
      type: string
    AssetHierarchies:
      type: array
      items:
        $ref: '#/components/schemas/AssetHierarchy'
    AssetHierarchy:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the hierarchy. This ID is a `hierarchyId`.
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The hierarchy name provided in the [CreateAssetModel](https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_CreateAssetModel.html)
            or [UpdateAssetModel](https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_UpdateAssetModel.html)
            API operation.
        externalId:
          allOf:
          - $ref: '#/components/schemas/ExternalId'
          description: The external ID of the hierarchy, if it has one. When you update
            an asset hierarchy, you may assign an external ID if it doesn't already
            have one. You can't change the external ID of an asset hierarchy that
            already has one. For more information, see [Using external IDs](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/object-ids.html#external-ids)
            in the _IoT SiteWise User Guide_.
      required:
      - name
      description: Describes an asset hierarchy that contains a hierarchy's name and
        ID.
    AssetHierarchyInfo:
      type: object
      properties:
        parentAssetId:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the parent asset in this asset relationship.
        childAssetId:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the child asset in this asset relationship.
      description: Contains information about a parent asset and a child asset that
        are related through an asset hierarchy.
    AssetIDs:
      type: array
      items:
        $ref: '#/components/schemas/ID'
    AssetModelCompositeModel:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the composite model.
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: The description of the composite model.
        type:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The type of the composite model. For alarm composite models,
            this type is `AWS/ALARM`.
        properties:
          allOf:
          - $ref: '#/components/schemas/AssetModelProperties'
          description: The asset property definitions for this composite model.
        id:
          allOf:
          - $ref: '#/components/schemas/CustomID'
          description: The ID of the asset model composite model.
        externalId:
          allOf:
          - $ref: '#/components/schemas/ExternalId'
          description: The external ID of the asset model composite model. For more
            information, see [Using external IDs](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/object-ids.html#external-ids)
            in the _IoT SiteWise User Guide_.
      required:
      - name
      - type
      description: Contains information about a composite model in an asset model.
        This object contains the asset property definitions that you define in the
        composite model.
    AssetModelCompositeModelDefinition:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID to assign to the composite model, if desired. IoT SiteWise
            automatically generates a unique ID for you, so this parameter is never
            required. However, if you prefer to supply your own ID instead, you can
            specify it here in UUID format. If you specify your own ID, it must be
            globally unique.
        externalId:
          allOf:
          - $ref: '#/components/schemas/ExternalId'
          description: An external ID to assign to the composite model. The external
            ID must be unique among composite models within this asset model. For
            more information, see [Using external IDs](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/object-ids.html#external-ids)
            in the _IoT SiteWise User Guide_.
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the composite model.
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: The description of the composite model.
        type:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The type of the composite model. For alarm composite models,
            this type is `AWS/ALARM`.
        properties:
          allOf:
          - $ref: '#/components/schemas/AssetModelPropertyDefinitions'
          description: The asset property definitions for this composite model.
      required:
      - name
      - type
      description: Contains a composite model definition in an asset model. This composite
        model definition is applied to all assets created from the asset model.
    AssetModelCompositeModelDefinitions:
      type: array
      items:
        $ref: '#/components/schemas/AssetModelCompositeModelDefinition'
    AssetModelCompositeModelPath:
      type: array
      items:
        $ref: '#/components/schemas/AssetModelCompositeModelPathSegment'
    AssetModelCompositeModelPathSegment:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the path segment.
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the path segment.
      description: Represents one level between a composite model and the root of
        the asset model.
    AssetModelCompositeModelSummaries:
      type: array
      items:
        $ref: '#/components/schemas/AssetModelCompositeModelSummary'
    AssetModelCompositeModelSummary:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the composite model that this summary describes..
        externalId:
          allOf:
          - $ref: '#/components/schemas/ExternalId'
          description: The external ID of a composite model on this asset model. For
            more information, see [Using external IDs](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/object-ids.html#external-ids)
            in the _IoT SiteWise User Guide_.
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the composite model that this summary describes..
        type:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The composite model type. Valid values are `AWS/ALARM`, `CUSTOM`,
            or ` AWS/L4E_ANOMALY`.
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: The description of the composite model that this summary describes..
        path:
          allOf:
          - $ref: '#/components/schemas/AssetModelCompositeModelPath'
          description: The path that includes all the pieces that make up the composite
            model.
      required:
      - id
      - name
      - type
      description: Contains a summary of the composite model.
    AssetModelCompositeModels:
      type: array
      items:
        $ref: '#/components/schemas/AssetModelCompositeModel'
    AssetModelHierarchies:
      type: array
      items:
        $ref: '#/components/schemas/AssetModelHierarchy'
    AssetModelHierarchy:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/CustomID'
          description: "The ID of the asset model hierarchy. This ID is a `hierarchyId`.\n\
            \n  * If you are callling [UpdateAssetModel](https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_UpdateAssetModel.html)\
            \ to create a _new_ hierarchy: You can specify its ID here, if desired.\
            \ IoT SiteWise automatically generates a unique ID for you, so this parameter\
            \ is never required. However, if you prefer to supply your own ID instead,\
            \ you can specify it here in UUID format. If you specify your own ID,\
            \ it must be globally unique.\n\n  * If you are calling UpdateAssetModel\
            \ to modify an _existing_ hierarchy: This can be either the actual ID\
            \ in UUID format, or else `externalId:` followed by the external ID, if\
            \ it has one. For more information, see [Referencing objects with external\
            \ IDs](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/object-ids.html#external-id-references)\
            \ in the _IoT SiteWise User Guide_."
        externalId:
          allOf:
          - $ref: '#/components/schemas/ExternalId'
          description: The external ID (if any) provided in the [CreateAssetModel](https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_CreateAssetModel.html)
            or [UpdateAssetModel](https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_UpdateAssetModel.html)
            operation. You can assign an external ID by specifying this value as part
            of a call to [UpdateAssetModel](https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_UpdateAssetModel.html).
            However, you can't change the external ID if one is already assigned.
            For more information, see [Using external IDs](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/object-ids.html#external-ids)
            in the _IoT SiteWise User Guide_.
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the asset model hierarchy that you specify by using
            the [CreateAssetModel](https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_CreateAssetModel.html)
            or [UpdateAssetModel](https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_UpdateAssetModel.html)
            API operation.
        childAssetModelId:
          allOf:
          - $ref: '#/components/schemas/CustomID'
          description: The ID of the asset model, in UUID format. All assets in this
            hierarchy must be instances of the `childAssetModelId` asset model. IoT
            SiteWise will always return the actual asset model ID for this value.
            However, when you are specifying this value as part of a call to [UpdateAssetModel](https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_UpdateAssetModel.html),
            you may provide either the asset model ID or else `externalId:` followed
            by the asset model's external ID. For more information, see [Using external
            IDs](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/object-ids.html#external-ids)
            in the _IoT SiteWise User Guide_.
      required:
      - name
      - childAssetModelId
      description: Describes an asset hierarchy that contains a hierarchy's name,
        ID, and child asset model ID that specifies the type of asset that can be
        in this hierarchy.
    AssetModelHierarchyDefinition:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID to assign to the asset model hierarchy, if desired.
            IoT SiteWise automatically generates a unique ID for you, so this parameter
            is never required. However, if you prefer to supply your own ID instead,
            you can specify it here in UUID format. If you specify your own ID, it
            must be globally unique.
        externalId:
          allOf:
          - $ref: '#/components/schemas/ExternalId'
          description: An external ID to assign to the asset model hierarchy. The
            external ID must be unique among asset model hierarchies within this asset
            model. For more information, see [Using external IDs](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/object-ids.html#external-ids)
            in the _IoT SiteWise User Guide_.
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the asset model hierarchy definition (as specified
            in the [CreateAssetModel](https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_CreateAssetModel.html)
            or [UpdateAssetModel](https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_UpdateAssetModel.html)
            API operation).
        childAssetModelId:
          allOf:
          - $ref: '#/components/schemas/CustomID'
          description: The ID of an asset model for this hierarchy. This can be either
            the actual ID in UUID format, or else `externalId:` followed by the external
            ID, if it has one. For more information, see [Referencing objects with
            external IDs](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/object-ids.html#external-id-references)
            in the _IoT SiteWise User Guide_.
      required:
      - name
      - childAssetModelId
      description: Contains an asset model hierarchy used in asset model creation.
        An asset model hierarchy determines the kind (or type) of asset that can belong
        to a hierarchy.
    AssetModelHierarchyDefinitions:
      type: array
      items:
        $ref: '#/components/schemas/AssetModelHierarchyDefinition'
    AssetModelProperties:
      type: array
      items:
        $ref: '#/components/schemas/AssetModelProperty'
    AssetModelProperty:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/CustomID'
          description: "The ID of the asset model property.\n\n  * If you are callling\
            \ [UpdateAssetModel](https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_UpdateAssetModel.html)\
            \ to create a _new_ property: You can specify its ID here, if desired.\
            \ IoT SiteWise automatically generates a unique ID for you, so this parameter\
            \ is never required. However, if you prefer to supply your own ID instead,\
            \ you can specify it here in UUID format. If you specify your own ID,\
            \ it must be globally unique.\n\n  * If you are calling UpdateAssetModel\
            \ to modify an _existing_ property: This can be either the actual ID in\
            \ UUID format, or else `externalId:` followed by the external ID, if it\
            \ has one. For more information, see [Referencing objects with external\
            \ IDs](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/object-ids.html#external-id-references)\
            \ in the _IoT SiteWise User Guide_."
        externalId:
          allOf:
          - $ref: '#/components/schemas/ExternalId'
          description: The external ID (if any) provided in the [CreateAssetModel](https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_CreateAssetModel.html)
            or [UpdateAssetModel](https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_UpdateAssetModel.html)
            operation. You can assign an external ID by specifying this value as part
            of a call to [UpdateAssetModel](https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_UpdateAssetModel.html).
            However, you can't change the external ID if one is already assigned.
            For more information, see [Using external IDs](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/object-ids.html#external-ids)
            in the _IoT SiteWise User Guide_.
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the asset model property.
        dataType:
          allOf:
          - $ref: '#/components/schemas/PropertyDataType'
          description: 'The data type of the asset model property.


            If you specify `STRUCT`, you must also specify `dataTypeSpec` to identify
            the type of the structure for this property.'
        dataTypeSpec:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The data type of the structure for this property. This parameter
            exists on properties that have the `STRUCT` data type.
        unit:
          allOf:
          - $ref: '#/components/schemas/PropertyUnit'
          description: The unit of the asset model property, such as `Newtons` or
            `RPM`.
        type:
          allOf:
          - $ref: '#/components/schemas/PropertyType'
          description: The property type (see `PropertyType`).
        path:
          allOf:
          - $ref: '#/components/schemas/AssetModelPropertyPath'
          description: The structured path to the property from the root of the asset
            model.
      required:
      - name
      - dataType
      - type
      description: Contains information about an asset model property.
    AssetModelPropertyDefinition:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID to assign to the asset model property, if desired. IoT
            SiteWise automatically generates a unique ID for you, so this parameter
            is never required. However, if you prefer to supply your own ID instead,
            you can specify it here in UUID format. If you specify your own ID, it
            must be globally unique.
        externalId:
          allOf:
          - $ref: '#/components/schemas/ExternalId'
          description: An external ID to assign to the property definition. The external
            ID must be unique among property definitions within this asset model.
            For more information, see [Using external IDs](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/object-ids.html#external-ids)
            in the _IoT SiteWise User Guide_.
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the property definition.
        dataType:
          allOf:
          - $ref: '#/components/schemas/PropertyDataType'
          description: 'The data type of the property definition.


            If you specify `STRUCT`, you must also specify `dataTypeSpec` to identify
            the type of the structure for this property.'
        dataTypeSpec:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: 'The data type of the structure for this property. This parameter
            is required on properties that have the `STRUCT` data type.


            The options for this parameter depend on the type of the composite model
            in which you define this property. Use `AWS/ALARM_STATE` for alarm state
            in alarm composite models.'
        unit:
          allOf:
          - $ref: '#/components/schemas/PropertyUnit'
          description: The unit of the property definition, such as `Newtons` or `RPM`.
        type:
          allOf:
          - $ref: '#/components/schemas/PropertyType'
          description: The property definition type (see `PropertyType`). You can
            only specify one type in a property definition.
      required:
      - name
      - dataType
      - type
      description: Contains an asset model property definition. This property definition
        is applied to all assets created from the asset model.
    AssetModelPropertyDefinitions:
      type: array
      items:
        $ref: '#/components/schemas/AssetModelPropertyDefinition'
    AssetModelPropertyPath:
      type: array
      items:
        $ref: '#/components/schemas/AssetModelPropertyPathSegment'
    AssetModelPropertyPathSegment:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the path segment.
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the path segment.
      description: Represents one level between a property and the root of the asset
        model.
    AssetModelPropertySummaries:
      type: array
      items:
        $ref: '#/components/schemas/AssetModelPropertySummary'
    AssetModelPropertySummary:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the property.
        externalId:
          allOf:
          - $ref: '#/components/schemas/ExternalId'
          description: The external ID of the property. For more information, see
            [Using external IDs](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/object-ids.html#external-ids)
            in the _IoT SiteWise User Guide_.
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the property.
        dataType:
          allOf:
          - $ref: '#/components/schemas/PropertyDataType'
          description: The data type of the property.
        dataTypeSpec:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The data type of the structure for this property. This parameter
            exists on properties that have the `STRUCT` data type.
        unit:
          allOf:
          - $ref: '#/components/schemas/PropertyUnit'
          description: The unit (such as `Newtons` or `RPM`) of the property.
        type:
          $ref: '#/components/schemas/PropertyType'
        assetModelCompositeModelId:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the composite model that contains the asset model
            property.
        path:
          allOf:
          - $ref: '#/components/schemas/AssetModelPropertyPath'
          description: The structured path to the property from the root of the asset
            model.
      required:
      - name
      - dataType
      - type
      description: Contains a summary of a property associated with a model.
    AssetModelState:
      type: string
      enum:
      - CREATING
      - ACTIVE
      - UPDATING
      - PROPAGATING
      - DELETING
      - FAILED
    AssetModelStatus:
      type: object
      properties:
        state:
          allOf:
          - $ref: '#/components/schemas/AssetModelState'
          description: The current state of the asset model.
        error:
          allOf:
          - $ref: '#/components/schemas/ErrorDetails'
          description: Contains associated error information, if any.
      required:
      - state
      description: Contains current status information for an asset model. For more
        information, see [Asset and model states](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/asset-and-model-states.html)
        in the _IoT SiteWise User Guide_.
    AssetModelSummaries:
      type: array
      items:
        $ref: '#/components/schemas/AssetModelSummary'
    AssetModelSummary:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the asset model (used with IoT SiteWise API operations).
        externalId:
          allOf:
          - $ref: '#/components/schemas/ExternalId'
          description: The external ID of the asset model. For more information, see
            [Using external IDs](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/object-ids.html#external-ids)
            in the _IoT SiteWise User Guide_.
        arn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: 'The [ARN](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            of the asset model, which has the following format.


            `arn:${Partition}:iotsitewise:${Region}:${Account}:asset-model/${AssetModelId}`'
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the asset model.
        assetModelType:
          allOf:
          - $ref: '#/components/schemas/AssetModelType'
          description: "The type of asset model.\n\n  * **ASSET_MODEL** – (default)\
            \ An asset model that you can use to create assets. Can't be included\
            \ as a component in another asset model.\n\n  * **COMPONENT_MODEL** –\
            \ A reusable component that you can include in the composite models of\
            \ other asset models. You can't create assets directly from this type\
            \ of asset model."
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: The asset model description.
        creationDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date the asset model was created, in Unix epoch time.
        lastUpdateDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date the asset model was last updated, in Unix epoch time.
        status:
          allOf:
          - $ref: '#/components/schemas/AssetModelStatus'
          description: The current status of the asset model.
        version:
          allOf:
          - $ref: '#/components/schemas/Version'
          description: The version number of the asset model.
      required:
      - id
      - arn
      - name
      - description
      - creationDate
      - lastUpdateDate
      - status
      description: Contains a summary of an asset model.
    AssetModelType:
      type: string
      enum:
      - ASSET_MODEL
      - COMPONENT_MODEL
    AssetModelVersionFilter:
      type: string
      pattern: ^(LATEST|ACTIVE)$
    AssetModelVersionType:
      type: string
      enum:
      - LATEST
      - ACTIVE
    AssetProperties:
      type: array
      items:
        $ref: '#/components/schemas/AssetProperty'
    AssetProperty:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the asset property.
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the property.
        alias:
          allOf:
          - $ref: '#/components/schemas/PropertyAlias'
          description: The alias that identifies the property, such as an OPC-UA server
            data stream path (for example, `/company/windfarm/3/turbine/7/temperature`).
            For more information, see [Mapping industrial data streams to asset properties](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/connect-data-streams.html)
            in the _IoT SiteWise User Guide_.
        notification:
          allOf:
          - $ref: '#/components/schemas/PropertyNotification'
          description: The asset property's notification topic and state. For more
            information, see [UpdateAssetProperty](https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_UpdateAssetProperty.html).
        dataType:
          allOf:
          - $ref: '#/components/schemas/PropertyDataType'
          description: The data type of the asset property.
        dataTypeSpec:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The data type of the structure for this property. This parameter
            exists on properties that have the `STRUCT` data type.
        unit:
          allOf:
          - $ref: '#/components/schemas/PropertyUnit'
          description: The unit (such as `Newtons` or `RPM`) of the asset property.
        path:
          allOf:
          - $ref: '#/components/schemas/AssetPropertyPath'
          description: The structured path to the property from the root of the asset.
        externalId:
          allOf:
          - $ref: '#/components/schemas/ExternalId'
          description: The external ID of the asset property. For more information,
            see [Using external IDs](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/object-ids.html#external-ids)
            in the _IoT SiteWise User Guide_.
      required:
      - id
      - name
      - dataType
      description: Contains asset property information.
    AssetPropertyAlias:
      type: string
      pattern: ^[^\u0000-\u001F\u007F]+$
      minLength: 1
      maxLength: 2048
    AssetPropertyPath:
      type: array
      items:
        $ref: '#/components/schemas/AssetPropertyPathSegment'
    AssetPropertyPathSegment:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the path segment.
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the path segment.
      description: Represents one level between a property and the root of the asset.
    AssetPropertySummaries:
      type: array
      items:
        $ref: '#/components/schemas/AssetPropertySummary'
    AssetPropertySummary:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the property.
        alias:
          allOf:
          - $ref: '#/components/schemas/PropertyAlias'
          description: The alias that identifies the property, such as an OPC-UA server
            data stream path (for example, `/company/windfarm/3/turbine/7/temperature`).
            For more information, see [Mapping industrial data streams to asset properties](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/connect-data-streams.html)
            in the _IoT SiteWise User Guide_.
        unit:
          allOf:
          - $ref: '#/components/schemas/PropertyUnit'
          description: The unit of measure (such as Newtons or RPM) of the asset property.
        notification:
          $ref: '#/components/schemas/PropertyNotification'
        assetCompositeModelId:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the composite model that contains the asset property.
        path:
          allOf:
          - $ref: '#/components/schemas/AssetPropertyPath'
          description: The structured path to the property from the root of the asset.
        externalId:
          allOf:
          - $ref: '#/components/schemas/ExternalId'
          description: The external ID of the property. For more information, see
            [Using external IDs](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/object-ids.html#external-ids)
            in the _IoT SiteWise User Guide_.
      required:
      - id
      description: Contains a summary of a property associated with an asset.
    AssetPropertyValue:
      type: object
      properties:
        value:
          allOf:
          - $ref: '#/components/schemas/Variant'
          description: The value of the asset property (see `Variant`).
        timestamp:
          allOf:
          - $ref: '#/components/schemas/TimeInNanos'
          description: The timestamp of the asset property value.
        quality:
          allOf:
          - $ref: '#/components/schemas/Quality'
          description: The quality of the asset property value.
      required:
      - value
      - timestamp
      description: Contains asset property value information.
    AssetPropertyValueHistory:
      type: array
      items:
        $ref: '#/components/schemas/AssetPropertyValue'
    AssetPropertyValues:
      type: array
      items:
        $ref: '#/components/schemas/AssetPropertyValue'
    AssetRelationshipSummaries:
      type: array
      items:
        $ref: '#/components/schemas/AssetRelationshipSummary'
    AssetRelationshipSummary:
      type: object
      properties:
        hierarchyInfo:
          allOf:
          - $ref: '#/components/schemas/AssetHierarchyInfo'
          description: 'The assets that are related through an asset hierarchy.


            This object is present if the `relationshipType` is `HIERARCHY`.'
        relationshipType:
          allOf:
          - $ref: '#/components/schemas/AssetRelationshipType'
          description: "The relationship type of the assets in this relationship.\
            \ This value is one of the following:\n\n  * `HIERARCHY` – The assets\
            \ are related through an asset hierarchy. If you specify this relationship\
            \ type, this asset relationship includes the `hierarchyInfo` object."
      required:
      - relationshipType
      description: Contains information about assets that are related to one another.
    AssetRelationshipType:
      type: string
      enum:
      - HIERARCHY
    AssetState:
      type: string
      enum:
      - CREATING
      - ACTIVE
      - UPDATING
      - DELETING
      - FAILED
    AssetStatus:
      type: object
      properties:
        state:
          allOf:
          - $ref: '#/components/schemas/AssetState'
          description: The current status of the asset.
        error:
          allOf:
          - $ref: '#/components/schemas/ErrorDetails'
          description: Contains associated error information, if any.
      required:
      - state
      description: Contains information about the current status of an asset. For
        more information, see [Asset and model states](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/asset-and-model-states.html)
        in the _IoT SiteWise User Guide_.
    AssetSummaries:
      type: array
      items:
        $ref: '#/components/schemas/AssetSummary'
    AssetSummary:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the asset, in UUID format.
        arn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: 'The [ARN](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            of the asset, which has the following format.


            `arn:${Partition}:iotsitewise:${Region}:${Account}:asset/${AssetId}`'
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the asset.
        assetModelId:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the asset model used to create this asset.
        creationDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date the asset was created, in Unix epoch time.
        lastUpdateDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date the asset was last updated, in Unix epoch time.
        status:
          allOf:
          - $ref: '#/components/schemas/AssetStatus'
          description: The current status of the asset.
        hierarchies:
          allOf:
          - $ref: '#/components/schemas/AssetHierarchies'
          description: A list of asset hierarchies that each contain a `hierarchyId`.
            A hierarchy specifies allowed parent/child asset relationships.
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: A description for the asset.
        externalId:
          allOf:
          - $ref: '#/components/schemas/ExternalId'
          description: The external ID of the asset. For more information, see [Using
            external IDs](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/object-ids.html#external-ids)
            in the _IoT SiteWise User Guide_.
      required:
      - id
      - arn
      - name
      - assetModelId
      - creationDate
      - lastUpdateDate
      - status
      - hierarchies
      description: Contains a summary of an asset.
    AssociateAssetsRequest:
      type: object
      properties:
        assetId:
          allOf:
          - $ref: '#/components/schemas/CustomID'
          description: The ID of the parent asset. This can be either the actual ID
            in UUID format, or else `externalId:` followed by the external ID, if
            it has one. For more information, see [Referencing objects with external
            IDs](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/object-ids.html#external-id-references)
            in the _IoT SiteWise User Guide_.
        hierarchyId:
          allOf:
          - $ref: '#/components/schemas/CustomID'
          description: The ID of a hierarchy in the parent asset's model. (This can
            be either the actual ID in UUID format, or else `externalId:` followed
            by the external ID, if it has one. For more information, see [Referencing
            objects with external IDs](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/object-ids.html#external-id-references)
            in the _IoT SiteWise User Guide_.) Hierarchies allow different groupings
            of assets to be formed that all come from the same asset model. For more
            information, see [Asset hierarchies](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/asset-hierarchies.html)
            in the _IoT SiteWise User Guide_.
        childAssetId:
          allOf:
          - $ref: '#/components/schemas/CustomID'
          description: The ID of the child asset to be associated. This can be either
            the actual ID in UUID format, or else `externalId:` followed by the external
            ID, if it has one. For more information, see [Referencing objects with
            external IDs](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/object-ids.html#external-id-references)
            in the _IoT SiteWise User Guide_.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique case-sensitive identifier that you can provide to
            ensure the idempotency of the request. Don't reuse this client token if
            a new idempotent request is required.
      required:
      - assetId
      - hierarchyId
      - childAssetId
    AssociateTimeSeriesToAssetPropertyRequest:
      type: object
      properties:
        alias:
          allOf:
          - $ref: '#/components/schemas/PropertyAlias'
          description: The alias that identifies the time series.
        assetId:
          allOf:
          - $ref: '#/components/schemas/CustomID'
          description: The ID of the asset in which the asset property was created.
            This can be either the actual ID in UUID format, or else `externalId:`
            followed by the external ID, if it has one. For more information, see
            [Referencing objects with external IDs](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/object-ids.html#external-id-references)
            in the _IoT SiteWise User Guide_.
        propertyId:
          allOf:
          - $ref: '#/components/schemas/CustomID'
          description: The ID of the asset property. This can be either the actual
            ID in UUID format, or else `externalId:` followed by the external ID,
            if it has one. For more information, see [Referencing objects with external
            IDs](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/object-ids.html#external-id-references)
            in the _IoT SiteWise User Guide_.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique case-sensitive identifier that you can provide to
            ensure the idempotency of the request. Don't reuse this client token if
            a new idempotent request is required.
      required:
      - alias
      - assetId
      - propertyId
    AssociatedAssetsSummaries:
      type: array
      items:
        $ref: '#/components/schemas/AssociatedAssetsSummary'
    AssociatedAssetsSummary:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the asset, in UUID format.
        arn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: 'The [ARN](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            of the asset, which has the following format.


            `arn:${Partition}:iotsitewise:${Region}:${Account}:asset/${AssetId}`'
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the asset.
        assetModelId:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the asset model used to create the asset.
        creationDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date the asset was created, in Unix epoch time.
        lastUpdateDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date the asset was last updated, in Unix epoch time.
        status:
          allOf:
          - $ref: '#/components/schemas/AssetStatus'
          description: The current status of the asset.
        hierarchies:
          allOf:
          - $ref: '#/components/schemas/AssetHierarchies'
          description: A list of asset hierarchies that each contain a `hierarchyId`.
            A hierarchy specifies allowed parent/child asset relationships.
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: A description for the asset.
        externalId:
          allOf:
          - $ref: '#/components/schemas/ExternalId'
          description: The external ID of the asset. For more information, see [Using
            external IDs](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/object-ids.html#external-ids)
            in the _IoT SiteWise User Guide_.
      required:
      - id
      - arn
      - name
      - assetModelId
      - creationDate
      - lastUpdateDate
      - status
      - hierarchies
      description: Contains a summary of an associated asset.
    Attribute:
      type: object
      properties:
        defaultValue:
          allOf:
          - $ref: '#/components/schemas/DefaultValue'
          description: The default value of the asset model property attribute. All
            assets that you create from the asset model contain this attribute value.
            You can update an attribute's value after you create an asset. For more
            information, see [Updating attribute values](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/update-attribute-values.html)
            in the _IoT SiteWise User Guide_.
      description: Contains an asset attribute property. For more information, see
        [Attributes](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/asset-properties.html#attributes)
        in the _IoT SiteWise User Guide_.
    AuthMode:
      type: string
      enum:
      - IAM
      - SSO
    BatchAssociateProjectAssetsErrors:
      type: array
      items:
        $ref: '#/components/schemas/AssetErrorDetails'
    BatchAssociateProjectAssetsRequest:
      type: object
      properties:
        projectId:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the project to which to associate the assets.
        assetIds:
          allOf:
          - $ref: '#/components/schemas/IDs'
          description: The IDs of the assets to be associated to the project.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique case-sensitive identifier that you can provide to
            ensure the idempotency of the request. Don't reuse this client token if
            a new idempotent request is required.
      required:
      - projectId
      - assetIds
    BatchAssociateProjectAssetsResponse:
      type: object
      properties:
        errors:
          allOf:
          - $ref: '#/components/schemas/BatchAssociateProjectAssetsErrors'
          description: A list of associated error information, if any.
    BatchDisassociateProjectAssetsErrors:
      type: array
      items:
        $ref: '#/components/schemas/AssetErrorDetails'
    BatchDisassociateProjectAssetsRequest:
      type: object
      properties:
        projectId:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the project from which to disassociate the assets.
        assetIds:
          allOf:
          - $ref: '#/components/schemas/IDs'
          description: The IDs of the assets to be disassociated from the project.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique case-sensitive identifier that you can provide to
            ensure the idempotency of the request. Don't reuse this client token if
            a new idempotent request is required.
      required:
      - projectId
      - assetIds
    BatchDisassociateProjectAssetsResponse:
      type: object
      properties:
        errors:
          allOf:
          - $ref: '#/components/schemas/BatchDisassociateProjectAssetsErrors'
          description: A list of associated error information, if any.
    BatchEntryCompletionStatus:
      type: string
      enum:
      - SUCCESS
      - ERROR
    BatchGetAssetPropertyAggregatesEntries:
      type: array
      items:
        $ref: '#/components/schemas/BatchGetAssetPropertyAggregatesEntry'
    BatchGetAssetPropertyAggregatesEntry:
      type: object
      properties:
        entryId:
          allOf:
          - $ref: '#/components/schemas/EntryId'
          description: The ID of the entry.
        assetId:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the asset in which the asset property was created.
        propertyId:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the asset property, in UUID format.
        propertyAlias:
          allOf:
          - $ref: '#/components/schemas/AssetPropertyAlias'
          description: The alias that identifies the property, such as an OPC-UA server
            data stream path (for example, `/company/windfarm/3/turbine/7/temperature`).
            For more information, see [Mapping industrial data streams to asset properties](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/connect-data-streams.html)
            in the _IoT SiteWise User Guide_.
        aggregateTypes:
          allOf:
          - $ref: '#/components/schemas/AggregateTypes'
          description: The data aggregating function.
        resolution:
          allOf:
          - $ref: '#/components/schemas/Resolution'
          description: The time interval over which to aggregate data.
        startDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The exclusive start of the range from which to query historical
            data, expressed in seconds in Unix epoch time.
        endDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The inclusive end of the range from which to query historical
            data, expressed in seconds in Unix epoch time.
        qualities:
          allOf:
          - $ref: '#/components/schemas/Qualities'
          description: The quality by which to filter asset data.
        timeOrdering:
          allOf:
          - $ref: '#/components/schemas/TimeOrdering'
          description: 'The chronological sorting order of the requested information.


            Default: `ASCENDING`'
      required:
      - entryId
      - aggregateTypes
      - resolution
      - startDate
      - endDate
      description: "Contains information for an asset property aggregate entry that\
        \ is associated with the [BatchGetAssetPropertyAggregates](https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_BatchGetAssetPropertyAggregates.html)\
        \ API.\n\nTo identify an asset property, you must specify one of the following:\n\
        \n  * The `assetId` and `propertyId` of an asset property.\n\n  * A `propertyAlias`,\
        \ which is a data stream alias (for example, `/company/windfarm/3/turbine/7/temperature`).\
        \ To define an asset property's alias, see [UpdateAssetProperty](https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_UpdateAssetProperty.html)."
    BatchGetAssetPropertyAggregatesErrorCode:
      type: string
      enum:
      - ResourceNotFoundException
      - InvalidRequestException
      - AccessDeniedException
    BatchGetAssetPropertyAggregatesErrorEntries:
      type: array
      items:
        $ref: '#/components/schemas/BatchGetAssetPropertyAggregatesErrorEntry'
    BatchGetAssetPropertyAggregatesErrorEntry:
      type: object
      properties:
        errorCode:
          allOf:
          - $ref: '#/components/schemas/BatchGetAssetPropertyAggregatesErrorCode'
          description: The error code.
        errorMessage:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage'
          description: The associated error message.
        entryId:
          allOf:
          - $ref: '#/components/schemas/EntryId'
          description: The ID of the entry.
      required:
      - errorCode
      - errorMessage
      - entryId
      description: Contains error information for an asset property aggregate entry
        that is associated with the [BatchGetAssetPropertyAggregates](https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_BatchGetAssetPropertyAggregates.html)
        API.
    BatchGetAssetPropertyAggregatesErrorInfo:
      type: object
      properties:
        errorCode:
          allOf:
          - $ref: '#/components/schemas/BatchGetAssetPropertyAggregatesErrorCode'
          description: The error code.
        errorTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date the error occurred, in Unix epoch time.
      required:
      - errorCode
      - errorTimestamp
      description: Contains the error code and the timestamp for an asset property
        aggregate entry that is associated with the [BatchGetAssetPropertyAggregates](https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_BatchGetAssetPropertyAggregates.html)
        API.
    BatchGetAssetPropertyAggregatesMaxResults:
      type: integer
      minimum: 1
    BatchGetAssetPropertyAggregatesRequest:
      type: object
      properties:
        entries:
          allOf:
          - $ref: '#/components/schemas/BatchGetAssetPropertyAggregatesEntries'
          description: The list of asset property aggregate entries for the batch
            get request. You can specify up to 16 entries per request.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token to be used for the next set of paginated results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/BatchGetAssetPropertyAggregatesMaxResults'
          description: "The maximum number of results to return for each paginated\
            \ request. A result set is returned in the two cases, whichever occurs\
            \ first.\n\n  * The size of the result set is equal to 1 MB.\n\n  * The\
            \ number of data points in the result set is equal to the value of `maxResults`.\
            \ The maximum value of `maxResults` is 4000."
      required:
      - entries
    BatchGetAssetPropertyAggregatesResponse:
      type: object
      properties:
        errorEntries:
          allOf:
          - $ref: '#/components/schemas/BatchGetAssetPropertyAggregatesErrorEntries'
          description: A list of the errors (if any) associated with the batch request.
            Each error entry contains the `entryId` of the entry that failed.
        successEntries:
          allOf:
          - $ref: '#/components/schemas/BatchGetAssetPropertyAggregatesSuccessEntries'
          description: A list of entries that were processed successfully by this
            batch request. Each success entry contains the `entryId` of the entry
            that succeeded and the latest query result.
        skippedEntries:
          allOf:
          - $ref: '#/components/schemas/BatchGetAssetPropertyAggregatesSkippedEntries'
          description: A list of entries that were not processed by this batch request.
            because these entries had been completely processed by previous paginated
            requests. Each skipped entry contains the `entryId` of the entry that
            skipped.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results, or null if there are
            no additional results.
      required:
      - errorEntries
      - successEntries
      - skippedEntries
    BatchGetAssetPropertyAggregatesSkippedEntries:
      type: array
      items:
        $ref: '#/components/schemas/BatchGetAssetPropertyAggregatesSkippedEntry'
    BatchGetAssetPropertyAggregatesSkippedEntry:
      type: object
      properties:
        entryId:
          allOf:
          - $ref: '#/components/schemas/EntryId'
          description: The ID of the entry.
        completionStatus:
          allOf:
          - $ref: '#/components/schemas/BatchEntryCompletionStatus'
          description: The completion status of each entry that is associated with
            the [BatchGetAssetPropertyAggregates](https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_BatchGetAssetPropertyAggregates.html)
            API.
        errorInfo:
          allOf:
          - $ref: '#/components/schemas/BatchGetAssetPropertyAggregatesErrorInfo'
          description: The error information, such as the error code and the timestamp.
      required:
      - entryId
      - completionStatus
      description: Contains information for an entry that has been processed by the
        previous [BatchGetAssetPropertyAggregates](https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_BatchGetAssetPropertyAggregates.html)
        request.
    BatchGetAssetPropertyAggregatesSuccessEntries:
      type: array
      items:
        $ref: '#/components/schemas/BatchGetAssetPropertyAggregatesSuccessEntry'
    BatchGetAssetPropertyAggregatesSuccessEntry:
      type: object
      properties:
        entryId:
          allOf:
          - $ref: '#/components/schemas/EntryId'
          description: The ID of the entry.
        aggregatedValues:
          allOf:
          - $ref: '#/components/schemas/AggregatedValues'
          description: The requested aggregated asset property values (for example,
            average, minimum, and maximum).
      required:
      - entryId
      - aggregatedValues
      description: Contains success information for an entry that is associated with
        the [BatchGetAssetPropertyAggregates](https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_BatchGetAssetPropertyAggregates.html)
        API.
    BatchGetAssetPropertyValueEntries:
      type: array
      items:
        $ref: '#/components/schemas/BatchGetAssetPropertyValueEntry'
    BatchGetAssetPropertyValueEntry:
      type: object
      properties:
        entryId:
          allOf:
          - $ref: '#/components/schemas/EntryId'
          description: The ID of the entry.
        assetId:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the asset in which the asset property was created.
        propertyId:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the asset property, in UUID format.
        propertyAlias:
          allOf:
          - $ref: '#/components/schemas/AssetPropertyAlias'
          description: The alias that identifies the property, such as an OPC-UA server
            data stream path (for example, `/company/windfarm/3/turbine/7/temperature`).
            For more information, see [Mapping industrial data streams to asset properties](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/connect-data-streams.html)
            in the _IoT SiteWise User Guide_.
      required:
      - entryId
      description: "Contains information for an asset property value entry that is\
        \ associated with the [BatchGetAssetPropertyValue](https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_BatchGetAssetPropertyValue.html)\
        \ API.\n\nTo identify an asset property, you must specify one of the following:\n\
        \n  * The `assetId` and `propertyId` of an asset property.\n\n  * A `propertyAlias`,\
        \ which is a data stream alias (for example, `/company/windfarm/3/turbine/7/temperature`).\
        \ To define an asset property's alias, see [UpdateAssetProperty](https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_UpdateAssetProperty.html)."
    BatchGetAssetPropertyValueErrorCode:
      type: string
      enum:
      - ResourceNotFoundException
      - InvalidRequestException
      - AccessDeniedException
    BatchGetAssetPropertyValueErrorEntries:
      type: array
      items:
        $ref: '#/components/schemas/BatchGetAssetPropertyValueErrorEntry'
    BatchGetAssetPropertyValueErrorEntry:
      type: object
      properties:
        errorCode:
          allOf:
          - $ref: '#/components/schemas/BatchGetAssetPropertyValueErrorCode'
          description: The error code.
        errorMessage:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage'
          description: The associated error message.
        entryId:
          allOf:
          - $ref: '#/components/schemas/EntryId'
          description: The ID of the entry.
      required:
      - errorCode
      - errorMessage
      - entryId
      description: Contains error information for an asset property value entry that
        is associated with the [BatchGetAssetPropertyValue](https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_BatchGetAssetPropertyValue.html)
        API.
    BatchGetAssetPropertyValueErrorInfo:
      type: object
      properties:
        errorCode:
          allOf:
          - $ref: '#/components/schemas/BatchGetAssetPropertyValueErrorCode'
          description: The error code.
        errorTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date the error occurred, in Unix epoch time.
      required:
      - errorCode
      - errorTimestamp
      description: The error information, such as the error code and the timestamp.
    BatchGetAssetPropertyValueHistoryEntries:
      type: array
      items:
        $ref: '#/components/schemas/BatchGetAssetPropertyValueHistoryEntry'
    BatchGetAssetPropertyValueHistoryEntry:
      type: object
      properties:
        entryId:
          allOf:
          - $ref: '#/components/schemas/EntryId'
          description: The ID of the entry.
        assetId:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the asset in which the asset property was created.
        propertyId:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the asset property, in UUID format.
        propertyAlias:
          allOf:
          - $ref: '#/components/schemas/AssetPropertyAlias'
          description: The alias that identifies the property, such as an OPC-UA server
            data stream path (for example, `/company/windfarm/3/turbine/7/temperature`).
            For more information, see [Mapping industrial data streams to asset properties](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/connect-data-streams.html)
            in the _IoT SiteWise User Guide_.
        startDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The exclusive start of the range from which to query historical
            data, expressed in seconds in Unix epoch time.
        endDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The inclusive end of the range from which to query historical
            data, expressed in seconds in Unix epoch time.
        qualities:
          allOf:
          - $ref: '#/components/schemas/Qualities'
          description: The quality by which to filter asset data.
        timeOrdering:
          allOf:
          - $ref: '#/components/schemas/TimeOrdering'
          description: 'The chronological sorting order of the requested information.


            Default: `ASCENDING`'
      required:
      - entryId
      description: "Contains information for an asset property historical value entry\
        \ that is associated with the [BatchGetAssetPropertyValueHistory](https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_BatchGetAssetPropertyValue.html)\
        \ API.\n\nTo identify an asset property, you must specify one of the following:\n\
        \n  * The `assetId` and `propertyId` of an asset property.\n\n  * A `propertyAlias`,\
        \ which is a data stream alias (for example, `/company/windfarm/3/turbine/7/temperature`).\
        \ To define an asset property's alias, see [UpdateAssetProperty](https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_UpdateAssetProperty.html)."
    BatchGetAssetPropertyValueHistoryErrorCode:
      type: string
      enum:
      - ResourceNotFoundException
      - InvalidRequestException
      - AccessDeniedException
    BatchGetAssetPropertyValueHistoryErrorEntries:
      type: array
      items:
        $ref: '#/components/schemas/BatchGetAssetPropertyValueHistoryErrorEntry'
    BatchGetAssetPropertyValueHistoryErrorEntry:
      type: object
      properties:
        errorCode:
          allOf:
          - $ref: '#/components/schemas/BatchGetAssetPropertyValueHistoryErrorCode'
          description: The error code.
        errorMessage:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage'
          description: The associated error message.
        entryId:
          allOf:
          - $ref: '#/components/schemas/EntryId'
          description: The ID of the entry.
      required:
      - errorCode
      - errorMessage
      - entryId
      description: A list of the errors (if any) associated with the batch request.
        Each error entry contains the `entryId` of the entry that failed.
    BatchGetAssetPropertyValueHistoryErrorInfo:
      type: object
      properties:
        errorCode:
          allOf:
          - $ref: '#/components/schemas/BatchGetAssetPropertyValueHistoryErrorCode'
          description: The error code.
        errorTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date the error occurred, in Unix epoch time.
      required:
      - errorCode
      - errorTimestamp
      description: The error information, such as the error code and the timestamp.
    BatchGetAssetPropertyValueHistoryMaxResults:
      type: integer
      minimum: 1
    BatchGetAssetPropertyValueHistoryRequest:
      type: object
      properties:
        entries:
          allOf:
          - $ref: '#/components/schemas/BatchGetAssetPropertyValueHistoryEntries'
          description: The list of asset property historical value entries for the
            batch get request. You can specify up to 16 entries per request.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token to be used for the next set of paginated results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/BatchGetAssetPropertyValueHistoryMaxResults'
          description: "The maximum number of results to return for each paginated\
            \ request. A result set is returned in the two cases, whichever occurs\
            \ first.\n\n  * The size of the result set is equal to 4 MB.\n\n  * The\
            \ number of data points in the result set is equal to the value of `maxResults`.\
            \ The maximum value of `maxResults` is 20000."
      required:
      - entries
    BatchGetAssetPropertyValueHistoryResponse:
      type: object
      properties:
        errorEntries:
          allOf:
          - $ref: '#/components/schemas/BatchGetAssetPropertyValueHistoryErrorEntries'
          description: A list of the errors (if any) associated with the batch request.
            Each error entry contains the `entryId` of the entry that failed.
        successEntries:
          allOf:
          - $ref: '#/components/schemas/BatchGetAssetPropertyValueHistorySuccessEntries'
          description: A list of entries that were processed successfully by this
            batch request. Each success entry contains the `entryId` of the entry
            that succeeded and the latest query result.
        skippedEntries:
          allOf:
          - $ref: '#/components/schemas/BatchGetAssetPropertyValueHistorySkippedEntries'
          description: A list of entries that were not processed by this batch request.
            because these entries had been completely processed by previous paginated
            requests. Each skipped entry contains the `entryId` of the entry that
            skipped.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results, or null if there are
            no additional results.
      required:
      - errorEntries
      - successEntries
      - skippedEntries
    BatchGetAssetPropertyValueHistorySkippedEntries:
      type: array
      items:
        $ref: '#/components/schemas/BatchGetAssetPropertyValueHistorySkippedEntry'
    BatchGetAssetPropertyValueHistorySkippedEntry:
      type: object
      properties:
        entryId:
          allOf:
          - $ref: '#/components/schemas/EntryId'
          description: The ID of the entry.
        completionStatus:
          allOf:
          - $ref: '#/components/schemas/BatchEntryCompletionStatus'
          description: The completion status of each entry that is associated with
            the [BatchGetAssetPropertyValueHistory](https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_BatchGetAssetPropertyValueHistory.html)
            API.
        errorInfo:
          allOf:
          - $ref: '#/components/schemas/BatchGetAssetPropertyValueHistoryErrorInfo'
          description: The error information, such as the error code and the timestamp.
      required:
      - entryId
      - completionStatus
      description: Contains information for an entry that has been processed by the
        previous [BatchGetAssetPropertyValueHistory](https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_BatchGetAssetPropertyValue.html)
        request.
    BatchGetAssetPropertyValueHistorySuccessEntries:
      type: array
      items:
        $ref: '#/components/schemas/BatchGetAssetPropertyValueHistorySuccessEntry'
    BatchGetAssetPropertyValueHistorySuccessEntry:
      type: object
      properties:
        entryId:
          allOf:
          - $ref: '#/components/schemas/EntryId'
          description: The ID of the entry.
        assetPropertyValueHistory:
          allOf:
          - $ref: '#/components/schemas/AssetPropertyValueHistory'
          description: The requested historical values for the specified asset property.
      required:
      - entryId
      - assetPropertyValueHistory
      description: Contains success information for an entry that is associated with
        the [BatchGetAssetPropertyValueHistory](https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_BatchGetAssetPropertyValue.html)
        API.
    BatchGetAssetPropertyValueRequest:
      type: object
      properties:
        entries:
          allOf:
          - $ref: '#/components/schemas/BatchGetAssetPropertyValueEntries'
          description: The list of asset property value entries for the batch get
            request. You can specify up to 128 entries per request.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token to be used for the next set of paginated results.
      required:
      - entries
    BatchGetAssetPropertyValueResponse:
      type: object
      properties:
        errorEntries:
          allOf:
          - $ref: '#/components/schemas/BatchGetAssetPropertyValueErrorEntries'
          description: A list of the errors (if any) associated with the batch request.
            Each error entry contains the `entryId` of the entry that failed.
        successEntries:
          allOf:
          - $ref: '#/components/schemas/BatchGetAssetPropertyValueSuccessEntries'
          description: A list of entries that were processed successfully by this
            batch request. Each success entry contains the `entryId` of the entry
            that succeeded and the latest query result.
        skippedEntries:
          allOf:
          - $ref: '#/components/schemas/BatchGetAssetPropertyValueSkippedEntries'
          description: A list of entries that were not processed by this batch request.
            because these entries had been completely processed by previous paginated
            requests. Each skipped entry contains the `entryId` of the entry that
            skipped.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results, or null if there are
            no additional results.
      required:
      - errorEntries
      - successEntries
      - skippedEntries
    BatchGetAssetPropertyValueSkippedEntries:
      type: array
      items:
        $ref: '#/components/schemas/BatchGetAssetPropertyValueSkippedEntry'
    BatchGetAssetPropertyValueSkippedEntry:
      type: object
      properties:
        entryId:
          allOf:
          - $ref: '#/components/schemas/EntryId'
          description: The ID of the entry.
        completionStatus:
          allOf:
          - $ref: '#/components/schemas/BatchEntryCompletionStatus'
          description: The completion status of each entry that is associated with
            the [BatchGetAssetPropertyValue](https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_BatchGetAssetPropertyValue.html)
            request.
        errorInfo:
          allOf:
          - $ref: '#/components/schemas/BatchGetAssetPropertyValueErrorInfo'
          description: The error information, such as the error code and the timestamp.
      required:
      - entryId
      - completionStatus
      description: Contains information for an entry that has been processed by the
        previous [BatchGetAssetPropertyValue](https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_BatchGetAssetPropertyValue.html)
        request.
    BatchGetAssetPropertyValueSuccessEntries:
      type: array
      items:
        $ref: '#/components/schemas/BatchGetAssetPropertyValueSuccessEntry'
    BatchGetAssetPropertyValueSuccessEntry:
      type: object
      properties:
        entryId:
          allOf:
          - $ref: '#/components/schemas/EntryId'
          description: The ID of the entry.
        assetPropertyValue:
          $ref: '#/components/schemas/AssetPropertyValue'
      required:
      - entryId
      description: Contains success information for an entry that is associated with
        the [BatchGetAssetPropertyValue](https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_BatchGetAssetPropertyValue.html)
        API.
    BatchPutAssetPropertyError:
      type: object
      properties:
        errorCode:
          allOf:
          - $ref: '#/components/schemas/BatchPutAssetPropertyValueErrorCode'
          description: The error code.
        errorMessage:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage'
          description: The associated error message.
        timestamps:
          allOf:
          - $ref: '#/components/schemas/Timestamps'
          description: A list of timestamps for each error, if any.
      required:
      - errorCode
      - errorMessage
      - timestamps
      description: Contains error information from updating a batch of asset property
        values.
    BatchPutAssetPropertyErrorEntries:
      type: array
      items:
        $ref: '#/components/schemas/BatchPutAssetPropertyErrorEntry'
    BatchPutAssetPropertyErrorEntry:
      type: object
      properties:
        entryId:
          allOf:
          - $ref: '#/components/schemas/EntryId'
          description: The ID of the failed entry.
        errors:
          allOf:
          - $ref: '#/components/schemas/BatchPutAssetPropertyErrors'
          description: The list of update property value errors.
      required:
      - entryId
      - errors
      description: Contains error information for asset property value entries that
        are associated with the [BatchPutAssetPropertyValue](https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_BatchPutAssetPropertyValue.html)
        API.
    BatchPutAssetPropertyErrors:
      type: array
      items:
        $ref: '#/components/schemas/BatchPutAssetPropertyError'
    BatchPutAssetPropertyValueErrorCode:
      type: string
      enum:
      - ResourceNotFoundException
      - InvalidRequestException
      - InternalFailureException
      - ServiceUnavailableException
      - ThrottlingException
      - LimitExceededException
      - ConflictingOperationException
      - TimestampOutOfRangeException
      - AccessDeniedException
    BatchPutAssetPropertyValueRequest:
      type: object
      properties:
        enablePartialEntryProcessing:
          allOf:
          - $ref: '#/components/schemas/BooleanValue'
          description: This setting enables partial ingestion at entry-level. If set
            to `true`, we ingest all TQVs not resulting in an error. If set to `false`,
            an invalid TQV fails ingestion of the entire entry that contains it.
        entries:
          allOf:
          - $ref: '#/components/schemas/PutAssetPropertyValueEntries'
          description: The list of asset property value entries for the batch put
            request. You can specify up to 10 entries per request.
      required:
      - entries
    BatchPutAssetPropertyValueResponse:
      type: object
      properties:
        errorEntries:
          allOf:
          - $ref: '#/components/schemas/BatchPutAssetPropertyErrorEntries'
          description: A list of the errors (if any) associated with the batch put
            request. Each error entry contains the `entryId` of the entry that failed.
      required:
      - errorEntries
    BooleanValue:
      type: boolean
    Bucket:
      type: string
      minLength: 3
      maxLength: 63
    CapabilityConfiguration:
      type: string
      minLength: 1
      maxLength: 10000000
    CapabilityNamespace:
      type: string
      pattern: ^[a-zA-Z]+:[a-zA-Z]+:[0-9]+$
      minLength: 1
      maxLength: 512
    CapabilitySyncStatus:
      type: string
      enum:
      - IN_SYNC
      - OUT_OF_SYNC
      - SYNC_FAILED
      - UNKNOWN
      - NOT_APPLICABLE
    Citation:
      type: object
      properties:
        reference:
          allOf:
          - $ref: '#/components/schemas/Reference'
          description: Contains information about the data source.
        content:
          allOf:
          - $ref: '#/components/schemas/Content'
          description: Contains the cited text from the data source.
      description: Contains text content to which the SiteWise Assistant refers to,
        and generate the final response. It also contains information about the source.
    Citations:
      type: array
      items:
        $ref: '#/components/schemas/Citation'
    ClientToken:
      type: string
      pattern: ^\S{36,64}$
      minLength: 36
      maxLength: 64
    ColumnInfo:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the column description.
        type:
          allOf:
          - $ref: '#/components/schemas/ColumnType'
          description: The type of the column description.
      description: A description of the column in the query results.
    ColumnName:
      type: string
      enum:
      - ALIAS
      - ASSET_ID
      - PROPERTY_ID
      - DATA_TYPE
      - TIMESTAMP_SECONDS
      - TIMESTAMP_NANO_OFFSET
      - QUALITY
      - VALUE
    ColumnNames:
      type: array
      items:
        $ref: '#/components/schemas/ColumnName'
    ColumnType:
      type: object
      properties:
        scalarType:
          allOf:
          - $ref: '#/components/schemas/ScalarType'
          description: The allowed data types that the column has as it's value.
      description: The data type of the column.
    ColumnsList:
      type: array
      items:
        $ref: '#/components/schemas/ColumnInfo'
    CompositeModelProperty:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the property.
        type:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The type of the composite model that defines this property.
        assetProperty:
          $ref: '#/components/schemas/Property'
        id:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the composite model that contains the property.
        externalId:
          allOf:
          - $ref: '#/components/schemas/ExternalId'
          description: The external ID of the composite model that contains the property.
            For more information, see [Using external IDs](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/object-ids.html#external-ids)
            in the _IoT SiteWise User Guide_.
      required:
      - name
      - type
      - assetProperty
      description: Contains information about a composite model property on an asset.
    CompositionDetails:
      type: object
      properties:
        compositionRelationship:
          allOf:
          - $ref: '#/components/schemas/CompositionRelationship'
          description: An array detailing the composition relationship for this composite
            model.
      description: Metadata for the composition relationship established by using
        `composedAssetModelId` in [ `CreateAssetModelCompositeModel` ](https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_CreateAssetModelCompositeModel.html).
    CompositionRelationship:
      type: array
      items:
        $ref: '#/components/schemas/CompositionRelationshipItem'
    CompositionRelationshipItem:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the component.
      description: Represents a composite model that composed an asset model of type
        `COMPONENT_MODEL`.
    CompositionRelationshipSummaries:
      type: array
      items:
        $ref: '#/components/schemas/CompositionRelationshipSummary'
    CompositionRelationshipSummary:
      type: object
      properties:
        assetModelId:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the asset model, in UUID format.
        assetModelCompositeModelId:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of a composite model on this asset model.
        assetModelCompositeModelType:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The composite model type. Valid values are `AWS/ALARM`, `CUSTOM`,
            or ` AWS/L4E_ANOMALY`.
      required:
      - assetModelId
      - assetModelCompositeModelId
      - assetModelCompositeModelType
      description: Contains a summary of the components of the composite model.
    ComputeLocation:
      type: string
      enum:
      - EDGE
      - CLOUD
    ConfigurationErrorDetails:
      type: object
      properties:
        code:
          allOf:
          - $ref: '#/components/schemas/ErrorCode'
          description: The error code.
        message:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage'
          description: The error message.
      required:
      - code
      - message
      description: Contains the details of an IoT SiteWise configuration error.
    ConfigurationState:
      type: string
      enum:
      - ACTIVE
      - UPDATE_IN_PROGRESS
      - UPDATE_FAILED
    ConfigurationStatus:
      type: object
      properties:
        state:
          allOf:
          - $ref: '#/components/schemas/ConfigurationState'
          description: The current state of the configuration.
        error:
          allOf:
          - $ref: '#/components/schemas/ConfigurationErrorDetails'
          description: Contains associated error information, if any.
      required:
      - state
      description: Contains current status information for the configuration.
    ConflictingOperationException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
        resourceId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          description: The ID of the resource that conflicts with this operation.
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          description: The ARN of the resource that conflicts with this operation.
      required:
      - message
      - resourceId
      - resourceArn
      description: Your request has conflicting operations. This can occur if you're
        trying to perform more than one operation on the same resource at the same
        time.
    Content:
      type: object
      properties:
        text:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The cited text from the data source.
      description: Contains the cited text from the data source.
    ConversationId:
      type: string
      pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
      minLength: 36
      maxLength: 36
    CoreDeviceOperatingSystem:
      type: string
      enum:
      - LINUX_AARCH64
      - LINUX_AMD64
      - WINDOWS_AMD64
    CoreDeviceThingName:
      type: string
      pattern: ^[a-zA-Z0-9:_-]+$
      minLength: 1
      maxLength: 128
    CreateAccessPolicyRequest:
      type: object
      properties:
        accessPolicyIdentity:
          allOf:
          - $ref: '#/components/schemas/Identity'
          description: The identity for this access policy. Choose an IAM Identity
            Center user, an IAM Identity Center group, or an IAM user.
        accessPolicyResource:
          allOf:
          - $ref: '#/components/schemas/Resource'
          description: The IoT SiteWise Monitor resource for this access policy. Choose
            either a portal or a project.
        accessPolicyPermission:
          allOf:
          - $ref: '#/components/schemas/Permission'
          description: The permission level for this access policy. Note that a project
            `ADMINISTRATOR` is also known as a project owner.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique case-sensitive identifier that you can provide to
            ensure the idempotency of the request. Don't reuse this client token if
            a new idempotent request is required.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: A list of key-value pairs that contain metadata for the access
            policy. For more information, see [Tagging your IoT SiteWise resources](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/tag-resources.html)
            in the _IoT SiteWise User Guide_.
      required:
      - accessPolicyIdentity
      - accessPolicyResource
      - accessPolicyPermission
    CreateAccessPolicyResponse:
      type: object
      properties:
        accessPolicyId:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the access policy.
        accessPolicyArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: 'The [ARN](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            of the access policy, which has the following format.


            `arn:${Partition}:iotsitewise:${Region}:${Account}:access-policy/${AccessPolicyId}`'
      required:
      - accessPolicyId
      - accessPolicyArn
    CreateAssetModelCompositeModelRequest:
      type: object
      properties:
        assetModelId:
          allOf:
          - $ref: '#/components/schemas/CustomID'
          description: The ID of the asset model this composite model is a part of.
        assetModelCompositeModelExternalId:
          allOf:
          - $ref: '#/components/schemas/ExternalId'
          description: 'An external ID to assign to the composite model.


            If the composite model is a derived composite model, or one nested inside
            a component model, you can only set the external ID using `UpdateAssetModelCompositeModel`
            and specifying the derived ID of the model or property from the created
            model it''s a part of.'
        parentAssetModelCompositeModelId:
          allOf:
          - $ref: '#/components/schemas/CustomID'
          description: The ID of the parent composite model in this asset model relationship.
        assetModelCompositeModelId:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the composite model. IoT SiteWise automatically generates
            a unique ID for you, so this parameter is never required. However, if
            you prefer to supply your own ID instead, you can specify it here in UUID
            format. If you specify your own ID, it must be globally unique.
        assetModelCompositeModelDescription:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: A description for the composite model.
        assetModelCompositeModelName:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: A unique name for the composite model.
        assetModelCompositeModelType:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The composite model type. Valid values are `AWS/ALARM`, `CUSTOM`,
            or ` AWS/L4E_ANOMALY`.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique case-sensitive identifier that you can provide to
            ensure the idempotency of the request. Don't reuse this client token if
            a new idempotent request is required.
        composedAssetModelId:
          allOf:
          - $ref: '#/components/schemas/CustomID'
          description: The ID of a component model which is reused to create this
            composite model.
        assetModelCompositeModelProperties:
          allOf:
          - $ref: '#/components/schemas/AssetModelPropertyDefinitions'
          description: 'The property definitions of the composite model. For more
            information, see [ Inline custom composite models](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/custom-composite-models.html#inline-composite-models)
            in the _IoT SiteWise User Guide_.


            You can specify up to 200 properties per composite model. For more information,
            see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html)
            in the _IoT SiteWise User Guide_.'
        ifMatch:
          allOf:
          - $ref: '#/components/schemas/ETag'
          description: The expected current entity tag (ETag) for the asset model’s
            latest or active version (specified using `matchForVersionType`). The
            create request is rejected if the tag does not match the latest or active
            version's current entity tag. See [Optimistic locking for asset model
            writes](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/opt-locking-for-model.html)
            in the _IoT SiteWise User Guide_.
        ifNoneMatch:
          allOf:
          - $ref: '#/components/schemas/SelectAll'
          description: Accepts ***** to reject the create request if an active version
            (specified using `matchForVersionType` as `ACTIVE`) already exists for
            the asset model.
        matchForVersionType:
          allOf:
          - $ref: '#/components/schemas/AssetModelVersionType'
          description: Specifies the asset model version type (`LATEST` or `ACTIVE`)
            used in conjunction with `If-Match` or `If-None-Match` headers to determine
            the target ETag for the create operation.
      required:
      - assetModelId
      - assetModelCompositeModelName
      - assetModelCompositeModelType
    CreateAssetModelCompositeModelResponse:
      type: object
      properties:
        assetModelCompositeModelId:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the composed asset model. You can use this ID when
            you call other IoT SiteWise APIs.
        assetModelCompositeModelPath:
          allOf:
          - $ref: '#/components/schemas/AssetModelCompositeModelPath'
          description: The path to the composite model listing the parent composite
            models.
        assetModelStatus:
          $ref: '#/components/schemas/AssetModelStatus'
      required:
      - assetModelCompositeModelId
      - assetModelCompositeModelPath
      - assetModelStatus
    CreateAssetModelRequest:
      type: object
      properties:
        assetModelName:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: A unique name for the asset model.
        assetModelType:
          allOf:
          - $ref: '#/components/schemas/AssetModelType'
          description: "The type of asset model.\n\n  * **ASSET_MODEL** – (default)\
            \ An asset model that you can use to create assets. Can't be included\
            \ as a component in another asset model.\n\n  * **COMPONENT_MODEL** –\
            \ A reusable component that you can include in the composite models of\
            \ other asset models. You can't create assets directly from this type\
            \ of asset model."
        assetModelId:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID to assign to the asset model, if desired. IoT SiteWise
            automatically generates a unique ID for you, so this parameter is never
            required. However, if you prefer to supply your own ID instead, you can
            specify it here in UUID format. If you specify your own ID, it must be
            globally unique.
        assetModelExternalId:
          allOf:
          - $ref: '#/components/schemas/ExternalId'
          description: An external ID to assign to the asset model. The external ID
            must be unique within your Amazon Web Services account. For more information,
            see [Using external IDs](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/object-ids.html#external-ids)
            in the _IoT SiteWise User Guide_.
        assetModelDescription:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: A description for the asset model.
        assetModelProperties:
          allOf:
          - $ref: '#/components/schemas/AssetModelPropertyDefinitions'
          description: 'The property definitions of the asset model. For more information,
            see [Asset properties](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/asset-properties.html)
            in the _IoT SiteWise User Guide_.


            You can specify up to 200 properties per asset model. For more information,
            see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html)
            in the _IoT SiteWise User Guide_.'
        assetModelHierarchies:
          allOf:
          - $ref: '#/components/schemas/AssetModelHierarchyDefinitions'
          description: 'The hierarchy definitions of the asset model. Each hierarchy
            specifies an asset model whose assets can be children of any other assets
            created from this asset model. For more information, see [Asset hierarchies](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/asset-hierarchies.html)
            in the _IoT SiteWise User Guide_.


            You can specify up to 10 hierarchies per asset model. For more information,
            see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html)
            in the _IoT SiteWise User Guide_.'
        assetModelCompositeModels:
          allOf:
          - $ref: '#/components/schemas/AssetModelCompositeModelDefinitions'
          description: 'The composite models that are part of this asset model. It
            groups properties (such as attributes, measurements, transforms, and metrics)
            and child composite models that model parts of your industrial equipment.
            Each composite model has a type that defines the properties that the composite
            model supports. Use composite models to define alarms on this asset model.


            When creating custom composite models, you need to use [CreateAssetModelCompositeModel](https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_CreateAssetModelCompositeModel.html).
            For more information, see [Creating custom composite models (Components)](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/create-custom-composite-models.html)
            in the _IoT SiteWise User Guide_.'
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique case-sensitive identifier that you can provide to
            ensure the idempotency of the request. Don't reuse this client token if
            a new idempotent request is required.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: A list of key-value pairs that contain metadata for the asset
            model. For more information, see [Tagging your IoT SiteWise resources](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/tag-resources.html)
            in the _IoT SiteWise User Guide_.
      required:
      - assetModelName
    CreateAssetModelResponse:
      type: object
      properties:
        assetModelId:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the asset model, in UUID format. You can use this
            ID when you call other IoT SiteWise API operations.
        assetModelArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: 'The [ARN](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            of the asset model, which has the following format.


            `arn:${Partition}:iotsitewise:${Region}:${Account}:asset-model/${AssetModelId}`'
        assetModelStatus:
          allOf:
          - $ref: '#/components/schemas/AssetModelStatus'
          description: The status of the asset model, which contains a state (`CREATING`
            after successfully calling this operation) and any error message.
      required:
      - assetModelId
      - assetModelArn
      - assetModelStatus
    CreateAssetRequest:
      type: object
      properties:
        assetName:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: A friendly name for the asset.
        assetModelId:
          allOf:
          - $ref: '#/components/schemas/CustomID'
          description: The ID of the asset model from which to create the asset. This
            can be either the actual ID in UUID format, or else `externalId:` followed
            by the external ID, if it has one. For more information, see [Referencing
            objects with external IDs](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/object-ids.html#external-id-references)
            in the _IoT SiteWise User Guide_.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique case-sensitive identifier that you can provide to
            ensure the idempotency of the request. Don't reuse this client token if
            a new idempotent request is required.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: A list of key-value pairs that contain metadata for the asset.
            For more information, see [Tagging your IoT SiteWise resources](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/tag-resources.html)
            in the _IoT SiteWise User Guide_.
        assetDescription:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: A description for the asset.
        assetId:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID to assign to the asset, if desired. IoT SiteWise automatically
            generates a unique ID for you, so this parameter is never required. However,
            if you prefer to supply your own ID instead, you can specify it here in
            UUID format. If you specify your own ID, it must be globally unique.
        assetExternalId:
          allOf:
          - $ref: '#/components/schemas/ExternalId'
          description: An external ID to assign to the asset. The external ID must
            be unique within your Amazon Web Services account. For more information,
            see [Using external IDs](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/object-ids.html#external-ids)
            in the _IoT SiteWise User Guide_.
      required:
      - assetName
      - assetModelId
    CreateAssetResponse:
      type: object
      properties:
        assetId:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the asset, in UUID format. This ID uniquely identifies
            the asset within IoT SiteWise and can be used with other IoT SiteWise
            API operations.
        assetArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: 'The [ARN](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            of the asset, which has the following format.


            `arn:${Partition}:iotsitewise:${Region}:${Account}:asset/${AssetId}`'
        assetStatus:
          allOf:
          - $ref: '#/components/schemas/AssetStatus'
          description: The status of the asset, which contains a state (`CREATING`
            after successfully calling this operation) and any error message.
      required:
      - assetId
      - assetArn
      - assetStatus
    CreateBulkImportJobRequest:
      type: object
      properties:
        jobName:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The unique name that helps identify the job request.
        jobRoleArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The [ARN](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            of the IAM role that allows IoT SiteWise to read Amazon S3 data.
        files:
          allOf:
          - $ref: '#/components/schemas/Files'
          description: The files in the specified Amazon S3 bucket that contain your
            data.
        errorReportLocation:
          allOf:
          - $ref: '#/components/schemas/ErrorReportLocation'
          description: The Amazon S3 destination where errors associated with the
            job creation request are saved.
        jobConfiguration:
          allOf:
          - $ref: '#/components/schemas/JobConfiguration'
          description: Contains the configuration information of a job, such as the
            file format used to save data in Amazon S3.
        adaptiveIngestion:
          allOf:
          - $ref: '#/components/schemas/AdaptiveIngestion'
          description: If set to true, ingest new data into IoT SiteWise storage.
            Measurements with notifications, metrics and transforms are computed.
            If set to false, historical data is ingested into IoT SiteWise as is.
        deleteFilesAfterImport:
          allOf:
          - $ref: '#/components/schemas/DeleteFilesAfterImport'
          description: If set to true, your data files is deleted from S3, after ingestion
            into IoT SiteWise storage.
      required:
      - jobName
      - jobRoleArn
      - files
      - errorReportLocation
      - jobConfiguration
    CreateBulkImportJobResponse:
      type: object
      properties:
        jobId:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the job.
        jobName:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The unique name that helps identify the job request.
        jobStatus:
          allOf:
          - $ref: '#/components/schemas/JobStatus'
          description: "The status of the bulk import job can be one of following\
            \ values:\n\n  * `PENDING` – IoT SiteWise is waiting for the current bulk\
            \ import job to finish.\n\n  * `CANCELLED` – The bulk import job has been\
            \ canceled.\n\n  * `RUNNING` – IoT SiteWise is processing your request\
            \ to import your data from Amazon S3.\n\n  * `COMPLETED` – IoT SiteWise\
            \ successfully completed your request to import data from Amazon S3.\n\
            \n  * `FAILED` – IoT SiteWise couldn't process your request to import\
            \ data from Amazon S3. You can use logs saved in the specified error report\
            \ location in Amazon S3 to troubleshoot issues.\n\n  * `COMPLETED_WITH_FAILURES`\
            \ – IoT SiteWise completed your request to import data from Amazon S3\
            \ with errors. You can use logs saved in the specified error report location\
            \ in Amazon S3 to troubleshoot issues."
      required:
      - jobId
      - jobName
      - jobStatus
    CreateDashboardRequest:
      type: object
      properties:
        projectId:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the project in which to create the dashboard.
        dashboardName:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: A friendly name for the dashboard.
        dashboardDescription:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: A description for the dashboard.
        dashboardDefinition:
          allOf:
          - $ref: '#/components/schemas/DashboardDefinition'
          description: "The dashboard definition specified in a JSON literal.\n\n\
            \  * IoT SiteWise Monitor (Classic) see [Create dashboards (CLI)](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/create-dashboards-using-aws-cli.html)\n\
            \n  * IoT SiteWise Monitor (AI-aware) see [Create dashboards (CLI)](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/create-dashboards-ai-dashboard-cli.html)\n\
            \nin the _IoT SiteWise User Guide_"
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique case-sensitive identifier that you can provide to
            ensure the idempotency of the request. Don't reuse this client token if
            a new idempotent request is required.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: A list of key-value pairs that contain metadata for the dashboard.
            For more information, see [Tagging your IoT SiteWise resources](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/tag-resources.html)
            in the _IoT SiteWise User Guide_.
      required:
      - projectId
      - dashboardName
      - dashboardDefinition
    CreateDashboardResponse:
      type: object
      properties:
        dashboardId:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the dashboard.
        dashboardArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: 'The [ARN](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            of the dashboard, which has the following format.


            `arn:${Partition}:iotsitewise:${Region}:${Account}:dashboard/${DashboardId}`'
      required:
      - dashboardId
      - dashboardArn
    CreateDatasetRequest:
      type: object
      properties:
        datasetId:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the dataset.
        datasetName:
          allOf:
          - $ref: '#/components/schemas/RestrictedName'
          description: The name of the dataset.
        datasetDescription:
          allOf:
          - $ref: '#/components/schemas/RestrictedDescription'
          description: A description about the dataset, and its functionality.
        datasetSource:
          allOf:
          - $ref: '#/components/schemas/DatasetSource'
          description: The data source for the dataset.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique case-sensitive identifier that you can provide to
            ensure the idempotency of the request. Don't reuse this client token if
            a new idempotent request is required.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: A list of key-value pairs that contain metadata for the access
            policy. For more information, see [Tagging your IoT SiteWise resources](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/tag-resources.html)
            in the _IoT SiteWise User Guide_.
      required:
      - datasetName
      - datasetSource
    CreateDatasetResponse:
      type: object
      properties:
        datasetId:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the dataset.
        datasetArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The [ARN](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference-arns.html)
            of the dataset. The format is `arn:${Partition}:iotsitewise:${Region}:${Account}:dataset/${DatasetId}`.
        datasetStatus:
          allOf:
          - $ref: '#/components/schemas/DatasetStatus'
          description: The status of the dataset. This contains the state and any
            error messages. State is `CREATING` after a successfull call to this API,
            and any associated error message. The state is `ACTIVE` when ready to
            use.
      required:
      - datasetId
      - datasetArn
      - datasetStatus
    CreateGatewayRequest:
      type: object
      properties:
        gatewayName:
          allOf:
          - $ref: '#/components/schemas/GatewayName'
          description: A unique name for the gateway.
        gatewayPlatform:
          allOf:
          - $ref: '#/components/schemas/GatewayPlatform'
          description: The gateway's platform. You can only specify one platform in
            a gateway.
        gatewayVersion:
          allOf:
          - $ref: '#/components/schemas/GatewayVersion'
          description: 'The version of the gateway to create. Specify `3` to create
            an MQTT-enabled, V3 gateway and `2` To create a Classic streams, V2 gateway.
            If the version isn''t specified, a Classic streams, V2 gateway is created
            by default.


            We recommend creating an MQTT-enabled, V3 gateway for self-hosted gateways.
            SiteWise Edge gateways on Siemens Industrial Edge should use gateway version
            `2`. For more information on gateway versions, see [ Self-host a SiteWise
            Edge gateway with IoT Greengrass V2](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/gw-self-host-gg2.html).'
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: A list of key-value pairs that contain metadata for the gateway.
            For more information, see [Tagging your IoT SiteWise resources](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/tag-resources.html)
            in the _IoT SiteWise User Guide_.
      required:
      - gatewayName
      - gatewayPlatform
    CreateGatewayResponse:
      type: object
      properties:
        gatewayId:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the gateway device. You can use this ID when you
            call other IoT SiteWise API operations.
        gatewayArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: 'The [ARN](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            of the gateway, which has the following format.


            `arn:${Partition}:iotsitewise:${Region}:${Account}:gateway/${GatewayId}`'
      required:
      - gatewayId
      - gatewayArn
    CreatePortalRequest:
      type: object
      properties:
        portalName:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: A friendly name for the portal.
        portalDescription:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: A description for the portal.
        portalContactEmail:
          allOf:
          - $ref: '#/components/schemas/Email'
          description: The Amazon Web Services administrator's contact email address.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique case-sensitive identifier that you can provide to
            ensure the idempotency of the request. Don't reuse this client token if
            a new idempotent request is required.
        portalLogoImageFile:
          allOf:
          - $ref: '#/components/schemas/ImageFile'
          description: A logo image to display in the portal. Upload a square, high-resolution
            image. The image is displayed on a dark background.
        roleArn:
          allOf:
          - $ref: '#/components/schemas/IamArn'
          description: The [ARN](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            of a service role that allows the portal's users to access your IoT SiteWise
            resources on your behalf. For more information, see [Using service roles
            for IoT SiteWise Monitor](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/monitor-service-role.html)
            in the _IoT SiteWise User Guide_.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: A list of key-value pairs that contain metadata for the portal.
            For more information, see [Tagging your IoT SiteWise resources](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/tag-resources.html)
            in the _IoT SiteWise User Guide_.
        portalAuthMode:
          allOf:
          - $ref: '#/components/schemas/AuthMode'
          description: "The service to use to authenticate users to the portal. Choose\
            \ from the following options:\n\n  * `SSO` – The portal uses IAM Identity\
            \ Center to authenticate users and manage user permissions. Before you\
            \ can create a portal that uses IAM Identity Center, you must enable IAM\
            \ Identity Center. For more information, see [Enabling IAM Identity Center](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/monitor-get-started.html#mon-gs-sso)\
            \ in the _IoT SiteWise User Guide_. This option is only available in Amazon\
            \ Web Services Regions other than the China Regions.\n\n  * `IAM` – The\
            \ portal uses Identity and Access Management to authenticate users and\
            \ manage user permissions.\n\nYou can't change this value after you create\
            \ a portal.\n\nDefault: `SSO`"
        notificationSenderEmail:
          allOf:
          - $ref: '#/components/schemas/Email'
          description: 'The email address that sends alarm notifications.


            If you use the [IoT Events managed Lambda function](https://docs.aws.amazon.com/iotevents/latest/developerguide/lambda-support.html)
            to manage your emails, you must [verify the sender email address in Amazon
            SES](https://docs.aws.amazon.com/ses/latest/DeveloperGuide/verify-email-addresses.html).'
        alarms:
          allOf:
          - $ref: '#/components/schemas/Alarms'
          description: Contains the configuration information of an alarm created
            in an IoT SiteWise Monitor portal. You can use the alarm to monitor an
            asset property and get notified when the asset property value is outside
            a specified range. For more information, see [Monitoring with alarms](https://docs.aws.amazon.com/iot-sitewise/latest/appguide/monitor-alarms.html)
            in the _IoT SiteWise Application Guide_.
        portalType:
          allOf:
          - $ref: '#/components/schemas/PortalType'
          description: Define the type of portal. The value for IoT SiteWise Monitor
            (Classic) is `SITEWISE_PORTAL_V1`. The value for IoT SiteWise Monitor
            (AI-aware) is `SITEWISE_PORTAL_V2`.
        portalTypeConfiguration:
          allOf:
          - $ref: '#/components/schemas/PortalTypeConfiguration'
          description: The configuration entry associated with the specific portal
            type. The value for IoT SiteWise Monitor (Classic) is `SITEWISE_PORTAL_V1`.
            The value for IoT SiteWise Monitor (AI-aware) is `SITEWISE_PORTAL_V2`.
      required:
      - portalName
      - portalContactEmail
      - roleArn
    CreatePortalResponse:
      type: object
      properties:
        portalId:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the created portal.
        portalArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: 'The [ARN](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            of the portal, which has the following format.


            `arn:${Partition}:iotsitewise:${Region}:${Account}:portal/${PortalId}`'
        portalStartUrl:
          allOf:
          - $ref: '#/components/schemas/Url'
          description: The URL for the IoT SiteWise Monitor portal. You can use this
            URL to access portals that use IAM Identity Center for authentication.
            For portals that use IAM for authentication, you must use the IoT SiteWise
            console to get a URL that you can use to access the portal.
        portalStatus:
          allOf:
          - $ref: '#/components/schemas/PortalStatus'
          description: The status of the portal, which contains a state (`CREATING`
            after successfully calling this operation) and any error message.
        ssoApplicationId:
          allOf:
          - $ref: '#/components/schemas/SSOApplicationId'
          description: The associated IAM Identity Center application ID, if the portal
            uses IAM Identity Center.
      required:
      - portalId
      - portalArn
      - portalStartUrl
      - portalStatus
      - ssoApplicationId
    CreateProjectRequest:
      type: object
      properties:
        portalId:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the portal in which to create the project.
        projectName:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: A friendly name for the project.
        projectDescription:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: A description for the project.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique case-sensitive identifier that you can provide to
            ensure the idempotency of the request. Don't reuse this client token if
            a new idempotent request is required.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: A list of key-value pairs that contain metadata for the project.
            For more information, see [Tagging your IoT SiteWise resources](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/tag-resources.html)
            in the _IoT SiteWise User Guide_.
      required:
      - portalId
      - projectName
    CreateProjectResponse:
      type: object
      properties:
        projectId:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the project.
        projectArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: 'The [ARN](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            of the project, which has the following format.


            `arn:${Partition}:iotsitewise:${Region}:${Account}:project/${ProjectId}`'
      required:
      - projectId
      - projectArn
    Csv:
      type: object
      properties:
        columnNames:
          allOf:
          - $ref: '#/components/schemas/ColumnNames'
          description: The column names specified in the .csv file.
      required:
      - columnNames
      description: A .CSV file.
    CustomID:
      type: string
      pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$|^externalId:[a-zA-Z0-9][a-zA-Z_\-0-9.:]*[a-zA-Z0-9]+$
      minLength: 13
      maxLength: 139
    CustomerManagedS3Storage:
      type: object
      properties:
        s3ResourceArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The [ARN](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            of the Amazon S3 object. For more information about how to find the ARN
            for an Amazon S3 object, see [Amazon S3 resources](https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-arn-format.html)
            in the _Amazon Simple Storage Service User Guide_.
        roleArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The [ARN](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            of the Identity and Access Management role that allows IoT SiteWise to
            send data to Amazon S3.
      required:
      - s3ResourceArn
      - roleArn
      description: Contains information about a customer managed Amazon S3 bucket.
    DashboardDefinition:
      type: string
      pattern: ^.+$
      minLength: 0
      maxLength: 204800
    DashboardSummaries:
      type: array
      items:
        $ref: '#/components/schemas/DashboardSummary'
    DashboardSummary:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the dashboard.
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the dashboard
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: The dashboard's description.
        creationDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date the dashboard was created, in Unix epoch time.
        lastUpdateDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date the dashboard was last updated, in Unix epoch time.
      required:
      - id
      - name
      description: Contains a dashboard summary.
    DataSetReference:
      type: object
      properties:
        datasetArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The [ARN](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference-arns.html)
            of the dataset. The format is `arn:${Partition}:iotsitewise:${Region}:${Account}:dataset/${DatasetId}`.
        source:
          allOf:
          - $ref: '#/components/schemas/Source'
          description: The data source for the dataset.
      description: Contains information about the dataset use and it's source.
    DatasetSource:
      type: object
      properties:
        sourceType:
          allOf:
          - $ref: '#/components/schemas/DatasetSourceType'
          description: The type of data source for the dataset.
        sourceFormat:
          allOf:
          - $ref: '#/components/schemas/DatasetSourceFormat'
          description: The format of the dataset source associated with the dataset.
        sourceDetail:
          allOf:
          - $ref: '#/components/schemas/SourceDetail'
          description: The details of the dataset source associated with the dataset.
      required:
      - sourceType
      - sourceFormat
      description: The data source for the dataset.
    DatasetSourceFormat:
      type: string
      enum:
      - KNOWLEDGE_BASE
    DatasetSourceType:
      type: string
      enum:
      - KENDRA
    DatasetState:
      type: string
      enum:
      - CREATING
      - ACTIVE
      - UPDATING
      - DELETING
      - FAILED
    DatasetStatus:
      type: object
      properties:
        state:
          allOf:
          - $ref: '#/components/schemas/DatasetState'
          description: The current status of the dataset.
        error:
          $ref: '#/components/schemas/ErrorDetails'
      required:
      - state
      description: The status of the dataset. This contains the state and any error
        messages. The state is `ACTIVE` when ready to use.
    DatasetSummaries:
      type: array
      items:
        $ref: '#/components/schemas/DatasetSummary'
    DatasetSummary:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the dataset.
        arn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The [ARN](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference-arns.html)
            of the dataset. The format is `arn:${Partition}:iotsitewise:${Region}:${Account}:dataset/${DatasetId}`.
        name:
          allOf:
          - $ref: '#/components/schemas/RestrictedName'
          description: The name of the dataset.
        description:
          allOf:
          - $ref: '#/components/schemas/RestrictedDescription'
          description: A description about the dataset, and its functionality.
        creationDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The dataset creation date, in Unix epoch time.
        lastUpdateDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date the dataset was last updated, in Unix epoch time.
        status:
          allOf:
          - $ref: '#/components/schemas/DatasetStatus'
          description: The status of the dataset. This contains the state and any
            error messages. The state is `ACTIVE` when ready to use.
      required:
      - id
      - arn
      - name
      - description
      - creationDate
      - lastUpdateDate
      - status
      description: The summary details for the dataset.
    Datum:
      type: object
      properties:
        scalarValue:
          allOf:
          - $ref: '#/components/schemas/ScalarValue'
          description: Indicates if the data point is a scalar value such as integer,
            string, double, or Boolean.
        arrayValue:
          allOf:
          - $ref: '#/components/schemas/DatumList'
          description: Indicates if the data point is an array.
        rowValue:
          allOf:
          - $ref: '#/components/schemas/Row'
          description: Indicates if the data point is a row.
        nullValue:
          allOf:
          - $ref: '#/components/schemas/NullableBoolean'
          description: Indicates if the data point is null.
      description: Represents a single data point in a query result.
    DatumList:
      type: array
      items:
        $ref: '#/components/schemas/Datum'
    DefaultValue:
      type: string
      pattern: ^[^\u0000-\u001F\u007F]+$
    DeleteAccessPolicyRequest:
      type: object
      properties:
        accessPolicyId:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the access policy to be deleted.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique case-sensitive identifier that you can provide to
            ensure the idempotency of the request. Don't reuse this client token if
            a new idempotent request is required.
      required:
      - accessPolicyId
    DeleteAccessPolicyResponse:
      type: object
      properties: {}
    DeleteAssetModelCompositeModelRequest:
      type: object
      properties:
        assetModelId:
          allOf:
          - $ref: '#/components/schemas/CustomID'
          description: The ID of the asset model, in UUID format.
        assetModelCompositeModelId:
          allOf:
          - $ref: '#/components/schemas/CustomID'
          description: The ID of a composite model on this asset model.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique case-sensitive identifier that you can provide to
            ensure the idempotency of the request. Don't reuse this client token if
            a new idempotent request is required.
        ifMatch:
          allOf:
          - $ref: '#/components/schemas/ETag'
          description: The expected current entity tag (ETag) for the asset model’s
            latest or active version (specified using `matchForVersionType`). The
            delete request is rejected if the tag does not match the latest or active
            version's current entity tag. See [Optimistic locking for asset model
            writes](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/opt-locking-for-model.html)
            in the _IoT SiteWise User Guide_.
        ifNoneMatch:
          allOf:
          - $ref: '#/components/schemas/SelectAll'
          description: Accepts ***** to reject the delete request if an active version
            (specified using `matchForVersionType` as `ACTIVE`) already exists for
            the asset model.
        matchForVersionType:
          allOf:
          - $ref: '#/components/schemas/AssetModelVersionType'
          description: Specifies the asset model version type (`LATEST` or `ACTIVE`)
            used in conjunction with `If-Match` or `If-None-Match` headers to determine
            the target ETag for the delete operation.
      required:
      - assetModelId
      - assetModelCompositeModelId
    DeleteAssetModelCompositeModelResponse:
      type: object
      properties:
        assetModelStatus:
          $ref: '#/components/schemas/AssetModelStatus'
      required:
      - assetModelStatus
    DeleteAssetModelRequest:
      type: object
      properties:
        assetModelId:
          allOf:
          - $ref: '#/components/schemas/CustomID'
          description: The ID of the asset model to delete. This can be either the
            actual ID in UUID format, or else `externalId:` followed by the external
            ID, if it has one. For more information, see [Referencing objects with
            external IDs](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/object-ids.html#external-id-references)
            in the _IoT SiteWise User Guide_.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique case-sensitive identifier that you can provide to
            ensure the idempotency of the request. Don't reuse this client token if
            a new idempotent request is required.
        ifMatch:
          allOf:
          - $ref: '#/components/schemas/ETag'
          description: The expected current entity tag (ETag) for the asset model’s
            latest or active version (specified using `matchForVersionType`). The
            delete request is rejected if the tag does not match the latest or active
            version's current entity tag. See [Optimistic locking for asset model
            writes](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/opt-locking-for-model.html)
            in the _IoT SiteWise User Guide_.
        ifNoneMatch:
          allOf:
          - $ref: '#/components/schemas/SelectAll'
          description: Accepts ***** to reject the delete request if an active version
            (specified using `matchForVersionType` as `ACTIVE`) already exists for
            the asset model.
        matchForVersionType:
          allOf:
          - $ref: '#/components/schemas/AssetModelVersionType'
          description: Specifies the asset model version type (`LATEST` or `ACTIVE`)
            used in conjunction with `If-Match` or `If-None-Match` headers to determine
            the target ETag for the delete operation.
      required:
      - assetModelId
    DeleteAssetModelResponse:
      type: object
      properties:
        assetModelStatus:
          allOf:
          - $ref: '#/components/schemas/AssetModelStatus'
          description: The status of the asset model, which contains a state (`DELETING`
            after successfully calling this operation) and any error message.
      required:
      - assetModelStatus
    DeleteAssetRequest:
      type: object
      properties:
        assetId:
          allOf:
          - $ref: '#/components/schemas/CustomID'
          description: The ID of the asset to delete. This can be either the actual
            ID in UUID format, or else `externalId:` followed by the external ID,
            if it has one. For more information, see [Referencing objects with external
            IDs](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/object-ids.html#external-id-references)
            in the _IoT SiteWise User Guide_.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique case-sensitive identifier that you can provide to
            ensure the idempotency of the request. Don't reuse this client token if
            a new idempotent request is required.
      required:
      - assetId
    DeleteAssetResponse:
      type: object
      properties:
        assetStatus:
          allOf:
          - $ref: '#/components/schemas/AssetStatus'
          description: The status of the asset, which contains a state (`DELETING`
            after successfully calling this operation) and any error message.
      required:
      - assetStatus
    DeleteDashboardRequest:
      type: object
      properties:
        dashboardId:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the dashboard to delete.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique case-sensitive identifier that you can provide to
            ensure the idempotency of the request. Don't reuse this client token if
            a new idempotent request is required.
      required:
      - dashboardId
    DeleteDashboardResponse:
      type: object
      properties: {}
    DeleteDatasetRequest:
      type: object
      properties:
        datasetId:
          allOf:
          - $ref: '#/components/schemas/CustomID'
          description: The ID of the dataset.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique case-sensitive identifier that you can provide to
            ensure the idempotency of the request. Don't reuse this client token if
            a new idempotent request is required.
      required:
      - datasetId
    DeleteDatasetResponse:
      type: object
      properties:
        datasetStatus:
          allOf:
          - $ref: '#/components/schemas/DatasetStatus'
          description: The status of the dataset. This contains the state and any
            error messages. State is `DELETING` after a successfull call to this API,
            and any associated error message.
      required:
      - datasetStatus
    DeleteFilesAfterImport:
      type: boolean
    DeleteGatewayRequest:
      type: object
      properties:
        gatewayId:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the gateway to delete.
      required:
      - gatewayId
    DeletePortalRequest:
      type: object
      properties:
        portalId:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the portal to delete.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique case-sensitive identifier that you can provide to
            ensure the idempotency of the request. Don't reuse this client token if
            a new idempotent request is required.
      required:
      - portalId
    DeletePortalResponse:
      type: object
      properties:
        portalStatus:
          allOf:
          - $ref: '#/components/schemas/PortalStatus'
          description: The status of the portal, which contains a state (`DELETING`
            after successfully calling this operation) and any error message.
      required:
      - portalStatus
    DeleteProjectRequest:
      type: object
      properties:
        projectId:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the project.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique case-sensitive identifier that you can provide to
            ensure the idempotency of the request. Don't reuse this client token if
            a new idempotent request is required.
      required:
      - projectId
    DeleteProjectResponse:
      type: object
      properties: {}
    DeleteTimeSeriesRequest:
      type: object
      properties:
        alias:
          allOf:
          - $ref: '#/components/schemas/PropertyAlias'
          description: The alias that identifies the time series.
        assetId:
          allOf:
          - $ref: '#/components/schemas/CustomID'
          description: The ID of the asset in which the asset property was created.
            This can be either the actual ID in UUID format, or else `externalId:`
            followed by the external ID, if it has one. For more information, see
            [Referencing objects with external IDs](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/object-ids.html#external-id-references)
            in the _IoT SiteWise User Guide_.
        propertyId:
          allOf:
          - $ref: '#/components/schemas/CustomID'
          description: The ID of the asset property. This can be either the actual
            ID in UUID format, or else `externalId:` followed by the external ID,
            if it has one. For more information, see [Referencing objects with external
            IDs](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/object-ids.html#external-id-references)
            in the _IoT SiteWise User Guide_.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique case-sensitive identifier that you can provide to
            ensure the idempotency of the request. Don't reuse this client token if
            a new idempotent request is required.
    DescribeAccessPolicyRequest:
      type: object
      properties:
        accessPolicyId:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the access policy.
      required:
      - accessPolicyId
    DescribeAccessPolicyResponse:
      type: object
      properties:
        accessPolicyId:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the access policy.
        accessPolicyArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: 'The [ARN](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            of the access policy, which has the following format.


            `arn:${Partition}:iotsitewise:${Region}:${Account}:access-policy/${AccessPolicyId}`'
        accessPolicyIdentity:
          allOf:
          - $ref: '#/components/schemas/Identity'
          description: The identity (IAM Identity Center user, IAM Identity Center
            group, or IAM user) to which this access policy applies.
        accessPolicyResource:
          allOf:
          - $ref: '#/components/schemas/Resource'
          description: The IoT SiteWise Monitor resource (portal or project) to which
            this access policy provides access.
        accessPolicyPermission:
          allOf:
          - $ref: '#/components/schemas/Permission'
          description: The access policy permission. Note that a project `ADMINISTRATOR`
            is also known as a project owner.
        accessPolicyCreationDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date the access policy was created, in Unix epoch time.
        accessPolicyLastUpdateDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date the access policy was last updated, in Unix epoch
            time.
      required:
      - accessPolicyId
      - accessPolicyArn
      - accessPolicyIdentity
      - accessPolicyResource
      - accessPolicyPermission
      - accessPolicyCreationDate
      - accessPolicyLastUpdateDate
    DescribeActionRequest:
      type: object
      properties:
        actionId:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the action.
      required:
      - actionId
    DescribeActionResponse:
      type: object
      properties:
        actionId:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the action.
        targetResource:
          allOf:
          - $ref: '#/components/schemas/TargetResource'
          description: The resource the action will be taken on.
        actionDefinitionId:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the action definition.
        actionPayload:
          allOf:
          - $ref: '#/components/schemas/ActionPayload'
          description: The JSON payload of the action.
        executionTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time the action was executed.
      required:
      - actionId
      - targetResource
      - actionDefinitionId
      - actionPayload
      - executionTime
    DescribeAssetCompositeModelRequest:
      type: object
      properties:
        assetId:
          allOf:
          - $ref: '#/components/schemas/CustomID'
          description: The ID of the asset. This can be either the actual ID in UUID
            format, or else `externalId:` followed by the external ID, if it has one.
            For more information, see [Referencing objects with external IDs](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/object-ids.html#external-id-references)
            in the _IoT SiteWise User Guide_.
        assetCompositeModelId:
          allOf:
          - $ref: '#/components/schemas/CustomID'
          description: The ID of a composite model on this asset. This can be either
            the actual ID in UUID format, or else `externalId:` followed by the external
            ID, if it has one. For more information, see [Referencing objects with
            external IDs](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/object-ids.html#external-id-references)
            in the _IoT SiteWise User Guide_.
      required:
      - assetId
      - assetCompositeModelId
    DescribeAssetCompositeModelResponse:
      type: object
      properties:
        assetId:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the asset, in UUID format. This ID uniquely identifies
            the asset within IoT SiteWise and can be used with other IoT SiteWise
            APIs.
        assetCompositeModelId:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of a composite model on this asset.
        assetCompositeModelExternalId:
          allOf:
          - $ref: '#/components/schemas/ExternalId'
          description: 'An external ID to assign to the asset model.


            If the composite model is a component-based composite model, or one nested
            inside a component model, you can only set the external ID using `UpdateAssetModelCompositeModel`
            and specifying the derived ID of the model or property from the created
            model it''s a part of.'
        assetCompositeModelPath:
          allOf:
          - $ref: '#/components/schemas/AssetCompositeModelPath'
          description: The path to the composite model listing the parent composite
            models.
        assetCompositeModelName:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The unique, friendly name for the composite model.
        assetCompositeModelDescription:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: A description for the composite model.
        assetCompositeModelType:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The composite model type. Valid values are `AWS/ALARM`, `CUSTOM`,
            or ` AWS/L4E_ANOMALY`.
        assetCompositeModelProperties:
          allOf:
          - $ref: '#/components/schemas/AssetProperties'
          description: The property definitions of the composite model that was used
            to create the asset.
        assetCompositeModelSummaries:
          allOf:
          - $ref: '#/components/schemas/AssetCompositeModelSummaries'
          description: The list of composite model summaries.
        actionDefinitions:
          allOf:
          - $ref: '#/components/schemas/ActionDefinitions'
          description: The available actions for a composite model on this asset.
      required:
      - assetId
      - assetCompositeModelId
      - assetCompositeModelPath
      - assetCompositeModelName
      - assetCompositeModelDescription
      - assetCompositeModelType
      - assetCompositeModelProperties
      - assetCompositeModelSummaries
    DescribeAssetModelCompositeModelRequest:
      type: object
      properties:
        assetModelId:
          allOf:
          - $ref: '#/components/schemas/CustomID'
          description: The ID of the asset model. This can be either the actual ID
            in UUID format, or else `externalId:` followed by the external ID, if
            it has one. For more information, see [Referencing objects with external
            IDs](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/object-ids.html#external-id-references)
            in the _IoT SiteWise User Guide_.
        assetModelCompositeModelId:
          allOf:
          - $ref: '#/components/schemas/CustomID'
          description: The ID of a composite model on this asset model. This can be
            either the actual ID in UUID format, or else `externalId:` followed by
            the external ID, if it has one. For more information, see [Referencing
            objects with external IDs](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/object-ids.html#external-id-references)
            in the _IoT SiteWise User Guide_.
        assetModelVersion:
          allOf:
          - $ref: '#/components/schemas/AssetModelVersionFilter'
          description: The version alias that specifies the latest or active version
            of the asset model. The details are returned in the response. The default
            value is `LATEST`. See [ Asset model versions](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/model-active-version.html)
            in the _IoT SiteWise User Guide_.
      required:
      - assetModelId
      - assetModelCompositeModelId
    DescribeAssetModelCompositeModelResponse:
      type: object
      properties:
        assetModelId:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the asset model, in UUID format.
        assetModelCompositeModelId:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of a composite model on this asset model.
        assetModelCompositeModelExternalId:
          allOf:
          - $ref: '#/components/schemas/ExternalId'
          description: The external ID of a composite model on this asset model.
        assetModelCompositeModelPath:
          allOf:
          - $ref: '#/components/schemas/AssetModelCompositeModelPath'
          description: The path to the composite model listing the parent composite
            models.
        assetModelCompositeModelName:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The unique, friendly name for the composite model.
        assetModelCompositeModelDescription:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: The description for the composite model.
        assetModelCompositeModelType:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The composite model type. Valid values are `AWS/ALARM`, `CUSTOM`,
            or ` AWS/L4E_ANOMALY`.
        assetModelCompositeModelProperties:
          allOf:
          - $ref: '#/components/schemas/AssetModelProperties'
          description: The property definitions of the composite model.
        compositionDetails:
          allOf:
          - $ref: '#/components/schemas/CompositionDetails'
          description: Metadata for the composition relationship established by using
            `composedAssetModelId` in [ `CreateAssetModelCompositeModel` ](https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_CreateAssetModelCompositeModel.html).
            For instance, an array detailing the path of the composition relationship
            for this composite model.
        assetModelCompositeModelSummaries:
          allOf:
          - $ref: '#/components/schemas/AssetModelCompositeModelSummaries'
          description: The list of composite model summaries for the composite model.
        actionDefinitions:
          allOf:
          - $ref: '#/components/schemas/ActionDefinitions'
          description: The available actions for a composite model on this asset model.
      required:
      - assetModelId
      - assetModelCompositeModelId
      - assetModelCompositeModelPath
      - assetModelCompositeModelName
      - assetModelCompositeModelDescription
      - assetModelCompositeModelType
      - assetModelCompositeModelProperties
      - assetModelCompositeModelSummaries
    DescribeAssetModelRequest:
      type: object
      properties:
        assetModelId:
          allOf:
          - $ref: '#/components/schemas/CustomID'
          description: The ID of the asset model. This can be either the actual ID
            in UUID format, or else `externalId:` followed by the external ID, if
            it has one. For more information, see [Referencing objects with external
            IDs](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/object-ids.html#external-id-references)
            in the _IoT SiteWise User Guide_.
        excludeProperties:
          allOf:
          - $ref: '#/components/schemas/ExcludeProperties'
          description: Whether or not to exclude asset model properties from the response.
        assetModelVersion:
          allOf:
          - $ref: '#/components/schemas/AssetModelVersionFilter'
          description: The version alias that specifies the latest or active version
            of the asset model. The details are returned in the response. The default
            value is `LATEST`. See [ Asset model versions](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/model-active-version.html)
            in the _IoT SiteWise User Guide_.
      required:
      - assetModelId
    DescribeAssetModelResponse:
      type: object
      properties:
        assetModelId:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the asset model, in UUID format.
        assetModelExternalId:
          allOf:
          - $ref: '#/components/schemas/ExternalId'
          description: The external ID of the asset model, if any.
        assetModelArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: 'The [ARN](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            of the asset model, which has the following format.


            `arn:${Partition}:iotsitewise:${Region}:${Account}:asset-model/${AssetModelId}`'
        assetModelName:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the asset model.
        assetModelType:
          allOf:
          - $ref: '#/components/schemas/AssetModelType'
          description: "The type of asset model.\n\n  * **ASSET_MODEL** – (default)\
            \ An asset model that you can use to create assets. Can't be included\
            \ as a component in another asset model.\n\n  * **COMPONENT_MODEL** –\
            \ A reusable component that you can include in the composite models of\
            \ other asset models. You can't create assets directly from this type\
            \ of asset model."
        assetModelDescription:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: The asset model's description.
        assetModelProperties:
          allOf:
          - $ref: '#/components/schemas/AssetModelProperties'
          description: 'The list of asset properties for the asset model.


            This object doesn''t include properties that you define in composite models.
            You can find composite model properties in the `assetModelCompositeModels`
            object.'
        assetModelHierarchies:
          allOf:
          - $ref: '#/components/schemas/AssetModelHierarchies'
          description: A list of asset model hierarchies that each contain a `childAssetModelId`
            and a `hierarchyId` (named `id`). A hierarchy specifies allowed parent/child
            asset relationships for an asset model.
        assetModelCompositeModels:
          allOf:
          - $ref: '#/components/schemas/AssetModelCompositeModels'
          description: The list of built-in composite models for the asset model,
            such as those with those of type `AWS/ALARMS`.
        assetModelCompositeModelSummaries:
          allOf:
          - $ref: '#/components/schemas/AssetModelCompositeModelSummaries'
          description: The list of the immediate child custom composite model summaries
            for the asset model.
        assetModelCreationDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date the asset model was created, in Unix epoch time.
        assetModelLastUpdateDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date the asset model was last updated, in Unix epoch time.
        assetModelStatus:
          allOf:
          - $ref: '#/components/schemas/AssetModelStatus'
          description: The current status of the asset model, which contains a state
            and any error message.
        assetModelVersion:
          allOf:
          - $ref: '#/components/schemas/Version'
          description: The version of the asset model. See [ Asset model versions](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/model-active-version.html)
            in the _IoT SiteWise User Guide_.
        eTag:
          allOf:
          - $ref: '#/components/schemas/ETag'
          description: 'The entity tag (ETag) is a hash of the retrieved version of
            the asset model. It''s used to make concurrent updates safely to the resource.
            See [Optimistic locking for asset model writes](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/opt-locking-for-model.html)
            in the _IoT SiteWise User Guide_.


            See [ Optimistic locking for asset model writes](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/opt-locking-for-model.html)
            in the _IoT SiteWise User Guide_.'
      required:
      - assetModelId
      - assetModelArn
      - assetModelName
      - assetModelDescription
      - assetModelProperties
      - assetModelHierarchies
      - assetModelCreationDate
      - assetModelLastUpdateDate
      - assetModelStatus
    DescribeAssetPropertyRequest:
      type: object
      properties:
        assetId:
          allOf:
          - $ref: '#/components/schemas/CustomID'
          description: The ID of the asset. This can be either the actual ID in UUID
            format, or else `externalId:` followed by the external ID, if it has one.
            For more information, see [Referencing objects with external IDs](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/object-ids.html#external-id-references)
            in the _IoT SiteWise User Guide_.
        propertyId:
          allOf:
          - $ref: '#/components/schemas/CustomID'
          description: The ID of the asset property. This can be either the actual
            ID in UUID format, or else `externalId:` followed by the external ID,
            if it has one. For more information, see [Referencing objects with external
            IDs](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/object-ids.html#external-id-references)
            in the _IoT SiteWise User Guide_.
      required:
      - assetId
      - propertyId
    DescribeAssetPropertyResponse:
      type: object
      properties:
        assetId:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the asset, in UUID format.
        assetName:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the asset.
        assetModelId:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the asset model, in UUID format.
        assetProperty:
          allOf:
          - $ref: '#/components/schemas/Property'
          description: 'The asset property''s definition, alias, and notification
            state.


            This response includes this object for normal asset properties. If you
            describe an asset property in a composite model, this response includes
            the asset property information in `compositeModel`.'
        compositeModel:
          allOf:
          - $ref: '#/components/schemas/CompositeModelProperty'
          description: The composite model that declares this asset property, if this
            asset property exists in a composite model.
        assetExternalId:
          allOf:
          - $ref: '#/components/schemas/ExternalId'
          description: The external ID of the asset. For more information, see [Using
            external IDs](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/object-ids.html#external-ids)
            in the _IoT SiteWise User Guide_.
      required:
      - assetId
      - assetName
      - assetModelId
    DescribeAssetRequest:
      type: object
      properties:
        assetId:
          allOf:
          - $ref: '#/components/schemas/CustomID'
          description: The ID of the asset. This can be either the actual ID in UUID
            format, or else `externalId:` followed by the external ID, if it has one.
            For more information, see [Referencing objects with external IDs](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/object-ids.html#external-id-references)
            in the _IoT SiteWise User Guide_.
        excludeProperties:
          allOf:
          - $ref: '#/components/schemas/ExcludeProperties'
          description: Whether or not to exclude asset properties from the response.
      required:
      - assetId
    DescribeAssetResponse:
      type: object
      properties:
        assetId:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the asset, in UUID format.
        assetArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: 'The [ARN](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            of the asset, which has the following format.


            `arn:${Partition}:iotsitewise:${Region}:${Account}:asset/${AssetId}`'
        assetName:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the asset.
        assetModelId:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the asset model that was used to create the asset.
        assetProperties:
          allOf:
          - $ref: '#/components/schemas/AssetProperties'
          description: 'The list of asset properties for the asset.


            This object doesn''t include properties that you define in composite models.
            You can find composite model properties in the `assetCompositeModels`
            object.'
        assetHierarchies:
          allOf:
          - $ref: '#/components/schemas/AssetHierarchies'
          description: A list of asset hierarchies that each contain a `hierarchyId`.
            A hierarchy specifies allowed parent/child asset relationships.
        assetCompositeModels:
          allOf:
          - $ref: '#/components/schemas/AssetCompositeModels'
          description: The composite models for the asset.
        assetCreationDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date the asset was created, in Unix epoch time.
        assetLastUpdateDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date the asset was last updated, in Unix epoch time.
        assetStatus:
          allOf:
          - $ref: '#/components/schemas/AssetStatus'
          description: The current status of the asset, which contains a state and
            any error message.
        assetDescription:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: A description for the asset.
        assetCompositeModelSummaries:
          allOf:
          - $ref: '#/components/schemas/AssetCompositeModelSummaries'
          description: The list of the immediate child custom composite model summaries
            for the asset.
        assetExternalId:
          allOf:
          - $ref: '#/components/schemas/ExternalId'
          description: The external ID of the asset, if any.
      required:
      - assetId
      - assetArn
      - assetName
      - assetModelId
      - assetProperties
      - assetHierarchies
      - assetCreationDate
      - assetLastUpdateDate
      - assetStatus
    DescribeBulkImportJobRequest:
      type: object
      properties:
        jobId:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the job.
      required:
      - jobId
    DescribeBulkImportJobResponse:
      type: object
      properties:
        jobId:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the job.
        jobName:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The unique name that helps identify the job request.
        jobStatus:
          allOf:
          - $ref: '#/components/schemas/JobStatus'
          description: "The status of the bulk import job can be one of following\
            \ values:\n\n  * `PENDING` – IoT SiteWise is waiting for the current bulk\
            \ import job to finish.\n\n  * `CANCELLED` – The bulk import job has been\
            \ canceled.\n\n  * `RUNNING` – IoT SiteWise is processing your request\
            \ to import your data from Amazon S3.\n\n  * `COMPLETED` – IoT SiteWise\
            \ successfully completed your request to import data from Amazon S3.\n\
            \n  * `FAILED` – IoT SiteWise couldn't process your request to import\
            \ data from Amazon S3. You can use logs saved in the specified error report\
            \ location in Amazon S3 to troubleshoot issues.\n\n  * `COMPLETED_WITH_FAILURES`\
            \ – IoT SiteWise completed your request to import data from Amazon S3\
            \ with errors. You can use logs saved in the specified error report location\
            \ in Amazon S3 to troubleshoot issues."
        jobRoleArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The [ARN](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            of the IAM role that allows IoT SiteWise to read Amazon S3 data.
        files:
          allOf:
          - $ref: '#/components/schemas/Files'
          description: The files in the specified Amazon S3 bucket that contain your
            data.
        errorReportLocation:
          allOf:
          - $ref: '#/components/schemas/ErrorReportLocation'
          description: The Amazon S3 destination where errors associated with the
            job creation request are saved.
        jobConfiguration:
          allOf:
          - $ref: '#/components/schemas/JobConfiguration'
          description: Contains the configuration information of a job, such as the
            file format used to save data in Amazon S3.
        jobCreationDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date the job was created, in Unix epoch TIME.
        jobLastUpdateDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date the job was last updated, in Unix epoch time.
        adaptiveIngestion:
          allOf:
          - $ref: '#/components/schemas/AdaptiveIngestion'
          description: If set to true, ingest new data into IoT SiteWise storage.
            Measurements with notifications, metrics and transforms are computed.
            If set to false, historical data is ingested into IoT SiteWise as is.
        deleteFilesAfterImport:
          allOf:
          - $ref: '#/components/schemas/DeleteFilesAfterImport'
          description: If set to true, your data files is deleted from S3, after ingestion
            into IoT SiteWise storage.
      required:
      - jobId
      - jobName
      - jobStatus
      - jobRoleArn
      - files
      - errorReportLocation
      - jobConfiguration
      - jobCreationDate
      - jobLastUpdateDate
    DescribeDashboardRequest:
      type: object
      properties:
        dashboardId:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the dashboard.
      required:
      - dashboardId
    DescribeDashboardResponse:
      type: object
      properties:
        dashboardId:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the dashboard.
        dashboardArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: 'The [ARN](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            of the dashboard, which has the following format.


            `arn:${Partition}:iotsitewise:${Region}:${Account}:dashboard/${DashboardId}`'
        dashboardName:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the dashboard.
        projectId:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the project that the dashboard is in.
        dashboardDescription:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: The dashboard's description.
        dashboardDefinition:
          allOf:
          - $ref: '#/components/schemas/DashboardDefinition'
          description: The dashboard's definition JSON literal. For detailed information,
            see [Creating dashboards (CLI)](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/create-dashboards-using-aws-cli.html)
            in the _IoT SiteWise User Guide_.
        dashboardCreationDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date the dashboard was created, in Unix epoch time.
        dashboardLastUpdateDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date the dashboard was last updated, in Unix epoch time.
      required:
      - dashboardId
      - dashboardArn
      - dashboardName
      - projectId
      - dashboardDefinition
      - dashboardCreationDate
      - dashboardLastUpdateDate
    DescribeDatasetRequest:
      type: object
      properties:
        datasetId:
          allOf:
          - $ref: '#/components/schemas/CustomID'
          description: The ID of the dataset.
      required:
      - datasetId
    DescribeDatasetResponse:
      type: object
      properties:
        datasetId:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the dataset.
        datasetArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The [ARN](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference-arns.html)
            of the dataset. The format is `arn:${Partition}:iotsitewise:${Region}:${Account}:dataset/${DatasetId}`.
        datasetName:
          allOf:
          - $ref: '#/components/schemas/RestrictedName'
          description: The name of the dataset.
        datasetDescription:
          allOf:
          - $ref: '#/components/schemas/RestrictedDescription'
          description: A description about the dataset, and its functionality.
        datasetSource:
          allOf:
          - $ref: '#/components/schemas/DatasetSource'
          description: The data source for the dataset.
        datasetStatus:
          allOf:
          - $ref: '#/components/schemas/DatasetStatus'
          description: The status of the dataset. This contains the state and any
            error messages. State is `CREATING` after a successfull call to this API,
            and any associated error message. The state is `ACTIVE` when ready to
            use.
        datasetCreationDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The dataset creation date, in Unix epoch time.
        datasetLastUpdateDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date the dataset was last updated, in Unix epoch time.
        datasetVersion:
          allOf:
          - $ref: '#/components/schemas/Version'
          description: The version of the dataset.
      required:
      - datasetId
      - datasetArn
      - datasetName
      - datasetDescription
      - datasetSource
      - datasetStatus
      - datasetCreationDate
      - datasetLastUpdateDate
    DescribeDefaultEncryptionConfigurationRequest:
      type: object
      properties: {}
    DescribeDefaultEncryptionConfigurationResponse:
      type: object
      properties:
        encryptionType:
          allOf:
          - $ref: '#/components/schemas/EncryptionType'
          description: The type of encryption used for the encryption configuration.
        kmsKeyArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The key ARN of the customer managed key used for KMS encryption
            if you use `KMS_BASED_ENCRYPTION`.
        configurationStatus:
          allOf:
          - $ref: '#/components/schemas/ConfigurationStatus'
          description: The status of the account configuration. This contains the
            `ConfigurationState`. If there's an error, it also contains the `ErrorDetails`.
      required:
      - encryptionType
      - configurationStatus
    DescribeGatewayCapabilityConfigurationRequest:
      type: object
      properties:
        gatewayId:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the gateway that defines the capability configuration.
        capabilityNamespace:
          allOf:
          - $ref: '#/components/schemas/CapabilityNamespace'
          description: The namespace of the capability configuration. For example,
            if you configure OPC-UA sources from the IoT SiteWise console, your OPC-UA
            capability configuration has the namespace `iotsitewise:opcuacollector:version`,
            where `version` is a number such as `1`.
      required:
      - gatewayId
      - capabilityNamespace
    DescribeGatewayCapabilityConfigurationResponse:
      type: object
      properties:
        gatewayId:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the gateway that defines the capability configuration.
        capabilityNamespace:
          allOf:
          - $ref: '#/components/schemas/CapabilityNamespace'
          description: The namespace of the gateway capability.
        capabilityConfiguration:
          allOf:
          - $ref: '#/components/schemas/CapabilityConfiguration'
          description: The JSON document that defines the gateway capability's configuration.
            For more information, see [Configuring data sources (CLI)](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/configure-sources.html#configure-source-cli)
            in the _IoT SiteWise User Guide_.
        capabilitySyncStatus:
          allOf:
          - $ref: '#/components/schemas/CapabilitySyncStatus'
          description: "The synchronization status of the capability configuration.\
            \ The sync status can be one of the following:\n\n  * `IN_SYNC` – The\
            \ gateway is running the capability configuration.\n\n  * `NOT_APPLICABLE`\
            \ – Synchronization is not required for this capability configuration.\
            \ This is most common when integrating partner data sources, because the\
            \ data integration is handled externally by the partner.\n\n  * `OUT_OF_SYNC`\
            \ – The gateway hasn't received the capability configuration.\n\n  * `SYNC_FAILED`\
            \ – The gateway rejected the capability configuration.\n\n  * `UNKNOWN`\
            \ – The synchronization status is currently unknown due to an undetermined\
            \ or temporary error."
      required:
      - gatewayId
      - capabilityNamespace
      - capabilityConfiguration
      - capabilitySyncStatus
    DescribeGatewayRequest:
      type: object
      properties:
        gatewayId:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the gateway device.
      required:
      - gatewayId
    DescribeGatewayResponse:
      type: object
      properties:
        gatewayId:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the gateway device.
        gatewayName:
          allOf:
          - $ref: '#/components/schemas/GatewayName'
          description: The name of the gateway.
        gatewayArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: 'The [ARN](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            of the gateway, which has the following format.


            `arn:${Partition}:iotsitewise:${Region}:${Account}:gateway/${GatewayId}`'
        gatewayPlatform:
          allOf:
          - $ref: '#/components/schemas/GatewayPlatform'
          description: The gateway's platform.
        gatewayVersion:
          allOf:
          - $ref: '#/components/schemas/GatewayVersion'
          description: The version of the gateway. A value of `3` indicates an MQTT-enabled,
            V3 gateway, while `2` indicates a Classic streams, V2 gateway.
        gatewayCapabilitySummaries:
          allOf:
          - $ref: '#/components/schemas/GatewayCapabilitySummaries'
          description: A list of gateway capability summaries that each contain a
            namespace and status. Each gateway capability defines data sources for
            the gateway. To retrieve a capability configuration's definition, use
            [DescribeGatewayCapabilityConfiguration](https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_DescribeGatewayCapabilityConfiguration.html).
        creationDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date the gateway was created, in Unix epoch time.
        lastUpdateDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date the gateway was last updated, in Unix epoch time.
      required:
      - gatewayId
      - gatewayName
      - gatewayArn
      - gatewayCapabilitySummaries
      - creationDate
      - lastUpdateDate
    DescribeLoggingOptionsRequest:
      type: object
      properties: {}
    DescribeLoggingOptionsResponse:
      type: object
      properties:
        loggingOptions:
          allOf:
          - $ref: '#/components/schemas/LoggingOptions'
          description: The current logging options.
      required:
      - loggingOptions
    DescribePortalRequest:
      type: object
      properties:
        portalId:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the portal.
      required:
      - portalId
    DescribePortalResponse:
      type: object
      properties:
        portalId:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the portal.
        portalArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: 'The [ARN](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            of the portal, which has the following format.


            `arn:${Partition}:iotsitewise:${Region}:${Account}:portal/${PortalId}`'
        portalName:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the portal.
        portalDescription:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: The portal's description.
        portalClientId:
          allOf:
          - $ref: '#/components/schemas/PortalClientId'
          description: The IAM Identity Center application generated client ID (used
            with IAM Identity Center API operations). IoT SiteWise includes `portalClientId`
            for only portals that use IAM Identity Center to authenticate users.
        portalStartUrl:
          allOf:
          - $ref: '#/components/schemas/Url'
          description: The URL for the IoT SiteWise Monitor portal. You can use this
            URL to access portals that use IAM Identity Center for authentication.
            For portals that use IAM for authentication, you must use the IoT SiteWise
            console to get a URL that you can use to access the portal.
        portalContactEmail:
          allOf:
          - $ref: '#/components/schemas/Email'
          description: The Amazon Web Services administrator's contact email address.
        portalStatus:
          allOf:
          - $ref: '#/components/schemas/PortalStatus'
          description: The current status of the portal, which contains a state and
            any error message.
        portalCreationDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date the portal was created, in Unix epoch time.
        portalLastUpdateDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date the portal was last updated, in Unix epoch time.
        portalLogoImageLocation:
          allOf:
          - $ref: '#/components/schemas/ImageLocation'
          description: The portal's logo image, which is available at a URL.
        roleArn:
          allOf:
          - $ref: '#/components/schemas/IamArn'
          description: The [ARN](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            of the service role that allows the portal's users to access your IoT
            SiteWise resources on your behalf. For more information, see [Using service
            roles for IoT SiteWise Monitor](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/monitor-service-role.html)
            in the _IoT SiteWise User Guide_.
        portalAuthMode:
          allOf:
          - $ref: '#/components/schemas/AuthMode'
          description: The service to use to authenticate users to the portal.
        notificationSenderEmail:
          allOf:
          - $ref: '#/components/schemas/Email'
          description: The email address that sends alarm notifications.
        alarms:
          allOf:
          - $ref: '#/components/schemas/Alarms'
          description: Contains the configuration information of an alarm created
            in an IoT SiteWise Monitor portal.
        portalType:
          allOf:
          - $ref: '#/components/schemas/PortalType'
          description: Define the type of portal. The value for IoT SiteWise Monitor
            (Classic) is `SITEWISE_PORTAL_V1`. The value for IoT SiteWise Monitor
            (AI-aware) is `SITEWISE_PORTAL_V2`.
        portalTypeConfiguration:
          allOf:
          - $ref: '#/components/schemas/PortalTypeConfiguration'
          description: The configuration entry associated with the specific portal
            type. The value for IoT SiteWise Monitor (Classic) is `SITEWISE_PORTAL_V1`.
            The value for IoT SiteWise Monitor (AI-aware) is `SITEWISE_PORTAL_V2`.
      required:
      - portalId
      - portalArn
      - portalName
      - portalClientId
      - portalStartUrl
      - portalContactEmail
      - portalStatus
      - portalCreationDate
      - portalLastUpdateDate
    DescribeProjectRequest:
      type: object
      properties:
        projectId:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the project.
      required:
      - projectId
    DescribeProjectResponse:
      type: object
      properties:
        projectId:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the project.
        projectArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: 'The [ARN](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            of the project, which has the following format.


            `arn:${Partition}:iotsitewise:${Region}:${Account}:project/${ProjectId}`'
        projectName:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the project.
        portalId:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the portal that the project is in.
        projectDescription:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: The project's description.
        projectCreationDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date the project was created, in Unix epoch time.
        projectLastUpdateDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date the project was last updated, in Unix epoch time.
      required:
      - projectId
      - projectArn
      - projectName
      - portalId
      - projectCreationDate
      - projectLastUpdateDate
    DescribeStorageConfigurationRequest:
      type: object
      properties: {}
    DescribeStorageConfigurationResponse:
      type: object
      properties:
        storageType:
          allOf:
          - $ref: '#/components/schemas/StorageType'
          description: "The storage tier that you specified for your data. The `storageType`\
            \ parameter can be one of the following values:\n\n  * `SITEWISE_DEFAULT_STORAGE`\
            \ – IoT SiteWise saves your data into the hot tier. The hot tier is a\
            \ service-managed database.\n\n  * `MULTI_LAYER_STORAGE` – IoT SiteWise\
            \ saves your data in both the cold tier and the hot tier. The cold tier\
            \ is a customer-managed Amazon S3 bucket."
        multiLayerStorage:
          allOf:
          - $ref: '#/components/schemas/MultiLayerStorage'
          description: Contains information about the storage destination.
        disassociatedDataStorage:
          allOf:
          - $ref: '#/components/schemas/DisassociatedDataStorageState'
          description: "Contains the storage configuration for time series (data streams)\
            \ that aren't associated with asset properties. The `disassociatedDataStorage`\
            \ can be one of the following values:\n\n  * `ENABLED` – IoT SiteWise\
            \ accepts time series that aren't associated with asset properties.\n\n\
            After the `disassociatedDataStorage` is enabled, you can't disable it.\n\
            \n  * `DISABLED` – IoT SiteWise doesn't accept time series (data streams)\
            \ that aren't associated with asset properties.\n\nFor more information,\
            \ see [Data streams](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/data-streams.html)\
            \ in the _IoT SiteWise User Guide_."
        retentionPeriod:
          allOf:
          - $ref: '#/components/schemas/RetentionPeriod'
          description: The number of days your data is kept in the hot tier. By default,
            your data is kept indefinitely in the hot tier.
        configurationStatus:
          $ref: '#/components/schemas/ConfigurationStatus'
        lastUpdateDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date the storage configuration was last updated, in Unix
            epoch time.
        warmTier:
          allOf:
          - $ref: '#/components/schemas/WarmTierState'
          description: A service managed storage tier optimized for analytical queries.
            It stores periodically uploaded, buffered and historical data ingested
            with the CreaeBulkImportJob API.
        warmTierRetentionPeriod:
          allOf:
          - $ref: '#/components/schemas/WarmTierRetentionPeriod'
          description: Set this period to specify how long your data is stored in
            the warm tier before it is deleted. You can set this only if cold tier
            is enabled.
        disallowIngestNullNaN:
          allOf:
          - $ref: '#/components/schemas/DisallowIngestNullNaN'
          description: Describes the configuration for ingesting NULL and NaN data.
            By default the feature is allowed. The feature is disallowed if the value
            is `true`.
      required:
      - storageType
      - configurationStatus
    DescribeTimeSeriesRequest:
      type: object
      properties:
        alias:
          allOf:
          - $ref: '#/components/schemas/PropertyAlias'
          description: The alias that identifies the time series.
        assetId:
          allOf:
          - $ref: '#/components/schemas/CustomID'
          description: The ID of the asset in which the asset property was created.
            This can be either the actual ID in UUID format, or else `externalId:`
            followed by the external ID, if it has one. For more information, see
            [Referencing objects with external IDs](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/object-ids.html#external-id-references)
            in the _IoT SiteWise User Guide_.
        propertyId:
          allOf:
          - $ref: '#/components/schemas/CustomID'
          description: The ID of the asset property. This can be either the actual
            ID in UUID format, or else `externalId:` followed by the external ID,
            if it has one. For more information, see [Referencing objects with external
            IDs](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/object-ids.html#external-id-references)
            in the _IoT SiteWise User Guide_.
    DescribeTimeSeriesResponse:
      type: object
      properties:
        assetId:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the asset in which the asset property was created.
        propertyId:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the asset property, in UUID format.
        alias:
          allOf:
          - $ref: '#/components/schemas/PropertyAlias'
          description: The alias that identifies the time series.
        timeSeriesId:
          allOf:
          - $ref: '#/components/schemas/TimeSeriesId'
          description: The ID of the time series.
        dataType:
          allOf:
          - $ref: '#/components/schemas/PropertyDataType'
          description: 'The data type of the time series.


            If you specify `STRUCT`, you must also specify `dataTypeSpec` to identify
            the type of the structure for this time series.'
        dataTypeSpec:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: 'The data type of the structure for this time series. This
            parameter is required for time series that have the `STRUCT` data type.


            The options for this parameter depend on the type of the composite model
            in which you created the asset property that is associated with your time
            series. Use `AWS/ALARM_STATE` for alarm state in alarm composite models.'
        timeSeriesCreationDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date that the time series was created, in Unix epoch time.
        timeSeriesLastUpdateDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date that the time series was last updated, in Unix epoch
            time.
        timeSeriesArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: 'The [ARN](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            of the time series, which has the following format.


            `arn:${Partition}:iotsitewise:${Region}:${Account}:time-series/${TimeSeriesId}`'
      required:
      - timeSeriesId
      - dataType
      - timeSeriesCreationDate
      - timeSeriesLastUpdateDate
      - timeSeriesArn
    Description:
      type: string
      pattern: ^[^\u0000-\u001F\u007F]+$
      minLength: 1
      maxLength: 2048
    DetailedError:
      type: object
      properties:
        code:
          allOf:
          - $ref: '#/components/schemas/DetailedErrorCode'
          description: The error code.
        message:
          allOf:
          - $ref: '#/components/schemas/DetailedErrorMessage'
          description: The error message.
      required:
      - code
      - message
      description: Contains detailed error information.
    DetailedErrorCode:
      type: string
      enum:
      - INCOMPATIBLE_COMPUTE_LOCATION
      - INCOMPATIBLE_FORWARDING_CONFIGURATION
    DetailedErrorMessage:
      type: string
    DetailedErrors:
      type: array
      items:
        $ref: '#/components/schemas/DetailedError'
    DisallowIngestNullNaN:
      type: boolean
    DisassociateAssetsRequest:
      type: object
      properties:
        assetId:
          allOf:
          - $ref: '#/components/schemas/CustomID'
          description: The ID of the parent asset from which to disassociate the child
            asset. This can be either the actual ID in UUID format, or else `externalId:`
            followed by the external ID, if it has one. For more information, see
            [Referencing objects with external IDs](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/object-ids.html#external-id-references)
            in the _IoT SiteWise User Guide_.
        hierarchyId:
          allOf:
          - $ref: '#/components/schemas/CustomID'
          description: The ID of a hierarchy in the parent asset's model. (This can
            be either the actual ID in UUID format, or else `externalId:` followed
            by the external ID, if it has one. For more information, see [Referencing
            objects with external IDs](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/object-ids.html#external-id-references)
            in the _IoT SiteWise User Guide_.) Hierarchies allow different groupings
            of assets to be formed that all come from the same asset model. You can
            use the hierarchy ID to identify the correct asset to disassociate. For
            more information, see [Asset hierarchies](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/asset-hierarchies.html)
            in the _IoT SiteWise User Guide_.
        childAssetId:
          allOf:
          - $ref: '#/components/schemas/CustomID'
          description: The ID of the child asset to disassociate. This can be either
            the actual ID in UUID format, or else `externalId:` followed by the external
            ID, if it has one. For more information, see [Referencing objects with
            external IDs](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/object-ids.html#external-id-references)
            in the _IoT SiteWise User Guide_.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique case-sensitive identifier that you can provide to
            ensure the idempotency of the request. Don't reuse this client token if
            a new idempotent request is required.
      required:
      - assetId
      - hierarchyId
      - childAssetId
    DisassociateTimeSeriesFromAssetPropertyRequest:
      type: object
      properties:
        alias:
          allOf:
          - $ref: '#/components/schemas/PropertyAlias'
          description: The alias that identifies the time series.
        assetId:
          allOf:
          - $ref: '#/components/schemas/CustomID'
          description: The ID of the asset in which the asset property was created.
            This can be either the actual ID in UUID format, or else `externalId:`
            followed by the external ID, if it has one. For more information, see
            [Referencing objects with external IDs](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/object-ids.html#external-id-references)
            in the _IoT SiteWise User Guide_.
        propertyId:
          allOf:
          - $ref: '#/components/schemas/CustomID'
          description: The ID of the asset property. This can be either the actual
            ID in UUID format, or else `externalId:` followed by the external ID,
            if it has one. For more information, see [Referencing objects with external
            IDs](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/object-ids.html#external-id-references)
            in the _IoT SiteWise User Guide_.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique case-sensitive identifier that you can provide to
            ensure the idempotency of the request. Don't reuse this client token if
            a new idempotent request is required.
      required:
      - alias
      - assetId
      - propertyId
    DisassociatedDataStorageState:
      type: string
      enum:
      - ENABLED
      - DISABLED
    ETag:
      type: string
      pattern: ^[\w-]{43}$
    Email:
      type: string
      pattern: ^[a-zA-Z0-9_\-\.\+]+@[a-zA-Z0-9_\-\.\+]+\.[a-zA-Z]{2,}$
      minLength: 1
      maxLength: 255
    EncryptionType:
      type: string
      enum:
      - SITEWISE_DEFAULT_ENCRYPTION
      - KMS_BASED_ENCRYPTION
    EntryId:
      type: string
      pattern: ^[a-zA-Z0-9_-]+$
      minLength: 1
      maxLength: 64
    ErrorCode:
      type: string
      enum:
      - VALIDATION_ERROR
      - INTERNAL_FAILURE
    ErrorDetails:
      type: object
      properties:
        code:
          allOf:
          - $ref: '#/components/schemas/ErrorCode'
          description: The error code.
        message:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage'
          description: The error message.
        details:
          allOf:
          - $ref: '#/components/schemas/DetailedErrors'
          description: A list of detailed errors.
      required:
      - code
      - message
      description: Contains the details of an IoT SiteWise error.
    ErrorMessage:
      type: string
    ErrorReportLocation:
      type: object
      properties:
        bucket:
          allOf:
          - $ref: '#/components/schemas/Bucket'
          description: The name of the Amazon S3 bucket to which errors associated
            with the bulk import job are sent.
        prefix:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Amazon S3 uses the prefix as a folder name to organize data
            in the bucket. Each Amazon S3 object has a key that is its unique identifier
            in the bucket. Each object in a bucket has exactly one key. The prefix
            must end with a forward slash (/). For more information, see [Organizing
            objects using prefixes](https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-prefixes.html)
            in the _Amazon Simple Storage Service User Guide_.
      required:
      - bucket
      - prefix
      description: The Amazon S3 destination where errors associated with the job
        creation request are saved.
    ExceptionMessage:
      type: string
    ExcludeProperties:
      type: boolean
      default: false
    ExecuteActionRequest:
      type: object
      properties:
        targetResource:
          allOf:
          - $ref: '#/components/schemas/TargetResource'
          description: The resource the action will be taken on.
        actionDefinitionId:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the action definition.
        actionPayload:
          allOf:
          - $ref: '#/components/schemas/ActionPayload'
          description: The JSON payload of the action.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique case-sensitive identifier that you can provide to
            ensure the idempotency of the request. Don't reuse this client token if
            a new idempotent request is required.
      required:
      - targetResource
      - actionDefinitionId
      - actionPayload
    ExecuteActionResponse:
      type: object
      properties:
        actionId:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the action.
      required:
      - actionId
    ExecuteQueryMaxResults:
      type: integer
      minimum: 1
    ExecuteQueryNextToken:
      type: string
      minLength: 1
      maxLength: 4096
    ExecuteQueryRequest:
      type: object
      properties:
        queryStatement:
          allOf:
          - $ref: '#/components/schemas/QueryStatement'
          description: The IoT SiteWise query statement.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/ExecuteQueryNextToken'
          description: The string that specifies the next page of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/ExecuteQueryMaxResults'
          description: The maximum number of results to return at one time. The default
            is 25.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique case-sensitive identifier that you can provide to
            ensure the idempotency of the request. Don't reuse this client token if
            a new idempotent request is required.
      required:
      - queryStatement
    ExecuteQueryResponse:
      type: object
      properties:
        columns:
          allOf:
          - $ref: '#/components/schemas/ColumnsList'
          description: Represents a single column in the query results.
        rows:
          allOf:
          - $ref: '#/components/schemas/Rows'
          description: Represents a single row in the query results.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/ExecuteQueryNextToken'
          description: The string that specifies the next page of results.
    Expression:
      type: string
      minLength: 1
      maxLength: 1024
    ExpressionVariable:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/VariableName'
          description: The friendly name of the variable to be used in the expression.
        value:
          allOf:
          - $ref: '#/components/schemas/VariableValue'
          description: The variable that identifies an asset property from which to
            use values.
      required:
      - name
      - value
      description: Contains expression variable information.
    ExpressionVariables:
      type: array
      items:
        $ref: '#/components/schemas/ExpressionVariable'
    ExternalId:
      type: string
      pattern: ^[a-zA-Z0-9_][a-zA-Z_\-0-9.:]*[a-zA-Z0-9_]+$
      minLength: 2
      maxLength: 128
    File:
      type: object
      properties:
        bucket:
          allOf:
          - $ref: '#/components/schemas/Bucket'
          description: The name of the Amazon S3 bucket from which data is imported.
        key:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The key of the Amazon S3 object that contains your data. Each
            object has a key that is a unique identifier. Each object has exactly
            one key.
        versionId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The version ID to identify a specific version of the Amazon
            S3 object that contains your data.
      required:
      - bucket
      - key
      description: The file in Amazon S3 where your data is saved.
    FileFormat:
      type: object
      properties:
        csv:
          allOf:
          - $ref: '#/components/schemas/Csv'
          description: The file is in .CSV format.
        parquet:
          allOf:
          - $ref: '#/components/schemas/Parquet'
          description: The file is in parquet format.
      description: The file format of the data in S3.
    Files:
      type: array
      items:
        $ref: '#/components/schemas/File'
    ForwardingConfig:
      type: object
      properties:
        state:
          allOf:
          - $ref: '#/components/schemas/ForwardingConfigState'
          description: The forwarding state for the given property.
      required:
      - state
      description: The forwarding configuration for a given property.
    ForwardingConfigState:
      type: string
      enum:
      - DISABLED
      - ENABLED
    GatewayCapabilitySummaries:
      type: array
      items:
        $ref: '#/components/schemas/GatewayCapabilitySummary'
    GatewayCapabilitySummary:
      type: object
      properties:
        capabilityNamespace:
          allOf:
          - $ref: '#/components/schemas/CapabilityNamespace'
          description: The namespace of the capability configuration. For example,
            if you configure OPC-UA sources from the IoT SiteWise console, your OPC-UA
            capability configuration has the namespace `iotsitewise:opcuacollector:version`,
            where `version` is a number such as `1`.
        capabilitySyncStatus:
          allOf:
          - $ref: '#/components/schemas/CapabilitySyncStatus'
          description: "The synchronization status of the capability configuration.\
            \ The sync status can be one of the following:\n\n  * `IN_SYNC` – The\
            \ gateway is running the capability configuration.\n\n  * `NOT_APPLICABLE`\
            \ – Synchronization is not required for this capability configuration.\
            \ This is most common when integrating partner data sources, because the\
            \ data integration is handled externally by the partner.\n\n  * `OUT_OF_SYNC`\
            \ – The gateway hasn't received the capability configuration.\n\n  * `SYNC_FAILED`\
            \ – The gateway rejected the capability configuration.\n\n  * `UNKNOWN`\
            \ – The synchronization status is currently unknown due to an undetermined\
            \ or temporary error."
      required:
      - capabilityNamespace
      - capabilitySyncStatus
      description: Contains a summary of a gateway capability configuration.
    GatewayName:
      type: string
      pattern: ^[^\u0000-\u001F\u007F]+$
      minLength: 1
      maxLength: 256
    GatewayPlatform:
      type: object
      properties:
        greengrass:
          allOf:
          - $ref: '#/components/schemas/Greengrass'
          description: A gateway that runs on IoT Greengrass.
        greengrassV2:
          allOf:
          - $ref: '#/components/schemas/GreengrassV2'
          description: A gateway that runs on IoT Greengrass V2.
        siemensIE:
          allOf:
          - $ref: '#/components/schemas/SiemensIE'
          description: A SiteWise Edge gateway that runs on a Siemens Industrial Edge
            Device.
      description: Contains a gateway's platform information.
    GatewaySummaries:
      type: array
      items:
        $ref: '#/components/schemas/GatewaySummary'
    GatewaySummary:
      type: object
      properties:
        gatewayId:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the gateway device.
        gatewayName:
          allOf:
          - $ref: '#/components/schemas/GatewayName'
          description: The name of the gateway.
        gatewayPlatform:
          $ref: '#/components/schemas/GatewayPlatform'
        gatewayVersion:
          allOf:
          - $ref: '#/components/schemas/GatewayVersion'
          description: The version of the gateway. A value of `3` indicates an MQTT-enabled,
            V3 gateway, while `2` indicates a Classic streams, V2 gateway.
        gatewayCapabilitySummaries:
          allOf:
          - $ref: '#/components/schemas/GatewayCapabilitySummaries'
          description: A list of gateway capability summaries that each contain a
            namespace and status. Each gateway capability defines data sources for
            the gateway. To retrieve a capability configuration's definition, use
            [DescribeGatewayCapabilityConfiguration](https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_DescribeGatewayCapabilityConfiguration.html).
        creationDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date the gateway was created, in Unix epoch time.
        lastUpdateDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date the gateway was last updated, in Unix epoch time.
      required:
      - gatewayId
      - gatewayName
      - creationDate
      - lastUpdateDate
      description: Contains a summary of a gateway.
    GatewayVersion:
      type: string
      pattern: ^[0-9]+$
      minLength: 1
      maxLength: 1024
    GetAssetPropertyAggregatesRequest:
      type: object
      properties:
        assetId:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the asset, in UUID format.
        propertyId:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the asset property, in UUID format.
        propertyAlias:
          allOf:
          - $ref: '#/components/schemas/AssetPropertyAlias'
          description: The alias that identifies the property, such as an OPC-UA server
            data stream path (for example, `/company/windfarm/3/turbine/7/temperature`).
            For more information, see [Mapping industrial data streams to asset properties](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/connect-data-streams.html)
            in the _IoT SiteWise User Guide_.
        aggregateTypes:
          allOf:
          - $ref: '#/components/schemas/AggregateTypes'
          description: The data aggregating function.
        resolution:
          allOf:
          - $ref: '#/components/schemas/Resolution'
          description: The time interval over which to aggregate data.
        qualities:
          allOf:
          - $ref: '#/components/schemas/Qualities'
          description: The quality by which to filter asset data.
        startDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The exclusive start of the range from which to query historical
            data, expressed in seconds in Unix epoch time.
        endDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The inclusive end of the range from which to query historical
            data, expressed in seconds in Unix epoch time.
        timeOrdering:
          allOf:
          - $ref: '#/components/schemas/TimeOrdering'
          description: 'The chronological sorting order of the requested information.


            Default: `ASCENDING`'
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token to be used for the next set of paginated results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/GetAssetPropertyValueAggregatesMaxResults'
          description: "The maximum number of results to return for each paginated\
            \ request. A result set is returned in the two cases, whichever occurs\
            \ first.\n\n  * The size of the result set is equal to 1 MB.\n\n  * The\
            \ number of data points in the result set is equal to the value of `maxResults`.\
            \ The maximum value of `maxResults` is 2500."
      required:
      - aggregateTypes
      - resolution
      - startDate
      - endDate
    GetAssetPropertyAggregatesResponse:
      type: object
      properties:
        aggregatedValues:
          allOf:
          - $ref: '#/components/schemas/AggregatedValues'
          description: The requested aggregated values.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results, or null if there are
            no additional results.
      required:
      - aggregatedValues
    GetAssetPropertyValueAggregatesMaxResults:
      type: integer
      minimum: 1
    GetAssetPropertyValueHistoryMaxResults:
      type: integer
      minimum: 1
    GetAssetPropertyValueHistoryRequest:
      type: object
      properties:
        assetId:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the asset, in UUID format.
        propertyId:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the asset property, in UUID format.
        propertyAlias:
          allOf:
          - $ref: '#/components/schemas/AssetPropertyAlias'
          description: The alias that identifies the property, such as an OPC-UA server
            data stream path (for example, `/company/windfarm/3/turbine/7/temperature`).
            For more information, see [Mapping industrial data streams to asset properties](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/connect-data-streams.html)
            in the _IoT SiteWise User Guide_.
        startDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The exclusive start of the range from which to query historical
            data, expressed in seconds in Unix epoch time.
        endDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The inclusive end of the range from which to query historical
            data, expressed in seconds in Unix epoch time.
        qualities:
          allOf:
          - $ref: '#/components/schemas/Qualities'
          description: The quality by which to filter asset data.
        timeOrdering:
          allOf:
          - $ref: '#/components/schemas/TimeOrdering'
          description: 'The chronological sorting order of the requested information.


            Default: `ASCENDING`'
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token to be used for the next set of paginated results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/GetAssetPropertyValueHistoryMaxResults'
          description: "The maximum number of results to return for each paginated\
            \ request. A result set is returned in the two cases, whichever occurs\
            \ first.\n\n  * The size of the result set is equal to 4 MB.\n\n  * The\
            \ number of data points in the result set is equal to the value of `maxResults`.\
            \ The maximum value of `maxResults` is 20000."
    GetAssetPropertyValueHistoryResponse:
      type: object
      properties:
        assetPropertyValueHistory:
          allOf:
          - $ref: '#/components/schemas/AssetPropertyValueHistory'
          description: The asset property's value history.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results, or null if there are
            no additional results.
      required:
      - assetPropertyValueHistory
    GetAssetPropertyValueRequest:
      type: object
      properties:
        assetId:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the asset, in UUID format.
        propertyId:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the asset property, in UUID format.
        propertyAlias:
          allOf:
          - $ref: '#/components/schemas/AssetPropertyAlias'
          description: The alias that identifies the property, such as an OPC-UA server
            data stream path (for example, `/company/windfarm/3/turbine/7/temperature`).
            For more information, see [Mapping industrial data streams to asset properties](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/connect-data-streams.html)
            in the _IoT SiteWise User Guide_.
    GetAssetPropertyValueResponse:
      type: object
      properties:
        propertyValue:
          allOf:
          - $ref: '#/components/schemas/AssetPropertyValue'
          description: The current asset property value.
    GetInterpolatedAssetPropertyValuesRequest:
      type: object
      properties:
        assetId:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the asset, in UUID format.
        propertyId:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the asset property, in UUID format.
        propertyAlias:
          allOf:
          - $ref: '#/components/schemas/AssetPropertyAlias'
          description: The alias that identifies the property, such as an OPC-UA server
            data stream path (for example, `/company/windfarm/3/turbine/7/temperature`).
            For more information, see [Mapping industrial data streams to asset properties](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/connect-data-streams.html)
            in the _IoT SiteWise User Guide_.
        startTimeInSeconds:
          allOf:
          - $ref: '#/components/schemas/TimeInSeconds'
          description: The exclusive start of the range from which to interpolate
            data, expressed in seconds in Unix epoch time.
        startTimeOffsetInNanos:
          allOf:
          - $ref: '#/components/schemas/OffsetInNanos'
          description: The nanosecond offset converted from `startTimeInSeconds`.
        endTimeInSeconds:
          allOf:
          - $ref: '#/components/schemas/TimeInSeconds'
          description: The inclusive end of the range from which to interpolate data,
            expressed in seconds in Unix epoch time.
        endTimeOffsetInNanos:
          allOf:
          - $ref: '#/components/schemas/OffsetInNanos'
          description: The nanosecond offset converted from `endTimeInSeconds`.
        quality:
          allOf:
          - $ref: '#/components/schemas/Quality'
          description: The quality of the asset property value. You can use this parameter
            as a filter to choose only the asset property values that have a specific
            quality.
        intervalInSeconds:
          allOf:
          - $ref: '#/components/schemas/IntervalInSeconds'
          description: The time interval in seconds over which to interpolate data.
            Each interval starts when the previous one ends.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token to be used for the next set of paginated results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxInterpolatedResults'
          description: The maximum number of results to return for each paginated
            request. If not specified, the default value is 10.
        type:
          allOf:
          - $ref: '#/components/schemas/InterpolationType'
          description: "The interpolation type.\n\nValid values: `LINEAR_INTERPOLATION\
            \ | LOCF_INTERPOLATION`\n\n  * `LINEAR_INTERPOLATION` – Estimates missing\
            \ data using [linear interpolation](https://en.wikipedia.org/wiki/Linear_interpolation).\n\
            \nFor example, you can use this operation to return the interpolated temperature\
            \ values for a wind turbine every 24 hours over a duration of 7 days.\
            \ If the interpolation starts July 1, 2021, at 9 AM, IoT SiteWise returns\
            \ the first interpolated value on July 2, 2021, at 9 AM, the second interpolated\
            \ value on July 3, 2021, at 9 AM, and so on.\n\n  * `LOCF_INTERPOLATION`\
            \ – Estimates missing data using last observation carried forward interpolation\n\
            \nIf no data point is found for an interval, IoT SiteWise returns the\
            \ last observed data point for the previous interval and carries forward\
            \ this interpolated value until a new data point is found.\n\nFor example,\
            \ you can get the state of an on-off valve every 24 hours over a duration\
            \ of 7 days. If the interpolation starts July 1, 2021, at 9 AM, IoT SiteWise\
            \ returns the last observed data point between July 1, 2021, at 9 AM and\
            \ July 2, 2021, at 9 AM as the first interpolated value. If a data point\
            \ isn't found after 9 AM on July 2, 2021, IoT SiteWise uses the same interpolated\
            \ value for the rest of the days."
        intervalWindowInSeconds:
          allOf:
          - $ref: '#/components/schemas/IntervalWindowInSeconds'
          description: "The query interval for the window, in seconds. IoT SiteWise\
            \ computes each interpolated value by using data points from the timestamp\
            \ of each interval, minus the window to the timestamp of each interval\
            \ plus the window. If not specified, the window ranges between the start\
            \ time minus the interval and the end time plus the interval.\n\n  * If\
            \ you specify a value for the `intervalWindowInSeconds` parameter, the\
            \ value for the `type` parameter must be `LINEAR_INTERPOLATION`.\n\n \
            \ * If a data point isn't found during the specified query window, IoT\
            \ SiteWise won't return an interpolated value for the interval. This indicates\
            \ that there's a gap in the ingested data points.\n\nFor example, you\
            \ can get the interpolated temperature values for a wind turbine every\
            \ 24 hours over a duration of 7 days. If the interpolation starts on July\
            \ 1, 2021, at 9 AM with a window of 2 hours, IoT SiteWise uses the data\
            \ points from 7 AM (9 AM minus 2 hours) to 11 AM (9 AM plus 2 hours) on\
            \ July 2, 2021 to compute the first interpolated value. Next, IoT SiteWise\
            \ uses the data points from 7 AM (9 AM minus 2 hours) to 11 AM (9 AM plus\
            \ 2 hours) on July 3, 2021 to compute the second interpolated value, and\
            \ so on."
      required:
      - startTimeInSeconds
      - endTimeInSeconds
      - quality
      - intervalInSeconds
      - type
    GetInterpolatedAssetPropertyValuesResponse:
      type: object
      properties:
        interpolatedAssetPropertyValues:
          allOf:
          - $ref: '#/components/schemas/InterpolatedAssetPropertyValues'
          description: The requested interpolated values.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results, or null if there are
            no additional results.
      required:
      - interpolatedAssetPropertyValues
    Greengrass:
      type: object
      properties:
        groupArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The [ARN](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            of the Greengrass group. For more information about how to find a group's
            ARN, see [ListGroups](https://docs.aws.amazon.com/greengrass/v1/apireference/listgroups-get.html)
            and [GetGroup](https://docs.aws.amazon.com/greengrass/v1/apireference/getgroup-get.html)
            in the _IoT Greengrass V1 API Reference_.
      required:
      - groupArn
      description: Contains details for a gateway that runs on IoT Greengrass. To
        create a gateway that runs on IoT Greengrass, you must add the IoT SiteWise
        connector to a Greengrass group and deploy it. Your Greengrass group must
        also have permissions to upload data to IoT SiteWise. For more information,
        see [Ingesting data using a gateway](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/gateway-connector.html)
        in the _IoT SiteWise User Guide_.
    GreengrassV2:
      type: object
      properties:
        coreDeviceThingName:
          allOf:
          - $ref: '#/components/schemas/CoreDeviceThingName'
          description: The name of the IoT thing for your IoT Greengrass V2 core device.
        coreDeviceOperatingSystem:
          allOf:
          - $ref: '#/components/schemas/CoreDeviceOperatingSystem'
          description: The operating system of the core device in IoT Greengrass V2.
      required:
      - coreDeviceThingName
      description: Contains details for a gateway that runs on IoT Greengrass V2.
        To create a gateway that runs on IoT Greengrass V2, you must deploy the IoT
        SiteWise Edge component to your gateway device. Your [Greengrass device role](https://docs.aws.amazon.com/greengrass/v2/developerguide/device-service-role.html)
        must use the `AWSIoTSiteWiseEdgeAccess` policy. For more information, see
        [Using IoT SiteWise at the edge](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/sw-gateways.html)
        in the _IoT SiteWise User Guide_.
    GroupIdentity:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/IdentityId'
          description: The IAM Identity Center ID of the group.
      required:
      - id
      description: Contains information for a group identity in an access policy.
    IAMRoleIdentity:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/IamArn'
          description: The ARN of the IAM role. For more information, see [IAM ARNs](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html)
            in the _IAM User Guide_.
      required:
      - arn
      description: Contains information about an Identity and Access Management role.
        For more information, see [IAM roles](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles.html)
        in the _IAM User Guide_.
    IAMUserIdentity:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/IamArn'
          description: 'The ARN of the IAM user. For more information, see [IAM ARNs](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html)
            in the _IAM User Guide_.


            If you delete the IAM user, access policies that contain this identity
            include an empty `arn`. You can delete the access policy for the IAM user
            that no longer exists.'
      required:
      - arn
      description: Contains information about an Identity and Access Management user.
    ID:
      type: string
      pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
      minLength: 36
      maxLength: 36
    IDs:
      type: array
      items:
        $ref: '#/components/schemas/ID'
    IamArn:
      type: string
      pattern: ^arn:aws(-cn|-us-gov)?:[a-zA-Z0-9-:\/_\.\+=,@]+$
      minLength: 1
      maxLength: 1600
    Identity:
      type: object
      properties:
        user:
          allOf:
          - $ref: '#/components/schemas/UserIdentity'
          description: An IAM Identity Center user identity.
        group:
          allOf:
          - $ref: '#/components/schemas/GroupIdentity'
          description: An IAM Identity Center group identity.
        iamUser:
          allOf:
          - $ref: '#/components/schemas/IAMUserIdentity'
          description: An IAM user identity.
        iamRole:
          allOf:
          - $ref: '#/components/schemas/IAMRoleIdentity'
          description: An IAM role identity.
      description: 'Contains an identity that can access an IoT SiteWise Monitor resource.


        Currently, you can''t use Amazon Web Services API operations to retrieve IAM
        Identity Center identity IDs. You can find the IAM Identity Center identity
        IDs in the URL of user and group pages in the [IAM Identity Center console](https://console.aws.amazon.com/singlesignon).'
    IdentityId:
      type: string
      pattern: ^\S+$
      minLength: 1
      maxLength: 256
    IdentityType:
      type: string
      enum:
      - USER
      - GROUP
      - IAM
    Image:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of an existing image. Specify this parameter to keep
            an existing image.
        file:
          $ref: '#/components/schemas/ImageFile'
      description: "Contains an image that is one of the following:\n\n  * An image\
        \ file. Choose this option to upload a new image.\n\n  * The ID of an existing\
        \ image. Choose this option to keep an existing image."
    ImageFile:
      type: object
      properties:
        data:
          allOf:
          - $ref: '#/components/schemas/ImageFileData'
          description: The image file contents, represented as a base64-encoded string.
            The file size must be less than 1 MB.
        type:
          allOf:
          - $ref: '#/components/schemas/ImageFileType'
          description: The file type of the image.
      required:
      - data
      - type
      description: Contains an image file.
    ImageFileData:
      type: string
      format: byte
      minLength: 1
      maxLength: 1500000
    ImageFileType:
      type: string
      enum:
      - PNG
    ImageLocation:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the image.
        url:
          allOf:
          - $ref: '#/components/schemas/Url'
          description: The URL where the image is available. The URL is valid for
            15 minutes so that you can view and download the image
      required:
      - id
      - url
      description: Contains an image that is uploaded to IoT SiteWise and available
        at a URL.
    InternalFailureException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      required:
      - message
      description: IoT SiteWise can't process your request right now. Try again later.
    InterpolatedAssetPropertyValue:
      type: object
      properties:
        timestamp:
          $ref: '#/components/schemas/TimeInNanos'
        value:
          $ref: '#/components/schemas/Variant'
      required:
      - timestamp
      - value
      description: Contains information about an interpolated asset property value.
    InterpolatedAssetPropertyValues:
      type: array
      items:
        $ref: '#/components/schemas/InterpolatedAssetPropertyValue'
    InterpolationType:
      type: string
      minLength: 1
      maxLength: 256
    Interval:
      type: string
      minLength: 2
      maxLength: 23
    IntervalInSeconds:
      type: integer
      format: int64
      minimum: 1
      maximum: 320000000
    IntervalWindowInSeconds:
      type: integer
      format: int64
      minimum: 1
      maximum: 320000000
    InvalidRequestException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      required:
      - message
      description: The request isn't valid. This can occur if your request contains
        malformed JSON or unsupported characters. Check your request and try again.
    InvocationOutput:
      type: object
      properties:
        message:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The text message of the SiteWise Assistant's response.
        citations:
          allOf:
          - $ref: '#/components/schemas/Citations'
          description: A list of citations, and related information for the SiteWise
            Assistant's response.
      description: This contains the SiteWise Assistant's response and the corresponding
        citation.
    InvokeAssistantRequest:
      type: object
      properties:
        conversationId:
          allOf:
          - $ref: '#/components/schemas/ConversationId'
          description: The ID assigned to a conversation. IoT SiteWise automatically
            generates a unique ID for you, and this parameter is never required. However,
            if you prefer to have your own ID, you must specify it here in UUID format.
            If you specify your own ID, it must be globally unique.
        message:
          allOf:
          - $ref: '#/components/schemas/MessageInput'
          description: A text message sent to the SiteWise Assistant by the user.
        enableTrace:
          allOf:
          - $ref: '#/components/schemas/PrimitiveBoolean'
          description: Specifies if to turn trace on or not. It is used to track the
            SiteWise Assistant's reasoning, and data access process.
      required:
      - message
    InvokeAssistantResponse:
      type: object
      properties:
        body:
          $ref: '#/components/schemas/ResponseStream'
        conversationId:
          allOf:
          - $ref: '#/components/schemas/ConversationId'
          description: The ID of the conversation, in UUID format. This ID uniquely
            identifies the conversation within IoT SiteWise.
      required:
      - body
      - conversationId
    IotCoreThingName:
      type: string
      pattern: ^[a-zA-Z0-9:_-]+$
      minLength: 1
      maxLength: 128
    JobConfiguration:
      type: object
      properties:
        fileFormat:
          allOf:
          - $ref: '#/components/schemas/FileFormat'
          description: The file format of the data in S3.
      required:
      - fileFormat
      description: Contains the configuration information of a job, such as the file
        format used to save data in Amazon S3.
    JobStatus:
      type: string
      enum:
      - PENDING
      - CANCELLED
      - RUNNING
      - COMPLETED
      - FAILED
      - COMPLETED_WITH_FAILURES
    JobSummaries:
      type: array
      items:
        $ref: '#/components/schemas/JobSummary'
    JobSummary:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the job.
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The unique name that helps identify the job request.
        status:
          allOf:
          - $ref: '#/components/schemas/JobStatus'
          description: "The status of the bulk import job can be one of following\
            \ values:\n\n  * `PENDING` – IoT SiteWise is waiting for the current bulk\
            \ import job to finish.\n\n  * `CANCELLED` – The bulk import job has been\
            \ canceled.\n\n  * `RUNNING` – IoT SiteWise is processing your request\
            \ to import your data from Amazon S3.\n\n  * `COMPLETED` – IoT SiteWise\
            \ successfully completed your request to import data from Amazon S3.\n\
            \n  * `FAILED` – IoT SiteWise couldn't process your request to import\
            \ data from Amazon S3. You can use logs saved in the specified error report\
            \ location in Amazon S3 to troubleshoot issues.\n\n  * `COMPLETED_WITH_FAILURES`\
            \ – IoT SiteWise completed your request to import data from Amazon S3\
            \ with errors. You can use logs saved in the specified error report location\
            \ in Amazon S3 to troubleshoot issues."
      required:
      - id
      - name
      - status
      description: Contains the job summary information.
    KendraSourceDetail:
      type: object
      properties:
        knowledgeBaseArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The `knowledgeBaseArn` details for the Kendra dataset source.
        roleArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The `roleARN` details for the Kendra dataset source.
      required:
      - knowledgeBaseArn
      - roleArn
      description: The source details for the Kendra dataset source.
    KmsKeyId:
      type: string
      minLength: 1
      maxLength: 2048
    LimitExceededException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      required:
      - message
      description: 'You''ve reached the limit for a resource. For example, this can
        occur if you''re trying to associate more than the allowed number of child
        assets or attempting to create more than the allowed number of properties
        for an asset model.


        For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html)
        in the _IoT SiteWise User Guide_.'
    ListAccessPoliciesRequest:
      type: object
      properties:
        identityType:
          allOf:
          - $ref: '#/components/schemas/IdentityType'
          description: The type of identity (IAM Identity Center user, IAM Identity
            Center group, or IAM user). This parameter is required if you specify
            `identityId`.
        identityId:
          allOf:
          - $ref: '#/components/schemas/IdentityId'
          description: The ID of the identity. This parameter is required if you specify
            `USER` or `GROUP` for `identityType`.
        resourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          description: The type of resource (portal or project). This parameter is
            required if you specify `resourceId`.
        resourceId:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the resource. This parameter is required if you specify
            `resourceType`.
        iamArn:
          allOf:
          - $ref: '#/components/schemas/IamArn'
          description: The ARN of the IAM user. For more information, see [IAM ARNs](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html)
            in the _IAM User Guide_. This parameter is required if you specify `IAM`
            for `identityType`.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token to be used for the next set of paginated results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: 'The maximum number of results to return for each paginated
            request.


            Default: 50'
    ListAccessPoliciesResponse:
      type: object
      properties:
        accessPolicySummaries:
          allOf:
          - $ref: '#/components/schemas/AccessPolicySummaries'
          description: A list that summarizes each access policy.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results, or null if there are
            no additional results.
      required:
      - accessPolicySummaries
    ListActionsRequest:
      type: object
      properties:
        targetResourceType:
          allOf:
          - $ref: '#/components/schemas/TargetResourceType'
          description: The type of resource.
        targetResourceId:
          allOf:
          - $ref: '#/components/schemas/CustomID'
          description: The ID of the target resource.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token to be used for the next set of paginated results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return for each paginated
            request.
      required:
      - targetResourceType
      - targetResourceId
    ListActionsResponse:
      type: object
      properties:
        actionSummaries:
          allOf:
          - $ref: '#/components/schemas/ActionSummaries'
          description: A list that summarizes the actions associated with the specified
            asset.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results, or null if there are
            no additional results.
      required:
      - actionSummaries
      - nextToken
    ListAssetModelCompositeModelsRequest:
      type: object
      properties:
        assetModelId:
          allOf:
          - $ref: '#/components/schemas/CustomID'
          description: The ID of the asset model. This can be either the actual ID
            in UUID format, or else `externalId:` followed by the external ID, if
            it has one. For more information, see [Referencing objects with external
            IDs](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/object-ids.html#external-id-references)
            in the _IoT SiteWise User Guide_.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token to be used for the next set of paginated results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: 'The maximum number of results to return for each paginated
            request.


            Default: 50'
        assetModelVersion:
          allOf:
          - $ref: '#/components/schemas/AssetModelVersionFilter'
          description: The version alias that specifies the latest or active version
            of the asset model. The details are returned in the response. The default
            value is `LATEST`. See [ Asset model versions](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/model-active-version.html)
            in the _IoT SiteWise User Guide_.
      required:
      - assetModelId
    ListAssetModelCompositeModelsResponse:
      type: object
      properties:
        assetModelCompositeModelSummaries:
          allOf:
          - $ref: '#/components/schemas/AssetModelCompositeModelSummaries'
          description: A list that summarizes each composite model.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results, or null if there are
            no additional results.
      required:
      - assetModelCompositeModelSummaries
    ListAssetModelPropertiesFilter:
      type: string
      enum:
      - ALL
      - BASE
    ListAssetModelPropertiesRequest:
      type: object
      properties:
        assetModelId:
          allOf:
          - $ref: '#/components/schemas/CustomID'
          description: The ID of the asset model. This can be either the actual ID
            in UUID format, or else `externalId:` followed by the external ID, if
            it has one. For more information, see [Referencing objects with external
            IDs](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/object-ids.html#external-id-references)
            in the _IoT SiteWise User Guide_.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token to be used for the next set of paginated results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return for each paginated
            request. If not specified, the default value is 50.
        filter:
          allOf:
          - $ref: '#/components/schemas/ListAssetModelPropertiesFilter'
          description: "Filters the requested list of asset model properties. You\
            \ can choose one of the following options:\n\n  * `ALL` – The list includes\
            \ all asset model properties for a given asset model ID. \n\n  * `BASE`\
            \ – The list includes only base asset model properties for a given asset\
            \ model ID. \n\nDefault: `BASE`"
        assetModelVersion:
          allOf:
          - $ref: '#/components/schemas/AssetModelVersionFilter'
          description: The version alias that specifies the latest or active version
            of the asset model. The details are returned in the response. The default
            value is `LATEST`. See [ Asset model versions](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/model-active-version.html)
            in the _IoT SiteWise User Guide_.
      required:
      - assetModelId
    ListAssetModelPropertiesResponse:
      type: object
      properties:
        assetModelPropertySummaries:
          allOf:
          - $ref: '#/components/schemas/AssetModelPropertySummaries'
          description: A list that summarizes the properties associated with the specified
            asset model.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results, or null if there are
            no additional results.
      required:
      - assetModelPropertySummaries
    ListAssetModelsRequest:
      type: object
      properties:
        assetModelTypes:
          allOf:
          - $ref: '#/components/schemas/ListAssetModelsTypeFilter'
          description: "The type of asset model. If you don't provide an `assetModelTypes`,\
            \ all types of asset models are returned.\n\n  * **ASSET_MODEL** – An\
            \ asset model that you can use to create assets. Can't be included as\
            \ a component in another asset model.\n\n  * **COMPONENT_MODEL** – A reusable\
            \ component that you can include in the composite models of other asset\
            \ models. You can't create assets directly from this type of asset model."
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token to be used for the next set of paginated results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: 'The maximum number of results to return for each paginated
            request.


            Default: 50'
        assetModelVersion:
          allOf:
          - $ref: '#/components/schemas/AssetModelVersionFilter'
          description: The version alias that specifies the latest or active version
            of the asset model. The details are returned in the response. The default
            value is `LATEST`. See [ Asset model versions](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/model-active-version.html)
            in the _IoT SiteWise User Guide_.
    ListAssetModelsResponse:
      type: object
      properties:
        assetModelSummaries:
          allOf:
          - $ref: '#/components/schemas/AssetModelSummaries'
          description: A list that summarizes each asset model.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results, or null if there are
            no additional results.
      required:
      - assetModelSummaries
    ListAssetModelsTypeFilter:
      type: array
      items:
        $ref: '#/components/schemas/AssetModelType'
    ListAssetPropertiesFilter:
      type: string
      enum:
      - ALL
      - BASE
    ListAssetPropertiesRequest:
      type: object
      properties:
        assetId:
          allOf:
          - $ref: '#/components/schemas/CustomID'
          description: The ID of the asset. This can be either the actual ID in UUID
            format, or else `externalId:` followed by the external ID, if it has one.
            For more information, see [Referencing objects with external IDs](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/object-ids.html#external-id-references)
            in the _IoT SiteWise User Guide_.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token to be used for the next set of paginated results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return for each paginated
            request. If not specified, the default value is 50.
        filter:
          allOf:
          - $ref: '#/components/schemas/ListAssetPropertiesFilter'
          description: "Filters the requested list of asset properties. You can choose\
            \ one of the following options:\n\n  * `ALL` – The list includes all asset\
            \ properties for a given asset model ID. \n\n  * `BASE` – The list includes\
            \ only base asset properties for a given asset model ID. \n\nDefault:\
            \ `BASE`"
      required:
      - assetId
    ListAssetPropertiesResponse:
      type: object
      properties:
        assetPropertySummaries:
          allOf:
          - $ref: '#/components/schemas/AssetPropertySummaries'
          description: A list that summarizes the properties associated with the specified
            asset.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results, or null if there are
            no additional results.
      required:
      - assetPropertySummaries
    ListAssetRelationshipsRequest:
      type: object
      properties:
        assetId:
          allOf:
          - $ref: '#/components/schemas/CustomID'
          description: The ID of the asset. This can be either the actual ID in UUID
            format, or else `externalId:` followed by the external ID, if it has one.
            For more information, see [Referencing objects with external IDs](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/object-ids.html#external-id-references)
            in the _IoT SiteWise User Guide_.
        traversalType:
          allOf:
          - $ref: '#/components/schemas/TraversalType'
          description: "The type of traversal to use to identify asset relationships.\
            \ Choose the following option:\n\n  * `PATH_TO_ROOT` – Identify the asset's\
            \ parent assets up to the root asset. The asset that you specify in `assetId`\
            \ is the first result in the list of `assetRelationshipSummaries`, and\
            \ the root asset is the last result."
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token to be used for the next set of paginated results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return for each paginated
            request.
      required:
      - assetId
      - traversalType
    ListAssetRelationshipsResponse:
      type: object
      properties:
        assetRelationshipSummaries:
          allOf:
          - $ref: '#/components/schemas/AssetRelationshipSummaries'
          description: A list that summarizes each asset relationship.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results, or null if there are
            no additional results.
      required:
      - assetRelationshipSummaries
    ListAssetsFilter:
      type: string
      enum:
      - ALL
      - TOP_LEVEL
    ListAssetsRequest:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token to be used for the next set of paginated results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: 'The maximum number of results to return for each paginated
            request.


            Default: 50'
        assetModelId:
          allOf:
          - $ref: '#/components/schemas/CustomID'
          description: The ID of the asset model by which to filter the list of assets.
            This parameter is required if you choose `ALL` for `filter`. This can
            be either the actual ID in UUID format, or else `externalId:` followed
            by the external ID, if it has one. For more information, see [Referencing
            objects with external IDs](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/object-ids.html#external-id-references)
            in the _IoT SiteWise User Guide_.
        filter:
          allOf:
          - $ref: '#/components/schemas/ListAssetsFilter'
          description: "The filter for the requested list of assets. Choose one of\
            \ the following options:\n\n  * `ALL` – The list includes all assets for\
            \ a given asset model ID. The `assetModelId` parameter is required if\
            \ you filter by `ALL`.\n\n  * `TOP_LEVEL` – The list includes only top-level\
            \ assets in the asset hierarchy tree.\n\nDefault: `ALL`"
    ListAssetsResponse:
      type: object
      properties:
        assetSummaries:
          allOf:
          - $ref: '#/components/schemas/AssetSummaries'
          description: A list that summarizes each asset.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results, or null if there are
            no additional results.
      required:
      - assetSummaries
    ListAssociatedAssetsRequest:
      type: object
      properties:
        assetId:
          allOf:
          - $ref: '#/components/schemas/CustomID'
          description: The ID of the asset to query. This can be either the actual
            ID in UUID format, or else `externalId:` followed by the external ID,
            if it has one. For more information, see [Referencing objects with external
            IDs](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/object-ids.html#external-id-references)
            in the _IoT SiteWise User Guide_.
        hierarchyId:
          allOf:
          - $ref: '#/components/schemas/CustomID'
          description: '(Optional) If you don''t provide a `hierarchyId`, all the
            immediate assets in the `traversalDirection` will be returned.


            The ID of the hierarchy by which child assets are associated to the asset.
            (This can be either the actual ID in UUID format, or else `externalId:`
            followed by the external ID, if it has one. For more information, see
            [Referencing objects with external IDs](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/object-ids.html#external-id-references)
            in the _IoT SiteWise User Guide_.)


            For more information, see [Asset hierarchies](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/asset-hierarchies.html)
            in the _IoT SiteWise User Guide_.'
        traversalDirection:
          allOf:
          - $ref: '#/components/schemas/TraversalDirection'
          description: "The direction to list associated assets. Choose one of the\
            \ following options:\n\n  * `CHILD` – The list includes all child assets\
            \ associated to the asset.\n\n  * `PARENT` – The list includes the asset's\
            \ parent asset.\n\nDefault: `CHILD`"
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token to be used for the next set of paginated results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: 'The maximum number of results to return for each paginated
            request.


            Default: 50'
      required:
      - assetId
    ListAssociatedAssetsResponse:
      type: object
      properties:
        assetSummaries:
          allOf:
          - $ref: '#/components/schemas/AssociatedAssetsSummaries'
          description: A list that summarizes the associated assets.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results, or null if there are
            no additional results.
      required:
      - assetSummaries
    ListBulkImportJobsFilter:
      type: string
      enum:
      - ALL
      - PENDING
      - RUNNING
      - CANCELLED
      - FAILED
      - COMPLETED_WITH_FAILURES
      - COMPLETED
    ListBulkImportJobsRequest:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token to be used for the next set of paginated results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return for each paginated
            request.
        filter:
          allOf:
          - $ref: '#/components/schemas/ListBulkImportJobsFilter'
          description: You can use a filter to select the bulk import jobs that you
            want to retrieve.
    ListBulkImportJobsResponse:
      type: object
      properties:
        jobSummaries:
          allOf:
          - $ref: '#/components/schemas/JobSummaries'
          description: One or more job summaries to list.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results, or null if there are
            no additional results.
      required:
      - jobSummaries
    ListCompositionRelationshipsRequest:
      type: object
      properties:
        assetModelId:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the asset model. This can be either the actual ID
            in UUID format, or else `externalId:` followed by the external ID, if
            it has one. For more information, see [Referencing objects with external
            IDs](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/object-ids.html#external-id-references)
            in the _IoT SiteWise User Guide_.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token to be used for the next set of paginated results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: 'The maximum number of results to return for each paginated
            request.


            Default: 50'
      required:
      - assetModelId
    ListCompositionRelationshipsResponse:
      type: object
      properties:
        compositionRelationshipSummaries:
          allOf:
          - $ref: '#/components/schemas/CompositionRelationshipSummaries'
          description: A list that summarizes each composition relationship.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results, or null if there are
            no additional results.
      required:
      - compositionRelationshipSummaries
    ListDashboardsRequest:
      type: object
      properties:
        projectId:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the project.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token to be used for the next set of paginated results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: 'The maximum number of results to return for each paginated
            request.


            Default: 50'
      required:
      - projectId
    ListDashboardsResponse:
      type: object
      properties:
        dashboardSummaries:
          allOf:
          - $ref: '#/components/schemas/DashboardSummaries'
          description: A list that summarizes each dashboard in the project.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results, or null if there are
            no additional results.
      required:
      - dashboardSummaries
    ListDatasetsRequest:
      type: object
      properties:
        sourceType:
          allOf:
          - $ref: '#/components/schemas/DatasetSourceType'
          description: The type of data source for the dataset.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results, or null if there are
            no additional results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return for each paginated
            request.
      required:
      - sourceType
    ListDatasetsResponse:
      type: object
      properties:
        datasetSummaries:
          allOf:
          - $ref: '#/components/schemas/DatasetSummaries'
          description: A list that summarizes the dataset response.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results, or null if there are
            no additional results.
      required:
      - datasetSummaries
    ListGatewaysRequest:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token to be used for the next set of paginated results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: 'The maximum number of results to return for each paginated
            request.


            Default: 50'
    ListGatewaysResponse:
      type: object
      properties:
        gatewaySummaries:
          allOf:
          - $ref: '#/components/schemas/GatewaySummaries'
          description: A list that summarizes each gateway.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results, or null if there are
            no additional results.
      required:
      - gatewaySummaries
    ListPortalsRequest:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token to be used for the next set of paginated results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: 'The maximum number of results to return for each paginated
            request.


            Default: 50'
    ListPortalsResponse:
      type: object
      properties:
        portalSummaries:
          allOf:
          - $ref: '#/components/schemas/PortalSummaries'
          description: A list that summarizes each portal.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results, or null if there are
            no additional results.
    ListProjectAssetsRequest:
      type: object
      properties:
        projectId:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the project.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token to be used for the next set of paginated results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: 'The maximum number of results to return for each paginated
            request.


            Default: 50'
      required:
      - projectId
    ListProjectAssetsResponse:
      type: object
      properties:
        assetIds:
          allOf:
          - $ref: '#/components/schemas/AssetIDs'
          description: A list that contains the IDs of each asset associated with
            the project.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results, or null if there are
            no additional results.
      required:
      - assetIds
    ListProjectsRequest:
      type: object
      properties:
        portalId:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the portal.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token to be used for the next set of paginated results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: 'The maximum number of results to return for each paginated
            request.


            Default: 50'
      required:
      - portalId
    ListProjectsResponse:
      type: object
      properties:
        projectSummaries:
          allOf:
          - $ref: '#/components/schemas/ProjectSummaries'
          description: A list that summarizes each project in the portal.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results, or null if there are
            no additional results.
      required:
      - projectSummaries
    ListTagsForResourceRequest:
      type: object
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          description: The [ARN](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            of the resource.
      required:
      - resourceArn
    ListTagsForResourceResponse:
      type: object
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The list of key-value pairs that contain metadata for the resource.
            For more information, see [Tagging your IoT SiteWise resources](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/tag-resources.html)
            in the _IoT SiteWise User Guide_.
    ListTimeSeriesRequest:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token to be used for the next set of paginated results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return for each paginated
            request.
        assetId:
          allOf:
          - $ref: '#/components/schemas/CustomID'
          description: The ID of the asset in which the asset property was created.
            This can be either the actual ID in UUID format, or else `externalId:`
            followed by the external ID, if it has one. For more information, see
            [Referencing objects with external IDs](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/object-ids.html#external-id-references)
            in the _IoT SiteWise User Guide_.
        aliasPrefix:
          allOf:
          - $ref: '#/components/schemas/PropertyAlias'
          description: The alias prefix of the time series.
        timeSeriesType:
          allOf:
          - $ref: '#/components/schemas/ListTimeSeriesType'
          description: "The type of the time series. The time series type can be one\
            \ of the following values:\n\n  * `ASSOCIATED` – The time series is associated\
            \ with an asset property.\n\n  * `DISASSOCIATED` – The time series isn't\
            \ associated with any asset property."
    ListTimeSeriesResponse:
      type: object
      properties:
        TimeSeriesSummaries:
          allOf:
          - $ref: '#/components/schemas/TimeSeriesSummaries'
          description: One or more time series summaries to list.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results, or null if there are
            no additional results.
      required:
      - TimeSeriesSummaries
    ListTimeSeriesType:
      type: string
      enum:
      - ASSOCIATED
      - DISASSOCIATED
    Location:
      type: object
      properties:
        uri:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The URI of the location.
      description: Contains location information about the cited text and where it's
        stored.
    LoggingLevel:
      type: string
      enum:
      - ERROR
      - INFO
      - 'OFF'
    LoggingOptions:
      type: object
      properties:
        level:
          allOf:
          - $ref: '#/components/schemas/LoggingLevel'
          description: The IoT SiteWise logging verbosity level.
      required:
      - level
      description: Contains logging options.
    Macro:
      type: string
      pattern: ^[^\u0000-\u001F\u007F]+$
      minLength: 1
      maxLength: 256
    MaxInterpolatedResults:
      type: integer
      minimum: 1
    MaxResults:
      type: integer
      minimum: 1
      maximum: 250
    Measurement:
      type: object
      properties:
        processingConfig:
          allOf:
          - $ref: '#/components/schemas/MeasurementProcessingConfig'
          description: The processing configuration for the given measurement property.
            You can configure measurements to be kept at the edge or forwarded to
            the Amazon Web Services Cloud. By default, measurements are forwarded
            to the cloud.
      description: Contains an asset measurement property. For more information, see
        [Measurements](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/asset-properties.html#measurements)
        in the _IoT SiteWise User Guide_.
    MeasurementProcessingConfig:
      type: object
      properties:
        forwardingConfig:
          allOf:
          - $ref: '#/components/schemas/ForwardingConfig'
          description: The forwarding configuration for the given measurement property.
      required:
      - forwardingConfig
      description: The processing configuration for the given measurement property.
        You can configure measurements to be kept at the edge or forwarded to the
        Amazon Web Services Cloud. By default, measurements are forwarded to the cloud.
    MessageInput:
      type: string
      minLength: 1
      maxLength: 10000
    Metric:
      type: object
      properties:
        expression:
          allOf:
          - $ref: '#/components/schemas/Expression'
          description: 'The mathematical expression that defines the metric aggregation
            function. You can specify up to 10 variables per expression. You can specify
            up to 10 functions per expression.


            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html)
            in the _IoT SiteWise User Guide_.'
        variables:
          allOf:
          - $ref: '#/components/schemas/ExpressionVariables'
          description: The list of variables used in the expression.
        window:
          allOf:
          - $ref: '#/components/schemas/MetricWindow'
          description: The window (time interval) over which IoT SiteWise computes
            the metric's aggregation expression. IoT SiteWise computes one data point
            per `window`.
        processingConfig:
          allOf:
          - $ref: '#/components/schemas/MetricProcessingConfig'
          description: The processing configuration for the given metric property.
            You can configure metrics to be computed at the edge or in the Amazon
            Web Services Cloud. By default, metrics are forwarded to the cloud.
      required:
      - expression
      - variables
      - window
      description: 'Contains an asset metric property. With metrics, you can calculate
        aggregate functions, such as an average, maximum, or minimum, as specified
        through an expression. A metric maps several values to a single value (such
        as a sum).


        The maximum number of dependent/cascading variables used in any one metric
        calculation is 10\. Therefore, a _root_ metric can have up to 10 cascading
        metrics in its computational dependency tree. Additionally, a metric can only
        have a data type of `DOUBLE` and consume properties with data types of `INTEGER`
        or `DOUBLE`.


        For more information, see [Metrics](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/asset-properties.html#metrics)
        in the _IoT SiteWise User Guide_.'
    MetricProcessingConfig:
      type: object
      properties:
        computeLocation:
          allOf:
          - $ref: '#/components/schemas/ComputeLocation'
          description: The compute location for the given metric property.
      required:
      - computeLocation
      description: The processing configuration for the given metric property. You
        can configure metrics to be computed at the edge or in the Amazon Web Services
        Cloud. By default, metrics are forwarded to the cloud.
    MetricWindow:
      type: object
      properties:
        tumbling:
          allOf:
          - $ref: '#/components/schemas/TumblingWindow'
          description: The tumbling time interval window.
      description: Contains a time interval window used for data aggregate computations
        (for example, average, sum, count, and so on).
    MonitorErrorCode:
      type: string
      enum:
      - INTERNAL_FAILURE
      - VALIDATION_ERROR
      - LIMIT_EXCEEDED
    MonitorErrorDetails:
      type: object
      properties:
        code:
          allOf:
          - $ref: '#/components/schemas/MonitorErrorCode'
          description: The error code.
        message:
          allOf:
          - $ref: '#/components/schemas/MonitorErrorMessage'
          description: The error message.
      description: Contains IoT SiteWise Monitor error details.
    MonitorErrorMessage:
      type: string
    MultiLayerStorage:
      type: object
      properties:
        customerManagedS3Storage:
          allOf:
          - $ref: '#/components/schemas/CustomerManagedS3Storage'
          description: Contains information about a customer managed Amazon S3 bucket.
      required:
      - customerManagedS3Storage
      description: Contains information about the storage destination.
    Name:
      type: string
      pattern: ^[^\u0000-\u001F\u007F]+$
      minLength: 1
      maxLength: 256
    NextToken:
      type: string
      pattern: ^[A-Za-z0-9+/=]+$
      minLength: 1
      maxLength: 4096
    NullableBoolean:
      type: boolean
    NumberOfDays:
      type: integer
    Offset:
      type: string
      minLength: 2
      maxLength: 25
    OffsetInNanos:
      type: integer
      minimum: 0
      maximum: 999999999
    Parquet:
      type: object
      properties: {}
      description: A parquet file.
    Permission:
      type: string
      enum:
      - ADMINISTRATOR
      - VIEWER
    PortalClientId:
      type: string
      pattern: ^[!-~]*$
      minLength: 1
      maxLength: 256
    PortalResource:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the portal.
      required:
      - id
      description: Identifies an IoT SiteWise Monitor portal.
    PortalState:
      type: string
      enum:
      - CREATING
      - PENDING
      - UPDATING
      - DELETING
      - ACTIVE
      - FAILED
    PortalStatus:
      type: object
      properties:
        state:
          allOf:
          - $ref: '#/components/schemas/PortalState'
          description: The current state of the portal.
        error:
          allOf:
          - $ref: '#/components/schemas/MonitorErrorDetails'
          description: Contains associated error information, if any.
      required:
      - state
      description: Contains information about the current status of a portal.
    PortalSummaries:
      type: array
      items:
        $ref: '#/components/schemas/PortalSummary'
    PortalSummary:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the portal.
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the portal.
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: The portal's description.
        startUrl:
          allOf:
          - $ref: '#/components/schemas/Url'
          description: The URL for the IoT SiteWise Monitor portal. You can use this
            URL to access portals that use IAM Identity Center for authentication.
            For portals that use IAM for authentication, you must use the IoT SiteWise
            console to get a URL that you can use to access the portal.
        creationDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date the portal was created, in Unix epoch time.
        lastUpdateDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date the portal was last updated, in Unix epoch time.
        roleArn:
          allOf:
          - $ref: '#/components/schemas/IamArn'
          description: The [ARN](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            of the service role that allows the portal's users to access your IoT
            SiteWise resources on your behalf. For more information, see [Using service
            roles for IoT SiteWise Monitor](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/monitor-service-role.html)
            in the _IoT SiteWise User Guide_.
        status:
          $ref: '#/components/schemas/PortalStatus'
        portalType:
          allOf:
          - $ref: '#/components/schemas/PortalType'
          description: Define the type of portal. The value for IoT SiteWise Monitor
            (Classic) is `SITEWISE_PORTAL_V1`. The value for IoT SiteWise Monitor
            (AI-aware) is `SITEWISE_PORTAL_V2`.
      required:
      - id
      - name
      - startUrl
      - status
      description: Contains a portal summary.
    PortalTools:
      type: array
      items:
        $ref: '#/components/schemas/Name'
    PortalType:
      type: string
      enum:
      - SITEWISE_PORTAL_V1
      - SITEWISE_PORTAL_V2
    PortalTypeConfiguration:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/PortalTypeEntry'
    PortalTypeEntry:
      type: object
      properties:
        portalTools:
          allOf:
          - $ref: '#/components/schemas/PortalTools'
          description: The array of tools associated with the specified portal type.
            The possible values are `ASSISTANT` and `DASHBOARD`.
      description: The configuration entry associated with the specific portal type.
        The `portalTypeConfiguration` is a map of the `portalTypeKey` to the `PortalTypeEntry`.
    PortalTypeKey:
      type: string
      minLength: 1
      maxLength: 128
    PreconditionFailedException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
        resourceId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          description: The ID of the resource on which precondition failed with this
            operation.
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          description: The ARN of the resource on which precondition failed with this
            operation.
      required:
      - message
      - resourceId
      - resourceArn
      description: The precondition in one or more of the request-header fields evaluated
        to `FALSE`.
    ProjectResource:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the project.
      required:
      - id
      description: Identifies a specific IoT SiteWise Monitor project.
    ProjectSummaries:
      type: array
      items:
        $ref: '#/components/schemas/ProjectSummary'
    ProjectSummary:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the project.
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the project.
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: The project's description.
        creationDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date the project was created, in Unix epoch time.
        lastUpdateDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date the project was last updated, in Unix epoch time.
      required:
      - id
      - name
      description: Contains project summary information.
    Property:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the asset property.
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the property.
        alias:
          allOf:
          - $ref: '#/components/schemas/PropertyAlias'
          description: The alias that identifies the property, such as an OPC-UA server
            data stream path (for example, `/company/windfarm/3/turbine/7/temperature`).
            For more information, see [Mapping industrial data streams to asset properties](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/connect-data-streams.html)
            in the _IoT SiteWise User Guide_.
        notification:
          allOf:
          - $ref: '#/components/schemas/PropertyNotification'
          description: The asset property's notification topic and state. For more
            information, see [UpdateAssetProperty](https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_UpdateAssetProperty.html).
        dataType:
          allOf:
          - $ref: '#/components/schemas/PropertyDataType'
          description: The property data type.
        unit:
          allOf:
          - $ref: '#/components/schemas/PropertyUnit'
          description: The unit (such as `Newtons` or `RPM`) of the asset property.
        type:
          allOf:
          - $ref: '#/components/schemas/PropertyType'
          description: The property type (see `PropertyType`). A property contains
            one type.
        path:
          allOf:
          - $ref: '#/components/schemas/AssetPropertyPath'
          description: The structured path to the property from the root of the asset.
        externalId:
          allOf:
          - $ref: '#/components/schemas/ExternalId'
          description: The external ID of the asset property. For more information,
            see [Using external IDs](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/object-ids.html#external-ids)
            in the _IoT SiteWise User Guide_.
      required:
      - id
      - name
      - dataType
      description: Contains asset property information.
    PropertyAlias:
      type: string
      pattern: ^[^\u0000-\u001F\u007F]+$
      minLength: 1
    PropertyDataType:
      type: string
      enum:
      - STRING
      - INTEGER
      - DOUBLE
      - BOOLEAN
      - STRUCT
    PropertyNotification:
      type: object
      properties:
        topic:
          allOf:
          - $ref: '#/components/schemas/PropertyNotificationTopic'
          description: The MQTT topic to which IoT SiteWise publishes property value
            update notifications.
        state:
          allOf:
          - $ref: '#/components/schemas/PropertyNotificationState'
          description: The current notification state.
      required:
      - topic
      - state
      description: Contains asset property value notification information. When the
        notification state is enabled, IoT SiteWise publishes property value updates
        to a unique MQTT topic. For more information, see [Interacting with other
        services](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/interact-with-other-services.html)
        in the _IoT SiteWise User Guide_.
    PropertyNotificationState:
      type: string
      enum:
      - ENABLED
      - DISABLED
    PropertyNotificationTopic:
      type: string
    PropertyType:
      type: object
      properties:
        attribute:
          allOf:
          - $ref: '#/components/schemas/Attribute'
          description: Specifies an asset attribute property. An attribute generally
            contains static information, such as the serial number of an [IIoT](https://en.wikipedia.org/wiki/Internet_of_things#Industrial_applications)
            wind turbine.
        measurement:
          allOf:
          - $ref: '#/components/schemas/Measurement'
          description: Specifies an asset measurement property. A measurement represents
            a device's raw sensor data stream, such as timestamped temperature values
            or timestamped power values.
        transform:
          allOf:
          - $ref: '#/components/schemas/Transform'
          description: Specifies an asset transform property. A transform contains
            a mathematical expression that maps a property's data points from one
            form to another, such as a unit conversion from Celsius to Fahrenheit.
        metric:
          allOf:
          - $ref: '#/components/schemas/Metric'
          description: Specifies an asset metric property. A metric contains a mathematical
            expression that uses aggregate functions to process all input data points
            over a time interval and output a single data point, such as to calculate
            the average hourly temperature.
      description: Contains a property type, which can be one of `attribute`, `measurement`,
        `metric`, or `transform`.
    PropertyUnit:
      type: string
      pattern: ^[^\u0000-\u001F\u007F]+$
      minLength: 1
      maxLength: 256
    PropertyValueBooleanValue:
      type: boolean
    PropertyValueDoubleValue:
      type: number
      format: double
    PropertyValueIntegerValue:
      type: integer
    PropertyValueNullValue:
      type: object
      properties:
        valueType:
          allOf:
          - $ref: '#/components/schemas/RawValueType'
          description: The type of null asset property data.
      required:
      - valueType
      description: The value type of null asset property data with BAD and UNCERTAIN
        qualities.
    PropertyValueStringValue:
      type: string
    PutAssetPropertyValueEntries:
      type: array
      items:
        $ref: '#/components/schemas/PutAssetPropertyValueEntry'
    PutAssetPropertyValueEntry:
      type: object
      properties:
        entryId:
          allOf:
          - $ref: '#/components/schemas/EntryId'
          description: The user specified ID for the entry. You can use this ID to
            identify which entries failed.
        assetId:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the asset to update.
        propertyId:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the asset property for this entry.
        propertyAlias:
          allOf:
          - $ref: '#/components/schemas/AssetPropertyAlias'
          description: The alias that identifies the property, such as an OPC-UA server
            data stream path (for example, `/company/windfarm/3/turbine/7/temperature`).
            For more information, see [Mapping industrial data streams to asset properties](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/connect-data-streams.html)
            in the _IoT SiteWise User Guide_.
        propertyValues:
          allOf:
          - $ref: '#/components/schemas/AssetPropertyValues'
          description: The list of property values to upload. You can specify up to
            10 `propertyValues` array elements.
      required:
      - entryId
      - propertyValues
      description: Contains a list of value updates for an asset property in the list
        of asset entries consumed by the [BatchPutAssetPropertyValue](https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_BatchPutAssetPropertyValue.html)
        API operation.
    PutDefaultEncryptionConfigurationRequest:
      type: object
      properties:
        encryptionType:
          allOf:
          - $ref: '#/components/schemas/EncryptionType'
          description: The type of encryption used for the encryption configuration.
        kmsKeyId:
          allOf:
          - $ref: '#/components/schemas/KmsKeyId'
          description: The Key ID of the customer managed key used for KMS encryption.
            This is required if you use `KMS_BASED_ENCRYPTION`.
      required:
      - encryptionType
    PutDefaultEncryptionConfigurationResponse:
      type: object
      properties:
        encryptionType:
          allOf:
          - $ref: '#/components/schemas/EncryptionType'
          description: The type of encryption used for the encryption configuration.
        kmsKeyArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Key ARN of the KMS key used for KMS encryption if you use
            `KMS_BASED_ENCRYPTION`.
        configurationStatus:
          allOf:
          - $ref: '#/components/schemas/ConfigurationStatus'
          description: The status of the account configuration. This contains the
            `ConfigurationState`. If there is an error, it also contains the `ErrorDetails`.
      required:
      - encryptionType
      - configurationStatus
    PutLoggingOptionsRequest:
      type: object
      properties:
        loggingOptions:
          allOf:
          - $ref: '#/components/schemas/LoggingOptions'
          description: The logging options to set.
      required:
      - loggingOptions
    PutLoggingOptionsResponse:
      type: object
      properties: {}
    PutStorageConfigurationRequest:
      type: object
      properties:
        storageType:
          allOf:
          - $ref: '#/components/schemas/StorageType'
          description: "The storage tier that you specified for your data. The `storageType`\
            \ parameter can be one of the following values:\n\n  * `SITEWISE_DEFAULT_STORAGE`\
            \ – IoT SiteWise saves your data into the hot tier. The hot tier is a\
            \ service-managed database.\n\n  * `MULTI_LAYER_STORAGE` – IoT SiteWise\
            \ saves your data in both the cold tier and the hot tier. The cold tier\
            \ is a customer-managed Amazon S3 bucket."
        multiLayerStorage:
          allOf:
          - $ref: '#/components/schemas/MultiLayerStorage'
          description: Identifies a storage destination. If you specified `MULTI_LAYER_STORAGE`
            for the storage type, you must specify a `MultiLayerStorage` object.
        disassociatedDataStorage:
          allOf:
          - $ref: '#/components/schemas/DisassociatedDataStorageState'
          description: "Contains the storage configuration for time series (data streams)\
            \ that aren't associated with asset properties. The `disassociatedDataStorage`\
            \ can be one of the following values:\n\n  * `ENABLED` – IoT SiteWise\
            \ accepts time series that aren't associated with asset properties.\n\n\
            After the `disassociatedDataStorage` is enabled, you can't disable it.\n\
            \n  * `DISABLED` – IoT SiteWise doesn't accept time series (data streams)\
            \ that aren't associated with asset properties.\n\nFor more information,\
            \ see [Data streams](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/data-streams.html)\
            \ in the _IoT SiteWise User Guide_."
        retentionPeriod:
          $ref: '#/components/schemas/RetentionPeriod'
        warmTier:
          allOf:
          - $ref: '#/components/schemas/WarmTierState'
          description: A service managed storage tier optimized for analytical queries.
            It stores periodically uploaded, buffered and historical data ingested
            with the CreaeBulkImportJob API.
        warmTierRetentionPeriod:
          allOf:
          - $ref: '#/components/schemas/WarmTierRetentionPeriod'
          description: Set this period to specify how long your data is stored in
            the warm tier before it is deleted. You can set this only if cold tier
            is enabled.
        disallowIngestNullNaN:
          allOf:
          - $ref: '#/components/schemas/DisallowIngestNullNaN'
          description: Describes the configuration for ingesting NULL and NaN data.
            By default the feature is allowed. The feature is disallowed if the value
            is `true`.
      required:
      - storageType
    PutStorageConfigurationResponse:
      type: object
      properties:
        storageType:
          allOf:
          - $ref: '#/components/schemas/StorageType'
          description: "The storage tier that you specified for your data. The `storageType`\
            \ parameter can be one of the following values:\n\n  * `SITEWISE_DEFAULT_STORAGE`\
            \ – IoT SiteWise saves your data into the hot tier. The hot tier is a\
            \ service-managed database.\n\n  * `MULTI_LAYER_STORAGE` – IoT SiteWise\
            \ saves your data in both the cold tier and the hot tier. The cold tier\
            \ is a customer-managed Amazon S3 bucket."
        multiLayerStorage:
          allOf:
          - $ref: '#/components/schemas/MultiLayerStorage'
          description: Contains information about the storage destination.
        disassociatedDataStorage:
          allOf:
          - $ref: '#/components/schemas/DisassociatedDataStorageState'
          description: "Contains the storage configuration for time series (data streams)\
            \ that aren't associated with asset properties. The `disassociatedDataStorage`\
            \ can be one of the following values:\n\n  * `ENABLED` – IoT SiteWise\
            \ accepts time series that aren't associated with asset properties.\n\n\
            After the `disassociatedDataStorage` is enabled, you can't disable it.\n\
            \n  * `DISABLED` – IoT SiteWise doesn't accept time series (data streams)\
            \ that aren't associated with asset properties.\n\nFor more information,\
            \ see [Data streams](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/data-streams.html)\
            \ in the _IoT SiteWise User Guide_."
        retentionPeriod:
          $ref: '#/components/schemas/RetentionPeriod'
        configurationStatus:
          $ref: '#/components/schemas/ConfigurationStatus'
        warmTier:
          allOf:
          - $ref: '#/components/schemas/WarmTierState'
          description: A service managed storage tier optimized for analytical queries.
            It stores periodically uploaded, buffered and historical data ingested
            with the CreaeBulkImportJob API.
        warmTierRetentionPeriod:
          allOf:
          - $ref: '#/components/schemas/WarmTierRetentionPeriod'
          description: Set this period to specify how long your data is stored in
            the warm tier before it is deleted. You can set this only if cold tier
            is enabled.
        disallowIngestNullNaN:
          allOf:
          - $ref: '#/components/schemas/DisallowIngestNullNaN'
          description: Describes the configuration for ingesting NULL and NaN data.
            By default the feature is allowed. The feature is disallowed if the value
            is `true`.
      required:
      - storageType
      - configurationStatus
    Qualities:
      type: array
      items:
        $ref: '#/components/schemas/Quality'
    Quality:
      type: string
      enum:
      - GOOD
      - BAD
      - UNCERTAIN
    QueryStatement:
      type: string
      pattern: ^[\s\S]+$
      minLength: 1
    QueryTimeoutException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: The query timed out.
    RawValueType:
      type: string
      enum:
      - D
      - B
      - S
      - I
      - U
    Reference:
      type: object
      properties:
        dataset:
          allOf:
          - $ref: '#/components/schemas/DataSetReference'
          description: Contains the dataset reference information.
      description: Contains the reference information.
    Resolution:
      type: string
      pattern: ^1m|15m|1h|1d$
      minLength: 2
      maxLength: 3
    Resource:
      type: object
      properties:
        portal:
          allOf:
          - $ref: '#/components/schemas/PortalResource'
          description: A portal resource.
        project:
          allOf:
          - $ref: '#/components/schemas/ProjectResource'
          description: A project resource.
      description: Contains an IoT SiteWise Monitor resource ID for a portal or project.
    ResourceAlreadyExistsException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
        resourceId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          description: The ID of the resource that already exists.
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          description: The ARN of the resource that already exists.
      required:
      - message
      - resourceId
      - resourceArn
      description: The resource already exists.
    ResourceArn:
      type: string
    ResourceId:
      type: string
    ResourceNotFoundException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      required:
      - message
      description: The requested resource can't be found.
    ResourceType:
      type: string
      enum:
      - PORTAL
      - PROJECT
    ResponseStream:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/Trace'
        description: |-
          Contains tracing information of the SiteWise Assistant's reasoning and data access.
      - allOf:
        - $ref: '#/components/schemas/InvocationOutput'
        description: |-
          Contains the SiteWise Assistant's response.
      - allOf:
        - $ref: '#/components/schemas/AccessDeniedException'
      - allOf:
        - $ref: '#/components/schemas/ConflictingOperationException'
      - allOf:
        - $ref: '#/components/schemas/InternalFailureException'
      - allOf:
        - $ref: '#/components/schemas/InvalidRequestException'
      - allOf:
        - $ref: '#/components/schemas/LimitExceededException'
      - allOf:
        - $ref: '#/components/schemas/ResourceNotFoundException'
      - allOf:
        - $ref: '#/components/schemas/ThrottlingException'
      description: |-
        Contains the response, citation, and trace from the SiteWise Assistant.
    RestrictedDescription:
      type: string
      pattern: ^[a-zA-Z0-9 _\-#$*!@]+$
      minLength: 1
      maxLength: 2048
    RestrictedName:
      type: string
      pattern: ^[a-zA-Z0-9 _\-#$*!@]+$
      minLength: 1
      maxLength: 256
    RetentionPeriod:
      type: object
      properties:
        numberOfDays:
          allOf:
          - $ref: '#/components/schemas/NumberOfDays'
          description: 'The number of days that your data is kept.


            If you specified a value for this parameter, the `unlimited` parameter
            must be `false`.'
        unlimited:
          allOf:
          - $ref: '#/components/schemas/Unlimited'
          description: 'If true, your data is kept indefinitely.


            If configured to `true`, you must not specify a value for the `numberOfDays`
            parameter.'
      description: The number of days your data is kept in the hot tier. By default,
        your data is kept indefinitely in the hot tier.
    Row:
      type: object
      properties:
        data:
          allOf:
          - $ref: '#/components/schemas/DatumList'
          description: List of data points in a single row of the result set.
      required:
      - data
      description: Represents a single row in the query results.
    Rows:
      type: array
      items:
        $ref: '#/components/schemas/Row'
    SSOApplicationId:
      type: string
      pattern: ^[!-~]*$
      minLength: 1
      maxLength: 64
    ScalarType:
      type: string
      enum:
      - BOOLEAN
      - INT
      - DOUBLE
      - TIMESTAMP
      - STRING
    ScalarValue:
      type: string
    SelectAll:
      type: string
      pattern: ^\*$
    ServiceUnavailableException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      required:
      - message
      description: The requested service is unavailable.
    SiemensIE:
      type: object
      properties:
        iotCoreThingName:
          allOf:
          - $ref: '#/components/schemas/IotCoreThingName'
          description: The name of the IoT Thing for your SiteWise Edge gateway.
      required:
      - iotCoreThingName
      description: Contains details for a SiteWise Edge gateway that runs on a Siemens
        Industrial Edge Device.
    Source:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Contains the ARN of the dataset. If the source is Kendra, it's
            the ARN of the Kendra index.
        location:
          allOf:
          - $ref: '#/components/schemas/Location'
          description: Contains the location information where the cited text is originally
            stored. For example, if the data source is Kendra, and the text synchronized
            is from an S3 bucket, then the location refers to an S3 object.
      description: The data source for the dataset.
    SourceDetail:
      type: object
      properties:
        kendra:
          allOf:
          - $ref: '#/components/schemas/KendraSourceDetail'
          description: Contains details about the Kendra dataset source.
      description: The details of the dataset source associated with the dataset.
    StorageType:
      type: string
      enum:
      - SITEWISE_DEFAULT_STORAGE
      - MULTI_LAYER_STORAGE
    String:
      type: string
    TagKey:
      type: string
      minLength: 1
      maxLength: 128
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
    TagMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
    TagResourceRequest:
      type: object
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          description: The [ARN](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            of the resource to tag.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: A list of key-value pairs that contain metadata for the resource.
            For more information, see [Tagging your IoT SiteWise resources](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/tag-resources.html)
            in the _IoT SiteWise User Guide_.
      required:
      - resourceArn
      - tags
    TagResourceResponse:
      type: object
      properties: {}
    TagValue:
      type: string
      minLength: 0
      maxLength: 256
    TargetResource:
      type: object
      properties:
        assetId:
          allOf:
          - $ref: '#/components/schemas/CustomID'
          description: The ID of the asset, in UUID format.
      required:
      - assetId
      description: The resource the action will be taken on.
    TargetResourceType:
      type: string
      enum:
      - ASSET
    ThrottlingException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      required:
      - message
      description: 'Your request exceeded a rate limit. For example, you might have
        exceeded the number of IoT SiteWise assets that can be created per second,
        the allowed number of messages per second, and so on.


        For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html)
        in the _IoT SiteWise User Guide_.'
    TimeInNanos:
      type: object
      properties:
        timeInSeconds:
          allOf:
          - $ref: '#/components/schemas/TimeInSeconds'
          description: The timestamp date, in seconds, in the Unix epoch format. Fractional
            nanosecond data is provided by `offsetInNanos`.
        offsetInNanos:
          allOf:
          - $ref: '#/components/schemas/OffsetInNanos'
          description: The nanosecond offset from `timeInSeconds`.
      required:
      - timeInSeconds
      description: Contains a timestamp with optional nanosecond granularity.
    TimeInSeconds:
      type: integer
      format: int64
      minimum: 1
      maximum: 9223372036854774
    TimeOrdering:
      type: string
      enum:
      - ASCENDING
      - DESCENDING
    TimeSeriesId:
      type: string
      minLength: 36
      maxLength: 73
    TimeSeriesSummaries:
      type: array
      items:
        $ref: '#/components/schemas/TimeSeriesSummary'
    TimeSeriesSummary:
      type: object
      properties:
        assetId:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the asset in which the asset property was created.
        propertyId:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the asset property, in UUID format.
        alias:
          allOf:
          - $ref: '#/components/schemas/PropertyAlias'
          description: The alias that identifies the time series.
        timeSeriesId:
          allOf:
          - $ref: '#/components/schemas/TimeSeriesId'
          description: The ID of the time series.
        dataType:
          allOf:
          - $ref: '#/components/schemas/PropertyDataType'
          description: 'The data type of the time series.


            If you specify `STRUCT`, you must also specify `dataTypeSpec` to identify
            the type of the structure for this time series.'
        dataTypeSpec:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: 'The data type of the structure for this time series. This
            parameter is required for time series that have the `STRUCT` data type.


            The options for this parameter depend on the type of the composite model
            in which you created the asset property that is associated with your time
            series. Use `AWS/ALARM_STATE` for alarm state in alarm composite models.'
        timeSeriesCreationDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date that the time series was created, in Unix epoch time.
        timeSeriesLastUpdateDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date that the time series was last updated, in Unix epoch
            time.
        timeSeriesArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: 'The [ARN](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            of the time series, which has the following format.


            `arn:${Partition}:iotsitewise:${Region}:${Account}:time-series/${TimeSeriesId}`'
      required:
      - timeSeriesId
      - dataType
      - timeSeriesCreationDate
      - timeSeriesLastUpdateDate
      - timeSeriesArn
      description: Contains a summary of a time series (data stream).
    Timestamp:
      type: string
      format: date-time
    Timestamps:
      type: array
      items:
        $ref: '#/components/schemas/TimeInNanos'
    TooManyTagsException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ExceptionMessage'
        resourceName:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          description: The name of the resource with too many tags.
      description: You've reached the limit for the number of tags allowed for a resource.
        For more information, see [Tag naming limits and requirements](https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html#tag-conventions)
        in the _Amazon Web Services General Reference_.
    Trace:
      type: object
      properties:
        text:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The cited text from the data source.
      description: Contains tracing information of the SiteWise Assistant's reasoning
        and data access.
    Transform:
      type: object
      properties:
        expression:
          allOf:
          - $ref: '#/components/schemas/Expression'
          description: 'The mathematical expression that defines the transformation
            function. You can specify up to 10 variables per expression. You can specify
            up to 10 functions per expression.


            For more information, see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html)
            in the _IoT SiteWise User Guide_.'
        variables:
          allOf:
          - $ref: '#/components/schemas/ExpressionVariables'
          description: The list of variables used in the expression.
        processingConfig:
          allOf:
          - $ref: '#/components/schemas/TransformProcessingConfig'
          description: The processing configuration for the given transform property.
            You can configure transforms to be kept at the edge or forwarded to the
            Amazon Web Services Cloud. You can also configure transforms to be computed
            at the edge or in the cloud.
      required:
      - expression
      - variables
      description: 'Contains an asset transform property. A transform is a one-to-one
        mapping of a property''s data points from one form to another. For example,
        you can use a transform to convert a Celsius data stream to Fahrenheit by
        applying the transformation expression to each data point of the Celsius stream.
        A transform can only have a data type of `DOUBLE` and consume properties with
        data types of `INTEGER` or `DOUBLE`.


        For more information, see [Transforms](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/asset-properties.html#transforms)
        in the _IoT SiteWise User Guide_.'
    TransformProcessingConfig:
      type: object
      properties:
        computeLocation:
          allOf:
          - $ref: '#/components/schemas/ComputeLocation'
          description: The compute location for the given transform property.
        forwardingConfig:
          $ref: '#/components/schemas/ForwardingConfig'
      required:
      - computeLocation
      description: The processing configuration for the given transform property.
        You can configure transforms to be kept at the edge or forwarded to the Amazon
        Web Services Cloud. You can also configure transforms to be computed at the
        edge or in the cloud.
    TraversalDirection:
      type: string
      enum:
      - PARENT
      - CHILD
    TraversalType:
      type: string
      enum:
      - PATH_TO_ROOT
    TumblingWindow:
      type: object
      properties:
        interval:
          allOf:
          - $ref: '#/components/schemas/Interval'
          description: 'The time interval for the tumbling window. The interval time
            must be between 1 minute and 1 week.


            IoT SiteWise computes the `1w` interval the end of Sunday at midnight
            each week (UTC), the `1d` interval at the end of each day at midnight
            (UTC), the `1h` interval at the end of each hour, and so on.


            When IoT SiteWise aggregates data points for metric computations, the
            start of each interval is exclusive and the end of each interval is inclusive.
            IoT SiteWise places the computed data point at the end of the interval.'
        offset:
          allOf:
          - $ref: '#/components/schemas/Offset'
          description: "The offset for the tumbling window. The `offset` parameter\
            \ accepts the following:\n\n  * The offset time.\n\nFor example, if you\
            \ specify `18h` for `offset` and `1d` for `interval`, IoT SiteWise aggregates\
            \ data in one of the following ways:\n\n    * If you create the metric\
            \ before or at 6 PM (UTC), you get the first aggregation result at 6 PM\
            \ (UTC) on the day when you create the metric.\n\n    * If you create\
            \ the metric after 6 PM (UTC), you get the first aggregation result at\
            \ 6 PM (UTC) the next day.\n\n  * The ISO 8601 format.\n\nFor example,\
            \ if you specify `PT18H` for `offset` and `1d` for `interval`, IoT SiteWise\
            \ aggregates data in one of the following ways:\n\n    * If you create\
            \ the metric before or at 6 PM (UTC), you get the first aggregation result\
            \ at 6 PM (UTC) on the day when you create the metric.\n\n    * If you\
            \ create the metric after 6 PM (UTC), you get the first aggregation result\
            \ at 6 PM (UTC) the next day.\n\n  * The 24-hour clock.\n\nFor example,\
            \ if you specify `00:03:00` for `offset`, `5m` for `interval`, and you\
            \ create the metric at 2 PM (UTC), you get the first aggregation result\
            \ at 2:03 PM (UTC). You get the second aggregation result at 2:08 PM (UTC).\n\
            \n  * The offset time zone.\n\nFor example, if you specify `2021-07-23T18:00-08`\
            \ for `offset` and `1d` for `interval`, IoT SiteWise aggregates data in\
            \ one of the following ways:\n\n    * If you create the metric before\
            \ or at 6 PM (PST), you get the first aggregation result at 6 PM (PST)\
            \ on the day when you create the metric.\n\n    * If you create the metric\
            \ after 6 PM (PST), you get the first aggregation result at 6 PM (PST)\
            \ the next day."
      required:
      - interval
      description: 'Contains a tumbling window, which is a repeating fixed-sized,
        non-overlapping, and contiguous time window. You can use this window in metrics
        to aggregate data from properties and other assets.


        You can use `m`, `h`, `d`, and `w` when you specify an interval or offset.
        Note that `m` represents minutes, `h` represents hours, `d` represents days,
        and `w` represents weeks. You can also use `s` to represent seconds in `offset`.


        The `interval` and `offset` parameters support the [ISO 8601 format](https://en.wikipedia.org/wiki/ISO_8601).
        For example, `PT5S` represents 5 seconds, `PT5M` represents 5 minutes, and
        `PT5H` represents 5 hours.'
    UnauthorizedException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      required:
      - message
      description: You are not authorized.
    Unlimited:
      type: boolean
    UntagResourceRequest:
      type: object
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          description: The [ARN](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            of the resource to untag.
        tagKeys:
          allOf:
          - $ref: '#/components/schemas/TagKeyList'
          description: A list of keys for tags to remove from the resource.
      required:
      - resourceArn
      - tagKeys
    UntagResourceResponse:
      type: object
      properties: {}
    UpdateAccessPolicyRequest:
      type: object
      properties:
        accessPolicyId:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the access policy.
        accessPolicyIdentity:
          allOf:
          - $ref: '#/components/schemas/Identity'
          description: The identity for this access policy. Choose an IAM Identity
            Center user, an IAM Identity Center group, or an IAM user.
        accessPolicyResource:
          allOf:
          - $ref: '#/components/schemas/Resource'
          description: The IoT SiteWise Monitor resource for this access policy. Choose
            either a portal or a project.
        accessPolicyPermission:
          allOf:
          - $ref: '#/components/schemas/Permission'
          description: The permission level for this access policy. Note that a project
            `ADMINISTRATOR` is also known as a project owner.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique case-sensitive identifier that you can provide to
            ensure the idempotency of the request. Don't reuse this client token if
            a new idempotent request is required.
      required:
      - accessPolicyId
      - accessPolicyIdentity
      - accessPolicyResource
      - accessPolicyPermission
    UpdateAccessPolicyResponse:
      type: object
      properties: {}
    UpdateAssetModelCompositeModelRequest:
      type: object
      properties:
        assetModelId:
          allOf:
          - $ref: '#/components/schemas/CustomID'
          description: The ID of the asset model, in UUID format.
        assetModelCompositeModelId:
          allOf:
          - $ref: '#/components/schemas/CustomID'
          description: The ID of a composite model on this asset model.
        assetModelCompositeModelExternalId:
          allOf:
          - $ref: '#/components/schemas/ExternalId'
          description: An external ID to assign to the asset model. You can only set
            the external ID of the asset model if it wasn't set when it was created,
            or you're setting it to the exact same thing as when it was created.
        assetModelCompositeModelDescription:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: A description for the composite model.
        assetModelCompositeModelName:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: A unique name for the composite model.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique case-sensitive identifier that you can provide to
            ensure the idempotency of the request. Don't reuse this client token if
            a new idempotent request is required.
        assetModelCompositeModelProperties:
          allOf:
          - $ref: '#/components/schemas/AssetModelProperties'
          description: 'The property definitions of the composite model. For more
            information, see [ Inline custom composite models](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/custom-composite-models.html#inline-composite-models)
            in the _IoT SiteWise User Guide_.


            You can specify up to 200 properties per composite model. For more information,
            see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html)
            in the _IoT SiteWise User Guide_.'
        ifMatch:
          allOf:
          - $ref: '#/components/schemas/ETag'
          description: The expected current entity tag (ETag) for the asset model’s
            latest or active version (specified using `matchForVersionType`). The
            update request is rejected if the tag does not match the latest or active
            version's current entity tag. See [Optimistic locking for asset model
            writes](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/opt-locking-for-model.html)
            in the _IoT SiteWise User Guide_.
        ifNoneMatch:
          allOf:
          - $ref: '#/components/schemas/SelectAll'
          description: Accepts ***** to reject the update request if an active version
            (specified using `matchForVersionType` as `ACTIVE`) already exists for
            the asset model.
        matchForVersionType:
          allOf:
          - $ref: '#/components/schemas/AssetModelVersionType'
          description: Specifies the asset model version type (`LATEST` or `ACTIVE`)
            used in conjunction with `If-Match` or `If-None-Match` headers to determine
            the target ETag for the update operation.
      required:
      - assetModelId
      - assetModelCompositeModelId
      - assetModelCompositeModelName
    UpdateAssetModelCompositeModelResponse:
      type: object
      properties:
        assetModelCompositeModelPath:
          allOf:
          - $ref: '#/components/schemas/AssetModelCompositeModelPath'
          description: The path to the composite model listing the parent composite
            models.
        assetModelStatus:
          $ref: '#/components/schemas/AssetModelStatus'
      required:
      - assetModelCompositeModelPath
      - assetModelStatus
    UpdateAssetModelRequest:
      type: object
      properties:
        assetModelId:
          allOf:
          - $ref: '#/components/schemas/CustomID'
          description: The ID of the asset model to update. This can be either the
            actual ID in UUID format, or else `externalId:` followed by the external
            ID, if it has one. For more information, see [Referencing objects with
            external IDs](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/object-ids.html#external-id-references)
            in the _IoT SiteWise User Guide_.
        assetModelExternalId:
          allOf:
          - $ref: '#/components/schemas/ExternalId'
          description: An external ID to assign to the asset model. The asset model
            must not already have an external ID. The external ID must be unique within
            your Amazon Web Services account. For more information, see [Using external
            IDs](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/object-ids.html#external-ids)
            in the _IoT SiteWise User Guide_.
        assetModelName:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: A unique name for the asset model.
        assetModelDescription:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: A description for the asset model.
        assetModelProperties:
          allOf:
          - $ref: '#/components/schemas/AssetModelProperties'
          description: 'The updated property definitions of the asset model. For more
            information, see [Asset properties](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/asset-properties.html)
            in the _IoT SiteWise User Guide_.


            You can specify up to 200 properties per asset model. For more information,
            see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html)
            in the _IoT SiteWise User Guide_.'
        assetModelHierarchies:
          allOf:
          - $ref: '#/components/schemas/AssetModelHierarchies'
          description: 'The updated hierarchy definitions of the asset model. Each
            hierarchy specifies an asset model whose assets can be children of any
            other assets created from this asset model. For more information, see
            [Asset hierarchies](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/asset-hierarchies.html)
            in the _IoT SiteWise User Guide_.


            You can specify up to 10 hierarchies per asset model. For more information,
            see [Quotas](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/quotas.html)
            in the _IoT SiteWise User Guide_.'
        assetModelCompositeModels:
          allOf:
          - $ref: '#/components/schemas/AssetModelCompositeModels'
          description: 'The composite models that are part of this asset model. It
            groups properties (such as attributes, measurements, transforms, and metrics)
            and child composite models that model parts of your industrial equipment.
            Each composite model has a type that defines the properties that the composite
            model supports. Use composite models to define alarms on this asset model.


            When creating custom composite models, you need to use [CreateAssetModelCompositeModel](https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_CreateAssetModelCompositeModel.html).
            For more information, see [Creating custom composite models (Components)](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/create-custom-composite-models.html)
            in the _IoT SiteWise User Guide_.'
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique case-sensitive identifier that you can provide to
            ensure the idempotency of the request. Don't reuse this client token if
            a new idempotent request is required.
        ifMatch:
          allOf:
          - $ref: '#/components/schemas/ETag'
          description: The expected current entity tag (ETag) for the asset model’s
            latest or active version (specified using `matchForVersionType`). The
            update request is rejected if the tag does not match the latest or active
            version's current entity tag. See [Optimistic locking for asset model
            writes](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/opt-locking-for-model.html)
            in the _IoT SiteWise User Guide_.
        ifNoneMatch:
          allOf:
          - $ref: '#/components/schemas/SelectAll'
          description: Accepts ***** to reject the update request if an active version
            (specified using `matchForVersionType` as `ACTIVE`) already exists for
            the asset model.
        matchForVersionType:
          allOf:
          - $ref: '#/components/schemas/AssetModelVersionType'
          description: Specifies the asset model version type (`LATEST` or `ACTIVE`)
            used in conjunction with `If-Match` or `If-None-Match` headers to determine
            the target ETag for the update operation.
      required:
      - assetModelId
      - assetModelName
    UpdateAssetModelResponse:
      type: object
      properties:
        assetModelStatus:
          allOf:
          - $ref: '#/components/schemas/AssetModelStatus'
          description: The status of the asset model, which contains a state (`UPDATING`
            after successfully calling this operation) and any error message.
      required:
      - assetModelStatus
    UpdateAssetPropertyRequest:
      type: object
      properties:
        assetId:
          allOf:
          - $ref: '#/components/schemas/CustomID'
          description: The ID of the asset to be updated. This can be either the actual
            ID in UUID format, or else `externalId:` followed by the external ID,
            if it has one. For more information, see [Referencing objects with external
            IDs](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/object-ids.html#external-id-references)
            in the _IoT SiteWise User Guide_.
        propertyId:
          allOf:
          - $ref: '#/components/schemas/CustomID'
          description: The ID of the asset property to be updated. This can be either
            the actual ID in UUID format, or else `externalId:` followed by the external
            ID, if it has one. For more information, see [Referencing objects with
            external IDs](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/object-ids.html#external-id-references)
            in the _IoT SiteWise User Guide_.
        propertyAlias:
          allOf:
          - $ref: '#/components/schemas/PropertyAlias'
          description: 'The alias that identifies the property, such as an OPC-UA
            server data stream path (for example, `/company/windfarm/3/turbine/7/temperature`).
            For more information, see [Mapping industrial data streams to asset properties](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/connect-data-streams.html)
            in the _IoT SiteWise User Guide_.


            If you omit this parameter, the alias is removed from the property.'
        propertyNotificationState:
          allOf:
          - $ref: '#/components/schemas/PropertyNotificationState'
          description: 'The MQTT notification state (enabled or disabled) for this
            asset property. When the notification state is enabled, IoT SiteWise publishes
            property value updates to a unique MQTT topic. For more information, see
            [Interacting with other services](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/interact-with-other-services.html)
            in the _IoT SiteWise User Guide_.


            If you omit this parameter, the notification state is set to `DISABLED`.'
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique case-sensitive identifier that you can provide to
            ensure the idempotency of the request. Don't reuse this client token if
            a new idempotent request is required.
        propertyUnit:
          allOf:
          - $ref: '#/components/schemas/PropertyUnit'
          description: The unit of measure (such as Newtons or RPM) of the asset property.
            If you don't specify a value for this parameter, the service uses the
            value of the `assetModelProperty` in the asset model.
      required:
      - assetId
      - propertyId
    UpdateAssetRequest:
      type: object
      properties:
        assetId:
          allOf:
          - $ref: '#/components/schemas/CustomID'
          description: The ID of the asset to update. This can be either the actual
            ID in UUID format, or else `externalId:` followed by the external ID,
            if it has one. For more information, see [Referencing objects with external
            IDs](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/object-ids.html#external-id-references)
            in the _IoT SiteWise User Guide_.
        assetName:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: A friendly name for the asset.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique case-sensitive identifier that you can provide to
            ensure the idempotency of the request. Don't reuse this client token if
            a new idempotent request is required.
        assetDescription:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: A description for the asset.
        assetExternalId:
          allOf:
          - $ref: '#/components/schemas/ExternalId'
          description: An external ID to assign to the asset. The asset must not already
            have an external ID. The external ID must be unique within your Amazon
            Web Services account. For more information, see [Using external IDs](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/object-ids.html#external-ids)
            in the _IoT SiteWise User Guide_.
      required:
      - assetId
      - assetName
    UpdateAssetResponse:
      type: object
      properties:
        assetStatus:
          allOf:
          - $ref: '#/components/schemas/AssetStatus'
          description: The status of the asset, which contains a state (`UPDATING`
            after successfully calling this operation) and any error message.
      required:
      - assetStatus
    UpdateDashboardRequest:
      type: object
      properties:
        dashboardId:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the dashboard to update.
        dashboardName:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: A new friendly name for the dashboard.
        dashboardDescription:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: A new description for the dashboard.
        dashboardDefinition:
          allOf:
          - $ref: '#/components/schemas/DashboardDefinition'
          description: "The new dashboard definition, as specified in a JSON literal.\n\
            \n  * IoT SiteWise Monitor (Classic) see [Create dashboards (CLI)](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/create-dashboards-using-aws-cli.html)\n\
            \n  * IoT SiteWise Monitor (AI-aware) see [Create dashboards (CLI)](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/create-dashboards-ai-dashboard-cli.html)\n\
            \nin the _IoT SiteWise User Guide_"
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique case-sensitive identifier that you can provide to
            ensure the idempotency of the request. Don't reuse this client token if
            a new idempotent request is required.
      required:
      - dashboardId
      - dashboardName
      - dashboardDefinition
    UpdateDashboardResponse:
      type: object
      properties: {}
    UpdateDatasetRequest:
      type: object
      properties:
        datasetId:
          allOf:
          - $ref: '#/components/schemas/CustomID'
          description: The ID of the dataset.
        datasetName:
          allOf:
          - $ref: '#/components/schemas/RestrictedName'
          description: The name of the dataset.
        datasetDescription:
          allOf:
          - $ref: '#/components/schemas/RestrictedDescription'
          description: A description about the dataset, and its functionality.
        datasetSource:
          allOf:
          - $ref: '#/components/schemas/DatasetSource'
          description: The data source for the dataset.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique case-sensitive identifier that you can provide to
            ensure the idempotency of the request. Don't reuse this client token if
            a new idempotent request is required.
      required:
      - datasetId
      - datasetName
      - datasetSource
    UpdateDatasetResponse:
      type: object
      properties:
        datasetId:
          allOf:
          - $ref: '#/components/schemas/CustomID'
          description: The ID of the dataset.
        datasetArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The [ARN](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference-arns.html)
            of the dataset. The format is `arn:${Partition}:iotsitewise:${Region}:${Account}:dataset/${DatasetId}`.
        datasetStatus:
          allOf:
          - $ref: '#/components/schemas/DatasetStatus'
          description: The status of the dataset. This contains the state and any
            error messages. State is `UPDATING` after a successfull call to this API,
            and any associated error message. The state is `ACTIVE` when ready to
            use.
    UpdateGatewayCapabilityConfigurationRequest:
      type: object
      properties:
        gatewayId:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the gateway to be updated.
        capabilityNamespace:
          allOf:
          - $ref: '#/components/schemas/CapabilityNamespace'
          description: The namespace of the gateway capability configuration to be
            updated. For example, if you configure OPC-UA sources from the IoT SiteWise
            console, your OPC-UA capability configuration has the namespace `iotsitewise:opcuacollector:version`,
            where `version` is a number such as `1`.
        capabilityConfiguration:
          allOf:
          - $ref: '#/components/schemas/CapabilityConfiguration'
          description: The JSON document that defines the configuration for the gateway
            capability. For more information, see [Configuring data sources (CLI)](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/configure-sources.html#configure-source-cli)
            in the _IoT SiteWise User Guide_.
      required:
      - gatewayId
      - capabilityNamespace
      - capabilityConfiguration
    UpdateGatewayCapabilityConfigurationResponse:
      type: object
      properties:
        capabilityNamespace:
          allOf:
          - $ref: '#/components/schemas/CapabilityNamespace'
          description: The namespace of the gateway capability.
        capabilitySyncStatus:
          allOf:
          - $ref: '#/components/schemas/CapabilitySyncStatus'
          description: "The synchronization status of the capability configuration.\
            \ The sync status can be one of the following:\n\n  * `IN_SYNC` – The\
            \ gateway is running the capability configuration.\n\n  * `NOT_APPLICABLE`\
            \ – Synchronization is not required for this capability configuration.\
            \ This is most common when integrating partner data sources, because the\
            \ data integration is handled externally by the partner.\n\n  * `OUT_OF_SYNC`\
            \ – The gateway hasn't received the capability configuration.\n\n  * `SYNC_FAILED`\
            \ – The gateway rejected the capability configuration.\n\n  * `UNKNOWN`\
            \ – The synchronization status is currently unknown due to an undetermined\
            \ or temporary error.\n\nAfter you update a capability configuration,\
            \ its sync status is `OUT_OF_SYNC` until the gateway receives and applies\
            \ or rejects the updated configuration."
      required:
      - capabilityNamespace
      - capabilitySyncStatus
    UpdateGatewayRequest:
      type: object
      properties:
        gatewayId:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the gateway to update.
        gatewayName:
          allOf:
          - $ref: '#/components/schemas/GatewayName'
          description: A unique name for the gateway.
      required:
      - gatewayId
      - gatewayName
    UpdatePortalRequest:
      type: object
      properties:
        portalId:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the portal to update.
        portalName:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: A new friendly name for the portal.
        portalDescription:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: A new description for the portal.
        portalContactEmail:
          allOf:
          - $ref: '#/components/schemas/Email'
          description: The Amazon Web Services administrator's contact email address.
        portalLogoImage:
          $ref: '#/components/schemas/Image'
        roleArn:
          allOf:
          - $ref: '#/components/schemas/IamArn'
          description: The [ARN](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            of a service role that allows the portal's users to access your IoT SiteWise
            resources on your behalf. For more information, see [Using service roles
            for IoT SiteWise Monitor](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/monitor-service-role.html)
            in the _IoT SiteWise User Guide_.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique case-sensitive identifier that you can provide to
            ensure the idempotency of the request. Don't reuse this client token if
            a new idempotent request is required.
        notificationSenderEmail:
          allOf:
          - $ref: '#/components/schemas/Email'
          description: The email address that sends alarm notifications.
        alarms:
          allOf:
          - $ref: '#/components/schemas/Alarms'
          description: Contains the configuration information of an alarm created
            in an IoT SiteWise Monitor portal. You can use the alarm to monitor an
            asset property and get notified when the asset property value is outside
            a specified range. For more information, see [Monitoring with alarms](https://docs.aws.amazon.com/iot-sitewise/latest/appguide/monitor-alarms.html)
            in the _IoT SiteWise Application Guide_.
        portalType:
          allOf:
          - $ref: '#/components/schemas/PortalType'
          description: Define the type of portal. The value for IoT SiteWise Monitor
            (Classic) is `SITEWISE_PORTAL_V1`. The value for IoT SiteWise Monitor
            (AI-aware) is `SITEWISE_PORTAL_V2`.
        portalTypeConfiguration:
          allOf:
          - $ref: '#/components/schemas/PortalTypeConfiguration'
          description: The configuration entry associated with the specific portal
            type. The value for IoT SiteWise Monitor (Classic) is `SITEWISE_PORTAL_V1`.
            The value for IoT SiteWise Monitor (AI-aware) is `SITEWISE_PORTAL_V2`.
      required:
      - portalId
      - portalName
      - portalContactEmail
      - roleArn
    UpdatePortalResponse:
      type: object
      properties:
        portalStatus:
          allOf:
          - $ref: '#/components/schemas/PortalStatus'
          description: The status of the portal, which contains a state (`UPDATING`
            after successfully calling this operation) and any error message.
      required:
      - portalStatus
    UpdateProjectRequest:
      type: object
      properties:
        projectId:
          allOf:
          - $ref: '#/components/schemas/ID'
          description: The ID of the project to update.
        projectName:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: A new friendly name for the project.
        projectDescription:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: A new description for the project.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique case-sensitive identifier that you can provide to
            ensure the idempotency of the request. Don't reuse this client token if
            a new idempotent request is required.
      required:
      - projectId
      - projectName
    UpdateProjectResponse:
      type: object
      properties: {}
    Url:
      type: string
      pattern: ^(http|https)\://\S+$
      minLength: 1
      maxLength: 256
    UserIdentity:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/IdentityId'
          description: The IAM Identity Center ID of the user.
      required:
      - id
      description: Contains information for a user identity in an access policy.
    ValidationException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: The validation failed for this query.
    VariableName:
      type: string
      pattern: ^[a-z][a-z0-9_]*$
      minLength: 1
      maxLength: 64
    VariableValue:
      type: object
      properties:
        propertyId:
          allOf:
          - $ref: '#/components/schemas/Macro'
          description: The ID of the property to use as the variable. You can use
            the property `name` if it's from the same asset model. If the property
            has an external ID, you can specify `externalId:` followed by the external
            ID. For more information, see [Using external IDs](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/object-ids.html#external-ids)
            in the _IoT SiteWise User Guide_.
        hierarchyId:
          allOf:
          - $ref: '#/components/schemas/Macro'
          description: 'The ID of the hierarchy to query for the property ID. You
            can use the hierarchy''s name instead of the hierarchy''s ID. If the hierarchy
            has an external ID, you can specify `externalId:` followed by the external
            ID. For more information, see [Using external IDs](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/object-ids.html#external-ids)
            in the _IoT SiteWise User Guide_.


            You use a hierarchy ID instead of a model ID because you can have several
            hierarchies using the same model and therefore the same `propertyId`.
            For example, you might have separately grouped assets that come from the
            same asset model. For more information, see [Asset hierarchies](https://docs.aws.amazon.com/iot-sitewise/latest/userguide/asset-hierarchies.html)
            in the _IoT SiteWise User Guide_.'
        propertyPath:
          allOf:
          - $ref: '#/components/schemas/AssetModelPropertyPath'
          description: The path of the property.
      description: Identifies a property value used in an expression.
    Variant:
      type: object
      properties:
        stringValue:
          allOf:
          - $ref: '#/components/schemas/PropertyValueStringValue'
          description: 'Asset property data of type string (sequence of characters).
            The allowed pattern: "^$|[^\u0000-\u001F\u007F]+". The max length is 1024.'
        integerValue:
          allOf:
          - $ref: '#/components/schemas/PropertyValueIntegerValue'
          description: Asset property data of type integer (whole number).
        doubleValue:
          allOf:
          - $ref: '#/components/schemas/PropertyValueDoubleValue'
          description: Asset property data of type double (floating point number).
            The min value is -10^10. The max value is 10^10. Double.NaN is allowed.
        booleanValue:
          allOf:
          - $ref: '#/components/schemas/PropertyValueBooleanValue'
          description: Asset property data of type Boolean (true or false).
        nullValue:
          allOf:
          - $ref: '#/components/schemas/PropertyValueNullValue'
          description: The type of null asset property data with BAD and UNCERTAIN
            qualities.
      description: Contains an asset property value (of a single type only).
    Version:
      type: string
      pattern: ^(0|([1-9]{1}\d*))$
      minLength: 1
      maxLength: 10
    WarmTierRetentionPeriod:
      type: object
      properties:
        numberOfDays:
          allOf:
          - $ref: '#/components/schemas/NumberOfDays'
          description: The number of days the data is stored in the warm tier.
        unlimited:
          allOf:
          - $ref: '#/components/schemas/Unlimited'
          description: If set to true, the data is stored indefinitely in the warm
            tier.
      description: Set this period to specify how long your data is stored in the
        warm tier before it is deleted. You can set this only if cold tier is enabled.
    WarmTierState:
      type: string
      enum:
      - ENABLED
      - DISABLED
