openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: elastic_transcoder
  x-aws-serviceName: elastictranscoder
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-07'
  version: '2012-09-25'
  title: Amazon Elastic Transcoder
  description: |-
    AWS Elastic Transcoder Service

    The AWS Elastic Transcoder Service.
servers:
- description: The Amazon Elastic Transcoder regional endpoint
  url: https://elastictranscoder.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths:
  /2012-09-25/jobs/{Id}:
    delete:
      operationId: CancelJob
      description: |-
        The CancelJob operation cancels an unfinished job.

        You can only cancel a job that has a status of `Submitted`. To prevent a pipeline from starting to process a job while you're getting the job identifier, use UpdatePipelineStatus to temporarily pause the pipeline.
      parameters:
      - name: Id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Id'
      responses:
        '202': {}
        '403':
          description: |-
            General authentication failure. The request was not signed correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            One or more required parameter values were not provided in the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '409':
          description: |-
            The resource you are attempting to change is in use. For example, you are attempting to delete a pipeline that is currently in use.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
        '404':
          description: |-
            The requested resource does not exist or is not available. For example, the pipeline to which you're trying to add a job doesn't exist or is still being created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
    get:
      operationId: ReadJob
      description: |-
        The ReadJob operation returns detailed information about a job.
      parameters:
      - name: Id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Id'
      responses:
        '200': {}
        '403':
          description: |-
            General authentication failure. The request was not signed correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            One or more required parameter values were not provided in the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '404':
          description: |-
            The requested resource does not exist or is not available. For example, the pipeline to which you're trying to add a job doesn't exist or is still being created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /2012-09-25/jobs:
    post:
      operationId: CreateJob
      description: |-
        When you create a job, Elastic Transcoder returns JSON data that includes the values that you specified plus information about the job that is created.

        If you have specified more than one output for your jobs (for example, one output for the Kindle Fire and another output for the Apple iPhone 4s), you currently must use the Elastic Transcoder API to list the jobs (as opposed to the AWS Console).
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                PipelineId:
                  $ref: '#/components/schemas/Id'
                Input:
                  $ref: '#/components/schemas/JobInput'
                Inputs:
                  $ref: '#/components/schemas/JobInputs'
                Output:
                  $ref: '#/components/schemas/CreateJobOutput'
                Outputs:
                  $ref: '#/components/schemas/CreateJobOutputs'
                OutputKeyPrefix:
                  $ref: '#/components/schemas/Key'
                Playlists:
                  $ref: '#/components/schemas/CreateJobPlaylists'
                UserMetadata:
                  $ref: '#/components/schemas/UserMetadata'
      responses:
        '201': {}
        '403':
          description: |-
            General authentication failure. The request was not signed correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            One or more required parameter values were not provided in the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '429':
          description: |-
            Too many operations for a given AWS account. For example, the number of pipelines exceeds the maximum allowed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '404':
          description: |-
            The requested resource does not exist or is not available. For example, the pipeline to which you're trying to add a job doesn't exist or is still being created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /2012-09-25/pipelines:
    post:
      operationId: CreatePipeline
      description: |-
        The CreatePipeline operation creates a pipeline with settings that you specify.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  $ref: '#/components/schemas/Name'
                InputBucket:
                  $ref: '#/components/schemas/BucketName'
                OutputBucket:
                  $ref: '#/components/schemas/BucketName'
                Role:
                  $ref: '#/components/schemas/Role'
                AwsKmsKeyArn:
                  $ref: '#/components/schemas/KeyArn'
                Notifications:
                  $ref: '#/components/schemas/Notifications'
                ContentConfig:
                  $ref: '#/components/schemas/PipelineOutputConfig'
                ThumbnailConfig:
                  $ref: '#/components/schemas/PipelineOutputConfig'
      responses:
        '201': {}
        '403':
          description: |-
            General authentication failure. The request was not signed correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            One or more required parameter values were not provided in the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '429':
          description: |-
            Too many operations for a given AWS account. For example, the number of pipelines exceeds the maximum allowed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '404':
          description: |-
            The requested resource does not exist or is not available. For example, the pipeline to which you're trying to add a job doesn't exist or is still being created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
    get:
      operationId: ListPipelines
      description: |-
        The ListPipelines operation gets a list of the pipelines associated with the current AWS account.
      parameters:
      - name: Ascending
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Ascending'
      - name: PageToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Id'
      responses:
        '200': {}
        '403':
          description: |-
            General authentication failure. The request was not signed correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            One or more required parameter values were not provided in the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /2012-09-25/presets:
    post:
      operationId: CreatePreset
      description: |-
        The CreatePreset operation creates a preset with settings that you specify.

        Elastic Transcoder checks the CreatePreset settings to ensure that they meet Elastic Transcoder requirements and to determine whether they comply with H.264 standards. If your settings are not valid for Elastic Transcoder, Elastic Transcoder returns an HTTP 400 response (`ValidationException`) and does not create the preset. If the settings are valid for Elastic Transcoder but aren't strictly compliant with the H.264 standard, Elastic Transcoder creates the preset and returns a warning message in the response. This helps you determine whether your settings comply with the H.264 standard while giving you greater flexibility with respect to the video that Elastic Transcoder produces.

        Elastic Transcoder uses the H.264 video-compression format. For more information, see the International Telecommunication Union publication _Recommendation ITU-T H.264: Advanced video coding for generic audiovisual services_.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  $ref: '#/components/schemas/Name'
                Description:
                  $ref: '#/components/schemas/Description'
                Container:
                  $ref: '#/components/schemas/PresetContainer'
                Video:
                  $ref: '#/components/schemas/VideoParameters'
                Audio:
                  $ref: '#/components/schemas/AudioParameters'
                Thumbnails:
                  $ref: '#/components/schemas/Thumbnails'
      responses:
        '201': {}
        '403':
          description: |-
            General authentication failure. The request was not signed correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            One or more required parameter values were not provided in the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '429':
          description: |-
            Too many operations for a given AWS account. For example, the number of pipelines exceeds the maximum allowed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
    get:
      operationId: ListPresets
      description: |-
        The ListPresets operation gets a list of the default presets included with Elastic Transcoder and the presets that you've added in an AWS region.
      parameters:
      - name: Ascending
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Ascending'
      - name: PageToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Id'
      responses:
        '200': {}
        '403':
          description: |-
            General authentication failure. The request was not signed correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            One or more required parameter values were not provided in the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /2012-09-25/pipelines/{Id}:
    delete:
      operationId: DeletePipeline
      description: |-
        The DeletePipeline operation removes a pipeline.

        You can only delete a pipeline that has never been used or that is not currently in use (doesn't contain any active jobs). If the pipeline is currently in use, `DeletePipeline` returns an error.
      parameters:
      - name: Id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Id'
      responses:
        '202': {}
        '403':
          description: |-
            General authentication failure. The request was not signed correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            One or more required parameter values were not provided in the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '409':
          description: |-
            The resource you are attempting to change is in use. For example, you are attempting to delete a pipeline that is currently in use.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
        '404':
          description: |-
            The requested resource does not exist or is not available. For example, the pipeline to which you're trying to add a job doesn't exist or is still being created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
    get:
      operationId: ReadPipeline
      description: |-
        The ReadPipeline operation gets detailed information about a pipeline.
      parameters:
      - name: Id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Id'
      responses:
        '200': {}
        '403':
          description: |-
            General authentication failure. The request was not signed correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            One or more required parameter values were not provided in the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '404':
          description: |-
            The requested resource does not exist or is not available. For example, the pipeline to which you're trying to add a job doesn't exist or is still being created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
    put:
      operationId: UpdatePipeline
      description: |-
        Use the `UpdatePipeline` operation to update settings for a pipeline.

        When you change pipeline settings, your changes take effect immediately. Jobs that you have already submitted and that Elastic Transcoder has not started to process are affected in addition to jobs that you submit after you change settings.
      parameters:
      - name: Id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  $ref: '#/components/schemas/Name'
                InputBucket:
                  $ref: '#/components/schemas/BucketName'
                Role:
                  $ref: '#/components/schemas/Role'
                AwsKmsKeyArn:
                  $ref: '#/components/schemas/KeyArn'
                Notifications:
                  $ref: '#/components/schemas/Notifications'
                ContentConfig:
                  $ref: '#/components/schemas/PipelineOutputConfig'
                ThumbnailConfig:
                  $ref: '#/components/schemas/PipelineOutputConfig'
      responses:
        '200': {}
        '403':
          description: |-
            General authentication failure. The request was not signed correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            One or more required parameter values were not provided in the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '409':
          description: |-
            The resource you are attempting to change is in use. For example, you are attempting to delete a pipeline that is currently in use.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
        '404':
          description: |-
            The requested resource does not exist or is not available. For example, the pipeline to which you're trying to add a job doesn't exist or is still being created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /2012-09-25/presets/{Id}:
    delete:
      operationId: DeletePreset
      description: |-
        The DeletePreset operation removes a preset that you've added in an AWS region.

        You can't delete the default presets that are included with Elastic Transcoder.
      parameters:
      - name: Id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Id'
      responses:
        '202': {}
        '403':
          description: |-
            General authentication failure. The request was not signed correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            One or more required parameter values were not provided in the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '404':
          description: |-
            The requested resource does not exist or is not available. For example, the pipeline to which you're trying to add a job doesn't exist or is still being created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
    get:
      operationId: ReadPreset
      description: |-
        The ReadPreset operation gets detailed information about a preset.
      parameters:
      - name: Id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Id'
      responses:
        '200': {}
        '403':
          description: |-
            General authentication failure. The request was not signed correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            One or more required parameter values were not provided in the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '404':
          description: |-
            The requested resource does not exist or is not available. For example, the pipeline to which you're trying to add a job doesn't exist or is still being created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /2012-09-25/jobsByPipeline/{PipelineId}:
    get:
      operationId: ListJobsByPipeline
      description: |-
        The ListJobsByPipeline operation gets a list of the jobs currently in a pipeline.

        Elastic Transcoder returns all of the jobs currently in the specified pipeline. The response body contains one element for each job that satisfies the search criteria.
      parameters:
      - name: PipelineId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Id'
      - name: Ascending
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Ascending'
      - name: PageToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Id'
      responses:
        '200': {}
        '403':
          description: |-
            General authentication failure. The request was not signed correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            One or more required parameter values were not provided in the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '404':
          description: |-
            The requested resource does not exist or is not available. For example, the pipeline to which you're trying to add a job doesn't exist or is still being created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /2012-09-25/jobsByStatus/{Status}:
    get:
      operationId: ListJobsByStatus
      description: |-
        The ListJobsByStatus operation gets a list of jobs that have a specified status. The response body contains one element for each job that satisfies the search criteria.
      parameters:
      - name: Status
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/JobStatus'
      - name: Ascending
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Ascending'
      - name: PageToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Id'
      responses:
        '200': {}
        '403':
          description: |-
            General authentication failure. The request was not signed correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            One or more required parameter values were not provided in the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '404':
          description: |-
            The requested resource does not exist or is not available. For example, the pipeline to which you're trying to add a job doesn't exist or is still being created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /2012-09-25/roleTests:
    post:
      operationId: TestRole
      description: |-
        The TestRole operation tests the IAM role used to create the pipeline.

        The `TestRole` action lets you determine whether the IAM role you are using has sufficient permissions to let Elastic Transcoder perform tasks associated with the transcoding process. The action attempts to assume the specified IAM role, checks read access to the input and output buckets, and tries to send a test notification to Amazon SNS topics that you specify.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Role:
                  $ref: '#/components/schemas/Role'
                InputBucket:
                  $ref: '#/components/schemas/BucketName'
                OutputBucket:
                  $ref: '#/components/schemas/BucketName'
                Topics:
                  $ref: '#/components/schemas/SnsTopics'
      responses:
        '200': {}
        '403':
          description: |-
            General authentication failure. The request was not signed correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            One or more required parameter values were not provided in the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '404':
          description: |-
            The requested resource does not exist or is not available. For example, the pipeline to which you're trying to add a job doesn't exist or is still being created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /2012-09-25/pipelines/{Id}/notifications:
    post:
      operationId: UpdatePipelineNotifications
      description: |-
        With the UpdatePipelineNotifications operation, you can update Amazon Simple Notification Service (Amazon SNS) notifications for a pipeline.

        When you update notifications for a pipeline, Elastic Transcoder returns the values that you specified in the request.
      parameters:
      - name: Id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Notifications:
                  $ref: '#/components/schemas/Notifications'
      responses:
        '200': {}
        '403':
          description: |-
            General authentication failure. The request was not signed correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            One or more required parameter values were not provided in the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '409':
          description: |-
            The resource you are attempting to change is in use. For example, you are attempting to delete a pipeline that is currently in use.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
        '404':
          description: |-
            The requested resource does not exist or is not available. For example, the pipeline to which you're trying to add a job doesn't exist or is still being created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /2012-09-25/pipelines/{Id}/status:
    post:
      operationId: UpdatePipelineStatus
      description: |-
        The UpdatePipelineStatus operation pauses or reactivates a pipeline, so that the pipeline stops or restarts the processing of jobs.

        Changing the pipeline status is useful if you want to cancel one or more jobs. You can't cancel jobs after Elastic Transcoder has started processing them; if you pause the pipeline to which you submitted the jobs, you have more time to get the job IDs for the jobs that you want to cancel, and to send a CancelJob request.
      parameters:
      - name: Id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Status:
                  $ref: '#/components/schemas/PipelineStatus'
      responses:
        '200': {}
        '403':
          description: |-
            General authentication failure. The request was not signed correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            One or more required parameter values were not provided in the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '409':
          description: |-
            The resource you are attempting to change is in use. For example, you are attempting to delete a pipeline that is currently in use.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
        '404':
          description: |-
            The requested resource does not exist or is not available. For example, the pipeline to which you're trying to add a job doesn't exist or is still being created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
components:
  schemas:
    AccessControl:
      type: string
      pattern: ^(^FullControl$)|(^Read$)|(^ReadAcp$)|(^WriteAcp$)$
    AccessControls:
      type: array
      items:
        $ref: '#/components/schemas/AccessControl'
    AccessDeniedException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ExceptionMessage'
      required:
      - message
      description: General authentication failure. The request was not signed correctly.
    Artwork:
      type: object
      properties:
        InputKey:
          allOf:
          - $ref: '#/components/schemas/WatermarkKey'
          description: 'The name of the file to be used as album art. To determine
            which Amazon S3 bucket contains the specified file, Elastic Transcoder
            checks the pipeline specified by `PipelineId`; the `InputBucket` object
            in that pipeline identifies the bucket.


            If the file name includes a prefix, for example, `cooking/pie.jpg`, include
            the prefix in the key. If the file isn''t in the specified bucket, Elastic
            Transcoder returns an error.'
        MaxWidth:
          allOf:
          - $ref: '#/components/schemas/DigitsOrAuto'
          description: The maximum width of the output album art in pixels. If you
            specify `auto`, Elastic Transcoder uses 600 as the default value. If you
            specify a numeric value, enter an even integer between 32 and 4096, inclusive.
        MaxHeight:
          allOf:
          - $ref: '#/components/schemas/DigitsOrAuto'
          description: The maximum height of the output album art in pixels. If you
            specify `auto`, Elastic Transcoder uses 600 as the default value. If you
            specify a numeric value, enter an even integer between 32 and 3072, inclusive.
        SizingPolicy:
          allOf:
          - $ref: '#/components/schemas/SizingPolicy'
          description: "Specify one of the following values to control scaling of\
            \ the output album art:\n\n  * `Fit:` Elastic Transcoder scales the output\
            \ art so it matches the value that you specified in either `MaxWidth`\
            \ or `MaxHeight` without exceeding the other value.\n\n  * `Fill:` Elastic\
            \ Transcoder scales the output art so it matches the value that you specified\
            \ in either `MaxWidth` or `MaxHeight` and matches or exceeds the other\
            \ value. Elastic Transcoder centers the output art and then crops it in\
            \ the dimension (if any) that exceeds the maximum value. \n\n  * `Stretch:`\
            \ Elastic Transcoder stretches the output art to match the values that\
            \ you specified for `MaxWidth` and `MaxHeight`. If the relative proportions\
            \ of the input art and the output art are different, the output art will\
            \ be distorted.\n\n  * `Keep:` Elastic Transcoder does not scale the output\
            \ art. If either dimension of the input art exceeds the values that you\
            \ specified for `MaxWidth` and `MaxHeight`, Elastic Transcoder crops the\
            \ output art.\n\n  * `ShrinkToFit:` Elastic Transcoder scales the output\
            \ art down so that its dimensions match the values that you specified\
            \ for at least one of `MaxWidth` and `MaxHeight` without exceeding either\
            \ value. If you specify this option, Elastic Transcoder does not scale\
            \ the art up.\n\n  * `ShrinkToFill` Elastic Transcoder scales the output\
            \ art down so that its dimensions match the values that you specified\
            \ for at least one of `MaxWidth` and `MaxHeight` without dropping below\
            \ either value. If you specify this option, Elastic Transcoder does not\
            \ scale the art up."
        PaddingPolicy:
          allOf:
          - $ref: '#/components/schemas/PaddingPolicy'
          description: When you set `PaddingPolicy` to `Pad`, Elastic Transcoder may
            add white bars to the top and bottom and/or left and right sides of the
            output album art to make the total size of the output art match the values
            that you specified for `MaxWidth` and `MaxHeight`.
        AlbumArtFormat:
          allOf:
          - $ref: '#/components/schemas/JpgOrPng'
          description: The format of album art, if any. Valid formats are `.jpg` and
            `.png`.
        Encryption:
          allOf:
          - $ref: '#/components/schemas/Encryption'
          description: The encryption settings, if any, that you want Elastic Transcoder
            to apply to your artwork.
      description: 'The file to be used as album art. There can be multiple artworks
        associated with an audio file, to a maximum of 20.


        To remove artwork or leave the artwork empty, you can either set `Artwork`
        to null, or set the `Merge Policy` to "Replace" and use an empty `Artwork`
        array.


        To pass through existing artwork unchanged, set the `Merge Policy` to "Prepend",
        "Append", or "Fallback", and use an empty `Artwork` array.'
    Artworks:
      type: array
      items:
        $ref: '#/components/schemas/Artwork'
    Ascending:
      type: string
      pattern: ^(^true$)|(^false$)$
    AspectRatio:
      type: string
      pattern: ^(^auto$)|(^1:1$)|(^4:3$)|(^3:2$)|(^16:9$)$
    AudioBitDepth:
      type: string
      pattern: ^(^8$)|(^16$)|(^24$)|(^32$)$
    AudioBitOrder:
      type: string
      pattern: ^(^LittleEndian$)$
    AudioBitRate:
      type: string
      pattern: ^\d{1,3}$
    AudioChannels:
      type: string
      pattern: ^(^auto$)|(^0$)|(^1$)|(^2$)$
    AudioCodec:
      type: string
      pattern: ^(^AAC$)|(^vorbis$)|(^mp3$)|(^mp2$)|(^pcm$)|(^flac$)$
    AudioCodecOptions:
      type: object
      properties:
        Profile:
          allOf:
          - $ref: '#/components/schemas/AudioCodecProfile'
          description: "You can only choose an audio profile when you specify AAC\
            \ for the value of Audio:Codec.\n\nSpecify the AAC profile for the output\
            \ file. Elastic Transcoder supports the following profiles:\n\n  * `auto`:\
            \ If you specify `auto`, Elastic Transcoder selects the profile based\
            \ on the bit rate selected for the output file.\n\n  * `AAC-LC`: The most\
            \ common AAC profile. Use for bit rates larger than 64 kbps.\n\n  * `HE-AAC`:\
            \ Not supported on some older players and devices. Use for bit rates between\
            \ 40 and 80 kbps.\n\n  * `HE-AACv2`: Not supported on some players and\
            \ devices. Use for bit rates less than 48 kbps.\n\nAll outputs in a `Smooth`\
            \ playlist must have the same value for `Profile`.\n\nIf you created any\
            \ presets before AAC profiles were added, Elastic Transcoder automatically\
            \ updated your presets to use AAC-LC. You can change the value as required."
        BitDepth:
          allOf:
          - $ref: '#/components/schemas/AudioBitDepth'
          description: 'You can only choose an audio bit depth when you specify `flac`
            or `pcm` for the value of Audio:Codec.


            The bit depth of a sample is how many bits of information are included
            in the audio samples. The higher the bit depth, the better the audio,
            but the larger the file.


            Valid values are `16` and `24`.


            The most common bit depth is `24`.'
        BitOrder:
          allOf:
          - $ref: '#/components/schemas/AudioBitOrder'
          description: 'You can only choose an audio bit order when you specify `pcm`
            for the value of Audio:Codec.


            The order the bits of a PCM sample are stored in.


            The supported value is `LittleEndian`.'
        Signed:
          allOf:
          - $ref: '#/components/schemas/AudioSigned'
          description: 'You can only choose whether an audio sample is signed when
            you specify `pcm` for the value of Audio:Codec.


            Whether audio samples are represented with negative and positive numbers
            (signed) or only positive numbers (unsigned).


            The supported value is `Signed`.'
      description: Options associated with your audio codec.
    AudioCodecProfile:
      type: string
      pattern: ^(^auto$)|(^AAC-LC$)|(^HE-AAC$)|(^HE-AACv2$)$
    AudioPackingMode:
      type: string
      pattern: ^(^SingleTrack$)|(^OneChannelPerTrack$)|(^OneChannelPerTrackWithMosTo8Tracks$)$
    AudioParameters:
      type: object
      properties:
        Codec:
          allOf:
          - $ref: '#/components/schemas/AudioCodec'
          description: The audio codec for the output file. Valid values include `aac`,
            `flac`, `mp2`, `mp3`, `pcm`, and `vorbis`.
        SampleRate:
          allOf:
          - $ref: '#/components/schemas/AudioSampleRate'
          description: 'The sample rate of the audio stream in the output file, in
            Hertz. Valid values include:


            `auto`, `22050`, `32000`, `44100`, `48000`, `96000`


            If you specify `auto`, Elastic Transcoder automatically detects the sample
            rate.'
        BitRate:
          allOf:
          - $ref: '#/components/schemas/AudioBitRate'
          description: The bit rate of the audio stream in the output file, in kilobits/second.
            Enter an integer between 64 and 320, inclusive.
        Channels:
          allOf:
          - $ref: '#/components/schemas/AudioChannels'
          description: "The number of audio channels in the output file. The following\
            \ values are valid:\n\n`auto`, `0`, `1`, `2`\n\nOne channel carries the\
            \ information played by a single speaker. For example, a stereo track\
            \ with two channels sends one channel to the left speaker, and the other\
            \ channel to the right speaker. The output channels are organized into\
            \ tracks. If you want Elastic Transcoder to automatically detect the number\
            \ of audio channels in the input file and use that value for the output\
            \ file, select `auto`.\n\nThe output of a specific channel value and inputs\
            \ are as follows:\n\n  * `auto` **channel specified, with any input:**\
            \ Pass through up to eight input channels.\n\n  * `0` **channels specified,\
            \ with any input:** Audio omitted from the output.\n\n  * `1` **channel\
            \ specified, with at least one input channel:** Mono sound.\n\n  * `2`\
            \ **channels specified, with any input:** Two identical mono channels\
            \ or stereo. For more information about tracks, see `Audio:AudioPackingMode.`\n\
            \nFor more information about how Elastic Transcoder organizes channels\
            \ and tracks, see `Audio:AudioPackingMode`."
        AudioPackingMode:
          allOf:
          - $ref: '#/components/schemas/AudioPackingMode'
          description: "The method of organizing audio channels and tracks. Use `Audio:Channels`\
            \ to specify the number of channels in your output, and `Audio:AudioPackingMode`\
            \ to specify the number of tracks and their relation to the channels.\
            \ If you do not specify an `Audio:AudioPackingMode`, Elastic Transcoder\
            \ uses `SingleTrack`.\n\nThe following values are valid:\n\n`SingleTrack`,\
            \ `OneChannelPerTrack`, and `OneChannelPerTrackWithMosTo8Tracks`\n\nWhen\
            \ you specify `SingleTrack`, Elastic Transcoder creates a single track\
            \ for your output. The track can have up to eight channels. Use `SingleTrack`\
            \ for all non-`mxf` containers.\n\nThe outputs of `SingleTrack` for a\
            \ specific channel value and inputs are as follows:\n\n  * `0` **channels\
            \ with any input:** Audio omitted from the output\n\n  * `1, 2, or auto\
            \ ` **channels with no audio input:** Audio omitted from the output\n\n\
            \  * `1 ` **channel with any input with audio:** One track with one channel,\
            \ downmixed if necessary\n\n  * `2 ` **channels with one track with one\
            \ channel:** One track with two identical channels\n\n  * `2 or auto `\
            \ **channels with two tracks with one channel each:** One track with two\
            \ channels\n\n  * `2 or auto ` **channels with one track with two channels:**\
            \ One track with two channels\n\n  * `2 ` **channels with one track with\
            \ multiple channels:** One track with two channels\n\n  * `auto ` **channels\
            \ with one track with one channel:** One track with one channel\n\n  *\
            \ `auto ` **channels with one track with multiple channels:** One track\
            \ with multiple channels\n\nWhen you specify `OneChannelPerTrack`, Elastic\
            \ Transcoder creates a new track for every channel in your output. Your\
            \ output can have up to eight single-channel tracks.\n\nThe outputs of\
            \ `OneChannelPerTrack` for a specific channel value and inputs are as\
            \ follows:\n\n  * `0 ` **channels with any input:** Audio omitted from\
            \ the output\n\n  * `1, 2, or auto ` **channels with no audio input:**\
            \ Audio omitted from the output\n\n  * `1 ` **channel with any input with\
            \ audio:** One track with one channel, downmixed if necessary\n\n  * `2\
            \ ` **channels with one track with one channel:** Two tracks with one\
            \ identical channel each\n\n  * `2 or auto ` **channels with two tracks\
            \ with one channel each:** Two tracks with one channel each\n\n  * `2\
            \ or auto ` **channels with one track with two channels:** Two tracks\
            \ with one channel each\n\n  * `2 ` **channels with one track with multiple\
            \ channels:** Two tracks with one channel each\n\n  * `auto ` **channels\
            \ with one track with one channel:** One track with one channel\n\n  *\
            \ `auto ` **channels with one track with multiple channels:** Up to eight\
            \ tracks with one channel each\n\nWhen you specify `OneChannelPerTrackWithMosTo8Tracks`,\
            \ Elastic Transcoder creates eight single-channel tracks for your output.\
            \ All tracks that do not contain audio data from an input channel are\
            \ MOS, or Mit Out Sound, tracks.\n\nThe outputs of `OneChannelPerTrackWithMosTo8Tracks`\
            \ for a specific channel value and inputs are as follows:\n\n  * `0 `\
            \ **channels with any input:** Audio omitted from the output\n\n  * `1,\
            \ 2, or auto ` **channels with no audio input:** Audio omitted from the\
            \ output\n\n  * `1 ` **channel with any input with audio:** One track\
            \ with one channel, downmixed if necessary, plus six MOS tracks\n\n  *\
            \ `2 ` **channels with one track with one channel:** Two tracks with one\
            \ identical channel each, plus six MOS tracks\n\n  * `2 or auto ` **channels\
            \ with two tracks with one channel each:** Two tracks with one channel\
            \ each, plus six MOS tracks\n\n  * `2 or auto ` **channels with one track\
            \ with two channels:** Two tracks with one channel each, plus six MOS\
            \ tracks\n\n  * `2 ` **channels with one track with multiple channels:**\
            \ Two tracks with one channel each, plus six MOS tracks\n\n  * `auto `\
            \ **channels with one track with one channel:** One track with one channel,\
            \ plus seven MOS tracks\n\n  * `auto ` **channels with one track with\
            \ multiple channels:** Up to eight tracks with one channel each, plus\
            \ MOS tracks until there are eight tracks in all"
        CodecOptions:
          allOf:
          - $ref: '#/components/schemas/AudioCodecOptions'
          description: 'If you specified `AAC` for `Audio:Codec`, this is the `AAC`
            compression profile to use. Valid values include:


            `auto`, `AAC-LC`, `HE-AAC`, `HE-AACv2`


            If you specify `auto`, Elastic Transcoder chooses a profile based on the
            bit rate of the output file.'
      description: Parameters required for transcoding audio.
    AudioSampleRate:
      type: string
      pattern: ^(^auto$)|(^22050$)|(^32000$)|(^44100$)|(^48000$)|(^96000$)|(^192000$)$
    AudioSigned:
      type: string
      pattern: ^(^Unsigned$)|(^Signed$)$
    Base64EncodedString:
      type: string
      pattern: ^$|(^(?:[A-Za-z0-9\+/]{4})*(?:[A-Za-z0-9\+/]{2}==|[A-Za-z0-9\+/]{3}=)?$)$
    BucketName:
      type: string
      pattern: ^(\w|\.|-){1,255}$
    CancelJobRequest:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/Id'
          description: 'The identifier of the job that you want to cancel.


            To get a list of the jobs (including their `jobId`) that have a status
            of `Submitted`, use the ListJobsByStatus API action.'
      required:
      - Id
      description: The `CancelJobRequest` structure.
    CancelJobResponse:
      type: object
      properties: {}
      description: The response body contains a JSON object. If the job is successfully
        canceled, the value of `Success` is `true`.
    CaptionFormat:
      type: object
      properties:
        Format:
          allOf:
          - $ref: '#/components/schemas/CaptionFormatFormat'
          description: "The format you specify determines whether Elastic Transcoder\
            \ generates an embedded or sidecar caption for this output.\n\n  * **Valid\
            \ Embedded Caption Formats:**\n\n    * **for FLAC** : None\n\n    * **For\
            \ MP3** : None\n\n    * **For MP4** : mov-text\n\n    * **For MPEG-TS**\
            \ : None\n\n    * **For ogg** : None\n\n    * **For webm** : None\n\n\
            \  * **Valid Sidecar Caption Formats:** Elastic Transcoder supports dfxp\
            \ (first div element only), scc, srt, and webvtt. If you want ttml or\
            \ smpte-tt compatible captions, specify dfxp as your output format.\n\n\
            \    * **For FMP4** : dfxp\n\n    * **Non-FMP4 outputs** : All sidecar\
            \ types\n\n`fmp4` captions have an extension of `.ismt`"
        Pattern:
          allOf:
          - $ref: '#/components/schemas/CaptionFormatPattern'
          description: "The prefix for caption filenames, in the form _description_\
            \ -`{language}`, where:\n\n  * _description_ is a description of the video.\n\
            \n  * `{language}` is a literal value that Elastic Transcoder replaces\
            \ with the two- or three-letter code for the language of the caption in\
            \ the output file names.\n\nIf you don't include `{language}` in the file\
            \ name pattern, Elastic Transcoder automatically appends \"`{language}`\"\
            \ to the value that you specify for the description. In addition, Elastic\
            \ Transcoder automatically appends the count to the end of the segment\
            \ files.\n\nFor example, suppose you're transcoding into srt format. When\
            \ you enter \"Sydney-{language}-sunrise\", and the language of the captions\
            \ is English (en), the name of the first caption file is be Sydney-en-sunrise00000.srt."
        Encryption:
          allOf:
          - $ref: '#/components/schemas/Encryption'
          description: The encryption settings, if any, that you want Elastic Transcoder
            to apply to your caption formats.
      description: The file format of the output captions. If you leave this value
        blank, Elastic Transcoder returns an error.
    CaptionFormatFormat:
      type: string
      pattern: ^(^mov-text$)|(^srt$)|(^scc$)|(^webvtt$)|(^dfxp$)|(^cea-708$)$
    CaptionFormatPattern:
      type: string
      pattern: ^(^$)|(^.*\{language\}.*$)$
    CaptionFormats:
      type: array
      items:
        $ref: '#/components/schemas/CaptionFormat'
    CaptionMergePolicy:
      type: string
      pattern: ^(^MergeOverride$)|(^MergeRetain$)|(^Override$)$
    CaptionSource:
      type: object
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/LongKey'
          description: The name of the sidecar caption file that you want Elastic
            Transcoder to include in the output file.
        Language:
          allOf:
          - $ref: '#/components/schemas/Key'
          description: "A string that specifies the language of the caption. If you\
            \ specified multiple inputs with captions, the caption language must match\
            \ in order to be included in the output. Specify this as one of:\n\n \
            \ * 2-character ISO 639-1 code\n\n  * 3-character ISO 639-2 code\n\nFor\
            \ more information on ISO language codes and language names, see the List\
            \ of ISO 639-1 codes."
        TimeOffset:
          allOf:
          - $ref: '#/components/schemas/TimeOffset'
          description: 'For clip generation or captions that do not start at the same
            time as the associated video file, the `TimeOffset` tells Elastic Transcoder
            how much of the video to encode before including captions.


            Specify the TimeOffset in the form [+-]SS.sss or [+-]HH:mm:SS.ss.'
        Label:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The label of the caption shown in the player when choosing
            a language. We recommend that you put the caption language name here,
            in the language of the captions.
        Encryption:
          allOf:
          - $ref: '#/components/schemas/Encryption'
          description: The encryption settings, if any, that Elastic Transcoder needs
            to decyrpt your caption sources, or that you want Elastic Transcoder to
            apply to your caption sources.
      description: A source file for the input sidecar captions used during the transcoding
        process.
    CaptionSources:
      type: array
      items:
        $ref: '#/components/schemas/CaptionSource'
    Captions:
      type: object
      properties:
        MergePolicy:
          allOf:
          - $ref: '#/components/schemas/CaptionMergePolicy'
          description: "A policy that determines how Elastic Transcoder handles the\
            \ existence of multiple captions.\n\n  * **MergeOverride:** Elastic Transcoder\
            \ transcodes both embedded and sidecar captions into outputs. If captions\
            \ for a language are embedded in the input file and also appear in a sidecar\
            \ file, Elastic Transcoder uses the sidecar captions and ignores the embedded\
            \ captions for that language.\n\n  * **MergeRetain:** Elastic Transcoder\
            \ transcodes both embedded and sidecar captions into outputs. If captions\
            \ for a language are embedded in the input file and also appear in a sidecar\
            \ file, Elastic Transcoder uses the embedded captions and ignores the\
            \ sidecar captions for that language. If `CaptionSources` is empty, Elastic\
            \ Transcoder omits all sidecar captions from the output files.\n\n  *\
            \ **Override:** Elastic Transcoder transcodes only the sidecar captions\
            \ that you specify in `CaptionSources`.\n\n`MergePolicy` cannot be null."
        CaptionSources:
          allOf:
          - $ref: '#/components/schemas/CaptionSources'
          description: Source files for the input sidecar captions used during the
            transcoding process. To omit all sidecar captions, leave `CaptionSources`
            blank.
        CaptionFormats:
          allOf:
          - $ref: '#/components/schemas/CaptionFormats'
          description: The array of file formats for the output captions. If you leave
            this value blank, Elastic Transcoder returns an error.
      description: The captions to be created, if any.
    Clip:
      type: object
      properties:
        TimeSpan:
          allOf:
          - $ref: '#/components/schemas/TimeSpan'
          description: Settings that determine when a clip begins and how long it
            lasts.
      description: Settings for one clip in a composition. All jobs in a playlist
        must have the same clip settings.
    CodecOption:
      type: string
      minLength: 1
      maxLength: 255
    CodecOptions:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/CodecOption'
    Composition:
      type: array
      items:
        $ref: '#/components/schemas/Clip'
    CreateJobOutput:
      type: object
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/Key'
          description: The name to assign to the transcoded file. Elastic Transcoder
            saves the file in the Amazon S3 bucket specified by the `OutputBucket`
            object in the pipeline that is specified by the pipeline ID. If a file
            with the specified name already exists in the output bucket, the job fails.
        ThumbnailPattern:
          allOf:
          - $ref: '#/components/schemas/ThumbnailPattern'
          description: "Whether you want Elastic Transcoder to create thumbnails for\
            \ your videos and, if so, how you want Elastic Transcoder to name the\
            \ files.\n\nIf you don't want Elastic Transcoder to create thumbnails,\
            \ specify \"\".\n\nIf you do want Elastic Transcoder to create thumbnails,\
            \ specify the information that you want to include in the file name for\
            \ each thumbnail. You can specify the following values in any sequence:\n\
            \n  * **`{count}` (Required)**: If you want to create thumbnails, you\
            \ must include `{count}` in the `ThumbnailPattern` object. Wherever you\
            \ specify `{count}`, Elastic Transcoder adds a five-digit sequence number\
            \ (beginning with **00001**) to thumbnail file names. The number indicates\
            \ where a given thumbnail appears in the sequence of thumbnails for a\
            \ transcoded file. \n\nIf you specify a literal value and/or `{resolution}`\
            \ but you omit `{count}`, Elastic Transcoder returns a validation error\
            \ and does not create the job.\n\n  * **Literal values (Optional)** :\
            \ You can specify literal values anywhere in the `ThumbnailPattern` object.\
            \ For example, you can include them as a file name prefix or as a delimiter\
            \ between `{resolution}` and `{count}`. \n\n  * **`{resolution}` (Optional)**:\
            \ If you want Elastic Transcoder to include the resolution in the file\
            \ name, include `{resolution}` in the `ThumbnailPattern` object. \n\n\
            When creating thumbnails, Elastic Transcoder automatically saves the files\
            \ in the format (.jpg or .png) that appears in the preset that you specified\
            \ in the `PresetID` value of `CreateJobOutput`. Elastic Transcoder also\
            \ appends the applicable file name extension."
        ThumbnailEncryption:
          allOf:
          - $ref: '#/components/schemas/Encryption'
          description: The encryption settings, if any, that you want Elastic Transcoder
            to apply to your thumbnail.
        Rotate:
          allOf:
          - $ref: '#/components/schemas/Rotate'
          description: 'The number of degrees clockwise by which you want Elastic
            Transcoder to rotate the output relative to the input. Enter one of the
            following values: `auto`, `0`, `90`, `180`, `270`. The value `auto` generally
            works only if the file that you''re transcoding contains rotation metadata.'
        PresetId:
          allOf:
          - $ref: '#/components/schemas/Id'
          description: The `Id` of the preset to use for this job. The preset determines
            the audio, video, and thumbnail settings that Elastic Transcoder uses
            for transcoding.
        SegmentDuration:
          allOf:
          - $ref: '#/components/schemas/FloatString'
          description: '(Outputs in Fragmented MP4 or MPEG-TS format only.


            If you specify a preset in `PresetId` for which the value of `Container`
            is `fmp4` (Fragmented MP4) or `ts` (MPEG-TS), `SegmentDuration` is the
            target maximum duration of each segment in seconds. For `HLSv3` format
            playlists, each media segment is stored in a separate `.ts` file. For
            `HLSv4` and `Smooth` playlists, all media segments for an output are stored
            in a single file. Each segment is approximately the length of the `SegmentDuration`,
            though individual segments might be shorter or longer.


            The range of valid values is 1 to 60 seconds. If the duration of the video
            is not evenly divisible by `SegmentDuration`, the duration of the last
            segment is the remainder of total length/SegmentDuration.


            Elastic Transcoder creates an output-specific playlist for each output
            `HLS` output that you specify in OutputKeys. To add an output to the master
            playlist for this job, include it in the `OutputKeys` of the associated
            playlist.'
        Watermarks:
          allOf:
          - $ref: '#/components/schemas/JobWatermarks'
          description: Information about the watermarks that you want Elastic Transcoder
            to add to the video during transcoding. You can specify up to four watermarks
            for each output. Settings for each watermark must be defined in the preset
            for the current output.
        AlbumArt:
          allOf:
          - $ref: '#/components/schemas/JobAlbumArt'
          description: Information about the album art that you want Elastic Transcoder
            to add to the file during transcoding. You can specify up to twenty album
            artworks for each output. Settings for each artwork must be defined in
            the job for the current output.
        Composition:
          allOf:
          - $ref: '#/components/schemas/Composition'
          description: You can create an output file that contains an excerpt from
            the input file. This excerpt, called a clip, can come from the beginning,
            middle, or end of the file. The Composition object contains settings for
            the clips that make up an output file. For the current release, you can
            only specify settings for a single clip per output file. The Composition
            object cannot be null.
        Captions:
          allOf:
          - $ref: '#/components/schemas/Captions'
          description: "You can configure Elastic Transcoder to transcode captions,\
            \ or subtitles, from one format to another. All captions must be in UTF-8.\
            \ Elastic Transcoder supports two types of captions:\n\n  * **Embedded:**\
            \ Embedded captions are included in the same file as the audio and video.\
            \ Elastic Transcoder supports only one embedded caption per language,\
            \ to a maximum of 300 embedded captions per file.\n\nValid input values\
            \ include: `CEA-608 (EIA-608`, first non-empty channel only), `CEA-708\
            \ (EIA-708`, first non-empty channel only), and `mov-text`\n\nValid outputs\
            \ include: `mov-text`\n\nElastic Transcoder supports a maximum of one\
            \ embedded format per output.\n\n  * **Sidecar:** Sidecar captions are\
            \ kept in a separate metadata file from the audio and video data. Sidecar\
            \ captions require a player that is capable of understanding the relationship\
            \ between the video file and the sidecar file. Elastic Transcoder supports\
            \ only one sidecar caption per language, to a maximum of 20 sidecar captions\
            \ per file.\n\nValid input values include: `dfxp` (first div element only),\
            \ `ebu-tt`, `scc`, `smpt`, `srt`, `ttml` (first div element only), and\
            \ `webvtt`\n\nValid outputs include: `dfxp` (first div element only),\
            \ `scc`, `srt`, and `webvtt`.\n\nIf you want ttml or smpte-tt compatible\
            \ captions, specify dfxp as your output format.\n\nElastic Transcoder\
            \ does not support OCR (Optical Character Recognition), does not accept\
            \ pictures as a valid input for captions, and is not available for audio-only\
            \ transcoding. Elastic Transcoder does not preserve text formatting (for\
            \ example, italics) during the transcoding process.\n\nTo remove captions\
            \ or leave the captions empty, set `Captions` to null. To pass through\
            \ existing captions unchanged, set the `MergePolicy` to `MergeRetain`,\
            \ and pass in a null `CaptionSources` array.\n\nFor more information on\
            \ embedded files, see the Subtitles Wikipedia page.\n\nFor more information\
            \ on sidecar files, see the Extensible Metadata Platform and Sidecar file\
            \ Wikipedia pages."
        Encryption:
          allOf:
          - $ref: '#/components/schemas/Encryption'
          description: You can specify encryption settings for any output files that
            you want to use for a transcoding job. This includes the output file and
            any watermarks, thumbnails, album art, or captions that you want to use.
            You must specify encryption settings for each file individually.
      description: The `CreateJobOutput` structure.
    CreateJobOutputs:
      type: array
      items:
        $ref: '#/components/schemas/CreateJobOutput'
    CreateJobPlaylist:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/Filename'
          description: 'The name that you want Elastic Transcoder to assign to the
            master playlist, for example, nyc-vacation.m3u8. If the name includes
            a `/` character, the section of the name before the last `/` must be identical
            for all `Name` objects. If you create more than one master playlist, the
            values of all `Name` objects must be unique.


            Elastic Transcoder automatically appends the relevant file extension to
            the file name (`.m3u8` for `HLSv3` and `HLSv4` playlists, and `.ism` and
            `.ismc` for `Smooth` playlists). If you include a file extension in `Name`,
            the file name will have two extensions.'
        Format:
          allOf:
          - $ref: '#/components/schemas/PlaylistFormat'
          description: The format of the output playlist. Valid formats include `HLSv3`,
            `HLSv4`, and `Smooth`.
        OutputKeys:
          allOf:
          - $ref: '#/components/schemas/OutputKeys'
          description: "For each output in this job that you want to include in a\
            \ master playlist, the value of the `Outputs:Key` object.\n\n  * If your\
            \ output is not `HLS` or does not have a segment duration set, the name\
            \ of the output file is a concatenation of `OutputKeyPrefix` and `Outputs:Key`:\n\
            \nOutputKeyPrefix`Outputs:Key`\n\n  * If your output is `HLSv3` and has\
            \ a segment duration set, or is not included in a playlist, Elastic Transcoder\
            \ creates an output playlist file with a file extension of `.m3u8`, and\
            \ a series of `.ts` files that include a five-digit sequential counter\
            \ beginning with 00000:\n\nOutputKeyPrefix`Outputs:Key`.m3u8\n\nOutputKeyPrefix`Outputs:Key`00000.ts\n\
            \n  * If your output is `HLSv4`, has a segment duration set, and is included\
            \ in an `HLSv4` playlist, Elastic Transcoder creates an output playlist\
            \ file with a file extension of `_v4.m3u8`. If the output is video, Elastic\
            \ Transcoder also creates an output file with an extension of `_iframe.m3u8`:\n\
            \nOutputKeyPrefix`Outputs:Key`_v4.m3u8\n\nOutputKeyPrefix`Outputs:Key`_iframe.m3u8\n\
            \nOutputKeyPrefix`Outputs:Key`.ts\n\nElastic Transcoder automatically\
            \ appends the relevant file extension to the file name. If you include\
            \ a file extension in Output Key, the file name will have two extensions.\n\
            \nIf you include more than one output in a playlist, any segment duration\
            \ settings, clip settings, or caption settings must be the same for all\
            \ outputs in the playlist. For `Smooth` playlists, the `Audio:Profile`,\
            \ `Video:Profile`, and `Video:FrameRate` to `Video:KeyframesMaxDist` ratio\
            \ must be the same for all outputs."
        HlsContentProtection:
          allOf:
          - $ref: '#/components/schemas/HlsContentProtection'
          description: The HLS content protection settings, if any, that you want
            Elastic Transcoder to apply to the output files associated with this playlist.
        PlayReadyDrm:
          allOf:
          - $ref: '#/components/schemas/PlayReadyDrm'
          description: The DRM settings, if any, that you want Elastic Transcoder
            to apply to the output files associated with this playlist.
      description: Information about the master playlist.
    CreateJobPlaylists:
      type: array
      items:
        $ref: '#/components/schemas/CreateJobPlaylist'
    CreateJobRequest:
      type: object
      properties:
        PipelineId:
          allOf:
          - $ref: '#/components/schemas/Id'
          description: The `Id` of the pipeline that you want Elastic Transcoder to
            use for transcoding. The pipeline determines several settings, including
            the Amazon S3 bucket from which Elastic Transcoder gets the files to transcode
            and the bucket into which Elastic Transcoder puts the transcoded files.
        Input:
          allOf:
          - $ref: '#/components/schemas/JobInput'
          description: A section of the request body that provides information about
            the file that is being transcoded.
        Inputs:
          allOf:
          - $ref: '#/components/schemas/JobInputs'
          description: A section of the request body that provides information about
            the files that are being transcoded.
        Output:
          allOf:
          - $ref: '#/components/schemas/CreateJobOutput'
          description: A section of the request body that provides information about
            the transcoded (target) file. We strongly recommend that you use the `Outputs`
            syntax instead of the `Output` syntax.
        Outputs:
          allOf:
          - $ref: '#/components/schemas/CreateJobOutputs'
          description: A section of the request body that provides information about
            the transcoded (target) files. We recommend that you use the `Outputs`
            syntax instead of the `Output` syntax.
        OutputKeyPrefix:
          allOf:
          - $ref: '#/components/schemas/Key'
          description: The value, if any, that you want Elastic Transcoder to prepend
            to the names of all files that this job creates, including output files,
            thumbnails, and playlists.
        Playlists:
          allOf:
          - $ref: '#/components/schemas/CreateJobPlaylists'
          description: 'If you specify a preset in `PresetId` for which the value
            of `Container` is fmp4 (Fragmented MP4) or ts (MPEG-TS), Playlists contains
            information about the master playlists that you want Elastic Transcoder
            to create.


            The maximum number of master playlists in a job is 30.'
        UserMetadata:
          allOf:
          - $ref: '#/components/schemas/UserMetadata'
          description: User-defined metadata that you want to associate with an Elastic
            Transcoder job. You specify metadata in `key/value` pairs, and you can
            add up to 10 `key/value` pairs per job. Elastic Transcoder does not guarantee
            that `key/value` pairs are returned in the same order in which you specify
            them.
      required:
      - PipelineId
      description: The `CreateJobRequest` structure.
    CreateJobResponse:
      type: object
      properties:
        Job:
          allOf:
          - $ref: '#/components/schemas/Job'
          description: A section of the response body that provides information about
            the job that is created.
      description: The CreateJobResponse structure.
    CreatePipelineRequest:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: 'The name of the pipeline. We recommend that the name be unique
            within the AWS account, but uniqueness is not enforced.


            Constraints: Maximum 40 characters.'
        InputBucket:
          allOf:
          - $ref: '#/components/schemas/BucketName'
          description: The Amazon S3 bucket in which you saved the media files that
            you want to transcode.
        OutputBucket:
          allOf:
          - $ref: '#/components/schemas/BucketName'
          description: "The Amazon S3 bucket in which you want Elastic Transcoder\
            \ to save the transcoded files. (Use this, or use ContentConfig:Bucket\
            \ plus ThumbnailConfig:Bucket.)\n\nSpecify this value when all of the\
            \ following are true:\n\n  * You want to save transcoded files, thumbnails\
            \ (if any), and playlists (if any) together in one bucket.\n\n  * You\
            \ do not want to specify the users or groups who have access to the transcoded\
            \ files, thumbnails, and playlists.\n\n  * You do not want to specify\
            \ the permissions that Elastic Transcoder grants to the files. \n\nWhen\
            \ Elastic Transcoder saves files in `OutputBucket`, it grants full control\
            \ over the files only to the AWS account that owns the role that is specified\
            \ by `Role`.\n\n  * You want to associate the transcoded files and thumbnails\
            \ with the Amazon S3 Standard storage class.\n\nIf you want to save transcoded\
            \ files and playlists in one bucket and thumbnails in another bucket,\
            \ specify which users can access the transcoded files or the permissions\
            \ the users have, or change the Amazon S3 storage class, omit `OutputBucket`\
            \ and specify values for `ContentConfig` and `ThumbnailConfig` instead."
        Role:
          allOf:
          - $ref: '#/components/schemas/Role'
          description: The IAM Amazon Resource Name (ARN) for the role that you want
            Elastic Transcoder to use to create the pipeline.
        AwsKmsKeyArn:
          allOf:
          - $ref: '#/components/schemas/KeyArn'
          description: 'The AWS Key Management Service (AWS KMS) key that you want
            to use with this pipeline.


            If you use either `s3` or `s3-aws-kms` as your `Encryption:Mode`, you
            don''t need to provide a key with your job because a default key, known
            as an AWS-KMS key, is created for you automatically. You need to provide
            an AWS-KMS key only if you want to use a non-default AWS-KMS key, or if
            you are using an `Encryption:Mode` of `aes-cbc-pkcs7`, `aes-ctr`, or `aes-gcm`.'
        Notifications:
          allOf:
          - $ref: '#/components/schemas/Notifications'
          description: "The Amazon Simple Notification Service (Amazon SNS) topic\
            \ that you want to notify to report job status.\n\nTo receive notifications,\
            \ you must also subscribe to the new topic in the Amazon SNS console.\n\
            \n  * **Progressing** : The topic ARN for the Amazon Simple Notification\
            \ Service (Amazon SNS) topic that you want to notify when Elastic Transcoder\
            \ has started to process a job in this pipeline. This is the ARN that\
            \ Amazon SNS returned when you created the topic. For more information,\
            \ see Create a Topic in the Amazon Simple Notification Service Developer\
            \ Guide.\n\n  * **Complete** : The topic ARN for the Amazon SNS topic\
            \ that you want to notify when Elastic Transcoder has finished processing\
            \ a job in this pipeline. This is the ARN that Amazon SNS returned when\
            \ you created the topic.\n\n  * **Warning** : The topic ARN for the Amazon\
            \ SNS topic that you want to notify when Elastic Transcoder encounters\
            \ a warning condition while processing a job in this pipeline. This is\
            \ the ARN that Amazon SNS returned when you created the topic.\n\n  *\
            \ **Error** : The topic ARN for the Amazon SNS topic that you want to\
            \ notify when Elastic Transcoder encounters an error condition while processing\
            \ a job in this pipeline. This is the ARN that Amazon SNS returned when\
            \ you created the topic."
        ContentConfig:
          allOf:
          - $ref: '#/components/schemas/PipelineOutputConfig'
          description: "The optional `ContentConfig` object specifies information\
            \ about the Amazon S3 bucket in which you want Elastic Transcoder to save\
            \ transcoded files and playlists: which bucket to use, which users you\
            \ want to have access to the files, the type of access you want users\
            \ to have, and the storage class that you want to assign to the files.\n\
            \nIf you specify values for `ContentConfig`, you must also specify values\
            \ for `ThumbnailConfig`.\n\nIf you specify values for `ContentConfig`\
            \ and `ThumbnailConfig`, omit the `OutputBucket` object.\n\n  * **Bucket**\
            \ : The Amazon S3 bucket in which you want Elastic Transcoder to save\
            \ transcoded files and playlists.\n\n  * **Permissions** (Optional): The\
            \ Permissions object specifies which users you want to have access to\
            \ transcoded files and the type of access you want them to have. You can\
            \ grant permissions to a maximum of 30 users and/or predefined Amazon\
            \ S3 groups.\n\n  * **Grantee Type** : Specify the type of value that\
            \ appears in the `Grantee` object: \n\n    * **Canonical** : The value\
            \ in the `Grantee` object is either the canonical user ID for an AWS account\
            \ or an origin access identity for an Amazon CloudFront distribution.\
            \ For more information about canonical user IDs, see Access Control List\
            \ (ACL) Overview in the Amazon Simple Storage Service Developer Guide.\
            \ For more information about using CloudFront origin access identities\
            \ to require that users use CloudFront URLs instead of Amazon S3 URLs,\
            \ see Using an Origin Access Identity to Restrict Access to Your Amazon\
            \ S3 Content.\n\nA canonical user ID is not the same as an AWS account\
            \ number.\n\n    * **Email** : The value in the `Grantee` object is the\
            \ registered email address of an AWS account.\n\n    * **Group** : The\
            \ value in the `Grantee` object is one of the following predefined Amazon\
            \ S3 groups: `AllUsers`, `AuthenticatedUsers`, or `LogDelivery`.\n\n \
            \ * **Grantee** : The AWS user or group that you want to have access to\
            \ transcoded files and playlists. To identify the user or group, you can\
            \ specify the canonical user ID for an AWS account, an origin access identity\
            \ for a CloudFront distribution, the registered email address of an AWS\
            \ account, or a predefined Amazon S3 group \n\n  * **Access** : The permission\
            \ that you want to give to the AWS user that you specified in `Grantee`.\
            \ Permissions are granted on the files that Elastic Transcoder adds to\
            \ the bucket, including playlists and video files. Valid values include:\
            \ \n\n    * `READ`: The grantee can read the objects and metadata for\
            \ objects that Elastic Transcoder adds to the Amazon S3 bucket.\n\n  \
            \  * `READ_ACP`: The grantee can read the object ACL for objects that\
            \ Elastic Transcoder adds to the Amazon S3 bucket.\n\n    * `WRITE_ACP`:\
            \ The grantee can write the ACL for the objects that Elastic Transcoder\
            \ adds to the Amazon S3 bucket.\n\n    * `FULL_CONTROL`: The grantee has\
            \ `READ`, `READ_ACP`, and `WRITE_ACP` permissions for the objects that\
            \ Elastic Transcoder adds to the Amazon S3 bucket.\n\n  * **StorageClass**\
            \ : The Amazon S3 storage class, `Standard` or `ReducedRedundancy`, that\
            \ you want Elastic Transcoder to assign to the video files and playlists\
            \ that it stores in your Amazon S3 bucket."
        ThumbnailConfig:
          allOf:
          - $ref: '#/components/schemas/PipelineOutputConfig'
          description: "The `ThumbnailConfig` object specifies several values, including\
            \ the Amazon S3 bucket in which you want Elastic Transcoder to save thumbnail\
            \ files, which users you want to have access to the files, the type of\
            \ access you want users to have, and the storage class that you want to\
            \ assign to the files.\n\nIf you specify values for `ContentConfig`, you\
            \ must also specify values for `ThumbnailConfig` even if you don't want\
            \ to create thumbnails.\n\nIf you specify values for `ContentConfig` and\
            \ `ThumbnailConfig`, omit the `OutputBucket` object.\n\n  * **Bucket**\
            \ : The Amazon S3 bucket in which you want Elastic Transcoder to save\
            \ thumbnail files.\n\n  * **Permissions** (Optional): The `Permissions`\
            \ object specifies which users and/or predefined Amazon S3 groups you\
            \ want to have access to thumbnail files, and the type of access you want\
            \ them to have. You can grant permissions to a maximum of 30 users and/or\
            \ predefined Amazon S3 groups.\n\n  * **GranteeType** : Specify the type\
            \ of value that appears in the Grantee object: \n\n    * **Canonical**\
            \ : The value in the `Grantee` object is either the canonical user ID\
            \ for an AWS account or an origin access identity for an Amazon CloudFront\
            \ distribution.\n\nA canonical user ID is not the same as an AWS account\
            \ number.\n\n    * **Email** : The value in the `Grantee` object is the\
            \ registered email address of an AWS account. \n\n    * **Group** : The\
            \ value in the `Grantee` object is one of the following predefined Amazon\
            \ S3 groups: `AllUsers`, `AuthenticatedUsers`, or `LogDelivery`.\n\n \
            \ * **Grantee** : The AWS user or group that you want to have access to\
            \ thumbnail files. To identify the user or group, you can specify the\
            \ canonical user ID for an AWS account, an origin access identity for\
            \ a CloudFront distribution, the registered email address of an AWS account,\
            \ or a predefined Amazon S3 group. \n\n  * **Access** : The permission\
            \ that you want to give to the AWS user that you specified in `Grantee`.\
            \ Permissions are granted on the thumbnail files that Elastic Transcoder\
            \ adds to the bucket. Valid values include: \n\n    * `READ`: The grantee\
            \ can read the thumbnails and metadata for objects that Elastic Transcoder\
            \ adds to the Amazon S3 bucket.\n\n    * `READ_ACP`: The grantee can read\
            \ the object ACL for thumbnails that Elastic Transcoder adds to the Amazon\
            \ S3 bucket.\n\n    * `WRITE_ACP`: The grantee can write the ACL for the\
            \ thumbnails that Elastic Transcoder adds to the Amazon S3 bucket.\n\n\
            \    * `FULL_CONTROL`: The grantee has `READ`, `READ_ACP`, and `WRITE_ACP`\
            \ permissions for the thumbnails that Elastic Transcoder adds to the Amazon\
            \ S3 bucket.\n\n  * **StorageClass** : The Amazon S3 storage class, `Standard`\
            \ or `ReducedRedundancy`, that you want Elastic Transcoder to assign to\
            \ the thumbnails that it stores in your Amazon S3 bucket."
      required:
      - Name
      - InputBucket
      - Role
      description: The `CreatePipelineRequest` structure.
    CreatePipelineResponse:
      type: object
      properties:
        Pipeline:
          allOf:
          - $ref: '#/components/schemas/Pipeline'
          description: A section of the response body that provides information about
            the pipeline that is created.
        Warnings:
          allOf:
          - $ref: '#/components/schemas/Warnings'
          description: 'Elastic Transcoder returns a warning if the resources used
            by your pipeline are not in the same region as the pipeline.


            Using resources in the same region, such as your Amazon S3 buckets, Amazon
            SNS notification topics, and AWS KMS key, reduces processing time and
            prevents cross-regional charges.'
      description: When you create a pipeline, Elastic Transcoder returns the values
        that you specified in the request.
    CreatePresetRequest:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the preset. We recommend that the name be unique
            within the AWS account, but uniqueness is not enforced.
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: A description of the preset.
        Container:
          allOf:
          - $ref: '#/components/schemas/PresetContainer'
          description: The container type for the output file. Valid values include
            `flac`, `flv`, `fmp4`, `gif`, `mp3`, `mp4`, `mpg`, `mxf`, `oga`, `ogg`,
            `ts`, and `webm`.
        Video:
          allOf:
          - $ref: '#/components/schemas/VideoParameters'
          description: A section of the request body that specifies the video parameters.
        Audio:
          allOf:
          - $ref: '#/components/schemas/AudioParameters'
          description: A section of the request body that specifies the audio parameters.
        Thumbnails:
          allOf:
          - $ref: '#/components/schemas/Thumbnails'
          description: A section of the request body that specifies the thumbnail
            parameters, if any.
      required:
      - Name
      - Container
      description: The `CreatePresetRequest` structure.
    CreatePresetResponse:
      type: object
      properties:
        Preset:
          allOf:
          - $ref: '#/components/schemas/Preset'
          description: A section of the response body that provides information about
            the preset that is created.
        Warning:
          allOf:
          - $ref: '#/components/schemas/String'
          description: If the preset settings don't comply with the standards for
            the video codec but Elastic Transcoder created the preset, this message
            explains the reason the preset settings don't meet the standard. Elastic
            Transcoder created the preset because the settings might produce acceptable
            output.
      description: The `CreatePresetResponse` structure.
    DeletePipelineRequest:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/Id'
          description: The identifier of the pipeline that you want to delete.
      required:
      - Id
      description: The `DeletePipelineRequest` structure.
    DeletePipelineResponse:
      type: object
      properties: {}
      description: The `DeletePipelineResponse` structure.
    DeletePresetRequest:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/Id'
          description: The identifier of the preset for which you want to get detailed
            information.
      required:
      - Id
      description: The `DeletePresetRequest` structure.
    DeletePresetResponse:
      type: object
      properties: {}
      description: The `DeletePresetResponse` structure.
    Description:
      type: string
      minLength: 0
      maxLength: 255
    DetectedProperties:
      type: object
      properties:
        Width:
          allOf:
          - $ref: '#/components/schemas/NullableInteger'
          description: The detected width of the input file, in pixels.
        Height:
          allOf:
          - $ref: '#/components/schemas/NullableInteger'
          description: The detected height of the input file, in pixels.
        FrameRate:
          allOf:
          - $ref: '#/components/schemas/FloatString'
          description: The detected frame rate of the input file, in frames per second.
        FileSize:
          allOf:
          - $ref: '#/components/schemas/NullableLong'
          description: The detected file size of the input file, in bytes.
        DurationMillis:
          allOf:
          - $ref: '#/components/schemas/NullableLong'
          description: The detected duration of the input file, in milliseconds.
      description: The detected properties of the input file. Elastic Transcoder identifies
        these values from the input file.
    Digits:
      type: string
      pattern: ^\d{1,5}$
    DigitsOrAuto:
      type: string
      pattern: ^(^auto$)|(^\d{2,4}$)$
    Encryption:
      type: object
      properties:
        Mode:
          allOf:
          - $ref: '#/components/schemas/EncryptionMode'
          description: "The specific server-side encryption mode that you want Elastic\
            \ Transcoder to use when decrypting your input files or encrypting your\
            \ output files. Elastic Transcoder supports the following options:\n\n\
            \  * **s3:** Amazon S3 creates and manages the keys used for encrypting\
            \ your files.\n\n  * **s3-aws-kms:** Amazon S3 calls the Amazon Key Management\
            \ Service, which creates and manages the keys that are used for encrypting\
            \ your files. If you specify `s3-aws-kms` and you don't want to use the\
            \ default key, you must add the AWS-KMS key that you want to use to your\
            \ pipeline.\n\n  * **aes-cbc-pkcs7:** A padded cipher-block mode of operation\
            \ originally used for HLS files.\n\n  * **aes-ctr:** AES Counter Mode.\n\
            \n  * **aes-gcm:** AES Galois Counter Mode, a mode of operation that is\
            \ an authenticated encryption format, meaning that a file, key, or initialization\
            \ vector that has been tampered with fails the decryption process.\n\n\
            For all three AES options, you must provide the following settings, which\
            \ must be base64-encoded:\n\n  * **Key**\n\n  * **Key MD5**\n\n  * **Initialization\
            \ Vector**\n\nFor the AES modes, your private encryption keys and your\
            \ unencrypted data are never stored by AWS; therefore, it is important\
            \ that you safely manage your encryption keys. If you lose them, you won't\
            \ be able to unencrypt your data."
        Key:
          allOf:
          - $ref: '#/components/schemas/Base64EncodedString'
          description: 'The data encryption key that you want Elastic Transcoder to
            use to encrypt your output file, or that was used to encrypt your input
            file. The key must be base64-encoded and it must be one of the following
            bit lengths before being base64-encoded:


            `128`, `192`, or `256`.


            The key must also be encrypted by using the Amazon Key Management Service.'
        KeyMd5:
          allOf:
          - $ref: '#/components/schemas/Base64EncodedString'
          description: The MD5 digest of the key that you used to encrypt your input
            file, or that you want Elastic Transcoder to use to encrypt your output
            file. Elastic Transcoder uses the key digest as a checksum to make sure
            your key was not corrupted in transit. The key MD5 must be base64-encoded,
            and it must be exactly 16 bytes long before being base64-encoded.
        InitializationVector:
          allOf:
          - $ref: '#/components/schemas/ZeroTo255String'
          description: The series of random bits created by a random bit generator,
            unique for every encryption operation, that you used to encrypt your input
            files or that you want Elastic Transcoder to use to encrypt your output
            files. The initialization vector must be base64-encoded, and it must be
            exactly 16 bytes long before being base64-encoded.
      description: The encryption settings, if any, that are used for decrypting your
        input files or encrypting your output files. If your input file is encrypted,
        you must specify the mode that Elastic Transcoder uses to decrypt your file,
        otherwise you must specify the mode you want Elastic Transcoder to use to
        encrypt your output files.
    EncryptionMode:
      type: string
      pattern: ^(^s3$)|(^s3-aws-kms$)|(^aes-cbc-pkcs7$)|(^aes-ctr$)|(^aes-gcm$)$
    ExceptionMessage:
      type: string
    ExceptionMessages:
      type: array
      items:
        $ref: '#/components/schemas/String'
    Filename:
      type: string
      minLength: 1
      maxLength: 255
    FixedGOP:
      type: string
      pattern: ^(^true$)|(^false$)$
    FloatString:
      type: string
      pattern: ^\d{1,5}(\.\d{0,5})?$
    FrameRate:
      type: string
      pattern: ^(^auto$)|(^10$)|(^15$)|(^23.97$)|(^24$)|(^25$)|(^29.97$)|(^30$)|(^50$)|(^60$)$
    Grantee:
      type: string
      minLength: 1
      maxLength: 255
    GranteeType:
      type: string
      pattern: ^(^Canonical$)|(^Email$)|(^Group$)$
    HlsContentProtection:
      type: object
      properties:
        Method:
          allOf:
          - $ref: '#/components/schemas/HlsContentProtectionMethod'
          description: 'The content protection method for your output. The only valid
            value is: `aes-128`.


            This value is written into the method attribute of the `EXT-X-KEY` metadata
            tag in the output playlist.'
        Key:
          allOf:
          - $ref: '#/components/schemas/Base64EncodedString'
          description: 'If you want Elastic Transcoder to generate a key for you,
            leave this field blank.


            If you choose to supply your own key, you must encrypt the key by using
            AWS KMS. The key must be base64-encoded, and it must be one of the following
            bit lengths before being base64-encoded:


            `128`, `192`, or `256`.'
        KeyMd5:
          allOf:
          - $ref: '#/components/schemas/Base64EncodedString'
          description: 'If Elastic Transcoder is generating your key for you, you
            must leave this field blank.


            The MD5 digest of the key that you want Elastic Transcoder to use to encrypt
            your output file, and that you want Elastic Transcoder to use as a checksum
            to make sure your key was not corrupted in transit. The key MD5 must be
            base64-encoded, and it must be exactly 16 bytes before being base64- encoded.'
        InitializationVector:
          allOf:
          - $ref: '#/components/schemas/ZeroTo255String'
          description: 'If Elastic Transcoder is generating your key for you, you
            must leave this field blank.


            The series of random bits created by a random bit generator, unique for
            every encryption operation, that you want Elastic Transcoder to use to
            encrypt your output files. The initialization vector must be base64-encoded,
            and it must be exactly 16 bytes before being base64-encoded.'
        LicenseAcquisitionUrl:
          allOf:
          - $ref: '#/components/schemas/ZeroTo512String'
          description: The location of the license key required to decrypt your HLS
            playlist. The URL must be an absolute path, and is referenced in the URI
            attribute of the EXT-X-KEY metadata tag in the playlist file.
        KeyStoragePolicy:
          allOf:
          - $ref: '#/components/schemas/KeyStoragePolicy'
          description: Specify whether you want Elastic Transcoder to write your HLS
            license key to an Amazon S3 bucket. If you choose `WithVariantPlaylists`,
            `LicenseAcquisitionUrl` must be left blank and Elastic Transcoder writes
            your data key into the same bucket as the associated playlist.
      description: The HLS content protection settings, if any, that you want Elastic
        Transcoder to apply to your output files.
    HlsContentProtectionMethod:
      type: string
      pattern: ^(^aes-128$)$
    HorizontalAlign:
      type: string
      pattern: ^(^Left$)|(^Right$)|(^Center$)$
    Id:
      type: string
      pattern: ^\d{13}-\w{6}$
    IncompatibleVersionException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ExceptionMessage'
      required:
      - message
    InputCaptions:
      type: object
      properties:
        MergePolicy:
          allOf:
          - $ref: '#/components/schemas/CaptionMergePolicy'
          description: "A policy that determines how Elastic Transcoder handles the\
            \ existence of multiple captions.\n\n  * **MergeOverride:** Elastic Transcoder\
            \ transcodes both embedded and sidecar captions into outputs. If captions\
            \ for a language are embedded in the input file and also appear in a sidecar\
            \ file, Elastic Transcoder uses the sidecar captions and ignores the embedded\
            \ captions for that language.\n\n  * **MergeRetain:** Elastic Transcoder\
            \ transcodes both embedded and sidecar captions into outputs. If captions\
            \ for a language are embedded in the input file and also appear in a sidecar\
            \ file, Elastic Transcoder uses the embedded captions and ignores the\
            \ sidecar captions for that language. If `CaptionSources` is empty, Elastic\
            \ Transcoder omits all sidecar captions from the output files.\n\n  *\
            \ **Override:** Elastic Transcoder transcodes only the sidecar captions\
            \ that you specify in `CaptionSources`.\n\n`MergePolicy` cannot be null."
        CaptionSources:
          allOf:
          - $ref: '#/components/schemas/CaptionSources'
          description: Source files for the input sidecar captions used during the
            transcoding process. To omit all sidecar captions, leave `CaptionSources`
            blank.
      description: The captions to be created, if any.
    Interlaced:
      type: string
      pattern: ^(^auto$)|(^true$)|(^false$)$
    InternalServiceException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ExceptionMessage'
      required:
      - message
      description: Elastic Transcoder encountered an unexpected exception while trying
        to fulfill the request.
    Job:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/Id'
          description: The identifier that Elastic Transcoder assigned to the job.
            You use this value to get settings for the job or to delete the job.
        Arn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) for the job.
        PipelineId:
          allOf:
          - $ref: '#/components/schemas/Id'
          description: The `Id` of the pipeline that you want Elastic Transcoder to
            use for transcoding. The pipeline determines several settings, including
            the Amazon S3 bucket from which Elastic Transcoder gets the files to transcode
            and the bucket into which Elastic Transcoder puts the transcoded files.
        Input:
          allOf:
          - $ref: '#/components/schemas/JobInput'
          description: A section of the request or response body that provides information
            about the file that is being transcoded.
        Inputs:
          allOf:
          - $ref: '#/components/schemas/JobInputs'
          description: Information about the files that you're transcoding. If you
            specified multiple files for this job, Elastic Transcoder stitches the
            files together to make one output.
        Output:
          allOf:
          - $ref: '#/components/schemas/JobOutput'
          description: 'If you specified one output for a job, information about that
            output. If you specified multiple outputs for a job, the Output object
            lists information about the first output. This duplicates the information
            that is listed for the first output in the Outputs object.


            Outputs recommended instead.


            A section of the request or response body that provides information about
            the transcoded (target) file.'
        Outputs:
          allOf:
          - $ref: '#/components/schemas/JobOutputs'
          description: 'Information about the output files. We recommend that you
            use the `Outputs` syntax for all jobs, even when you want Elastic Transcoder
            to transcode a file into only one format. Do not use both the `Outputs`
            and `Output` syntaxes in the same request. You can create a maximum of
            30 outputs per job.


            If you specify more than one output for a job, Elastic Transcoder creates
            the files for each output in the order in which you specify them in the
            job.'
        OutputKeyPrefix:
          allOf:
          - $ref: '#/components/schemas/Key'
          description: The value, if any, that you want Elastic Transcoder to prepend
            to the names of all files that this job creates, including output files,
            thumbnails, and playlists. We recommend that you add a / or some other
            delimiter to the end of the `OutputKeyPrefix`.
        Playlists:
          allOf:
          - $ref: '#/components/schemas/Playlists'
          description: 'Outputs in Fragmented MP4 or MPEG-TS format only.


            If you specify a preset in `PresetId` for which the value of `Container`
            is fmp4 (Fragmented MP4) or ts (MPEG-TS), `Playlists` contains information
            about the master playlists that you want Elastic Transcoder to create.


            The maximum number of master playlists in a job is 30.'
        Status:
          allOf:
          - $ref: '#/components/schemas/JobStatus'
          description: 'The status of the job: `Submitted`, `Progressing`, `Complete`,
            `Canceled`, or `Error`.'
        UserMetadata:
          allOf:
          - $ref: '#/components/schemas/UserMetadata'
          description: "User-defined metadata that you want to associate with an Elastic\
            \ Transcoder job. You specify metadata in `key/value` pairs, and you can\
            \ add up to 10 `key/value` pairs per job. Elastic Transcoder does not\
            \ guarantee that `key/value` pairs are returned in the same order in which\
            \ you specify them.\n\nMetadata `keys` and `values` must use characters\
            \ from the following list:\n\n  * `0-9`\n\n  * `A-Z` and `a-z`\n\n  *\
            \ `Space`\n\n  * The following symbols: `_.:/=+-%@`"
        Timing:
          allOf:
          - $ref: '#/components/schemas/Timing'
          description: Details about the timing of a job.
      description: A section of the response body that provides information about
        the job that is created.
    JobAlbumArt:
      type: object
      properties:
        MergePolicy:
          allOf:
          - $ref: '#/components/schemas/MergePolicy'
          description: "A policy that determines how Elastic Transcoder handles the\
            \ existence of multiple album artwork files.\n\n  * `Replace:` The specified\
            \ album art replaces any existing album art.\n\n  * `Prepend:` The specified\
            \ album art is placed in front of any existing album art.\n\n  * `Append:`\
            \ The specified album art is placed after any existing album art.\n\n\
            \  * `Fallback:` If the original input file contains artwork, Elastic\
            \ Transcoder uses that artwork for the output. If the original input does\
            \ not contain artwork, Elastic Transcoder uses the specified album art\
            \ file."
        Artwork:
          allOf:
          - $ref: '#/components/schemas/Artworks'
          description: The file to be used as album art. There can be multiple artworks
            associated with an audio file, to a maximum of 20. Valid formats are `.jpg`
            and `.png`
      description: The .jpg or .png file associated with an audio file.
    JobContainer:
      type: string
      pattern: ^(^auto$)|(^3gp$)|(^asf$)|(^avi$)|(^divx$)|(^flv$)|(^mkv$)|(^mov$)|(^mp4$)|(^mpeg$)|(^mpeg-ps$)|(^mpeg-ts$)|(^mxf$)|(^ogg$)|(^ts$)|(^vob$)|(^wav$)|(^webm$)|(^mp3$)|(^m4a$)|(^aac$)$
    JobInput:
      type: object
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/LongKey'
          description: 'The name of the file to transcode. Elsewhere in the body of
            the JSON block is the the ID of the pipeline to use for processing the
            job. The `InputBucket` object in that pipeline tells Elastic Transcoder
            which Amazon S3 bucket to get the file from.


            If the file name includes a prefix, such as `cooking/lasagna.mpg`, include
            the prefix in the key. If the file isn''t in the specified bucket, Elastic
            Transcoder returns an error.'
        FrameRate:
          allOf:
          - $ref: '#/components/schemas/FrameRate'
          description: 'The frame rate of the input file. If you want Elastic Transcoder
            to automatically detect the frame rate of the input file, specify `auto`.
            If you want to specify the frame rate for the input file, enter one of
            the following values:


            `10`, `15`, `23.97`, `24`, `25`, `29.97`, `30`, `60`


            If you specify a value other than `auto`, Elastic Transcoder disables
            automatic detection of the frame rate.'
        Resolution:
          allOf:
          - $ref: '#/components/schemas/Resolution'
          description: This value must be `auto`, which causes Elastic Transcoder
            to automatically detect the resolution of the input file.
        AspectRatio:
          allOf:
          - $ref: '#/components/schemas/AspectRatio'
          description: 'The aspect ratio of the input file. If you want Elastic Transcoder
            to automatically detect the aspect ratio of the input file, specify `auto`.
            If you want to specify the aspect ratio for the output file, enter one
            of the following values:


            `1:1`, `4:3`, `3:2`, `16:9`


            If you specify a value other than `auto`, Elastic Transcoder disables
            automatic detection of the aspect ratio.'
        Interlaced:
          allOf:
          - $ref: '#/components/schemas/Interlaced'
          description: 'Whether the input file is interlaced. If you want Elastic
            Transcoder to automatically detect whether the input file is interlaced,
            specify `auto`. If you want to specify whether the input file is interlaced,
            enter one of the following values:


            `true`, `false`


            If you specify a value other than `auto`, Elastic Transcoder disables
            automatic detection of interlacing.'
        Container:
          allOf:
          - $ref: '#/components/schemas/JobContainer'
          description: 'The container type for the input file. If you want Elastic
            Transcoder to automatically detect the container type of the input file,
            specify `auto`. If you want to specify the container type for the input
            file, enter one of the following values:


            `3gp`, `aac`, `asf`, `avi`, `divx`, `flv`, `m4a`, `mkv`, `mov`, `mp3`,
            `mp4`, `mpeg`, `mpeg-ps`, `mpeg-ts`, `mxf`, `ogg`, `vob`, `wav`, `webm`'
        Encryption:
          allOf:
          - $ref: '#/components/schemas/Encryption'
          description: The encryption settings, if any, that are used for decrypting
            your input files. If your input file is encrypted, you must specify the
            mode that Elastic Transcoder uses to decrypt your file.
        TimeSpan:
          allOf:
          - $ref: '#/components/schemas/TimeSpan'
          description: Settings for clipping an input. Each input can have different
            clip settings.
        InputCaptions:
          allOf:
          - $ref: '#/components/schemas/InputCaptions'
          description: "You can configure Elastic Transcoder to transcode captions,\
            \ or subtitles, from one format to another. All captions must be in UTF-8.\
            \ Elastic Transcoder supports two types of captions:\n\n  * **Embedded:**\
            \ Embedded captions are included in the same file as the audio and video.\
            \ Elastic Transcoder supports only one embedded caption per language,\
            \ to a maximum of 300 embedded captions per file.\n\nValid input values\
            \ include: `CEA-608 (EIA-608`, first non-empty channel only), `CEA-708\
            \ (EIA-708`, first non-empty channel only), and `mov-text`\n\nValid outputs\
            \ include: `mov-text`\n\nElastic Transcoder supports a maximum of one\
            \ embedded format per output.\n\n  * **Sidecar:** Sidecar captions are\
            \ kept in a separate metadata file from the audio and video data. Sidecar\
            \ captions require a player that is capable of understanding the relationship\
            \ between the video file and the sidecar file. Elastic Transcoder supports\
            \ only one sidecar caption per language, to a maximum of 20 sidecar captions\
            \ per file.\n\nValid input values include: `dfxp` (first div element only),\
            \ `ebu-tt`, `scc`, `smpt`, `srt`, `ttml` (first div element only), and\
            \ `webvtt`\n\nValid outputs include: `dfxp` (first div element only),\
            \ `scc`, `srt`, and `webvtt`.\n\nIf you want ttml or smpte-tt compatible\
            \ captions, specify dfxp as your output format.\n\nElastic Transcoder\
            \ does not support OCR (Optical Character Recognition), does not accept\
            \ pictures as a valid input for captions, and is not available for audio-only\
            \ transcoding. Elastic Transcoder does not preserve text formatting (for\
            \ example, italics) during the transcoding process.\n\nTo remove captions\
            \ or leave the captions empty, set `Captions` to null. To pass through\
            \ existing captions unchanged, set the `MergePolicy` to `MergeRetain`,\
            \ and pass in a null `CaptionSources` array.\n\nFor more information on\
            \ embedded files, see the Subtitles Wikipedia page.\n\nFor more information\
            \ on sidecar files, see the Extensible Metadata Platform and Sidecar file\
            \ Wikipedia pages."
        DetectedProperties:
          allOf:
          - $ref: '#/components/schemas/DetectedProperties'
          description: The detected properties of the input file.
      description: Information about the file that you're transcoding.
    JobInputs:
      type: array
      items:
        $ref: '#/components/schemas/JobInput'
    JobOutput:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A sequential counter, starting with 1, that identifies an output
            among the outputs from the current job. In the Output syntax, this value
            is always 1.
        Key:
          allOf:
          - $ref: '#/components/schemas/Key'
          description: The name to assign to the transcoded file. Elastic Transcoder
            saves the file in the Amazon S3 bucket specified by the `OutputBucket`
            object in the pipeline that is specified by the pipeline ID.
        ThumbnailPattern:
          allOf:
          - $ref: '#/components/schemas/ThumbnailPattern'
          description: "Whether you want Elastic Transcoder to create thumbnails for\
            \ your videos and, if so, how you want Elastic Transcoder to name the\
            \ files.\n\nIf you don't want Elastic Transcoder to create thumbnails,\
            \ specify \"\".\n\nIf you do want Elastic Transcoder to create thumbnails,\
            \ specify the information that you want to include in the file name for\
            \ each thumbnail. You can specify the following values in any sequence:\n\
            \n  * **`{count}` (Required)**: If you want to create thumbnails, you\
            \ must include `{count}` in the `ThumbnailPattern` object. Wherever you\
            \ specify `{count}`, Elastic Transcoder adds a five-digit sequence number\
            \ (beginning with **00001**) to thumbnail file names. The number indicates\
            \ where a given thumbnail appears in the sequence of thumbnails for a\
            \ transcoded file. \n\nIf you specify a literal value and/or `{resolution}`\
            \ but you omit `{count}`, Elastic Transcoder returns a validation error\
            \ and does not create the job.\n\n  * **Literal values (Optional)** :\
            \ You can specify literal values anywhere in the `ThumbnailPattern` object.\
            \ For example, you can include them as a file name prefix or as a delimiter\
            \ between `{resolution}` and `{count}`. \n\n  * **`{resolution}` (Optional)**:\
            \ If you want Elastic Transcoder to include the resolution in the file\
            \ name, include `{resolution}` in the `ThumbnailPattern` object. \n\n\
            When creating thumbnails, Elastic Transcoder automatically saves the files\
            \ in the format (.jpg or .png) that appears in the preset that you specified\
            \ in the `PresetID` value of `CreateJobOutput`. Elastic Transcoder also\
            \ appends the applicable file name extension."
        ThumbnailEncryption:
          allOf:
          - $ref: '#/components/schemas/Encryption'
          description: The encryption settings, if any, that you want Elastic Transcoder
            to apply to your thumbnail.
        Rotate:
          allOf:
          - $ref: '#/components/schemas/Rotate'
          description: 'The number of degrees clockwise by which you want Elastic
            Transcoder to rotate the output relative to the input. Enter one of the
            following values:


            `auto`, `0`, `90`, `180`, `270`


            The value `auto` generally works only if the file that you''re transcoding
            contains rotation metadata.'
        PresetId:
          allOf:
          - $ref: '#/components/schemas/Id'
          description: The value of the `Id` object for the preset that you want to
            use for this job. The preset determines the audio, video, and thumbnail
            settings that Elastic Transcoder uses for transcoding. To use a preset
            that you created, specify the preset ID that Elastic Transcoder returned
            in the response when you created the preset. You can also use the Elastic
            Transcoder system presets, which you can get with `ListPresets`.
        SegmentDuration:
          allOf:
          - $ref: '#/components/schemas/FloatString'
          description: '(Outputs in Fragmented MP4 or MPEG-TS format only.


            If you specify a preset in `PresetId` for which the value of `Container`
            is `fmp4` (Fragmented MP4) or `ts` (MPEG-TS), `SegmentDuration` is the
            target maximum duration of each segment in seconds. For `HLSv3` format
            playlists, each media segment is stored in a separate `.ts` file. For
            `HLSv4`, `MPEG-DASH`, and `Smooth` playlists, all media segments for an
            output are stored in a single file. Each segment is approximately the
            length of the `SegmentDuration`, though individual segments might be shorter
            or longer.


            The range of valid values is 1 to 60 seconds. If the duration of the video
            is not evenly divisible by `SegmentDuration`, the duration of the last
            segment is the remainder of total length/SegmentDuration.


            Elastic Transcoder creates an output-specific playlist for each output
            `HLS` output that you specify in OutputKeys. To add an output to the master
            playlist for this job, include it in the `OutputKeys` of the associated
            playlist.'
        Status:
          allOf:
          - $ref: '#/components/schemas/JobStatus'
          description: "The status of one output in a job. If you specified only one\
            \ output for the job, `Outputs:Status` is always the same as `Job:Status`.\
            \ If you specified more than one output:\n\n  * `Job:Status` and `Outputs:Status`\
            \ for all of the outputs is Submitted until Elastic Transcoder starts\
            \ to process the first output.\n\n  * When Elastic Transcoder starts to\
            \ process the first output, `Outputs:Status` for that output and `Job:Status`\
            \ both change to Progressing. For each output, the value of `Outputs:Status`\
            \ remains Submitted until Elastic Transcoder starts to process the output.\n\
            \n  * Job:Status remains Progressing until all of the outputs reach a\
            \ terminal status, either Complete or Error.\n\n  * When all of the outputs\
            \ reach a terminal status, `Job:Status` changes to Complete only if `Outputs:Status`\
            \ for all of the outputs is `Complete`. If `Outputs:Status` for one or\
            \ more outputs is `Error`, the terminal status for `Job:Status` is also\
            \ `Error`.\n\nThe value of `Status` is one of the following: `Submitted`,\
            \ `Progressing`, `Complete`, `Canceled`, or `Error`."
        StatusDetail:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: Information that further explains `Status`.
        Duration:
          allOf:
          - $ref: '#/components/schemas/NullableLong'
          description: Duration of the output file, in seconds.
        Width:
          allOf:
          - $ref: '#/components/schemas/NullableInteger'
          description: Specifies the width of the output file in pixels.
        Height:
          allOf:
          - $ref: '#/components/schemas/NullableInteger'
          description: Height of the output file, in pixels.
        FrameRate:
          allOf:
          - $ref: '#/components/schemas/FloatString'
          description: Frame rate of the output file, in frames per second.
        FileSize:
          allOf:
          - $ref: '#/components/schemas/NullableLong'
          description: File size of the output file, in bytes.
        DurationMillis:
          allOf:
          - $ref: '#/components/schemas/NullableLong'
          description: Duration of the output file, in milliseconds.
        Watermarks:
          allOf:
          - $ref: '#/components/schemas/JobWatermarks'
          description: 'Information about the watermarks that you want Elastic Transcoder
            to add to the video during transcoding. You can specify up to four watermarks
            for each output. Settings for each watermark must be defined in the preset
            that you specify in `Preset` for the current output.


            Watermarks are added to the output video in the sequence in which you
            list them in the job output—the first watermark in the list is added to
            the output video first, the second watermark in the list is added next,
            and so on. As a result, if the settings in a preset cause Elastic Transcoder
            to place all watermarks in the same location, the second watermark that
            you add covers the first one, the third one covers the second, and the
            fourth one covers the third.'
        AlbumArt:
          allOf:
          - $ref: '#/components/schemas/JobAlbumArt'
          description: The album art to be associated with the output file, if any.
        Composition:
          allOf:
          - $ref: '#/components/schemas/Composition'
          description: You can create an output file that contains an excerpt from
            the input file. This excerpt, called a clip, can come from the beginning,
            middle, or end of the file. The Composition object contains settings for
            the clips that make up an output file. For the current release, you can
            only specify settings for a single clip per output file. The Composition
            object cannot be null.
        Captions:
          allOf:
          - $ref: '#/components/schemas/Captions'
          description: "You can configure Elastic Transcoder to transcode captions,\
            \ or subtitles, from one format to another. All captions must be in UTF-8.\
            \ Elastic Transcoder supports two types of captions:\n\n  * **Embedded:**\
            \ Embedded captions are included in the same file as the audio and video.\
            \ Elastic Transcoder supports only one embedded caption per language,\
            \ to a maximum of 300 embedded captions per file.\n\nValid input values\
            \ include: `CEA-608 (EIA-608`, first non-empty channel only), `CEA-708\
            \ (EIA-708`, first non-empty channel only), and `mov-text`\n\nValid outputs\
            \ include: `mov-text`\n\nElastic Transcoder supports a maximum of one\
            \ embedded format per output.\n\n  * **Sidecar:** Sidecar captions are\
            \ kept in a separate metadata file from the audio and video data. Sidecar\
            \ captions require a player that is capable of understanding the relationship\
            \ between the video file and the sidecar file. Elastic Transcoder supports\
            \ only one sidecar caption per language, to a maximum of 20 sidecar captions\
            \ per file.\n\nValid input values include: `dfxp` (first div element only),\
            \ `ebu-tt`, `scc`, `smpt`, `srt`, `ttml` (first div element only), and\
            \ `webvtt`\n\nValid outputs include: `dfxp` (first div element only),\
            \ `scc`, `srt`, and `webvtt`.\n\nIf you want ttml or smpte-tt compatible\
            \ captions, specify dfxp as your output format.\n\nElastic Transcoder\
            \ does not support OCR (Optical Character Recognition), does not accept\
            \ pictures as a valid input for captions, and is not available for audio-only\
            \ transcoding. Elastic Transcoder does not preserve text formatting (for\
            \ example, italics) during the transcoding process.\n\nTo remove captions\
            \ or leave the captions empty, set `Captions` to null. To pass through\
            \ existing captions unchanged, set the `MergePolicy` to `MergeRetain`,\
            \ and pass in a null `CaptionSources` array.\n\nFor more information on\
            \ embedded files, see the Subtitles Wikipedia page.\n\nFor more information\
            \ on sidecar files, see the Extensible Metadata Platform and Sidecar file\
            \ Wikipedia pages."
        Encryption:
          allOf:
          - $ref: '#/components/schemas/Encryption'
          description: The encryption settings, if any, that you want Elastic Transcoder
            to apply to your output files. If you choose to use encryption, you must
            specify a mode to use. If you choose not to use encryption, Elastic Transcoder
            writes an unencrypted file to your Amazon S3 bucket.
        AppliedColorSpaceConversion:
          allOf:
          - $ref: '#/components/schemas/String'
          description: If Elastic Transcoder used a preset with a `ColorSpaceConversionMode`
            to transcode the output file, the `AppliedColorSpaceConversion` parameter
            shows the conversion used. If no `ColorSpaceConversionMode` was defined
            in the preset, this parameter is not be included in the job response.
      description: 'Outputs recommended instead.


        If you specified one output for a job, information about that output. If you
        specified multiple outputs for a job, the `Output` object lists information
        about the first output. This duplicates the information that is listed for
        the first output in the `Outputs` object.'
    JobOutputs:
      type: array
      items:
        $ref: '#/components/schemas/JobOutput'
    JobStatus:
      type: string
      pattern: ^(^Submitted$)|(^Progressing$)|(^Complete$)|(^Canceled$)|(^Error$)$
    JobWatermark:
      type: object
      properties:
        PresetWatermarkId:
          allOf:
          - $ref: '#/components/schemas/PresetWatermarkId'
          description: The ID of the watermark settings that Elastic Transcoder uses
            to add watermarks to the video during transcoding. The settings are in
            the preset specified by Preset for the current output. In that preset,
            the value of Watermarks Id tells Elastic Transcoder which settings to
            use.
        InputKey:
          allOf:
          - $ref: '#/components/schemas/WatermarkKey'
          description: 'The name of the .png or .jpg file that you want to use for
            the watermark. To determine which Amazon S3 bucket contains the specified
            file, Elastic Transcoder checks the pipeline specified by `Pipeline`;
            the `Input Bucket` object in that pipeline identifies the bucket.


            If the file name includes a prefix, for example, **logos/128x64.png**
            , include the prefix in the key. If the file isn''t in the specified bucket,
            Elastic Transcoder returns an error.'
        Encryption:
          allOf:
          - $ref: '#/components/schemas/Encryption'
          description: The encryption settings, if any, that you want Elastic Transcoder
            to apply to your watermarks.
      description: Watermarks can be in .png or .jpg format. If you want to display
        a watermark that is not rectangular, use the .png format, which supports transparency.
    JobWatermarks:
      type: array
      items:
        $ref: '#/components/schemas/JobWatermark'
    Jobs:
      type: array
      items:
        $ref: '#/components/schemas/Job'
    JpgOrPng:
      type: string
      pattern: ^(^jpg$)|(^png$)$
    Key:
      type: string
      minLength: 1
      maxLength: 255
    KeyArn:
      type: string
      minLength: 0
      maxLength: 255
    KeyIdGuid:
      type: string
      pattern: ^(^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12}$)|(^[0-9A-Fa-f]{32}$)$
    KeyStoragePolicy:
      type: string
      pattern: ^(^NoStore$)|(^WithVariantPlaylists$)$
    KeyframesMaxDist:
      type: string
      pattern: ^\d{1,6}$
    LimitExceededException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ExceptionMessage'
      required:
      - message
      description: Too many operations for a given AWS account. For example, the number
        of pipelines exceeds the maximum allowed.
    ListJobsByPipelineRequest:
      type: object
      properties:
        PipelineId:
          allOf:
          - $ref: '#/components/schemas/Id'
          description: The ID of the pipeline for which you want to get job information.
        Ascending:
          allOf:
          - $ref: '#/components/schemas/Ascending'
          description: To list jobs in chronological order by the date and time that
            they were submitted, enter `true`. To list jobs in reverse chronological
            order, enter `false`.
        PageToken:
          allOf:
          - $ref: '#/components/schemas/Id'
          description: When Elastic Transcoder returns more than one page of results,
            use `pageToken` in subsequent `GET` requests to get each successive page
            of results.
      required:
      - PipelineId
      description: The `ListJobsByPipelineRequest` structure.
    ListJobsByPipelineResponse:
      type: object
      properties:
        Jobs:
          allOf:
          - $ref: '#/components/schemas/Jobs'
          description: An array of `Job` objects that are in the specified pipeline.
        NextPageToken:
          allOf:
          - $ref: '#/components/schemas/Id'
          description: A value that you use to access the second and subsequent pages
            of results, if any. When the jobs in the specified pipeline fit on one
            page or when you've reached the last page of results, the value of `NextPageToken`
            is `null`.
      description: The `ListJobsByPipelineResponse` structure.
    ListJobsByStatusRequest:
      type: object
      properties:
        Status:
          allOf:
          - $ref: '#/components/schemas/JobStatus'
          description: 'To get information about all of the jobs associated with the
            current AWS account that have a given status, specify the following status:
            `Submitted`, `Progressing`, `Complete`, `Canceled`, or `Error`.'
        Ascending:
          allOf:
          - $ref: '#/components/schemas/Ascending'
          description: To list jobs in chronological order by the date and time that
            they were submitted, enter `true`. To list jobs in reverse chronological
            order, enter `false`.
        PageToken:
          allOf:
          - $ref: '#/components/schemas/Id'
          description: When Elastic Transcoder returns more than one page of results,
            use `pageToken` in subsequent `GET` requests to get each successive page
            of results.
      required:
      - Status
      description: The `ListJobsByStatusRequest` structure.
    ListJobsByStatusResponse:
      type: object
      properties:
        Jobs:
          allOf:
          - $ref: '#/components/schemas/Jobs'
          description: An array of `Job` objects that have the specified status.
        NextPageToken:
          allOf:
          - $ref: '#/components/schemas/Id'
          description: A value that you use to access the second and subsequent pages
            of results, if any. When the jobs in the specified pipeline fit on one
            page or when you've reached the last page of results, the value of `NextPageToken`
            is `null`.
      description: The `ListJobsByStatusResponse` structure.
    ListPipelinesRequest:
      type: object
      properties:
        Ascending:
          allOf:
          - $ref: '#/components/schemas/Ascending'
          description: To list pipelines in chronological order by the date and time
            that they were created, enter `true`. To list pipelines in reverse chronological
            order, enter `false`.
        PageToken:
          allOf:
          - $ref: '#/components/schemas/Id'
          description: When Elastic Transcoder returns more than one page of results,
            use `pageToken` in subsequent `GET` requests to get each successive page
            of results.
      description: The `ListPipelineRequest` structure.
    ListPipelinesResponse:
      type: object
      properties:
        Pipelines:
          allOf:
          - $ref: '#/components/schemas/Pipelines'
          description: An array of `Pipeline` objects.
        NextPageToken:
          allOf:
          - $ref: '#/components/schemas/Id'
          description: A value that you use to access the second and subsequent pages
            of results, if any. When the pipelines fit on one page or when you've
            reached the last page of results, the value of `NextPageToken` is `null`.
      description: A list of the pipelines associated with the current AWS account.
    ListPresetsRequest:
      type: object
      properties:
        Ascending:
          allOf:
          - $ref: '#/components/schemas/Ascending'
          description: To list presets in chronological order by the date and time
            that they were created, enter `true`. To list presets in reverse chronological
            order, enter `false`.
        PageToken:
          allOf:
          - $ref: '#/components/schemas/Id'
          description: When Elastic Transcoder returns more than one page of results,
            use `pageToken` in subsequent `GET` requests to get each successive page
            of results.
      description: The `ListPresetsRequest` structure.
    ListPresetsResponse:
      type: object
      properties:
        Presets:
          allOf:
          - $ref: '#/components/schemas/Presets'
          description: An array of `Preset` objects.
        NextPageToken:
          allOf:
          - $ref: '#/components/schemas/Id'
          description: A value that you use to access the second and subsequent pages
            of results, if any. When the presets fit on one page or when you've reached
            the last page of results, the value of `NextPageToken` is `null`.
      description: The `ListPresetsResponse` structure.
    LongKey:
      type: string
      minLength: 1
      maxLength: 1024
    MaxFrameRate:
      type: string
      pattern: ^(^10$)|(^15$)|(^23.97$)|(^24$)|(^25$)|(^29.97$)|(^30$)|(^50$)|(^60$)$
    MergePolicy:
      type: string
      pattern: ^(^Replace$)|(^Prepend$)|(^Append$)|(^Fallback$)$
    Name:
      type: string
      minLength: 1
      maxLength: 40
    NonEmptyBase64EncodedString:
      type: string
      pattern: ^(^(?:[A-Za-z0-9\+/]{4})*(?:[A-Za-z0-9\+/]{2}==|[A-Za-z0-9\+/]{3}=)?$)$
    Notifications:
      type: object
      properties:
        Progressing:
          allOf:
          - $ref: '#/components/schemas/SnsTopic'
          description: The Amazon Simple Notification Service (Amazon SNS) topic that
            you want to notify when Elastic Transcoder has started to process the
            job.
        Completed:
          allOf:
          - $ref: '#/components/schemas/SnsTopic'
          description: The Amazon SNS topic that you want to notify when Elastic Transcoder
            has finished processing the job.
        Warning:
          allOf:
          - $ref: '#/components/schemas/SnsTopic'
          description: The Amazon SNS topic that you want to notify when Elastic Transcoder
            encounters a warning condition.
        Error:
          allOf:
          - $ref: '#/components/schemas/SnsTopic'
          description: The Amazon SNS topic that you want to notify when Elastic Transcoder
            encounters an error condition.
      description: 'The Amazon Simple Notification Service (Amazon SNS) topic or topics
        to notify in order to report job status.


        To receive notifications, you must also subscribe to the new topic in the
        Amazon SNS console.'
    NullableInteger:
      type: integer
    NullableLong:
      type: integer
      format: int64
    OneTo512String:
      type: string
      minLength: 1
      maxLength: 512
    Opacity:
      type: string
      pattern: ^\d{1,3}(\.\d{0,20})?$
    OutputKeys:
      type: array
      items:
        $ref: '#/components/schemas/Key'
    PaddingPolicy:
      type: string
      pattern: ^(^Pad$)|(^NoPad$)$
    Permission:
      type: object
      properties:
        GranteeType:
          allOf:
          - $ref: '#/components/schemas/GranteeType'
          description: "The type of value that appears in the Grantee object:\n\n\
            \  * `Canonical`: Either the canonical user ID for an AWS account or an\
            \ origin access identity for an Amazon CloudFront distribution.\n\nA canonical\
            \ user ID is not the same as an AWS account number.\n\n  * `Email`: The\
            \ registered email address of an AWS account.\n\n  * `Group`: One of the\
            \ following predefined Amazon S3 groups: `AllUsers`, `AuthenticatedUsers`,\
            \ or `LogDelivery`."
        Grantee:
          allOf:
          - $ref: '#/components/schemas/Grantee'
          description: The AWS user or group that you want to have access to transcoded
            files and playlists. To identify the user or group, you can specify the
            canonical user ID for an AWS account, an origin access identity for a
            CloudFront distribution, the registered email address of an AWS account,
            or a predefined Amazon S3 group.
        Access:
          allOf:
          - $ref: '#/components/schemas/AccessControls'
          description: "The permission that you want to give to the AWS user that\
            \ is listed in Grantee. Valid values include:\n\n  * `READ`: The grantee\
            \ can read the thumbnails and metadata for thumbnails that Elastic Transcoder\
            \ adds to the Amazon S3 bucket.\n\n  * `READ_ACP`: The grantee can read\
            \ the object ACL for thumbnails that Elastic Transcoder adds to the Amazon\
            \ S3 bucket.\n\n  * `WRITE_ACP`: The grantee can write the ACL for the\
            \ thumbnails that Elastic Transcoder adds to the Amazon S3 bucket.\n\n\
            \  * `FULL_CONTROL`: The grantee has READ, READ_ACP, and WRITE_ACP permissions\
            \ for the thumbnails that Elastic Transcoder adds to the Amazon S3 bucket."
      description: The `Permission` structure.
    Permissions:
      type: array
      items:
        $ref: '#/components/schemas/Permission'
    Pipeline:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/Id'
          description: The identifier for the pipeline. You use this value to identify
            the pipeline in which you want to perform a variety of operations, such
            as creating a job or a preset.
        Arn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) for the pipeline.
        Name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: 'The name of the pipeline. We recommend that the name be unique
            within the AWS account, but uniqueness is not enforced.


            Constraints: Maximum 40 characters'
        Status:
          allOf:
          - $ref: '#/components/schemas/PipelineStatus'
          description: "The current status of the pipeline:\n\n  * `Active`: The pipeline\
            \ is processing jobs.\n\n  * `Paused`: The pipeline is not currently processing\
            \ jobs."
        InputBucket:
          allOf:
          - $ref: '#/components/schemas/BucketName'
          description: The Amazon S3 bucket from which Elastic Transcoder gets media
            files for transcoding and the graphics files, if any, that you want to
            use for watermarks.
        OutputBucket:
          allOf:
          - $ref: '#/components/schemas/BucketName'
          description: The Amazon S3 bucket in which you want Elastic Transcoder to
            save transcoded files, thumbnails, and playlists. Either you specify this
            value, or you specify both `ContentConfig` and `ThumbnailConfig`.
        Role:
          allOf:
          - $ref: '#/components/schemas/Role'
          description: The IAM Amazon Resource Name (ARN) for the role that Elastic
            Transcoder uses to transcode jobs for this pipeline.
        AwsKmsKeyArn:
          allOf:
          - $ref: '#/components/schemas/KeyArn'
          description: 'The AWS Key Management Service (AWS KMS) key that you want
            to use with this pipeline.


            If you use either `s3` or `s3-aws-kms` as your `Encryption:Mode`, you
            don''t need to provide a key with your job because a default key, known
            as an AWS-KMS key, is created for you automatically. You need to provide
            an AWS-KMS key only if you want to use a non-default AWS-KMS key, or if
            you are using an `Encryption:Mode` of `aes-cbc-pkcs7`, `aes-ctr`, or `aes-gcm`.'
        Notifications:
          allOf:
          - $ref: '#/components/schemas/Notifications'
          description: "The Amazon Simple Notification Service (Amazon SNS) topic\
            \ that you want to notify to report job status.\n\nTo receive notifications,\
            \ you must also subscribe to the new topic in the Amazon SNS console.\n\
            \n  * **Progressing** (optional): The Amazon Simple Notification Service\
            \ (Amazon SNS) topic that you want to notify when Elastic Transcoder has\
            \ started to process the job.\n\n  * **Complete** (optional): The Amazon\
            \ SNS topic that you want to notify when Elastic Transcoder has finished\
            \ processing the job.\n\n  * **Warning** (optional): The Amazon SNS topic\
            \ that you want to notify when Elastic Transcoder encounters a warning\
            \ condition.\n\n  * **Error** (optional): The Amazon SNS topic that you\
            \ want to notify when Elastic Transcoder encounters an error condition."
        ContentConfig:
          allOf:
          - $ref: '#/components/schemas/PipelineOutputConfig'
          description: "Information about the Amazon S3 bucket in which you want Elastic\
            \ Transcoder to save transcoded files and playlists. Either you specify\
            \ both `ContentConfig` and `ThumbnailConfig`, or you specify `OutputBucket`.\n\
            \n  * **Bucket** : The Amazon S3 bucket in which you want Elastic Transcoder\
            \ to save transcoded files and playlists.\n\n  * **Permissions** : A list\
            \ of the users and/or predefined Amazon S3 groups you want to have access\
            \ to transcoded files and playlists, and the type of access that you want\
            \ them to have. \n\n    * GranteeType: The type of value that appears\
            \ in the `Grantee` object: \n\n      * `Canonical`: Either the canonical\
            \ user ID for an AWS account or an origin access identity for an Amazon\
            \ CloudFront distribution.\n\n      * `Email`: The registered email address\
            \ of an AWS account.\n\n      * `Group`: One of the following predefined\
            \ Amazon S3 groups: `AllUsers`, `AuthenticatedUsers`, or `LogDelivery`.\n\
            \n    * `Grantee`: The AWS user or group that you want to have access\
            \ to transcoded files and playlists.\n\n    * `Access`: The permission\
            \ that you want to give to the AWS user that is listed in `Grantee`. Valid\
            \ values include:\n\n      * `READ`: The grantee can read the objects\
            \ and metadata for objects that Elastic Transcoder adds to the Amazon\
            \ S3 bucket.\n\n      * `READ_ACP`: The grantee can read the object ACL\
            \ for objects that Elastic Transcoder adds to the Amazon S3 bucket.\n\n\
            \      * `WRITE_ACP`: The grantee can write the ACL for the objects that\
            \ Elastic Transcoder adds to the Amazon S3 bucket.\n\n      * `FULL_CONTROL`:\
            \ The grantee has `READ`, `READ_ACP`, and `WRITE_ACP` permissions for\
            \ the objects that Elastic Transcoder adds to the Amazon S3 bucket.\n\n\
            \  * **StorageClass** : The Amazon S3 storage class, Standard or ReducedRedundancy,\
            \ that you want Elastic Transcoder to assign to the video files and playlists\
            \ that it stores in your Amazon S3 bucket."
        ThumbnailConfig:
          allOf:
          - $ref: '#/components/schemas/PipelineOutputConfig'
          description: "Information about the Amazon S3 bucket in which you want Elastic\
            \ Transcoder to save thumbnail files. Either you specify both `ContentConfig`\
            \ and `ThumbnailConfig`, or you specify `OutputBucket`.\n\n  * `Bucket`:\
            \ The Amazon S3 bucket in which you want Elastic Transcoder to save thumbnail\
            \ files. \n\n  * `Permissions`: A list of the users and/or predefined\
            \ Amazon S3 groups you want to have access to thumbnail files, and the\
            \ type of access that you want them to have. \n\n    * GranteeType: The\
            \ type of value that appears in the Grantee object:\n\n      * `Canonical`:\
            \ Either the canonical user ID for an AWS account or an origin access\
            \ identity for an Amazon CloudFront distribution.\n\nA canonical user\
            \ ID is not the same as an AWS account number.\n\n      * `Email`: The\
            \ registered email address of an AWS account.\n\n      * `Group`: One\
            \ of the following predefined Amazon S3 groups: `AllUsers`, `AuthenticatedUsers`,\
            \ or `LogDelivery`.\n\n    * `Grantee`: The AWS user or group that you\
            \ want to have access to thumbnail files.\n\n    * Access: The permission\
            \ that you want to give to the AWS user that is listed in Grantee. Valid\
            \ values include: \n\n      * `READ`: The grantee can read the thumbnails\
            \ and metadata for thumbnails that Elastic Transcoder adds to the Amazon\
            \ S3 bucket.\n\n      * `READ_ACP`: The grantee can read the object ACL\
            \ for thumbnails that Elastic Transcoder adds to the Amazon S3 bucket.\n\
            \n      * `WRITE_ACP`: The grantee can write the ACL for the thumbnails\
            \ that Elastic Transcoder adds to the Amazon S3 bucket.\n\n      * `FULL_CONTROL`:\
            \ The grantee has READ, READ_ACP, and WRITE_ACP permissions for the thumbnails\
            \ that Elastic Transcoder adds to the Amazon S3 bucket.\n\n  * `StorageClass`:\
            \ The Amazon S3 storage class, `Standard` or `ReducedRedundancy`, that\
            \ you want Elastic Transcoder to assign to the thumbnails that it stores\
            \ in your Amazon S3 bucket."
      description: The pipeline (queue) that is used to manage jobs.
    PipelineOutputConfig:
      type: object
      properties:
        Bucket:
          allOf:
          - $ref: '#/components/schemas/BucketName'
          description: "The Amazon S3 bucket in which you want Elastic Transcoder\
            \ to save the transcoded files. Specify this value when all of the following\
            \ are true:\n\n  * You want to save transcoded files, thumbnails (if any),\
            \ and playlists (if any) together in one bucket.\n\n  * You do not want\
            \ to specify the users or groups who have access to the transcoded files,\
            \ thumbnails, and playlists.\n\n  * You do not want to specify the permissions\
            \ that Elastic Transcoder grants to the files.\n\n  * You want to associate\
            \ the transcoded files and thumbnails with the Amazon S3 Standard storage\
            \ class.\n\nIf you want to save transcoded files and playlists in one\
            \ bucket and thumbnails in another bucket, specify which users can access\
            \ the transcoded files or the permissions the users have, or change the\
            \ Amazon S3 storage class, omit OutputBucket and specify values for `ContentConfig`\
            \ and `ThumbnailConfig` instead."
        StorageClass:
          allOf:
          - $ref: '#/components/schemas/StorageClass'
          description: The Amazon S3 storage class, `Standard` or `ReducedRedundancy`,
            that you want Elastic Transcoder to assign to the video files and playlists
            that it stores in your Amazon S3 bucket.
        Permissions:
          allOf:
          - $ref: '#/components/schemas/Permissions'
          description: 'Optional. The `Permissions` object specifies which users and/or
            predefined Amazon S3 groups you want to have access to transcoded files
            and playlists, and the type of access you want them to have. You can grant
            permissions to a maximum of 30 users and/or predefined Amazon S3 groups.


            If you include `Permissions`, Elastic Transcoder grants only the permissions
            that you specify. It does not grant full permissions to the owner of the
            role specified by `Role`. If you want that user to have full control,
            you must explicitly grant full control to the user.


            If you omit `Permissions`, Elastic Transcoder grants full control over
            the transcoded files and playlists to the owner of the role specified
            by `Role`, and grants no other permissions to any other user or group.'
      description: The `PipelineOutputConfig` structure.
    PipelineStatus:
      type: string
      pattern: ^(^Active$)|(^Paused$)$
    Pipelines:
      type: array
      items:
        $ref: '#/components/schemas/Pipeline'
    PixelsOrPercent:
      type: string
      pattern: ^(^\d{1,3}(\.\d{0,5})?%$)|(^\d{1,4}?px$)$
    PlayReadyDrm:
      type: object
      properties:
        Format:
          allOf:
          - $ref: '#/components/schemas/PlayReadyDrmFormatString'
          description: The type of DRM, if any, that you want Elastic Transcoder to
            apply to the output files associated with this playlist.
        Key:
          allOf:
          - $ref: '#/components/schemas/NonEmptyBase64EncodedString'
          description: 'The DRM key for your file, provided by your DRM license provider.
            The key must be base64-encoded, and it must be one of the following bit
            lengths before being base64-encoded:


            `128`, `192`, or `256`.


            The key must also be encrypted by using AWS KMS.'
        KeyMd5:
          allOf:
          - $ref: '#/components/schemas/NonEmptyBase64EncodedString'
          description: The MD5 digest of the key used for DRM on your file, and that
            you want Elastic Transcoder to use as a checksum to make sure your key
            was not corrupted in transit. The key MD5 must be base64-encoded, and
            it must be exactly 16 bytes before being base64-encoded.
        KeyId:
          allOf:
          - $ref: '#/components/schemas/KeyIdGuid'
          description: 'The ID for your DRM key, so that your DRM license provider
            knows which key to provide.


            The key ID must be provided in big endian, and Elastic Transcoder converts
            it to little endian before inserting it into the PlayReady DRM headers.
            If you are unsure whether your license server provides your key ID in
            big or little endian, check with your DRM provider.'
        InitializationVector:
          allOf:
          - $ref: '#/components/schemas/ZeroTo255String'
          description: The series of random bits created by a random bit generator,
            unique for every encryption operation, that you want Elastic Transcoder
            to use to encrypt your files. The initialization vector must be base64-encoded,
            and it must be exactly 8 bytes long before being base64-encoded. If no
            initialization vector is provided, Elastic Transcoder generates one for
            you.
        LicenseAcquisitionUrl:
          allOf:
          - $ref: '#/components/schemas/OneTo512String'
          description: 'The location of the license key required to play DRM content.
            The URL must be an absolute path, and is referenced by the PlayReady header.
            The PlayReady header is referenced in the protection header of the client
            manifest for Smooth Streaming outputs, and in the EXT-X-DXDRM and EXT-XDXDRMINFO
            metadata tags for HLS playlist outputs. An example URL looks like this:
            `https://www.example.com/exampleKey/`'
      description: 'The PlayReady DRM settings, if any, that you want Elastic Transcoder
        to apply to the output files associated with this playlist.


        PlayReady DRM encrypts your media files using `aes-ctr` encryption.


        If you use DRM for an `HLSv3` playlist, your outputs must have a master playlist.'
    PlayReadyDrmFormatString:
      type: string
      pattern: ^(^microsoft$)|(^discretix-3.0$)$
    Playlist:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/Filename'
          description: 'The name that you want Elastic Transcoder to assign to the
            master playlist, for example, nyc-vacation.m3u8. If the name includes
            a `/` character, the section of the name before the last `/` must be identical
            for all `Name` objects. If you create more than one master playlist, the
            values of all `Name` objects must be unique.


            Elastic Transcoder automatically appends the relevant file extension to
            the file name (`.m3u8` for `HLSv3` and `HLSv4` playlists, and `.ism` and
            `.ismc` for `Smooth` playlists). If you include a file extension in `Name`,
            the file name will have two extensions.'
        Format:
          allOf:
          - $ref: '#/components/schemas/PlaylistFormat'
          description: The format of the output playlist. Valid formats include `HLSv3`,
            `HLSv4`, and `Smooth`.
        OutputKeys:
          allOf:
          - $ref: '#/components/schemas/OutputKeys'
          description: "For each output in this job that you want to include in a\
            \ master playlist, the value of the Outputs:Key object.\n\n  * If your\
            \ output is not `HLS` or does not have a segment duration set, the name\
            \ of the output file is a concatenation of `OutputKeyPrefix` and `Outputs:Key`:\n\
            \nOutputKeyPrefix`Outputs:Key`\n\n  * If your output is `HLSv3` and has\
            \ a segment duration set, or is not included in a playlist, Elastic Transcoder\
            \ creates an output playlist file with a file extension of `.m3u8`, and\
            \ a series of `.ts` files that include a five-digit sequential counter\
            \ beginning with 00000:\n\nOutputKeyPrefix`Outputs:Key`.m3u8\n\nOutputKeyPrefix`Outputs:Key`00000.ts\n\
            \n  * If your output is `HLSv4`, has a segment duration set, and is included\
            \ in an `HLSv4` playlist, Elastic Transcoder creates an output playlist\
            \ file with a file extension of `_v4.m3u8`. If the output is video, Elastic\
            \ Transcoder also creates an output file with an extension of `_iframe.m3u8`:\n\
            \nOutputKeyPrefix`Outputs:Key`_v4.m3u8\n\nOutputKeyPrefix`Outputs:Key`_iframe.m3u8\n\
            \nOutputKeyPrefix`Outputs:Key`.ts\n\nElastic Transcoder automatically\
            \ appends the relevant file extension to the file name. If you include\
            \ a file extension in Output Key, the file name will have two extensions.\n\
            \nIf you include more than one output in a playlist, any segment duration\
            \ settings, clip settings, or caption settings must be the same for all\
            \ outputs in the playlist. For `Smooth` playlists, the `Audio:Profile`,\
            \ `Video:Profile`, and `Video:FrameRate` to `Video:KeyframesMaxDist` ratio\
            \ must be the same for all outputs."
        HlsContentProtection:
          allOf:
          - $ref: '#/components/schemas/HlsContentProtection'
          description: The HLS content protection settings, if any, that you want
            Elastic Transcoder to apply to the output files associated with this playlist.
        PlayReadyDrm:
          allOf:
          - $ref: '#/components/schemas/PlayReadyDrm'
          description: The DRM settings, if any, that you want Elastic Transcoder
            to apply to the output files associated with this playlist.
        Status:
          allOf:
          - $ref: '#/components/schemas/JobStatus'
          description: The status of the job with which the playlist is associated.
        StatusDetail:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: Information that further explains the status.
      description: Use Only for Fragmented MP4 or MPEG-TS Outputs. If you specify
        a preset for which the value of Container is `fmp4` (Fragmented MP4) or `ts`
        (MPEG-TS), Playlists contains information about the master playlists that
        you want Elastic Transcoder to create. We recommend that you create only one
        master playlist per output format. The maximum number of master playlists
        in a job is 30.
    PlaylistFormat:
      type: string
      pattern: ^(^HLSv3$)|(^HLSv4$)|(^Smooth$)|(^MPEG-DASH$)$
    Playlists:
      type: array
      items:
        $ref: '#/components/schemas/Playlist'
    Preset:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/Id'
          description: Identifier for the new preset. You use this value to get settings
            for the preset or to delete it.
        Arn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) for the preset.
        Name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the preset.
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: A description of the preset.
        Container:
          allOf:
          - $ref: '#/components/schemas/PresetContainer'
          description: The container type for the output file. Valid values include
            `flac`, `flv`, `fmp4`, `gif`, `mp3`, `mp4`, `mpg`, `mxf`, `oga`, `ogg`,
            `ts`, and `webm`.
        Audio:
          allOf:
          - $ref: '#/components/schemas/AudioParameters'
          description: A section of the response body that provides information about
            the audio preset values.
        Video:
          allOf:
          - $ref: '#/components/schemas/VideoParameters'
          description: A section of the response body that provides information about
            the video preset values.
        Thumbnails:
          allOf:
          - $ref: '#/components/schemas/Thumbnails'
          description: A section of the response body that provides information about
            the thumbnail preset values, if any.
        Type:
          allOf:
          - $ref: '#/components/schemas/PresetType'
          description: Whether the preset is a default preset provided by Elastic
            Transcoder (`System`) or a preset that you have defined (`Custom`).
      description: Presets are templates that contain most of the settings for transcoding
        media files from one format to another. Elastic Transcoder includes some default
        presets for common formats, for example, several iPod and iPhone versions.
        You can also create your own presets for formats that aren't included among
        the default presets. You specify which preset you want to use when you create
        a job.
    PresetContainer:
      type: string
      pattern: ^(^mp4$)|(^ts$)|(^webm$)|(^mp3$)|(^flac$)|(^oga$)|(^ogg$)|(^fmp4$)|(^mpg$)|(^flv$)|(^gif$)|(^mxf$)|(^wav$)|(^mp2$)$
    PresetType:
      type: string
      pattern: ^(^System$)|(^Custom$)$
    PresetWatermark:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/PresetWatermarkId'
          description: A unique identifier for the settings for one watermark. The
            value of `Id` can be up to 40 characters long.
        MaxWidth:
          allOf:
          - $ref: '#/components/schemas/PixelsOrPercent'
          description: "The maximum width of the watermark in one of the following\
            \ formats:\n\n  * number of pixels (px): The minimum value is 16 pixels,\
            \ and the maximum value is the value of `MaxWidth`.\n\n  * integer percentage\
            \ (%): The range of valid values is 0 to 100. Use the value of `Target`\
            \ to specify whether you want Elastic Transcoder to include the black\
            \ bars that are added by Elastic Transcoder, if any, in the calculation.\n\
            \nIf you specify the value in pixels, it must be less than or equal to\
            \ the value of `MaxWidth`."
        MaxHeight:
          allOf:
          - $ref: '#/components/schemas/PixelsOrPercent'
          description: "The maximum height of the watermark in one of the following\
            \ formats:\n\n  * number of pixels (px): The minimum value is 16 pixels,\
            \ and the maximum value is the value of `MaxHeight`.\n\n  * integer percentage\
            \ (%): The range of valid values is 0 to 100. Use the value of `Target`\
            \ to specify whether you want Elastic Transcoder to include the black\
            \ bars that are added by Elastic Transcoder, if any, in the calculation.\n\
            \nIf you specify the value in pixels, it must be less than or equal to\
            \ the value of `MaxHeight`."
        SizingPolicy:
          allOf:
          - $ref: '#/components/schemas/WatermarkSizingPolicy'
          description: "A value that controls scaling of the watermark:\n\n  * **Fit**\
            \ : Elastic Transcoder scales the watermark so it matches the value that\
            \ you specified in either `MaxWidth` or `MaxHeight` without exceeding\
            \ the other value.\n\n  * **Stretch** : Elastic Transcoder stretches the\
            \ watermark to match the values that you specified for `MaxWidth` and\
            \ `MaxHeight`. If the relative proportions of the watermark and the values\
            \ of `MaxWidth` and `MaxHeight` are different, the watermark will be distorted.\n\
            \n  * **ShrinkToFit** : Elastic Transcoder scales the watermark down so\
            \ that its dimensions match the values that you specified for at least\
            \ one of `MaxWidth` and `MaxHeight` without exceeding either value. If\
            \ you specify this option, Elastic Transcoder does not scale the watermark\
            \ up."
        HorizontalAlign:
          allOf:
          - $ref: '#/components/schemas/HorizontalAlign'
          description: "The horizontal position of the watermark unless you specify\
            \ a non-zero value for `HorizontalOffset`:\n\n  * **Left** : The left\
            \ edge of the watermark is aligned with the left border of the video.\n\
            \n  * **Right** : The right edge of the watermark is aligned with the\
            \ right border of the video.\n\n  * **Center** : The watermark is centered\
            \ between the left and right borders."
        HorizontalOffset:
          allOf:
          - $ref: '#/components/schemas/PixelsOrPercent'
          description: "The amount by which you want the horizontal position of the\
            \ watermark to be offset from the position specified by HorizontalAlign:\n\
            \n  * number of pixels (px): The minimum value is 0 pixels, and the maximum\
            \ value is the value of MaxWidth.\n\n  * integer percentage (%): The range\
            \ of valid values is 0 to 100.\n\nFor example, if you specify Left for\
            \ `HorizontalAlign` and 5px for `HorizontalOffset`, the left side of the\
            \ watermark appears 5 pixels from the left border of the output video.\n\
            \n`HorizontalOffset` is only valid when the value of `HorizontalAlign`\
            \ is `Left` or `Right`. If you specify an offset that causes the watermark\
            \ to extend beyond the left or right border and Elastic Transcoder has\
            \ not added black bars, the watermark is cropped. If Elastic Transcoder\
            \ has added black bars, the watermark extends into the black bars. If\
            \ the watermark extends beyond the black bars, it is cropped.\n\nUse the\
            \ value of `Target` to specify whether you want to include the black bars\
            \ that are added by Elastic Transcoder, if any, in the offset calculation."
        VerticalAlign:
          allOf:
          - $ref: '#/components/schemas/VerticalAlign'
          description: "The vertical position of the watermark unless you specify\
            \ a non-zero value for `VerticalOffset`:\n\n  * **Top** : The top edge\
            \ of the watermark is aligned with the top border of the video.\n\n  *\
            \ **Bottom** : The bottom edge of the watermark is aligned with the bottom\
            \ border of the video.\n\n  * **Center** : The watermark is centered between\
            \ the top and bottom borders."
        VerticalOffset:
          allOf:
          - $ref: '#/components/schemas/PixelsOrPercent'
          description: "`VerticalOffset`\n\nThe amount by which you want the vertical\
            \ position of the watermark to be offset from the position specified by\
            \ VerticalAlign:\n\n  * number of pixels (px): The minimum value is 0\
            \ pixels, and the maximum value is the value of `MaxHeight`.\n\n  * integer\
            \ percentage (%): The range of valid values is 0 to 100.\n\nFor example,\
            \ if you specify `Top` for `VerticalAlign` and `5px` for `VerticalOffset`,\
            \ the top of the watermark appears 5 pixels from the top border of the\
            \ output video.\n\n`VerticalOffset` is only valid when the value of VerticalAlign\
            \ is Top or Bottom.\n\nIf you specify an offset that causes the watermark\
            \ to extend beyond the top or bottom border and Elastic Transcoder has\
            \ not added black bars, the watermark is cropped. If Elastic Transcoder\
            \ has added black bars, the watermark extends into the black bars. If\
            \ the watermark extends beyond the black bars, it is cropped.\n\nUse the\
            \ value of `Target` to specify whether you want Elastic Transcoder to\
            \ include the black bars that are added by Elastic Transcoder, if any,\
            \ in the offset calculation."
        Opacity:
          allOf:
          - $ref: '#/components/schemas/Opacity'
          description: 'A percentage that indicates how much you want a watermark
            to obscure the video in the location where it appears. Valid values are
            0 (the watermark is invisible) to 100 (the watermark completely obscures
            the video in the specified location). The datatype of `Opacity` is float.


            Elastic Transcoder supports transparent .png graphics. If you use a transparent
            .png, the transparent portion of the video appears as if you had specified
            a value of 0 for `Opacity`. The .jpg file format doesn''t support transparency.'
        Target:
          allOf:
          - $ref: '#/components/schemas/Target'
          description: "A value that determines how Elastic Transcoder interprets\
            \ values that you specified for `HorizontalOffset`, `VerticalOffset`,\
            \ `MaxWidth`, and `MaxHeight`:\n\n  * **Content** : `HorizontalOffset`\
            \ and `VerticalOffset` values are calculated based on the borders of the\
            \ video excluding black bars added by Elastic Transcoder, if any. In addition,\
            \ `MaxWidth` and `MaxHeight`, if specified as a percentage, are calculated\
            \ based on the borders of the video excluding black bars added by Elastic\
            \ Transcoder, if any.\n\n  * **Frame** : `HorizontalOffset` and `VerticalOffset`\
            \ values are calculated based on the borders of the video including black\
            \ bars added by Elastic Transcoder, if any. In addition, `MaxWidth` and\
            \ `MaxHeight`, if specified as a percentage, are calculated based on the\
            \ borders of the video including black bars added by Elastic Transcoder,\
            \ if any."
      description: 'Settings for the size, location, and opacity of graphics that
        you want Elastic Transcoder to overlay over videos that are transcoded using
        this preset. You can specify settings for up to four watermarks. Watermarks
        appear in the specified size and location, and with the specified opacity
        for the duration of the transcoded video.


        Watermarks can be in .png or .jpg format. If you want to display a watermark
        that is not rectangular, use the .png format, which supports transparency.


        When you create a job that uses this preset, you specify the .png or .jpg
        graphics that you want Elastic Transcoder to include in the transcoded videos.
        You can specify fewer graphics in the job than you specify watermark settings
        in the preset, which allows you to use the same preset for up to four watermarks
        that have different dimensions.'
    PresetWatermarkId:
      type: string
      minLength: 1
      maxLength: 40
    PresetWatermarks:
      type: array
      items:
        $ref: '#/components/schemas/PresetWatermark'
    Presets:
      type: array
      items:
        $ref: '#/components/schemas/Preset'
    ReadJobRequest:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/Id'
          description: The identifier of the job for which you want to get detailed
            information.
      required:
      - Id
      description: The `ReadJobRequest` structure.
    ReadJobResponse:
      type: object
      properties:
        Job:
          allOf:
          - $ref: '#/components/schemas/Job'
          description: A section of the response body that provides information about
            the job.
      description: The `ReadJobResponse` structure.
    ReadPipelineRequest:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/Id'
          description: The identifier of the pipeline to read.
      required:
      - Id
      description: The `ReadPipelineRequest` structure.
    ReadPipelineResponse:
      type: object
      properties:
        Pipeline:
          allOf:
          - $ref: '#/components/schemas/Pipeline'
          description: A section of the response body that provides information about
            the pipeline.
        Warnings:
          allOf:
          - $ref: '#/components/schemas/Warnings'
          description: 'Elastic Transcoder returns a warning if the resources used
            by your pipeline are not in the same region as the pipeline.


            Using resources in the same region, such as your Amazon S3 buckets, Amazon
            SNS notification topics, and AWS KMS key, reduces processing time and
            prevents cross-regional charges.'
      description: The `ReadPipelineResponse` structure.
    ReadPresetRequest:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/Id'
          description: The identifier of the preset for which you want to get detailed
            information.
      required:
      - Id
      description: The `ReadPresetRequest` structure.
    ReadPresetResponse:
      type: object
      properties:
        Preset:
          allOf:
          - $ref: '#/components/schemas/Preset'
          description: A section of the response body that provides information about
            the preset.
      description: The `ReadPresetResponse` structure.
    Resolution:
      type: string
      pattern: ^(^auto$)|(^\d{1,5}x\d{1,5}$)$
    ResourceInUseException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ExceptionMessage'
      required:
      - message
      description: The resource you are attempting to change is in use. For example,
        you are attempting to delete a pipeline that is currently in use.
    ResourceNotFoundException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ExceptionMessage'
      required:
      - message
      description: The requested resource does not exist or is not available. For
        example, the pipeline to which you're trying to add a job doesn't exist or
        is still being created.
    Role:
      type: string
      pattern: ^arn:aws:iam::\w{12}:role/.+$
    Rotate:
      type: string
      pattern: ^(^auto$)|(^0$)|(^90$)|(^180$)|(^270$)$
    SizingPolicy:
      type: string
      pattern: ^(^Fit$)|(^Fill$)|(^Stretch$)|(^Keep$)|(^ShrinkToFit$)|(^ShrinkToFill$)$
    SnsTopic:
      type: string
      pattern: ^(^$)|(^arn:aws:sns:.*:\w{12}:.+$)$
    SnsTopics:
      type: array
      items:
        $ref: '#/components/schemas/SnsTopic'
    StorageClass:
      type: string
      pattern: ^(^ReducedRedundancy$)|(^Standard$)$
    String:
      type: string
    Success:
      type: string
      pattern: ^(^true$)|(^false$)$
    Target:
      type: string
      pattern: ^(^Content$)|(^Frame$)$
    TestRoleRequest:
      type: object
      properties:
        Role:
          allOf:
          - $ref: '#/components/schemas/Role'
          description: The IAM Amazon Resource Name (ARN) for the role that you want
            Elastic Transcoder to test.
        InputBucket:
          allOf:
          - $ref: '#/components/schemas/BucketName'
          description: The Amazon S3 bucket that contains media files to be transcoded.
            The action attempts to read from this bucket.
        OutputBucket:
          allOf:
          - $ref: '#/components/schemas/BucketName'
          description: The Amazon S3 bucket that Elastic Transcoder writes transcoded
            media files to. The action attempts to read from this bucket.
        Topics:
          allOf:
          - $ref: '#/components/schemas/SnsTopics'
          description: The ARNs of one or more Amazon Simple Notification Service
            (Amazon SNS) topics that you want the action to send a test notification
            to.
      required:
      - Role
      - InputBucket
      - OutputBucket
      - Topics
      description: The `TestRoleRequest` structure.
    TestRoleResponse:
      type: object
      properties:
        Success:
          allOf:
          - $ref: '#/components/schemas/Success'
          description: If the operation is successful, this value is `true`; otherwise,
            the value is `false`.
        Messages:
          allOf:
          - $ref: '#/components/schemas/ExceptionMessages'
          description: If the `Success` element contains `false`, this value is an
            array of one or more error messages that were generated during the test
            process.
      description: The `TestRoleResponse` structure.
    ThumbnailPattern:
      type: string
      pattern: ^(^$)|(^.*\{count\}.*$)$
    ThumbnailResolution:
      type: string
      pattern: ^\d{1,5}x\d{1,5}$
    Thumbnails:
      type: object
      properties:
        Format:
          allOf:
          - $ref: '#/components/schemas/JpgOrPng'
          description: 'The format of thumbnails, if any. Valid values are `jpg` and
            `png`.


            You specify whether you want Elastic Transcoder to create thumbnails when
            you create a job.'
        Interval:
          allOf:
          - $ref: '#/components/schemas/Digits'
          description: The approximate number of seconds between thumbnails. Specify
            an integer value.
        Resolution:
          allOf:
          - $ref: '#/components/schemas/ThumbnailResolution'
          description: 'To better control resolution and aspect ratio of thumbnails,
            we recommend that you use the values `MaxWidth`, `MaxHeight`, `SizingPolicy`,
            and `PaddingPolicy` instead of `Resolution` and `AspectRatio`. The two
            groups of settings are mutually exclusive. Do not use them together.


            The width and height of thumbnail files in pixels. Specify a value in
            the format ` _width_ ` x ` _height_ ` where both values are even integers.
            The values cannot exceed the width and height that you specified in the
            `Video:Resolution` object.'
        AspectRatio:
          allOf:
          - $ref: '#/components/schemas/AspectRatio'
          description: 'To better control resolution and aspect ratio of thumbnails,
            we recommend that you use the values `MaxWidth`, `MaxHeight`, `SizingPolicy`,
            and `PaddingPolicy` instead of `Resolution` and `AspectRatio`. The two
            groups of settings are mutually exclusive. Do not use them together.


            The aspect ratio of thumbnails. Valid values include:


            `auto`, `1:1`, `4:3`, `3:2`, `16:9`


            If you specify `auto`, Elastic Transcoder tries to preserve the aspect
            ratio of the video in the output file.'
        MaxWidth:
          allOf:
          - $ref: '#/components/schemas/DigitsOrAuto'
          description: The maximum width of thumbnails in pixels. If you specify auto,
            Elastic Transcoder uses 1920 (Full HD) as the default value. If you specify
            a numeric value, enter an even integer between 32 and 4096.
        MaxHeight:
          allOf:
          - $ref: '#/components/schemas/DigitsOrAuto'
          description: The maximum height of thumbnails in pixels. If you specify
            auto, Elastic Transcoder uses 1080 (Full HD) as the default value. If
            you specify a numeric value, enter an even integer between 32 and 3072.
        SizingPolicy:
          allOf:
          - $ref: '#/components/schemas/SizingPolicy'
          description: "Specify one of the following values to control scaling of\
            \ thumbnails:\n\n  * `Fit`: Elastic Transcoder scales thumbnails so they\
            \ match the value that you specified in thumbnail MaxWidth or MaxHeight\
            \ settings without exceeding the other value. \n\n  * `Fill`: Elastic\
            \ Transcoder scales thumbnails so they match the value that you specified\
            \ in thumbnail `MaxWidth` or `MaxHeight` settings and matches or exceeds\
            \ the other value. Elastic Transcoder centers the image in thumbnails\
            \ and then crops in the dimension (if any) that exceeds the maximum value.\n\
            \n  * `Stretch`: Elastic Transcoder stretches thumbnails to match the\
            \ values that you specified for thumbnail `MaxWidth` and `MaxHeight` settings.\
            \ If the relative proportions of the input video and thumbnails are different,\
            \ the thumbnails will be distorted.\n\n  * `Keep`: Elastic Transcoder\
            \ does not scale thumbnails. If either dimension of the input video exceeds\
            \ the values that you specified for thumbnail `MaxWidth` and `MaxHeight`\
            \ settings, Elastic Transcoder crops the thumbnails.\n\n  * `ShrinkToFit`:\
            \ Elastic Transcoder scales thumbnails down so that their dimensions match\
            \ the values that you specified for at least one of thumbnail `MaxWidth`\
            \ and `MaxHeight` without exceeding either value. If you specify this\
            \ option, Elastic Transcoder does not scale thumbnails up.\n\n  * `ShrinkToFill`:\
            \ Elastic Transcoder scales thumbnails down so that their dimensions match\
            \ the values that you specified for at least one of `MaxWidth` and `MaxHeight`\
            \ without dropping below either value. If you specify this option, Elastic\
            \ Transcoder does not scale thumbnails up."
        PaddingPolicy:
          allOf:
          - $ref: '#/components/schemas/PaddingPolicy'
          description: When you set `PaddingPolicy` to `Pad`, Elastic Transcoder may
            add black bars to the top and bottom and/or left and right sides of thumbnails
            to make the total size of the thumbnails match the values that you specified
            for thumbnail `MaxWidth` and `MaxHeight` settings.
      description: Thumbnails for videos.
    Time:
      type: string
      pattern: ^(^\d{1,5}(\.\d{0,3})?$)|(^([0-1]?[0-9]:|2[0-3]:)?([0-5]?[0-9]:)?[0-5]?[0-9](\.\d{0,3})?$)$
    TimeOffset:
      type: string
      pattern: ^(^[+-]?\d{1,5}(\.\d{0,3})?$)|(^[+-]?([0-1]?[0-9]:|2[0-3]:)?([0-5]?[0-9]:)?[0-5]?[0-9](\.\d{0,3})?$)$
    TimeSpan:
      type: object
      properties:
        StartTime:
          allOf:
          - $ref: '#/components/schemas/Time'
          description: 'The place in the input file where you want a clip to start.
            The format can be either HH:mm:ss.SSS (maximum value: 23:59:59.999; SSS
            is thousandths of a second) or sssss.SSS (maximum value: 86399.999). If
            you don''t specify a value, Elastic Transcoder starts at the beginning
            of the input file.'
        Duration:
          allOf:
          - $ref: '#/components/schemas/Time'
          description: 'The duration of the clip. The format can be either HH:mm:ss.SSS
            (maximum value: 23:59:59.999; SSS is thousandths of a second) or sssss.SSS
            (maximum value: 86399.999). If you don''t specify a value, Elastic Transcoder
            creates an output file from StartTime to the end of the file.


            If you specify a value longer than the duration of the input file, Elastic
            Transcoder transcodes the file and returns a warning message.'
      description: Settings that determine when a clip begins and how long it lasts.
    Timing:
      type: object
      properties:
        SubmitTimeMillis:
          allOf:
          - $ref: '#/components/schemas/NullableLong'
          description: The time the job was submitted to Elastic Transcoder, in epoch
            milliseconds.
        StartTimeMillis:
          allOf:
          - $ref: '#/components/schemas/NullableLong'
          description: The time the job began transcoding, in epoch milliseconds.
        FinishTimeMillis:
          allOf:
          - $ref: '#/components/schemas/NullableLong'
          description: The time the job finished transcoding, in epoch milliseconds.
      description: Details about the timing of a job.
    UpdatePipelineNotificationsRequest:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/Id'
          description: The identifier of the pipeline for which you want to change
            notification settings.
        Notifications:
          allOf:
          - $ref: '#/components/schemas/Notifications'
          description: "The topic ARN for the Amazon Simple Notification Service (Amazon\
            \ SNS) topic that you want to notify to report job status.\n\nTo receive\
            \ notifications, you must also subscribe to the new topic in the Amazon\
            \ SNS console.\n\n  * **Progressing** : The topic ARN for the Amazon Simple\
            \ Notification Service (Amazon SNS) topic that you want to notify when\
            \ Elastic Transcoder has started to process jobs that are added to this\
            \ pipeline. This is the ARN that Amazon SNS returned when you created\
            \ the topic.\n\n  * **Complete** : The topic ARN for the Amazon SNS topic\
            \ that you want to notify when Elastic Transcoder has finished processing\
            \ a job. This is the ARN that Amazon SNS returned when you created the\
            \ topic.\n\n  * **Warning** : The topic ARN for the Amazon SNS topic that\
            \ you want to notify when Elastic Transcoder encounters a warning condition.\
            \ This is the ARN that Amazon SNS returned when you created the topic.\n\
            \n  * **Error** : The topic ARN for the Amazon SNS topic that you want\
            \ to notify when Elastic Transcoder encounters an error condition. This\
            \ is the ARN that Amazon SNS returned when you created the topic."
      required:
      - Id
      - Notifications
      description: The `UpdatePipelineNotificationsRequest` structure.
    UpdatePipelineNotificationsResponse:
      type: object
      properties:
        Pipeline:
          allOf:
          - $ref: '#/components/schemas/Pipeline'
          description: A section of the response body that provides information about
            the pipeline associated with this notification.
      description: The `UpdatePipelineNotificationsResponse` structure.
    UpdatePipelineRequest:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/Id'
          description: The ID of the pipeline that you want to update.
        Name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: 'The name of the pipeline. We recommend that the name be unique
            within the AWS account, but uniqueness is not enforced.


            Constraints: Maximum 40 characters'
        InputBucket:
          allOf:
          - $ref: '#/components/schemas/BucketName'
          description: The Amazon S3 bucket in which you saved the media files that
            you want to transcode and the graphics that you want to use as watermarks.
        Role:
          allOf:
          - $ref: '#/components/schemas/Role'
          description: The IAM Amazon Resource Name (ARN) for the role that you want
            Elastic Transcoder to use to transcode jobs for this pipeline.
        AwsKmsKeyArn:
          allOf:
          - $ref: '#/components/schemas/KeyArn'
          description: 'The AWS Key Management Service (AWS KMS) key that you want
            to use with this pipeline.


            If you use either `s3` or `s3-aws-kms` as your `Encryption:Mode`, you
            don''t need to provide a key with your job because a default key, known
            as an AWS-KMS key, is created for you automatically. You need to provide
            an AWS-KMS key only if you want to use a non-default AWS-KMS key, or if
            you are using an `Encryption:Mode` of `aes-cbc-pkcs7`, `aes-ctr`, or `aes-gcm`.'
        Notifications:
          allOf:
          - $ref: '#/components/schemas/Notifications'
          description: "The topic ARN for the Amazon Simple Notification Service (Amazon\
            \ SNS) topic that you want to notify to report job status.\n\nTo receive\
            \ notifications, you must also subscribe to the new topic in the Amazon\
            \ SNS console.\n\n  * **Progressing** : The topic ARN for the Amazon Simple\
            \ Notification Service (Amazon SNS) topic that you want to notify when\
            \ Elastic Transcoder has started to process jobs that are added to this\
            \ pipeline. This is the ARN that Amazon SNS returned when you created\
            \ the topic.\n\n  * **Complete** : The topic ARN for the Amazon SNS topic\
            \ that you want to notify when Elastic Transcoder has finished processing\
            \ a job. This is the ARN that Amazon SNS returned when you created the\
            \ topic.\n\n  * **Warning** : The topic ARN for the Amazon SNS topic that\
            \ you want to notify when Elastic Transcoder encounters a warning condition.\
            \ This is the ARN that Amazon SNS returned when you created the topic.\n\
            \n  * **Error** : The topic ARN for the Amazon SNS topic that you want\
            \ to notify when Elastic Transcoder encounters an error condition. This\
            \ is the ARN that Amazon SNS returned when you created the topic."
        ContentConfig:
          allOf:
          - $ref: '#/components/schemas/PipelineOutputConfig'
          description: "The optional `ContentConfig` object specifies information\
            \ about the Amazon S3 bucket in which you want Elastic Transcoder to save\
            \ transcoded files and playlists: which bucket to use, which users you\
            \ want to have access to the files, the type of access you want users\
            \ to have, and the storage class that you want to assign to the files.\n\
            \nIf you specify values for `ContentConfig`, you must also specify values\
            \ for `ThumbnailConfig`.\n\nIf you specify values for `ContentConfig`\
            \ and `ThumbnailConfig`, omit the `OutputBucket` object.\n\n  * **Bucket**\
            \ : The Amazon S3 bucket in which you want Elastic Transcoder to save\
            \ transcoded files and playlists.\n\n  * **Permissions** (Optional): The\
            \ Permissions object specifies which users you want to have access to\
            \ transcoded files and the type of access you want them to have. You can\
            \ grant permissions to a maximum of 30 users and/or predefined Amazon\
            \ S3 groups.\n\n  * **Grantee Type** : Specify the type of value that\
            \ appears in the `Grantee` object:\n\n    * **Canonical** : The value\
            \ in the `Grantee` object is either the canonical user ID for an AWS account\
            \ or an origin access identity for an Amazon CloudFront distribution.\
            \ For more information about canonical user IDs, see Access Control List\
            \ (ACL) Overview in the Amazon Simple Storage Service Developer Guide.\
            \ For more information about using CloudFront origin access identities\
            \ to require that users use CloudFront URLs instead of Amazon S3 URLs,\
            \ see Using an Origin Access Identity to Restrict Access to Your Amazon\
            \ S3 Content.\n\nA canonical user ID is not the same as an AWS account\
            \ number.\n\n    * **Email** : The value in the `Grantee` object is the\
            \ registered email address of an AWS account.\n\n    * **Group** : The\
            \ value in the `Grantee` object is one of the following predefined Amazon\
            \ S3 groups: `AllUsers`, `AuthenticatedUsers`, or `LogDelivery`.\n\n \
            \ * **Grantee** : The AWS user or group that you want to have access to\
            \ transcoded files and playlists. To identify the user or group, you can\
            \ specify the canonical user ID for an AWS account, an origin access identity\
            \ for a CloudFront distribution, the registered email address of an AWS\
            \ account, or a predefined Amazon S3 group \n\n  * **Access** : The permission\
            \ that you want to give to the AWS user that you specified in `Grantee`.\
            \ Permissions are granted on the files that Elastic Transcoder adds to\
            \ the bucket, including playlists and video files. Valid values include:\
            \ \n\n    * `READ`: The grantee can read the objects and metadata for\
            \ objects that Elastic Transcoder adds to the Amazon S3 bucket.\n\n  \
            \  * `READ_ACP`: The grantee can read the object ACL for objects that\
            \ Elastic Transcoder adds to the Amazon S3 bucket. \n\n    * `WRITE_ACP`:\
            \ The grantee can write the ACL for the objects that Elastic Transcoder\
            \ adds to the Amazon S3 bucket.\n\n    * `FULL_CONTROL`: The grantee has\
            \ `READ`, `READ_ACP`, and `WRITE_ACP` permissions for the objects that\
            \ Elastic Transcoder adds to the Amazon S3 bucket.\n\n  * **StorageClass**\
            \ : The Amazon S3 storage class, `Standard` or `ReducedRedundancy`, that\
            \ you want Elastic Transcoder to assign to the video files and playlists\
            \ that it stores in your Amazon S3 bucket."
        ThumbnailConfig:
          allOf:
          - $ref: '#/components/schemas/PipelineOutputConfig'
          description: "The `ThumbnailConfig` object specifies several values, including\
            \ the Amazon S3 bucket in which you want Elastic Transcoder to save thumbnail\
            \ files, which users you want to have access to the files, the type of\
            \ access you want users to have, and the storage class that you want to\
            \ assign to the files.\n\nIf you specify values for `ContentConfig`, you\
            \ must also specify values for `ThumbnailConfig` even if you don't want\
            \ to create thumbnails.\n\nIf you specify values for `ContentConfig` and\
            \ `ThumbnailConfig`, omit the `OutputBucket` object.\n\n  * **Bucket**\
            \ : The Amazon S3 bucket in which you want Elastic Transcoder to save\
            \ thumbnail files.\n\n  * **Permissions** (Optional): The `Permissions`\
            \ object specifies which users and/or predefined Amazon S3 groups you\
            \ want to have access to thumbnail files, and the type of access you want\
            \ them to have. You can grant permissions to a maximum of 30 users and/or\
            \ predefined Amazon S3 groups.\n\n  * **GranteeType** : Specify the type\
            \ of value that appears in the Grantee object:\n\n    * **Canonical**\
            \ : The value in the `Grantee` object is either the canonical user ID\
            \ for an AWS account or an origin access identity for an Amazon CloudFront\
            \ distribution.\n\nA canonical user ID is not the same as an AWS account\
            \ number.\n\n    * **Email** : The value in the `Grantee` object is the\
            \ registered email address of an AWS account.\n\n    * **Group** : The\
            \ value in the `Grantee` object is one of the following predefined Amazon\
            \ S3 groups: `AllUsers`, `AuthenticatedUsers`, or `LogDelivery`.\n\n \
            \ * **Grantee** : The AWS user or group that you want to have access to\
            \ thumbnail files. To identify the user or group, you can specify the\
            \ canonical user ID for an AWS account, an origin access identity for\
            \ a CloudFront distribution, the registered email address of an AWS account,\
            \ or a predefined Amazon S3 group. \n\n  * **Access** : The permission\
            \ that you want to give to the AWS user that you specified in `Grantee`.\
            \ Permissions are granted on the thumbnail files that Elastic Transcoder\
            \ adds to the bucket. Valid values include: \n\n    * `READ`: The grantee\
            \ can read the thumbnails and metadata for objects that Elastic Transcoder\
            \ adds to the Amazon S3 bucket.\n\n    * `READ_ACP`: The grantee can read\
            \ the object ACL for thumbnails that Elastic Transcoder adds to the Amazon\
            \ S3 bucket.\n\n    * `WRITE_ACP`: The grantee can write the ACL for the\
            \ thumbnails that Elastic Transcoder adds to the Amazon S3 bucket.\n\n\
            \    * `FULL_CONTROL`: The grantee has `READ`, `READ_ACP`, and `WRITE_ACP`\
            \ permissions for the thumbnails that Elastic Transcoder adds to the Amazon\
            \ S3 bucket. \n\n  * **StorageClass** : The Amazon S3 storage class, `Standard`\
            \ or `ReducedRedundancy`, that you want Elastic Transcoder to assign to\
            \ the thumbnails that it stores in your Amazon S3 bucket."
      required:
      - Id
      description: The `UpdatePipelineRequest` structure.
    UpdatePipelineResponse:
      type: object
      properties:
        Pipeline:
          allOf:
          - $ref: '#/components/schemas/Pipeline'
          description: The pipeline updated by this `UpdatePipelineResponse` call.
        Warnings:
          allOf:
          - $ref: '#/components/schemas/Warnings'
          description: 'Elastic Transcoder returns a warning if the resources used
            by your pipeline are not in the same region as the pipeline.


            Using resources in the same region, such as your Amazon S3 buckets, Amazon
            SNS notification topics, and AWS KMS key, reduces processing time and
            prevents cross-regional charges.'
      description: When you update a pipeline, Elastic Transcoder returns the values
        that you specified in the request.
    UpdatePipelineStatusRequest:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/Id'
          description: The identifier of the pipeline to update.
        Status:
          allOf:
          - $ref: '#/components/schemas/PipelineStatus'
          description: "The desired status of the pipeline:\n\n  * `Active`: The pipeline\
            \ is processing jobs.\n\n  * `Paused`: The pipeline is not currently processing\
            \ jobs."
      required:
      - Id
      - Status
      description: The `UpdatePipelineStatusRequest` structure.
    UpdatePipelineStatusResponse:
      type: object
      properties:
        Pipeline:
          allOf:
          - $ref: '#/components/schemas/Pipeline'
          description: A section of the response body that provides information about
            the pipeline.
      description: When you update status for a pipeline, Elastic Transcoder returns
        the values that you specified in the request.
    UserMetadata:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/String'
    ValidationException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ExceptionMessage'
      required:
      - message
      description: One or more required parameter values were not provided in the
        request.
    VerticalAlign:
      type: string
      pattern: ^(^Top$)|(^Bottom$)|(^Center$)$
    VideoBitRate:
      type: string
      pattern: ^(^\d{2,5}$)|(^auto$)$
    VideoCodec:
      type: string
      pattern: ^(^H\.264$)|(^vp8$)|(^vp9$)|(^mpeg2$)|(^gif$)$
    VideoParameters:
      type: object
      properties:
        Codec:
          allOf:
          - $ref: '#/components/schemas/VideoCodec'
          description: The video codec for the output file. Valid values include `gif`,
            `H.264`, `mpeg2`, `vp8`, and `vp9`. You can only specify `vp8` and `vp9`
            when the container type is `webm`, `gif` when the container type is `gif`,
            and `mpeg2` when the container type is `mpg`.
        CodecOptions:
          allOf:
          - $ref: '#/components/schemas/CodecOptions'
          description: "**Profile (H.264/VP8/VP9 Only)**\n\nThe H.264 profile that\
            \ you want to use for the output file. Elastic Transcoder supports the\
            \ following profiles:\n\n  * `baseline`: The profile most commonly used\
            \ for videoconferencing and for mobile applications.\n\n  * `main`: The\
            \ profile used for standard-definition digital TV broadcasts.\n\n  * `high`:\
            \ The profile used for high-definition digital TV broadcasts and for Blu-ray\
            \ discs.\n\n**Level (H.264 Only)**\n\nThe H.264 level that you want to\
            \ use for the output file. Elastic Transcoder supports the following levels:\n\
            \n`1`, `1b`, `1.1`, `1.2`, `1.3`, `2`, `2.1`, `2.2`, `3`, `3.1`, `3.2`,\
            \ `4`, `4.1`\n\n**MaxReferenceFrames (H.264 Only)**\n\nApplicable only\
            \ when the value of Video:Codec is H.264. The maximum number of previously\
            \ decoded frames to use as a reference for decoding future frames. Valid\
            \ values are integers 0 through 16, but we recommend that you not use\
            \ a value greater than the following:\n\n`Min(Floor(Maximum decoded picture\
            \ buffer in macroblocks * 256 / (Width in pixels * Height in pixels)),\
            \ 16)`\n\nwhere _Width in pixels_ and _Height in pixels_ represent either\
            \ MaxWidth and MaxHeight, or Resolution. _Maximum decoded picture buffer\
            \ in macroblocks_ depends on the value of the `Level` object. See the\
            \ list below. (A macroblock is a block of pixels measuring 16x16.)\n\n\
            \  * 1 - 396\n\n  * 1b - 396\n\n  * 1.1 - 900\n\n  * 1.2 - 2376\n\n  *\
            \ 1.3 - 2376\n\n  * 2 - 2376\n\n  * 2.1 - 4752\n\n  * 2.2 - 8100\n\n \
            \ * 3 - 8100\n\n  * 3.1 - 18000\n\n  * 3.2 - 20480\n\n  * 4 - 32768\n\n\
            \  * 4.1 - 32768\n\n**MaxBitRate (Optional, H.264/MPEG2/VP8/VP9 only)**\n\
            \nThe maximum number of bits per second in a video buffer; the size of\
            \ the buffer is specified by `BufferSize`. Specify a value between 16\
            \ and 62,500. You can reduce the bandwidth required to stream a video\
            \ by reducing the maximum bit rate, but this also reduces the quality\
            \ of the video.\n\n**BufferSize (Optional, H.264/MPEG2/VP8/VP9 only)**\n\
            \nThe maximum number of bits in any x seconds of the output video. This\
            \ window is commonly 10 seconds, the standard segment duration when you're\
            \ using FMP4 or MPEG-TS for the container type of the output video. Specify\
            \ an integer greater than 0. If you specify `MaxBitRate` and omit `BufferSize`,\
            \ Elastic Transcoder sets `BufferSize` to 10 times the value of `MaxBitRate`.\n\
            \n**InterlacedMode (Optional, H.264/MPEG2 Only)**\n\nThe interlace mode\
            \ for the output video.\n\nInterlaced video is used to double the perceived\
            \ frame rate for a video by interlacing two fields (one field on every\
            \ other line, the other field on the other lines) so that the human eye\
            \ registers multiple pictures per frame. Interlacing reduces the bandwidth\
            \ required for transmitting a video, but can result in blurred images\
            \ and flickering.\n\nValid values include `Progressive` (no interlacing,\
            \ top to bottom), `TopFirst` (top field first), `BottomFirst` (bottom\
            \ field first), and `Auto`.\n\nIf `InterlaceMode` is not specified, Elastic\
            \ Transcoder uses `Progressive` for the output. If `Auto` is specified,\
            \ Elastic Transcoder interlaces the output.\n\n**ColorSpaceConversionMode\
            \ (Optional, H.264/MPEG2 Only)**\n\nThe color space conversion Elastic\
            \ Transcoder applies to the output video. Color spaces are the algorithms\
            \ used by the computer to store information about how to render color.\
            \ `Bt.601` is the standard for standard definition video, while `Bt.709`\
            \ is the standard for high definition video.\n\nValid values include `None`,\
            \ `Bt709toBt601`, `Bt601toBt709`, and `Auto`.\n\nIf you chose `Auto` for\
            \ `ColorSpaceConversionMode` and your output is interlaced, your frame\
            \ rate is one of `23.97`, `24`, `25`, `29.97`, `50`, or `60`, your `SegmentDuration`\
            \ is null, and you are using one of the resolution changes from the list\
            \ below, Elastic Transcoder applies the following color space conversions:\n\
            \n  * _Standard to HD, 720x480 to 1920x1080_ \\- Elastic Transcoder applies\
            \ `Bt601ToBt709`\n\n  * _Standard to HD, 720x576 to 1920x1080_ \\- Elastic\
            \ Transcoder applies `Bt601ToBt709`\n\n  * _HD to Standard, 1920x1080\
            \ to 720x480_ \\- Elastic Transcoder applies `Bt709ToBt601`\n\n  * _HD\
            \ to Standard, 1920x1080 to 720x576_ \\- Elastic Transcoder applies `Bt709ToBt601`\n\
            \nElastic Transcoder may change the behavior of the `ColorspaceConversionMode`\
            \ `Auto` mode in the future. All outputs in a playlist must use the same\
            \ `ColorSpaceConversionMode`.\n\nIf you do not specify a `ColorSpaceConversionMode`,\
            \ Elastic Transcoder does not change the color space of a file. If you\
            \ are unsure what `ColorSpaceConversionMode` was applied to your output\
            \ file, you can check the `AppliedColorSpaceConversion` parameter included\
            \ in your job response. If your job does not have an `AppliedColorSpaceConversion`\
            \ in its response, no `ColorSpaceConversionMode` was applied.\n\n**ChromaSubsampling**\n\
            \nThe sampling pattern for the chroma (color) channels of the output video.\
            \ Valid values include `yuv420p` and `yuv422p`.\n\n`yuv420p` samples the\
            \ chroma information of every other horizontal and every other vertical\
            \ line, `yuv422p` samples the color information of every horizontal line\
            \ and every other vertical line.\n\n**LoopCount (Gif Only)**\n\nThe number\
            \ of times you want the output gif to loop. Valid values include `Infinite`\
            \ and integers between `0` and `100`, inclusive."
        KeyframesMaxDist:
          allOf:
          - $ref: '#/components/schemas/KeyframesMaxDist'
          description: 'Applicable only when the value of Video:Codec is one of `H.264`,
            `MPEG2`, or `VP8`.


            The maximum number of frames between key frames. Key frames are fully
            encoded frames; the frames between key frames are encoded based, in part,
            on the content of the key frames. The value is an integer formatted as
            a string; valid values are between 1 (every frame is a key frame) and
            100000, inclusive. A higher value results in higher compression but may
            also discernibly decrease video quality.


            For `Smooth` outputs, the `FrameRate` must have a constant ratio to the
            `KeyframesMaxDist`. This allows `Smooth` playlists to switch between different
            quality levels while the file is being played.


            For example, an input file can have a `FrameRate` of 30 with a `KeyframesMaxDist`
            of 90. The output file then needs to have a ratio of 1:3. Valid outputs
            would have `FrameRate` of 30, 25, and 10, and `KeyframesMaxDist` of 90,
            75, and 30, respectively.


            Alternately, this can be achieved by setting `FrameRate` to auto and having
            the same values for `MaxFrameRate` and `KeyframesMaxDist`.'
        FixedGOP:
          allOf:
          - $ref: '#/components/schemas/FixedGOP'
          description: "Applicable only when the value of Video:Codec is one of `H.264`,\
            \ `MPEG2`, or `VP8`.\n\nWhether to use a fixed value for `FixedGOP`. Valid\
            \ values are `true` and `false`:\n\n  * `true`: Elastic Transcoder uses\
            \ the value of `KeyframesMaxDist` for the distance between key frames\
            \ (the number of frames in a group of pictures, or GOP).\n\n  * `false`:\
            \ The distance between key frames can vary.\n\n`FixedGOP` must be set\
            \ to `true` for `fmp4` containers."
        BitRate:
          allOf:
          - $ref: '#/components/schemas/VideoBitRate'
          description: "The bit rate of the video stream in the output file, in kilobits/second.\
            \ Valid values depend on the values of `Level` and `Profile`. If you specify\
            \ `auto`, Elastic Transcoder uses the detected bit rate of the input source.\
            \ If you specify a value other than `auto`, we recommend that you specify\
            \ a value less than or equal to the maximum H.264-compliant value listed\
            \ for your level and profile:\n\n_Level - Maximum video bit rate in kilobits/second\
            \ (baseline and main Profile) : maximum video bit rate in kilobits/second\
            \ (high Profile)_\n\n  * 1 - 64 : 80\n\n  * 1b - 128 : 160\n\n  * 1.1\
            \ - 192 : 240\n\n  * 1.2 - 384 : 480\n\n  * 1.3 - 768 : 960\n\n  * 2 -\
            \ 2000 : 2500\n\n  * 3 - 10000 : 12500\n\n  * 3.1 - 14000 : 17500\n\n\
            \  * 3.2 - 20000 : 25000\n\n  * 4 - 20000 : 25000\n\n  * 4.1 - 50000 :\
            \ 62500"
        FrameRate:
          allOf:
          - $ref: '#/components/schemas/FrameRate'
          description: "The frames per second for the video stream in the output file.\
            \ Valid values include:\n\n`auto`, `10`, `15`, `23.97`, `24`, `25`, `29.97`,\
            \ `30`, `60`\n\nIf you specify `auto`, Elastic Transcoder uses the detected\
            \ frame rate of the input source. If you specify a frame rate, we recommend\
            \ that you perform the following calculation:\n\n`Frame rate = maximum\
            \ recommended decoding speed in luma samples/second / (width in pixels\
            \ * height in pixels)`\n\nwhere:\n\n  * _width in pixels_ and _height\
            \ in pixels_ represent the Resolution of the output video.\n\n  * _maximum\
            \ recommended decoding speed in Luma samples/second_ is less than or equal\
            \ to the maximum value listed in the following table, based on the value\
            \ that you specified for Level.\n\nThe maximum recommended decoding speed\
            \ in Luma samples/second for each level is described in the following\
            \ list (_Level - Decoding speed_):\n\n  * 1 - 380160\n\n  * 1b - 380160\n\
            \n  * 1.1 - 76800\n\n  * 1.2 - 1536000\n\n  * 1.3 - 3041280\n\n  * 2 -\
            \ 3041280\n\n  * 2.1 - 5068800\n\n  * 2.2 - 5184000\n\n  * 3 - 10368000\n\
            \n  * 3.1 - 27648000\n\n  * 3.2 - 55296000\n\n  * 4 - 62914560\n\n  *\
            \ 4.1 - 62914560"
        MaxFrameRate:
          allOf:
          - $ref: '#/components/schemas/MaxFrameRate'
          description: 'If you specify `auto` for `FrameRate`, Elastic Transcoder
            uses the frame rate of the input video for the frame rate of the output
            video. Specify the maximum frame rate that you want Elastic Transcoder
            to use when the frame rate of the input video is greater than the desired
            maximum frame rate of the output video. Valid values include: `10`, `15`,
            `23.97`, `24`, `25`, `29.97`, `30`, `60`.'
        Resolution:
          allOf:
          - $ref: '#/components/schemas/Resolution'
          description: "To better control resolution and aspect ratio of output videos,\
            \ we recommend that you use the values `MaxWidth`, `MaxHeight`, `SizingPolicy`,\
            \ `PaddingPolicy`, and `DisplayAspectRatio` instead of `Resolution` and\
            \ `AspectRatio`. The two groups of settings are mutually exclusive. Do\
            \ not use them together.\n\nThe width and height of the video in the output\
            \ file, in pixels. Valid values are `auto` and _width_ x _height_ :\n\n\
            \  * `auto`: Elastic Transcoder attempts to preserve the width and height\
            \ of the input file, subject to the following rules.\n\n  * ` _width_\
            \ x _height_ `: The width and height of the output video in pixels.\n\n\
            Note the following about specifying the width and height:\n\n  * The width\
            \ must be an even integer between 128 and 4096, inclusive.\n\n  * The\
            \ height must be an even integer between 96 and 3072, inclusive.\n\n \
            \ * If you specify a resolution that is less than the resolution of the\
            \ input file, Elastic Transcoder rescales the output file to the lower\
            \ resolution.\n\n  * If you specify a resolution that is greater than\
            \ the resolution of the input file, Elastic Transcoder rescales the output\
            \ to the higher resolution.\n\n  * We recommend that you specify a resolution\
            \ for which the product of width and height is less than or equal to the\
            \ applicable value in the following list (_List - Max width x height value_):\n\
            \n    * 1 - 25344\n\n    * 1b - 25344\n\n    * 1.1 - 101376\n\n    * 1.2\
            \ - 101376\n\n    * 1.3 - 101376\n\n    * 2 - 101376\n\n    * 2.1 - 202752\n\
            \n    * 2.2 - 404720\n\n    * 3 - 404720\n\n    * 3.1 - 921600\n\n   \
            \ * 3.2 - 1310720\n\n    * 4 - 2097152\n\n    * 4.1 - 2097152"
        AspectRatio:
          allOf:
          - $ref: '#/components/schemas/AspectRatio'
          description: 'To better control resolution and aspect ratio of output videos,
            we recommend that you use the values `MaxWidth`, `MaxHeight`, `SizingPolicy`,
            `PaddingPolicy`, and `DisplayAspectRatio` instead of `Resolution` and
            `AspectRatio`. The two groups of settings are mutually exclusive. Do not
            use them together.


            The display aspect ratio of the video in the output file. Valid values
            include:


            `auto`, `1:1`, `4:3`, `3:2`, `16:9`


            If you specify `auto`, Elastic Transcoder tries to preserve the aspect
            ratio of the input file.


            If you specify an aspect ratio for the output file that differs from aspect
            ratio of the input file, Elastic Transcoder adds pillarboxing (black bars
            on the sides) or letterboxing (black bars on the top and bottom) to maintain
            the aspect ratio of the active region of the video.'
        MaxWidth:
          allOf:
          - $ref: '#/components/schemas/DigitsOrAuto'
          description: The maximum width of the output video in pixels. If you specify
            `auto`, Elastic Transcoder uses 1920 (Full HD) as the default value. If
            you specify a numeric value, enter an even integer between 128 and 4096.
        MaxHeight:
          allOf:
          - $ref: '#/components/schemas/DigitsOrAuto'
          description: The maximum height of the output video in pixels. If you specify
            `auto`, Elastic Transcoder uses 1080 (Full HD) as the default value. If
            you specify a numeric value, enter an even integer between 96 and 3072.
        DisplayAspectRatio:
          allOf:
          - $ref: '#/components/schemas/AspectRatio'
          description: The value that Elastic Transcoder adds to the metadata in the
            output file.
        SizingPolicy:
          allOf:
          - $ref: '#/components/schemas/SizingPolicy'
          description: "Specify one of the following values to control scaling of\
            \ the output video:\n\n  * `Fit`: Elastic Transcoder scales the output\
            \ video so it matches the value that you specified in either `MaxWidth`\
            \ or `MaxHeight` without exceeding the other value.\n\n  * `Fill`: Elastic\
            \ Transcoder scales the output video so it matches the value that you\
            \ specified in either `MaxWidth` or `MaxHeight` and matches or exceeds\
            \ the other value. Elastic Transcoder centers the output video and then\
            \ crops it in the dimension (if any) that exceeds the maximum value.\n\
            \n  * `Stretch`: Elastic Transcoder stretches the output video to match\
            \ the values that you specified for `MaxWidth` and `MaxHeight`. If the\
            \ relative proportions of the input video and the output video are different,\
            \ the output video will be distorted.\n\n  * `Keep`: Elastic Transcoder\
            \ does not scale the output video. If either dimension of the input video\
            \ exceeds the values that you specified for `MaxWidth` and `MaxHeight`,\
            \ Elastic Transcoder crops the output video.\n\n  * `ShrinkToFit`: Elastic\
            \ Transcoder scales the output video down so that its dimensions match\
            \ the values that you specified for at least one of `MaxWidth` and `MaxHeight`\
            \ without exceeding either value. If you specify this option, Elastic\
            \ Transcoder does not scale the video up.\n\n  * `ShrinkToFill`: Elastic\
            \ Transcoder scales the output video down so that its dimensions match\
            \ the values that you specified for at least one of `MaxWidth` and `MaxHeight`\
            \ without dropping below either value. If you specify this option, Elastic\
            \ Transcoder does not scale the video up."
        PaddingPolicy:
          allOf:
          - $ref: '#/components/schemas/PaddingPolicy'
          description: When you set `PaddingPolicy` to `Pad`, Elastic Transcoder may
            add black bars to the top and bottom and/or left and right sides of the
            output video to make the total size of the output video match the values
            that you specified for `MaxWidth` and `MaxHeight`.
        Watermarks:
          allOf:
          - $ref: '#/components/schemas/PresetWatermarks'
          description: 'Settings for the size, location, and opacity of graphics that
            you want Elastic Transcoder to overlay over videos that are transcoded
            using this preset. You can specify settings for up to four watermarks.
            Watermarks appear in the specified size and location, and with the specified
            opacity for the duration of the transcoded video.


            Watermarks can be in .png or .jpg format. If you want to display a watermark
            that is not rectangular, use the .png format, which supports transparency.


            When you create a job that uses this preset, you specify the .png or .jpg
            graphics that you want Elastic Transcoder to include in the transcoded
            videos. You can specify fewer graphics in the job than you specify watermark
            settings in the preset, which allows you to use the same preset for up
            to four watermarks that have different dimensions.'
      description: The `VideoParameters` structure.
    Warning:
      type: object
      properties:
        Code:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The code of the cross-regional warning.
        Message:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'The message explaining what resources are in a different region
            from the pipeline.


            AWS KMS keys must be in the same region as the pipeline.'
      description: 'Elastic Transcoder returns a warning if the resources used by
        your pipeline are not in the same region as the pipeline.


        Using resources in the same region, such as your Amazon S3 buckets, Amazon
        SNS notification topics, and AWS KMS key, reduces processing time and prevents
        cross-regional charges.'
    Warnings:
      type: array
      items:
        $ref: '#/components/schemas/Warning'
    WatermarkKey:
      type: string
      pattern: ^(^.{1,1020}.jpg$)|(^.{1,1019}.jpeg$)|(^.{1,1020}.png$)$
      minLength: 1
      maxLength: 1024
    WatermarkSizingPolicy:
      type: string
      pattern: ^(^Fit$)|(^Stretch$)|(^ShrinkToFit$)$
    ZeroTo255String:
      type: string
      minLength: 0
      maxLength: 255
    ZeroTo512String:
      type: string
      minLength: 0
      maxLength: 512
