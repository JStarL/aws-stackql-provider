openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: dlm
  x-aws-serviceName: dlm
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-07'
  version: '2018-01-12'
  title: Amazon Data Lifecycle Manager
  description: |-
    Amazon Data Lifecycle Manager

    With Amazon Data Lifecycle Manager, you can manage the lifecycle of your Amazon Web Services resources. You create lifecycle policies, which are used to automate operations on the specified resources.

    Amazon Data Lifecycle Manager supports Amazon EBS volumes and snapshots. For information about using Amazon Data Lifecycle Manager with Amazon EBS, see [ Amazon Data Lifecycle Manager](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/snapshot-lifecycle.html) in the _Amazon EC2 User Guide_.
servers:
- description: The Amazon Data Lifecycle Manager regional endpoint
  url: https://dlm.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths:
  /policies:
    post:
      operationId: CreateLifecyclePolicy
      description: |-
        Creates an Amazon Data Lifecycle Manager lifecycle policy. Amazon Data Lifecycle Manager supports the following policy types:

          * Custom EBS snapshot policy

          * Custom EBS-backed AMI policy

          * Cross-account copy event policy

          * Default policy for EBS snapshots

          * Default policy for EBS-backed AMIs

        For more information, see [ Default policies vs custom policies](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/policy-differences.html).

        If you create a default policy, you can specify the request parameters either in the request body, or in the PolicyDetails request structure, but not both.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ExecutionRoleArn:
                  $ref: '#/components/schemas/ExecutionRoleArn'
                Description:
                  $ref: '#/components/schemas/PolicyDescription'
                State:
                  $ref: '#/components/schemas/SettablePolicyStateValues'
                PolicyDetails:
                  $ref: '#/components/schemas/PolicyDetails'
                Tags:
                  $ref: '#/components/schemas/TagMap'
                DefaultPolicy:
                  $ref: '#/components/schemas/DefaultPolicyTypeValues'
                CreateInterval:
                  $ref: '#/components/schemas/CreateInterval'
                RetainInterval:
                  $ref: '#/components/schemas/RetainInterval'
                CopyTags:
                  $ref: '#/components/schemas/CopyTagsNullable'
                ExtendDeletion:
                  $ref: '#/components/schemas/ExtendDeletion'
                CrossRegionCopyTargets:
                  $ref: '#/components/schemas/CrossRegionCopyTargetList'
                Exclusions:
                  $ref: '#/components/schemas/Exclusions'
      responses:
        '200': {}
        '500':
          description: |-
            The service failed in an unexpected way.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            Bad request. The request is missing required parameters or has invalid parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '429':
          description: |-
            The request failed because a limit was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
    get:
      operationId: GetLifecyclePolicies
      description: |-
        Gets summary information about all or the specified data lifecycle policies.

        To get complete information about a policy, use [GetLifecyclePolicy](https://docs.aws.amazon.com/dlm/latest/APIReference/API_GetLifecyclePolicy.html).
      parameters:
      - name: policyIds
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PolicyIdList'
      - name: state
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/GettablePolicyStateValues'
      - name: resourceTypes
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ResourceTypeValuesList'
      - name: targetTags
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/TargetTagsFilterList'
      - name: tagsToAdd
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/TagsToAddFilterList'
      - name: defaultPolicyType
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/DefaultPoliciesTypeValues'
      responses:
        '200': {}
        '500':
          description: |-
            The service failed in an unexpected way.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            Bad request. The request is missing required parameters or has invalid parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '429':
          description: |-
            The request failed because a limit was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '404':
          description: |-
            A requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /policies/{PolicyId}:
    delete:
      operationId: DeleteLifecyclePolicy
      description: |-
        Deletes the specified lifecycle policy and halts the automated operations that the policy specified.

        For more information about deleting a policy, see [Delete lifecycle policies](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/view-modify-delete.html#delete).
      parameters:
      - name: PolicyId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PolicyId'
      responses:
        '200': {}
        '500':
          description: |-
            The service failed in an unexpected way.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request failed because a limit was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '404':
          description: |-
            A requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
    get:
      operationId: GetLifecyclePolicy
      description: |-
        Gets detailed information about the specified lifecycle policy.
      parameters:
      - name: PolicyId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PolicyId'
      responses:
        '200': {}
        '500':
          description: |-
            The service failed in an unexpected way.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request failed because a limit was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '404':
          description: |-
            A requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
    patch:
      operationId: UpdateLifecyclePolicy
      description: |-
        Updates the specified lifecycle policy.

        For more information about updating a policy, see [Modify lifecycle policies](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/view-modify-delete.html#modify).
      parameters:
      - name: PolicyId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PolicyId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ExecutionRoleArn:
                  $ref: '#/components/schemas/ExecutionRoleArn'
                State:
                  $ref: '#/components/schemas/SettablePolicyStateValues'
                Description:
                  $ref: '#/components/schemas/PolicyDescription'
                PolicyDetails:
                  $ref: '#/components/schemas/PolicyDetails'
                CreateInterval:
                  $ref: '#/components/schemas/CreateInterval'
                RetainInterval:
                  $ref: '#/components/schemas/RetainInterval'
                CopyTags:
                  $ref: '#/components/schemas/CopyTagsNullable'
                ExtendDeletion:
                  $ref: '#/components/schemas/ExtendDeletion'
                CrossRegionCopyTargets:
                  $ref: '#/components/schemas/CrossRegionCopyTargetList'
                Exclusions:
                  $ref: '#/components/schemas/Exclusions'
      responses:
        '200': {}
        '500':
          description: |-
            The service failed in an unexpected way.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            Bad request. The request is missing required parameters or has invalid parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '429':
          description: |-
            The request failed because a limit was exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '404':
          description: |-
            A requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /tags/{ResourceArn}:
    get:
      operationId: ListTagsForResource
      description: |-
        Lists the tags for the specified resource.
      parameters:
      - name: ResourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PolicyArn'
      responses:
        '200': {}
        '500':
          description: |-
            The service failed in an unexpected way.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            Bad request. The request is missing required parameters or has invalid parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            A requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
    post:
      operationId: TagResource
      description: |-
        Adds the specified tags to the specified resource.
      parameters:
      - name: ResourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PolicyArn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '200': {}
        '500':
          description: |-
            The service failed in an unexpected way.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            Bad request. The request is missing required parameters or has invalid parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            A requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
    delete:
      operationId: UntagResource
      description: |-
        Removes the specified tags from the specified resource.
      parameters:
      - name: ResourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PolicyArn'
      - name: tagKeys
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/TagKeyList'
      responses:
        '200': {}
        '500':
          description: |-
            The service failed in an unexpected way.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            Bad request. The request is missing required parameters or has invalid parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            A requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
components:
  schemas:
    Action:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/ActionName'
          description: A descriptive name for the action.
        CrossRegionCopy:
          allOf:
          - $ref: '#/components/schemas/CrossRegionCopyActionList'
          description: The rule for copying shared snapshots across Regions.
      required:
      - Name
      - CrossRegionCopy
      description: '**[Event-based policies only]** Specifies an action for an event-based
        policy.'
    ActionList:
      type: array
      items:
        $ref: '#/components/schemas/Action'
    ActionName:
      type: string
      pattern: ^[0-9A-Za-z _-]+$
      minLength: 0
      maxLength: 120
    ArchiveRetainRule:
      type: object
      properties:
        RetentionArchiveTier:
          allOf:
          - $ref: '#/components/schemas/RetentionArchiveTier'
          description: Information about retention period in the Amazon EBS Snapshots
            Archive. For more information, see [Archive Amazon EBS snapshots](https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/snapshot-archive.html).
      required:
      - RetentionArchiveTier
      description: '**[Custom snapshot policies only]** Specifies information about
        the archive storage tier retention period.'
    ArchiveRule:
      type: object
      properties:
        RetainRule:
          allOf:
          - $ref: '#/components/schemas/ArchiveRetainRule'
          description: Information about the retention period for the snapshot archiving
            rule.
      required:
      - RetainRule
      description: '**[Custom snapshot policies only]** Specifies a snapshot archiving
        rule for a schedule.'
    AvailabilityZone:
      type: string
      pattern: ^([a-z]+-){2,3}\d[a-z]$
      minLength: 0
      maxLength: 16
    AvailabilityZoneList:
      type: array
      items:
        $ref: '#/components/schemas/AvailabilityZone'
    AwsAccountId:
      type: string
      pattern: ^[0-9]{12}$
      minLength: 12
      maxLength: 12
    CmkArn:
      type: string
      pattern: ^arn:aws(-[a-z]{1,3}){0,2}:kms:([a-z]+-){2,3}\d:\d+:key/
      minLength: 0
      maxLength: 2048
    CopyTags:
      type: boolean
    CopyTagsNullable:
      type: boolean
    Count:
      type: integer
      minimum: 1
      maximum: 1000
    CreateInterval:
      type: integer
      minimum: 1
    CreateLifecyclePolicyRequest:
      type: object
      properties:
        ExecutionRoleArn:
          allOf:
          - $ref: '#/components/schemas/ExecutionRoleArn'
          description: The Amazon Resource Name (ARN) of the IAM role used to run
            the operations specified by the lifecycle policy.
        Description:
          allOf:
          - $ref: '#/components/schemas/PolicyDescription'
          description: A description of the lifecycle policy. The characters ^[0-9A-Za-z
            _-]+$ are supported.
        State:
          allOf:
          - $ref: '#/components/schemas/SettablePolicyStateValues'
          description: The activation state of the lifecycle policy after creation.
        PolicyDetails:
          allOf:
          - $ref: '#/components/schemas/PolicyDetails'
          description: 'The configuration details of the lifecycle policy.


            If you create a default policy, you can specify the request parameters
            either in the request body, or in the PolicyDetails request structure,
            but not both.'
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The tags to apply to the lifecycle policy during creation.
        DefaultPolicy:
          allOf:
          - $ref: '#/components/schemas/DefaultPolicyTypeValues'
          description: "**[Default policies only]** Specify the type of default policy\
            \ to create.\n\n  * To create a default policy for EBS snapshots, that\
            \ creates snapshots of all volumes in the Region that do not have recent\
            \ backups, specify `VOLUME`.\n\n  * To create a default policy for EBS-backed\
            \ AMIs, that creates EBS-backed AMIs from all instances in the Region\
            \ that do not have recent backups, specify `INSTANCE`."
        CreateInterval:
          allOf:
          - $ref: '#/components/schemas/CreateInterval'
          description: '**[Default policies only]** Specifies how often the policy
            should run and create snapshots or AMIs. The creation frequency can range
            from 1 to 7 days. If you do not specify a value, the default is 1.


            Default: 1'
        RetainInterval:
          allOf:
          - $ref: '#/components/schemas/RetainInterval'
          description: '**[Default policies only]** Specifies how long the policy
            should retain snapshots or AMIs before deleting them. The retention period
            can range from 2 to 14 days, but it must be greater than the creation
            frequency to ensure that the policy retains at least 1 snapshot or AMI
            at any given time. If you do not specify a value, the default is 7.


            Default: 7'
        CopyTags:
          allOf:
          - $ref: '#/components/schemas/CopyTagsNullable'
          description: '**[Default policies only]** Indicates whether the policy should
            copy tags from the source resource to the snapshot or AMI. If you do not
            specify a value, the default is `false`.


            Default: false'
        ExtendDeletion:
          allOf:
          - $ref: '#/components/schemas/ExtendDeletion'
          description: "**[Default policies only]** Defines the snapshot or AMI retention\
            \ behavior for the policy if the source volume or instance is deleted,\
            \ or if the policy enters the error, disabled, or deleted state.\n\nBy\
            \ default (**ExtendDeletion=false**):\n\n  * If a source resource is deleted,\
            \ Amazon Data Lifecycle Manager will continue to delete previously created\
            \ snapshots or AMIs, up to but not including the last one, based on the\
            \ specified retention period. If you want Amazon Data Lifecycle Manager\
            \ to delete all snapshots or AMIs, including the last one, specify `true`.\n\
            \n  * If a policy enters the error, disabled, or deleted state, Amazon\
            \ Data Lifecycle Manager stops deleting snapshots and AMIs. If you want\
            \ Amazon Data Lifecycle Manager to continue deleting snapshots or AMIs,\
            \ including the last one, if the policy enters one of these states, specify\
            \ `true`.\n\nIf you enable extended deletion (**ExtendDeletion=true**),\
            \ you override both default behaviors simultaneously.\n\nIf you do not\
            \ specify a value, the default is `false`.\n\nDefault: false"
        CrossRegionCopyTargets:
          allOf:
          - $ref: '#/components/schemas/CrossRegionCopyTargetList'
          description: '**[Default policies only]** Specifies destination Regions
            for snapshot or AMI copies. You can specify up to 3 destination Regions.
            If you do not want to create cross-Region copies, omit this parameter.'
        Exclusions:
          allOf:
          - $ref: '#/components/schemas/Exclusions'
          description: '**[Default policies only]** Specifies exclusion parameters
            for volumes or instances for which you do not want to create snapshots
            or AMIs. The policy will not create snapshots or AMIs for target resources
            that match any of the specified exclusion parameters.'
      required:
      - ExecutionRoleArn
      - Description
      - State
    CreateLifecyclePolicyResponse:
      type: object
      properties:
        PolicyId:
          allOf:
          - $ref: '#/components/schemas/PolicyId'
          description: The identifier of the lifecycle policy.
    CreateRule:
      type: object
      properties:
        Location:
          allOf:
          - $ref: '#/components/schemas/LocationValues'
          description: "**[Custom snapshot policies only]** Specifies the destination\
            \ for snapshots created by the policy. The allowed destinations depend\
            \ on the location of the targeted resources.\n\n  * If the policy targets\
            \ resources in a Region, then you must create snapshots in the same Region\
            \ as the source resource.\n\n  * If the policy targets resources in a\
            \ Local Zone, you can create snapshots in the same Local Zone or in its\
            \ parent Region.\n\n  * If the policy targets resources on an Outpost,\
            \ then you can create snapshots on the same Outpost or in its parent Region.\n\
            \nSpecify one of the following values:\n\n  * To create snapshots in the\
            \ same Region as the source resource, specify `CLOUD`.\n\n  * To create\
            \ snapshots in the same Local Zone as the source resource, specify `LOCAL_ZONE`.\n\
            \n  * To create snapshots on the same Outpost as the source resource,\
            \ specify `OUTPOST_LOCAL`.\n\nDefault: `CLOUD`"
        Interval:
          allOf:
          - $ref: '#/components/schemas/Interval'
          description: The interval between snapshots. The supported values are 1,
            2, 3, 4, 6, 8, 12, and 24.
        IntervalUnit:
          allOf:
          - $ref: '#/components/schemas/IntervalUnitValues'
          description: The interval unit.
        Times:
          allOf:
          - $ref: '#/components/schemas/TimesList'
          description: 'The time, in UTC, to start the operation. The supported format
            is hh:mm.


            The operation occurs within a one-hour window following the specified
            time. If you do not specify a time, Amazon Data Lifecycle Manager selects
            a time within the next 24 hours.'
        CronExpression:
          allOf:
          - $ref: '#/components/schemas/CronExpression'
          description: The schedule, as a Cron expression. The schedule interval must
            be between 1 hour and 1 year. For more information, see the [Cron expressions
            reference](https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-cron-expressions.html)
            in the _Amazon EventBridge User Guide_.
        Scripts:
          allOf:
          - $ref: '#/components/schemas/ScriptsList'
          description: '**[Custom snapshot policies that target instances only]**
            Specifies pre and/or post scripts for a snapshot lifecycle policy that
            targets instances. This is useful for creating application-consistent
            snapshots, or for performing specific administrative tasks before or after
            Amazon Data Lifecycle Manager initiates snapshot creation.


            For more information, see [Automating application-consistent snapshots
            with pre and post scripts](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/automate-app-consistent-backups.html).'
      description: "**[Custom snapshot and AMI policies only]** Specifies when the\
        \ policy should create snapshots or AMIs.\n\n  * You must specify either **CronExpression**\
        \ , or **Interval** , **IntervalUnit** , and **Times**.\n\n  * If you need\
        \ to specify an [ArchiveRule](https://docs.aws.amazon.com/dlm/latest/APIReference/API_ArchiveRule.html)\
        \ for the schedule, then you must specify a creation frequency of at least\
        \ 28 days."
    CronExpression:
      type: string
      pattern: ^cron\([^\n]{11,100}\)$
      minLength: 17
      maxLength: 106
    CrossRegionCopyAction:
      type: object
      properties:
        Target:
          allOf:
          - $ref: '#/components/schemas/Target'
          description: The target Region.
        EncryptionConfiguration:
          allOf:
          - $ref: '#/components/schemas/EncryptionConfiguration'
          description: The encryption settings for the copied snapshot.
        RetainRule:
          $ref: '#/components/schemas/CrossRegionCopyRetainRule'
      required:
      - Target
      - EncryptionConfiguration
      description: '**[Event-based policies only]** Specifies a cross-Region copy
        action for event-based policies.


        To specify a cross-Region copy rule for snapshot and AMI policies, use [CrossRegionCopyRule](https://docs.aws.amazon.com/dlm/latest/APIReference/API_CrossRegionCopyRule.html).'
    CrossRegionCopyActionList:
      type: array
      items:
        $ref: '#/components/schemas/CrossRegionCopyAction'
    CrossRegionCopyDeprecateRule:
      type: object
      properties:
        Interval:
          allOf:
          - $ref: '#/components/schemas/Interval'
          description: The period after which to deprecate the cross-Region AMI copies.
            The period must be less than or equal to the cross-Region AMI copy retention
            period, and it can't be greater than 10 years. This is equivalent to 120
            months, 520 weeks, or 3650 days.
        IntervalUnit:
          allOf:
          - $ref: '#/components/schemas/RetentionIntervalUnitValues'
          description: The unit of time in which to measure the **Interval**. For
            example, to deprecate a cross-Region AMI copy after 3 months, specify
            `Interval=3` and `IntervalUnit=MONTHS`.
      description: '**[Custom AMI policies only]** Specifies an AMI deprecation rule
        for cross-Region AMI copies created by an AMI policy.'
    CrossRegionCopyRetainRule:
      type: object
      properties:
        Interval:
          allOf:
          - $ref: '#/components/schemas/Interval'
          description: The amount of time to retain a cross-Region snapshot or AMI
            copy. The maximum is 100 years. This is equivalent to 1200 months, 5200
            weeks, or 36500 days.
        IntervalUnit:
          allOf:
          - $ref: '#/components/schemas/RetentionIntervalUnitValues'
          description: The unit of time for time-based retention. For example, to
            retain a cross-Region copy for 3 months, specify `Interval=3` and `IntervalUnit=MONTHS`.
      description: Specifies a retention rule for cross-Region snapshot copies created
        by snapshot or event-based policies, or cross-Region AMI copies created by
        AMI policies. After the retention period expires, the cross-Region copy is
        deleted.
    CrossRegionCopyRule:
      type: object
      properties:
        TargetRegion:
          allOf:
          - $ref: '#/components/schemas/TargetRegion'
          description: 'Use this parameter for AMI policies only. For snapshot policies,
            use **Target** instead. For snapshot policies created before the **Target**
            parameter was introduced, this parameter indicates the target Region for
            snapshot copies.


            **[Custom AMI policies only]** The target Region or the Amazon Resource
            Name (ARN) of the target Outpost for the snapshot copies.'
        Target:
          allOf:
          - $ref: '#/components/schemas/Target'
          description: 'Use this parameter for snapshot policies only. For AMI policies,
            use **TargetRegion** instead.


            **[Custom snapshot policies only]** The target Region or the Amazon Resource
            Name (ARN) of the target Outpost for the snapshot copies.'
        Encrypted:
          allOf:
          - $ref: '#/components/schemas/Encrypted'
          description: To encrypt a copy of an unencrypted snapshot if encryption
            by default is not enabled, enable encryption using this parameter. Copies
            of encrypted snapshots are encrypted, even if this parameter is false
            or if encryption by default is not enabled.
        CmkArn:
          allOf:
          - $ref: '#/components/schemas/CmkArn'
          description: The Amazon Resource Name (ARN) of the KMS key to use for EBS
            encryption. If this parameter is not specified, the default KMS key for
            the account is used.
        CopyTags:
          allOf:
          - $ref: '#/components/schemas/CopyTagsNullable'
          description: Indicates whether to copy all user-defined tags from the source
            snapshot or AMI to the cross-Region copy.
        RetainRule:
          allOf:
          - $ref: '#/components/schemas/CrossRegionCopyRetainRule'
          description: The retention rule that indicates how long the cross-Region
            snapshot or AMI copies are to be retained in the destination Region.
        DeprecateRule:
          allOf:
          - $ref: '#/components/schemas/CrossRegionCopyDeprecateRule'
          description: '**[Custom AMI policies only]** The AMI deprecation rule for
            cross-Region AMI copies created by the rule.'
      required:
      - Encrypted
      description: '**[Custom snapshot and AMI policies only]** Specifies a cross-Region
        copy rule for a snapshot and AMI policies.


        To specify a cross-Region copy action for event-based polices, use [CrossRegionCopyAction](https://docs.aws.amazon.com/dlm/latest/APIReference/API_CrossRegionCopyAction.html).'
    CrossRegionCopyRules:
      type: array
      items:
        $ref: '#/components/schemas/CrossRegionCopyRule'
    CrossRegionCopyTarget:
      type: object
      properties:
        TargetRegion:
          allOf:
          - $ref: '#/components/schemas/TargetRegion'
          description: The target Region, for example `us-east-1`.
      description: '**[Default policies only]** Specifies a destination Region for
        cross-Region copy actions.'
    CrossRegionCopyTargetList:
      type: array
      items:
        $ref: '#/components/schemas/CrossRegionCopyTarget'
    DefaultPoliciesTypeValues:
      type: string
      enum:
      - VOLUME
      - INSTANCE
      - ALL
    DefaultPolicy:
      type: boolean
    DefaultPolicyTypeValues:
      type: string
      enum:
      - VOLUME
      - INSTANCE
    DeleteLifecyclePolicyRequest:
      type: object
      properties:
        PolicyId:
          allOf:
          - $ref: '#/components/schemas/PolicyId'
          description: The identifier of the lifecycle policy.
      required:
      - PolicyId
    DeleteLifecyclePolicyResponse:
      type: object
      properties: {}
    DeprecateRule:
      type: object
      properties:
        Count:
          allOf:
          - $ref: '#/components/schemas/Count'
          description: If the schedule has a count-based retention rule, this parameter
            specifies the number of oldest AMIs to deprecate. The count must be less
            than or equal to the schedule's retention count, and it can't be greater
            than 1000.
        Interval:
          allOf:
          - $ref: '#/components/schemas/Interval'
          description: If the schedule has an age-based retention rule, this parameter
            specifies the period after which to deprecate AMIs created by the schedule.
            The period must be less than or equal to the schedule's retention period,
            and it can't be greater than 10 years. This is equivalent to 120 months,
            520 weeks, or 3650 days.
        IntervalUnit:
          allOf:
          - $ref: '#/components/schemas/RetentionIntervalUnitValues'
          description: The unit of time in which to measure the **Interval**.
      description: '**[Custom AMI policies only]** Specifies an AMI deprecation rule
        for AMIs created by an AMI lifecycle policy.


        For age-based schedules, you must specify **Interval** and **IntervalUnit**.
        For count-based schedules, you must specify **Count**.'
    DescriptionRegex:
      type: string
      pattern: ^[\p{all}]*$
      minLength: 0
      maxLength: 1000
    Encrypted:
      type: boolean
    EncryptionConfiguration:
      type: object
      properties:
        Encrypted:
          allOf:
          - $ref: '#/components/schemas/Encrypted'
          description: To encrypt a copy of an unencrypted snapshot when encryption
            by default is not enabled, enable encryption using this parameter. Copies
            of encrypted snapshots are encrypted, even if this parameter is false
            or when encryption by default is not enabled.
        CmkArn:
          allOf:
          - $ref: '#/components/schemas/CmkArn'
          description: The Amazon Resource Name (ARN) of the KMS key to use for EBS
            encryption. If this parameter is not specified, the default KMS key for
            the account is used.
      required:
      - Encrypted
      description: '**[Event-based policies only]** Specifies the encryption settings
        for cross-Region snapshot copies created by event-based policies.'
    ErrorCode:
      type: string
    ErrorMessage:
      type: string
    EventParameters:
      type: object
      properties:
        EventType:
          allOf:
          - $ref: '#/components/schemas/EventTypeValues'
          description: The type of event. Currently, only snapshot sharing events
            are supported.
        SnapshotOwner:
          allOf:
          - $ref: '#/components/schemas/SnapshotOwnerList'
          description: The IDs of the Amazon Web Services accounts that can trigger
            policy by sharing snapshots with your account. The policy only runs if
            one of the specified Amazon Web Services accounts shares a snapshot with
            your account.
        DescriptionRegex:
          allOf:
          - $ref: '#/components/schemas/DescriptionRegex'
          description: 'The snapshot description that can trigger the policy. The
            description pattern is specified using a regular expression. The policy
            runs only if a snapshot with a description that matches the specified
            pattern is shared with your account.


            For example, specifying `^.*Created for policy: policy-1234567890abcdef0.*$`
            configures the policy to run only if snapshots created by policy `policy-1234567890abcdef0`
            are shared with your account.'
      required:
      - EventType
      - SnapshotOwner
      - DescriptionRegex
      description: '**[Event-based policies only]** Specifies an event that activates
        an event-based policy.'
    EventSource:
      type: object
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/EventSourceValues'
          description: The source of the event. Currently only managed CloudWatch
            Events rules are supported.
        Parameters:
          allOf:
          - $ref: '#/components/schemas/EventParameters'
          description: Information about the event.
      required:
      - Type
      description: '**[Event-based policies only]** Specifies an event that activates
        an event-based policy.'
    EventSourceValues:
      type: string
      enum:
      - MANAGED_CWE
    EventTypeValues:
      type: string
      enum:
      - shareSnapshot
    ExcludeBootVolume:
      type: boolean
    ExcludeBootVolumes:
      type: boolean
    ExcludeDataVolumeTagList:
      type: array
      items:
        $ref: '#/components/schemas/Tag'
    ExcludeTagsList:
      type: array
      items:
        $ref: '#/components/schemas/Tag'
    ExcludeVolumeTypesList:
      type: array
      items:
        $ref: '#/components/schemas/VolumeTypeValues'
    Exclusions:
      type: object
      properties:
        ExcludeBootVolumes:
          allOf:
          - $ref: '#/components/schemas/ExcludeBootVolumes'
          description: '**[Default policies for EBS snapshots only]** Indicates whether
            to exclude volumes that are attached to instances as the boot volume.
            If you exclude boot volumes, only volumes attached as data (non-boot)
            volumes will be backed up by the policy. To exclude boot volumes, specify
            `true`.'
        ExcludeVolumeTypes:
          allOf:
          - $ref: '#/components/schemas/ExcludeVolumeTypesList'
          description: '**[Default policies for EBS snapshots only]** Specifies the
            volume types to exclude. Volumes of the specified types will not be targeted
            by the policy.'
        ExcludeTags:
          allOf:
          - $ref: '#/components/schemas/ExcludeTagsList'
          description: '**[Default policies for EBS-backed AMIs only]** Specifies
            whether to exclude volumes that have specific tags.'
      description: '**[Default policies only]** Specifies exclusion parameters for
        volumes or instances for which you do not want to create snapshots or AMIs.
        The policy will not create snapshots or AMIs for target resources that match
        any of the specified exclusion parameters.'
    ExecuteOperationOnScriptFailure:
      type: boolean
    ExecutionHandler:
      type: string
      pattern: ^([a-zA-Z0-9_\-.]{3,128}|[a-zA-Z0-9_\-.:/]{3,200}|[A-Z0-9_]+)$
      minLength: 0
      maxLength: 200
    ExecutionHandlerServiceValues:
      type: string
      enum:
      - AWS_SYSTEMS_MANAGER
    ExecutionRoleArn:
      type: string
      pattern: ^arn:aws(-[a-z]{1,3}){0,2}:iam::\d+:role/
      minLength: 0
      maxLength: 2048
    ExtendDeletion:
      type: boolean
    FastRestoreRule:
      type: object
      properties:
        Count:
          allOf:
          - $ref: '#/components/schemas/Count'
          description: The number of snapshots to be enabled with fast snapshot restore.
        Interval:
          allOf:
          - $ref: '#/components/schemas/Interval'
          description: The amount of time to enable fast snapshot restore. The maximum
            is 100 years. This is equivalent to 1200 months, 5200 weeks, or 36500
            days.
        IntervalUnit:
          allOf:
          - $ref: '#/components/schemas/RetentionIntervalUnitValues'
          description: The unit of time for enabling fast snapshot restore.
        AvailabilityZones:
          allOf:
          - $ref: '#/components/schemas/AvailabilityZoneList'
          description: The Availability Zones in which to enable fast snapshot restore.
      required:
      - AvailabilityZones
      description: '**[Custom snapshot policies only]** Specifies a rule for enabling
        fast snapshot restore for snapshots created by snapshot policies. You can
        enable fast snapshot restore based on either a count or a time interval.'
    GetLifecyclePoliciesRequest:
      type: object
      properties:
        PolicyIds:
          allOf:
          - $ref: '#/components/schemas/PolicyIdList'
          description: The identifiers of the data lifecycle policies.
        State:
          allOf:
          - $ref: '#/components/schemas/GettablePolicyStateValues'
          description: The activation state.
        ResourceTypes:
          allOf:
          - $ref: '#/components/schemas/ResourceTypeValuesList'
          description: The resource type.
        TargetTags:
          allOf:
          - $ref: '#/components/schemas/TargetTagsFilterList'
          description: 'The target tag for a policy.


            Tags are strings in the format `key=value`.'
        TagsToAdd:
          allOf:
          - $ref: '#/components/schemas/TagsToAddFilterList'
          description: 'The tags to add to objects created by the policy.


            Tags are strings in the format `key=value`.


            These user-defined tags are added in addition to the Amazon Web Services-added
            lifecycle tags.'
        DefaultPolicyType:
          allOf:
          - $ref: '#/components/schemas/DefaultPoliciesTypeValues'
          description: "**[Default policies only]** Specifies the type of default\
            \ policy to get. Specify one of the following:\n\n  * `VOLUME` \\- To\
            \ get only the default policy for EBS snapshots\n\n  * `INSTANCE` \\-\
            \ To get only the default policy for EBS-backed AMIs\n\n  * `ALL` \\-\
            \ To get all default policies"
    GetLifecyclePoliciesResponse:
      type: object
      properties:
        Policies:
          allOf:
          - $ref: '#/components/schemas/LifecyclePolicySummaryList'
          description: Summary information about the lifecycle policies.
    GetLifecyclePolicyRequest:
      type: object
      properties:
        PolicyId:
          allOf:
          - $ref: '#/components/schemas/PolicyId'
          description: The identifier of the lifecycle policy.
      required:
      - PolicyId
    GetLifecyclePolicyResponse:
      type: object
      properties:
        Policy:
          allOf:
          - $ref: '#/components/schemas/LifecyclePolicy'
          description: Detailed information about the lifecycle policy.
    GettablePolicyStateValues:
      type: string
      enum:
      - ENABLED
      - DISABLED
      - ERROR
    InternalServerException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessage'
        Code:
          $ref: '#/components/schemas/ErrorCode'
      description: The service failed in an unexpected way.
    Interval:
      type: integer
      minimum: 1
    IntervalUnitValues:
      type: string
      enum:
      - HOURS
    InvalidRequestException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessage'
        Code:
          $ref: '#/components/schemas/ErrorCode'
        RequiredParameters:
          allOf:
          - $ref: '#/components/schemas/ParameterList'
          description: The request omitted one or more required parameters.
        MutuallyExclusiveParameters:
          allOf:
          - $ref: '#/components/schemas/ParameterList'
          description: The request included parameters that cannot be provided together.
      description: Bad request. The request is missing required parameters or has
        invalid parameters.
    LifecyclePolicy:
      type: object
      properties:
        PolicyId:
          allOf:
          - $ref: '#/components/schemas/PolicyId'
          description: The identifier of the lifecycle policy.
        Description:
          allOf:
          - $ref: '#/components/schemas/PolicyDescription'
          description: The description of the lifecycle policy.
        State:
          allOf:
          - $ref: '#/components/schemas/GettablePolicyStateValues'
          description: The activation state of the lifecycle policy.
        StatusMessage:
          allOf:
          - $ref: '#/components/schemas/StatusMessage'
          description: The description of the status.
        ExecutionRoleArn:
          allOf:
          - $ref: '#/components/schemas/ExecutionRoleArn'
          description: The Amazon Resource Name (ARN) of the IAM role used to run
            the operations specified by the lifecycle policy.
        DateCreated:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The local date and time when the lifecycle policy was created.
        DateModified:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The local date and time when the lifecycle policy was last
            modified.
        PolicyDetails:
          allOf:
          - $ref: '#/components/schemas/PolicyDetails'
          description: The configuration of the lifecycle policy
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The tags.
        PolicyArn:
          allOf:
          - $ref: '#/components/schemas/PolicyArn'
          description: The Amazon Resource Name (ARN) of the policy.
        DefaultPolicy:
          allOf:
          - $ref: '#/components/schemas/DefaultPolicy'
          description: "Indicates whether the policy is a default lifecycle policy\
            \ or a custom lifecycle policy.\n\n  * `true` \\- the policy is a default\
            \ policy.\n\n  * `false` \\- the policy is a custom policy."
      description: Information about a lifecycle policy.
    LifecyclePolicySummary:
      type: object
      properties:
        PolicyId:
          allOf:
          - $ref: '#/components/schemas/PolicyId'
          description: The identifier of the lifecycle policy.
        Description:
          allOf:
          - $ref: '#/components/schemas/PolicyDescription'
          description: The description of the lifecycle policy.
        State:
          allOf:
          - $ref: '#/components/schemas/GettablePolicyStateValues'
          description: The activation state of the lifecycle policy.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The tags.
        PolicyType:
          allOf:
          - $ref: '#/components/schemas/PolicyTypeValues'
          description: The type of policy. `EBS_SNAPSHOT_MANAGEMENT` indicates that
            the policy manages the lifecycle of Amazon EBS snapshots. `IMAGE_MANAGEMENT`
            indicates that the policy manages the lifecycle of EBS-backed AMIs. `EVENT_BASED_POLICY`
            indicates that the policy automates cross-account snapshot copies for
            snapshots that are shared with your account.
        DefaultPolicy:
          allOf:
          - $ref: '#/components/schemas/DefaultPolicy'
          description: "**[Default policies only]** The type of default policy. Values\
            \ include:\n\n  * `VOLUME` \\- Default policy for EBS snapshots\n\n  *\
            \ `INSTANCE` \\- Default policy for EBS-backed AMIs"
      description: Summary information about a lifecycle policy.
    LifecyclePolicySummaryList:
      type: array
      items:
        $ref: '#/components/schemas/LifecyclePolicySummary'
    LimitExceededException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessage'
        Code:
          $ref: '#/components/schemas/ErrorCode'
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Value is the type of resource for which a limit was exceeded.
      description: The request failed because a limit was exceeded.
    ListTagsForResourceRequest:
      type: object
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/PolicyArn'
          description: The Amazon Resource Name (ARN) of the resource.
      required:
      - ResourceArn
    ListTagsForResourceResponse:
      type: object
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: Information about the tags.
    LocationValues:
      type: string
      enum:
      - CLOUD
      - OUTPOST_LOCAL
      - LOCAL_ZONE
    NoReboot:
      type: boolean
    Parameter:
      type: string
    ParameterList:
      type: array
      items:
        $ref: '#/components/schemas/Parameter'
    Parameters:
      type: object
      properties:
        ExcludeBootVolume:
          allOf:
          - $ref: '#/components/schemas/ExcludeBootVolume'
          description: '**[Custom snapshot policies that target instances only]**
            Indicates whether to exclude the root volume from multi-volume snapshot
            sets. The default is `false`. If you specify `true`, then the root volumes
            attached to targeted instances will be excluded from the multi-volume
            snapshot sets created by the policy.'
        NoReboot:
          allOf:
          - $ref: '#/components/schemas/NoReboot'
          description: '**[Custom AMI policies only]** Indicates whether targeted
            instances are rebooted when the lifecycle policy runs. `true` indicates
            that targeted instances are not rebooted when the policy runs. `false`
            indicates that target instances are rebooted when the policy runs. The
            default is `true` (instances are not rebooted).'
        ExcludeDataVolumeTags:
          allOf:
          - $ref: '#/components/schemas/ExcludeDataVolumeTagList'
          description: '**[Custom snapshot policies that target instances only]**
            The tags used to identify data (non-root) volumes to exclude from multi-volume
            snapshot sets.


            If you create a snapshot lifecycle policy that targets instances and you
            specify tags for this parameter, then data volumes with the specified
            tags that are attached to targeted instances will be excluded from the
            multi-volume snapshot sets created by the policy.'
      description: '**[Custom snapshot and AMI policies only]** Specifies optional
        parameters for snapshot and AMI policies. The set of valid parameters depends
        on the combination of policy type and target resource type.


        If you choose to exclude boot volumes and you specify tags that consequently
        exclude all of the additional data volumes attached to an instance, then Amazon
        Data Lifecycle Manager will not create any snapshots for the affected instance,
        and it will emit a `SnapshotsCreateFailed` Amazon CloudWatch metric. For more
        information, see [Monitor your policies using Amazon CloudWatch](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/monitor-dlm-cw-metrics.html).'
    PolicyArn:
      type: string
      pattern: ^arn:aws(-[a-z]{1,3}){0,2}:dlm:[A-Za-z0-9_/.-]{0,63}:\d+:policy/[0-9A-Za-z_-]{1,128}$
      minLength: 0
      maxLength: 2048
    PolicyDescription:
      type: string
      pattern: ^[0-9A-Za-z _-]+$
      minLength: 0
      maxLength: 500
    PolicyDetails:
      type: object
      properties:
        PolicyType:
          allOf:
          - $ref: '#/components/schemas/PolicyTypeValues'
          description: 'The type of policy. Specify `EBS_SNAPSHOT_MANAGEMENT` to create
            a lifecycle policy that manages the lifecycle of Amazon EBS snapshots.
            Specify `IMAGE_MANAGEMENT` to create a lifecycle policy that manages the
            lifecycle of EBS-backed AMIs. Specify `EVENT_BASED_POLICY ` to create
            an event-based policy that performs specific actions when a defined event
            occurs in your Amazon Web Services account.


            The default is `EBS_SNAPSHOT_MANAGEMENT`.'
        ResourceTypes:
          allOf:
          - $ref: '#/components/schemas/ResourceTypeValuesList'
          description: '**[Custom snapshot policies only]** The target resource type
            for snapshot and AMI lifecycle policies. Use `VOLUME `to create snapshots
            of individual volumes or use `INSTANCE` to create multi-volume snapshots
            from the volumes for an instance.'
        ResourceLocations:
          allOf:
          - $ref: '#/components/schemas/ResourceLocationList'
          description: "**[Custom snapshot and AMI policies only]** The location of\
            \ the resources to backup.\n\n  * If the source resources are located\
            \ in a Region, specify `CLOUD`. In this case, the policy targets all resources\
            \ of the specified type with matching target tags across all Availability\
            \ Zones in the Region.\n\n  * **[Custom snapshot policies only]** If the\
            \ source resources are located in a Local Zone, specify `LOCAL_ZONE`.\
            \ In this case, the policy targets all resources of the specified type\
            \ with matching target tags across all Local Zones in the Region.\n\n\
            \  * If the source resources are located on an Outpost in your account,\
            \ specify `OUTPOST`. In this case, the policy targets all resources of\
            \ the specified type with matching target tags across all of the Outposts\
            \ in your account."
        TargetTags:
          allOf:
          - $ref: '#/components/schemas/TargetTagList'
          description: '**[Custom snapshot and AMI policies only]** The single tag
            that identifies targeted resources for this policy.'
        Schedules:
          allOf:
          - $ref: '#/components/schemas/ScheduleList'
          description: '**[Custom snapshot and AMI policies only]** The schedules
            of policy-defined actions for snapshot and AMI lifecycle policies. A policy
            can have up to four schedules—one mandatory schedule and up to three optional
            schedules.'
        Parameters:
          allOf:
          - $ref: '#/components/schemas/Parameters'
          description: '**[Custom snapshot and AMI policies only]** A set of optional
            parameters for snapshot and AMI lifecycle policies.


            If you are modifying a policy that was created or previously modified
            using the Amazon Data Lifecycle Manager console, then you must include
            this parameter and specify either the default values or the new values
            that you require. You can''t omit this parameter or set its values to
            null.'
        EventSource:
          allOf:
          - $ref: '#/components/schemas/EventSource'
          description: '**[Event-based policies only]** The event that activates the
            event-based policy.'
        Actions:
          allOf:
          - $ref: '#/components/schemas/ActionList'
          description: '**[Event-based policies only]** The actions to be performed
            when the event-based policy is activated. You can specify only one action
            per policy.'
        PolicyLanguage:
          allOf:
          - $ref: '#/components/schemas/PolicyLanguageValues'
          description: "The type of policy to create. Specify one of the following:\n\
            \n  * `SIMPLIFIED` To create a default policy.\n\n  * `STANDARD` To create\
            \ a custom policy."
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceTypeValues'
          description: "**[Default policies only]** Specify the type of default policy\
            \ to create.\n\n  * To create a default policy for EBS snapshots, that\
            \ creates snapshots of all volumes in the Region that do not have recent\
            \ backups, specify `VOLUME`.\n\n  * To create a default policy for EBS-backed\
            \ AMIs, that creates EBS-backed AMIs from all instances in the Region\
            \ that do not have recent backups, specify `INSTANCE`."
        CreateInterval:
          allOf:
          - $ref: '#/components/schemas/CreateInterval'
          description: '**[Default policies only]** Specifies how often the policy
            should run and create snapshots or AMIs. The creation frequency can range
            from 1 to 7 days. If you do not specify a value, the default is 1.


            Default: 1'
        RetainInterval:
          allOf:
          - $ref: '#/components/schemas/RetainInterval'
          description: '**[Default policies only]** Specifies how long the policy
            should retain snapshots or AMIs before deleting them. The retention period
            can range from 2 to 14 days, but it must be greater than the creation
            frequency to ensure that the policy retains at least 1 snapshot or AMI
            at any given time. If you do not specify a value, the default is 7.


            Default: 7'
        CopyTags:
          allOf:
          - $ref: '#/components/schemas/CopyTagsNullable'
          description: '**[Default policies only]** Indicates whether the policy should
            copy tags from the source resource to the snapshot or AMI. If you do not
            specify a value, the default is `false`.


            Default: false'
        CrossRegionCopyTargets:
          allOf:
          - $ref: '#/components/schemas/CrossRegionCopyTargetList'
          description: '**[Default policies only]** Specifies destination Regions
            for snapshot or AMI copies. You can specify up to 3 destination Regions.
            If you do not want to create cross-Region copies, omit this parameter.'
        ExtendDeletion:
          allOf:
          - $ref: '#/components/schemas/ExtendDeletion'
          description: "**[Default policies only]** Defines the snapshot or AMI retention\
            \ behavior for the policy if the source volume or instance is deleted,\
            \ or if the policy enters the error, disabled, or deleted state.\n\nBy\
            \ default (**ExtendDeletion=false**):\n\n  * If a source resource is deleted,\
            \ Amazon Data Lifecycle Manager will continue to delete previously created\
            \ snapshots or AMIs, up to but not including the last one, based on the\
            \ specified retention period. If you want Amazon Data Lifecycle Manager\
            \ to delete all snapshots or AMIs, including the last one, specify `true`.\n\
            \n  * If a policy enters the error, disabled, or deleted state, Amazon\
            \ Data Lifecycle Manager stops deleting snapshots and AMIs. If you want\
            \ Amazon Data Lifecycle Manager to continue deleting snapshots or AMIs,\
            \ including the last one, if the policy enters one of these states, specify\
            \ `true`.\n\nIf you enable extended deletion (**ExtendDeletion=true**),\
            \ you override both default behaviors simultaneously.\n\nIf you do not\
            \ specify a value, the default is `false`.\n\nDefault: false"
        Exclusions:
          allOf:
          - $ref: '#/components/schemas/Exclusions'
          description: '**[Default policies only]** Specifies exclusion parameters
            for volumes or instances for which you do not want to create snapshots
            or AMIs. The policy will not create snapshots or AMIs for target resources
            that match any of the specified exclusion parameters.'
      description: Specifies the configuration of a lifecycle policy.
    PolicyId:
      type: string
      pattern: ^policy-[a-f0-9]+$
      minLength: 0
      maxLength: 64
    PolicyIdList:
      type: array
      items:
        $ref: '#/components/schemas/PolicyId'
    PolicyLanguageValues:
      type: string
      enum:
      - SIMPLIFIED
      - STANDARD
    PolicyTypeValues:
      type: string
      enum:
      - EBS_SNAPSHOT_MANAGEMENT
      - IMAGE_MANAGEMENT
      - EVENT_BASED_POLICY
    ResourceLocationList:
      type: array
      items:
        $ref: '#/components/schemas/ResourceLocationValues'
    ResourceLocationValues:
      type: string
      enum:
      - CLOUD
      - OUTPOST
      - LOCAL_ZONE
    ResourceNotFoundException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessage'
        Code:
          $ref: '#/components/schemas/ErrorCode'
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Value is the type of resource that was not found.
        ResourceIds:
          allOf:
          - $ref: '#/components/schemas/PolicyIdList'
          description: Value is a list of resource IDs that were not found.
      description: A requested resource was not found.
    ResourceTypeValues:
      type: string
      enum:
      - VOLUME
      - INSTANCE
    ResourceTypeValuesList:
      type: array
      items:
        $ref: '#/components/schemas/ResourceTypeValues'
    RetainInterval:
      type: integer
      minimum: 1
    RetainRule:
      type: object
      properties:
        Count:
          allOf:
          - $ref: '#/components/schemas/StandardTierRetainRuleCount'
          description: The number of snapshots to retain for each volume, up to a
            maximum of 1000. For example if you want to retain a maximum of three
            snapshots, specify `3`. When the fourth snapshot is created, the oldest
            retained snapshot is deleted, or it is moved to the archive tier if you
            have specified an [ArchiveRule](https://docs.aws.amazon.com/dlm/latest/APIReference/API_ArchiveRule.html).
        Interval:
          allOf:
          - $ref: '#/components/schemas/StandardTierRetainRuleInterval'
          description: The amount of time to retain each snapshot. The maximum is
            100 years. This is equivalent to 1200 months, 5200 weeks, or 36500 days.
        IntervalUnit:
          allOf:
          - $ref: '#/components/schemas/RetentionIntervalUnitValues'
          description: The unit of time for time-based retention. For example, to
            retain snapshots for 3 months, specify `Interval=3` and `IntervalUnit=MONTHS`.
            Once the snapshot has been retained for 3 months, it is deleted, or it
            is moved to the archive tier if you have specified an [ArchiveRule](https://docs.aws.amazon.com/dlm/latest/APIReference/API_ArchiveRule.html).
      description: "**[Custom snapshot and AMI policies only]** Specifies a retention\
        \ rule for snapshots created by snapshot policies, or for AMIs created by\
        \ AMI policies.\n\nFor snapshot policies that have an [ArchiveRule](https://docs.aws.amazon.com/dlm/latest/APIReference/API_ArchiveRule.html),\
        \ this retention rule applies to standard tier retention. When the retention\
        \ threshold is met, snapshots are moved from the standard to the archive tier.\n\
        \nFor snapshot policies that do not have an **ArchiveRule** , snapshots are\
        \ permanently deleted when this retention threshold is met.\n\nYou can retain\
        \ snapshots based on either a count or a time interval.\n\n  * **Count-based\
        \ retention**\n\nYou must specify **Count**. If you specify an [ArchiveRule](https://docs.aws.amazon.com/dlm/latest/APIReference/API_ArchiveRule.html)\
        \ for the schedule, then you can specify a retention count of `0` to archive\
        \ snapshots immediately after creation. If you specify a [FastRestoreRule](https://docs.aws.amazon.com/dlm/latest/APIReference/API_FastRestoreRule.html),\
        \ [ShareRule](https://docs.aws.amazon.com/dlm/latest/APIReference/API_ShareRule.html),\
        \ or a [CrossRegionCopyRule](https://docs.aws.amazon.com/dlm/latest/APIReference/API_CrossRegionCopyRule.html),\
        \ then you must specify a retention count of `1` or more.\n\n  * **Age-based\
        \ retention**\n\nYou must specify **Interval** and **IntervalUnit**. If you\
        \ specify an [ArchiveRule](https://docs.aws.amazon.com/dlm/latest/APIReference/API_ArchiveRule.html)\
        \ for the schedule, then you can specify a retention interval of `0` days\
        \ to archive snapshots immediately after creation. If you specify a [FastRestoreRule](https://docs.aws.amazon.com/dlm/latest/APIReference/API_FastRestoreRule.html),\
        \ [ShareRule](https://docs.aws.amazon.com/dlm/latest/APIReference/API_ShareRule.html),\
        \ or a [CrossRegionCopyRule](https://docs.aws.amazon.com/dlm/latest/APIReference/API_CrossRegionCopyRule.html),\
        \ then you must specify a retention interval of `1` day or more."
    RetentionArchiveTier:
      type: object
      properties:
        Count:
          allOf:
          - $ref: '#/components/schemas/Count'
          description: The maximum number of snapshots to retain in the archive storage
            tier for each volume. The count must ensure that each snapshot remains
            in the archive tier for at least 90 days. For example, if the schedule
            creates snapshots every 30 days, you must specify a count of 3 or more
            to ensure that each snapshot is archived for at least 90 days.
        Interval:
          allOf:
          - $ref: '#/components/schemas/Interval'
          description: Specifies the period of time to retain snapshots in the archive
            tier. After this period expires, the snapshot is permanently deleted.
        IntervalUnit:
          allOf:
          - $ref: '#/components/schemas/RetentionIntervalUnitValues'
          description: The unit of time in which to measure the **Interval**. For
            example, to retain a snapshots in the archive tier for 6 months, specify
            `Interval=6` and `IntervalUnit=MONTHS`.
      description: '**[Custom snapshot policies only]** Describes the retention rule
        for archived snapshots. Once the archive retention threshold is met, the snapshots
        are permanently deleted from the archive tier.


        The archive retention rule must retain snapshots in the archive tier for a
        minimum of 90 days.


        For **count-based schedules** , you must specify **Count**. For **age-based
        schedules** , you must specify **Interval** and **IntervalUnit**.


        For more information about using snapshot archiving, see [Considerations for
        snapshot lifecycle policies](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/snapshot-ami-policy.html#dlm-archive).'
    RetentionIntervalUnitValues:
      type: string
      enum:
      - DAYS
      - WEEKS
      - MONTHS
      - YEARS
    Schedule:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/ScheduleName'
          description: The name of the schedule.
        CopyTags:
          allOf:
          - $ref: '#/components/schemas/CopyTags'
          description: Copy all user-defined tags on a source volume to snapshots
            of the volume created by this policy.
        TagsToAdd:
          allOf:
          - $ref: '#/components/schemas/TagsToAddList'
          description: The tags to apply to policy-created resources. These user-defined
            tags are in addition to the Amazon Web Services-added lifecycle tags.
        VariableTags:
          allOf:
          - $ref: '#/components/schemas/VariableTagsList'
          description: '**[AMI policies and snapshot policies that target instances
            only]** A collection of key/value pairs with values determined dynamically
            when the policy is executed. Keys may be any valid Amazon EC2 tag key.
            Values must be in one of the two following formats: `$(instance-id)` or
            `$(timestamp)`. Variable tags are only valid for EBS Snapshot Management
            – Instance policies.'
        CreateRule:
          allOf:
          - $ref: '#/components/schemas/CreateRule'
          description: The creation rule.
        RetainRule:
          allOf:
          - $ref: '#/components/schemas/RetainRule'
          description: The retention rule for snapshots or AMIs created by the policy.
        FastRestoreRule:
          allOf:
          - $ref: '#/components/schemas/FastRestoreRule'
          description: '**[Custom snapshot policies only]** The rule for enabling
            fast snapshot restore.'
        CrossRegionCopyRules:
          allOf:
          - $ref: '#/components/schemas/CrossRegionCopyRules'
          description: 'Specifies a rule for copying snapshots or AMIs across Regions.


            You can''t specify cross-Region copy rules for policies that create snapshots
            on an Outpost or in a Local Zone. If the policy creates snapshots in a
            Region, then snapshots can be copied to up to three Regions or Outposts.'
        ShareRules:
          allOf:
          - $ref: '#/components/schemas/ShareRules'
          description: '**[Custom snapshot policies only]** The rule for sharing snapshots
            with other Amazon Web Services accounts.'
        DeprecateRule:
          allOf:
          - $ref: '#/components/schemas/DeprecateRule'
          description: '**[Custom AMI policies only]** The AMI deprecation rule for
            the schedule.'
        ArchiveRule:
          allOf:
          - $ref: '#/components/schemas/ArchiveRule'
          description: '**[Custom snapshot policies that target volumes only]** The
            snapshot archiving rule for the schedule. When you specify an archiving
            rule, snapshots are automatically moved from the standard tier to the
            archive tier once the schedule''s retention threshold is met. Snapshots
            are then retained in the archive tier for the archive retention period
            that you specify.


            For more information about using snapshot archiving, see [Considerations
            for snapshot lifecycle policies](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/snapshot-ami-policy.html#dlm-archive).'
      description: '**[Custom snapshot and AMI policies only]** Specifies a schedule
        for a snapshot or AMI lifecycle policy.'
    ScheduleList:
      type: array
      items:
        $ref: '#/components/schemas/Schedule'
    ScheduleName:
      type: string
      pattern: ^[0-9A-Za-z _-]+$
      minLength: 0
      maxLength: 120
    Script:
      type: object
      properties:
        Stages:
          allOf:
          - $ref: '#/components/schemas/StagesList'
          description: "Indicate which scripts Amazon Data Lifecycle Manager should\
            \ run on target instances. Pre scripts run before Amazon Data Lifecycle\
            \ Manager initiates snapshot creation. Post scripts run after Amazon Data\
            \ Lifecycle Manager initiates snapshot creation.\n\n  * To run a pre script\
            \ only, specify `PRE`. In this case, Amazon Data Lifecycle Manager calls\
            \ the SSM document with the `pre-script` parameter before initiating snapshot\
            \ creation.\n\n  * To run a post script only, specify `POST`. In this\
            \ case, Amazon Data Lifecycle Manager calls the SSM document with the\
            \ `post-script` parameter after initiating snapshot creation.\n\n  * To\
            \ run both pre and post scripts, specify both `PRE` and `POST`. In this\
            \ case, Amazon Data Lifecycle Manager calls the SSM document with the\
            \ `pre-script` parameter before initiating snapshot creation, and then\
            \ it calls the SSM document again with the `post-script` parameter after\
            \ initiating snapshot creation.\n\nIf you are automating VSS Backups,\
            \ omit this parameter.\n\nDefault: PRE and POST"
        ExecutionHandlerService:
          allOf:
          - $ref: '#/components/schemas/ExecutionHandlerServiceValues'
          description: "Indicates the service used to execute the pre and/or post\
            \ scripts.\n\n  * If you are using custom SSM documents or automating\
            \ application-consistent snapshots of SAP HANA workloads, specify `AWS_SYSTEMS_MANAGER`.\n\
            \n  * If you are automating VSS Backups, omit this parameter.\n\nDefault:\
            \ AWS_SYSTEMS_MANAGER"
        ExecutionHandler:
          allOf:
          - $ref: '#/components/schemas/ExecutionHandler'
          description: "The SSM document that includes the pre and/or post scripts\
            \ to run.\n\n  * If you are automating VSS backups, specify `AWS_VSS_BACKUP`.\
            \ In this case, Amazon Data Lifecycle Manager automatically uses the `AWSEC2-CreateVssSnapshot`\
            \ SSM document.\n\n  * If you are automating application-consistent snapshots\
            \ for SAP HANA workloads, specify `AWSSystemsManagerSAP-CreateDLMSnapshotForSAPHANA`.\n\
            \n  * If you are using a custom SSM document that you own, specify either\
            \ the name or ARN of the SSM document. If you are using a custom SSM document\
            \ that is shared with you, specify the ARN of the SSM document."
        ExecuteOperationOnScriptFailure:
          allOf:
          - $ref: '#/components/schemas/ExecuteOperationOnScriptFailure'
          description: "Indicates whether Amazon Data Lifecycle Manager should default\
            \ to crash-consistent snapshots if the pre script fails.\n\n  * To default\
            \ to crash consistent snapshot if the pre script fails, specify `true`.\n\
            \n  * To skip the instance for snapshot creation if the pre script fails,\
            \ specify `false`.\n\nThis parameter is supported only if you run a pre\
            \ script. If you run a post script only, omit this parameter.\n\nDefault:\
            \ true"
        ExecutionTimeout:
          allOf:
          - $ref: '#/components/schemas/ScriptExecutionTimeout'
          description: 'Specifies a timeout period, in seconds, after which Amazon
            Data Lifecycle Manager fails the script run attempt if it has not completed.
            If a script does not complete within its timeout period, Amazon Data Lifecycle
            Manager fails the attempt. The timeout period applies to the pre and post
            scripts individually.


            If you are automating VSS Backups, omit this parameter.


            Default: 10'
        MaximumRetryCount:
          allOf:
          - $ref: '#/components/schemas/ScriptMaximumRetryCount'
          description: "Specifies the number of times Amazon Data Lifecycle Manager\
            \ should retry scripts that fail.\n\n  * If the pre script fails, Amazon\
            \ Data Lifecycle Manager retries the entire snapshot creation process,\
            \ including running the pre and post scripts.\n\n  * If the post script\
            \ fails, Amazon Data Lifecycle Manager retries the post script only; in\
            \ this case, the pre script will have completed and the snapshot might\
            \ have been created.\n\nIf you do not want Amazon Data Lifecycle Manager\
            \ to retry failed scripts, specify `0`.\n\nDefault: 0"
      required:
      - ExecutionHandler
      description: '**[Custom snapshot policies that target instances only]** Information
        about pre and/or post scripts for a snapshot lifecycle policy that targets
        instances. For more information, see [ Automating application-consistent snapshots
        with pre and post scripts](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/automate-app-consistent-backups.html).'
    ScriptExecutionTimeout:
      type: integer
      minimum: 10
      maximum: 120
    ScriptMaximumRetryCount:
      type: integer
      minimum: 0
      maximum: 3
    ScriptsList:
      type: array
      items:
        $ref: '#/components/schemas/Script'
    SettablePolicyStateValues:
      type: string
      enum:
      - ENABLED
      - DISABLED
    ShareRule:
      type: object
      properties:
        TargetAccounts:
          allOf:
          - $ref: '#/components/schemas/ShareTargetAccountList'
          description: The IDs of the Amazon Web Services accounts with which to share
            the snapshots.
        UnshareInterval:
          allOf:
          - $ref: '#/components/schemas/Interval'
          description: The period after which snapshots that are shared with other
            Amazon Web Services accounts are automatically unshared.
        UnshareIntervalUnit:
          allOf:
          - $ref: '#/components/schemas/RetentionIntervalUnitValues'
          description: The unit of time for the automatic unsharing interval.
      required:
      - TargetAccounts
      description: '**[Custom snapshot policies only]** Specifies a rule for sharing
        snapshots across Amazon Web Services accounts.'
    ShareRules:
      type: array
      items:
        $ref: '#/components/schemas/ShareRule'
    ShareTargetAccountList:
      type: array
      items:
        $ref: '#/components/schemas/AwsAccountId'
    SnapshotOwnerList:
      type: array
      items:
        $ref: '#/components/schemas/AwsAccountId'
    StageValues:
      type: string
      enum:
      - PRE
      - POST
    StagesList:
      type: array
      items:
        $ref: '#/components/schemas/StageValues'
    StandardTierRetainRuleCount:
      type: integer
      minimum: 0
      maximum: 1000
    StandardTierRetainRuleInterval:
      type: integer
      minimum: 0
    StatusMessage:
      type: string
      pattern: ^[\p{all}]*$
      minLength: 0
      maxLength: 500
    String:
      type: string
      pattern: ^[\p{all}]*$
      minLength: 0
      maxLength: 500
    Tag:
      type: object
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The tag key.
        Value:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The tag value.
      required:
      - Key
      - Value
      description: Specifies a tag for a resource.
    TagFilter:
      type: string
      pattern: ^[\p{all}]*$
      minLength: 0
      maxLength: 256
    TagKey:
      type: string
      pattern: ^(?!aws:)[a-zA-Z+-=._:/]+$
      minLength: 1
      maxLength: 128
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
    TagMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
    TagResourceRequest:
      type: object
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/PolicyArn'
          description: The Amazon Resource Name (ARN) of the resource.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: One or more tags.
      required:
      - ResourceArn
      - Tags
    TagResourceResponse:
      type: object
      properties: {}
    TagValue:
      type: string
      pattern: ^[\p{all}]*$
      minLength: 0
      maxLength: 256
    TagsToAddFilterList:
      type: array
      items:
        $ref: '#/components/schemas/TagFilter'
    TagsToAddList:
      type: array
      items:
        $ref: '#/components/schemas/Tag'
    Target:
      type: string
      pattern: ^[\w:\-\/\*]+$
      minLength: 0
      maxLength: 2048
    TargetRegion:
      type: string
      pattern: ^([a-z]+-){2,3}\d$
      minLength: 0
      maxLength: 16
    TargetTagList:
      type: array
      items:
        $ref: '#/components/schemas/Tag'
    TargetTagsFilterList:
      type: array
      items:
        $ref: '#/components/schemas/TagFilter'
    Time:
      type: string
      pattern: ^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$
      minLength: 5
      maxLength: 5
    TimesList:
      type: array
      items:
        $ref: '#/components/schemas/Time'
    Timestamp:
      type: string
      format: date-time
    UntagResourceRequest:
      type: object
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/PolicyArn'
          description: The Amazon Resource Name (ARN) of the resource.
        TagKeys:
          allOf:
          - $ref: '#/components/schemas/TagKeyList'
          description: The tag keys.
      required:
      - ResourceArn
      - TagKeys
    UntagResourceResponse:
      type: object
      properties: {}
    UpdateLifecyclePolicyRequest:
      type: object
      properties:
        PolicyId:
          allOf:
          - $ref: '#/components/schemas/PolicyId'
          description: The identifier of the lifecycle policy.
        ExecutionRoleArn:
          allOf:
          - $ref: '#/components/schemas/ExecutionRoleArn'
          description: The Amazon Resource Name (ARN) of the IAM role used to run
            the operations specified by the lifecycle policy.
        State:
          allOf:
          - $ref: '#/components/schemas/SettablePolicyStateValues'
          description: The desired activation state of the lifecycle policy after
            creation.
        Description:
          allOf:
          - $ref: '#/components/schemas/PolicyDescription'
          description: A description of the lifecycle policy.
        PolicyDetails:
          allOf:
          - $ref: '#/components/schemas/PolicyDetails'
          description: The configuration of the lifecycle policy. You cannot update
            the policy type or the resource type.
        CreateInterval:
          allOf:
          - $ref: '#/components/schemas/CreateInterval'
          description: '**[Default policies only]** Specifies how often the policy
            should run and create snapshots or AMIs. The creation frequency can range
            from 1 to 7 days.'
        RetainInterval:
          allOf:
          - $ref: '#/components/schemas/RetainInterval'
          description: '**[Default policies only]** Specifies how long the policy
            should retain snapshots or AMIs before deleting them. The retention period
            can range from 2 to 14 days, but it must be greater than the creation
            frequency to ensure that the policy retains at least 1 snapshot or AMI
            at any given time.'
        CopyTags:
          allOf:
          - $ref: '#/components/schemas/CopyTagsNullable'
          description: '**[Default policies only]** Indicates whether the policy should
            copy tags from the source resource to the snapshot or AMI.'
        ExtendDeletion:
          allOf:
          - $ref: '#/components/schemas/ExtendDeletion'
          description: "**[Default policies only]** Defines the snapshot or AMI retention\
            \ behavior for the policy if the source volume or instance is deleted,\
            \ or if the policy enters the error, disabled, or deleted state.\n\nBy\
            \ default (**ExtendDeletion=false**):\n\n  * If a source resource is deleted,\
            \ Amazon Data Lifecycle Manager will continue to delete previously created\
            \ snapshots or AMIs, up to but not including the last one, based on the\
            \ specified retention period. If you want Amazon Data Lifecycle Manager\
            \ to delete all snapshots or AMIs, including the last one, specify `true`.\n\
            \n  * If a policy enters the error, disabled, or deleted state, Amazon\
            \ Data Lifecycle Manager stops deleting snapshots and AMIs. If you want\
            \ Amazon Data Lifecycle Manager to continue deleting snapshots or AMIs,\
            \ including the last one, if the policy enters one of these states, specify\
            \ `true`.\n\nIf you enable extended deletion (**ExtendDeletion=true**),\
            \ you override both default behaviors simultaneously.\n\nDefault: false"
        CrossRegionCopyTargets:
          allOf:
          - $ref: '#/components/schemas/CrossRegionCopyTargetList'
          description: '**[Default policies only]** Specifies destination Regions
            for snapshot or AMI copies. You can specify up to 3 destination Regions.
            If you do not want to create cross-Region copies, omit this parameter.'
        Exclusions:
          allOf:
          - $ref: '#/components/schemas/Exclusions'
          description: '**[Default policies only]** Specifies exclusion parameters
            for volumes or instances for which you do not want to create snapshots
            or AMIs. The policy will not create snapshots or AMIs for target resources
            that match any of the specified exclusion parameters.'
      required:
      - PolicyId
    UpdateLifecyclePolicyResponse:
      type: object
      properties: {}
    VariableTagsList:
      type: array
      items:
        $ref: '#/components/schemas/Tag'
    VolumeTypeValues:
      type: string
