openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: devops_guru
  x-aws-serviceName: devopsguru
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-07'
  version: '2020-12-01'
  title: Amazon DevOps Guru
  description: |-
    Amazon DevOps Guru is a fully managed service that helps you identify anomalous behavior in business critical operational applications. You specify the Amazon Web Services resources that you want DevOps Guru to cover, then the Amazon CloudWatch metrics and Amazon Web Services CloudTrail events related to those resources are analyzed. When anomalous behavior is detected, DevOps Guru creates an _insight_ that includes recommendations, related events, and related metrics that can help you improve your operational applications. For more information, see [What is Amazon DevOps Guru](https://docs.aws.amazon.com/devops-guru/latest/userguide/welcome.html).

    You can specify 1 or 2 Amazon Simple Notification Service topics so you are notified every time a new insight is created. You can also enable DevOps Guru to generate an OpsItem in Amazon Web Services Systems Manager for each insight to help you manage and track your work addressing insights.

    To learn about the DevOps Guru workflow, see [How DevOps Guru works](https://docs.aws.amazon.com/devops-guru/latest/userguide/welcome.html#how-it-works). To learn about DevOps Guru concepts, see [Concepts in DevOps Guru](https://docs.aws.amazon.com/devops-guru/latest/userguide/concepts.html).
servers:
- description: The Amazon DevOps Guru regional endpoint
  url: https://devops-guru.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths:
  /channels:
    put:
      operationId: AddNotificationChannel
      description: |-
        Adds a notification channel to DevOps Guru. A notification channel is used to notify you about important DevOps Guru events, such as when an insight is generated.

        If you use an Amazon SNS topic in another account, you must attach a policy to it that grants DevOps Guru permission to send it notifications. DevOps Guru adds the required policy on your behalf to send notifications using Amazon SNS in your account. DevOps Guru only supports standard SNS topics. For more information, see [Permissions for Amazon SNS topics](https://docs.aws.amazon.com/devops-guru/latest/userguide/sns-required-permissions.html).

        If you use an Amazon SNS topic that is encrypted by an Amazon Web Services Key Management Service customer-managed key (CMK), then you must add permissions to the CMK. For more information, see [Permissions for Amazon Web Services KMSâ€“encrypted Amazon SNS topics](https://docs.aws.amazon.com/devops-guru/latest/userguide/sns-kms-permissions.html).
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Config:
                  $ref: '#/components/schemas/NotificationChannelConfig'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions. For more information, see [Access Management](https://docs.aws.amazon.com/IAM/latest/UserGuide/access.html) in the _IAM User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            An exception that is thrown when a conflict occurs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An internal failure in an Amazon service occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            A requested resource could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            The request contains a value that exceeds a maximum quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The request was denied due to a request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Contains information about data passed in to a field during a request that is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    post:
      operationId: ListNotificationChannels
      description: |-
        Returns a list of notification channels configured for DevOps Guru. Each notification channel is used to notify you when DevOps Guru generates an insight that contains information about how to improve your operations. The one supported notification channel is Amazon Simple Notification Service (Amazon SNS).
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                NextToken:
                  $ref: '#/components/schemas/UuidNextToken'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions. For more information, see [Access Management](https://docs.aws.amazon.com/IAM/latest/UserGuide/access.html) in the _IAM User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal failure in an Amazon service occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied due to a request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Contains information about data passed in to a field during a request that is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /insights/{Id}:
    delete:
      operationId: DeleteInsight
      description: |-
        Deletes the insight along with the associated anomalies, events and recommendations.
      parameters:
      - name: Id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InsightId'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions. For more information, see [Access Management](https://docs.aws.amazon.com/IAM/latest/UserGuide/access.html) in the _IAM User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            An exception that is thrown when a conflict occurs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An internal failure in an Amazon service occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            A requested resource could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to a request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Contains information about data passed in to a field during a request that is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: DescribeInsight
      description: |-
        Returns details about an insight that you specify using its ID.
      parameters:
      - name: Id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InsightId'
      - name: AccountId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/AwsAccountId'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions. For more information, see [Access Management](https://docs.aws.amazon.com/IAM/latest/UserGuide/access.html) in the _IAM User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal failure in an Amazon service occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            A requested resource could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to a request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Contains information about data passed in to a field during a request that is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /accounts/health:
    get:
      operationId: DescribeAccountHealth
      description: |-
        Returns the number of open reactive insights, the number of open proactive insights, and the number of metrics analyzed in your Amazon Web Services account. Use these numbers to gauge the health of operations in your Amazon Web Services account.
      parameters: []
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions. For more information, see [Access Management](https://docs.aws.amazon.com/IAM/latest/UserGuide/access.html) in the _IAM User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal failure in an Amazon service occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied due to a request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Contains information about data passed in to a field during a request that is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /accounts/overview:
    post:
      operationId: DescribeAccountOverview
      description: |-
        For the time range passed in, returns the number of open reactive insight that were created, the number of open proactive insights that were created, and the Mean Time to Recover (MTTR) for all closed reactive insights.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                FromTime:
                  $ref: '#/components/schemas/Timestamp'
                ToTime:
                  $ref: '#/components/schemas/Timestamp'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions. For more information, see [Access Management](https://docs.aws.amazon.com/IAM/latest/UserGuide/access.html) in the _IAM User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal failure in an Amazon service occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied due to a request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Contains information about data passed in to a field during a request that is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /anomalies/{Id}:
    get:
      operationId: DescribeAnomaly
      description: |-
        Returns details about an anomaly that you specify using its ID.
      parameters:
      - name: Id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AnomalyId'
      - name: AccountId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/AwsAccountId'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions. For more information, see [Access Management](https://docs.aws.amazon.com/IAM/latest/UserGuide/access.html) in the _IAM User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal failure in an Amazon service occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            A requested resource could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to a request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Contains information about data passed in to a field during a request that is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /event-sources:
    post:
      operationId: DescribeEventSourcesConfig
      description: |-
        Returns the integration status of services that are integrated with DevOps Guru as Consumer via EventBridge. The one service that can be integrated with DevOps Guru is Amazon CodeGuru Profiler, which can produce proactive recommendations which can be stored and viewed in DevOps Guru.
      parameters: []
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions. For more information, see [Access Management](https://docs.aws.amazon.com/IAM/latest/UserGuide/access.html) in the _IAM User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal failure in an Amazon service occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied due to a request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Contains information about data passed in to a field during a request that is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    put:
      operationId: UpdateEventSourcesConfig
      description: |-
        Enables or disables integration with a service that can be integrated with DevOps Guru. The one service that can be integrated with DevOps Guru is Amazon CodeGuru Profiler, which can produce proactive recommendations which can be stored and viewed in DevOps Guru.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                EventSources:
                  $ref: '#/components/schemas/EventSourcesConfig'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions. For more information, see [Access Management](https://docs.aws.amazon.com/IAM/latest/UserGuide/access.html) in the _IAM User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal failure in an Amazon service occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied due to a request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Contains information about data passed in to a field during a request that is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /feedback:
    post:
      operationId: DescribeFeedback
      description: |-
        Returns the most recent feedback submitted in the current Amazon Web Services account and Region.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                InsightId:
                  $ref: '#/components/schemas/InsightId'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions. For more information, see [Access Management](https://docs.aws.amazon.com/IAM/latest/UserGuide/access.html) in the _IAM User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal failure in an Amazon service occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            A requested resource could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to a request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Contains information about data passed in to a field during a request that is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    put:
      operationId: PutFeedback
      description: |-
        Collects customer feedback about the specified insight.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                InsightFeedback:
                  $ref: '#/components/schemas/InsightFeedback'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions. For more information, see [Access Management](https://docs.aws.amazon.com/IAM/latest/UserGuide/access.html) in the _IAM User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            An exception that is thrown when a conflict occurs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An internal failure in an Amazon service occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            A requested resource could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to a request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Contains information about data passed in to a field during a request that is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /organization/health:
    post:
      operationId: DescribeOrganizationHealth
      description: |-
        Returns active insights, predictive insights, and resource hours analyzed in last hour.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AccountIds:
                  $ref: '#/components/schemas/AccountIdList'
                OrganizationalUnitIds:
                  $ref: '#/components/schemas/OrganizationalUnitIdList'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions. For more information, see [Access Management](https://docs.aws.amazon.com/IAM/latest/UserGuide/access.html) in the _IAM User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal failure in an Amazon service occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied due to a request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Contains information about data passed in to a field during a request that is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /organization/overview:
    post:
      operationId: DescribeOrganizationOverview
      description: |-
        Returns an overview of your organization's history based on the specified time range. The overview includes the total reactive and proactive insights.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                FromTime:
                  $ref: '#/components/schemas/Timestamp'
                ToTime:
                  $ref: '#/components/schemas/Timestamp'
                AccountIds:
                  $ref: '#/components/schemas/AccountIdList'
                OrganizationalUnitIds:
                  $ref: '#/components/schemas/OrganizationalUnitIdList'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions. For more information, see [Access Management](https://docs.aws.amazon.com/IAM/latest/UserGuide/access.html) in the _IAM User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal failure in an Amazon service occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied due to a request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Contains information about data passed in to a field during a request that is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /organization/health/resource-collection:
    post:
      operationId: DescribeOrganizationResourceCollectionHealth
      description: |-
        Provides an overview of your system's health. If additional member accounts are part of your organization, you can filter those accounts using the `AccountIds` field.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                OrganizationResourceCollectionType:
                  $ref: '#/components/schemas/OrganizationResourceCollectionType'
                AccountIds:
                  $ref: '#/components/schemas/AccountIdList'
                OrganizationalUnitIds:
                  $ref: '#/components/schemas/OrganizationalUnitIdList'
                NextToken:
                  $ref: '#/components/schemas/UuidNextToken'
                MaxResults:
                  $ref: '#/components/schemas/OrganizationResourceCollectionMaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions. For more information, see [Access Management](https://docs.aws.amazon.com/IAM/latest/UserGuide/access.html) in the _IAM User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal failure in an Amazon service occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied due to a request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Contains information about data passed in to a field during a request that is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /accounts/health/resource-collection/{ResourceCollectionType}:
    get:
      operationId: DescribeResourceCollectionHealth
      description: |-
        Returns the number of open proactive insights, open reactive insights, and the Mean Time to Recover (MTTR) for all closed insights in resource collections in your account. You specify the type of Amazon Web Services resources collection. The two types of Amazon Web Services resource collections supported are Amazon Web Services CloudFormation stacks and Amazon Web Services resources that contain the same Amazon Web Services tag. DevOps Guru can be configured to analyze the Amazon Web Services resources that are defined in the stacks or that are tagged using the same tag _key_. You can specify up to 500 Amazon Web Services CloudFormation stacks.
      parameters:
      - name: ResourceCollectionType
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceCollectionType'
      - name: NextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/UuidNextToken'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions. For more information, see [Access Management](https://docs.aws.amazon.com/IAM/latest/UserGuide/access.html) in the _IAM User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal failure in an Amazon service occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied due to a request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Contains information about data passed in to a field during a request that is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /service-integrations:
    get:
      operationId: DescribeServiceIntegration
      description: |-
        Returns the integration status of services that are integrated with DevOps Guru. The one service that can be integrated with DevOps Guru is Amazon Web Services Systems Manager, which can be used to create an OpsItem for each generated insight.
      parameters: []
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions. For more information, see [Access Management](https://docs.aws.amazon.com/IAM/latest/UserGuide/access.html) in the _IAM User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal failure in an Amazon service occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            A requested resource could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to a request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Contains information about data passed in to a field during a request that is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    put:
      operationId: UpdateServiceIntegration
      description: |-
        Enables or disables integration with a service that can be integrated with DevOps Guru. The one service that can be integrated with DevOps Guru is Amazon Web Services Systems Manager, which can be used to create an OpsItem for each generated insight.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ServiceIntegration:
                  $ref: '#/components/schemas/UpdateServiceIntegrationConfig'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions. For more information, see [Access Management](https://docs.aws.amazon.com/IAM/latest/UserGuide/access.html) in the _IAM User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            An exception that is thrown when a conflict occurs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An internal failure in an Amazon service occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied due to a request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Contains information about data passed in to a field during a request that is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /cost-estimation:
    get:
      operationId: GetCostEstimation
      description: |-
        Returns an estimate of the monthly cost for DevOps Guru to analyze your Amazon Web Services resources. For more information, see [Estimate your Amazon DevOps Guru costs](https://docs.aws.amazon.com/devops-guru/latest/userguide/cost-estimate.html) and [Amazon DevOps Guru pricing](http://aws.amazon.com/devops-guru/pricing/).
      parameters:
      - name: NextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/UuidNextToken'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions. For more information, see [Access Management](https://docs.aws.amazon.com/IAM/latest/UserGuide/access.html) in the _IAM User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal failure in an Amazon service occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            A requested resource could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to a request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Contains information about data passed in to a field during a request that is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    put:
      operationId: StartCostEstimation
      description: |-
        Starts the creation of an estimate of the monthly cost to analyze your Amazon Web Services resources.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ResourceCollection:
                  $ref: '#/components/schemas/CostEstimationResourceCollectionFilter'
                ClientToken:
                  $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions. For more information, see [Access Management](https://docs.aws.amazon.com/IAM/latest/UserGuide/access.html) in the _IAM User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            An exception that is thrown when a conflict occurs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An internal failure in an Amazon service occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            A requested resource could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to a request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Contains information about data passed in to a field during a request that is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /resource-collections/{ResourceCollectionType}:
    get:
      operationId: GetResourceCollection
      description: |-
        Returns lists Amazon Web Services resources that are of the specified resource collection type. The two types of Amazon Web Services resource collections supported are Amazon Web Services CloudFormation stacks and Amazon Web Services resources that contain the same Amazon Web Services tag. DevOps Guru can be configured to analyze the Amazon Web Services resources that are defined in the stacks or that are tagged using the same tag _key_. You can specify up to 500 Amazon Web Services CloudFormation stacks.
      parameters:
      - name: ResourceCollectionType
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceCollectionType'
      - name: NextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/UuidNextToken'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions. For more information, see [Access Management](https://docs.aws.amazon.com/IAM/latest/UserGuide/access.html) in the _IAM User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal failure in an Amazon service occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            A requested resource could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to a request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Contains information about data passed in to a field during a request that is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /anomalies/insight/{InsightId}:
    post:
      operationId: ListAnomaliesForInsight
      description: |-
        Returns a list of the anomalies that belong to an insight that you specify using its ID.
      parameters:
      - name: InsightId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InsightId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                StartTimeRange:
                  $ref: '#/components/schemas/StartTimeRange'
                MaxResults:
                  $ref: '#/components/schemas/ListAnomaliesForInsightMaxResults'
                NextToken:
                  $ref: '#/components/schemas/UuidNextToken'
                AccountId:
                  $ref: '#/components/schemas/AwsAccountId'
                Filters:
                  $ref: '#/components/schemas/ListAnomaliesForInsightFilters'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions. For more information, see [Access Management](https://docs.aws.amazon.com/IAM/latest/UserGuide/access.html) in the _IAM User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal failure in an Amazon service occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            A requested resource could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to a request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Contains information about data passed in to a field during a request that is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /list-log-anomalies:
    post:
      operationId: ListAnomalousLogGroups
      description: |-
        Returns the list of log groups that contain log anomalies.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                InsightId:
                  $ref: '#/components/schemas/InsightId'
                MaxResults:
                  $ref: '#/components/schemas/ListAnomalousLogGroupsMaxResults'
                NextToken:
                  $ref: '#/components/schemas/UuidNextToken'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions. For more information, see [Access Management](https://docs.aws.amazon.com/IAM/latest/UserGuide/access.html) in the _IAM User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal failure in an Amazon service occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            A requested resource could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to a request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Contains information about data passed in to a field during a request that is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /events:
    post:
      operationId: ListEvents
      description: |-
        Returns a list of the events emitted by the resources that are evaluated by DevOps Guru. You can use filters to specify which events are returned.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Filters:
                  $ref: '#/components/schemas/ListEventsFilters'
                MaxResults:
                  $ref: '#/components/schemas/ListEventsMaxResults'
                NextToken:
                  $ref: '#/components/schemas/UuidNextToken'
                AccountId:
                  $ref: '#/components/schemas/AwsAccountId'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions. For more information, see [Access Management](https://docs.aws.amazon.com/IAM/latest/UserGuide/access.html) in the _IAM User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal failure in an Amazon service occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            A requested resource could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to a request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Contains information about data passed in to a field during a request that is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /insights:
    post:
      operationId: ListInsights
      description: |-
        Returns a list of insights in your Amazon Web Services account. You can specify which insights are returned by their start time and status (`ONGOING`, `CLOSED`, or `ANY`).
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                StatusFilter:
                  $ref: '#/components/schemas/ListInsightsStatusFilter'
                MaxResults:
                  $ref: '#/components/schemas/ListInsightsMaxResults'
                NextToken:
                  $ref: '#/components/schemas/UuidNextToken'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions. For more information, see [Access Management](https://docs.aws.amazon.com/IAM/latest/UserGuide/access.html) in the _IAM User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal failure in an Amazon service occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied due to a request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Contains information about data passed in to a field during a request that is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /monitoredResources:
    post:
      operationId: ListMonitoredResources
      description: |-
        Returns the list of all log groups that are being monitored and tagged by DevOps Guru.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Filters:
                  $ref: '#/components/schemas/ListMonitoredResourcesFilters'
                MaxResults:
                  $ref: '#/components/schemas/ListMonitoredResourcesMaxResults'
                NextToken:
                  $ref: '#/components/schemas/UuidNextToken'
      responses:
        '200': {}
        '500':
          description: |-
            An internal failure in an Amazon service occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            A requested resource could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to a request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Contains information about data passed in to a field during a request that is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /organization/insights:
    post:
      operationId: ListOrganizationInsights
      description: |-
        Returns a list of insights associated with the account or OU Id.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                StatusFilter:
                  $ref: '#/components/schemas/ListInsightsStatusFilter'
                MaxResults:
                  $ref: '#/components/schemas/ListInsightsMaxResults'
                AccountIds:
                  $ref: '#/components/schemas/ListInsightsAccountIdList'
                OrganizationalUnitIds:
                  $ref: '#/components/schemas/ListInsightsOrganizationalUnitIdList'
                NextToken:
                  $ref: '#/components/schemas/UuidNextToken'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions. For more information, see [Access Management](https://docs.aws.amazon.com/IAM/latest/UserGuide/access.html) in the _IAM User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal failure in an Amazon service occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied due to a request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Contains information about data passed in to a field during a request that is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /recommendations:
    post:
      operationId: ListRecommendations
      description: |-
        Returns a list of a specified insight's recommendations. Each recommendation includes a list of related metrics and a list of related events.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                InsightId:
                  $ref: '#/components/schemas/InsightId'
                NextToken:
                  $ref: '#/components/schemas/UuidNextToken'
                Locale:
                  $ref: '#/components/schemas/Locale'
                AccountId:
                  $ref: '#/components/schemas/AwsAccountId'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions. For more information, see [Access Management](https://docs.aws.amazon.com/IAM/latest/UserGuide/access.html) in the _IAM User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal failure in an Amazon service occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            A requested resource could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to a request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Contains information about data passed in to a field during a request that is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /channels/{Id}:
    delete:
      operationId: RemoveNotificationChannel
      description: |-
        Removes a notification channel from DevOps Guru. A notification channel is used to notify you when DevOps Guru generates an insight that contains information about how to improve your operations.
      parameters:
      - name: Id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/NotificationChannelId'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions. For more information, see [Access Management](https://docs.aws.amazon.com/IAM/latest/UserGuide/access.html) in the _IAM User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            An exception that is thrown when a conflict occurs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An internal failure in an Amazon service occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            A requested resource could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to a request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Contains information about data passed in to a field during a request that is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /insights/search:
    post:
      operationId: SearchInsights
      description: |-
        Returns a list of insights in your Amazon Web Services account. You can specify which insights are returned by their start time, one or more statuses (`ONGOING` or `CLOSED`), one or more severities (`LOW`, `MEDIUM`, and `HIGH`), and type (`REACTIVE` or `PROACTIVE`).

        Use the `Filters` parameter to specify status and severity search parameters. Use the `Type` parameter to specify `REACTIVE` or `PROACTIVE` in your search.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                StartTimeRange:
                  $ref: '#/components/schemas/StartTimeRange'
                Filters:
                  $ref: '#/components/schemas/SearchInsightsFilters'
                MaxResults:
                  $ref: '#/components/schemas/SearchInsightsMaxResults'
                NextToken:
                  $ref: '#/components/schemas/UuidNextToken'
                Type:
                  $ref: '#/components/schemas/InsightType'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions. For more information, see [Access Management](https://docs.aws.amazon.com/IAM/latest/UserGuide/access.html) in the _IAM User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal failure in an Amazon service occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied due to a request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Contains information about data passed in to a field during a request that is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /organization/insights/search:
    post:
      operationId: SearchOrganizationInsights
      description: |-
        Returns a list of insights in your organization. You can specify which insights are returned by their start time, one or more statuses (`ONGOING`, `CLOSED`, and `CLOSED`), one or more severities (`LOW`, `MEDIUM`, and `HIGH`), and type (`REACTIVE` or `PROACTIVE`).

        Use the `Filters` parameter to specify status and severity search parameters. Use the `Type` parameter to specify `REACTIVE` or `PROACTIVE` in your search.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AccountIds:
                  $ref: '#/components/schemas/SearchInsightsAccountIdList'
                StartTimeRange:
                  $ref: '#/components/schemas/StartTimeRange'
                Filters:
                  $ref: '#/components/schemas/SearchOrganizationInsightsFilters'
                MaxResults:
                  $ref: '#/components/schemas/SearchOrganizationInsightsMaxResults'
                NextToken:
                  $ref: '#/components/schemas/UuidNextToken'
                Type:
                  $ref: '#/components/schemas/InsightType'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions. For more information, see [Access Management](https://docs.aws.amazon.com/IAM/latest/UserGuide/access.html) in the _IAM User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal failure in an Amazon service occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied due to a request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Contains information about data passed in to a field during a request that is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /resource-collections:
    put:
      operationId: UpdateResourceCollection
      description: |-
        Updates the collection of resources that DevOps Guru analyzes. The two types of Amazon Web Services resource collections supported are Amazon Web Services CloudFormation stacks and Amazon Web Services resources that contain the same Amazon Web Services tag. DevOps Guru can be configured to analyze the Amazon Web Services resources that are defined in the stacks or that are tagged using the same tag _key_. You can specify up to 500 Amazon Web Services CloudFormation stacks. This method also creates the IAM role required for you to use DevOps Guru.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Action:
                  $ref: '#/components/schemas/UpdateResourceCollectionAction'
                ResourceCollection:
                  $ref: '#/components/schemas/UpdateResourceCollectionFilter'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The user or role that is making the request must have at least one IAM permissions policy attached that grants the required permissions. For more information, see [Access Management](https://docs.aws.amazon.com/IAM/latest/UserGuide/access.html) in the _IAM User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            An exception that is thrown when a conflict occurs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An internal failure in an Amazon service occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied due to a request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Contains information about data passed in to a field during a request that is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
components:
  schemas:
    AccessDeniedException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessageString'
      required:
      - Message
      description: You don't have permissions to perform the requested operation.
        The user or role that is making the request must have at least one IAM permissions
        policy attached that grants the required permissions. For more information,
        see [Access Management](https://docs.aws.amazon.com/IAM/latest/UserGuide/access.html)
        in the _IAM User Guide_.
    AccountHealth:
      type: object
      properties:
        AccountId:
          allOf:
          - $ref: '#/components/schemas/AwsAccountId'
          description: The ID of the Amazon Web Services account.
        Insight:
          allOf:
          - $ref: '#/components/schemas/AccountInsightHealth'
          description: Information about the health of the Amazon Web Services resources
            in your account, including the number of open proactive, open reactive
            insights, and the Mean Time to Recover (MTTR) of closed insights.
      description: Returns the number of open reactive insights, the number of open
        proactive insights, and the number of metrics analyzed in your Amazon Web
        Services account. Use these numbers to gauge the health of operations in your
        Amazon Web Services account.
    AccountHealths:
      type: array
      items:
        $ref: '#/components/schemas/AccountHealth'
    AccountIdList:
      type: array
      items:
        $ref: '#/components/schemas/AwsAccountId'
    AccountInsightHealth:
      type: object
      properties:
        OpenProactiveInsights:
          allOf:
          - $ref: '#/components/schemas/NumOpenProactiveInsights'
          description: An integer that specifies the number of open proactive insights
            in your Amazon Web Services account.
        OpenReactiveInsights:
          allOf:
          - $ref: '#/components/schemas/NumOpenReactiveInsights'
          description: An integer that specifies the number of open reactive insights
            in your Amazon Web Services account.
      description: Information about the number of open reactive and proactive insights
        that can be used to gauge the health of your system.
    AddNotificationChannelRequest:
      type: object
      properties:
        Config:
          allOf:
          - $ref: '#/components/schemas/NotificationChannelConfig'
          description: A `NotificationChannelConfig` object that specifies what type
            of notification channel to add. The one supported notification channel
            is Amazon Simple Notification Service (Amazon SNS).
      required:
      - Config
    AddNotificationChannelResponse:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/NotificationChannelId'
          description: The ID of the added notification channel.
      required:
      - Id
    AmazonCodeGuruProfilerIntegration:
      type: object
      properties:
        Status:
          allOf:
          - $ref: '#/components/schemas/EventSourceOptInStatus'
          description: The status of the CodeGuru Profiler integration. Specifies
            if DevOps Guru is enabled to consume recommendations that are generated
            from Amazon CodeGuru Profiler.
      description: Information about your account's integration with Amazon CodeGuru
        Profiler. This returns whether DevOps Guru is configured to consume recommendations
        generated from Amazon CodeGuru Profiler.
    AnalyzedResourceCount:
      type: integer
      format: int64
    AnomalousLogGroup:
      type: object
      properties:
        LogGroupName:
          allOf:
          - $ref: '#/components/schemas/LogGroupName'
          description: The name of the CloudWatch log group.
        ImpactStartTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time the anomalous log events began. The impact start time
            indicates the time of the first log anomaly event that occurs.
        ImpactEndTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time the anomalous log events stopped.
        NumberOfLogLinesScanned:
          allOf:
          - $ref: '#/components/schemas/NumberOfLogLinesScanned'
          description: The number of log lines that were scanned for anomalous log
            events.
        LogAnomalyShowcases:
          allOf:
          - $ref: '#/components/schemas/LogAnomalyShowcases'
          description: The log anomalies in the log group. Each log anomaly displayed
            represents a cluster of similar anomalous log events.
      description: An Amazon CloudWatch log group that contains log anomalies and
        is used to generate an insight.
    AnomalousLogGroups:
      type: array
      items:
        $ref: '#/components/schemas/AnomalousLogGroup'
    AnomalyDescription:
      type: string
    AnomalyId:
      type: string
      pattern: ^[\w~.-]*$
      minLength: 1
      maxLength: 100
    AnomalyLimit:
      type: number
      format: double
    AnomalyName:
      type: string
    AnomalyReportedTimeRange:
      type: object
      properties:
        OpenTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time when an anomaly is opened.
        CloseTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time when an anomaly is closed.
      required:
      - OpenTime
      description: A time range that specifies when DevOps Guru opens and then closes
        an anomaly. This is different from `AnomalyTimeRange`, which specifies the
        time range when DevOps Guru actually observes the anomalous behavior.
    AnomalyResource:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the Amazon Web Services resource.
        Type:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          description: The type of the Amazon Web Services resource.
      description: The Amazon Web Services resources in which DevOps Guru detected
        unusual behavior that resulted in the generation of an anomaly. When DevOps
        Guru detects multiple related anomalies, it creates and insight with details
        about the anomalous behavior and suggestions about how to correct the problem.
    AnomalyResources:
      type: array
      items:
        $ref: '#/components/schemas/AnomalyResource'
    AnomalySeverity:
      type: string
      enum:
      - LOW
      - MEDIUM
      - HIGH
    AnomalySource:
      type: string
    AnomalySourceDetails:
      type: object
      properties:
        CloudWatchMetrics:
          allOf:
          - $ref: '#/components/schemas/CloudWatchMetricsDetails'
          description: An array of `CloudWatchMetricsDetail` objects that contain
            information about analyzed CloudWatch metrics that show anomalous behavior.
        PerformanceInsightsMetrics:
          allOf:
          - $ref: '#/components/schemas/PerformanceInsightsMetricsDetails'
          description: An array of `PerformanceInsightsMetricsDetail` objects that
            contain information about analyzed Performance Insights metrics that show
            anomalous behavior.
      description: Details about the source of the anomalous operational data that
        triggered the anomaly.
    AnomalySourceMetadata:
      type: object
      properties:
        Source:
          allOf:
          - $ref: '#/components/schemas/AnomalySource'
          description: The source of the anomaly.
        SourceResourceName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the anomaly's resource.
        SourceResourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          description: The anomaly's resource type.
      description: Metadata about the detection source that generates proactive anomalies.
        The anomaly is detected using analysis of the metric data over a period of
        time
    AnomalyStatus:
      type: string
      enum:
      - ONGOING
      - CLOSED
    AnomalyTimeRange:
      type: object
      properties:
        StartTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time when the anomalous behavior started.
        EndTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time when the anomalous behavior ended.
      required:
      - StartTime
      description: A time range that specifies when the observed unusual behavior
        in an anomaly started and ended. This is different from `AnomalyReportedTimeRange`,
        which specifies the time range when DevOps Guru opens and then closes an anomaly.
    AnomalyType:
      type: string
      enum:
      - CAUSAL
      - CONTEXTUAL
    AppBoundaryKey:
      type: string
      pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
      minLength: 1
      maxLength: 128
    AssociatedResourceArns:
      type: array
      items:
        $ref: '#/components/schemas/ResourceArn'
    AwsAccountId:
      type: string
      pattern: ^\d{12}$
      minLength: 12
      maxLength: 12
    Channels:
      type: array
      items:
        $ref: '#/components/schemas/NotificationChannel'
    ClientToken:
      type: string
      pattern: ^[a-zA-Z0-9]+[a-zA-Z0-9-]*$
      minLength: 1
      maxLength: 100
    CloudFormationCollection:
      type: object
      properties:
        StackNames:
          allOf:
          - $ref: '#/components/schemas/StackNames'
          description: An array of CloudFormation stack names.
      description: Information about Amazon Web Services CloudFormation stacks. You
        can use up to 500 stacks to specify which Amazon Web Services resources in
        your account to analyze. For more information, see [Stacks](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacks.html)
        in the _Amazon Web Services CloudFormation User Guide_.
    CloudFormationCollectionFilter:
      type: object
      properties:
        StackNames:
          allOf:
          - $ref: '#/components/schemas/StackNames'
          description: An array of CloudFormation stack names.
      description: Information about Amazon Web Services CloudFormation stacks. You
        can use up to 500 stacks to specify which Amazon Web Services resources in
        your account to analyze. For more information, see [Stacks](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacks.html)
        in the _Amazon Web Services CloudFormation User Guide_.
    CloudFormationCostEstimationResourceCollectionFilter:
      type: object
      properties:
        StackNames:
          allOf:
          - $ref: '#/components/schemas/CostEstimationStackNames'
          description: An array of CloudFormation stack names. Its size is fixed at
            1 item.
      description: Information about an Amazon Web Services CloudFormation stack used
        to create a monthly cost estimate for DevOps Guru to analyze Amazon Web Services
        resources. The maximum number of stacks you can specify for a cost estimate
        is one. The estimate created is for the cost to analyze the Amazon Web Services
        resources defined by the stack. For more information, see [Stacks](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacks.html)
        in the _Amazon Web Services CloudFormation User Guide_.
    CloudFormationHealth:
      type: object
      properties:
        StackName:
          allOf:
          - $ref: '#/components/schemas/StackName'
          description: The name of the CloudFormation stack.
        Insight:
          allOf:
          - $ref: '#/components/schemas/InsightHealth'
          description: Information about the health of the Amazon Web Services resources
            in your account that are specified by an Amazon Web Services CloudFormation
            stack, including the number of open proactive, open reactive insights,
            and the Mean Time to Recover (MTTR) of closed insights.
        AnalyzedResourceCount:
          allOf:
          - $ref: '#/components/schemas/AnalyzedResourceCount'
          description: Number of resources that DevOps Guru is monitoring in your
            account that are specified by an Amazon Web Services CloudFormation stack.
      description: Information about the health of Amazon Web Services resources in
        your account that are specified by an Amazon Web Services CloudFormation stack.
    CloudFormationHealths:
      type: array
      items:
        $ref: '#/components/schemas/CloudFormationHealth'
    CloudWatchMetricDataStatusCode:
      type: string
      enum:
      - Complete
      - InternalError
      - PartialData
    CloudWatchMetricsDataSummary:
      type: object
      properties:
        TimestampMetricValuePairList:
          allOf:
          - $ref: '#/components/schemas/TimestampMetricValuePairList'
          description: This is a list of Amazon CloudWatch metric values at given
            timestamp.
        StatusCode:
          allOf:
          - $ref: '#/components/schemas/CloudWatchMetricDataStatusCode'
          description: This is an enum of the status showing whether the metric value
            pair list has partial or complete data, or if there was an error.
      description: Contains information about the analyzed metrics that displayed
        anomalous behavior.
    CloudWatchMetricsDetail:
      type: object
      properties:
        MetricName:
          allOf:
          - $ref: '#/components/schemas/CloudWatchMetricsMetricName'
          description: The name of the CloudWatch metric.
        Namespace:
          allOf:
          - $ref: '#/components/schemas/CloudWatchMetricsNamespace'
          description: The namespace of the CloudWatch metric. A namespace is a container
            for CloudWatch metrics.
        Dimensions:
          allOf:
          - $ref: '#/components/schemas/CloudWatchMetricsDimensions'
          description: An array of CloudWatch dimensions associated with
        Stat:
          allOf:
          - $ref: '#/components/schemas/CloudWatchMetricsStat'
          description: The type of statistic associated with the CloudWatch metric.
            For more information, see [Statistics](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html#Statistic)
            in the _Amazon CloudWatch User Guide_.
        Unit:
          allOf:
          - $ref: '#/components/schemas/CloudWatchMetricsUnit'
          description: The unit of measure used for the CloudWatch metric. For example,
            `Bytes`, `Seconds`, `Count`, and `Percent`.
        Period:
          allOf:
          - $ref: '#/components/schemas/CloudWatchMetricsPeriod'
          description: The length of time associated with the CloudWatch metric in
            number of seconds.
        MetricDataSummary:
          allOf:
          - $ref: '#/components/schemas/CloudWatchMetricsDataSummary'
          description: This object returns anomaly metric data.
      description: Information about an Amazon CloudWatch metric.
    CloudWatchMetricsDetails:
      type: array
      items:
        $ref: '#/components/schemas/CloudWatchMetricsDetail'
    CloudWatchMetricsDimension:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/CloudWatchMetricsDimensionName'
          description: The name of the CloudWatch dimension.
        Value:
          allOf:
          - $ref: '#/components/schemas/CloudWatchMetricsDimensionValue'
          description: The value of the CloudWatch dimension.
      description: The dimension of an Amazon CloudWatch metric that is used when
        DevOps Guru analyzes the resources in your account for operational problems
        and anomalous behavior. A dimension is a name/value pair that is part of the
        identity of a metric. A metric can have up to 10 dimensions. For more information,
        see [Dimensions](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html#Dimension)
        in the _Amazon CloudWatch User Guide_.
    CloudWatchMetricsDimensionName:
      type: string
    CloudWatchMetricsDimensionValue:
      type: string
    CloudWatchMetricsDimensions:
      type: array
      items:
        $ref: '#/components/schemas/CloudWatchMetricsDimension'
    CloudWatchMetricsMetricName:
      type: string
    CloudWatchMetricsNamespace:
      type: string
    CloudWatchMetricsPeriod:
      type: integer
      default: 0
    CloudWatchMetricsStat:
      type: string
      enum:
      - Sum
      - Average
      - SampleCount
      - Minimum
      - Maximum
      - p99
      - p90
      - p50
    CloudWatchMetricsUnit:
      type: string
    ConflictException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessageString'
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/ResourceIdString'
          description: The ID of the Amazon Web Services resource in which a conflict
            occurred.
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceIdType'
          description: The type of the Amazon Web Services resource in which a conflict
            occurred.
      required:
      - Message
      - ResourceId
      - ResourceType
      description: An exception that is thrown when a conflict occurs.
    Cost:
      type: number
      format: double
      default: 0
    CostEstimationResourceCollectionFilter:
      type: object
      properties:
        CloudFormation:
          allOf:
          - $ref: '#/components/schemas/CloudFormationCostEstimationResourceCollectionFilter'
          description: An object that specifies the CloudFormation stack that defines
            the Amazon Web Services resources used to create a monthly estimate for
            DevOps Guru.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagCostEstimationResourceCollectionFilters'
          description: "The Amazon Web Services tags used to filter the resource collection\
            \ that is used for a cost estimate.\n\nTags help you identify and organize\
            \ your Amazon Web Services resources. Many Amazon Web Services services\
            \ support tagging, so you can assign the same tag to resources from different\
            \ services to indicate that the resources are related. For example, you\
            \ can assign the same tag to an Amazon DynamoDB table resource that you\
            \ assign to an Lambda function. For more information about using tags,\
            \ see the [Tagging best practices](https://docs.aws.amazon.com/whitepapers/latest/tagging-best-practices/tagging-best-practices.html)\
            \ whitepaper.\n\nEach Amazon Web Services tag has two parts.\n\n  * A\
            \ tag _key_ (for example, `CostCenter`, `Environment`, `Project`, or `Secret`).\
            \ Tag _keys_ are case-sensitive.\n\n  * An optional field known as a tag\
            \ _value_ (for example, `111122223333`, `Production`, or a team name).\
            \ Omitting the tag _value_ is the same as using an empty string. Like\
            \ tag _keys_ , tag _values_ are case-sensitive.\n\nTogether these are\
            \ known as _key_ -_value_ pairs.\n\nThe string used for a _key_ in a tag\
            \ that you use to define your resource coverage must begin with the prefix\
            \ `Devops-guru-`. The tag _key_ might be `DevOps-Guru-deployment-application`\
            \ or `devops-guru-rds-application`. When you create a _key_ , the case\
            \ of characters in the _key_ can be whatever you choose. After you create\
            \ a _key_ , it is case-sensitive. For example, DevOps Guru works with\
            \ a _key_ named `devops-guru-rds` and a _key_ named `DevOps-Guru-RDS`,\
            \ and these act as two different _keys_. Possible _key_ /_value_ pairs\
            \ in your application might be `Devops-Guru-production-application/RDS`\
            \ or `Devops-Guru-production-application/containers`."
      description: Information about a filter used to specify which Amazon Web Services
        resources are analyzed to create a monthly DevOps Guru cost estimate. For
        more information, see [Estimate your Amazon DevOps Guru costs](https://docs.aws.amazon.com/devops-guru/latest/userguide/cost-estimate.html)
        and [Amazon DevOps Guru pricing](http://aws.amazon.com/devops-guru/pricing/).
    CostEstimationServiceResourceCount:
      type: integer
      default: 0
    CostEstimationServiceResourceState:
      type: string
      enum:
      - ACTIVE
      - INACTIVE
    CostEstimationStackNames:
      type: array
      items:
        $ref: '#/components/schemas/StackName'
    CostEstimationStatus:
      type: string
      enum:
      - ONGOING
      - COMPLETED
    CostEstimationTagValues:
      type: array
      items:
        $ref: '#/components/schemas/TagValue'
    CostEstimationTimeRange:
      type: object
      properties:
        StartTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The start time of the cost estimation.
        EndTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The end time of the cost estimation.
      description: The time range of a cost estimation.
    DeleteInsightRequest:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/InsightId'
          description: The ID of the insight.
      required:
      - Id
    DeleteInsightResponse:
      type: object
      properties: {}
    DescribeAccountHealthRequest:
      type: object
      properties: {}
    DescribeAccountHealthResponse:
      type: object
      properties:
        OpenReactiveInsights:
          allOf:
          - $ref: '#/components/schemas/NumOpenReactiveInsights'
          description: An integer that specifies the number of open reactive insights
            in your Amazon Web Services account.
        OpenProactiveInsights:
          allOf:
          - $ref: '#/components/schemas/NumOpenProactiveInsights'
          description: An integer that specifies the number of open proactive insights
            in your Amazon Web Services account.
        MetricsAnalyzed:
          allOf:
          - $ref: '#/components/schemas/NumMetricsAnalyzed'
          description: An integer that specifies the number of metrics that have been
            analyzed in your Amazon Web Services account.
        ResourceHours:
          allOf:
          - $ref: '#/components/schemas/ResourceHours'
          description: The number of Amazon DevOps Guru resource analysis hours billed
            to the current Amazon Web Services account in the last hour.
        AnalyzedResourceCount:
          allOf:
          - $ref: '#/components/schemas/AnalyzedResourceCount'
          description: Number of resources that DevOps Guru is monitoring in your
            Amazon Web Services account.
      required:
      - OpenReactiveInsights
      - OpenProactiveInsights
      - MetricsAnalyzed
      - ResourceHours
    DescribeAccountOverviewRequest:
      type: object
      properties:
        FromTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The start of the time range passed in. The start time granularity
            is at the day level. The floor of the start time is used. Returned information
            occurred after this day.
        ToTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The end of the time range passed in. The start time granularity
            is at the day level. The floor of the start time is used. Returned information
            occurred before this day. If this is not specified, then the current day
            is used.
      required:
      - FromTime
    DescribeAccountOverviewResponse:
      type: object
      properties:
        ReactiveInsights:
          allOf:
          - $ref: '#/components/schemas/NumReactiveInsights'
          description: An integer that specifies the number of open reactive insights
            in your Amazon Web Services account that were created during the time
            range passed in.
        ProactiveInsights:
          allOf:
          - $ref: '#/components/schemas/NumProactiveInsights'
          description: An integer that specifies the number of open proactive insights
            in your Amazon Web Services account that were created during the time
            range passed in.
        MeanTimeToRecoverInMilliseconds:
          allOf:
          - $ref: '#/components/schemas/MeanTimeToRecoverInMilliseconds'
          description: The Mean Time to Recover (MTTR) for all closed insights that
            were created during the time range passed in.
      required:
      - ReactiveInsights
      - ProactiveInsights
      - MeanTimeToRecoverInMilliseconds
    DescribeAnomalyRequest:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/AnomalyId'
          description: The ID of the anomaly.
        AccountId:
          allOf:
          - $ref: '#/components/schemas/AwsAccountId'
          description: The ID of the member account.
      required:
      - Id
    DescribeAnomalyResponse:
      type: object
      properties:
        ProactiveAnomaly:
          allOf:
          - $ref: '#/components/schemas/ProactiveAnomaly'
          description: A `ProactiveAnomaly` object that represents the requested anomaly.
        ReactiveAnomaly:
          allOf:
          - $ref: '#/components/schemas/ReactiveAnomaly'
          description: A `ReactiveAnomaly` object that represents the requested anomaly.
    DescribeEventSourcesConfigRequest:
      type: object
      properties: {}
    DescribeEventSourcesConfigResponse:
      type: object
      properties:
        EventSources:
          allOf:
          - $ref: '#/components/schemas/EventSourcesConfig'
          description: Lists the event sources in the configuration.
    DescribeFeedbackRequest:
      type: object
      properties:
        InsightId:
          allOf:
          - $ref: '#/components/schemas/InsightId'
          description: The ID of the insight for which the feedback was provided.
    DescribeFeedbackResponse:
      type: object
      properties:
        InsightFeedback:
          $ref: '#/components/schemas/InsightFeedback'
    DescribeInsightRequest:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/InsightId'
          description: The ID of the insight.
        AccountId:
          allOf:
          - $ref: '#/components/schemas/AwsAccountId'
          description: The ID of the member account in the organization.
      required:
      - Id
    DescribeInsightResponse:
      type: object
      properties:
        ProactiveInsight:
          allOf:
          - $ref: '#/components/schemas/ProactiveInsight'
          description: A `ProactiveInsight` object that represents the requested insight.
        ReactiveInsight:
          allOf:
          - $ref: '#/components/schemas/ReactiveInsight'
          description: A `ReactiveInsight` object that represents the requested insight.
    DescribeOrganizationHealthRequest:
      type: object
      properties:
        AccountIds:
          allOf:
          - $ref: '#/components/schemas/AccountIdList'
          description: The ID of the Amazon Web Services account.
        OrganizationalUnitIds:
          allOf:
          - $ref: '#/components/schemas/OrganizationalUnitIdList'
          description: The ID of the organizational unit.
    DescribeOrganizationHealthResponse:
      type: object
      properties:
        OpenReactiveInsights:
          allOf:
          - $ref: '#/components/schemas/NumOpenReactiveInsights'
          description: An integer that specifies the number of open reactive insights
            in your Amazon Web Services account.
        OpenProactiveInsights:
          allOf:
          - $ref: '#/components/schemas/NumOpenProactiveInsights'
          description: An integer that specifies the number of open proactive insights
            in your Amazon Web Services account.
        MetricsAnalyzed:
          allOf:
          - $ref: '#/components/schemas/NumMetricsAnalyzed'
          description: An integer that specifies the number of metrics that have been
            analyzed in your organization.
        ResourceHours:
          allOf:
          - $ref: '#/components/schemas/ResourceHours'
          description: The number of Amazon DevOps Guru resource analysis hours billed
            to the current Amazon Web Services account in the last hour.
      required:
      - OpenReactiveInsights
      - OpenProactiveInsights
      - MetricsAnalyzed
      - ResourceHours
    DescribeOrganizationOverviewRequest:
      type: object
      properties:
        FromTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The start of the time range passed in. The start time granularity
            is at the day level. The floor of the start time is used. Returned information
            occurred after this day.
        ToTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The end of the time range passed in. The start time granularity
            is at the day level. The floor of the start time is used. Returned information
            occurred before this day. If this is not specified, then the current day
            is used.
        AccountIds:
          allOf:
          - $ref: '#/components/schemas/AccountIdList'
          description: The ID of the Amazon Web Services account.
        OrganizationalUnitIds:
          allOf:
          - $ref: '#/components/schemas/OrganizationalUnitIdList'
          description: The ID of the organizational unit.
      required:
      - FromTime
    DescribeOrganizationOverviewResponse:
      type: object
      properties:
        ReactiveInsights:
          allOf:
          - $ref: '#/components/schemas/NumReactiveInsights'
          description: An integer that specifies the number of open reactive insights
            in your Amazon Web Services account.
        ProactiveInsights:
          allOf:
          - $ref: '#/components/schemas/NumProactiveInsights'
          description: An integer that specifies the number of open proactive insights
            in your Amazon Web Services account.
      required:
      - ReactiveInsights
      - ProactiveInsights
    DescribeOrganizationResourceCollectionHealthRequest:
      type: object
      properties:
        OrganizationResourceCollectionType:
          allOf:
          - $ref: '#/components/schemas/OrganizationResourceCollectionType'
          description: An Amazon Web Services resource collection type. This type
            specifies how analyzed Amazon Web Services resources are defined. The
            two types of Amazon Web Services resource collections supported are Amazon
            Web Services CloudFormation stacks and Amazon Web Services resources that
            contain the same Amazon Web Services tag. DevOps Guru can be configured
            to analyze the Amazon Web Services resources that are defined in the stacks
            or that are tagged using the same tag _key_. You can specify up to 500
            Amazon Web Services CloudFormation stacks.
        AccountIds:
          allOf:
          - $ref: '#/components/schemas/AccountIdList'
          description: The ID of the Amazon Web Services account.
        OrganizationalUnitIds:
          allOf:
          - $ref: '#/components/schemas/OrganizationalUnitIdList'
          description: The ID of the organizational unit.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/UuidNextToken'
          description: The pagination token to use to retrieve the next page of results
            for this operation. If this value is null, it retrieves the first page.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/OrganizationResourceCollectionMaxResults'
          description: The maximum number of results to return with a single call.
            To retrieve the remaining results, make another call with the returned
            `nextToken` value.
      required:
      - OrganizationResourceCollectionType
    DescribeOrganizationResourceCollectionHealthResponse:
      type: object
      properties:
        CloudFormation:
          allOf:
          - $ref: '#/components/schemas/CloudFormationHealths'
          description: The returned `CloudFormationHealthOverview` object that contains
            an `InsightHealthOverview` object with the requested system health information.
        Service:
          allOf:
          - $ref: '#/components/schemas/ServiceHealths'
          description: An array of `ServiceHealth` objects that describes the health
            of the Amazon Web Services services associated with the resources in the
            collection.
        Account:
          allOf:
          - $ref: '#/components/schemas/AccountHealths'
          description: The name of the organization's account.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/UuidNextToken'
          description: The pagination token to use to retrieve the next page of results
            for this operation. If there are no more pages, this value is null.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagHealths'
          description: "Tags help you identify and organize your Amazon Web Services\
            \ resources. Many Amazon Web Services services support tagging, so you\
            \ can assign the same tag to resources from different services to indicate\
            \ that the resources are related. For example, you can assign the same\
            \ tag to an Amazon DynamoDB table resource that you assign to an Lambda\
            \ function. For more information about using tags, see the [Tagging best\
            \ practices](https://docs.aws.amazon.com/whitepapers/latest/tagging-best-practices/tagging-best-practices.html)\
            \ whitepaper.\n\nEach Amazon Web Services tag has two parts.\n\n  * A\
            \ tag _key_ (for example, `CostCenter`, `Environment`, `Project`, or `Secret`).\
            \ Tag _keys_ are case-sensitive.\n\n  * An optional field known as a tag\
            \ _value_ (for example, `111122223333`, `Production`, or a team name).\
            \ Omitting the tag _value_ is the same as using an empty string. Like\
            \ tag _keys_ , tag _values_ are case-sensitive.\n\nTogether these are\
            \ known as _key_ -_value_ pairs.\n\nThe string used for a _key_ in a tag\
            \ that you use to define your resource coverage must begin with the prefix\
            \ `Devops-guru-`. The tag _key_ might be `DevOps-Guru-deployment-application`\
            \ or `devops-guru-rds-application`. When you create a _key_ , the case\
            \ of characters in the _key_ can be whatever you choose. After you create\
            \ a _key_ , it is case-sensitive. For example, DevOps Guru works with\
            \ a _key_ named `devops-guru-rds` and a _key_ named `DevOps-Guru-RDS`,\
            \ and these act as two different _keys_. Possible _key_ /_value_ pairs\
            \ in your application might be `Devops-Guru-production-application/RDS`\
            \ or `Devops-Guru-production-application/containers`."
    DescribeResourceCollectionHealthRequest:
      type: object
      properties:
        ResourceCollectionType:
          allOf:
          - $ref: '#/components/schemas/ResourceCollectionType'
          description: An Amazon Web Services resource collection type. This type
            specifies how analyzed Amazon Web Services resources are defined. The
            two types of Amazon Web Services resource collections supported are Amazon
            Web Services CloudFormation stacks and Amazon Web Services resources that
            contain the same Amazon Web Services tag. DevOps Guru can be configured
            to analyze the Amazon Web Services resources that are defined in the stacks
            or that are tagged using the same tag _key_. You can specify up to 500
            Amazon Web Services CloudFormation stacks.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/UuidNextToken'
          description: The pagination token to use to retrieve the next page of results
            for this operation. If this value is null, it retrieves the first page.
      required:
      - ResourceCollectionType
    DescribeResourceCollectionHealthResponse:
      type: object
      properties:
        CloudFormation:
          allOf:
          - $ref: '#/components/schemas/CloudFormationHealths'
          description: The returned `CloudFormationHealthOverview` object that contains
            an `InsightHealthOverview` object with the requested system health information.
        Service:
          allOf:
          - $ref: '#/components/schemas/ServiceHealths'
          description: An array of `ServiceHealth` objects that describes the health
            of the Amazon Web Services services associated with the resources in the
            collection.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/UuidNextToken'
          description: The pagination token to use to retrieve the next page of results
            for this operation. If there are no more pages, this value is null.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagHealths'
          description: "The Amazon Web Services tags that are used by resources in\
            \ the resource collection.\n\nTags help you identify and organize your\
            \ Amazon Web Services resources. Many Amazon Web Services services support\
            \ tagging, so you can assign the same tag to resources from different\
            \ services to indicate that the resources are related. For example, you\
            \ can assign the same tag to an Amazon DynamoDB table resource that you\
            \ assign to an Lambda function. For more information about using tags,\
            \ see the [Tagging best practices](https://docs.aws.amazon.com/whitepapers/latest/tagging-best-practices/tagging-best-practices.html)\
            \ whitepaper.\n\nEach Amazon Web Services tag has two parts.\n\n  * A\
            \ tag _key_ (for example, `CostCenter`, `Environment`, `Project`, or `Secret`).\
            \ Tag _keys_ are case-sensitive.\n\n  * An optional field known as a tag\
            \ _value_ (for example, `111122223333`, `Production`, or a team name).\
            \ Omitting the tag _value_ is the same as using an empty string. Like\
            \ tag _keys_ , tag _values_ are case-sensitive.\n\nTogether these are\
            \ known as _key_ -_value_ pairs.\n\nThe string used for a _key_ in a tag\
            \ that you use to define your resource coverage must begin with the prefix\
            \ `Devops-guru-`. The tag _key_ might be `DevOps-Guru-deployment-application`\
            \ or `devops-guru-rds-application`. When you create a _key_ , the case\
            \ of characters in the _key_ can be whatever you choose. After you create\
            \ a _key_ , it is case-sensitive. For example, DevOps Guru works with\
            \ a _key_ named `devops-guru-rds` and a _key_ named `DevOps-Guru-RDS`,\
            \ and these act as two different _keys_. Possible _key_ /_value_ pairs\
            \ in your application might be `Devops-Guru-production-application/RDS`\
            \ or `Devops-Guru-production-application/containers`."
    DescribeServiceIntegrationRequest:
      type: object
      properties: {}
    DescribeServiceIntegrationResponse:
      type: object
      properties:
        ServiceIntegration:
          $ref: '#/components/schemas/ServiceIntegrationConfig'
    EndTimeRange:
      type: object
      properties:
        FromTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The earliest end time in the time range.
        ToTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The latest end time in the time range.
      description: A range of time that specifies when anomalous behavior in an anomaly
        or insight ended.
    ErrorMessageString:
      type: string
    ErrorNameString:
      type: string
    ErrorQuotaCodeString:
      type: string
    ErrorServiceCodeString:
      type: string
    Event:
      type: object
      properties:
        ResourceCollection:
          $ref: '#/components/schemas/ResourceCollection'
        Id:
          allOf:
          - $ref: '#/components/schemas/EventId'
          description: The ID of the event.
        Time:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: A `Timestamp` that specifies the time the event occurred.
        EventSource:
          allOf:
          - $ref: '#/components/schemas/EventSource'
          description: The Amazon Web Services source that emitted the event.
        Name:
          allOf:
          - $ref: '#/components/schemas/EventName'
          description: The name of the event.
        DataSource:
          allOf:
          - $ref: '#/components/schemas/EventDataSource'
          description: The source, `AWS_CLOUD_TRAIL` or `AWS_CODE_DEPLOY`, where DevOps
            Guru analysis found the event.
        EventClass:
          allOf:
          - $ref: '#/components/schemas/EventClass'
          description: The class of the event. The class specifies what the event
            is related to, such as an infrastructure change, a deployment, or a schema
            change.
        Resources:
          allOf:
          - $ref: '#/components/schemas/EventResources'
          description: An `EventResource` object that contains information about the
            resource that emitted the event.
      description: An Amazon Web Services resource event. Amazon Web Services resource
        events and metrics are analyzed by DevOps Guru to find anomalous behavior
        and provide recommendations to improve your operational solutions.
    EventClass:
      type: string
      enum:
      - INFRASTRUCTURE
      - DEPLOYMENT
      - SECURITY_CHANGE
      - CONFIG_CHANGE
      - SCHEMA_CHANGE
    EventDataSource:
      type: string
      enum:
      - AWS_CLOUD_TRAIL
      - AWS_CODE_DEPLOY
    EventId:
      type: string
    EventName:
      type: string
      minLength: 0
      maxLength: 50
    EventResource:
      type: object
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/EventResourceType'
          description: The type of resource that emitted an event.
        Name:
          allOf:
          - $ref: '#/components/schemas/EventResourceName'
          description: The name of the resource that emitted an event.
        Arn:
          allOf:
          - $ref: '#/components/schemas/EventResourceArn'
          description: The Amazon Resource Name (ARN) of the resource that emitted
            an event.
      description: The Amazon Web Services resource that emitted an event. Amazon
        Web Services resource events and metrics are analyzed by DevOps Guru to find
        anomalous behavior and provide recommendations to improve your operational
        solutions.
    EventResourceArn:
      type: string
      pattern: ^arn:aws[-a-z]*:[a-z0-9-]*:[a-z0-9-]*:\d{12}:.*$
      minLength: 36
      maxLength: 2048
    EventResourceName:
      type: string
      pattern: ^.*$
      minLength: 0
      maxLength: 2048
    EventResourceType:
      type: string
      pattern: ^.*$
      minLength: 0
      maxLength: 2048
    EventResources:
      type: array
      items:
        $ref: '#/components/schemas/EventResource'
    EventSource:
      type: string
      pattern: ^[a-z]+[a-z0-9]*\.amazonaws\.com|aws\.events$
      minLength: 10
      maxLength: 50
    EventSourceOptInStatus:
      type: string
      enum:
      - ENABLED
      - DISABLED
    EventSourcesConfig:
      type: object
      properties:
        AmazonCodeGuruProfiler:
          allOf:
          - $ref: '#/components/schemas/AmazonCodeGuruProfilerIntegration'
          description: Information about whether DevOps Guru is configured to consume
            recommendations which are generated from AWS CodeGuru Profiler.
      description: Information about the integration of DevOps Guru as consumer with
        another AWS service, such as AWS CodeGuru Profiler via EventBridge.
    EventTimeRange:
      type: object
      properties:
        FromTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time when the event started.
        ToTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time when the event ended.
      required:
      - FromTime
      - ToTime
      description: The time range during which an Amazon Web Services event occurred.
        Amazon Web Services resource events and metrics are analyzed by DevOps Guru
        to find anomalous behavior and provide recommendations to improve your operational
        solutions.
    Events:
      type: array
      items:
        $ref: '#/components/schemas/Event'
    Explanation:
      type: string
      minLength: 1
      maxLength: 2048
    GetCostEstimationRequest:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/UuidNextToken'
          description: The pagination token to use to retrieve the next page of results
            for this operation. If this value is null, it retrieves the first page.
    GetCostEstimationResponse:
      type: object
      properties:
        ResourceCollection:
          allOf:
          - $ref: '#/components/schemas/CostEstimationResourceCollectionFilter'
          description: The collection of the Amazon Web Services resources used to
            create your monthly DevOps Guru cost estimate.
        Status:
          allOf:
          - $ref: '#/components/schemas/CostEstimationStatus'
          description: The status of creating this cost estimate. If it's still in
            progress, the status `ONGOING` is returned. If it is finished, the status
            `COMPLETED` is returned.
        Costs:
          allOf:
          - $ref: '#/components/schemas/ServiceResourceCosts'
          description: An array of `ResourceCost` objects that each contains details
            about the monthly cost estimate to analyze one of your Amazon Web Services
            resources.
        TimeRange:
          allOf:
          - $ref: '#/components/schemas/CostEstimationTimeRange'
          description: The start and end time of the cost estimation.
        TotalCost:
          allOf:
          - $ref: '#/components/schemas/Cost'
          description: The estimated monthly cost to analyze the Amazon Web Services
            resources. This value is the sum of the estimated costs to analyze each
            resource in the `Costs` object in this response.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/UuidNextToken'
          description: The pagination token to use to retrieve the next page of results
            for this operation. If there are no more pages, this value is null.
    GetResourceCollectionRequest:
      type: object
      properties:
        ResourceCollectionType:
          allOf:
          - $ref: '#/components/schemas/ResourceCollectionType'
          description: The type of Amazon Web Services resource collections to return.
            The one valid value is `CLOUD_FORMATION` for Amazon Web Services CloudFormation
            stacks.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/UuidNextToken'
          description: The pagination token to use to retrieve the next page of results
            for this operation. If this value is null, it retrieves the first page.
      required:
      - ResourceCollectionType
    GetResourceCollectionResponse:
      type: object
      properties:
        ResourceCollection:
          allOf:
          - $ref: '#/components/schemas/ResourceCollectionFilter'
          description: The requested list of Amazon Web Services resource collections.
            The two types of Amazon Web Services resource collections supported are
            Amazon Web Services CloudFormation stacks and Amazon Web Services resources
            that contain the same Amazon Web Services tag. DevOps Guru can be configured
            to analyze the Amazon Web Services resources that are defined in the stacks
            or that are tagged using the same tag _key_. You can specify up to 500
            Amazon Web Services CloudFormation stacks.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/UuidNextToken'
          description: The pagination token to use to retrieve the next page of results
            for this operation. If there are no more pages, this value is null.
    InsightDescription:
      type: string
    InsightFeedback:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/InsightId'
          description: The insight feedback ID.
        Feedback:
          allOf:
          - $ref: '#/components/schemas/InsightFeedbackOption'
          description: The feedback provided by the customer.
      description: Information about insight feedback received from a customer.
    InsightFeedbackOption:
      type: string
      enum:
      - VALID_COLLECTION
      - RECOMMENDATION_USEFUL
      - ALERT_TOO_SENSITIVE
      - DATA_NOISY_ANOMALY
      - DATA_INCORRECT
    InsightHealth:
      type: object
      properties:
        OpenProactiveInsights:
          allOf:
          - $ref: '#/components/schemas/NumOpenProactiveInsights'
          description: The number of open proactive insights.
        OpenReactiveInsights:
          allOf:
          - $ref: '#/components/schemas/NumOpenReactiveInsights'
          description: The number of open reactive insights.
        MeanTimeToRecoverInMilliseconds:
          allOf:
          - $ref: '#/components/schemas/MeanTimeToRecoverInMilliseconds'
          description: The Meant Time to Recover (MTTR) for the insight.
      description: Information about the number of open reactive and proactive insights
        that can be used to gauge the health of your system.
    InsightId:
      type: string
      pattern: ^[\w-]*$
      minLength: 1
      maxLength: 100
    InsightName:
      type: string
      pattern: ^[\s\S]*$
      minLength: 1
      maxLength: 530
    InsightSeverities:
      type: array
      items:
        $ref: '#/components/schemas/InsightSeverity'
    InsightSeverity:
      type: string
      enum:
      - LOW
      - MEDIUM
      - HIGH
    InsightStatus:
      type: string
      enum:
      - ONGOING
      - CLOSED
    InsightStatuses:
      type: array
      items:
        $ref: '#/components/schemas/InsightStatus'
    InsightTimeRange:
      type: object
      properties:
        StartTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time when the behavior described in an insight started.
        EndTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time when the behavior described in an insight ended.
      required:
      - StartTime
      description: A time ranged that specifies when the observed behavior in an insight
        started and ended.
    InsightType:
      type: string
      enum:
      - REACTIVE
      - PROACTIVE
    InternalServerException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessageString'
        RetryAfterSeconds:
          allOf:
          - $ref: '#/components/schemas/RetryAfterSeconds'
          description: The number of seconds after which the action that caused the
            internal server exception can be retried.
      required:
      - Message
      description: An internal failure in an Amazon service occurred.
    KMSKeyId:
      type: string
      pattern: ^.*$
      minLength: 1
      maxLength: 2048
    KMSServerSideEncryptionIntegration:
      type: object
      properties:
        KMSKeyId:
          allOf:
          - $ref: '#/components/schemas/KMSKeyId'
          description: 'Describes the specified KMS key.


            To specify a KMS key, use its key ID, key ARN, alias name, or alias ARN.
            When using an alias name, prefix it with "alias/". If you specify a predefined
            Amazon Web Services alias (an Amazon Web Services alias with no key ID),
            Amazon Web Services KMS associates the alias with an Amazon Web Services
            managed key and returns its KeyId and Arn in the response. To specify
            a KMS key in a different Amazon Web Services account, you must use the
            key ARN or alias ARN.


            For example:


            Key ID: 1234abcd-12ab-34cd-56ef-1234567890ab


            Key ARN: arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab


            Alias name: alias/ExampleAlias


            Alias ARN: arn:aws:kms:us-east-2:111122223333:alias/ExampleAlias'
        OptInStatus:
          allOf:
          - $ref: '#/components/schemas/OptInStatus'
          description: Specifies if DevOps Guru is enabled for customer managed keys.
        Type:
          allOf:
          - $ref: '#/components/schemas/ServerSideEncryptionType'
          description: The type of KMS key used. Customer managed keys are the KMS
            keys that you create. Amazon Web Services owned keys are keys that are
            owned and managed by DevOps Guru.
      description: Information about the KMS encryption used with DevOps Guru.
    KMSServerSideEncryptionIntegrationConfig:
      type: object
      properties:
        KMSKeyId:
          allOf:
          - $ref: '#/components/schemas/KMSKeyId'
          description: 'Describes the specified KMS key.


            To specify a KMS key, use its key ID, key ARN, alias name, or alias ARN.
            When using an alias name, prefix it with "alias/". If you specify a predefined
            Amazon Web Services alias (an Amazon Web Services alias with no key ID),
            Amazon Web Services KMS associates the alias with an Amazon Web Services
            managed key and returns its KeyId and Arn in the response. To specify
            a KMS key in a different Amazon Web Services account, you must use the
            key ARN or alias ARN.


            For example:


            Key ID: 1234abcd-12ab-34cd-56ef-1234567890ab


            Key ARN: arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab


            Alias name: alias/ExampleAlias


            Alias ARN: arn:aws:kms:us-east-2:111122223333:alias/ExampleAlias'
        OptInStatus:
          allOf:
          - $ref: '#/components/schemas/OptInStatus'
          description: Specifies if DevOps Guru is enabled for KMS integration.
        Type:
          allOf:
          - $ref: '#/components/schemas/ServerSideEncryptionType'
          description: The type of KMS key used. Customer managed keys are the KMS
            keys that you create. Amazon Web Services owned keys are keys that are
            owned and managed by DevOps Guru.
      description: Information about whether DevOps Guru is configured to encrypt
        server-side data using KMS.
    ListAnomaliesForInsightFilters:
      type: object
      properties:
        ServiceCollection:
          $ref: '#/components/schemas/ServiceCollection'
      description: Specifies one or more service names that are used to list anomalies.
    ListAnomaliesForInsightMaxResults:
      type: integer
      minimum: 1
      maximum: 500
    ListAnomaliesForInsightRequest:
      type: object
      properties:
        InsightId:
          allOf:
          - $ref: '#/components/schemas/InsightId'
          description: The ID of the insight. The returned anomalies belong to this
            insight.
        StartTimeRange:
          allOf:
          - $ref: '#/components/schemas/StartTimeRange'
          description: A time range used to specify when the requested anomalies started.
            All returned anomalies started during this time range.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/ListAnomaliesForInsightMaxResults'
          description: The maximum number of results to return with a single call.
            To retrieve the remaining results, make another call with the returned
            `nextToken` value.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/UuidNextToken'
          description: The pagination token to use to retrieve the next page of results
            for this operation. If this value is null, it retrieves the first page.
        AccountId:
          allOf:
          - $ref: '#/components/schemas/AwsAccountId'
          description: The ID of the Amazon Web Services account.
        Filters:
          allOf:
          - $ref: '#/components/schemas/ListAnomaliesForInsightFilters'
          description: Specifies one or more service names that are used to list anomalies.
      required:
      - InsightId
    ListAnomaliesForInsightResponse:
      type: object
      properties:
        ProactiveAnomalies:
          allOf:
          - $ref: '#/components/schemas/ProactiveAnomalies'
          description: An array of `ProactiveAnomalySummary` objects that represent
            the requested anomalies
        ReactiveAnomalies:
          allOf:
          - $ref: '#/components/schemas/ReactiveAnomalies'
          description: An array of `ReactiveAnomalySummary` objects that represent
            the requested anomalies
        NextToken:
          allOf:
          - $ref: '#/components/schemas/UuidNextToken'
          description: The pagination token to use to retrieve the next page of results
            for this operation. If there are no more pages, this value is null.
    ListAnomalousLogGroupsMaxResults:
      type: integer
      minimum: 1
      maximum: 200
    ListAnomalousLogGroupsRequest:
      type: object
      properties:
        InsightId:
          allOf:
          - $ref: '#/components/schemas/InsightId'
          description: The ID of the insight containing the log groups.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/ListAnomalousLogGroupsMaxResults'
          description: The maximum number of results to return with a single call.
            To retrieve the remaining results, make another call with the returned
            `nextToken` value.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/UuidNextToken'
          description: The pagination token to use to retrieve the next page of results
            for this operation. If this value is null, it retrieves the first page.
      required:
      - InsightId
    ListAnomalousLogGroupsResponse:
      type: object
      properties:
        InsightId:
          allOf:
          - $ref: '#/components/schemas/InsightId'
          description: The ID of the insight containing the log groups.
        AnomalousLogGroups:
          allOf:
          - $ref: '#/components/schemas/AnomalousLogGroups'
          description: The list of Amazon CloudWatch log groups that are related to
            an insight.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/UuidNextToken'
          description: The pagination token to use to retrieve the next page of results
            for this operation. If there are no more pages, this value is null.
      required:
      - InsightId
      - AnomalousLogGroups
    ListEventsFilters:
      type: object
      properties:
        InsightId:
          allOf:
          - $ref: '#/components/schemas/InsightId'
          description: An ID of an insight that is related to the events you want
            to filter for.
        EventTimeRange:
          allOf:
          - $ref: '#/components/schemas/EventTimeRange'
          description: A time range during which you want the filtered events to have
            occurred.
        EventClass:
          allOf:
          - $ref: '#/components/schemas/EventClass'
          description: The class of the events you want to filter for, such as an
            infrastructure change, a deployment, or a schema change.
        EventSource:
          allOf:
          - $ref: '#/components/schemas/EventSource'
          description: The Amazon Web Services source that emitted the events you
            want to filter for.
        DataSource:
          allOf:
          - $ref: '#/components/schemas/EventDataSource'
          description: The source, `AWS_CLOUD_TRAIL` or `AWS_CODE_DEPLOY`, of the
            events you want returned.
        ResourceCollection:
          $ref: '#/components/schemas/ResourceCollection'
      description: Filters you can use to specify which events are returned when `ListEvents`
        is called.
    ListEventsMaxResults:
      type: integer
      minimum: 1
      maximum: 200
    ListEventsRequest:
      type: object
      properties:
        Filters:
          allOf:
          - $ref: '#/components/schemas/ListEventsFilters'
          description: A `ListEventsFilters` object used to specify which events to
            return.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/ListEventsMaxResults'
          description: The maximum number of results to return with a single call.
            To retrieve the remaining results, make another call with the returned
            `nextToken` value.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/UuidNextToken'
          description: The pagination token to use to retrieve the next page of results
            for this operation. If this value is null, it retrieves the first page.
        AccountId:
          allOf:
          - $ref: '#/components/schemas/AwsAccountId'
          description: The ID of the Amazon Web Services account.
      required:
      - Filters
    ListEventsResponse:
      type: object
      properties:
        Events:
          allOf:
          - $ref: '#/components/schemas/Events'
          description: A list of the requested events.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/UuidNextToken'
          description: The pagination token to use to retrieve the next page of results
            for this operation. If there are no more pages, this value is null.
      required:
      - Events
    ListInsightsAccountIdList:
      type: array
      items:
        $ref: '#/components/schemas/AwsAccountId'
    ListInsightsAnyStatusFilter:
      type: object
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/InsightType'
          description: Use to filter for either `REACTIVE` or `PROACTIVE` insights.
        StartTimeRange:
          allOf:
          - $ref: '#/components/schemas/StartTimeRange'
          description: A time range used to specify when the behavior of the filtered
            insights started.
      required:
      - Type
      - StartTimeRange
      description: Used to filter for insights that have any status.
    ListInsightsClosedStatusFilter:
      type: object
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/InsightType'
          description: Use to filter for either `REACTIVE` or `PROACTIVE` insights.
        EndTimeRange:
          allOf:
          - $ref: '#/components/schemas/EndTimeRange'
          description: A time range used to specify when the behavior of the filtered
            insights ended.
      required:
      - Type
      - EndTimeRange
      description: Used to filter for insights that have the status `CLOSED`.
    ListInsightsMaxResults:
      type: integer
      minimum: 1
      maximum: 100
    ListInsightsOngoingStatusFilter:
      type: object
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/InsightType'
          description: Use to filter for either `REACTIVE` or `PROACTIVE` insights.
      required:
      - Type
      description: Used to filter for insights that have the status `ONGOING`.
    ListInsightsOrganizationalUnitIdList:
      type: array
      items:
        $ref: '#/components/schemas/OrganizationalUnitId'
    ListInsightsRequest:
      type: object
      properties:
        StatusFilter:
          allOf:
          - $ref: '#/components/schemas/ListInsightsStatusFilter'
          description: A filter used to filter the returned insights by their status.
            You can specify one status filter.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/ListInsightsMaxResults'
          description: The maximum number of results to return with a single call.
            To retrieve the remaining results, make another call with the returned
            `nextToken` value.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/UuidNextToken'
          description: The pagination token to use to retrieve the next page of results
            for this operation. If this value is null, it retrieves the first page.
      required:
      - StatusFilter
    ListInsightsResponse:
      type: object
      properties:
        ProactiveInsights:
          allOf:
          - $ref: '#/components/schemas/ProactiveInsights'
          description: The returned list of proactive insights.
        ReactiveInsights:
          allOf:
          - $ref: '#/components/schemas/ReactiveInsights'
          description: The returned list of reactive insights.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/UuidNextToken'
          description: The pagination token to use to retrieve the next page of results
            for this operation. If there are no more pages, this value is null.
    ListInsightsStatusFilter:
      type: object
      properties:
        Ongoing:
          allOf:
          - $ref: '#/components/schemas/ListInsightsOngoingStatusFilter'
          description: A `ListInsightsAnyStatusFilter` that specifies ongoing insights
            that are either `REACTIVE` or `PROACTIVE`.
        Closed:
          allOf:
          - $ref: '#/components/schemas/ListInsightsClosedStatusFilter'
          description: A `ListInsightsClosedStatusFilter` that specifies closed insights
            that are either `REACTIVE` or `PROACTIVE`.
        Any:
          allOf:
          - $ref: '#/components/schemas/ListInsightsAnyStatusFilter'
          description: A `ListInsightsAnyStatusFilter` that specifies insights of
            any status that are either `REACTIVE` or `PROACTIVE`.
      description: A filter used by `ListInsights` to specify which insights to return.
    ListMonitoredResourcesFilters:
      type: object
      properties:
        ResourcePermission:
          allOf:
          - $ref: '#/components/schemas/ResourcePermission'
          description: The permission status of a resource.
        ResourceTypeFilters:
          allOf:
          - $ref: '#/components/schemas/ResourceTypeFilters'
          description: The type of resource that you wish to retrieve, such as log
            groups.
      required:
      - ResourcePermission
      - ResourceTypeFilters
      description: Filters to determine which monitored resources you want to retrieve.
        You can filter by resource type or resource permission status.
    ListMonitoredResourcesMaxResults:
      type: integer
      minimum: 1
      maximum: 50
    ListMonitoredResourcesRequest:
      type: object
      properties:
        Filters:
          allOf:
          - $ref: '#/components/schemas/ListMonitoredResourcesFilters'
          description: Filters to determine which monitored resources you want to
            retrieve. You can filter by resource type or resource permission status.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/ListMonitoredResourcesMaxResults'
          description: The maximum number of results to return with a single call.
            To retrieve the remaining results, make another call with the returned
            `nextToken` value.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/UuidNextToken'
          description: The pagination token to use to retrieve the next page of results
            for this operation. If this value is null, it retrieves the first page.
    ListMonitoredResourcesResponse:
      type: object
      properties:
        MonitoredResourceIdentifiers:
          allOf:
          - $ref: '#/components/schemas/MonitoredResourceIdentifiers'
          description: Information about the resource that is being monitored, including
            the name of the resource, the type of resource, and whether or not permission
            is given to DevOps Guru to access that resource.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/UuidNextToken'
          description: The pagination token to use to retrieve the next page of results
            for this operation. If there are no more pages, this value is null.
      required:
      - MonitoredResourceIdentifiers
    ListNotificationChannelsRequest:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/UuidNextToken'
          description: The pagination token to use to retrieve the next page of results
            for this operation. If this value is null, it retrieves the first page.
    ListNotificationChannelsResponse:
      type: object
      properties:
        Channels:
          allOf:
          - $ref: '#/components/schemas/Channels'
          description: An array that contains the requested notification channels.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/UuidNextToken'
          description: The pagination token to use to retrieve the next page of results
            for this operation. If there are no more pages, this value is null.
    ListOrganizationInsightsRequest:
      type: object
      properties:
        StatusFilter:
          $ref: '#/components/schemas/ListInsightsStatusFilter'
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/ListInsightsMaxResults'
          description: The maximum number of results to return with a single call.
            To retrieve the remaining results, make another call with the returned
            `nextToken` value.
        AccountIds:
          allOf:
          - $ref: '#/components/schemas/ListInsightsAccountIdList'
          description: The ID of the Amazon Web Services account.
        OrganizationalUnitIds:
          allOf:
          - $ref: '#/components/schemas/ListInsightsOrganizationalUnitIdList'
          description: The ID of the organizational unit.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/UuidNextToken'
          description: The pagination token to use to retrieve the next page of results
            for this operation. If this value is null, it retrieves the first page.
      required:
      - StatusFilter
    ListOrganizationInsightsResponse:
      type: object
      properties:
        ProactiveInsights:
          allOf:
          - $ref: '#/components/schemas/ProactiveOrganizationInsights'
          description: An integer that specifies the number of open proactive insights
            in your Amazon Web Services account.
        ReactiveInsights:
          allOf:
          - $ref: '#/components/schemas/ReactiveOrganizationInsights'
          description: An integer that specifies the number of open reactive insights
            in your Amazon Web Services account.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/UuidNextToken'
          description: The pagination token to use to retrieve the next page of results
            for this operation. If there are no more pages, this value is null.
    ListRecommendationsRequest:
      type: object
      properties:
        InsightId:
          allOf:
          - $ref: '#/components/schemas/InsightId'
          description: The ID of the requested insight.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/UuidNextToken'
          description: The pagination token to use to retrieve the next page of results
            for this operation. If this value is null, it retrieves the first page.
        Locale:
          allOf:
          - $ref: '#/components/schemas/Locale'
          description: A locale that specifies the language to use for recommendations.
        AccountId:
          allOf:
          - $ref: '#/components/schemas/AwsAccountId'
          description: The ID of the Amazon Web Services account.
      required:
      - InsightId
    ListRecommendationsResponse:
      type: object
      properties:
        Recommendations:
          allOf:
          - $ref: '#/components/schemas/Recommendations'
          description: An array of the requested recommendations.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/UuidNextToken'
          description: The pagination token to use to retrieve the next page of results
            for this operation. If there are no more pages, this value is null.
    Locale:
      type: string
      enum:
      - DE_DE
      - EN_US
      - EN_GB
      - ES_ES
      - FR_FR
      - IT_IT
      - JA_JP
      - KO_KR
      - PT_BR
      - ZH_CN
      - ZH_TW
    LogAnomalyClass:
      type: object
      properties:
        LogStreamName:
          allOf:
          - $ref: '#/components/schemas/LogStreamName'
          description: The name of the Amazon CloudWatch log stream that the anomalous
            log event belongs to. A log stream is a sequence of log events that share
            the same source.
        LogAnomalyType:
          allOf:
          - $ref: '#/components/schemas/LogAnomalyType'
          description: The type of log anomaly that has been detected.
        LogAnomalyToken:
          allOf:
          - $ref: '#/components/schemas/LogAnomalyToken'
          description: The token where the anomaly was detected. This may refer to
            an exception or another location, or it may be blank for log anomalies
            such as format anomalies.
        LogEventId:
          allOf:
          - $ref: '#/components/schemas/LogEventId'
          description: The ID of the log event.
        Explanation:
          allOf:
          - $ref: '#/components/schemas/Explanation'
          description: The explanation for why the log event is considered an anomaly.
        NumberOfLogLinesOccurrences:
          allOf:
          - $ref: '#/components/schemas/NumberOfLogLinesOccurrences'
          description: The number of log lines where this anomalous log event occurs.
        LogEventTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time of the first occurrence of the anomalous log event.
      description: Information about an anomalous log event found within a log group.
    LogAnomalyClasses:
      type: array
      items:
        $ref: '#/components/schemas/LogAnomalyClass'
    LogAnomalyShowcase:
      type: object
      properties:
        LogAnomalyClasses:
          allOf:
          - $ref: '#/components/schemas/LogAnomalyClasses'
          description: A list of anomalous log events that may be related.
      description: A cluster of similar anomalous log events found within a log group.
    LogAnomalyShowcases:
      type: array
      items:
        $ref: '#/components/schemas/LogAnomalyShowcase'
    LogAnomalyToken:
      type: string
      minLength: 1
      maxLength: 2048
    LogAnomalyType:
      type: string
      enum:
      - KEYWORD
      - KEYWORD_TOKEN
      - FORMAT
      - HTTP_CODE
      - BLOCK_FORMAT
      - NUMERICAL_POINT
      - NUMERICAL_NAN
      - NEW_FIELD_NAME
    LogEventId:
      type: string
      minLength: 1
      maxLength: 512
    LogGroupName:
      type: string
      minLength: 1
      maxLength: 512
    LogStreamName:
      type: string
      minLength: 1
      maxLength: 512
    LogsAnomalyDetectionIntegration:
      type: object
      properties:
        OptInStatus:
          allOf:
          - $ref: '#/components/schemas/OptInStatus'
          description: Specifies if DevOps Guru is configured to perform log anomaly
            detection on CloudWatch log groups.
      description: Information about the integration of DevOps Guru with CloudWatch
        log groups for log anomaly detection.
    LogsAnomalyDetectionIntegrationConfig:
      type: object
      properties:
        OptInStatus:
          allOf:
          - $ref: '#/components/schemas/OptInStatus'
          description: Specifies if DevOps Guru is configured to perform log anomaly
            detection on CloudWatch log groups.
      description: Information about the integration of DevOps Guru with CloudWatch
        log groups for log anomaly detection. You can use this to update the configuration.
    MeanTimeToRecoverInMilliseconds:
      type: integer
      format: int64
    MetricValue:
      type: number
      format: double
    MonitoredResourceIdentifier:
      type: object
      properties:
        MonitoredResourceName:
          allOf:
          - $ref: '#/components/schemas/MonitoredResourceName'
          description: The name of the resource being monitored.
        Type:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          description: The type of resource being monitored.
        ResourcePermission:
          allOf:
          - $ref: '#/components/schemas/ResourcePermission'
          description: The permission status of a resource.
        LastUpdated:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which DevOps Guru last updated this resource.
        ResourceCollection:
          $ref: '#/components/schemas/ResourceCollection'
      description: Information about the resource that is being monitored, including
        the name of the resource, the type of resource, and whether or not permission
        is given to DevOps Guru to access that resource.
    MonitoredResourceIdentifiers:
      type: array
      items:
        $ref: '#/components/schemas/MonitoredResourceIdentifier'
    MonitoredResourceName:
      type: string
      pattern: ^[\.\-_\/#A-Za-z0-9]+$
      minLength: 1
      maxLength: 512
    NotificationChannel:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/NotificationChannelId'
          description: The ID of a notification channel.
        Config:
          allOf:
          - $ref: '#/components/schemas/NotificationChannelConfig'
          description: A `NotificationChannelConfig` object that contains information
            about configured notification channels.
      description: 'Information about a notification channel. A notification channel
        is used to notify you when DevOps Guru creates an insight. The one supported
        notification channel is Amazon Simple Notification Service (Amazon SNS).


        If you use an Amazon SNS topic in another account, you must attach a policy
        to it that grants DevOps Guru permission to send it notifications. DevOps
        Guru adds the required policy on your behalf to send notifications using Amazon
        SNS in your account. DevOps Guru only supports standard SNS topics. For more
        information, see [Permissions for Amazon SNS topics](https://docs.aws.amazon.com/devops-guru/latest/userguide/sns-required-permissions.html).


        If you use an Amazon SNS topic that is encrypted by an Amazon Web Services
        Key Management Service customer-managed key (CMK), then you must add permissions
        to the CMK. For more information, see [Permissions for Amazon Web Services
        KMSâ€“encrypted Amazon SNS topics](https://docs.aws.amazon.com/devops-guru/latest/userguide/sns-kms-permissions.html).'
    NotificationChannelConfig:
      type: object
      properties:
        Sns:
          allOf:
          - $ref: '#/components/schemas/SnsChannelConfig'
          description: 'Information about a notification channel configured in DevOps
            Guru to send notifications when insights are created.


            If you use an Amazon SNS topic in another account, you must attach a policy
            to it that grants DevOps Guru permission to send it notifications. DevOps
            Guru adds the required policy on your behalf to send notifications using
            Amazon SNS in your account. DevOps Guru only supports standard SNS topics.
            For more information, see [Permissions for Amazon SNS topics](https://docs.aws.amazon.com/devops-guru/latest/userguide/sns-required-permissions.html).


            If you use an Amazon SNS topic that is encrypted by an Amazon Web Services
            Key Management Service customer-managed key (CMK), then you must add permissions
            to the CMK. For more information, see [Permissions for Amazon Web Services
            KMSâ€“encrypted Amazon SNS topics](https://docs.aws.amazon.com/devops-guru/latest/userguide/sns-kms-permissions.html).'
        Filters:
          allOf:
          - $ref: '#/components/schemas/NotificationFilterConfig'
          description: The filter configurations for the Amazon SNS notification topic
            you use with DevOps Guru. If you do not provide filter configurations,
            the default configurations are to receive notifications for all message
            types of `High` or `Medium` severity.
      required:
      - Sns
      description: Information about notification channels you have configured with
        DevOps Guru. The one supported notification channel is Amazon Simple Notification
        Service (Amazon SNS).
    NotificationChannelId:
      type: string
      pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
      minLength: 36
      maxLength: 36
    NotificationFilterConfig:
      type: object
      properties:
        Severities:
          allOf:
          - $ref: '#/components/schemas/InsightSeverities'
          description: The severity levels that you want to receive notifications
            for. For example, you can choose to receive notifications only for insights
            with `HIGH` and `MEDIUM` severity levels. For more information, see [Understanding
            insight severities](https://docs.aws.amazon.com/devops-guru/latest/userguide/working-with-insights.html#understanding-insights-severities).
        MessageTypes:
          allOf:
          - $ref: '#/components/schemas/NotificationMessageTypes'
          description: The events that you want to receive notifications for. For
            example, you can choose to receive notifications only when the severity
            level is upgraded or a new insight is created.
      description: The filter configurations for the Amazon SNS notification topic
        you use with DevOps Guru. You can choose to specify which events or message
        types to receive notifications for. You can also choose to specify which severity
        levels to receive notifications for.
    NotificationMessageType:
      type: string
      enum:
      - NEW_INSIGHT
      - CLOSED_INSIGHT
      - NEW_ASSOCIATION
      - SEVERITY_UPGRADED
      - NEW_RECOMMENDATION
    NotificationMessageTypes:
      type: array
      items:
        $ref: '#/components/schemas/NotificationMessageType'
    NumMetricsAnalyzed:
      type: integer
      default: 0
    NumOpenProactiveInsights:
      type: integer
      default: 0
    NumOpenReactiveInsights:
      type: integer
      default: 0
    NumProactiveInsights:
      type: integer
      default: 0
    NumReactiveInsights:
      type: integer
      default: 0
    NumberOfLogLinesOccurrences:
      type: integer
      default: 0
    NumberOfLogLinesScanned:
      type: integer
      default: 0
    OpsCenterIntegration:
      type: object
      properties:
        OptInStatus:
          allOf:
          - $ref: '#/components/schemas/OptInStatus'
          description: Specifies if DevOps Guru is enabled to create an Amazon Web
            Services Systems Manager OpsItem for each created insight.
      description: Information about whether DevOps Guru is configured to create an
        OpsItem in Amazon Web Services Systems Manager OpsCenter for each created
        insight.
    OpsCenterIntegrationConfig:
      type: object
      properties:
        OptInStatus:
          allOf:
          - $ref: '#/components/schemas/OptInStatus'
          description: Specifies if DevOps Guru is enabled to create an Amazon Web
            Services Systems Manager OpsItem for each created insight.
      description: Information about whether DevOps Guru is configured to create an
        OpsItem in Amazon Web Services Systems Manager OpsCenter for each created
        insight. You can use this to update the configuration.
    OptInStatus:
      type: string
      enum:
      - ENABLED
      - DISABLED
      description: "<p> Specifies if DevOps Guru is enabled to create an Amazon Web\
        \ Services Systems Manager OpsItem for each created\n\t\t\tinsight. </p>"
    OrganizationResourceCollectionMaxResults:
      type: integer
      minimum: 1
      maximum: 500
    OrganizationResourceCollectionType:
      type: string
      enum:
      - AWS_CLOUD_FORMATION
      - AWS_SERVICE
      - AWS_ACCOUNT
      - AWS_TAGS
    OrganizationalUnitId:
      type: string
      pattern: ^ou-[0-9a-z]{4,32}-[a-z0-9]{8,32}$
      minLength: 0
      maxLength: 68
    OrganizationalUnitIdList:
      type: array
      items:
        $ref: '#/components/schemas/OrganizationalUnitId'
    PerformanceInsightsMetricDimension:
      type: string
    PerformanceInsightsMetricDimensionGroup:
      type: object
      properties:
        Group:
          allOf:
          - $ref: '#/components/schemas/PerformanceInsightsMetricGroup'
          description: "The name of the dimension group. Its valid values are:\n\n\
            \  * `db` \\- The name of the database to which the client is connected\
            \ (only Aurora PostgreSQL, Amazon RDS PostgreSQL, Aurora MySQL, Amazon\
            \ RDS MySQL, and MariaDB)\n\n  * `db.application` \\- The name of the\
            \ application that is connected to the database (only Aurora PostgreSQL\
            \ and RDS PostgreSQL)\n\n  * `db.host` \\- The host name of the connected\
            \ client (all engines)\n\n  * `db.session_type` \\- The type of the current\
            \ session (only Aurora PostgreSQL and RDS PostgreSQL)\n\n  * `db.sql`\
            \ \\- The SQL that is currently executing (all engines)\n\n  * `db.sql_tokenized`\
            \ \\- The SQL digest (all engines)\n\n  * `db.wait_event` \\- The event\
            \ for which the database backend is waiting (all engines)\n\n  * `db.wait_event_type`\
            \ \\- The type of event for which the database backend is waiting (all\
            \ engines)\n\n  * `db.user` \\- The user logged in to the database (all\
            \ engines)"
        Dimensions:
          allOf:
          - $ref: '#/components/schemas/PerformanceInsightsMetricDimensions'
          description: "A list of specific dimensions from a dimension group. If this\
            \ parameter is not present, then it signifies that all of the dimensions\
            \ in the group were requested or are present in the response.\n\nValid\
            \ values for elements in the `Dimensions` array are:\n\n  * `db.application.name`\
            \ \\- The name of the application that is connected to the database (only\
            \ Aurora PostgreSQL and RDS PostgreSQL)\n\n  * `db.host.id` \\- The host\
            \ ID of the connected client (all engines)\n\n  * `db.host.name` \\- The\
            \ host name of the connected client (all engines)\n\n  * `db.name` \\\
            - The name of the database to which the client is connected (only Aurora\
            \ PostgreSQL, Amazon RDS PostgreSQL, Aurora MySQL, Amazon RDS MySQL, and\
            \ MariaDB)\n\n  * `db.session_type.name` \\- The type of the current session\
            \ (only Aurora PostgreSQL and RDS PostgreSQL)\n\n  * `db.sql.id` \\- The\
            \ SQL ID generated by Performance Insights (all engines)\n\n  * `db.sql.db_id`\
            \ \\- The SQL ID generated by the database (all engines)\n\n  * `db.sql.statement`\
            \ \\- The SQL text that is being executed (all engines)\n\n  * `db.sql.tokenized_id`\n\
            \n  * `db.sql_tokenized.id` \\- The SQL digest ID generated by Performance\
            \ Insights (all engines)\n\n  * `db.sql_tokenized.db_id` \\- SQL digest\
            \ ID generated by the database (all engines)\n\n  * `db.sql_tokenized.statement`\
            \ \\- The SQL digest text (all engines)\n\n  * `db.user.id` \\- The ID\
            \ of the user logged in to the database (all engines)\n\n  * `db.user.name`\
            \ \\- The name of the user logged in to the database (all engines)\n\n\
            \  * `db.wait_event.name` \\- The event for which the backend is waiting\
            \ (all engines)\n\n  * `db.wait_event.type` \\- The type of event for\
            \ which the backend is waiting (all engines)\n\n  * `db.wait_event_type.name`\
            \ \\- The name of the event type for which the backend is waiting (all\
            \ engines)"
        Limit:
          allOf:
          - $ref: '#/components/schemas/PerformanceInsightsMetricLimitInteger'
          description: The maximum number of items to fetch for this dimension group.
      description: "A logical grouping of Performance Insights metrics for a related\
        \ subject area. For example, the `db.sql` dimension group consists of the\
        \ following dimensions: `db.sql.id`, `db.sql.db_id`, `db.sql.statement`, and\
        \ `db.sql.tokenized_id`.\n\nEach response element returns a maximum of 500\
        \ bytes. For larger elements, such as SQL statements, only the first 500 bytes\
        \ are returned.\n\nAmazon RDS Performance Insights enables you to monitor\
        \ and explore different dimensions of database load based on data captured\
        \ from a running DB instance. DB load is measured as average active sessions.\
        \ Performance Insights provides the data to API consumers as a two-dimensional\
        \ time-series dataset. The time dimension provides DB load data for each time\
        \ point in the queried time range. Each time point decomposes overall load\
        \ in relation to the requested dimensions, measured at that time point. Examples\
        \ include SQL, Wait event, User, and Host.\n\n  * To learn more about Performance\
        \ Insights and Amazon Aurora DB instances, go to the [ Amazon Aurora User\
        \ Guide](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_PerfInsights.html).\
        \ \n\n  * To learn more about Performance Insights and Amazon RDS DB instances,\
        \ go to the [ Amazon RDS User Guide](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_PerfInsights.html)."
    PerformanceInsightsMetricDimensions:
      type: array
      items:
        $ref: '#/components/schemas/PerformanceInsightsMetricDimension'
    PerformanceInsightsMetricDisplayName:
      type: string
    PerformanceInsightsMetricFilterKey:
      type: string
    PerformanceInsightsMetricFilterMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/PerformanceInsightsMetricFilterValue'
    PerformanceInsightsMetricFilterValue:
      type: string
    PerformanceInsightsMetricGroup:
      type: string
    PerformanceInsightsMetricLimitInteger:
      type: integer
      minimum: 1
      maximum: 10
    PerformanceInsightsMetricName:
      type: string
    PerformanceInsightsMetricQuery:
      type: object
      properties:
        Metric:
          allOf:
          - $ref: '#/components/schemas/PerformanceInsightsMetricName'
          description: "The name of the meteric used used when querying an Performance\
            \ Insights `GetResourceMetrics` API for anomaly metrics.\n\nValid values\
            \ for `Metric` are:\n\n  * `db.load.avg` \\- a scaled representation of\
            \ the number of active sessions for the database engine.\n\n  * `db.sampledload.avg`\
            \ \\- the raw number of active sessions for the database engine.\n\nIf\
            \ the number of active sessions is less than an internal Performance Insights\
            \ threshold, `db.load.avg` and `db.sampledload.avg` are the same value.\
            \ If the number of active sessions is greater than the internal threshold,\
            \ Performance Insights samples the active sessions, with `db.load.avg`\
            \ showing the scaled values, `db.sampledload.avg` showing the raw values,\
            \ and `db.sampledload.avg` less than `db.load.avg`. For most use cases,\
            \ you can query `db.load.avg` only."
        GroupBy:
          allOf:
          - $ref: '#/components/schemas/PerformanceInsightsMetricDimensionGroup'
          description: The specification for how to aggregate the data points from
            a Performance Insights `GetResourceMetrics` API query. The Performance
            Insights query returns all of the dimensions within that group, unless
            you provide the names of specific dimensions within that group. You can
            also request that Performance Insights return a limited number of values
            for a dimension.
        Filter:
          allOf:
          - $ref: '#/components/schemas/PerformanceInsightsMetricFilterMap'
          description: "One or more filters to apply to a Performance Insights `GetResourceMetrics`\
            \ API query. Restrictions:\n\n  * Any number of filters by the same dimension,\
            \ as specified in the `GroupBy` parameter.\n\n  * A single filter for\
            \ any other dimension in this dimension group."
      description: "A single query to be processed. Use these parameters to query\
        \ the Performance Insights `GetResourceMetrics` API to retrieve the metrics\
        \ for an anomaly. For more information, see ` [GetResourceMetrics](https://docs.aws.amazon.com/performance-insights/latest/APIReference/API_GetResourceMetrics.html)\
        \ ` in the _Amazon RDS Performance Insights API Reference_.\n\nAmazon RDS\
        \ Performance Insights enables you to monitor and explore different dimensions\
        \ of database load based on data captured from a running DB instance. DB load\
        \ is measured as average active sessions. Performance Insights provides the\
        \ data to API consumers as a two-dimensional time-series dataset. The time\
        \ dimension provides DB load data for each time point in the queried time\
        \ range. Each time point decomposes overall load in relation to the requested\
        \ dimensions, measured at that time point. Examples include SQL, Wait event,\
        \ User, and Host.\n\n  * To learn more about Performance Insights and Amazon\
        \ Aurora DB instances, go to the [ Amazon Aurora User Guide](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_PerfInsights.html).\
        \ \n\n  * To learn more about Performance Insights and Amazon RDS DB instances,\
        \ go to the [ Amazon RDS User Guide](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_PerfInsights.html)."
    PerformanceInsightsMetricUnit:
      type: string
    PerformanceInsightsMetricsDetail:
      type: object
      properties:
        MetricDisplayName:
          allOf:
          - $ref: '#/components/schemas/PerformanceInsightsMetricDisplayName'
          description: The name used for a specific Performance Insights metric.
        Unit:
          allOf:
          - $ref: '#/components/schemas/PerformanceInsightsMetricUnit'
          description: The unit of measure for a metric. For example, a session or
            a process.
        MetricQuery:
          allOf:
          - $ref: '#/components/schemas/PerformanceInsightsMetricQuery'
          description: A single query to be processed for the metric. For more information,
            see ` [PerformanceInsightsMetricQuery](https://docs.aws.amazon.com/devops-guru/latest/APIReference/API_PerformanceInsightsMetricQuery.html)
            `.
        ReferenceData:
          allOf:
          - $ref: '#/components/schemas/PerformanceInsightsReferenceDataList'
          description: For more information, see ` [PerformanceInsightsReferenceData](https://docs.aws.amazon.com/devops-guru/latest/APIReference/API_PerformanceInsightsReferenceData.html)
            `.
        StatsAtAnomaly:
          allOf:
          - $ref: '#/components/schemas/PerformanceInsightsStats'
          description: The metric statistics during the anomalous period detected
            by DevOps Guru;
        StatsAtBaseline:
          allOf:
          - $ref: '#/components/schemas/PerformanceInsightsStats'
          description: Typical metric statistics that are not considered anomalous.
            When DevOps Guru analyzes metrics, it compares them to `StatsAtBaseline`
            to help determine if they are anomalous.
      description: "Details about Performance Insights metrics.\n\nAmazon RDS Performance\
        \ Insights enables you to monitor and explore different dimensions of database\
        \ load based on data captured from a running DB instance. DB load is measured\
        \ as average active sessions. Performance Insights provides the data to API\
        \ consumers as a two-dimensional time-series dataset. The time dimension provides\
        \ DB load data for each time point in the queried time range. Each time point\
        \ decomposes overall load in relation to the requested dimensions, measured\
        \ at that time point. Examples include SQL, Wait event, User, and Host.\n\n\
        \  * To learn more about Performance Insights and Amazon Aurora DB instances,\
        \ go to the [ Amazon Aurora User Guide](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_PerfInsights.html).\
        \ \n\n  * To learn more about Performance Insights and Amazon RDS DB instances,\
        \ go to the [ Amazon RDS User Guide](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_PerfInsights.html)."
    PerformanceInsightsMetricsDetails:
      type: array
      items:
        $ref: '#/components/schemas/PerformanceInsightsMetricsDetail'
    PerformanceInsightsReferenceComparisonValues:
      type: object
      properties:
        ReferenceScalar:
          allOf:
          - $ref: '#/components/schemas/PerformanceInsightsReferenceScalar'
          description: A scalar value DevOps Guru for a metric that DevOps Guru compares
            to actual metric values. This reference value is used to determine if
            an actual metric value should be considered anomalous.
        ReferenceMetric:
          allOf:
          - $ref: '#/components/schemas/PerformanceInsightsReferenceMetric'
          description: A metric that DevOps Guru compares to actual metric values.
            This reference metric is used to determine if an actual metric should
            be considered anomalous.
      description: Reference scalar values and other metrics that DevOps Guru displays
        on a graph in its console along with the actual metrics it analyzed. Compare
        these reference values to your actual metrics to help you understand anomalous
        behavior that DevOps Guru detected.
    PerformanceInsightsReferenceData:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/PerformanceInsightsReferenceName'
          description: The name of the reference data.
        ComparisonValues:
          allOf:
          - $ref: '#/components/schemas/PerformanceInsightsReferenceComparisonValues'
          description: The specific reference values used to evaluate the Performance
            Insights. For more information, see ` [PerformanceInsightsReferenceComparisonValues](https://docs.aws.amazon.com/devops-guru/latest/APIReference/API_PerformanceInsightsReferenceComparisonValues.html)
            `.
      description: Reference data used to evaluate Performance Insights to determine
        if its performance is anomalous or not.
    PerformanceInsightsReferenceDataList:
      type: array
      items:
        $ref: '#/components/schemas/PerformanceInsightsReferenceData'
    PerformanceInsightsReferenceMetric:
      type: object
      properties:
        MetricQuery:
          allOf:
          - $ref: '#/components/schemas/PerformanceInsightsMetricQuery'
          description: A query to be processed on the metric.
      description: Information about a reference metric used to evaluate Performance
        Insights.
    PerformanceInsightsReferenceName:
      type: string
    PerformanceInsightsReferenceScalar:
      type: object
      properties:
        Value:
          allOf:
          - $ref: '#/components/schemas/PerformanceInsightsValueDouble'
          description: The reference value.
      description: A reference value to compare Performance Insights metrics against
        to determine if the metrics demonstrate anomalous behavior.
    PerformanceInsightsStat:
      type: object
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/PerformanceInsightsStatType'
          description: The statistic type.
        Value:
          allOf:
          - $ref: '#/components/schemas/PerformanceInsightsValueDouble'
          description: The value of the statistic.
      description: A statistic in a Performance Insights collection.
    PerformanceInsightsStatType:
      type: string
    PerformanceInsightsStats:
      type: array
      items:
        $ref: '#/components/schemas/PerformanceInsightsStat'
    PerformanceInsightsValueDouble:
      type: number
      format: double
    PredictionTimeRange:
      type: object
      properties:
        StartTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time range during which a metric limit is expected to be
            exceeded. This applies to proactive insights only.
        EndTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time when the behavior in a proactive insight is expected
            to end.
      required:
      - StartTime
      description: The time range during which anomalous behavior in a proactive anomaly
        or an insight is expected to occur.
    ProactiveAnomalies:
      type: array
      items:
        $ref: '#/components/schemas/ProactiveAnomalySummary'
    ProactiveAnomaly:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/AnomalyId'
          description: The ID of a proactive anomaly.
        Severity:
          allOf:
          - $ref: '#/components/schemas/AnomalySeverity'
          description: The severity of the anomaly. The severity of anomalies that
            generate an insight determine that insight's severity. For more information,
            see [Understanding insight severities](https://docs.aws.amazon.com/devops-guru/latest/userguide/working-with-insights.html#understanding-insights-severities)
            in the _Amazon DevOps Guru User Guide_.
        Status:
          allOf:
          - $ref: '#/components/schemas/AnomalyStatus'
          description: The status of a proactive anomaly.
        UpdateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time of the anomaly's most recent update.
        AnomalyTimeRange:
          $ref: '#/components/schemas/AnomalyTimeRange'
        AnomalyReportedTimeRange:
          allOf:
          - $ref: '#/components/schemas/AnomalyReportedTimeRange'
          description: An `AnomalyReportedTimeRange` object that specifies the time
            range between when the anomaly is opened and the time when it is closed.
        PredictionTimeRange:
          $ref: '#/components/schemas/PredictionTimeRange'
        SourceDetails:
          allOf:
          - $ref: '#/components/schemas/AnomalySourceDetails'
          description: Details about the source of the analyzed operational data that
            triggered the anomaly. The one supported source is Amazon CloudWatch metrics.
        AssociatedInsightId:
          allOf:
          - $ref: '#/components/schemas/InsightId'
          description: The ID of the insight that contains this anomaly. An insight
            is composed of related anomalies.
        ResourceCollection:
          $ref: '#/components/schemas/ResourceCollection'
        Limit:
          allOf:
          - $ref: '#/components/schemas/AnomalyLimit'
          description: A threshold that was exceeded by behavior in analyzed resources.
            Exceeding this threshold is related to the anomalous behavior that generated
            this anomaly.
        SourceMetadata:
          allOf:
          - $ref: '#/components/schemas/AnomalySourceMetadata'
          description: The metadata for the anomaly.
        AnomalyResources:
          allOf:
          - $ref: '#/components/schemas/AnomalyResources'
          description: Information about a resource in which DevOps Guru detected
            anomalous behavior.
        Description:
          allOf:
          - $ref: '#/components/schemas/AnomalyDescription'
          description: A description of the proactive anomaly.
      description: Information about an anomaly. This object is returned by `ListAnomalies`.
    ProactiveAnomalySummary:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/AnomalyId'
          description: The ID of the anomaly.
        Severity:
          allOf:
          - $ref: '#/components/schemas/AnomalySeverity'
          description: The severity of the anomaly. The severity of anomalies that
            generate an insight determine that insight's severity. For more information,
            see [Understanding insight severities](https://docs.aws.amazon.com/devops-guru/latest/userguide/working-with-insights.html#understanding-insights-severities)
            in the _Amazon DevOps Guru User Guide_.
        Status:
          allOf:
          - $ref: '#/components/schemas/AnomalyStatus'
          description: The status of the anomaly.
        UpdateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time of the anomaly's most recent update.
        AnomalyTimeRange:
          $ref: '#/components/schemas/AnomalyTimeRange'
        AnomalyReportedTimeRange:
          allOf:
          - $ref: '#/components/schemas/AnomalyReportedTimeRange'
          description: An `AnomalyReportedTimeRange` object that specifies the time
            range between when the anomaly is opened and the time when it is closed.
        PredictionTimeRange:
          $ref: '#/components/schemas/PredictionTimeRange'
        SourceDetails:
          allOf:
          - $ref: '#/components/schemas/AnomalySourceDetails'
          description: Details about the source of the analyzed operational data that
            triggered the anomaly. The one supported source is Amazon CloudWatch metrics.
        AssociatedInsightId:
          allOf:
          - $ref: '#/components/schemas/InsightId'
          description: The ID of the insight that contains this anomaly. An insight
            is composed of related anomalies.
        ResourceCollection:
          $ref: '#/components/schemas/ResourceCollection'
        Limit:
          allOf:
          - $ref: '#/components/schemas/AnomalyLimit'
          description: A threshold that was exceeded by behavior in analyzed resources.
            Exceeding this threshold is related to the anomalous behavior that generated
            this anomaly.
        SourceMetadata:
          allOf:
          - $ref: '#/components/schemas/AnomalySourceMetadata'
          description: The metadata of the source which detects proactive anomalies.
        AnomalyResources:
          allOf:
          - $ref: '#/components/schemas/AnomalyResources'
          description: Information about a resource in which DevOps Guru detected
            anomalous behavior.
        Description:
          allOf:
          - $ref: '#/components/schemas/AnomalyDescription'
          description: A description of the proactive anomaly.
      description: Details about a proactive anomaly. This object is returned by `DescribeAnomaly.`
    ProactiveInsight:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/InsightId'
          description: The ID of the proactive insight.
        Name:
          allOf:
          - $ref: '#/components/schemas/InsightName'
          description: The name of the proactive insight.
        Severity:
          allOf:
          - $ref: '#/components/schemas/InsightSeverity'
          description: The severity of the insight. For more information, see [Understanding
            insight severities](https://docs.aws.amazon.com/devops-guru/latest/userguide/working-with-insights.html#understanding-insights-severities)
            in the _Amazon DevOps Guru User Guide_.
        Status:
          allOf:
          - $ref: '#/components/schemas/InsightStatus'
          description: The status of the proactive insight.
        InsightTimeRange:
          $ref: '#/components/schemas/InsightTimeRange'
        PredictionTimeRange:
          $ref: '#/components/schemas/PredictionTimeRange'
        ResourceCollection:
          $ref: '#/components/schemas/ResourceCollection'
        SsmOpsItemId:
          allOf:
          - $ref: '#/components/schemas/SsmOpsItemId'
          description: The ID of the Amazon Web Services System Manager OpsItem created
            for this insight. You must enable the creation of OpstItems insights before
            they are created for each insight.
        Description:
          allOf:
          - $ref: '#/components/schemas/InsightDescription'
          description: Describes the proactive insight.
      description: Details about a proactive insight. This object is returned by `ListInsights`.
    ProactiveInsightSummary:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/InsightId'
          description: The ID of the proactive insight.
        Name:
          allOf:
          - $ref: '#/components/schemas/InsightName'
          description: The name of the proactive insight.
        Severity:
          allOf:
          - $ref: '#/components/schemas/InsightSeverity'
          description: The severity of the insight. For more information, see [Understanding
            insight severities](https://docs.aws.amazon.com/devops-guru/latest/userguide/working-with-insights.html#understanding-insights-severities)
            in the _Amazon DevOps Guru User Guide_.
        Status:
          allOf:
          - $ref: '#/components/schemas/InsightStatus'
          description: The status of the proactive insight.
        InsightTimeRange:
          $ref: '#/components/schemas/InsightTimeRange'
        PredictionTimeRange:
          $ref: '#/components/schemas/PredictionTimeRange'
        ResourceCollection:
          $ref: '#/components/schemas/ResourceCollection'
        ServiceCollection:
          allOf:
          - $ref: '#/components/schemas/ServiceCollection'
          description: A collection of the names of Amazon Web Services services.
        AssociatedResourceArns:
          allOf:
          - $ref: '#/components/schemas/AssociatedResourceArns'
          description: The Amazon Resource Names (ARNs) of the Amazon Web Services
            resources that generated this insight.
      description: Details about a proactive insight. This object is returned by `DescribeInsight.`
    ProactiveInsights:
      type: array
      items:
        $ref: '#/components/schemas/ProactiveInsightSummary'
    ProactiveOrganizationInsightSummary:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/InsightId'
          description: The ID of the insight summary.
        AccountId:
          allOf:
          - $ref: '#/components/schemas/AwsAccountId'
          description: The ID of the Amazon Web Services account.
        OrganizationalUnitId:
          allOf:
          - $ref: '#/components/schemas/OrganizationalUnitId'
          description: The ID of the organizational unit.
        Name:
          allOf:
          - $ref: '#/components/schemas/InsightName'
          description: The name of the insight summary.
        Severity:
          allOf:
          - $ref: '#/components/schemas/InsightSeverity'
          description: An array of severity values used to search for insights. For
            more information, see [Understanding insight severities](https://docs.aws.amazon.com/devops-guru/latest/userguide/working-with-insights.html#understanding-insights-severities)
            in the _Amazon DevOps Guru User Guide_.
        Status:
          allOf:
          - $ref: '#/components/schemas/InsightStatus'
          description: An array of status values used to search for insights.
        InsightTimeRange:
          $ref: '#/components/schemas/InsightTimeRange'
        PredictionTimeRange:
          $ref: '#/components/schemas/PredictionTimeRange'
        ResourceCollection:
          $ref: '#/components/schemas/ResourceCollection'
        ServiceCollection:
          $ref: '#/components/schemas/ServiceCollection'
      description: Details about a proactive insight. This object is returned by `DescribeInsight`.
    ProactiveOrganizationInsights:
      type: array
      items:
        $ref: '#/components/schemas/ProactiveOrganizationInsightSummary'
    PutFeedbackRequest:
      type: object
      properties:
        InsightFeedback:
          allOf:
          - $ref: '#/components/schemas/InsightFeedback'
          description: The feedback from customers is about the recommendations in
            this insight.
    PutFeedbackResponse:
      type: object
      properties: {}
    ReactiveAnomalies:
      type: array
      items:
        $ref: '#/components/schemas/ReactiveAnomalySummary'
    ReactiveAnomaly:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/AnomalyId'
          description: The ID of the reactive anomaly.
        Severity:
          allOf:
          - $ref: '#/components/schemas/AnomalySeverity'
          description: The severity of the anomaly. The severity of anomalies that
            generate an insight determine that insight's severity. For more information,
            see [Understanding insight severities](https://docs.aws.amazon.com/devops-guru/latest/userguide/working-with-insights.html#understanding-insights-severities)
            in the _Amazon DevOps Guru User Guide_.
        Status:
          allOf:
          - $ref: '#/components/schemas/AnomalyStatus'
          description: The status of the anomaly.
        AnomalyTimeRange:
          $ref: '#/components/schemas/AnomalyTimeRange'
        AnomalyReportedTimeRange:
          allOf:
          - $ref: '#/components/schemas/AnomalyReportedTimeRange'
          description: An `AnomalyReportedTimeRange` object that specifies the time
            range between when the anomaly is opened and the time when it is closed.
        SourceDetails:
          allOf:
          - $ref: '#/components/schemas/AnomalySourceDetails'
          description: Details about the source of the analyzed operational data that
            triggered the anomaly. The one supported source is Amazon CloudWatch metrics.
        AssociatedInsightId:
          allOf:
          - $ref: '#/components/schemas/InsightId'
          description: The ID of the insight that contains this anomaly. An insight
            is composed of related anomalies.
        ResourceCollection:
          $ref: '#/components/schemas/ResourceCollection'
        Type:
          allOf:
          - $ref: '#/components/schemas/AnomalyType'
          description: "The type of the reactive anomaly. It can be one of the following\
            \ types.\n\n  * `CAUSAL` \\- the anomaly can cause a new insight.\n\n\
            \  * `CONTEXTUAL` \\- the anomaly contains additional information about\
            \ an insight or its causal anomaly."
        Name:
          allOf:
          - $ref: '#/components/schemas/AnomalyName'
          description: The name of the reactive anomaly.
        Description:
          allOf:
          - $ref: '#/components/schemas/AnomalyDescription'
          description: A description of the reactive anomaly.
        CausalAnomalyId:
          allOf:
          - $ref: '#/components/schemas/AnomalyId'
          description: The ID of the causal anomaly that is associated with this reactive
            anomaly. The ID of a `CAUSAL` anomaly is always `NULL`.
        AnomalyResources:
          allOf:
          - $ref: '#/components/schemas/AnomalyResources'
          description: The Amazon Web Services resources in which anomalous behavior
            was detected by DevOps Guru.
      description: Details about a reactive anomaly. This object is returned by `ListAnomalies`.
    ReactiveAnomalySummary:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/AnomalyId'
          description: The ID of the reactive anomaly.
        Severity:
          allOf:
          - $ref: '#/components/schemas/AnomalySeverity'
          description: The severity of the anomaly. The severity of anomalies that
            generate an insight determine that insight's severity. For more information,
            see [Understanding insight severities](https://docs.aws.amazon.com/devops-guru/latest/userguide/working-with-insights.html#understanding-insights-severities)
            in the _Amazon DevOps Guru User Guide_.
        Status:
          allOf:
          - $ref: '#/components/schemas/AnomalyStatus'
          description: The status of the reactive anomaly.
        AnomalyTimeRange:
          $ref: '#/components/schemas/AnomalyTimeRange'
        AnomalyReportedTimeRange:
          allOf:
          - $ref: '#/components/schemas/AnomalyReportedTimeRange'
          description: An `AnomalyReportedTimeRange` object that specifies the time
            range between when the anomaly is opened and the time when it is closed.
        SourceDetails:
          allOf:
          - $ref: '#/components/schemas/AnomalySourceDetails'
          description: Details about the source of the analyzed operational data that
            triggered the anomaly. The one supported source is Amazon CloudWatch metrics.
        AssociatedInsightId:
          allOf:
          - $ref: '#/components/schemas/InsightId'
          description: The ID of the insight that contains this anomaly. An insight
            is composed of related anomalies.
        ResourceCollection:
          $ref: '#/components/schemas/ResourceCollection'
        Type:
          allOf:
          - $ref: '#/components/schemas/AnomalyType'
          description: "The type of the reactive anomaly. It can be one of the following\
            \ types.\n\n  * `CAUSAL` \\- the anomaly can cause a new insight.\n\n\
            \  * `CONTEXTUAL` \\- the anomaly contains additional information about\
            \ an insight or its causal anomaly."
        Name:
          allOf:
          - $ref: '#/components/schemas/AnomalyName'
          description: The name of the reactive anomaly.
        Description:
          allOf:
          - $ref: '#/components/schemas/AnomalyDescription'
          description: A description of the reactive anomaly.
        CausalAnomalyId:
          allOf:
          - $ref: '#/components/schemas/AnomalyId'
          description: The ID of the causal anomaly that is associated with this reactive
            anomaly. The ID of a `CAUSAL` anomaly is always `NULL`.
        AnomalyResources:
          allOf:
          - $ref: '#/components/schemas/AnomalyResources'
          description: The Amazon Web Services resources in which anomalous behavior
            was detected by DevOps Guru.
      description: Details about a reactive anomaly. This object is returned by `DescribeAnomaly.`
    ReactiveInsight:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/InsightId'
          description: The ID of a reactive insight.
        Name:
          allOf:
          - $ref: '#/components/schemas/InsightName'
          description: The name of a reactive insight.
        Severity:
          allOf:
          - $ref: '#/components/schemas/InsightSeverity'
          description: The severity of the insight. For more information, see [Understanding
            insight severities](https://docs.aws.amazon.com/devops-guru/latest/userguide/working-with-insights.html#understanding-insights-severities)
            in the _Amazon DevOps Guru User Guide_.
        Status:
          allOf:
          - $ref: '#/components/schemas/InsightStatus'
          description: The status of a reactive insight.
        InsightTimeRange:
          $ref: '#/components/schemas/InsightTimeRange'
        ResourceCollection:
          $ref: '#/components/schemas/ResourceCollection'
        SsmOpsItemId:
          allOf:
          - $ref: '#/components/schemas/SsmOpsItemId'
          description: The ID of the Amazon Web Services System Manager OpsItem created
            for this insight. You must enable the creation of OpstItems insights before
            they are created for each insight.
        Description:
          allOf:
          - $ref: '#/components/schemas/InsightDescription'
          description: Describes the reactive insight.
      description: Information about a reactive insight. This object is returned by
        `ListInsights`.
    ReactiveInsightSummary:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/InsightId'
          description: The ID of a reactive summary.
        Name:
          allOf:
          - $ref: '#/components/schemas/InsightName'
          description: The name of a reactive insight.
        Severity:
          allOf:
          - $ref: '#/components/schemas/InsightSeverity'
          description: The severity of the insight. For more information, see [Understanding
            insight severities](https://docs.aws.amazon.com/devops-guru/latest/userguide/working-with-insights.html#understanding-insights-severities)
            in the _Amazon DevOps Guru User Guide_.
        Status:
          allOf:
          - $ref: '#/components/schemas/InsightStatus'
          description: The status of a reactive insight.
        InsightTimeRange:
          $ref: '#/components/schemas/InsightTimeRange'
        ResourceCollection:
          $ref: '#/components/schemas/ResourceCollection'
        ServiceCollection:
          allOf:
          - $ref: '#/components/schemas/ServiceCollection'
          description: A collection of the names of Amazon Web Services services.
        AssociatedResourceArns:
          allOf:
          - $ref: '#/components/schemas/AssociatedResourceArns'
          description: The Amazon Resource Names (ARNs) of the Amazon Web Services
            resources that generated this insight.
      description: Information about a reactive insight. This object is returned by
        `DescribeInsight.`
    ReactiveInsights:
      type: array
      items:
        $ref: '#/components/schemas/ReactiveInsightSummary'
    ReactiveOrganizationInsightSummary:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/InsightId'
          description: The ID of the insight summary.
        AccountId:
          allOf:
          - $ref: '#/components/schemas/AwsAccountId'
          description: The ID of the Amazon Web Services account.
        OrganizationalUnitId:
          allOf:
          - $ref: '#/components/schemas/OrganizationalUnitId'
          description: The ID of the organizational unit.
        Name:
          allOf:
          - $ref: '#/components/schemas/InsightName'
          description: The name of the insight summary.
        Severity:
          allOf:
          - $ref: '#/components/schemas/InsightSeverity'
          description: An array of severity values used to search for insights. For
            more information, see [Understanding insight severities](https://docs.aws.amazon.com/devops-guru/latest/userguide/working-with-insights.html#understanding-insights-severities)
            in the _Amazon DevOps Guru User Guide_.
        Status:
          allOf:
          - $ref: '#/components/schemas/InsightStatus'
          description: An array of status values used to search for insights.
        InsightTimeRange:
          $ref: '#/components/schemas/InsightTimeRange'
        ResourceCollection:
          $ref: '#/components/schemas/ResourceCollection'
        ServiceCollection:
          $ref: '#/components/schemas/ServiceCollection'
      description: Information about a reactive insight. This object is returned by
        `DescribeInsight`.
    ReactiveOrganizationInsights:
      type: array
      items:
        $ref: '#/components/schemas/ReactiveOrganizationInsightSummary'
    Recommendation:
      type: object
      properties:
        Description:
          allOf:
          - $ref: '#/components/schemas/RecommendationDescription'
          description: A description of the problem.
        Link:
          allOf:
          - $ref: '#/components/schemas/RecommendationLink'
          description: A hyperlink to information to help you address the problem.
        Name:
          allOf:
          - $ref: '#/components/schemas/RecommendationName'
          description: The name of the recommendation.
        Reason:
          allOf:
          - $ref: '#/components/schemas/RecommendationReason'
          description: The reason DevOps Guru flagged the anomalous behavior as a
            problem.
        RelatedEvents:
          allOf:
          - $ref: '#/components/schemas/RecommendationRelatedEvents'
          description: Events that are related to the problem. Use these events to
            learn more about what's happening and to help address the issue.
        RelatedAnomalies:
          allOf:
          - $ref: '#/components/schemas/RecommendationRelatedAnomalies'
          description: Anomalies that are related to the problem. Use these Anomalies
            to learn more about what's happening and to help address the issue.
        Category:
          allOf:
          - $ref: '#/components/schemas/RecommendationCategory'
          description: The category type of the recommendation.
      description: Recommendation information to help you remediate detected anomalous
        behavior that generated an insight.
    RecommendationCategory:
      type: string
    RecommendationDescription:
      type: string
    RecommendationLink:
      type: string
    RecommendationName:
      type: string
    RecommendationReason:
      type: string
    RecommendationRelatedAnomalies:
      type: array
      items:
        $ref: '#/components/schemas/RecommendationRelatedAnomaly'
    RecommendationRelatedAnomaly:
      type: object
      properties:
        Resources:
          allOf:
          - $ref: '#/components/schemas/RecommendationRelatedAnomalyResources'
          description: An array of objects that represent resources in which DevOps
            Guru detected anomalous behavior. Each object contains the name and type
            of the resource.
        SourceDetails:
          allOf:
          - $ref: '#/components/schemas/RelatedAnomalySourceDetails'
          description: Information about where the anomalous behavior related the
            recommendation was found. For example, details in Amazon CloudWatch metrics.
        AnomalyId:
          allOf:
          - $ref: '#/components/schemas/AnomalyId'
          description: The ID of an anomaly that generated the insight with this recommendation.
      description: Information about an anomaly that is related to a recommendation.
    RecommendationRelatedAnomalyResource:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/RecommendationRelatedAnomalyResourceName'
          description: The name of the resource.
        Type:
          allOf:
          - $ref: '#/components/schemas/RecommendationRelatedAnomalyResourceType'
          description: The type of the resource. Resource types take the same form
            that is used by Amazon Web Services CloudFormation resource type identifiers,
            `service-provider::service-name::data-type-name`. For example, `AWS::RDS::DBCluster`.
            For more information, see [Amazon Web Services resource and property types
            reference](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html)
            in the _Amazon Web Services CloudFormation User Guide_.
      description: Information about a resource in which DevOps Guru detected anomalous
        behavior.
    RecommendationRelatedAnomalyResourceName:
      type: string
    RecommendationRelatedAnomalyResourceType:
      type: string
    RecommendationRelatedAnomalyResources:
      type: array
      items:
        $ref: '#/components/schemas/RecommendationRelatedAnomalyResource'
    RecommendationRelatedAnomalySourceDetail:
      type: object
      properties:
        CloudWatchMetrics:
          allOf:
          - $ref: '#/components/schemas/RecommendationRelatedCloudWatchMetricsSourceDetails'
          description: An array of `CloudWatchMetricsDetail` objects that contains
            information about the analyzed metrics that displayed anomalous behavior.
      description: Contains an array of `RecommendationRelatedCloudWatchMetricsSourceDetail`
        objects that contain the name and namespace of an Amazon CloudWatch metric.
    RecommendationRelatedCloudWatchMetricsSourceDetail:
      type: object
      properties:
        MetricName:
          allOf:
          - $ref: '#/components/schemas/RecommendationRelatedCloudWatchMetricsSourceMetricName'
          description: The name of the CloudWatch metric.
        Namespace:
          allOf:
          - $ref: '#/components/schemas/RecommendationRelatedCloudWatchMetricsSourceNamespace'
          description: The namespace of the CloudWatch metric. A namespace is a container
            for CloudWatch metrics.
      description: Information about an Amazon CloudWatch metric that is analyzed
        by DevOps Guru. It is one of many analyzed metrics that are used to generate
        insights.
    RecommendationRelatedCloudWatchMetricsSourceDetails:
      type: array
      items:
        $ref: '#/components/schemas/RecommendationRelatedCloudWatchMetricsSourceDetail'
    RecommendationRelatedCloudWatchMetricsSourceMetricName:
      type: string
    RecommendationRelatedCloudWatchMetricsSourceNamespace:
      type: string
    RecommendationRelatedEvent:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/RecommendationRelatedEventName'
          description: The name of the event. This corresponds to the `Name` field
            in an `Event` object.
        Resources:
          allOf:
          - $ref: '#/components/schemas/RecommendationRelatedEventResources'
          description: A `ResourceCollection` object that contains arrays of the names
            of Amazon Web Services CloudFormation stacks. You can specify up to 500
            Amazon Web Services CloudFormation stacks.
      description: Information about an event that is related to a recommendation.
    RecommendationRelatedEventName:
      type: string
    RecommendationRelatedEventResource:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/RecommendationRelatedEventResourceName'
          description: The name of the resource that emitted the event. This corresponds
            to the `Name` field in an `EventResource` object.
        Type:
          allOf:
          - $ref: '#/components/schemas/RecommendationRelatedEventResourceType'
          description: The type of the resource that emitted the event. This corresponds
            to the `Type` field in an `EventResource` object.
      description: Information about an Amazon Web Services resource that emitted
        and event that is related to a recommendation in an insight.
    RecommendationRelatedEventResourceName:
      type: string
    RecommendationRelatedEventResourceType:
      type: string
    RecommendationRelatedEventResources:
      type: array
      items:
        $ref: '#/components/schemas/RecommendationRelatedEventResource'
    RecommendationRelatedEvents:
      type: array
      items:
        $ref: '#/components/schemas/RecommendationRelatedEvent'
    Recommendations:
      type: array
      items:
        $ref: '#/components/schemas/Recommendation'
    RelatedAnomalySourceDetails:
      type: array
      items:
        $ref: '#/components/schemas/RecommendationRelatedAnomalySourceDetail'
    RemoveNotificationChannelRequest:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/NotificationChannelId'
          description: The ID of the notification channel to be removed.
      required:
      - Id
    RemoveNotificationChannelResponse:
      type: object
      properties: {}
    ResourceArn:
      type: string
      minLength: 20
      maxLength: 2048
    ResourceCollection:
      type: object
      properties:
        CloudFormation:
          allOf:
          - $ref: '#/components/schemas/CloudFormationCollection'
          description: An array of the names of Amazon Web Services CloudFormation
            stacks. The stacks define Amazon Web Services resources that DevOps Guru
            analyzes. You can specify up to 500 Amazon Web Services CloudFormation
            stacks.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagCollections'
          description: "The Amazon Web Services tags that are used by resources in\
            \ the resource collection.\n\nTags help you identify and organize your\
            \ Amazon Web Services resources. Many Amazon Web Services services support\
            \ tagging, so you can assign the same tag to resources from different\
            \ services to indicate that the resources are related. For example, you\
            \ can assign the same tag to an Amazon DynamoDB table resource that you\
            \ assign to an Lambda function. For more information about using tags,\
            \ see the [Tagging best practices](https://docs.aws.amazon.com/whitepapers/latest/tagging-best-practices/tagging-best-practices.html)\
            \ whitepaper.\n\nEach Amazon Web Services tag has two parts.\n\n  * A\
            \ tag _key_ (for example, `CostCenter`, `Environment`, `Project`, or `Secret`).\
            \ Tag _keys_ are case-sensitive.\n\n  * An optional field known as a tag\
            \ _value_ (for example, `111122223333`, `Production`, or a team name).\
            \ Omitting the tag _value_ is the same as using an empty string. Like\
            \ tag _keys_ , tag _values_ are case-sensitive.\n\nTogether these are\
            \ known as _key_ -_value_ pairs.\n\nThe string used for a _key_ in a tag\
            \ that you use to define your resource coverage must begin with the prefix\
            \ `Devops-guru-`. The tag _key_ might be `DevOps-Guru-deployment-application`\
            \ or `devops-guru-rds-application`. When you create a _key_ , the case\
            \ of characters in the _key_ can be whatever you choose. After you create\
            \ a _key_ , it is case-sensitive. For example, DevOps Guru works with\
            \ a _key_ named `devops-guru-rds` and a _key_ named `DevOps-Guru-RDS`,\
            \ and these act as two different _keys_. Possible _key_ /_value_ pairs\
            \ in your application might be `Devops-Guru-production-application/RDS`\
            \ or `Devops-Guru-production-application/containers`."
      description: A collection of Amazon Web Services resources supported by DevOps
        Guru. The two types of Amazon Web Services resource collections supported
        are Amazon Web Services CloudFormation stacks and Amazon Web Services resources
        that contain the same Amazon Web Services tag. DevOps Guru can be configured
        to analyze the Amazon Web Services resources that are defined in the stacks
        or that are tagged using the same tag _key_. You can specify up to 500 Amazon
        Web Services CloudFormation stacks.
    ResourceCollectionFilter:
      type: object
      properties:
        CloudFormation:
          allOf:
          - $ref: '#/components/schemas/CloudFormationCollectionFilter'
          description: Information about Amazon Web Services CloudFormation stacks.
            You can use up to 500 stacks to specify which Amazon Web Services resources
            in your account to analyze. For more information, see [Stacks](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacks.html)
            in the _Amazon Web Services CloudFormation User Guide_.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagCollectionFilters'
          description: "The Amazon Web Services tags used to filter the resources\
            \ in the resource collection.\n\nTags help you identify and organize your\
            \ Amazon Web Services resources. Many Amazon Web Services services support\
            \ tagging, so you can assign the same tag to resources from different\
            \ services to indicate that the resources are related. For example, you\
            \ can assign the same tag to an Amazon DynamoDB table resource that you\
            \ assign to an Lambda function. For more information about using tags,\
            \ see the [Tagging best practices](https://docs.aws.amazon.com/whitepapers/latest/tagging-best-practices/tagging-best-practices.html)\
            \ whitepaper.\n\nEach Amazon Web Services tag has two parts.\n\n  * A\
            \ tag _key_ (for example, `CostCenter`, `Environment`, `Project`, or `Secret`).\
            \ Tag _keys_ are case-sensitive.\n\n  * An optional field known as a tag\
            \ _value_ (for example, `111122223333`, `Production`, or a team name).\
            \ Omitting the tag _value_ is the same as using an empty string. Like\
            \ tag _keys_ , tag _values_ are case-sensitive.\n\nTogether these are\
            \ known as _key_ -_value_ pairs.\n\nThe string used for a _key_ in a tag\
            \ that you use to define your resource coverage must begin with the prefix\
            \ `Devops-guru-`. The tag _key_ might be `DevOps-Guru-deployment-application`\
            \ or `devops-guru-rds-application`. When you create a _key_ , the case\
            \ of characters in the _key_ can be whatever you choose. After you create\
            \ a _key_ , it is case-sensitive. For example, DevOps Guru works with\
            \ a _key_ named `devops-guru-rds` and a _key_ named `DevOps-Guru-RDS`,\
            \ and these act as two different _keys_. Possible _key_ /_value_ pairs\
            \ in your application might be `Devops-Guru-production-application/RDS`\
            \ or `Devops-Guru-production-application/containers`."
      description: Information about a filter used to specify which Amazon Web Services
        resources are analyzed for anomalous behavior by DevOps Guru.
    ResourceCollectionType:
      type: string
      enum:
      - AWS_CLOUD_FORMATION
      - AWS_SERVICE
      - AWS_TAGS
    ResourceHours:
      type: integer
      format: int64
    ResourceIdString:
      type: string
    ResourceIdType:
      type: string
    ResourceName:
      type: string
    ResourceNotFoundException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessageString'
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/ResourceIdString'
          description: The ID of the Amazon Web Services resource that could not be
            found.
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceIdType'
          description: The type of the Amazon Web Services resource that could not
            be found.
      required:
      - Message
      - ResourceId
      - ResourceType
      description: A requested resource could not be found
    ResourcePermission:
      type: string
      enum:
      - FULL_PERMISSION
      - MISSING_PERMISSION
    ResourceType:
      type: string
      pattern: ^[a-zA-Z]+[a-zA-Z0-9-_:]*$
      minLength: 1
      maxLength: 256
    ResourceTypeFilter:
      type: string
      enum:
      - LOG_GROUPS
      - CLOUDFRONT_DISTRIBUTION
      - DYNAMODB_TABLE
      - EC2_NAT_GATEWAY
      - ECS_CLUSTER
      - ECS_SERVICE
      - EKS_CLUSTER
      - ELASTIC_BEANSTALK_ENVIRONMENT
      - ELASTIC_LOAD_BALANCER_LOAD_BALANCER
      - ELASTIC_LOAD_BALANCING_V2_LOAD_BALANCER
      - ELASTIC_LOAD_BALANCING_V2_TARGET_GROUP
      - ELASTICACHE_CACHE_CLUSTER
      - ELASTICSEARCH_DOMAIN
      - KINESIS_STREAM
      - LAMBDA_FUNCTION
      - OPEN_SEARCH_SERVICE_DOMAIN
      - RDS_DB_INSTANCE
      - RDS_DB_CLUSTER
      - REDSHIFT_CLUSTER
      - ROUTE53_HOSTED_ZONE
      - ROUTE53_HEALTH_CHECK
      - S3_BUCKET
      - SAGEMAKER_ENDPOINT
      - SNS_TOPIC
      - SQS_QUEUE
      - STEP_FUNCTIONS_ACTIVITY
      - STEP_FUNCTIONS_STATE_MACHINE
    ResourceTypeFilters:
      type: array
      items:
        $ref: '#/components/schemas/ResourceTypeFilter'
    RetryAfterSeconds:
      type: integer
      default: 0
    SearchInsightsAccountIdList:
      type: array
      items:
        $ref: '#/components/schemas/AwsAccountId'
    SearchInsightsFilters:
      type: object
      properties:
        Severities:
          allOf:
          - $ref: '#/components/schemas/InsightSeverities'
          description: An array of severity values used to search for insights.
        Statuses:
          allOf:
          - $ref: '#/components/schemas/InsightStatuses'
          description: An array of status values used to search for insights.
        ResourceCollection:
          $ref: '#/components/schemas/ResourceCollection'
        ServiceCollection:
          allOf:
          - $ref: '#/components/schemas/ServiceCollection'
          description: A collection of the names of Amazon Web Services services.
      description: Specifies values used to filter responses when searching for insights.
        You can use a `ResourceCollection`, `ServiceCollection`, array of severities,
        and an array of status values. Each filter type contains one or more values
        to search for. If you specify multiple filter types, the filter types are
        joined with an `AND`, and the request returns only results that match all
        of the specified filters.
    SearchInsightsMaxResults:
      type: integer
      minimum: 1
      maximum: 100
    SearchInsightsRequest:
      type: object
      properties:
        StartTimeRange:
          allOf:
          - $ref: '#/components/schemas/StartTimeRange'
          description: The start of the time range passed in. Returned insights occurred
            after this time.
        Filters:
          allOf:
          - $ref: '#/components/schemas/SearchInsightsFilters'
          description: A `SearchInsightsFilters` object that is used to set the severity
            and status filters on your insight search.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/SearchInsightsMaxResults'
          description: The maximum number of results to return with a single call.
            To retrieve the remaining results, make another call with the returned
            `nextToken` value.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/UuidNextToken'
          description: The pagination token to use to retrieve the next page of results
            for this operation. If this value is null, it retrieves the first page.
        Type:
          allOf:
          - $ref: '#/components/schemas/InsightType'
          description: The type of insights you are searching for (`REACTIVE` or `PROACTIVE`).
      required:
      - StartTimeRange
      - Type
    SearchInsightsResponse:
      type: object
      properties:
        ProactiveInsights:
          allOf:
          - $ref: '#/components/schemas/ProactiveInsights'
          description: The returned proactive insights.
        ReactiveInsights:
          allOf:
          - $ref: '#/components/schemas/ReactiveInsights'
          description: The returned reactive insights.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/UuidNextToken'
          description: The pagination token to use to retrieve the next page of results
            for this operation. If there are no more pages, this value is null.
    SearchOrganizationInsightsFilters:
      type: object
      properties:
        Severities:
          allOf:
          - $ref: '#/components/schemas/InsightSeverities'
          description: An array of severity values used to search for insights.
        Statuses:
          allOf:
          - $ref: '#/components/schemas/InsightStatuses'
          description: An array of status values used to search for insights.
        ResourceCollection:
          $ref: '#/components/schemas/ResourceCollection'
        ServiceCollection:
          $ref: '#/components/schemas/ServiceCollection'
      description: Filters you can use to specify which events are returned when `ListEvents`
        is called.
    SearchOrganizationInsightsMaxResults:
      type: integer
      minimum: 1
      maximum: 100
    SearchOrganizationInsightsRequest:
      type: object
      properties:
        AccountIds:
          allOf:
          - $ref: '#/components/schemas/SearchInsightsAccountIdList'
          description: The ID of the Amazon Web Services account.
        StartTimeRange:
          $ref: '#/components/schemas/StartTimeRange'
        Filters:
          allOf:
          - $ref: '#/components/schemas/SearchOrganizationInsightsFilters'
          description: A `SearchOrganizationInsightsFilters` object that is used to
            set the severity and status filters on your insight search.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/SearchOrganizationInsightsMaxResults'
          description: The maximum number of results to return with a single call.
            To retrieve the remaining results, make another call with the returned
            `nextToken` value.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/UuidNextToken'
          description: The pagination token to use to retrieve the next page of results
            for this operation. If this value is null, it retrieves the first page.
        Type:
          allOf:
          - $ref: '#/components/schemas/InsightType'
          description: The type of insights you are searching for (`REACTIVE` or `PROACTIVE`).
      required:
      - AccountIds
      - StartTimeRange
      - Type
    SearchOrganizationInsightsResponse:
      type: object
      properties:
        ProactiveInsights:
          allOf:
          - $ref: '#/components/schemas/ProactiveInsights'
          description: An integer that specifies the number of open proactive insights
            in your Amazon Web Services account.
        ReactiveInsights:
          allOf:
          - $ref: '#/components/schemas/ReactiveInsights'
          description: An integer that specifies the number of open reactive insights
            in your Amazon Web Services account.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/UuidNextToken'
          description: The pagination token to use to retrieve the next page of results
            for this operation. If there are no more pages, this value is null.
    ServerSideEncryptionType:
      type: string
      enum:
      - CUSTOMER_MANAGED_KEY
      - AWS_OWNED_KMS_KEY
    ServiceCollection:
      type: object
      properties:
        ServiceNames:
          allOf:
          - $ref: '#/components/schemas/ServiceNames'
          description: An array of strings that each specifies the name of an Amazon
            Web Services service.
      description: A collection of the names of Amazon Web Services services.
    ServiceHealth:
      type: object
      properties:
        ServiceName:
          allOf:
          - $ref: '#/components/schemas/ServiceName'
          description: The name of the Amazon Web Services service.
        Insight:
          allOf:
          - $ref: '#/components/schemas/ServiceInsightHealth'
          description: Represents the health of an Amazon Web Services service. This
            is a `ServiceInsightHealth` that contains the number of open proactive
            and reactive insights for this service.
        AnalyzedResourceCount:
          allOf:
          - $ref: '#/components/schemas/AnalyzedResourceCount'
          description: Number of resources that DevOps Guru is monitoring in an analyzed
            Amazon Web Services service.
      description: Represents the health of an Amazon Web Services service.
    ServiceHealths:
      type: array
      items:
        $ref: '#/components/schemas/ServiceHealth'
    ServiceInsightHealth:
      type: object
      properties:
        OpenProactiveInsights:
          allOf:
          - $ref: '#/components/schemas/NumOpenProactiveInsights'
          description: The number of open proactive insights in the Amazon Web Services
            service
        OpenReactiveInsights:
          allOf:
          - $ref: '#/components/schemas/NumOpenReactiveInsights'
          description: The number of open reactive insights in the Amazon Web Services
            service
      description: Contains the number of open proactive and reactive insights in
        an analyzed Amazon Web Services service.
    ServiceIntegrationConfig:
      type: object
      properties:
        OpsCenter:
          allOf:
          - $ref: '#/components/schemas/OpsCenterIntegration'
          description: Information about whether DevOps Guru is configured to create
            an OpsItem in Amazon Web Services Systems Manager OpsCenter for each created
            insight.
        LogsAnomalyDetection:
          allOf:
          - $ref: '#/components/schemas/LogsAnomalyDetectionIntegration'
          description: Information about whether DevOps Guru is configured to perform
            log anomaly detection on Amazon CloudWatch log groups.
        KMSServerSideEncryption:
          allOf:
          - $ref: '#/components/schemas/KMSServerSideEncryptionIntegration'
          description: Information about whether DevOps Guru is configured to encrypt
            server-side data using KMS.
      description: Information about the integration of DevOps Guru with another Amazon
        Web Services service, such as Amazon Web Services Systems Manager.
    ServiceName:
      type: string
      enum:
      - API_GATEWAY
      - APPLICATION_ELB
      - AUTO_SCALING_GROUP
      - CLOUD_FRONT
      - DYNAMO_DB
      - EC2
      - ECS
      - EKS
      - ELASTIC_BEANSTALK
      - ELASTI_CACHE
      - ELB
      - ES
      - KINESIS
      - LAMBDA
      - NAT_GATEWAY
      - NETWORK_ELB
      - RDS
      - REDSHIFT
      - ROUTE_53
      - S3
      - SAGE_MAKER
      - SNS
      - SQS
      - STEP_FUNCTIONS
      - SWF
    ServiceNames:
      type: array
      items:
        $ref: '#/components/schemas/ServiceName'
    ServiceQuotaExceededException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessageString'
      description: The request contains a value that exceeds a maximum quota.
    ServiceResourceCost:
      type: object
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          description: The type of the Amazon Web Services resource.
        State:
          allOf:
          - $ref: '#/components/schemas/CostEstimationServiceResourceState'
          description: The state of the resource. The resource is `ACTIVE` if it produces
            metrics, events, or logs within an hour, otherwise it is `INACTIVE`. You
            pay for the number of active Amazon Web Services resource hours analyzed
            for each resource. Inactive resources are not charged.
        Count:
          allOf:
          - $ref: '#/components/schemas/CostEstimationServiceResourceCount'
          description: The number of active resources analyzed for this service to
            create a monthly cost estimate.
        UnitCost:
          allOf:
          - $ref: '#/components/schemas/Cost'
          description: The price per hour to analyze the resources in the service.
            For more information, see [Estimate your Amazon DevOps Guru costs](https://docs.aws.amazon.com/devops-guru/latest/userguide/cost-estimate.html)
            and [Amazon DevOps Guru pricing](http://aws.amazon.com/devops-guru/pricing/).
        Cost:
          allOf:
          - $ref: '#/components/schemas/Cost'
          description: The total estimated monthly cost to analyze the active resources
            for this resource.
      description: An object that contains information about the estimated monthly
        cost to analyze an Amazon Web Services resource. For more information, see
        [Estimate your Amazon DevOps Guru costs](https://docs.aws.amazon.com/devops-guru/latest/userguide/cost-estimate.html)
        and [Amazon DevOps Guru pricing](http://aws.amazon.com/devops-guru/pricing/).
    ServiceResourceCosts:
      type: array
      items:
        $ref: '#/components/schemas/ServiceResourceCost'
    SnsChannelConfig:
      type: object
      properties:
        TopicArn:
          allOf:
          - $ref: '#/components/schemas/TopicArn'
          description: The Amazon Resource Name (ARN) of an Amazon Simple Notification
            Service topic.
      description: 'Contains the Amazon Resource Name (ARN) of an Amazon Simple Notification
        Service topic.


        If you use an Amazon SNS topic in another account, you must attach a policy
        to it that grants DevOps Guru permission to send it notifications. DevOps
        Guru adds the required policy on your behalf to send notifications using Amazon
        SNS in your account. DevOps Guru only supports standard SNS topics. For more
        information, see [Permissions for Amazon SNS topics](https://docs.aws.amazon.com/devops-guru/latest/userguide/sns-required-permissions.html).


        If you use an Amazon SNS topic that is encrypted by an Amazon Web Services
        Key Management Service customer-managed key (CMK), then you must add permissions
        to the CMK. For more information, see [Permissions for Amazon Web Services
        KMSâ€“encrypted Amazon SNS topics](https://docs.aws.amazon.com/devops-guru/latest/userguide/sns-kms-permissions.html).'
    SsmOpsItemId:
      type: string
      pattern: ^.*$
      minLength: 1
      maxLength: 100
    StackName:
      type: string
      pattern: ^[a-zA-Z*]+[a-zA-Z0-9-]*$
      minLength: 1
      maxLength: 128
    StackNames:
      type: array
      items:
        $ref: '#/components/schemas/StackName'
    StartCostEstimationRequest:
      type: object
      properties:
        ResourceCollection:
          allOf:
          - $ref: '#/components/schemas/CostEstimationResourceCollectionFilter'
          description: The collection of Amazon Web Services resources used to create
            a monthly DevOps Guru cost estimate.
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: The idempotency token used to identify each cost estimate request.
      required:
      - ResourceCollection
    StartCostEstimationResponse:
      type: object
      properties: {}
    StartTimeRange:
      type: object
      properties:
        FromTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The start time of the time range.
        ToTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The end time of the time range.
      description: A time range used to specify when the behavior of an insight or
        anomaly started.
    TagCollection:
      type: object
      properties:
        AppBoundaryKey:
          allOf:
          - $ref: '#/components/schemas/AppBoundaryKey'
          description: 'An Amazon Web Services tag _key_ that is used to identify
            the Amazon Web Services resources that DevOps Guru analyzes. All Amazon
            Web Services resources in your account and Region tagged with this _key_
            make up your DevOps Guru application and analysis boundary.


            The string used for a _key_ in a tag that you use to define your resource
            coverage must begin with the prefix `Devops-guru-`. The tag _key_ might
            be `DevOps-Guru-deployment-application` or `devops-guru-rds-application`.
            When you create a _key_ , the case of characters in the _key_ can be whatever
            you choose. After you create a _key_ , it is case-sensitive. For example,
            DevOps Guru works with a _key_ named `devops-guru-rds` and a _key_ named
            `DevOps-Guru-RDS`, and these act as two different _keys_. Possible _key_
            /_value_ pairs in your application might be `Devops-Guru-production-application/RDS`
            or `Devops-Guru-production-application/containers`.'
        TagValues:
          allOf:
          - $ref: '#/components/schemas/TagValues'
          description: 'The values in an Amazon Web Services tag collection.


            The tag''s _value_ is an optional field used to associate a string with
            the tag _key_ (for example, `111122223333`, `Production`, or a team name).
            The _key_ and _value_ are the tag''s _key_ pair. Omitting the tag _value_
            is the same as using an empty string. Like tag _keys_ , tag _values_ are
            case-sensitive. You can specify a maximum of 256 characters for a tag
            value.'
      required:
      - AppBoundaryKey
      - TagValues
      description: "A collection of Amazon Web Services tags.\n\nTags help you identify\
        \ and organize your Amazon Web Services resources. Many Amazon Web Services\
        \ services support tagging, so you can assign the same tag to resources from\
        \ different services to indicate that the resources are related. For example,\
        \ you can assign the same tag to an Amazon DynamoDB table resource that you\
        \ assign to an Lambda function. For more information about using tags, see\
        \ the [Tagging best practices](https://docs.aws.amazon.com/whitepapers/latest/tagging-best-practices/tagging-best-practices.html)\
        \ whitepaper.\n\nEach Amazon Web Services tag has two parts.\n\n  * A tag\
        \ _key_ (for example, `CostCenter`, `Environment`, `Project`, or `Secret`).\
        \ Tag _keys_ are case-sensitive.\n\n  * An optional field known as a tag _value_\
        \ (for example, `111122223333`, `Production`, or a team name). Omitting the\
        \ tag _value_ is the same as using an empty string. Like tag _keys_ , tag\
        \ _values_ are case-sensitive.\n\nTogether these are known as _key_ -_value_\
        \ pairs.\n\nThe string used for a _key_ in a tag that you use to define your\
        \ resource coverage must begin with the prefix `Devops-guru-`. The tag _key_\
        \ might be `DevOps-Guru-deployment-application` or `devops-guru-rds-application`.\
        \ When you create a _key_ , the case of characters in the _key_ can be whatever\
        \ you choose. After you create a _key_ , it is case-sensitive. For example,\
        \ DevOps Guru works with a _key_ named `devops-guru-rds` and a _key_ named\
        \ `DevOps-Guru-RDS`, and these act as two different _keys_. Possible _key_\
        \ /_value_ pairs in your application might be `Devops-Guru-production-application/RDS`\
        \ or `Devops-Guru-production-application/containers`."
    TagCollectionFilter:
      type: object
      properties:
        AppBoundaryKey:
          allOf:
          - $ref: '#/components/schemas/AppBoundaryKey'
          description: 'An Amazon Web Services tag _key_ that is used to identify
            the Amazon Web Services resources that DevOps Guru analyzes. All Amazon
            Web Services resources in your account and Region tagged with this _key_
            make up your DevOps Guru application and analysis boundary.


            The string used for a _key_ in a tag that you use to define your resource
            coverage must begin with the prefix `Devops-guru-`. The tag _key_ might
            be `DevOps-Guru-deployment-application` or `devops-guru-rds-application`.
            When you create a _key_ , the case of characters in the _key_ can be whatever
            you choose. After you create a _key_ , it is case-sensitive. For example,
            DevOps Guru works with a _key_ named `devops-guru-rds` and a _key_ named
            `DevOps-Guru-RDS`, and these act as two different _keys_. Possible _key_
            /_value_ pairs in your application might be `Devops-Guru-production-application/RDS`
            or `Devops-Guru-production-application/containers`.'
        TagValues:
          allOf:
          - $ref: '#/components/schemas/TagValues'
          description: 'The values in an Amazon Web Services tag collection.


            The tag''s _value_ is an optional field used to associate a string with
            the tag _key_ (for example, `111122223333`, `Production`, or a team name).
            The _key_ and _value_ are the tag''s _key_ pair. Omitting the tag _value_
            is the same as using an empty string. Like tag _keys_ , tag _values_ are
            case-sensitive. You can specify a maximum of 256 characters for a tag
            value.'
      required:
      - AppBoundaryKey
      - TagValues
      description: A collection of Amazon Web Services tags used to filter insights.
        This is used to return insights generated from only resources that contain
        the tags in the tag collection.
    TagCollectionFilters:
      type: array
      items:
        $ref: '#/components/schemas/TagCollectionFilter'
    TagCollections:
      type: array
      items:
        $ref: '#/components/schemas/TagCollection'
    TagCostEstimationResourceCollectionFilter:
      type: object
      properties:
        AppBoundaryKey:
          allOf:
          - $ref: '#/components/schemas/AppBoundaryKey'
          description: 'An Amazon Web Services tag _key_ that is used to identify
            the Amazon Web Services resources that DevOps Guru analyzes. All Amazon
            Web Services resources in your account and Region tagged with this _key_
            make up your DevOps Guru application and analysis boundary.


            The string used for a _key_ in a tag that you use to define your resource
            coverage must begin with the prefix `Devops-guru-`. The tag _key_ might
            be `DevOps-Guru-deployment-application` or `devops-guru-rds-application`.
            When you create a _key_ , the case of characters in the _key_ can be whatever
            you choose. After you create a _key_ , it is case-sensitive. For example,
            DevOps Guru works with a _key_ named `devops-guru-rds` and a _key_ named
            `DevOps-Guru-RDS`, and these act as two different _keys_. Possible _key_
            /_value_ pairs in your application might be `Devops-Guru-production-application/RDS`
            or `Devops-Guru-production-application/containers`.'
        TagValues:
          allOf:
          - $ref: '#/components/schemas/CostEstimationTagValues'
          description: 'The values in an Amazon Web Services tag collection.


            The tag''s _value_ is an optional field used to associate a string with
            the tag _key_ (for example, `111122223333`, `Production`, or a team name).
            The _key_ and _value_ are the tag''s _key_ pair. Omitting the tag _value_
            is the same as using an empty string. Like tag _keys_ , tag _values_ are
            case-sensitive. You can specify a maximum of 256 characters for a tag
            value.'
      required:
      - AppBoundaryKey
      - TagValues
      description: Information about a collection of Amazon Web Services resources
        that are identified by an Amazon Web Services tag. This collection of resources
        is used to create a monthly cost estimate for DevOps Guru to analyze Amazon
        Web Services resources. The maximum number of tags you can specify for a cost
        estimate is one. The estimate created is for the cost to analyze the Amazon
        Web Services resources defined by the tag. For more information, see [Stacks](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacks.html)
        in the _Amazon Web Services CloudFormation User Guide_.
    TagCostEstimationResourceCollectionFilters:
      type: array
      items:
        $ref: '#/components/schemas/TagCostEstimationResourceCollectionFilter'
    TagHealth:
      type: object
      properties:
        AppBoundaryKey:
          allOf:
          - $ref: '#/components/schemas/AppBoundaryKey'
          description: 'An Amazon Web Services tag _key_ that is used to identify
            the Amazon Web Services resources that DevOps Guru analyzes. All Amazon
            Web Services resources in your account and Region tagged with this _key_
            make up your DevOps Guru application and analysis boundary.


            The string used for a _key_ in a tag that you use to define your resource
            coverage must begin with the prefix `Devops-guru-`. The tag _key_ might
            be `DevOps-Guru-deployment-application` or `devops-guru-rds-application`.
            When you create a _key_ , the case of characters in the _key_ can be whatever
            you choose. After you create a _key_ , it is case-sensitive. For example,
            DevOps Guru works with a _key_ named `devops-guru-rds` and a _key_ named
            `DevOps-Guru-RDS`, and these act as two different _keys_. Possible _key_
            /_value_ pairs in your application might be `Devops-Guru-production-application/RDS`
            or `Devops-Guru-production-application/containers`.'
        TagValue:
          allOf:
          - $ref: '#/components/schemas/TagValue'
          description: 'The value in an Amazon Web Services tag.


            The tag''s _value_ is an optional field used to associate a string with
            the tag _key_ (for example, `111122223333`, `Production`, or a team name).
            The _key_ and _value_ are the tag''s _key_ pair. Omitting the tag _value_
            is the same as using an empty string. Like tag _keys_ , tag _values_ are
            case-sensitive. You can specify a maximum of 256 characters for a tag
            value.'
        Insight:
          allOf:
          - $ref: '#/components/schemas/InsightHealth'
          description: Information about the health of the Amazon Web Services resources
            in your account that are specified by an Amazon Web Services tag, including
            the number of open proactive, open reactive insights, and the Mean Time
            to Recover (MTTR) of closed insights.
        AnalyzedResourceCount:
          allOf:
          - $ref: '#/components/schemas/AnalyzedResourceCount'
          description: Number of resources that DevOps Guru is monitoring in your
            account that are specified by an Amazon Web Services tag.
      description: Information about the health of Amazon Web Services resources in
        your account that are specified by an Amazon Web Services tag _key_.
    TagHealths:
      type: array
      items:
        $ref: '#/components/schemas/TagHealth'
    TagValue:
      type: string
      pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*|\*)$
      minLength: 0
      maxLength: 256
    TagValues:
      type: array
      items:
        $ref: '#/components/schemas/TagValue'
    ThrottlingException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessageString'
        QuotaCode:
          allOf:
          - $ref: '#/components/schemas/ErrorQuotaCodeString'
          description: The code of the quota that was exceeded, causing the throttling
            exception.
        ServiceCode:
          allOf:
          - $ref: '#/components/schemas/ErrorServiceCodeString'
          description: The code of the service that caused the throttling exception.
        RetryAfterSeconds:
          allOf:
          - $ref: '#/components/schemas/RetryAfterSeconds'
          description: The number of seconds after which the action that caused the
            throttling exception can be retried.
      required:
      - Message
      description: The request was denied due to a request throttling.
    Timestamp:
      type: string
      format: date-time
    TimestampMetricValuePair:
      type: object
      properties:
        Timestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: A `Timestamp` that specifies the time the event occurred.
        MetricValue:
          allOf:
          - $ref: '#/components/schemas/MetricValue'
          description: Value of the anomalous metric data point at respective Timestamp.
      description: A pair that contains metric values at the respective timestamp.
    TimestampMetricValuePairList:
      type: array
      items:
        $ref: '#/components/schemas/TimestampMetricValuePair'
    TopicArn:
      type: string
      pattern: ^arn:aws[a-z0-9-]*:sns:[a-z0-9-]+:\d{12}:[^:]+$
      minLength: 36
      maxLength: 1024
    UpdateCloudFormationCollectionFilter:
      type: object
      properties:
        StackNames:
          allOf:
          - $ref: '#/components/schemas/UpdateStackNames'
          description: An array of the names of the Amazon Web Services CloudFormation
            stacks to update. You can specify up to 500 Amazon Web Services CloudFormation
            stacks.
      description: Contains the names of Amazon Web Services CloudFormation stacks
        used to update a collection of stacks. You can specify up to 500 Amazon Web
        Services CloudFormation stacks.
    UpdateEventSourcesConfigRequest:
      type: object
      properties:
        EventSources:
          allOf:
          - $ref: '#/components/schemas/EventSourcesConfig'
          description: Configuration information about the integration of DevOps Guru
            as the Consumer via EventBridge with another AWS Service.
    UpdateEventSourcesConfigResponse:
      type: object
      properties: {}
    UpdateResourceCollectionAction:
      type: string
      enum:
      - ADD
      - REMOVE
    UpdateResourceCollectionFilter:
      type: object
      properties:
        CloudFormation:
          allOf:
          - $ref: '#/components/schemas/UpdateCloudFormationCollectionFilter'
          description: A collection of Amazon Web Services CloudFormation stacks.
            You can specify up to 500 Amazon Web Services CloudFormation stacks.
        Tags:
          allOf:
          - $ref: '#/components/schemas/UpdateTagCollectionFilters'
          description: "The updated Amazon Web Services tags used to filter the resources\
            \ in the resource collection.\n\nTags help you identify and organize your\
            \ Amazon Web Services resources. Many Amazon Web Services services support\
            \ tagging, so you can assign the same tag to resources from different\
            \ services to indicate that the resources are related. For example, you\
            \ can assign the same tag to an Amazon DynamoDB table resource that you\
            \ assign to an Lambda function. For more information about using tags,\
            \ see the [Tagging best practices](https://docs.aws.amazon.com/whitepapers/latest/tagging-best-practices/tagging-best-practices.html)\
            \ whitepaper.\n\nEach Amazon Web Services tag has two parts.\n\n  * A\
            \ tag _key_ (for example, `CostCenter`, `Environment`, `Project`, or `Secret`).\
            \ Tag _keys_ are case-sensitive.\n\n  * An optional field known as a tag\
            \ _value_ (for example, `111122223333`, `Production`, or a team name).\
            \ Omitting the tag _value_ is the same as using an empty string. Like\
            \ tag _keys_ , tag _values_ are case-sensitive.\n\nTogether these are\
            \ known as _key_ -_value_ pairs.\n\nThe string used for a _key_ in a tag\
            \ that you use to define your resource coverage must begin with the prefix\
            \ `Devops-guru-`. The tag _key_ might be `DevOps-Guru-deployment-application`\
            \ or `devops-guru-rds-application`. When you create a _key_ , the case\
            \ of characters in the _key_ can be whatever you choose. After you create\
            \ a _key_ , it is case-sensitive. For example, DevOps Guru works with\
            \ a _key_ named `devops-guru-rds` and a _key_ named `DevOps-Guru-RDS`,\
            \ and these act as two different _keys_. Possible _key_ /_value_ pairs\
            \ in your application might be `Devops-Guru-production-application/RDS`\
            \ or `Devops-Guru-production-application/containers`."
      description: Contains information used to update a collection of Amazon Web
        Services resources.
    UpdateResourceCollectionRequest:
      type: object
      properties:
        Action:
          allOf:
          - $ref: '#/components/schemas/UpdateResourceCollectionAction'
          description: Specifies if the resource collection in the request is added
            or deleted to the resource collection.
        ResourceCollection:
          $ref: '#/components/schemas/UpdateResourceCollectionFilter'
      required:
      - Action
      - ResourceCollection
    UpdateResourceCollectionResponse:
      type: object
      properties: {}
    UpdateServiceIntegrationConfig:
      type: object
      properties:
        OpsCenter:
          $ref: '#/components/schemas/OpsCenterIntegrationConfig'
        LogsAnomalyDetection:
          allOf:
          - $ref: '#/components/schemas/LogsAnomalyDetectionIntegrationConfig'
          description: Information about whether DevOps Guru is configured to perform
            log anomaly detection on Amazon CloudWatch log groups.
        KMSServerSideEncryption:
          allOf:
          - $ref: '#/components/schemas/KMSServerSideEncryptionIntegrationConfig'
          description: Information about whether DevOps Guru is configured to encrypt
            server-side data using KMS.
      description: Information about updating the integration status of an Amazon
        Web Services service, such as Amazon Web Services Systems Manager, with DevOps
        Guru.
    UpdateServiceIntegrationRequest:
      type: object
      properties:
        ServiceIntegration:
          allOf:
          - $ref: '#/components/schemas/UpdateServiceIntegrationConfig'
          description: An `IntegratedServiceConfig` object used to specify the integrated
            service you want to update, and whether you want to update it to enabled
            or disabled.
      required:
      - ServiceIntegration
    UpdateServiceIntegrationResponse:
      type: object
      properties: {}
    UpdateStackNames:
      type: array
      items:
        $ref: '#/components/schemas/StackName'
    UpdateTagCollectionFilter:
      type: object
      properties:
        AppBoundaryKey:
          allOf:
          - $ref: '#/components/schemas/AppBoundaryKey'
          description: 'An Amazon Web Services tag _key_ that is used to identify
            the Amazon Web Services resources that DevOps Guru analyzes. All Amazon
            Web Services resources in your account and Region tagged with this _key_
            make up your DevOps Guru application and analysis boundary.


            The string used for a _key_ in a tag that you use to define your resource
            coverage must begin with the prefix `Devops-guru-`. The tag _key_ might
            be `DevOps-Guru-deployment-application` or `devops-guru-rds-application`.
            When you create a _key_ , the case of characters in the _key_ can be whatever
            you choose. After you create a _key_ , it is case-sensitive. For example,
            DevOps Guru works with a _key_ named `devops-guru-rds` and a _key_ named
            `DevOps-Guru-RDS`, and these act as two different _keys_. Possible _key_
            /_value_ pairs in your application might be `Devops-Guru-production-application/RDS`
            or `Devops-Guru-production-application/containers`.'
        TagValues:
          allOf:
          - $ref: '#/components/schemas/UpdateTagValues'
          description: 'The values in an Amazon Web Services tag collection.


            The tag''s _value_ is an optional field used to associate a string with
            the tag _key_ (for example, `111122223333`, `Production`, or a team name).
            The _key_ and _value_ are the tag''s _key_ pair. Omitting the tag _value_
            is the same as using an empty string. Like tag _keys_ , tag _values_ are
            case-sensitive. You can specify a maximum of 256 characters for a tag
            value.'
      required:
      - AppBoundaryKey
      - TagValues
      description: A new collection of Amazon Web Services resources that are defined
        by an Amazon Web Services tag or tag _key_ /_value_ pair.
    UpdateTagCollectionFilters:
      type: array
      items:
        $ref: '#/components/schemas/UpdateTagCollectionFilter'
    UpdateTagValues:
      type: array
      items:
        $ref: '#/components/schemas/TagValue'
    UuidNextToken:
      type: string
      pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
      minLength: 36
      maxLength: 36
    ValidationException:
      type: object
      properties:
        Message:
          allOf:
          - $ref: '#/components/schemas/ErrorMessageString'
          description: A message that describes the validation exception.
        Reason:
          allOf:
          - $ref: '#/components/schemas/ValidationExceptionReason'
          description: The reason the validation exception was thrown.
        Fields:
          $ref: '#/components/schemas/ValidationExceptionFields'
      required:
      - Message
      description: Contains information about data passed in to a field during a request
        that is not valid.
    ValidationExceptionField:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/ErrorNameString'
          description: The name of the field.
        Message:
          allOf:
          - $ref: '#/components/schemas/ErrorMessageString'
          description: The message associated with the validation exception with information
            to help determine its cause.
      required:
      - Name
      - Message
      description: The field associated with the validation exception.
    ValidationExceptionFields:
      type: array
      items:
        $ref: '#/components/schemas/ValidationExceptionField'
      description: <p> An array of fields that are associated with the validation
        exception. </p>
    ValidationExceptionReason:
      type: string
      enum:
      - UNKNOWN_OPERATION
      - CANNOT_PARSE
      - FIELD_VALIDATION_FAILED
      - OTHER
      - INVALID_PARAMETER_COMBINATION
      - PARAMETER_INCONSISTENT_WITH_SERVICE_STATE
