openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: controltower
  x-aws-serviceName: controltower
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-07'
  version: '2018-05-10'
  title: AWS Control Tower
  description: "Amazon Web Services Control Tower offers application programming interface\
    \ (API) operations that support programmatic interaction with these types of resources:\n\
    \n  * [ _Controls_ ](https://docs.aws.amazon.com/controltower/latest/userguide/controls.html)\n\
    \n    * [DisableControl](https://docs.aws.amazon.com/controltower/latest/APIReference/API_DisableControl.html)\n\
    \n    * [EnableControl](https://docs.aws.amazon.com/controltower/latest/APIReference/API_EnableControl.html)\n\
    \n    * [GetEnabledControl](https://docs.aws.amazon.com/controltower/latest/APIReference/API_GetEnabledControl.html)\n\
    \n    * [ListControlOperations](https://docs.aws.amazon.com/controltower/latest/APIReference/API_ListControlOperations.html)\n\
    \n    * [ListEnabledControls](https://docs.aws.amazon.com/controltower/latest/APIReference/API_ListEnabledControls.html)\n\
    \n    * [UpdateEnabledControl](https://docs.aws.amazon.com/controltower/latest/APIReference/API_UpdateEnabledControl.html)\n\
    \n  * [ _Landing zones_ ](https://docs.aws.amazon.com/controltower/latest/userguide/lz-api-launch.html)\n\
    \n    * [CreateLandingZone](https://docs.aws.amazon.com/controltower/latest/APIReference/API_CreateLandingZone.html)\n\
    \n    * [DeleteLandingZone](https://docs.aws.amazon.com/controltower/latest/APIReference/API_DeleteLandingZone.html)\n\
    \n    * [GetLandingZone](https://docs.aws.amazon.com/controltower/latest/APIReference/API_GetLandingZone.html)\n\
    \n    * [GetLandingZoneOperation](https://docs.aws.amazon.com/controltower/latest/APIReference/API_GetLandingZoneOperation.html)\n\
    \n    * [ListLandingZones](https://docs.aws.amazon.com/controltower/latest/APIReference/API_ListLandingZones.html)\n\
    \n    * [ListLandingZoneOperations](https://docs.aws.amazon.com/controltower/latest/APIReference/API_ListLandingZoneOperations.html)\n\
    \n    * [ResetLandingZone](https://docs.aws.amazon.com/controltower/latest/APIReference/API_ResetLandingZone.html)\n\
    \n    * [UpdateLandingZone](https://docs.aws.amazon.com/controltower/latest/APIReference/API_UpdateLandingZone.html)\n\
    \n  * [ _Baselines_ ](https://docs.aws.amazon.com/controltower/latest/userguide/types-of-baselines.html)\n\
    \n    * [DisableBaseline](https://docs.aws.amazon.com/controltower/latest/APIReference/API_DisableBaseline.html)\n\
    \n    * [EnableBaseline](https://docs.aws.amazon.com/controltower/latest/APIReference/API_EnableBaseline.html)\n\
    \n    * [GetBaseline](https://docs.aws.amazon.com/controltower/latest/APIReference/API_GetBaseline.html)\n\
    \n    * [GetBaselineOperation](https://docs.aws.amazon.com/controltower/latest/APIReference/API_GetBaselineOperation.html)\n\
    \n    * [GetEnabledBaseline](https://docs.aws.amazon.com/controltower/latest/APIReference/API_GetEnabledBaseline.html)\n\
    \n    * [ListBaselines](https://docs.aws.amazon.com/controltower/latest/APIReference/API_ListBaselines.html)\n\
    \n    * [ListEnabledBaselines](https://docs.aws.amazon.com/controltower/latest/APIReference/API_ListEnabledBaselines.html)\n\
    \n    * [ResetEnabledBaseline](https://docs.aws.amazon.com/controltower/latest/APIReference/API_ResetEnabledBaseline.html)\n\
    \n    * [UpdateEnabledBaseline](https://docs.aws.amazon.com/controltower/latest/APIReference/API_UpdateEnabledBaseline.html)\n\
    \n  * [ _Tagging_ ](https://docs.aws.amazon.com/controltower/latest/controlreference/tagging.html)\n\
    \n    * [ListTagsForResource](https://docs.aws.amazon.com/controltower/latest/APIReference/API_ListTagsForResource.html)\n\
    \n    * [TagResource](https://docs.aws.amazon.com/controltower/latest/APIReference/API_TagResource.html)\n\
    \n    * [UntagResource](https://docs.aws.amazon.com/controltower/latest/APIReference/API_UntagResource.html)\n\
    \nFor more information about these types of resources, see the [ _Amazon Web Services\
    \ Control Tower User Guide_ ](https://docs.aws.amazon.com/controltower/latest/userguide/what-is-control-tower.html).\n\
    \n**About control APIs**\n\nThese interfaces allow you to apply the Amazon Web\
    \ Services library of pre-defined _controls_ to your organizational units, programmatically.\
    \ In Amazon Web Services Control Tower, the terms \"control\" and \"guardrail\"\
    \ are synonyms.\n\nTo call these APIs, you'll need to know:\n\n  * the `controlIdentifier`\
    \ for the control--or guardrail--you are targeting.\n\n  * the ARN associated\
    \ with the target organizational unit (OU), which we call the `targetIdentifier`.\n\
    \n  * the ARN associated with a resource that you wish to tag or untag.\n\n**To\
    \ get the`controlIdentifier` for your Amazon Web Services Control Tower control:**\n\
    \nThe `controlIdentifier` is an ARN that is specified for each control. You can\
    \ view the `controlIdentifier` in the console on the **Control details** page,\
    \ as well as in the documentation.\n\n**About identifiers for Amazon Web Services\
    \ Control Tower**\n\nThe Amazon Web Services Control Tower `controlIdentifier`\
    \ is unique in each Amazon Web Services Region for each control. You can find\
    \ the `controlIdentifier` for each Region and control in the [Tables of control\
    \ metadata](https://docs.aws.amazon.com/controltower/latest/controlreference/control-metadata-tables.html)\
    \ or the [Control availability by Region tables](https://docs.aws.amazon.com/controltower/latest/controlreference/control-region-tables.html)\
    \ in the _Amazon Web Services Control Tower Controls Reference Guide_.\n\nA quick-reference\
    \ list of control identifers for the Amazon Web Services Control Tower legacy\
    \ _Strongly recommended_ and _Elective_ controls is given in [Resource identifiers\
    \ for APIs and controls](https://docs.aws.amazon.com/controltower/latest/controlreference/control-identifiers.html.html)\
    \ in the [ _Amazon Web Services Control Tower Controls Reference Guide_ ](https://docs.aws.amazon.com/controltower/latest/controlreference/control-identifiers.html).\
    \ Remember that _Mandatory_ controls cannot be added or removed.\n\n**Some controls\
    \ have two identifiers**\n\n  * **ARN format for Amazon Web Services Control Tower:**\
    \ `arn:aws:controltower:{REGION}::control/{CONTROL_TOWER_OPAQUE_ID}`\n\n**Example:**\n\
    \n`arn:aws:controltower:us-west-2::control/AWS-GR_AUTOSCALING_LAUNCH_CONFIG_PUBLIC_IP_DISABLED`\n\
    \n  * **ARN format for Amazon Web Services Control Catalog:** `arn:{PARTITION}:controlcatalog:::control/{CONTROL_CATALOG_OPAQUE_ID}`\n\
    \nYou can find the `{CONTROL_CATALOG_OPAQUE_ID}` in the [ _Amazon Web Services\
    \ Control Tower Controls Reference Guide_ ](https://docs.aws.amazon.com/controltower/latest/controlreference/all-global-identifiers.html),\
    \ or in the Amazon Web Services Control Tower console, on the **Control details**\
    \ page.\n\nThe Amazon Web Services Control Tower APIs for enabled controls, such\
    \ as `GetEnabledControl` and `ListEnabledControls` always return an ARN of the\
    \ same type given when the control was enabled.\n\n**To get the`targetIdentifier`:**\n\
    \nThe `targetIdentifier` is the ARN for an OU.\n\nIn the Amazon Web Services Organizations\
    \ console, you can find the ARN for the OU on the **Organizational unit details**\
    \ page associated with that OU.\n\n**OU ARN format:**\n\n`arn:${Partition}:organizations::${MasterAccountId}:ou/o-${OrganizationId}/ou-${OrganizationalUnitId}`\n\
    \n**About landing zone APIs**\n\nYou can configure and launch an Amazon Web Services\
    \ Control Tower landing zone with APIs. For an introduction and steps, see [Getting\
    \ started with Amazon Web Services Control Tower using APIs](https://docs.aws.amazon.com/controltower/latest/userguide/getting-started-apis.html).\n\
    \nFor an overview of landing zone API operations, see [ Amazon Web Services Control\
    \ Tower supports landing zone APIs](https://docs.aws.amazon.com/controltower/latest/userguide/2023-all.html#landing-zone-apis).\
    \ The individual API operations for landing zones are detailed in this document,\
    \ the [API reference manual](https://docs.aws.amazon.com/controltower/latest/APIReference/API_Operations.html),\
    \ in the \"Actions\" section.\n\n**About baseline APIs**\n\nYou can apply the\
    \ `AWSControlTowerBaseline` baseline to an organizational unit (OU) as a way to\
    \ register the OU with Amazon Web Services Control Tower, programmatically. For\
    \ a general overview of this capability, see [Amazon Web Services Control Tower\
    \ supports APIs for OU registration and configuration with baselines](https://docs.aws.amazon.com/controltower/latest/userguide/2024-all.html#baseline-apis).\n\
    \nYou can call the baseline API operations to view the baselines that Amazon Web\
    \ Services Control Tower enables for your landing zone, on your behalf, when setting\
    \ up the landing zone. These baselines are read-only baselines.\n\nThe individual\
    \ API operations for baselines are detailed in this document, the [API reference\
    \ manual](https://docs.aws.amazon.com/controltower/latest/APIReference/API_Operations.html),\
    \ in the \"Actions\" section. For usage examples, see [Baseline API input and\
    \ output examples with CLI](https://docs.aws.amazon.com/controltower/latest/userguide/baseline-api-examples.html).\n\
    \n**About Amazon Web Services Control Catalog identifiers**\n\n  * The `EnableControl`\
    \ and `DisableControl` API operations can be called by specifying either the Amazon\
    \ Web Services Control Tower identifer or the Amazon Web Services Control Catalog\
    \ identifier. The API response returns the same type of identifier that you specified\
    \ when calling the API.\n\n  * If you use an Amazon Web Services Control Tower\
    \ identifier to call the `EnableControl` API, and then call `EnableControl` again\
    \ with an Amazon Web Services Control Catalog identifier, Amazon Web Services\
    \ Control Tower returns an error message stating that the control is already enabled.\
    \ Similar behavior applies to the `DisableControl` API operation. \n\n  * Mandatory\
    \ controls and the landing-zone-level Region deny control have Amazon Web Services\
    \ Control Tower identifiers only.\n\n**Details and examples**\n\n  * [Control\
    \ API input and output examples with CLI](https://docs.aws.amazon.com/controltower/latest/controlreference/control-api-examples-short.html)\n\
    \n  * [Baseline API input and output examples with CLI](https://docs.aws.amazon.com/controltower/latest/userguide/baseline-api-examples.html)\n\
    \n  * [Enable controls with CloudFormation](https://docs.aws.amazon.com/controltower/latest/controlreference/enable-controls.html)\n\
    \n  * [Launch a landing zone with CloudFormation](https://docs.aws.amazon.com/controltower/latest/userguide/lz-apis-cfn-setup.html)\n\
    \n  * [Control metadata tables (large page)](https://docs.aws.amazon.com/controltower/latest/controlreference/control-metadata-tables.html)\n\
    \n  * [Control availability by Region tables (large page)](https://docs.aws.amazon.com/controltower/latest/controlreference/control-region-tables.html)\n\
    \n  * [List of identifiers for legacy controls](https://docs.aws.amazon.com/controltower/latest/controlreference/control-identifiers.html)\n\
    \n  * [Controls reference guide](https://docs.aws.amazon.com/controltower/latest/controlreference/controls.html)\n\
    \n  * [Controls library groupings](https://docs.aws.amazon.com/controltower/latest/controlreference/controls-reference.html)\n\
    \n  * [Creating Amazon Web Services Control Tower resources with Amazon Web Services\
    \ CloudFormation](https://docs.aws.amazon.com/controltower/latest/userguide/creating-resources-with-cloudformation.html)\n\
    \nTo view the open source resource repository on GitHub, see [aws-cloudformation/aws-cloudformation-resource-providers-controltower](https://github.com/aws-cloudformation/aws-cloudformation-resource-providers-controltower)\n\
    \n**Recording API Requests**\n\nAmazon Web Services Control Tower supports Amazon\
    \ Web Services CloudTrail, a service that records Amazon Web Services API calls\
    \ for your Amazon Web Services account and delivers log files to an Amazon S3\
    \ bucket. By using information collected by CloudTrail, you can determine which\
    \ requests the Amazon Web Services Control Tower service received, who made the\
    \ request and when, and so on. For more about Amazon Web Services Control Tower\
    \ and its support for CloudTrail, see [Logging Amazon Web Services Control Tower\
    \ Actions with Amazon Web Services CloudTrail](https://docs.aws.amazon.com/controltower/latest/userguide/logging-using-cloudtrail.html)\
    \ in the Amazon Web Services Control Tower User Guide. To learn more about CloudTrail,\
    \ including how to turn it on and find your log files, see the Amazon Web Services\
    \ CloudTrail User Guide."
servers:
- description: The AWS Control Tower regional endpoint
  url: https://controltower.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths:
  /create-landingzone:
    post:
      operationId: CreateLandingZone
      description: |-
        Creates a new landing zone. This API call starts an asynchronous operation that creates and configures a landing zone, based on the parameters specified in the manifest JSON file.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                version:
                  $ref: '#/components/schemas/LandingZoneVersion'
                manifest:
                  $ref: '#/components/schemas/Manifest'
                tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Updating or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An unexpected error occurred during processing of a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input does not satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /delete-landingzone:
    post:
      operationId: DeleteLandingZone
      description: |-
        Decommissions a landing zone. This API call starts an asynchronous operation that deletes Amazon Web Services Control Tower resources deployed in accounts managed by Amazon Web Services Control Tower.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                landingZoneIdentifier:
                  $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Updating or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An unexpected error occurred during processing of a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The request references a resource that does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input does not satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /disable-baseline:
    post:
      operationId: DisableBaseline
      description: |-
        Disable an `EnabledBaseline` resource on the specified Target. This API starts an asynchronous operation to remove all resources deployed as part of the baseline enablement. The resource will vary depending on the enabled baseline. For usage examples, see [ _the Amazon Web Services Control Tower User Guide_ ](https://docs.aws.amazon.com/controltower/latest/userguide/baseline-api-examples.html).
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                enabledBaselineIdentifier:
                  $ref: '#/components/schemas/Arn'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Updating or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An unexpected error occurred during processing of a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The request references a resource that does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            The request would cause a service quota to be exceeded. The limit is 10 concurrent operations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input does not satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /disable-control:
    post:
      operationId: DisableControl
      description: |-
        This API call turns off a control. It starts an asynchronous operation that deletes Amazon Web Services resources on the specified organizational unit and the accounts it contains. The resources will vary according to the control that you specify. For usage examples, see the [ _Controls Reference Guide_ ](https://docs.aws.amazon.com/controltower/latest/controlreference/control-api-examples-short.html).
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                controlIdentifier:
                  $ref: '#/components/schemas/ControlIdentifier'
                targetIdentifier:
                  $ref: '#/components/schemas/TargetIdentifier'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Updating or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An unexpected error occurred during processing of a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The request references a resource that does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            The request would cause a service quota to be exceeded. The limit is 10 concurrent operations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input does not satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /enable-baseline:
    post:
      operationId: EnableBaseline
      description: |-
        Enable (apply) a `Baseline` to a Target. This API starts an asynchronous operation to deploy resources specified by the `Baseline` to the specified Target. For usage examples, see [ _the Amazon Web Services Control Tower User Guide_ ](https://docs.aws.amazon.com/controltower/latest/userguide/baseline-api-examples.html).
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                baselineVersion:
                  $ref: '#/components/schemas/BaselineVersion'
                parameters:
                  $ref: '#/components/schemas/EnabledBaselineParameters'
                baselineIdentifier:
                  $ref: '#/components/schemas/Arn'
                targetIdentifier:
                  $ref: '#/components/schemas/Arn'
                tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Updating or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An unexpected error occurred during processing of a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The request references a resource that does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            The request would cause a service quota to be exceeded. The limit is 10 concurrent operations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input does not satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /enable-control:
    post:
      operationId: EnableControl
      description: |-
        This API call activates a control. It starts an asynchronous operation that creates Amazon Web Services resources on the specified organizational unit and the accounts it contains. The resources created will vary according to the control that you specify. For usage examples, see the [ _Controls Reference Guide_ ](https://docs.aws.amazon.com/controltower/latest/controlreference/control-api-examples-short.html).
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                controlIdentifier:
                  $ref: '#/components/schemas/ControlIdentifier'
                targetIdentifier:
                  $ref: '#/components/schemas/TargetIdentifier'
                tags:
                  $ref: '#/components/schemas/TagMap'
                parameters:
                  $ref: '#/components/schemas/EnabledControlParameters'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Updating or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An unexpected error occurred during processing of a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The request references a resource that does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            The request would cause a service quota to be exceeded. The limit is 10 concurrent operations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input does not satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /get-baseline:
    post:
      operationId: GetBaseline
      description: |-
        Retrieve details about an existing `Baseline` resource by specifying its identifier. For usage examples, see [ _the Amazon Web Services Control Tower User Guide_ ](https://docs.aws.amazon.com/controltower/latest/userguide/baseline-api-examples.html).
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                baselineIdentifier:
                  $ref: '#/components/schemas/BaselineArn'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An unexpected error occurred during processing of a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The request references a resource that does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input does not satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /get-baseline-operation:
    post:
      operationId: GetBaselineOperation
      description: |-
        Returns the details of an asynchronous baseline operation, as initiated by any of these APIs: `EnableBaseline`, `DisableBaseline`, `UpdateEnabledBaseline`, `ResetEnabledBaseline`. A status message is displayed in case of operation failure. For usage examples, see [ _the Amazon Web Services Control Tower User Guide_ ](https://docs.aws.amazon.com/controltower/latest/userguide/baseline-api-examples.html).
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                operationIdentifier:
                  $ref: '#/components/schemas/OperationIdentifier'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An unexpected error occurred during processing of a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The request references a resource that does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input does not satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /get-control-operation:
    post:
      operationId: GetControlOperation
      description: |-
        Returns the status of a particular `EnableControl` or `DisableControl` operation. Displays a message in case of error. Details for an operation are available for 90 days. For usage examples, see the [ _Controls Reference Guide_ ](https://docs.aws.amazon.com/controltower/latest/controlreference/control-api-examples-short.html).
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                operationIdentifier:
                  $ref: '#/components/schemas/OperationIdentifier'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An unexpected error occurred during processing of a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The request references a resource that does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input does not satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /get-enabled-baseline:
    post:
      operationId: GetEnabledBaseline
      description: |-
        Retrieve details of an `EnabledBaseline` resource by specifying its identifier.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                enabledBaselineIdentifier:
                  $ref: '#/components/schemas/Arn'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An unexpected error occurred during processing of a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The request references a resource that does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input does not satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /get-enabled-control:
    post:
      operationId: GetEnabledControl
      description: |-
        Retrieves details about an enabled control. For usage examples, see the [ _Controls Reference Guide_ ](https://docs.aws.amazon.com/controltower/latest/controlreference/control-api-examples-short.html).
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                enabledControlIdentifier:
                  $ref: '#/components/schemas/Arn'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An unexpected error occurred during processing of a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The request references a resource that does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input does not satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /get-landingzone:
    post:
      operationId: GetLandingZone
      description: |-
        Returns details about the landing zone. Displays a message in case of error.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                landingZoneIdentifier:
                  $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An unexpected error occurred during processing of a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The request references a resource that does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input does not satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /get-landingzone-operation:
    post:
      operationId: GetLandingZoneOperation
      description: |-
        Returns the status of the specified landing zone operation. Details for an operation are available for 90 days.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                operationIdentifier:
                  $ref: '#/components/schemas/OperationIdentifier'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An unexpected error occurred during processing of a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The request references a resource that does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input does not satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /list-baselines:
    post:
      operationId: ListBaselines
      description: |-
        Returns a summary list of all available baselines. For usage examples, see [ _the Amazon Web Services Control Tower User Guide_ ](https://docs.aws.amazon.com/controltower/latest/userguide/baseline-api-examples.html).
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nextToken:
                  $ref: '#/components/schemas/String'
                maxResults:
                  $ref: '#/components/schemas/ListBaselinesMaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An unexpected error occurred during processing of a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input does not satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /list-control-operations:
    post:
      operationId: ListControlOperations
      description: |-
        Provides a list of operations in progress or queued. For usage examples, see [ListControlOperation examples](https://docs.aws.amazon.com/controltower/latest/controlreference/control-api-examples-short.html#list-control-operations-api-examples).
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                filter:
                  $ref: '#/components/schemas/ControlOperationFilter'
                nextToken:
                  $ref: '#/components/schemas/ListControlOperationsNextToken'
                maxResults:
                  $ref: '#/components/schemas/ListControlOperationsMaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An unexpected error occurred during processing of a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input does not satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /list-enabled-baselines:
    post:
      operationId: ListEnabledBaselines
      description: |-
        Returns a list of summaries describing `EnabledBaseline` resources. You can filter the list by the corresponding `Baseline` or `Target` of the `EnabledBaseline` resources. For usage examples, see [ _the Amazon Web Services Control Tower User Guide_ ](https://docs.aws.amazon.com/controltower/latest/userguide/baseline-api-examples.html).
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                filter:
                  $ref: '#/components/schemas/EnabledBaselineFilter'
                nextToken:
                  $ref: '#/components/schemas/ListEnabledBaselinesNextToken'
                maxResults:
                  $ref: '#/components/schemas/ListEnabledBaselinesMaxResults'
                includeChildren:
                  $ref: '#/components/schemas/Boolean'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An unexpected error occurred during processing of a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input does not satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /list-enabled-controls:
    post:
      operationId: ListEnabledControls
      description: |-
        Lists the controls enabled by Amazon Web Services Control Tower on the specified organizational unit and the accounts it contains. For usage examples, see the [ _Controls Reference Guide_ ](https://docs.aws.amazon.com/controltower/latest/controlreference/control-api-examples-short.html).
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                targetIdentifier:
                  $ref: '#/components/schemas/TargetIdentifier'
                nextToken:
                  $ref: '#/components/schemas/String'
                maxResults:
                  $ref: '#/components/schemas/MaxResults'
                filter:
                  $ref: '#/components/schemas/EnabledControlFilter'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An unexpected error occurred during processing of a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The request references a resource that does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input does not satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /list-landingzone-operations:
    post:
      operationId: ListLandingZoneOperations
      description: |-
        Lists all landing zone operations from the past 90 days. Results are sorted by time, with the most recent operation first.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                filter:
                  $ref: '#/components/schemas/LandingZoneOperationFilter'
                nextToken:
                  $ref: '#/components/schemas/String'
                maxResults:
                  $ref: '#/components/schemas/ListLandingZoneOperationsMaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An unexpected error occurred during processing of a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input does not satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /list-landingzones:
    post:
      operationId: ListLandingZones
      description: |-
        Returns the landing zone ARN for the landing zone deployed in your managed account. This API also creates an ARN for existing accounts that do not yet have a landing zone ARN.

        Returns one landing zone ARN.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nextToken:
                  $ref: '#/components/schemas/String'
                maxResults:
                  $ref: '#/components/schemas/ListLandingZonesMaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An unexpected error occurred during processing of a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input does not satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /tags/{resourceArn}:
    get:
      operationId: ListTagsForResource
      description: |-
        Returns a list of tags associated with the resource. For usage examples, see the [ _Controls Reference Guide_ ](https://docs.aws.amazon.com/controltower/latest/controlreference/control-api-examples-short.html).
      parameters:
      - name: resourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error occurred during processing of a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The request references a resource that does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input does not satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    post:
      operationId: TagResource
      description: |-
        Applies tags to a resource. For usage examples, see the [ _Controls Reference Guide_ ](https://docs.aws.amazon.com/controltower/latest/controlreference/control-api-examples-short.html).
      parameters:
      - name: resourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '204': {}
        '500':
          description: |-
            An unexpected error occurred during processing of a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The request references a resource that does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input does not satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    delete:
      operationId: UntagResource
      description: |-
        Removes tags from a resource. For usage examples, see the [ _Controls Reference Guide_ ](https://docs.aws.amazon.com/controltower/latest/controlreference/control-api-examples-short.html).
      parameters:
      - name: resourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      - name: tagKeys
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/TagKeys'
      responses:
        '204': {}
        '500':
          description: |-
            An unexpected error occurred during processing of a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The request references a resource that does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input does not satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /reset-enabled-baseline:
    post:
      operationId: ResetEnabledBaseline
      description: |-
        Re-enables an `EnabledBaseline` resource. For example, this API can re-apply the existing `Baseline` after a new member account is moved to the target OU. For usage examples, see [ _the Amazon Web Services Control Tower User Guide_ ](https://docs.aws.amazon.com/controltower/latest/userguide/baseline-api-examples.html).
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                enabledBaselineIdentifier:
                  $ref: '#/components/schemas/Arn'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Updating or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An unexpected error occurred during processing of a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The request references a resource that does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            The request would cause a service quota to be exceeded. The limit is 10 concurrent operations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input does not satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /reset-enabled-control:
    post:
      operationId: ResetEnabledControl
      description: |-
        Resets an enabled control.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                enabledControlIdentifier:
                  $ref: '#/components/schemas/Arn'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Updating or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An unexpected error occurred during processing of a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The request references a resource that does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            The request would cause a service quota to be exceeded. The limit is 10 concurrent operations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input does not satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /reset-landingzone:
    post:
      operationId: ResetLandingZone
      description: |-
        This API call resets a landing zone. It starts an asynchronous operation that resets the landing zone to the parameters specified in the original configuration, which you specified in the manifest file. Nothing in the manifest file's original landing zone configuration is changed during the reset process, by default. This API is not the same as a rollback of a landing zone version, which is not a supported operation.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                landingZoneIdentifier:
                  $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Updating or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An unexpected error occurred during processing of a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The request references a resource that does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input does not satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /update-enabled-baseline:
    post:
      operationId: UpdateEnabledBaseline
      description: |-
        Updates an `EnabledBaseline` resource's applied parameters or version. For usage examples, see [ _the Amazon Web Services Control Tower User Guide_ ](https://docs.aws.amazon.com/controltower/latest/userguide/baseline-api-examples.html).
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                baselineVersion:
                  $ref: '#/components/schemas/BaselineVersion'
                parameters:
                  $ref: '#/components/schemas/EnabledBaselineParameters'
                enabledBaselineIdentifier:
                  $ref: '#/components/schemas/Arn'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Updating or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An unexpected error occurred during processing of a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The request references a resource that does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            The request would cause a service quota to be exceeded. The limit is 10 concurrent operations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input does not satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /update-enabled-control:
    post:
      operationId: UpdateEnabledControl
      description: |-
        Updates the configuration of an already enabled control.

        If the enabled control shows an `EnablementStatus` of SUCCEEDED, supply parameters that are different from the currently configured parameters. Otherwise, Amazon Web Services Control Tower will not accept the request.

        If the enabled control shows an `EnablementStatus` of FAILED, Amazon Web Services Control Tower updates the control to match any valid parameters that you supply.

        If the `DriftSummary` status for the control shows as `DRIFTED`, you cannot call this API. Instead, you can update the control by calling the `ResetEnabledControl` API. Alternatively, you can call `DisableControl` and then call `EnableControl` again. Also, you can run an extending governance operation to repair drift. For usage examples, see the [ _Controls Reference Guide_ ](https://docs.aws.amazon.com/controltower/latest/controlreference/control-api-examples-short.html).
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                parameters:
                  $ref: '#/components/schemas/EnabledControlParameters'
                enabledControlIdentifier:
                  $ref: '#/components/schemas/Arn'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Updating or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An unexpected error occurred during processing of a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The request references a resource that does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            The request would cause a service quota to be exceeded. The limit is 10 concurrent operations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input does not satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /update-landingzone:
    post:
      operationId: UpdateLandingZone
      description: |-
        This API call updates the landing zone. It starts an asynchronous operation that updates the landing zone based on the new landing zone version, or on the changed parameters specified in the updated manifest file.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                version:
                  $ref: '#/components/schemas/LandingZoneVersion'
                manifest:
                  $ref: '#/components/schemas/Manifest'
                landingZoneIdentifier:
                  $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Updating or deleting the resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An unexpected error occurred during processing of a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The request references a resource that does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input does not satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
components:
  schemas:
    AccessDeniedException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      required:
      - message
      description: You do not have sufficient access to perform this action.
    Arn:
      type: string
      pattern: ^arn:aws[0-9a-zA-Z_\-:\/]+$
      minLength: 20
      maxLength: 2048
    BaselineArn:
      type: string
      pattern: ^arn:[a-z-]+:controltower:[a-z0-9-]*:[0-9]{0,12}:baseline/[A-Z0-9]{16}$
    BaselineOperation:
      type: object
      properties:
        operationIdentifier:
          allOf:
          - $ref: '#/components/schemas/OperationIdentifier'
          description: The identifier of the specified operation.
        operationType:
          allOf:
          - $ref: '#/components/schemas/BaselineOperationType'
          description: An enumerated type (`enum`) with possible values of `ENABLE_BASELINE`,
            `DISABLE_BASELINE`, `UPDATE_ENABLED_BASELINE`, or `RESET_ENABLED_BASELINE`.
        status:
          allOf:
          - $ref: '#/components/schemas/BaselineOperationStatus'
          description: An enumerated type (`enum`) with possible values of `SUCCEEDED`,
            `FAILED`, or `IN_PROGRESS`.
        startTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The start time of the operation, in ISO 8601 format.
        endTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The end time of the operation (if applicable), in ISO 8601
            format.
        statusMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A status message that gives more information about the operation's
            status, if applicable.
      description: An object of shape `BaselineOperation`, returning details about
        the specified `Baseline` operation ID.
    BaselineOperationStatus:
      type: string
      enum:
      - SUCCEEDED
      - FAILED
      - IN_PROGRESS
    BaselineOperationType:
      type: string
      enum:
      - ENABLE_BASELINE
      - DISABLE_BASELINE
      - UPDATE_ENABLED_BASELINE
      - RESET_ENABLED_BASELINE
    BaselineSummary:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The full ARN of a Baseline.
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The human-readable name of a Baseline.
        description:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A summary description of a Baseline.
      required:
      - arn
      - name
      description: Returns a summary of information about a `Baseline` object.
    BaselineVersion:
      type: string
      pattern: ^\d+(?:\.\d+){0,2}$
      minLength: 1
      maxLength: 10
    Baselines:
      type: array
      items:
        $ref: '#/components/schemas/BaselineSummary'
    ConflictException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      required:
      - message
      description: Updating or deleting the resource can cause an inconsistent state.
    ControlIdentifier:
      type: string
      pattern: ^arn:aws[0-9a-zA-Z_\-:\/]+$
      minLength: 20
      maxLength: 2048
    ControlIdentifiers:
      type: array
      items:
        $ref: '#/components/schemas/ControlIdentifier'
    ControlOperation:
      type: object
      properties:
        operationType:
          allOf:
          - $ref: '#/components/schemas/ControlOperationType'
          description: One of `ENABLE_CONTROL` or `DISABLE_CONTROL`.
        startTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time that the operation began.
        endTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time that the operation finished.
        status:
          allOf:
          - $ref: '#/components/schemas/ControlOperationStatus'
          description: One of `IN_PROGRESS`, `SUCEEDED`, or `FAILED`.
        statusMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          description: If the operation result is `FAILED`, this string contains a
            message explaining why the operation failed.
        operationIdentifier:
          allOf:
          - $ref: '#/components/schemas/OperationIdentifier'
          description: The identifier of the specified operation.
        controlIdentifier:
          allOf:
          - $ref: '#/components/schemas/ControlIdentifier'
          description: The `controlIdentifier` of the control for the operation.
        targetIdentifier:
          allOf:
          - $ref: '#/components/schemas/TargetIdentifier'
          description: The target upon which the control operation is working.
        enabledControlIdentifier:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The `controlIdentifier` of the enabled control.
      description: An operation performed by the control.
    ControlOperationFilter:
      type: object
      properties:
        controlIdentifiers:
          allOf:
          - $ref: '#/components/schemas/ControlIdentifiers'
          description: The set of `controlIdentifier` returned by the filter.
        targetIdentifiers:
          allOf:
          - $ref: '#/components/schemas/TargetIdentifiers'
          description: The set of `targetIdentifier` objects returned by the filter.
        enabledControlIdentifiers:
          allOf:
          - $ref: '#/components/schemas/EnabledControlIdentifiers'
          description: The set `controlIdentifier` of enabled controls selected by
            the filter.
        statuses:
          allOf:
          - $ref: '#/components/schemas/ControlOperationStatuses'
          description: Lists the status of control operations.
        controlOperationTypes:
          allOf:
          - $ref: '#/components/schemas/ControlOperationTypes'
          description: The set of `ControlOperation` objects returned by the filter.
      description: A filter object that lets you call `ListControlOperations` with
        a specific filter.
    ControlOperationStatus:
      type: string
      enum:
      - SUCCEEDED
      - FAILED
      - IN_PROGRESS
    ControlOperationStatuses:
      type: array
      items:
        $ref: '#/components/schemas/ControlOperationStatus'
    ControlOperationSummary:
      type: object
      properties:
        operationType:
          allOf:
          - $ref: '#/components/schemas/ControlOperationType'
          description: The type of operation.
        startTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which a control operation began.
        endTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the control operation was completed.
        status:
          allOf:
          - $ref: '#/components/schemas/ControlOperationStatus'
          description: The status of the specified control operation.
        statusMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A speficic message displayed as part of the control status.
        operationIdentifier:
          allOf:
          - $ref: '#/components/schemas/OperationIdentifier'
          description: The unique identifier of a control operation.
        controlIdentifier:
          allOf:
          - $ref: '#/components/schemas/ControlIdentifier'
          description: The `controlIdentifier` of a control.
        targetIdentifier:
          allOf:
          - $ref: '#/components/schemas/TargetIdentifier'
          description: The unique identifier of the target of a control operation.
        enabledControlIdentifier:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The `controlIdentifier` of an enabled control.
      description: A summary of information about the specified control operation.
    ControlOperationType:
      type: string
      enum:
      - ENABLE_CONTROL
      - DISABLE_CONTROL
      - UPDATE_ENABLED_CONTROL
      - RESET_ENABLED_CONTROL
    ControlOperationTypes:
      type: array
      items:
        $ref: '#/components/schemas/ControlOperationType'
    ControlOperations:
      type: array
      items:
        $ref: '#/components/schemas/ControlOperationSummary'
    CreateLandingZoneInput:
      type: object
      properties:
        version:
          allOf:
          - $ref: '#/components/schemas/LandingZoneVersion'
          description: The landing zone version, for example, 3.0.
        manifest:
          allOf:
          - $ref: '#/components/schemas/Manifest'
          description: The manifest JSON file is a text file that describes your Amazon
            Web Services resources. For examples, review [Launch your landing zone](https://docs.aws.amazon.com/controltower/latest/userguide/lz-api-launch).
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: Tags to be applied to the landing zone.
      required:
      - version
      - manifest
    CreateLandingZoneOutput:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN of the landing zone resource.
        operationIdentifier:
          allOf:
          - $ref: '#/components/schemas/OperationIdentifier'
          description: A unique identifier assigned to a `CreateLandingZone` operation.
            You can use this identifier as an input of `GetLandingZoneOperation` to
            check the operation's status.
      required:
      - arn
      - operationIdentifier
    DeleteLandingZoneInput:
      type: object
      properties:
        landingZoneIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique identifier of the landing zone.
      required:
      - landingZoneIdentifier
    DeleteLandingZoneOutput:
      type: object
      properties:
        operationIdentifier:
          allOf:
          - $ref: '#/components/schemas/OperationIdentifier'
          description: '>A unique identifier assigned to a `DeleteLandingZone` operation.
            You can use this identifier as an input parameter of `GetLandingZoneOperation`
            to check the operation''s status.'
      required:
      - operationIdentifier
    DisableBaselineInput:
      type: object
      properties:
        enabledBaselineIdentifier:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: Identifier of the `EnabledBaseline` resource to be deactivated,
            in ARN format.
      required:
      - enabledBaselineIdentifier
    DisableBaselineOutput:
      type: object
      properties:
        operationIdentifier:
          allOf:
          - $ref: '#/components/schemas/OperationIdentifier'
          description: The ID (in UUID format) of the asynchronous `DisableBaseline`
            operation. This `operationIdentifier` is used to track status through
            calls to the `GetBaselineOperation` API.
      required:
      - operationIdentifier
    DisableControlInput:
      type: object
      properties:
        controlIdentifier:
          allOf:
          - $ref: '#/components/schemas/ControlIdentifier'
          description: The ARN of the control. Only **Strongly recommended** and **Elective**
            controls are permitted, with the exception of the **Region deny** control.
            For information on how to find the `controlIdentifier`, see [the overview
            page](https://docs.aws.amazon.com/controltower/latest/APIReference/Welcome.html).
        targetIdentifier:
          allOf:
          - $ref: '#/components/schemas/TargetIdentifier'
          description: The ARN of the organizational unit. For information on how
            to find the `targetIdentifier`, see [the overview page](https://docs.aws.amazon.com/controltower/latest/APIReference/Welcome.html).
      required:
      - controlIdentifier
      - targetIdentifier
    DisableControlOutput:
      type: object
      properties:
        operationIdentifier:
          allOf:
          - $ref: '#/components/schemas/OperationIdentifier'
          description: The ID of the asynchronous operation, which is used to track
            status. The operation is available for 90 days.
      required:
      - operationIdentifier
    DriftStatus:
      type: string
      enum:
      - DRIFTED
      - IN_SYNC
      - NOT_CHECKING
      - UNKNOWN
    DriftStatusSummary:
      type: object
      properties:
        driftStatus:
          allOf:
          - $ref: '#/components/schemas/DriftStatus'
          description: "The drift status of the enabled control.\n\nValid values:\n\
            \n  * `DRIFTED`: The `enabledControl` deployed in this configuration doesn’t\
            \ match the configuration that Amazon Web Services Control Tower expected.\
            \ \n\n  * `IN_SYNC`: The `enabledControl` deployed in this configuration\
            \ matches the configuration that Amazon Web Services Control Tower expected.\n\
            \n  * `NOT_CHECKING`: Amazon Web Services Control Tower does not check\
            \ drift for this enabled control. Drift is not supported for the control\
            \ type.\n\n  * `UNKNOWN`: Amazon Web Services Control Tower is not able\
            \ to check the drift status for the enabled control."
      description: 'The drift summary of the enabled control.


        Amazon Web Services Control Tower expects the enabled control configuration
        to include all supported and governed Regions. If the enabled control differs
        from the expected configuration, it is defined to be in a state of drift.
        You can repair this drift by resetting the enabled control.'
    DriftStatuses:
      type: array
      items:
        $ref: '#/components/schemas/DriftStatus'
    EnableBaselineInput:
      type: object
      properties:
        baselineVersion:
          allOf:
          - $ref: '#/components/schemas/BaselineVersion'
          description: The specific version to be enabled of the specified baseline.
        parameters:
          allOf:
          - $ref: '#/components/schemas/EnabledBaselineParameters'
          description: A list of `key-value` objects that specify enablement parameters,
            where `key` is a string and `value` is a document of any type.
        baselineIdentifier:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN of the baseline to be enabled.
        targetIdentifier:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN of the target on which the baseline will be enabled.
            Only OUs are supported as targets.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: Tags associated with input to `EnableBaseline`.
      required:
      - baselineVersion
      - baselineIdentifier
      - targetIdentifier
    EnableBaselineOutput:
      type: object
      properties:
        operationIdentifier:
          allOf:
          - $ref: '#/components/schemas/OperationIdentifier'
          description: The ID (in UUID format) of the asynchronous `EnableBaseline`
            operation. This `operationIdentifier` is used to track status through
            calls to the `GetBaselineOperation` API.
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN of the `EnabledBaseline` resource.
      required:
      - operationIdentifier
      - arn
    EnableControlInput:
      type: object
      properties:
        controlIdentifier:
          allOf:
          - $ref: '#/components/schemas/ControlIdentifier'
          description: The ARN of the control. Only **Strongly recommended** and **Elective**
            controls are permitted, with the exception of the **Region deny** control.
            For information on how to find the `controlIdentifier`, see [the overview
            page](https://docs.aws.amazon.com/controltower/latest/APIReference/Welcome.html).
        targetIdentifier:
          allOf:
          - $ref: '#/components/schemas/TargetIdentifier'
          description: The ARN of the organizational unit. For information on how
            to find the `targetIdentifier`, see [the overview page](https://docs.aws.amazon.com/controltower/latest/APIReference/Welcome.html).
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: Tags to be applied to the `EnabledControl` resource.
        parameters:
          allOf:
          - $ref: '#/components/schemas/EnabledControlParameters'
          description: A list of input parameter values, which are specified to configure
            the control when you enable it.
      required:
      - controlIdentifier
      - targetIdentifier
    EnableControlOutput:
      type: object
      properties:
        operationIdentifier:
          allOf:
          - $ref: '#/components/schemas/OperationIdentifier'
          description: The ID of the asynchronous operation, which is used to track
            status. The operation is available for 90 days.
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN of the `EnabledControl` resource.
      required:
      - operationIdentifier
    EnabledBaselineBaselineIdentifiers:
      type: array
      items:
        $ref: '#/components/schemas/Arn'
    EnabledBaselineDetails:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN of the `EnabledBaseline` resource.
        baselineIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The specific `Baseline` enabled as part of the `EnabledBaseline`
            resource.
        baselineVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The enabled version of the `Baseline`.
        targetIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The target on which to enable the `Baseline`.
        parentIdentifier:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: An ARN that represents the parent `EnabledBaseline` at the
            Organizational Unit (OU) level, from which the child `EnabledBaseline`
            inherits its configuration. The value is returned by `GetEnabledBaseline`.
        statusSummary:
          $ref: '#/components/schemas/EnablementStatusSummary'
        parameters:
          allOf:
          - $ref: '#/components/schemas/EnabledBaselineParameterSummaries'
          description: Shows the parameters that are applied when enabling this `Baseline`.
      required:
      - arn
      - baselineIdentifier
      - targetIdentifier
      - statusSummary
      description: Details of the `EnabledBaseline` resource.
    EnabledBaselineFilter:
      type: object
      properties:
        targetIdentifiers:
          allOf:
          - $ref: '#/components/schemas/EnabledBaselineTargetIdentifiers'
          description: Identifiers for the targets of the `Baseline` filter operation.
        baselineIdentifiers:
          allOf:
          - $ref: '#/components/schemas/EnabledBaselineBaselineIdentifiers'
          description: Identifiers for the `Baseline` objects returned as part of
            the filter operation.
        parentIdentifiers:
          allOf:
          - $ref: '#/components/schemas/EnabledBaselineParentIdentifiers'
          description: An optional filter that sets up a list of `parentIdentifiers`
            to filter the results of the `ListEnabledBaseline` output.
      description: A filter applied on the `ListEnabledBaseline` operation. Allowed
        filters are `baselineIdentifiers` and `targetIdentifiers`. The filter can
        be applied for either, or both.
    EnabledBaselineParameter:
      type: object
      properties:
        key:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A string denoting the parameter key.
        value:
          allOf:
          - $ref: '#/components/schemas/EnabledBaselineParameterDocument'
          description: A low-level `Document` object of any type (for example, a Java
            Object).
      required:
      - key
      - value
      description: A key-value parameter to an `EnabledBaseline` resource.
    EnabledBaselineParameterDocument:
      type: object
      additionalProperties: true
    EnabledBaselineParameterSummaries:
      type: array
      items:
        $ref: '#/components/schemas/EnabledBaselineParameterSummary'
    EnabledBaselineParameterSummary:
      type: object
      properties:
        key:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A string denoting the parameter key.
        value:
          allOf:
          - $ref: '#/components/schemas/EnabledBaselineParameterDocument'
          description: A low-level document object of any type (for example, a Java
            Object).
      required:
      - key
      - value
      description: Summary of an applied parameter to an `EnabledBaseline` resource.
    EnabledBaselineParameters:
      type: array
      items:
        $ref: '#/components/schemas/EnabledBaselineParameter'
    EnabledBaselineParentIdentifiers:
      type: array
      items:
        $ref: '#/components/schemas/Arn'
    EnabledBaselineSummary:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN of the `EnabledBaseline` resource
        baselineIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The specific baseline that is enabled as part of the `EnabledBaseline`
            resource.
        baselineVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The enabled version of the baseline.
        targetIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The target upon which the baseline is enabled.
        parentIdentifier:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: An ARN that represents an object returned by `ListEnabledBaseline`,
            to describe an enabled baseline.
        statusSummary:
          $ref: '#/components/schemas/EnablementStatusSummary'
      required:
      - arn
      - baselineIdentifier
      - targetIdentifier
      - statusSummary
      description: Returns a summary of information about an `EnabledBaseline` object.
    EnabledBaselineTargetIdentifiers:
      type: array
      items:
        $ref: '#/components/schemas/Arn'
    EnabledBaselines:
      type: array
      items:
        $ref: '#/components/schemas/EnabledBaselineSummary'
    EnabledControlDetails:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN of the enabled control.
        controlIdentifier:
          allOf:
          - $ref: '#/components/schemas/ControlIdentifier'
          description: The control identifier of the enabled control. For information
            on how to find the `controlIdentifier`, see [the overview page](https://docs.aws.amazon.com/controltower/latest/APIReference/Welcome.html).
        targetIdentifier:
          allOf:
          - $ref: '#/components/schemas/TargetIdentifier'
          description: The ARN of the organizational unit. For information on how
            to find the `targetIdentifier`, see [the overview page](https://docs.aws.amazon.com/controltower/latest/APIReference/Welcome.html).
        targetRegions:
          allOf:
          - $ref: '#/components/schemas/TargetRegions'
          description: Target Amazon Web Services Regions for the enabled control.
        statusSummary:
          allOf:
          - $ref: '#/components/schemas/EnablementStatusSummary'
          description: The deployment summary of the enabled control.
        driftStatusSummary:
          allOf:
          - $ref: '#/components/schemas/DriftStatusSummary'
          description: The drift status of the enabled control.
        parameters:
          allOf:
          - $ref: '#/components/schemas/EnabledControlParameterSummaries'
          description: Array of `EnabledControlParameter` objects.
      description: Information about the enabled control.
    EnabledControlFilter:
      type: object
      properties:
        controlIdentifiers:
          allOf:
          - $ref: '#/components/schemas/ControlIdentifiers'
          description: The set of `controlIdentifier` returned by the filter.
        statuses:
          allOf:
          - $ref: '#/components/schemas/EnablementStatuses'
          description: A list of `EnablementStatus` items.
        driftStatuses:
          allOf:
          - $ref: '#/components/schemas/DriftStatuses'
          description: A list of `DriftStatus` items.
      description: A structure that returns a set of control identifiers, the control
        status for each control in the set, and the drift status for each control
        in the set.
    EnabledControlIdentifiers:
      type: array
      items:
        $ref: '#/components/schemas/Arn'
    EnabledControlParameter:
      type: object
      properties:
        key:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The key of a key/value pair.
        value:
          allOf:
          - $ref: '#/components/schemas/Document'
          description: The value of a key/value pair.
      required:
      - key
      - value
      description: A key/value pair, where `Key` is of type `String` and `Value` is
        of type `Document`.
    EnabledControlParameterSummaries:
      type: array
      items:
        $ref: '#/components/schemas/EnabledControlParameterSummary'
    EnabledControlParameterSummary:
      type: object
      properties:
        key:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The key of a key/value pair.
        value:
          allOf:
          - $ref: '#/components/schemas/Document'
          description: The value of a key/value pair.
      required:
      - key
      - value
      description: Returns a summary of information about the parameters of an enabled
        control.
    EnabledControlParameters:
      type: array
      items:
        $ref: '#/components/schemas/EnabledControlParameter'
    EnabledControlSummary:
      type: object
      properties:
        controlIdentifier:
          allOf:
          - $ref: '#/components/schemas/ControlIdentifier'
          description: The `controlIdentifier` of the enabled control.
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN of the enabled control.
        targetIdentifier:
          allOf:
          - $ref: '#/components/schemas/TargetIdentifier'
          description: The ARN of the organizational unit.
        statusSummary:
          allOf:
          - $ref: '#/components/schemas/EnablementStatusSummary'
          description: A short description of the status of the enabled control.
        driftStatusSummary:
          allOf:
          - $ref: '#/components/schemas/DriftStatusSummary'
          description: The drift status of the enabled control.
      description: Returns a summary of information about an enabled control.
    EnabledControls:
      type: array
      items:
        $ref: '#/components/schemas/EnabledControlSummary'
    EnablementStatus:
      type: string
      enum:
      - SUCCEEDED
      - FAILED
      - UNDER_CHANGE
    EnablementStatusSummary:
      type: object
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/EnablementStatus'
          description: "The deployment status of the enabled resource.\n\nValid values:\n\
            \n  * `SUCCEEDED`: The `EnabledControl` or `EnabledBaseline` configuration\
            \ was deployed successfully.\n\n  * `UNDER_CHANGE`: The `EnabledControl`\
            \ or `EnabledBaseline` configuration is changing. \n\n  * `FAILED`: The\
            \ `EnabledControl` or `EnabledBaseline` configuration failed to deploy."
        lastOperationIdentifier:
          allOf:
          - $ref: '#/components/schemas/OperationIdentifier'
          description: The last operation identifier for the enabled resource.
      description: The deployment summary of an `EnabledControl` or `EnabledBaseline`
        resource.
    EnablementStatuses:
      type: array
      items:
        $ref: '#/components/schemas/EnablementStatus'
    GetBaselineInput:
      type: object
      properties:
        baselineIdentifier:
          allOf:
          - $ref: '#/components/schemas/BaselineArn'
          description: The ARN of the `Baseline` resource to be retrieved.
      required:
      - baselineIdentifier
    GetBaselineOperationInput:
      type: object
      properties:
        operationIdentifier:
          allOf:
          - $ref: '#/components/schemas/OperationIdentifier'
          description: The operation ID returned from mutating asynchronous APIs (Enable,
            Disable, Update, Reset).
      required:
      - operationIdentifier
    GetBaselineOperationOutput:
      type: object
      properties:
        baselineOperation:
          allOf:
          - $ref: '#/components/schemas/BaselineOperation'
          description: A `baselineOperation` object that shows information about the
            specified operation ID.
      required:
      - baselineOperation
    GetBaselineOutput:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/BaselineArn'
          description: The baseline ARN.
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A user-friendly name for the baseline.
        description:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A description of the baseline.
      required:
      - arn
      - name
    GetControlOperationInput:
      type: object
      properties:
        operationIdentifier:
          allOf:
          - $ref: '#/components/schemas/OperationIdentifier'
          description: The ID of the asynchronous operation, which is used to track
            status. The operation is available for 90 days.
      required:
      - operationIdentifier
    GetControlOperationOutput:
      type: object
      properties:
        controlOperation:
          allOf:
          - $ref: '#/components/schemas/ControlOperation'
          description: An operation performed by the control.
      required:
      - controlOperation
    GetEnabledBaselineInput:
      type: object
      properties:
        enabledBaselineIdentifier:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: Identifier of the `EnabledBaseline` resource to be retrieved,
            in ARN format.
      required:
      - enabledBaselineIdentifier
    GetEnabledBaselineOutput:
      type: object
      properties:
        enabledBaselineDetails:
          allOf:
          - $ref: '#/components/schemas/EnabledBaselineDetails'
          description: Details of the `EnabledBaseline` resource.
    GetEnabledControlInput:
      type: object
      properties:
        enabledControlIdentifier:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The `controlIdentifier` of the enabled control.
      required:
      - enabledControlIdentifier
    GetEnabledControlOutput:
      type: object
      properties:
        enabledControlDetails:
          allOf:
          - $ref: '#/components/schemas/EnabledControlDetails'
          description: Information about the enabled control.
      required:
      - enabledControlDetails
    GetLandingZoneInput:
      type: object
      properties:
        landingZoneIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique identifier of the landing zone.
      required:
      - landingZoneIdentifier
    GetLandingZoneOperationInput:
      type: object
      properties:
        operationIdentifier:
          allOf:
          - $ref: '#/components/schemas/OperationIdentifier'
          description: A unique identifier assigned to a landing zone operation.
      required:
      - operationIdentifier
    GetLandingZoneOperationOutput:
      type: object
      properties:
        operationDetails:
          allOf:
          - $ref: '#/components/schemas/LandingZoneOperationDetail'
          description: Details about a landing zone operation.
      required:
      - operationDetails
    GetLandingZoneOutput:
      type: object
      properties:
        landingZone:
          allOf:
          - $ref: '#/components/schemas/LandingZoneDetail'
          description: Information about the landing zone.
      required:
      - landingZone
    InternalServerException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      required:
      - message
      description: An unexpected error occurred during processing of a request.
    LandingZoneDetail:
      type: object
      properties:
        version:
          allOf:
          - $ref: '#/components/schemas/LandingZoneVersion'
          description: The landing zone's current deployed version.
        manifest:
          allOf:
          - $ref: '#/components/schemas/Manifest'
          description: The landing zone manifest JSON text file that specifies the
            landing zone configurations.
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN of the landing zone.
        status:
          allOf:
          - $ref: '#/components/schemas/LandingZoneStatus'
          description: The landing zone deployment status. One of `ACTIVE`, `PROCESSING`,
            `FAILED`.
        latestAvailableVersion:
          allOf:
          - $ref: '#/components/schemas/LandingZoneVersion'
          description: The latest available version of the landing zone.
        driftStatus:
          allOf:
          - $ref: '#/components/schemas/LandingZoneDriftStatusSummary'
          description: The drift status of the landing zone.
      required:
      - version
      - manifest
      description: Information about the landing zone.
    LandingZoneDriftStatus:
      type: string
      enum:
      - DRIFTED
      - IN_SYNC
    LandingZoneDriftStatusSummary:
      type: object
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/LandingZoneDriftStatus'
          description: "The drift status of the landing zone.\n\nValid values:\n\n\
            \  * `DRIFTED`: The landing zone deployed in this configuration does not\
            \ match the configuration that Amazon Web Services Control Tower expected.\
            \ \n\n  * `IN_SYNC`: The landing zone deployed in this configuration matches\
            \ the configuration that Amazon Web Services Control Tower expected."
      description: 'The drift status summary of the landing zone.


        If the landing zone differs from the expected configuration, it is defined
        to be in a state of drift. You can repair this drift by resetting the landing
        zone.'
    LandingZoneOperationDetail:
      type: object
      properties:
        operationType:
          allOf:
          - $ref: '#/components/schemas/LandingZoneOperationType'
          description: "The landing zone operation type.\n\nValid values:\n\n  * `DELETE`:\
            \ The `DeleteLandingZone` operation. \n\n  * `CREATE`: The `CreateLandingZone`\
            \ operation. \n\n  * `UPDATE`: The `UpdateLandingZone` operation. \n\n\
            \  * `RESET`: The `ResetLandingZone` operation."
        operationIdentifier:
          allOf:
          - $ref: '#/components/schemas/OperationIdentifier'
          description: The `operationIdentifier` of the landing zone operation.
        status:
          allOf:
          - $ref: '#/components/schemas/LandingZoneOperationStatus'
          description: "Valid values:\n\n  * `SUCCEEDED`: The landing zone operation\
            \ succeeded. \n\n  * `IN_PROGRESS`: The landing zone operation is in progress.\
            \ \n\n  * `FAILED`: The landing zone operation failed."
        startTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The landing zone operation start time.
        endTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The landing zone operation end time.
        statusMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          description: If the operation result is FAILED, this string contains a message
            explaining why the operation failed.
      description: Information about a landing zone operation.
    LandingZoneOperationFilter:
      type: object
      properties:
        types:
          allOf:
          - $ref: '#/components/schemas/LandingZoneOperationTypes'
          description: The set of landing zone operation types selected by the filter.
        statuses:
          allOf:
          - $ref: '#/components/schemas/LandingZoneOperationStatuses'
          description: The statuses of the set of landing zone operations selected
            by the filter.
      description: A filter object that lets you call `ListLandingZoneOperations`
        with a specific filter.
    LandingZoneOperationStatus:
      type: string
      enum:
      - SUCCEEDED
      - FAILED
      - IN_PROGRESS
    LandingZoneOperationStatuses:
      type: array
      items:
        $ref: '#/components/schemas/LandingZoneOperationStatus'
    LandingZoneOperationSummary:
      type: object
      properties:
        operationType:
          allOf:
          - $ref: '#/components/schemas/LandingZoneOperationType'
          description: The type of the landing zone operation.
        operationIdentifier:
          allOf:
          - $ref: '#/components/schemas/OperationIdentifier'
          description: The `operationIdentifier` of the landing zone operation.
        status:
          allOf:
          - $ref: '#/components/schemas/LandingZoneOperationStatus'
          description: The status of the landing zone operation.
      description: Returns a summary of information about a landing zone operation.
    LandingZoneOperationType:
      type: string
      enum:
      - DELETE
      - CREATE
      - UPDATE
      - RESET
    LandingZoneOperationTypes:
      type: array
      items:
        $ref: '#/components/schemas/LandingZoneOperationType'
    LandingZoneOperations:
      type: array
      items:
        $ref: '#/components/schemas/LandingZoneOperationSummary'
    LandingZoneStatus:
      type: string
      enum:
      - ACTIVE
      - PROCESSING
      - FAILED
    LandingZoneSummaries:
      type: array
      items:
        $ref: '#/components/schemas/LandingZoneSummary'
    LandingZoneSummary:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN of the landing zone.
      description: Returns a summary of information about a landing zone.
    LandingZoneVersion:
      type: string
      pattern: ^\d+.\d+$
      minLength: 3
      maxLength: 10
    ListBaselinesInput:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A pagination token.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/ListBaselinesMaxResults'
          description: The maximum number of results to be shown.
    ListBaselinesMaxResults:
      type: integer
      minimum: 4
      maximum: 100
    ListBaselinesOutput:
      type: object
      properties:
        baselines:
          allOf:
          - $ref: '#/components/schemas/Baselines'
          description: A list of `Baseline` object details.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A pagination token.
      required:
      - baselines
    ListControlOperationsInput:
      type: object
      properties:
        filter:
          allOf:
          - $ref: '#/components/schemas/ControlOperationFilter'
          description: An input filter for the `ListControlOperations` API that lets
            you select the types of control operations to view.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/ListControlOperationsNextToken'
          description: A pagination token.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/ListControlOperationsMaxResults'
          description: The maximum number of results to be shown.
    ListControlOperationsMaxResults:
      type: integer
      minimum: 1
      maximum: 100
    ListControlOperationsNextToken:
      type: string
      pattern: \S+
    ListControlOperationsOutput:
      type: object
      properties:
        controlOperations:
          allOf:
          - $ref: '#/components/schemas/ControlOperations'
          description: Returns a list of output from control operations.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/ListControlOperationsNextToken'
          description: A pagination token.
      required:
      - controlOperations
    ListEnabledBaselinesInput:
      type: object
      properties:
        filter:
          allOf:
          - $ref: '#/components/schemas/EnabledBaselineFilter'
          description: A filter applied on the `ListEnabledBaseline` operation. Allowed
            filters are `baselineIdentifiers` and `targetIdentifiers`. The filter
            can be applied for either, or both.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/ListEnabledBaselinesNextToken'
          description: A pagination token.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/ListEnabledBaselinesMaxResults'
          description: The maximum number of results to be shown.
        includeChildren:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: A value that can be set to include the child enabled baselines
            in responses. The default value is false.
    ListEnabledBaselinesMaxResults:
      type: integer
      minimum: 5
      maximum: 100
    ListEnabledBaselinesNextToken:
      type: string
      pattern: \S+
    ListEnabledBaselinesOutput:
      type: object
      properties:
        enabledBaselines:
          allOf:
          - $ref: '#/components/schemas/EnabledBaselines'
          description: Retuens a list of summaries of `EnabledBaseline` resources.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/ListEnabledBaselinesNextToken'
          description: A pagination token.
      required:
      - enabledBaselines
    ListEnabledControlsInput:
      type: object
      properties:
        targetIdentifier:
          allOf:
          - $ref: '#/components/schemas/TargetIdentifier'
          description: The ARN of the organizational unit. For information on how
            to find the `targetIdentifier`, see [the overview page](https://docs.aws.amazon.com/controltower/latest/APIReference/Welcome.html).
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The token to continue the list from a previous API call with
            the same parameters.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: How many results to return per API call.
        filter:
          allOf:
          - $ref: '#/components/schemas/EnabledControlFilter'
          description: An input filter for the `ListEnabledControls` API that lets
            you select the types of control operations to view.
    ListEnabledControlsOutput:
      type: object
      properties:
        enabledControls:
          allOf:
          - $ref: '#/components/schemas/EnabledControls'
          description: Lists the controls enabled by Amazon Web Services Control Tower
            on the specified organizational unit and the accounts it contains.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Retrieves the next page of results. If the string is empty,
            the response is the end of the results.
      required:
      - enabledControls
    ListLandingZoneOperationsInput:
      type: object
      properties:
        filter:
          allOf:
          - $ref: '#/components/schemas/LandingZoneOperationFilter'
          description: An input filter for the `ListLandingZoneOperations` API that
            lets you select the types of landing zone operations to view.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The token to continue the list from a previous API call with
            the same parameters.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/ListLandingZoneOperationsMaxResults'
          description: How many results to return per API call.
    ListLandingZoneOperationsMaxResults:
      type: integer
      minimum: 1
      maximum: 100
    ListLandingZoneOperationsOutput:
      type: object
      properties:
        landingZoneOperations:
          allOf:
          - $ref: '#/components/schemas/LandingZoneOperations'
          description: Lists landing zone operations.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Retrieves the next page of results. If the string is empty,
            the response is the end of the results.
      required:
      - landingZoneOperations
    ListLandingZonesInput:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The token to continue the list from a previous API call with
            the same parameters.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/ListLandingZonesMaxResults'
          description: The maximum number of returned landing zone ARNs, which is
            one.
    ListLandingZonesMaxResults:
      type: integer
      minimum: 1
      maximum: 1
    ListLandingZonesOutput:
      type: object
      properties:
        landingZones:
          allOf:
          - $ref: '#/components/schemas/LandingZoneSummaries'
          description: The ARN of the landing zone.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Retrieves the next page of results. If the string is empty,
            the response is the end of the results.
      required:
      - landingZones
    ListTagsForResourceInput:
      type: object
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN of the resource.
      required:
      - resourceArn
    ListTagsForResourceOutput:
      type: object
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: A list of tags, as `key:value` strings.
      required:
      - tags
    Manifest:
      type: object
      additionalProperties: true
    MaxResults:
      type: integer
      minimum: 1
      maximum: 200
    OperationIdentifier:
      type: string
      pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
      minLength: 36
      maxLength: 36
    Region:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/RegionName'
          description: The Amazon Web Services Region name.
      description: 'An Amazon Web Services Region in which Amazon Web Services Control
        Tower expects to find the control deployed.


        The expected Regions are based on the Regions that are governed by the landing
        zone. In certain cases, a control is not actually enabled in the Region as
        expected, such as during drift, or [mixed governance](https://docs.aws.amazon.com/controltower/latest/userguide/region-how.html#mixed-governance).'
    RegionName:
      type: string
      minLength: 1
      maxLength: 50
    ResetEnabledBaselineInput:
      type: object
      properties:
        enabledBaselineIdentifier:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: Specifies the ID of the `EnabledBaseline` resource to be re-enabled,
            in ARN format.
      required:
      - enabledBaselineIdentifier
    ResetEnabledBaselineOutput:
      type: object
      properties:
        operationIdentifier:
          allOf:
          - $ref: '#/components/schemas/OperationIdentifier'
          description: The ID (in UUID format) of the asynchronous `ResetEnabledBaseline`
            operation. This `operationIdentifier` is used to track status through
            calls to the `GetBaselineOperation` API.
      required:
      - operationIdentifier
    ResetEnabledControlInput:
      type: object
      properties:
        enabledControlIdentifier:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN of the enabled control to be reset.
      required:
      - enabledControlIdentifier
    ResetEnabledControlOutput:
      type: object
      properties:
        operationIdentifier:
          allOf:
          - $ref: '#/components/schemas/OperationIdentifier'
          description: The operation identifier for this `ResetEnabledControl` operation.
      required:
      - operationIdentifier
    ResetLandingZoneInput:
      type: object
      properties:
        landingZoneIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique identifier of the landing zone.
      required:
      - landingZoneIdentifier
    ResetLandingZoneOutput:
      type: object
      properties:
        operationIdentifier:
          allOf:
          - $ref: '#/components/schemas/OperationIdentifier'
          description: A unique identifier assigned to a `ResetLandingZone` operation.
            You can use this identifier as an input parameter of `GetLandingZoneOperation`
            to check the operation's status.
      required:
      - operationIdentifier
    ResourceNotFoundException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      required:
      - message
      description: The request references a resource that does not exist.
    ServiceQuotaExceededException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      required:
      - message
      description: The request would cause a service quota to be exceeded. The limit
        is 10 concurrent operations.
    TagKey:
      type: string
      minLength: 1
      maxLength: 128
    TagKeys:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
    TagMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
    TagResourceInput:
      type: object
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN of the resource to be tagged.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: Tags to be applied to the resource.
      required:
      - resourceArn
      - tags
    TagResourceOutput:
      type: object
      properties: {}
    TagValue:
      type: string
      minLength: 0
      maxLength: 256
    TargetIdentifier:
      type: string
      pattern: ^arn:aws[0-9a-zA-Z_\-:\/]+$
      minLength: 20
      maxLength: 2048
    TargetIdentifiers:
      type: array
      items:
        $ref: '#/components/schemas/TargetIdentifier'
    TargetRegions:
      type: array
      items:
        $ref: '#/components/schemas/Region'
    ThrottlingException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
        serviceCode:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the service that is associated with the error.
        quotaCode:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the service quota that was exceeded.
        retryAfterSeconds:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of seconds the caller should wait before retrying.
      required:
      - message
      description: The request was denied due to request throttling.
    Timestamp:
      type: string
      format: date-time
    UntagResourceInput:
      type: object
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN of the resource.
        tagKeys:
          allOf:
          - $ref: '#/components/schemas/TagKeys'
          description: Tag keys to be removed from the resource.
      required:
      - resourceArn
      - tagKeys
    UntagResourceOutput:
      type: object
      properties: {}
    UpdateEnabledBaselineInput:
      type: object
      properties:
        baselineVersion:
          allOf:
          - $ref: '#/components/schemas/BaselineVersion'
          description: Specifies the new `Baseline` version, to which the `EnabledBaseline`
            should be updated.
        parameters:
          allOf:
          - $ref: '#/components/schemas/EnabledBaselineParameters'
          description: Parameters to apply when making an update.
        enabledBaselineIdentifier:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: Specifies the `EnabledBaseline` resource to be updated.
      required:
      - baselineVersion
      - enabledBaselineIdentifier
    UpdateEnabledBaselineOutput:
      type: object
      properties:
        operationIdentifier:
          allOf:
          - $ref: '#/components/schemas/OperationIdentifier'
          description: The ID (in UUID format) of the asynchronous `UpdateEnabledBaseline`
            operation. This `operationIdentifier` is used to track status through
            calls to the `GetBaselineOperation` API.
      required:
      - operationIdentifier
    UpdateEnabledControlInput:
      type: object
      properties:
        parameters:
          allOf:
          - $ref: '#/components/schemas/EnabledControlParameters'
          description: A key/value pair, where `Key` is of type `String` and `Value`
            is of type `Document`.
        enabledControlIdentifier:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN of the enabled control that will be updated.
      required:
      - parameters
      - enabledControlIdentifier
    UpdateEnabledControlOutput:
      type: object
      properties:
        operationIdentifier:
          allOf:
          - $ref: '#/components/schemas/OperationIdentifier'
          description: The operation identifier for this `UpdateEnabledControl` operation.
      required:
      - operationIdentifier
    UpdateLandingZoneInput:
      type: object
      properties:
        version:
          allOf:
          - $ref: '#/components/schemas/LandingZoneVersion'
          description: The landing zone version, for example, 3.2.
        manifest:
          allOf:
          - $ref: '#/components/schemas/Manifest'
          description: The manifest file (JSON) is a text file that describes your
            Amazon Web Services resources. For an example, review [Launch your landing
            zone](https://docs.aws.amazon.com/controltower/latest/userguide/lz-api-launch).
            The example manifest file contains each of the available parameters. The
            schema for the landing zone's JSON manifest file is not published, by
            design.
        landingZoneIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique identifier of the landing zone.
      required:
      - version
      - manifest
      - landingZoneIdentifier
    UpdateLandingZoneOutput:
      type: object
      properties:
        operationIdentifier:
          allOf:
          - $ref: '#/components/schemas/OperationIdentifier'
          description: A unique identifier assigned to a `UpdateLandingZone` operation.
            You can use this identifier as an input of `GetLandingZoneOperation` to
            check the operation's status.
      required:
      - operationIdentifier
    ValidationException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      required:
      - message
      description: The input does not satisfy the constraints specified by an Amazon
        Web Services service.
