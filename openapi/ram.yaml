openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: ram
  x-aws-serviceName: ram
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-07'
  version: '2018-01-04'
  title: AWS Resource Access Manager
  description: |-
    This is the _Resource Access Manager API Reference_. This documentation provides descriptions and syntax for each of the actions and data types in RAM. RAM is a service that helps you securely share your Amazon Web Services resources to other Amazon Web Services accounts. If you use Organizations to manage your accounts, then you can share your resources with your entire organization or to organizational units (OUs). For supported resource types, you can also share resources with individual Identity and Access Management (IAM) roles and users.

    To learn more about RAM, see the following resources:

      * [Resource Access Manager product page](http://aws.amazon.com/ram)

      * [Resource Access Manager User Guide](https://docs.aws.amazon.com/ram/latest/userguide/)
servers:
- description: The AWS Resource Access Manager regional endpoint
  url: https://ram.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths:
  /acceptresourceshareinvitation:
    post:
      operationId: AcceptResourceShareInvitation
      description: |-
        Accepts an invitation to a resource share from another Amazon Web Services account. After you accept the invitation, the resources included in the resource share are available to interact with in the relevant Amazon Web Services Management Consoles and tools.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resourceShareInvitationArn:
                  $ref: '#/components/schemas/String'
                clientToken:
                  $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '400':
          description: |-
            The operation failed because the specified invitation is past its expiration date and time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceShareInvitationExpiredException'
        '500':
          description: |-
            The operation failed because the service could not respond to the request due to an internal problem. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
        '503':
          description: |-
            The operation failed because the service isn't available. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /associateresourceshare:
    post:
      operationId: AssociateResourceShare
      description: |-
        Adds the specified list of principals and list of resources to a resource share. Principals that already have access to this resource share immediately receive access to the added resources. Newly added principals immediately receive access to the resources shared in this resource share.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resourceShareArn:
                  $ref: '#/components/schemas/String'
                resourceArns:
                  $ref: '#/components/schemas/ResourceArnList'
                principals:
                  $ref: '#/components/schemas/PrincipalArnOrIdList'
                clientToken:
                  $ref: '#/components/schemas/String'
                sources:
                  $ref: '#/components/schemas/SourceArnOrAccountList'
      responses:
        '200': {}
        '400':
          description: |-
            The operation failed because a specified resource couldn't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnknownResourceException'
        '500':
          description: |-
            The operation failed because the service could not respond to the request due to an internal problem. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
        '503':
          description: |-
            The operation failed because the service isn't available. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The operation failed because it exceeded the rate at which you are allowed to perform this operation. Please try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /associateresourcesharepermission:
    post:
      operationId: AssociateResourceSharePermission
      description: |-
        Adds or replaces the RAM permission for a resource type included in a resource share. You can have exactly one permission associated with each resource type in the resource share. You can add a new RAM permission only if there are currently no resources of that resource type currently in the resource share.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resourceShareArn:
                  $ref: '#/components/schemas/String'
                permissionArn:
                  $ref: '#/components/schemas/String'
                replace:
                  $ref: '#/components/schemas/Boolean'
                clientToken:
                  $ref: '#/components/schemas/String'
                permissionVersion:
                  $ref: '#/components/schemas/Integer'
      responses:
        '200': {}
        '400':
          description: |-
            The operation failed because a specified resource couldn't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnknownResourceException'
        '500':
          description: |-
            The operation failed because the service could not respond to the request due to an internal problem. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
        '503':
          description: |-
            The operation failed because the service isn't available. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /createpermission:
    post:
      operationId: CreatePermission
      description: |-
        Creates a customer managed permission for a specified resource type that you can attach to resource shares. It is created in the Amazon Web Services Region in which you call the operation.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  $ref: '#/components/schemas/PermissionName'
                resourceType:
                  $ref: '#/components/schemas/String'
                policyTemplate:
                  $ref: '#/components/schemas/Policy'
                clientToken:
                  $ref: '#/components/schemas/String'
                tags:
                  $ref: '#/components/schemas/TagList'
      responses:
        '200': {}
        '400':
          description: |-
            The operation failed because it would exceed the maximum number of permissions you can create in each Amazon Web Services Region. To view the limits for your Amazon Web Services account, see the [RAM page in the Service Quotas console](https://console.aws.amazon.com/servicequotas/home/services/ram/quotas).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionLimitExceededException'
        '409':
          description: |-
            The operation failed because a permission with the specified name already exists in the requested Amazon Web Services Region. Choose a different name.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionAlreadyExistsException'
        '500':
          description: |-
            The operation failed because the service could not respond to the request due to an internal problem. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
        '503':
          description: |-
            The operation failed because the service isn't available. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /createpermissionversion:
    post:
      operationId: CreatePermissionVersion
      description: |-
        Creates a new version of the specified customer managed permission. The new version is automatically set as the default version of the customer managed permission. New resource shares automatically use the default permission. Existing resource shares continue to use their original permission versions, but you can use ReplacePermissionAssociations to update them.

        If the specified customer managed permission already has the maximum of 5 versions, then you must delete one of the existing versions before you can create a new one.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                permissionArn:
                  $ref: '#/components/schemas/String'
                policyTemplate:
                  $ref: '#/components/schemas/Policy'
                clientToken:
                  $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '400':
          description: |-
            The operation failed because a specified resource couldn't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnknownResourceException'
        '500':
          description: |-
            The operation failed because the service could not respond to the request due to an internal problem. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
        '503':
          description: |-
            The operation failed because the service isn't available. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /createresourceshare:
    post:
      operationId: CreateResourceShare
      description: |-
        Creates a resource share. You can provide a list of the [Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html) for the resources that you want to share, a list of principals you want to share the resources with, and the permissions to grant those principals.

        Sharing a resource makes it available for use by principals outside of the Amazon Web Services account that created the resource. Sharing doesn't change any permissions or quotas that apply to the resource in the account that created it.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  $ref: '#/components/schemas/String'
                resourceArns:
                  $ref: '#/components/schemas/ResourceArnList'
                principals:
                  $ref: '#/components/schemas/PrincipalArnOrIdList'
                tags:
                  $ref: '#/components/schemas/TagList'
                allowExternalPrincipals:
                  $ref: '#/components/schemas/Boolean'
                clientToken:
                  $ref: '#/components/schemas/String'
                permissionArns:
                  $ref: '#/components/schemas/PermissionArnList'
                sources:
                  $ref: '#/components/schemas/SourceArnOrAccountList'
      responses:
        '200': {}
        '400':
          description: |-
            The operation failed because a specified resource couldn't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnknownResourceException'
        '500':
          description: |-
            The operation failed because the service could not respond to the request due to an internal problem. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
        '503':
          description: |-
            The operation failed because the service isn't available. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /deletepermission:
    delete:
      operationId: DeletePermission
      description: |-
        Deletes the specified customer managed permission in the Amazon Web Services Region in which you call this operation. You can delete a customer managed permission only if it isn't attached to any resource share. The operation deletes all versions associated with the customer managed permission.
      parameters:
      - name: permissionArn
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: clientToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '400':
          description: |-
            The operation failed because a specified resource couldn't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnknownResourceException'
        '500':
          description: |-
            The operation failed because the service could not respond to the request due to an internal problem. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
        '503':
          description: |-
            The operation failed because the service isn't available. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /deletepermissionversion:
    delete:
      operationId: DeletePermissionVersion
      description: |-
        Deletes one version of a customer managed permission. The version you specify must not be attached to any resource share and must not be the default version for the permission.

        If a customer managed permission has the maximum of 5 versions, then you must delete at least one version before you can create another.
      parameters:
      - name: permissionArn
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: permissionVersion
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Integer'
      - name: clientToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '400':
          description: |-
            The operation failed because a specified resource couldn't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnknownResourceException'
        '500':
          description: |-
            The operation failed because the service could not respond to the request due to an internal problem. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
        '503':
          description: |-
            The operation failed because the service isn't available. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /deleteresourceshare:
    delete:
      operationId: DeleteResourceShare
      description: |-
        Deletes the specified resource share.

        This doesn't delete any of the resources that were associated with the resource share; it only stops the sharing of those resources through this resource share.
      parameters:
      - name: resourceShareArn
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: clientToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '400':
          description: |-
            The operation failed because a specified resource couldn't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnknownResourceException'
        '500':
          description: |-
            The operation failed because the service could not respond to the request due to an internal problem. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
        '503':
          description: |-
            The operation failed because the service isn't available. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /disassociateresourceshare:
    post:
      operationId: DisassociateResourceShare
      description: |-
        Removes the specified principals or resources from participating in the specified resource share.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resourceShareArn:
                  $ref: '#/components/schemas/String'
                resourceArns:
                  $ref: '#/components/schemas/ResourceArnList'
                principals:
                  $ref: '#/components/schemas/PrincipalArnOrIdList'
                clientToken:
                  $ref: '#/components/schemas/String'
                sources:
                  $ref: '#/components/schemas/SourceArnOrAccountList'
      responses:
        '200': {}
        '400':
          description: |-
            The operation failed because a specified resource couldn't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnknownResourceException'
        '500':
          description: |-
            The operation failed because the service could not respond to the request due to an internal problem. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
        '503':
          description: |-
            The operation failed because the service isn't available. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /disassociateresourcesharepermission:
    post:
      operationId: DisassociateResourceSharePermission
      description: |-
        Removes a managed permission from a resource share. Permission changes take effect immediately. You can remove a managed permission from a resource share only if there are currently no resources of the relevant resource type currently attached to the resource share.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resourceShareArn:
                  $ref: '#/components/schemas/String'
                permissionArn:
                  $ref: '#/components/schemas/String'
                clientToken:
                  $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '400':
          description: |-
            The operation failed because a specified resource couldn't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnknownResourceException'
        '500':
          description: |-
            The operation failed because the service could not respond to the request due to an internal problem. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
        '503':
          description: |-
            The operation failed because the service isn't available. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /enablesharingwithawsorganization:
    post:
      operationId: EnableSharingWithAwsOrganization
      description: |-
        Enables resource sharing within your organization in Organizations. This operation creates a service-linked role called `AWSServiceRoleForResourceAccessManager` that has the IAM managed policy named AWSResourceAccessManagerServiceRolePolicy attached. This role permits RAM to retrieve information about the organization and its structure. This lets you share resources with all of the accounts in the calling account's organization by specifying the organization ID, or all of the accounts in an organizational unit (OU) by specifying the OU ID. Until you enable sharing within the organization, you can specify only individual Amazon Web Services accounts, or for supported resource types, IAM roles and users.

        You must call this operation from an IAM role or user in the organization's management account.
      parameters: []
      responses:
        '200': {}
        '400':
          description: |-
            The operation failed because the requested operation isn't permitted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
        '500':
          description: |-
            The operation failed because the service could not respond to the request due to an internal problem. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
        '503':
          description: |-
            The operation failed because the service isn't available. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /getpermission:
    post:
      operationId: GetPermission
      description: |-
        Retrieves the contents of a managed permission in JSON format.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                permissionArn:
                  $ref: '#/components/schemas/String'
                permissionVersion:
                  $ref: '#/components/schemas/Integer'
      responses:
        '200': {}
        '400':
          description: |-
            The operation failed because a specified resource couldn't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnknownResourceException'
        '500':
          description: |-
            The operation failed because the service could not respond to the request due to an internal problem. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
        '503':
          description: |-
            The operation failed because the service isn't available. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /getresourcepolicies:
    post:
      operationId: GetResourcePolicies
      description: |-
        Retrieves the resource policies for the specified resources that you own and have shared.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resourceArns:
                  $ref: '#/components/schemas/ResourceArnList'
                principal:
                  $ref: '#/components/schemas/String'
                nextToken:
                  $ref: '#/components/schemas/String'
                maxResults:
                  $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '400':
          description: |-
            The operation failed because the specified [Amazon Resource Name (ARN)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html) was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceArnNotFoundException'
        '500':
          description: |-
            The operation failed because the service could not respond to the request due to an internal problem. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
        '503':
          description: |-
            The operation failed because the service isn't available. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /getresourceshareassociations:
    post:
      operationId: GetResourceShareAssociations
      description: |-
        Retrieves the lists of resources and principals that associated for resource shares that you own.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                associationType:
                  $ref: '#/components/schemas/ResourceShareAssociationType'
                resourceShareArns:
                  $ref: '#/components/schemas/ResourceShareArnList'
                resourceArn:
                  $ref: '#/components/schemas/String'
                principal:
                  $ref: '#/components/schemas/String'
                associationStatus:
                  $ref: '#/components/schemas/ResourceShareAssociationStatus'
                nextToken:
                  $ref: '#/components/schemas/String'
                maxResults:
                  $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '400':
          description: |-
            The operation failed because a specified resource couldn't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnknownResourceException'
        '500':
          description: |-
            The operation failed because the service could not respond to the request due to an internal problem. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
        '503':
          description: |-
            The operation failed because the service isn't available. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /getresourceshareinvitations:
    post:
      operationId: GetResourceShareInvitations
      description: |-
        Retrieves details about invitations that you have received for resource shares.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resourceShareInvitationArns:
                  $ref: '#/components/schemas/ResourceShareInvitationArnList'
                resourceShareArns:
                  $ref: '#/components/schemas/ResourceShareArnList'
                nextToken:
                  $ref: '#/components/schemas/String'
                maxResults:
                  $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '400':
          description: |-
            The operation failed because a specified resource couldn't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnknownResourceException'
        '500':
          description: |-
            The operation failed because the service could not respond to the request due to an internal problem. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
        '503':
          description: |-
            The operation failed because the service isn't available. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /getresourceshares:
    post:
      operationId: GetResourceShares
      description: |-
        Retrieves details about the resource shares that you own or that are shared with you.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resourceShareArns:
                  $ref: '#/components/schemas/ResourceShareArnList'
                resourceShareStatus:
                  $ref: '#/components/schemas/ResourceShareStatus'
                resourceOwner:
                  $ref: '#/components/schemas/ResourceOwner'
                name:
                  $ref: '#/components/schemas/String'
                tagFilters:
                  $ref: '#/components/schemas/TagFilters'
                nextToken:
                  $ref: '#/components/schemas/String'
                maxResults:
                  $ref: '#/components/schemas/MaxResults'
                permissionArn:
                  $ref: '#/components/schemas/String'
                permissionVersion:
                  $ref: '#/components/schemas/Integer'
      responses:
        '200': {}
        '400':
          description: |-
            The operation failed because a specified resource couldn't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnknownResourceException'
        '500':
          description: |-
            The operation failed because the service could not respond to the request due to an internal problem. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
        '503':
          description: |-
            The operation failed because the service isn't available. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /listpendinginvitationresources:
    post:
      operationId: ListPendingInvitationResources
      description: |-
        Lists the resources in a resource share that is shared with you but for which the invitation is still `PENDING`. That means that you haven't accepted or rejected the invitation and the invitation hasn't expired.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resourceShareInvitationArn:
                  $ref: '#/components/schemas/String'
                nextToken:
                  $ref: '#/components/schemas/String'
                maxResults:
                  $ref: '#/components/schemas/MaxResults'
                resourceRegionScope:
                  $ref: '#/components/schemas/ResourceRegionScopeFilter'
      responses:
        '200': {}
        '400':
          description: |-
            The operation failed because the specified invitation is past its expiration date and time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceShareInvitationExpiredException'
        '500':
          description: |-
            The operation failed because the service could not respond to the request due to an internal problem. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
        '503':
          description: |-
            The operation failed because the service isn't available. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /listpermissionassociations:
    post:
      operationId: ListPermissionAssociations
      description: |-
        Lists information about the managed permission and its associations to any resource shares that use this managed permission. This lets you see which resource shares use which versions of the specified managed permission.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                permissionArn:
                  $ref: '#/components/schemas/String'
                permissionVersion:
                  $ref: '#/components/schemas/Integer'
                associationStatus:
                  $ref: '#/components/schemas/ResourceShareAssociationStatus'
                resourceType:
                  $ref: '#/components/schemas/String'
                featureSet:
                  $ref: '#/components/schemas/PermissionFeatureSet'
                defaultVersion:
                  $ref: '#/components/schemas/Boolean'
                nextToken:
                  $ref: '#/components/schemas/String'
                maxResults:
                  $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '400':
          description: |-
            The operation failed because the specified [Amazon Resource Name (ARN)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html) has a format that isn't valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedArnException'
        '500':
          description: |-
            The operation failed because the service could not respond to the request due to an internal problem. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
        '503':
          description: |-
            The operation failed because the service isn't available. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /listpermissionversions:
    post:
      operationId: ListPermissionVersions
      description: |-
        Lists the available versions of the specified RAM permission.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                permissionArn:
                  $ref: '#/components/schemas/String'
                nextToken:
                  $ref: '#/components/schemas/String'
                maxResults:
                  $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '400':
          description: |-
            The operation failed because a specified resource couldn't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnknownResourceException'
        '500':
          description: |-
            The operation failed because the service could not respond to the request due to an internal problem. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
        '503':
          description: |-
            The operation failed because the service isn't available. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /listpermissions:
    post:
      operationId: ListPermissions
      description: |-
        Retrieves a list of available RAM permissions that you can use for the supported resource types.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resourceType:
                  $ref: '#/components/schemas/String'
                nextToken:
                  $ref: '#/components/schemas/String'
                maxResults:
                  $ref: '#/components/schemas/MaxResults'
                permissionType:
                  $ref: '#/components/schemas/PermissionTypeFilter'
      responses:
        '200': {}
        '400':
          description: |-
            The operation failed because the requested operation isn't permitted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationNotPermittedException'
        '500':
          description: |-
            The operation failed because the service could not respond to the request due to an internal problem. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
        '503':
          description: |-
            The operation failed because the service isn't available. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /listprincipals:
    post:
      operationId: ListPrincipals
      description: |-
        Lists the principals that you are sharing resources with or that are sharing resources with you.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resourceOwner:
                  $ref: '#/components/schemas/ResourceOwner'
                resourceArn:
                  $ref: '#/components/schemas/String'
                principals:
                  $ref: '#/components/schemas/PrincipalArnOrIdList'
                resourceType:
                  $ref: '#/components/schemas/String'
                resourceShareArns:
                  $ref: '#/components/schemas/ResourceShareArnList'
                nextToken:
                  $ref: '#/components/schemas/String'
                maxResults:
                  $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '400':
          description: |-
            The operation failed because a specified resource couldn't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnknownResourceException'
        '500':
          description: |-
            The operation failed because the service could not respond to the request due to an internal problem. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
        '503':
          description: |-
            The operation failed because the service isn't available. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /listreplacepermissionassociationswork:
    post:
      operationId: ListReplacePermissionAssociationsWork
      description: |-
        Retrieves the current status of the asynchronous tasks performed by RAM when you perform the ReplacePermissionAssociationsWork operation.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                workIds:
                  $ref: '#/components/schemas/ReplacePermissionAssociationsWorkIdList'
                status:
                  $ref: '#/components/schemas/ReplacePermissionAssociationsWorkStatus'
                nextToken:
                  $ref: '#/components/schemas/String'
                maxResults:
                  $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '400':
          description: |-
            The operation failed because a parameter you specified isn't valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '500':
          description: |-
            The operation failed because the service could not respond to the request due to an internal problem. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
        '503':
          description: |-
            The operation failed because the service isn't available. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /listresourcesharepermissions:
    post:
      operationId: ListResourceSharePermissions
      description: |-
        Lists the RAM permissions that are associated with a resource share.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resourceShareArn:
                  $ref: '#/components/schemas/String'
                nextToken:
                  $ref: '#/components/schemas/String'
                maxResults:
                  $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '400':
          description: |-
            The operation failed because a specified resource couldn't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnknownResourceException'
        '500':
          description: |-
            The operation failed because the service could not respond to the request due to an internal problem. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
        '503':
          description: |-
            The operation failed because the service isn't available. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /listresourcetypes:
    post:
      operationId: ListResourceTypes
      description: |-
        Lists the resource types that can be shared by RAM.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nextToken:
                  $ref: '#/components/schemas/String'
                maxResults:
                  $ref: '#/components/schemas/MaxResults'
                resourceRegionScope:
                  $ref: '#/components/schemas/ResourceRegionScopeFilter'
      responses:
        '200': {}
        '400':
          description: |-
            The operation failed because a parameter you specified isn't valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '500':
          description: |-
            The operation failed because the service could not respond to the request due to an internal problem. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
        '503':
          description: |-
            The operation failed because the service isn't available. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /listresources:
    post:
      operationId: ListResources
      description: |-
        Lists the resources that you added to a resource share or the resources that are shared with you.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resourceOwner:
                  $ref: '#/components/schemas/ResourceOwner'
                principal:
                  $ref: '#/components/schemas/String'
                resourceType:
                  $ref: '#/components/schemas/String'
                resourceArns:
                  $ref: '#/components/schemas/ResourceArnList'
                resourceShareArns:
                  $ref: '#/components/schemas/ResourceShareArnList'
                nextToken:
                  $ref: '#/components/schemas/String'
                maxResults:
                  $ref: '#/components/schemas/MaxResults'
                resourceRegionScope:
                  $ref: '#/components/schemas/ResourceRegionScopeFilter'
      responses:
        '200': {}
        '400':
          description: |-
            The operation failed because a specified resource couldn't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnknownResourceException'
        '500':
          description: |-
            The operation failed because the service could not respond to the request due to an internal problem. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
        '503':
          description: |-
            The operation failed because the service isn't available. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /promotepermissioncreatedfrompolicy:
    post:
      operationId: PromotePermissionCreatedFromPolicy
      description: |-
        When you attach a resource-based policy to a resource, RAM automatically creates a resource share of `featureSet`=`CREATED_FROM_POLICY` with a managed permission that has the same IAM permissions as the original resource-based policy. However, this type of managed permission is visible to only the resource share owner, and the associated resource share can't be modified by using RAM.

        This operation creates a separate, fully manageable customer managed permission that has the same IAM permissions as the original resource-based policy. You can associate this customer managed permission to any resource shares.

        Before you use PromoteResourceShareCreatedFromPolicy, you should first run this operation to ensure that you have an appropriate customer managed permission that can be associated with the promoted resource share.

          * The original `CREATED_FROM_POLICY` policy isn't deleted, and resource shares using that original policy aren't automatically updated.

          * You can't modify a `CREATED_FROM_POLICY` resource share so you can't associate the new customer managed permission by using `ReplacePermsissionAssociations`. However, if you use PromoteResourceShareCreatedFromPolicy, that operation automatically associates the fully manageable customer managed permission to the newly promoted `STANDARD` resource share.

          * After you promote a resource share, if the original `CREATED_FROM_POLICY` managed permission has no other associations to A resource share, then RAM automatically deletes it.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                permissionArn:
                  $ref: '#/components/schemas/String'
                name:
                  $ref: '#/components/schemas/String'
                clientToken:
                  $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '400':
          description: |-
            The operation failed because a specified resource couldn't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnknownResourceException'
        '500':
          description: |-
            The operation failed because the service could not respond to the request due to an internal problem. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
        '503':
          description: |-
            The operation failed because the service isn't available. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /promoteresourcesharecreatedfrompolicy:
    post:
      operationId: PromoteResourceShareCreatedFromPolicy
      description: |-
        When you attach a resource-based policy to a resource, RAM automatically creates a resource share of `featureSet`=`CREATED_FROM_POLICY` with a managed permission that has the same IAM permissions as the original resource-based policy. However, this type of managed permission is visible to only the resource share owner, and the associated resource share can't be modified by using RAM.

        This operation promotes the resource share to a `STANDARD` resource share that is fully manageable in RAM. When you promote a resource share, you can then manage the resource share in RAM and it becomes visible to all of the principals you shared it with.

        Before you perform this operation, you should first run PromotePermissionCreatedFromPolicyto ensure that you have an appropriate customer managed permission that can be associated with this resource share after its is promoted. If this operation can't find a managed permission that exactly matches the existing `CREATED_FROM_POLICY` permission, then this operation fails.
      parameters:
      - name: resourceShareArn
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '400':
          description: |-
            There isn't an existing managed permission defined in RAM that has the same IAM permissions as the resource-based policy attached to the resource. You should first run PromotePermissionCreatedFromPolicy to create that managed permission.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnmatchedPolicyPermissionException'
        '500':
          description: |-
            The operation failed because the service could not respond to the request due to an internal problem. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
        '503':
          description: |-
            The operation failed because the service isn't available. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /rejectresourceshareinvitation:
    post:
      operationId: RejectResourceShareInvitation
      description: |-
        Rejects an invitation to a resource share from another Amazon Web Services account.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resourceShareInvitationArn:
                  $ref: '#/components/schemas/String'
                clientToken:
                  $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '400':
          description: |-
            The operation failed because the specified invitation is past its expiration date and time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceShareInvitationExpiredException'
        '500':
          description: |-
            The operation failed because the service could not respond to the request due to an internal problem. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
        '503':
          description: |-
            The operation failed because the service isn't available. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /replacepermissionassociations:
    post:
      operationId: ReplacePermissionAssociations
      description: |-
        Updates all resource shares that use a managed permission to a different managed permission. This operation always applies the default version of the target managed permission. You can optionally specify that the update applies to only resource shares that currently use a specified version. This enables you to update to the latest version, without changing the which managed permission is used.

        You can use this operation to update all of your resource shares to use the current default version of the permission by specifying the same value for the `fromPermissionArn` and `toPermissionArn` parameters.

        You can use the optional `fromPermissionVersion` parameter to update only those resources that use a specified version of the managed permission to the new managed permission.

        To successfully perform this operation, you must have permission to update the resource-based policy on all affected resource types.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fromPermissionArn:
                  $ref: '#/components/schemas/String'
                fromPermissionVersion:
                  $ref: '#/components/schemas/Integer'
                toPermissionArn:
                  $ref: '#/components/schemas/String'
                clientToken:
                  $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '400':
          description: |-
            The operation failed because a specified resource couldn't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnknownResourceException'
        '500':
          description: |-
            The operation failed because the service could not respond to the request due to an internal problem. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
        '503':
          description: |-
            The operation failed because the service isn't available. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /setdefaultpermissionversion:
    post:
      operationId: SetDefaultPermissionVersion
      description: |-
        Designates the specified version number as the default version for the specified customer managed permission. New resource shares automatically use this new default permission. Existing resource shares continue to use their original permission version, but you can use ReplacePermissionAssociations to update them.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                permissionArn:
                  $ref: '#/components/schemas/String'
                permissionVersion:
                  $ref: '#/components/schemas/Integer'
                clientToken:
                  $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '400':
          description: |-
            The operation failed because a specified resource couldn't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnknownResourceException'
        '500':
          description: |-
            The operation failed because the service could not respond to the request due to an internal problem. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
        '503':
          description: |-
            The operation failed because the service isn't available. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /tagresource:
    post:
      operationId: TagResource
      description: |-
        Adds the specified tag keys and values to a resource share or managed permission. If you choose a resource share, the tags are attached to only the resource share, not to the resources that are in the resource share.

        The tags on a managed permission are the same for all versions of the managed permission.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resourceShareArn:
                  $ref: '#/components/schemas/String'
                tags:
                  $ref: '#/components/schemas/TagList'
                resourceArn:
                  $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '400':
          description: |-
            The operation failed because a specified resource couldn't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnknownResourceException'
        '500':
          description: |-
            The operation failed because the service could not respond to the request due to an internal problem. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
        '503':
          description: |-
            The operation failed because the service isn't available. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /untagresource:
    post:
      operationId: UntagResource
      description: |-
        Removes the specified tag key and value pairs from the specified resource share or managed permission.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resourceShareArn:
                  $ref: '#/components/schemas/String'
                tagKeys:
                  $ref: '#/components/schemas/TagKeyList'
                resourceArn:
                  $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '400':
          description: |-
            The operation failed because a specified resource couldn't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnknownResourceException'
        '500':
          description: |-
            The operation failed because the service could not respond to the request due to an internal problem. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
        '503':
          description: |-
            The operation failed because the service isn't available. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /updateresourceshare:
    post:
      operationId: UpdateResourceShare
      description: |-
        Modifies some of the properties of the specified resource share.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resourceShareArn:
                  $ref: '#/components/schemas/String'
                name:
                  $ref: '#/components/schemas/String'
                allowExternalPrincipals:
                  $ref: '#/components/schemas/Boolean'
                clientToken:
                  $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '400':
          description: |-
            The operation failed because a specified resource couldn't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnknownResourceException'
        '500':
          description: |-
            The operation failed because the service could not respond to the request due to an internal problem. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInternalException'
        '503':
          description: |-
            The operation failed because the service isn't available. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
components:
  schemas:
    AcceptResourceShareInvitationRequest:
      type: object
      properties:
        resourceShareInvitationArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The [Amazon Resource Name (ARN)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            of the invitation that you want to accept.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'Specifies a unique, case-sensitive identifier that you provide
            to ensure the idempotency of the request. This lets you safely retry the
            request without accidentally performing the same operation a second time.
            Passing the same value to a later call to an operation requires that you
            also pass the same value for all other parameters. We recommend that you
            use a [UUID type of value.](https://wikipedia.org/wiki/Universally_unique_identifier).


            If you don''t provide this value, then Amazon Web Services generates a
            random one for you.


            If you retry the operation with the same `ClientToken`, but with different
            parameters, the retry fails with an `IdempotentParameterMismatch` error.'
      required:
      - resourceShareInvitationArn
    AcceptResourceShareInvitationResponse:
      type: object
      properties:
        resourceShareInvitation:
          allOf:
          - $ref: '#/components/schemas/ResourceShareInvitation'
          description: An object that contains information about the specified invitation.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The idempotency identifier associated with this request. If
            you want to repeat the same operation in an idempotent manner then you
            must include this value in the `clientToken` request parameter of that
            later call. All other parameters must also have the same values that you
            used in the first call.
    AssociateResourceSharePermissionRequest:
      type: object
      properties:
        resourceShareArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Specifies the [Amazon Resource Name (ARN)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            of the resource share to which you want to add or replace permissions.
        permissionArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Specifies the [Amazon Resource Name (ARN)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            of the RAM permission to associate with the resource share. To find the
            ARN for a permission, use either the ListPermissions operation or go to
            the [Permissions library](https://console.aws.amazon.com/ram/home#Permissions:)
            page in the RAM console and then choose the name of the permission. The
            ARN is displayed on the detail page.
        replace:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: 'Specifies whether the specified permission should replace
            the existing permission associated with the resource share. Use `true`
            to replace the current permissions. Use `false` to add the permission
            to a resource share that currently doesn''t have a permission. The default
            value is `false`.


            A resource share can have only one permission per resource type. If a
            resource share already has a permission for the specified resource type
            and you don''t set `replace` to `true` then the operation returns an error.
            This helps prevent accidental overwriting of a permission.'
        clientToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'Specifies a unique, case-sensitive identifier that you provide
            to ensure the idempotency of the request. This lets you safely retry the
            request without accidentally performing the same operation a second time.
            Passing the same value to a later call to an operation requires that you
            also pass the same value for all other parameters. We recommend that you
            use a [UUID type of value.](https://wikipedia.org/wiki/Universally_unique_identifier).


            If you don''t provide this value, then Amazon Web Services generates a
            random one for you.


            If you retry the operation with the same `ClientToken`, but with different
            parameters, the retry fails with an `IdempotentParameterMismatch` error.'
        permissionVersion:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: 'Specifies the version of the RAM permission to associate with
            the resource share. You can specify _only_ the version that is currently
            set as the default version for the permission. If you also set the `replace`
            pararameter to `true`, then this operation updates an outdated version
            of the permission to the current default version.


            You don''t need to specify this parameter because the default behavior
            is to use the version that is currently set as the default version for
            the permission. This parameter is supported for backwards compatibility.'
      required:
      - resourceShareArn
      - permissionArn
    AssociateResourceSharePermissionResponse:
      type: object
      properties:
        returnValue:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: A return value of `true` indicates that the request succeeded.
            A value of `false` indicates that the request failed.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The idempotency identifier associated with this request. If
            you want to repeat the same operation in an idempotent manner then you
            must include this value in the `clientToken` request parameter of that
            later call. All other parameters must also have the same values that you
            used in the first call.
    AssociateResourceShareRequest:
      type: object
      properties:
        resourceShareArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Specifies the [Amazon Resource Name (ARN)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            of the resource share that you want to add principals or resources to.
        resourceArns:
          allOf:
          - $ref: '#/components/schemas/ResourceArnList'
          description: Specifies a list of [Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            of the resources that you want to share. This can be `null` if you want
            to add only principals.
        principals:
          allOf:
          - $ref: '#/components/schemas/PrincipalArnOrIdList'
          description: "Specifies a list of principals to whom you want to the resource\
            \ share. This can be `null` if you want to add only resources.\n\nWhat\
            \ the principals can do with the resources in the share is determined\
            \ by the RAM permissions that you associate with the resource share. See\
            \ AssociateResourceSharePermission.\n\nYou can include the following values:\n\
            \n  * An Amazon Web Services account ID, for example: `123456789012`\n\
            \n  * An [Amazon Resource Name (ARN)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)\
            \ of an organization in Organizations, for example: `organizations::123456789012:organization/o-exampleorgid`\n\
            \n  * An ARN of an organizational unit (OU) in Organizations, for example:\
            \ `organizations::123456789012:ou/o-exampleorgid/ou-examplerootid-exampleouid123`\n\
            \n  * An ARN of an IAM role, for example: `iam::123456789012:role/rolename`\n\
            \n  * An ARN of an IAM user, for example: `iam::123456789012user/username`\n\
            \nNot all resource types can be shared with IAM roles and users. For more\
            \ information, see [Sharing with IAM roles and users](https://docs.aws.amazon.com/ram/latest/userguide/permissions.html#permissions-rbp-supported-resource-types)\
            \ in the _Resource Access Manager User Guide_."
        clientToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'Specifies a unique, case-sensitive identifier that you provide
            to ensure the idempotency of the request. This lets you safely retry the
            request without accidentally performing the same operation a second time.
            Passing the same value to a later call to an operation requires that you
            also pass the same value for all other parameters. We recommend that you
            use a [UUID type of value.](https://wikipedia.org/wiki/Universally_unique_identifier).


            If you don''t provide this value, then Amazon Web Services generates a
            random one for you.


            If you retry the operation with the same `ClientToken`, but with different
            parameters, the retry fails with an `IdempotentParameterMismatch` error.'
        sources:
          allOf:
          - $ref: '#/components/schemas/SourceArnOrAccountList'
          description: Specifies from which source accounts the service principal
            has access to the resources in this resource share.
      required:
      - resourceShareArn
    AssociateResourceShareResponse:
      type: object
      properties:
        resourceShareAssociations:
          allOf:
          - $ref: '#/components/schemas/ResourceShareAssociationList'
          description: An array of objects that contain information about the associations.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The idempotency identifier associated with this request. If
            you want to repeat the same operation in an idempotent manner then you
            must include this value in the `clientToken` request parameter of that
            later call. All other parameters must also have the same values that you
            used in the first call.
    AssociatedPermission:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The [Amazon Resource Name (ARN)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            of the associated managed permission.
        permissionVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The version of the permission currently associated with the
            resource share.
        defaultVersion:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether the associated resource share is using the
            default version of the permission.
        resourceType:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The resource type to which this permission applies.
        status:
          allOf:
          - $ref: '#/components/schemas/String'
          description: "The current status of the association between the permission\
            \ and the resource share. The following are the possible values:\n\n \
            \ * `ATTACHABLE` – This permission or version can be associated with resource\
            \ shares.\n\n  * `UNATTACHABLE` – This permission or version can't currently\
            \ be associated with resource shares.\n\n  * `DELETING` – This permission\
            \ or version is in the process of being deleted.\n\n  * `DELETED` – This\
            \ permission or version is deleted."
        featureSet:
          allOf:
          - $ref: '#/components/schemas/PermissionFeatureSet'
          description: "Indicates what features are available for this resource share.\
            \ This parameter can have one of the following values:\n\n  * **STANDARD**\
            \ – A resource share that supports all functionality. These resource shares\
            \ are visible to all principals you share the resource share with. You\
            \ can modify these resource shares in RAM using the console or APIs. This\
            \ resource share might have been created by RAM, or it might have been\
            \ **CREATED_FROM_POLICY** and then promoted.\n\n  * **CREATED_FROM_POLICY**\
            \ – The customer manually shared a resource by attaching a resource-based\
            \ policy. That policy did not match any existing managed permissions,\
            \ so RAM created this customer managed permission automatically on the\
            \ customer's behalf based on the attached policy document. This type of\
            \ resource share is visible only to the Amazon Web Services account that\
            \ created it. You can't modify it in RAM unless you promote it. For more\
            \ information, see PromoteResourceShareCreatedFromPolicy.\n\n  * **PROMOTING_TO_STANDARD**\
            \ – This resource share was originally `CREATED_FROM_POLICY`, but the\
            \ customer ran the PromoteResourceShareCreatedFromPolicy and that operation\
            \ is still in progress. This value changes to `STANDARD` when complete."
        lastUpdatedTime:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          description: The date and time when the association between the permission
            and the resource share was last updated.
        resourceShareArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The [Amazon Resource Name (ARN)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            of a resource share associated with this permission.
      description: An object that describes a managed permission associated with a
        resource share.
    AssociatedPermissionList:
      type: array
      items:
        $ref: '#/components/schemas/AssociatedPermission'
    Boolean:
      type: boolean
    CreatePermissionRequest:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/PermissionName'
          description: Specifies the name of the customer managed permission. The
            name must be unique within the Amazon Web Services Region.
        resourceType:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'Specifies the name of the resource type that this customer
            managed permission applies to.


            The format is ` __:__` and is not case sensitive. For example, to specify
            an Amazon EC2 Subnet, you can use the string `ec2:subnet`. To see the
            list of valid values for this parameter, query the ListResourceTypes operation.'
        policyTemplate:
          allOf:
          - $ref: '#/components/schemas/Policy'
          description: "A string in JSON format string that contains the following\
            \ elements of a resource-based policy:\n\n  * **Effect** : must be set\
            \ to `ALLOW`.\n\n  * **Action** : specifies the actions that are allowed\
            \ by this customer managed permission. The list must contain only actions\
            \ that are supported by the specified resource type. For a list of all\
            \ actions supported by each resource type, see [Actions, resources, and\
            \ condition keys for Amazon Web Services services](https://docs.aws.amazon.com/service-authorization/latest/reference/reference_policies_actions-resources-contextkeys.html)\
            \ in the _Identity and Access Management User Guide_.\n\n  * **Condition**\
            \ : (optional) specifies conditional parameters that must evaluate to\
            \ true when a user attempts an action for that action to be allowed. For\
            \ more information about the Condition element, see [IAM policies: Condition\
            \ element](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_condition.html)\
            \ in the _Identity and Access Management User Guide_.\n\nThis template\
            \ can't include either the `Resource` or `Principal` elements. Those are\
            \ both filled in by RAM when it instantiates the resource-based policy\
            \ on each resource shared using this managed permission. The `Resource`\
            \ comes from the ARN of the specific resource that you are sharing. The\
            \ `Principal` comes from the list of identities added to the resource\
            \ share."
        clientToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'Specifies a unique, case-sensitive identifier that you provide
            to ensure the idempotency of the request. This lets you safely retry the
            request without accidentally performing the same operation a second time.
            Passing the same value to a later call to an operation requires that you
            also pass the same value for all other parameters. We recommend that you
            use a [UUID type of value.](https://wikipedia.org/wiki/Universally_unique_identifier).


            If you don''t provide this value, then Amazon Web Services generates a
            random one for you.


            If you retry the operation with the same `ClientToken`, but with different
            parameters, the retry fails with an `IdempotentParameterMismatch` error.'
        tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: Specifies a list of one or more tag key and value pairs to
            attach to the permission.
      required:
      - name
      - resourceType
      - policyTemplate
    CreatePermissionResponse:
      type: object
      properties:
        permission:
          allOf:
          - $ref: '#/components/schemas/ResourceSharePermissionSummary'
          description: A structure with information about this customer managed permission.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The idempotency identifier associated with this request. If
            you want to repeat the same operation in an idempotent manner then you
            must include this value in the `clientToken` request parameter of that
            later call. All other parameters must also have the same values that you
            used in the first call.
    CreatePermissionVersionRequest:
      type: object
      properties:
        permissionArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Specifies the [Amazon Resource Name (ARN)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            of the customer managed permission you're creating a new version for.
        policyTemplate:
          allOf:
          - $ref: '#/components/schemas/Policy'
          description: "A string in JSON format string that contains the following\
            \ elements of a resource-based policy:\n\n  * **Effect** : must be set\
            \ to `ALLOW`.\n\n  * **Action** : specifies the actions that are allowed\
            \ by this customer managed permission. The list must contain only actions\
            \ that are supported by the specified resource type. For a list of all\
            \ actions supported by each resource type, see [Actions, resources, and\
            \ condition keys for Amazon Web Services services](https://docs.aws.amazon.com/service-authorization/latest/reference/reference_policies_actions-resources-contextkeys.html)\
            \ in the _Identity and Access Management User Guide_.\n\n  * **Condition**\
            \ : (optional) specifies conditional parameters that must evaluate to\
            \ true when a user attempts an action for that action to be allowed. For\
            \ more information about the Condition element, see [IAM policies: Condition\
            \ element](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_condition.html)\
            \ in the _Identity and Access Management User Guide_.\n\nThis template\
            \ can't include either the `Resource` or `Principal` elements. Those are\
            \ both filled in by RAM when it instantiates the resource-based policy\
            \ on each resource shared using this managed permission. The `Resource`\
            \ comes from the ARN of the specific resource that you are sharing. The\
            \ `Principal` comes from the list of identities added to the resource\
            \ share."
        clientToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'Specifies a unique, case-sensitive identifier that you provide
            to ensure the idempotency of the request. This lets you safely retry the
            request without accidentally performing the same operation a second time.
            Passing the same value to a later call to an operation requires that you
            also pass the same value for all other parameters. We recommend that you
            use a [UUID type of value.](https://wikipedia.org/wiki/Universally_unique_identifier).


            If you don''t provide this value, then Amazon Web Services generates a
            random one for you.


            If you retry the operation with the same `ClientToken`, but with different
            parameters, the retry fails with an `IdempotentParameterMismatch` error.'
      required:
      - permissionArn
      - policyTemplate
    CreatePermissionVersionResponse:
      type: object
      properties:
        permission:
          $ref: '#/components/schemas/ResourceSharePermissionDetail'
        clientToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The idempotency identifier associated with this request. If
            you want to repeat the same operation in an idempotent manner then you
            must include this value in the `clientToken` request parameter of that
            later call. All other parameters must also have the same values that you
            used in the first call.
    CreateResourceShareRequest:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Specifies the name of the resource share.
        resourceArns:
          allOf:
          - $ref: '#/components/schemas/ResourceArnList'
          description: Specifies a list of one or more ARNs of the resources to associate
            with the resource share.
        principals:
          allOf:
          - $ref: '#/components/schemas/PrincipalArnOrIdList'
          description: "Specifies a list of one or more principals to associate with\
            \ the resource share.\n\nYou can include the following values:\n\n  *\
            \ An Amazon Web Services account ID, for example: `123456789012`\n\n \
            \ * An [Amazon Resource Name (ARN)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)\
            \ of an organization in Organizations, for example: `organizations::123456789012:organization/o-exampleorgid`\n\
            \n  * An ARN of an organizational unit (OU) in Organizations, for example:\
            \ `organizations::123456789012:ou/o-exampleorgid/ou-examplerootid-exampleouid123`\n\
            \n  * An ARN of an IAM role, for example: `iam::123456789012:role/rolename`\n\
            \n  * An ARN of an IAM user, for example: `iam::123456789012user/username`\n\
            \nNot all resource types can be shared with IAM roles and users. For more\
            \ information, see [Sharing with IAM roles and users](https://docs.aws.amazon.com/ram/latest/userguide/permissions.html#permissions-rbp-supported-resource-types)\
            \ in the _Resource Access Manager User Guide_."
        tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: Specifies one or more tags to attach to the resource share
            itself. It doesn't attach the tags to the resources associated with the
            resource share.
        allowExternalPrincipals:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Specifies whether principals outside your organization in Organizations
            can be associated with a resource share. A value of `true` lets you share
            with individual Amazon Web Services accounts that are _not_ in your organization.
            A value of `false` only has meaning if your account is a member of an
            Amazon Web Services Organization. The default value is `true`.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'Specifies a unique, case-sensitive identifier that you provide
            to ensure the idempotency of the request. This lets you safely retry the
            request without accidentally performing the same operation a second time.
            Passing the same value to a later call to an operation requires that you
            also pass the same value for all other parameters. We recommend that you
            use a [UUID type of value.](https://wikipedia.org/wiki/Universally_unique_identifier).


            If you don''t provide this value, then Amazon Web Services generates a
            random one for you.


            If you retry the operation with the same `ClientToken`, but with different
            parameters, the retry fails with an `IdempotentParameterMismatch` error.'
        permissionArns:
          allOf:
          - $ref: '#/components/schemas/PermissionArnList'
          description: Specifies the [Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            of the RAM permission to associate with the resource share. If you do
            not specify an ARN for the permission, RAM automatically attaches the
            default version of the permission for each resource type. You can associate
            only one permission with each resource type included in the resource share.
        sources:
          allOf:
          - $ref: '#/components/schemas/SourceArnOrAccountList'
          description: Specifies from which source accounts the service principal
            has access to the resources in this resource share.
      required:
      - name
    CreateResourceShareResponse:
      type: object
      properties:
        resourceShare:
          allOf:
          - $ref: '#/components/schemas/ResourceShare'
          description: An object with information about the new resource share.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The idempotency identifier associated with this request. If
            you want to repeat the same operation in an idempotent manner then you
            must include this value in the `clientToken` request parameter of that
            later call. All other parameters must also have the same values that you
            used in the first call.
    DateTime:
      type: string
      format: date-time
    DeletePermissionRequest:
      type: object
      properties:
        permissionArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Specifies the [Amazon Resource Name (ARN)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            of the customer managed permission that you want to delete.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'Specifies a unique, case-sensitive identifier that you provide
            to ensure the idempotency of the request. This lets you safely retry the
            request without accidentally performing the same operation a second time.
            Passing the same value to a later call to an operation requires that you
            also pass the same value for all other parameters. We recommend that you
            use a [UUID type of value.](https://wikipedia.org/wiki/Universally_unique_identifier).


            If you don''t provide this value, then Amazon Web Services generates a
            random one for you.


            If you retry the operation with the same `ClientToken`, but with different
            parameters, the retry fails with an `IdempotentParameterMismatch` error.'
      required:
      - permissionArn
    DeletePermissionResponse:
      type: object
      properties:
        returnValue:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: A boolean that indicates whether the delete operations succeeded.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The idempotency identifier associated with this request. If
            you want to repeat the same operation in an idempotent manner then you
            must include this value in the `clientToken` request parameter of that
            later call. All other parameters must also have the same values that you
            used in the first call.
        permissionStatus:
          allOf:
          - $ref: '#/components/schemas/PermissionStatus'
          description: This operation is performed asynchronously, and this response
            parameter indicates the current status.
    DeletePermissionVersionRequest:
      type: object
      properties:
        permissionArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Specifies the [Amazon Resource Name (ARN)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            of the permission with the version you want to delete.
        permissionVersion:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: 'Specifies the version number to delete.


            You can''t delete the default version for a customer managed permission.


            You can''t delete a version if it''s the only version of the permission.
            You must either first create another version, or delete the permission
            completely.


            You can''t delete a version if it is attached to any resource shares.
            If the version is the default, you must first use SetDefaultPermissionVersion
            to set a different version as the default for the customer managed permission,
            and then use AssociateResourceSharePermission to update your resource
            shares to use the new default version.'
        clientToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'Specifies a unique, case-sensitive identifier that you provide
            to ensure the idempotency of the request. This lets you safely retry the
            request without accidentally performing the same operation a second time.
            Passing the same value to a later call to an operation requires that you
            also pass the same value for all other parameters. We recommend that you
            use a [UUID type of value.](https://wikipedia.org/wiki/Universally_unique_identifier).


            If you don''t provide this value, then Amazon Web Services generates a
            random one for you.


            If you retry the operation with the same `ClientToken`, but with different
            parameters, the retry fails with an `IdempotentParameterMismatch` error.'
      required:
      - permissionArn
      - permissionVersion
    DeletePermissionVersionResponse:
      type: object
      properties:
        returnValue:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: A boolean value that indicates whether the operation is successful.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The idempotency identifier associated with this request. If
            you want to repeat the same operation in an idempotent manner then you
            must include this value in the `clientToken` request parameter of that
            later call. All other parameters must also have the same values that you
            used in the first call.
        permissionStatus:
          allOf:
          - $ref: '#/components/schemas/PermissionStatus'
          description: This operation is performed asynchronously, and this response
            parameter indicates the current status.
    DeleteResourceShareRequest:
      type: object
      properties:
        resourceShareArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Specifies the [Amazon Resource Name (ARN)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            of the resource share to delete.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'Specifies a unique, case-sensitive identifier that you provide
            to ensure the idempotency of the request. This lets you safely retry the
            request without accidentally performing the same operation a second time.
            Passing the same value to a later call to an operation requires that you
            also pass the same value for all other parameters. We recommend that you
            use a [UUID type of value.](https://wikipedia.org/wiki/Universally_unique_identifier).


            If you don''t provide this value, then Amazon Web Services generates a
            random one for you.


            If you retry the operation with the same `ClientToken`, but with different
            parameters, the retry fails with an `IdempotentParameterMismatch` error.'
      required:
      - resourceShareArn
    DeleteResourceShareResponse:
      type: object
      properties:
        returnValue:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: A return value of `true` indicates that the request succeeded.
            A value of `false` indicates that the request failed.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The idempotency identifier associated with this request. If
            you want to repeat the same operation in an idempotent manner then you
            must include this value in the `clientToken` request parameter of that
            later call. All other parameters must also have the same values that you
            used in the first call.
    DisassociateResourceSharePermissionRequest:
      type: object
      properties:
        resourceShareArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The [Amazon Resource Name (ARN)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            of the resource share that you want to remove the managed permission from.
        permissionArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The [Amazon Resource Name (ARN)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            of the managed permission to disassociate from the resource share. Changes
            to permissions take effect immediately.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'Specifies a unique, case-sensitive identifier that you provide
            to ensure the idempotency of the request. This lets you safely retry the
            request without accidentally performing the same operation a second time.
            Passing the same value to a later call to an operation requires that you
            also pass the same value for all other parameters. We recommend that you
            use a [UUID type of value.](https://wikipedia.org/wiki/Universally_unique_identifier).


            If you don''t provide this value, then Amazon Web Services generates a
            random one for you.


            If you retry the operation with the same `ClientToken`, but with different
            parameters, the retry fails with an `IdempotentParameterMismatch` error.'
      required:
      - resourceShareArn
      - permissionArn
    DisassociateResourceSharePermissionResponse:
      type: object
      properties:
        returnValue:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: A return value of `true` indicates that the request succeeded.
            A value of `false` indicates that the request failed.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The idempotency identifier associated with this request. If
            you want to repeat the same operation in an idempotent manner then you
            must include this value in the `clientToken` request parameter of that
            later call. All other parameters must also have the same values that you
            used in the first call.
    DisassociateResourceShareRequest:
      type: object
      properties:
        resourceShareArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Specifies [Amazon Resource Name (ARN)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            of the resource share that you want to remove resources or principals
            from.
        resourceArns:
          allOf:
          - $ref: '#/components/schemas/ResourceArnList'
          description: Specifies a list of [Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            for one or more resources that you want to remove from the resource share.
            After the operation runs, these resources are no longer shared with principals
            associated with the resource share.
        principals:
          allOf:
          - $ref: '#/components/schemas/PrincipalArnOrIdList'
          description: "Specifies a list of one or more principals that no longer\
            \ are to have access to the resources in this resource share.\n\nYou can\
            \ include the following values:\n\n  * An Amazon Web Services account\
            \ ID, for example: `123456789012`\n\n  * An [Amazon Resource Name (ARN)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)\
            \ of an organization in Organizations, for example: `organizations::123456789012:organization/o-exampleorgid`\n\
            \n  * An ARN of an organizational unit (OU) in Organizations, for example:\
            \ `organizations::123456789012:ou/o-exampleorgid/ou-examplerootid-exampleouid123`\n\
            \n  * An ARN of an IAM role, for example: `iam::123456789012:role/rolename`\n\
            \n  * An ARN of an IAM user, for example: `iam::123456789012user/username`\n\
            \nNot all resource types can be shared with IAM roles and users. For more\
            \ information, see [Sharing with IAM roles and users](https://docs.aws.amazon.com/ram/latest/userguide/permissions.html#permissions-rbp-supported-resource-types)\
            \ in the _Resource Access Manager User Guide_."
        clientToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'Specifies a unique, case-sensitive identifier that you provide
            to ensure the idempotency of the request. This lets you safely retry the
            request without accidentally performing the same operation a second time.
            Passing the same value to a later call to an operation requires that you
            also pass the same value for all other parameters. We recommend that you
            use a [UUID type of value.](https://wikipedia.org/wiki/Universally_unique_identifier).


            If you don''t provide this value, then Amazon Web Services generates a
            random one for you.


            If you retry the operation with the same `ClientToken`, but with different
            parameters, the retry fails with an `IdempotentParameterMismatch` error.'
        sources:
          allOf:
          - $ref: '#/components/schemas/SourceArnOrAccountList'
          description: Specifies from which source accounts the service principal
            no longer has access to the resources in this resource share.
      required:
      - resourceShareArn
    DisassociateResourceShareResponse:
      type: object
      properties:
        resourceShareAssociations:
          allOf:
          - $ref: '#/components/schemas/ResourceShareAssociationList'
          description: An array of objects with information about the updated associations
            for this resource share.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The idempotency identifier associated with this request. If
            you want to repeat the same operation in an idempotent manner then you
            must include this value in the `clientToken` request parameter of that
            later call. All other parameters must also have the same values that you
            used in the first call.
    EnableSharingWithAwsOrganizationRequest:
      type: object
      properties: {}
    EnableSharingWithAwsOrganizationResponse:
      type: object
      properties:
        returnValue:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: A return value of `true` indicates that the request succeeded.
            A value of `false` indicates that the request failed.
    GetPermissionRequest:
      type: object
      properties:
        permissionArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Specifies the [Amazon Resource Name (ARN)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            of the permission whose contents you want to retrieve. To find the ARN
            for a permission, use either the ListPermissions operation or go to the
            [Permissions library](https://console.aws.amazon.com/ram/home#Permissions:)
            page in the RAM console and then choose the name of the permission. The
            ARN is displayed on the detail page.
        permissionVersion:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: 'Specifies the version number of the RAM permission to retrieve.
            If you don''t specify this parameter, the operation retrieves the default
            version.


            To see the list of available versions, use ListPermissionVersions.'
      required:
      - permissionArn
    GetPermissionResponse:
      type: object
      properties:
        permission:
          allOf:
          - $ref: '#/components/schemas/ResourceSharePermissionDetail'
          description: An object with details about the permission.
    GetResourcePoliciesRequest:
      type: object
      properties:
        resourceArns:
          allOf:
          - $ref: '#/components/schemas/ResourceArnList'
          description: Specifies the [Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            of the resources whose policies you want to retrieve.
        principal:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Specifies the principal.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Specifies that you want to receive the next page of results.
            Valid only if you received a `NextToken` response in the previous request.
            If you did, it indicates that more output is available. Set this parameter
            to the value provided by the previous call's `NextToken` response to request
            the next page of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: Specifies the total number of results that you want included
            on each page of the response. If you do not include this parameter, it
            defaults to a value that is specific to the operation. If additional items
            exist beyond the number you specify, the `NextToken` response element
            is returned with a value (not null). Include the specified value as the
            `NextToken` request parameter in the next call to the operation to get
            the next part of the results. Note that the service might return fewer
            results than the maximum even when there are more results available. You
            should check `NextToken` after every operation to ensure that you receive
            all of the results.
      required:
      - resourceArns
    GetResourcePoliciesResponse:
      type: object
      properties:
        policies:
          allOf:
          - $ref: '#/components/schemas/PolicyList'
          description: An array of resource policy documents in JSON format.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: If present, this value indicates that more output is available
            than is included in the current response. Use this value in the `NextToken`
            request parameter in a subsequent call to the operation to get the next
            part of the output. You should repeat this until the `NextToken` response
            element comes back as `null`. This indicates that this is the last page
            of results.
    GetResourceShareAssociationsRequest:
      type: object
      properties:
        associationType:
          allOf:
          - $ref: '#/components/schemas/ResourceShareAssociationType'
          description: "Specifies whether you want to retrieve the associations that\
            \ involve a specified resource or principal.\n\n  * `PRINCIPAL` – list\
            \ the principals whose associations you want to see.\n\n  * `RESOURCE`\
            \ – list the resources whose associations you want to see."
        resourceShareArns:
          allOf:
          - $ref: '#/components/schemas/ResourceShareArnList'
          description: Specifies a list of [Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            of the resource share whose associations you want to retrieve.
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'Specifies the [Amazon Resource Name (ARN)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            of a resource whose resource shares you want to retrieve.


            You cannot specify this parameter if the association type is `PRINCIPAL`.'
        principal:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'Specifies the ID of the principal whose resource shares you
            want to retrieve. This can be an Amazon Web Services account ID, an organization
            ID, an organizational unit ID, or the [Amazon Resource Name (ARN)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            of an individual IAM role or user.


            You cannot specify this parameter if the association type is `RESOURCE`.'
        associationStatus:
          allOf:
          - $ref: '#/components/schemas/ResourceShareAssociationStatus'
          description: Specifies that you want to retrieve only associations that
            have this status.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Specifies that you want to receive the next page of results.
            Valid only if you received a `NextToken` response in the previous request.
            If you did, it indicates that more output is available. Set this parameter
            to the value provided by the previous call's `NextToken` response to request
            the next page of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: Specifies the total number of results that you want included
            on each page of the response. If you do not include this parameter, it
            defaults to a value that is specific to the operation. If additional items
            exist beyond the number you specify, the `NextToken` response element
            is returned with a value (not null). Include the specified value as the
            `NextToken` request parameter in the next call to the operation to get
            the next part of the results. Note that the service might return fewer
            results than the maximum even when there are more results available. You
            should check `NextToken` after every operation to ensure that you receive
            all of the results.
      required:
      - associationType
    GetResourceShareAssociationsResponse:
      type: object
      properties:
        resourceShareAssociations:
          allOf:
          - $ref: '#/components/schemas/ResourceShareAssociationList'
          description: An array of objects that contain the details about the associations.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: If present, this value indicates that more output is available
            than is included in the current response. Use this value in the `NextToken`
            request parameter in a subsequent call to the operation to get the next
            part of the output. You should repeat this until the `NextToken` response
            element comes back as `null`. This indicates that this is the last page
            of results.
    GetResourceShareInvitationsRequest:
      type: object
      properties:
        resourceShareInvitationArns:
          allOf:
          - $ref: '#/components/schemas/ResourceShareInvitationArnList'
          description: Specifies the [Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            of the resource share invitations you want information about.
        resourceShareArns:
          allOf:
          - $ref: '#/components/schemas/ResourceShareArnList'
          description: Specifies that you want details about invitations only for
            the resource shares described by this list of [Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Specifies that you want to receive the next page of results.
            Valid only if you received a `NextToken` response in the previous request.
            If you did, it indicates that more output is available. Set this parameter
            to the value provided by the previous call's `NextToken` response to request
            the next page of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: Specifies the total number of results that you want included
            on each page of the response. If you do not include this parameter, it
            defaults to a value that is specific to the operation. If additional items
            exist beyond the number you specify, the `NextToken` response element
            is returned with a value (not null). Include the specified value as the
            `NextToken` request parameter in the next call to the operation to get
            the next part of the results. Note that the service might return fewer
            results than the maximum even when there are more results available. You
            should check `NextToken` after every operation to ensure that you receive
            all of the results.
    GetResourceShareInvitationsResponse:
      type: object
      properties:
        resourceShareInvitations:
          allOf:
          - $ref: '#/components/schemas/ResourceShareInvitationList'
          description: An array of objects that contain the details about the invitations.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: If present, this value indicates that more output is available
            than is included in the current response. Use this value in the `NextToken`
            request parameter in a subsequent call to the operation to get the next
            part of the output. You should repeat this until the `NextToken` response
            element comes back as `null`. This indicates that this is the last page
            of results.
    GetResourceSharesRequest:
      type: object
      properties:
        resourceShareArns:
          allOf:
          - $ref: '#/components/schemas/ResourceShareArnList'
          description: Specifies the [Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            of individual resource shares that you want information about.
        resourceShareStatus:
          allOf:
          - $ref: '#/components/schemas/ResourceShareStatus'
          description: Specifies that you want to retrieve details of only those resource
            shares that have this status.
        resourceOwner:
          allOf:
          - $ref: '#/components/schemas/ResourceOwner'
          description: "Specifies that you want to retrieve details of only those\
            \ resource shares that match the following:\n\n  * **`SELF` ** – resource\
            \ shares that your account shares with other accounts\n\n  * **`OTHER-ACCOUNTS`\
            \ ** – resource shares that other accounts share with your account"
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Specifies the name of an individual resource share that you
            want to retrieve details about.
        tagFilters:
          allOf:
          - $ref: '#/components/schemas/TagFilters'
          description: Specifies that you want to retrieve details of only those resource
            shares that match the specified tag keys and values.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Specifies that you want to receive the next page of results.
            Valid only if you received a `NextToken` response in the previous request.
            If you did, it indicates that more output is available. Set this parameter
            to the value provided by the previous call's `NextToken` response to request
            the next page of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: Specifies the total number of results that you want included
            on each page of the response. If you do not include this parameter, it
            defaults to a value that is specific to the operation. If additional items
            exist beyond the number you specify, the `NextToken` response element
            is returned with a value (not null). Include the specified value as the
            `NextToken` request parameter in the next call to the operation to get
            the next part of the results. Note that the service might return fewer
            results than the maximum even when there are more results available. You
            should check `NextToken` after every operation to ensure that you receive
            all of the results.
        permissionArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Specifies that you want to retrieve details of only those resource
            shares that use the managed permission with this [Amazon Resource Name
            (ARN)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html).
        permissionVersion:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: Specifies that you want to retrieve details for only those
            resource shares that use the specified version of the managed permission.
      required:
      - resourceOwner
    GetResourceSharesResponse:
      type: object
      properties:
        resourceShares:
          allOf:
          - $ref: '#/components/schemas/ResourceShareList'
          description: An array of objects that contain the information about the
            resource shares.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: If present, this value indicates that more output is available
            than is included in the current response. Use this value in the `NextToken`
            request parameter in a subsequent call to the operation to get the next
            part of the output. You should repeat this until the `NextToken` response
            element comes back as `null`. This indicates that this is the last page
            of results.
    IdempotentParameterMismatchException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      required:
      - message
      description: The operation failed because the client token input parameter matched
        one that was used with a previous call to the operation, but at least one
        of the other input parameters is different from the previous call.
    Integer:
      type: integer
    InvalidClientTokenException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      required:
      - message
      description: The operation failed because the specified client token isn't valid.
    InvalidMaxResultsException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      required:
      - message
      description: The operation failed because the specified value for `MaxResults`
        isn't valid.
    InvalidNextTokenException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      required:
      - message
      description: The operation failed because the specified value for `NextToken`
        isn't valid. You must specify a value you received in the `NextToken` response
        of a previous call to this operation.
    InvalidParameterException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      required:
      - message
      description: The operation failed because a parameter you specified isn't valid.
    InvalidPolicyException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      required:
      - message
      description: The operation failed because a policy you specified isn't valid.
    InvalidResourceTypeException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      required:
      - message
      description: The operation failed because the specified resource type isn't
        valid.
    InvalidStateTransitionException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      required:
      - message
      description: The operation failed because the requested operation isn't valid
        for the resource share in its current state.
    ListPendingInvitationResourcesRequest:
      type: object
      properties:
        resourceShareInvitationArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Specifies the [Amazon Resource Name (ARN)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            of the invitation. You can use GetResourceShareInvitations to find the
            ARN of the invitation.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Specifies that you want to receive the next page of results.
            Valid only if you received a `NextToken` response in the previous request.
            If you did, it indicates that more output is available. Set this parameter
            to the value provided by the previous call's `NextToken` response to request
            the next page of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: Specifies the total number of results that you want included
            on each page of the response. If you do not include this parameter, it
            defaults to a value that is specific to the operation. If additional items
            exist beyond the number you specify, the `NextToken` response element
            is returned with a value (not null). Include the specified value as the
            `NextToken` request parameter in the next call to the operation to get
            the next part of the results. Note that the service might return fewer
            results than the maximum even when there are more results available. You
            should check `NextToken` after every operation to ensure that you receive
            all of the results.
        resourceRegionScope:
          allOf:
          - $ref: '#/components/schemas/ResourceRegionScopeFilter'
          description: "Specifies that you want the results to include only resources\
            \ that have the specified scope.\n\n  * `ALL` – the results include both\
            \ global and regional resources or resource types.\n\n  * `GLOBAL` – the\
            \ results include only global resources or resource types.\n\n  * `REGIONAL`\
            \ – the results include only regional resources or resource types.\n\n\
            The default value is `ALL`."
      required:
      - resourceShareInvitationArn
    ListPendingInvitationResourcesResponse:
      type: object
      properties:
        resources:
          allOf:
          - $ref: '#/components/schemas/ResourceList'
          description: An array of objects that contain the information about the
            resources included the specified resource share.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: If present, this value indicates that more output is available
            than is included in the current response. Use this value in the `NextToken`
            request parameter in a subsequent call to the operation to get the next
            part of the output. You should repeat this until the `NextToken` response
            element comes back as `null`. This indicates that this is the last page
            of results.
    ListPermissionAssociationsRequest:
      type: object
      properties:
        permissionArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Specifies the [Amazon Resource Name (ARN)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            of the managed permission.
        permissionVersion:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: Specifies that you want to list only those associations with
            resource shares that use this version of the managed permission. If you
            don't provide a value for this parameter, then the operation returns information
            about associations with resource shares that use any version of the managed
            permission.
        associationStatus:
          allOf:
          - $ref: '#/components/schemas/ResourceShareAssociationStatus'
          description: Specifies that you want to list only those associations with
            resource shares that match this status.
        resourceType:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Specifies that you want to list only those associations with
            resource shares that include at least one resource of this resource type.
        featureSet:
          allOf:
          - $ref: '#/components/schemas/PermissionFeatureSet'
          description: Specifies that you want to list only those associations with
            resource shares that have a `featureSet` with this value.
        defaultVersion:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: 'When `true`, specifies that you want to list only those associations
            with resource shares that use the default version of the specified managed
            permission.


            When `false` (the default value), lists associations with resource shares
            that use any version of the specified managed permission.'
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Specifies that you want to receive the next page of results.
            Valid only if you received a `NextToken` response in the previous request.
            If you did, it indicates that more output is available. Set this parameter
            to the value provided by the previous call's `NextToken` response to request
            the next page of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: Specifies the total number of results that you want included
            on each page of the response. If you do not include this parameter, it
            defaults to a value that is specific to the operation. If additional items
            exist beyond the number you specify, the `NextToken` response element
            is returned with a value (not null). Include the specified value as the
            `NextToken` request parameter in the next call to the operation to get
            the next part of the results. Note that the service might return fewer
            results than the maximum even when there are more results available. You
            should check `NextToken` after every operation to ensure that you receive
            all of the results.
    ListPermissionAssociationsResponse:
      type: object
      properties:
        permissions:
          allOf:
          - $ref: '#/components/schemas/AssociatedPermissionList'
          description: A structure with information about this customer managed permission.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: If present, this value indicates that more output is available
            than is included in the current response. Use this value in the `NextToken`
            request parameter in a subsequent call to the operation to get the next
            part of the output. You should repeat this until the `NextToken` response
            element comes back as `null`. This indicates that this is the last page
            of results.
    ListPermissionVersionsRequest:
      type: object
      properties:
        permissionArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Specifies the [Amazon Resource Name (ARN)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            of the RAM permission whose versions you want to list. You can use the
            `permissionVersion` parameter on the AssociateResourceSharePermission
            operation to specify a non-default version to attach.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Specifies that you want to receive the next page of results.
            Valid only if you received a `NextToken` response in the previous request.
            If you did, it indicates that more output is available. Set this parameter
            to the value provided by the previous call's `NextToken` response to request
            the next page of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: Specifies the total number of results that you want included
            on each page of the response. If you do not include this parameter, it
            defaults to a value that is specific to the operation. If additional items
            exist beyond the number you specify, the `NextToken` response element
            is returned with a value (not null). Include the specified value as the
            `NextToken` request parameter in the next call to the operation to get
            the next part of the results. Note that the service might return fewer
            results than the maximum even when there are more results available. You
            should check `NextToken` after every operation to ensure that you receive
            all of the results.
      required:
      - permissionArn
    ListPermissionVersionsResponse:
      type: object
      properties:
        permissions:
          allOf:
          - $ref: '#/components/schemas/ResourceSharePermissionList'
          description: An array of objects that contain details for each of the available
            versions.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: If present, this value indicates that more output is available
            than is included in the current response. Use this value in the `NextToken`
            request parameter in a subsequent call to the operation to get the next
            part of the output. You should repeat this until the `NextToken` response
            element comes back as `null`. This indicates that this is the last page
            of results.
    ListPermissionsRequest:
      type: object
      properties:
        resourceType:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'Specifies that you want to list only those permissions that
            apply to the specified resource type. This parameter is not case sensitive.


            For example, to list only permissions that apply to Amazon EC2 subnets,
            specify `ec2:subnet`. You can use the ListResourceTypes operation to get
            the specific string required.'
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Specifies that you want to receive the next page of results.
            Valid only if you received a `NextToken` response in the previous request.
            If you did, it indicates that more output is available. Set this parameter
            to the value provided by the previous call's `NextToken` response to request
            the next page of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: Specifies the total number of results that you want included
            on each page of the response. If you do not include this parameter, it
            defaults to a value that is specific to the operation. If additional items
            exist beyond the number you specify, the `NextToken` response element
            is returned with a value (not null). Include the specified value as the
            `NextToken` request parameter in the next call to the operation to get
            the next part of the results. Note that the service might return fewer
            results than the maximum even when there are more results available. You
            should check `NextToken` after every operation to ensure that you receive
            all of the results.
        permissionType:
          allOf:
          - $ref: '#/components/schemas/PermissionTypeFilter'
          description: "Specifies that you want to list only permissions of this type:\n\
            \n  * `AWS` – returns only Amazon Web Services managed permissions.\n\n\
            \  * `LOCAL` – returns only customer managed permissions\n\n  * `ALL`\
            \ – returns both Amazon Web Services managed permissions and customer\
            \ managed permissions.\n\nIf you don't specify this parameter, the default\
            \ is `All`."
    ListPermissionsResponse:
      type: object
      properties:
        permissions:
          allOf:
          - $ref: '#/components/schemas/ResourceSharePermissionList'
          description: An array of objects with information about the permissions.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: If present, this value indicates that more output is available
            than is included in the current response. Use this value in the `NextToken`
            request parameter in a subsequent call to the operation to get the next
            part of the output. You should repeat this until the `NextToken` response
            element comes back as `null`. This indicates that this is the last page
            of results.
    ListPrincipalsRequest:
      type: object
      properties:
        resourceOwner:
          allOf:
          - $ref: '#/components/schemas/ResourceOwner'
          description: "Specifies that you want to list information for only resource\
            \ shares that match the following:\n\n  * **`SELF` ** – principals that\
            \ your account is sharing resources with\n\n  * **`OTHER-ACCOUNTS` **\
            \ – principals that are sharing resources with your account"
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Specifies that you want to list principal information for the
            resource share with the specified [Amazon Resource Name (ARN)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html).
        principals:
          allOf:
          - $ref: '#/components/schemas/PrincipalArnOrIdList'
          description: "Specifies that you want to list information for only the listed\
            \ principals.\n\nYou can include the following values:\n\n  * An Amazon\
            \ Web Services account ID, for example: `123456789012`\n\n  * An [Amazon\
            \ Resource Name (ARN)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)\
            \ of an organization in Organizations, for example: `organizations::123456789012:organization/o-exampleorgid`\n\
            \n  * An ARN of an organizational unit (OU) in Organizations, for example:\
            \ `organizations::123456789012:ou/o-exampleorgid/ou-examplerootid-exampleouid123`\n\
            \n  * An ARN of an IAM role, for example: `iam::123456789012:role/rolename`\n\
            \n  * An ARN of an IAM user, for example: `iam::123456789012user/username`\n\
            \nNot all resource types can be shared with IAM roles and users. For more\
            \ information, see [Sharing with IAM roles and users](https://docs.aws.amazon.com/ram/latest/userguide/permissions.html#permissions-rbp-supported-resource-types)\
            \ in the _Resource Access Manager User Guide_."
        resourceType:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'Specifies that you want to list information for only principals
            associated with resource shares that include the specified resource type.


            For a list of valid values, query the ListResourceTypes operation.'
        resourceShareArns:
          allOf:
          - $ref: '#/components/schemas/ResourceShareArnList'
          description: Specifies that you want to list information for only principals
            associated with the resource shares specified by a list the [Amazon Resource
            Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html).
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Specifies that you want to receive the next page of results.
            Valid only if you received a `NextToken` response in the previous request.
            If you did, it indicates that more output is available. Set this parameter
            to the value provided by the previous call's `NextToken` response to request
            the next page of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: Specifies the total number of results that you want included
            on each page of the response. If you do not include this parameter, it
            defaults to a value that is specific to the operation. If additional items
            exist beyond the number you specify, the `NextToken` response element
            is returned with a value (not null). Include the specified value as the
            `NextToken` request parameter in the next call to the operation to get
            the next part of the results. Note that the service might return fewer
            results than the maximum even when there are more results available. You
            should check `NextToken` after every operation to ensure that you receive
            all of the results.
      required:
      - resourceOwner
    ListPrincipalsResponse:
      type: object
      properties:
        principals:
          allOf:
          - $ref: '#/components/schemas/PrincipalList'
          description: An array of objects that contain the details about the principals.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: If present, this value indicates that more output is available
            than is included in the current response. Use this value in the `NextToken`
            request parameter in a subsequent call to the operation to get the next
            part of the output. You should repeat this until the `NextToken` response
            element comes back as `null`. This indicates that this is the last page
            of results.
    ListReplacePermissionAssociationsWorkRequest:
      type: object
      properties:
        workIds:
          allOf:
          - $ref: '#/components/schemas/ReplacePermissionAssociationsWorkIdList'
          description: A list of IDs. These values come from the `id`field of the
            `replacePermissionAssociationsWork`structure returned by the ReplacePermissionAssociations
            operation.
        status:
          allOf:
          - $ref: '#/components/schemas/ReplacePermissionAssociationsWorkStatus'
          description: Specifies that you want to see only the details about requests
            with a status that matches this value.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Specifies that you want to receive the next page of results.
            Valid only if you received a `NextToken` response in the previous request.
            If you did, it indicates that more output is available. Set this parameter
            to the value provided by the previous call's `NextToken` response to request
            the next page of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: Specifies the total number of results that you want included
            on each page of the response. If you do not include this parameter, it
            defaults to a value that is specific to the operation. If additional items
            exist beyond the number you specify, the `NextToken` response element
            is returned with a value (not null). Include the specified value as the
            `NextToken` request parameter in the next call to the operation to get
            the next part of the results. Note that the service might return fewer
            results than the maximum even when there are more results available. You
            should check `NextToken` after every operation to ensure that you receive
            all of the results.
    ListReplacePermissionAssociationsWorkResponse:
      type: object
      properties:
        replacePermissionAssociationsWorks:
          allOf:
          - $ref: '#/components/schemas/ReplacePermissionAssociationsWorkList'
          description: An array of data structures that provide details of the matching
            work IDs.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: If present, this value indicates that more output is available
            than is included in the current response. Use this value in the `NextToken`
            request parameter in a subsequent call to the operation to get the next
            part of the output. You should repeat this until the `NextToken` response
            element comes back as `null`. This indicates that this is the last page
            of results.
    ListResourceSharePermissionsRequest:
      type: object
      properties:
        resourceShareArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Specifies the [Amazon Resource Name (ARN)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            of the resource share for which you want to retrieve the associated permissions.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Specifies that you want to receive the next page of results.
            Valid only if you received a `NextToken` response in the previous request.
            If you did, it indicates that more output is available. Set this parameter
            to the value provided by the previous call's `NextToken` response to request
            the next page of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: Specifies the total number of results that you want included
            on each page of the response. If you do not include this parameter, it
            defaults to a value that is specific to the operation. If additional items
            exist beyond the number you specify, the `NextToken` response element
            is returned with a value (not null). Include the specified value as the
            `NextToken` request parameter in the next call to the operation to get
            the next part of the results. Note that the service might return fewer
            results than the maximum even when there are more results available. You
            should check `NextToken` after every operation to ensure that you receive
            all of the results.
      required:
      - resourceShareArn
    ListResourceSharePermissionsResponse:
      type: object
      properties:
        permissions:
          allOf:
          - $ref: '#/components/schemas/ResourceSharePermissionList'
          description: An array of objects that describe the permissions associated
            with the resource share.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: If present, this value indicates that more output is available
            than is included in the current response. Use this value in the `NextToken`
            request parameter in a subsequent call to the operation to get the next
            part of the output. You should repeat this until the `NextToken` response
            element comes back as `null`. This indicates that this is the last page
            of results.
    ListResourceTypesRequest:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Specifies that you want to receive the next page of results.
            Valid only if you received a `NextToken` response in the previous request.
            If you did, it indicates that more output is available. Set this parameter
            to the value provided by the previous call's `NextToken` response to request
            the next page of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: Specifies the total number of results that you want included
            on each page of the response. If you do not include this parameter, it
            defaults to a value that is specific to the operation. If additional items
            exist beyond the number you specify, the `NextToken` response element
            is returned with a value (not null). Include the specified value as the
            `NextToken` request parameter in the next call to the operation to get
            the next part of the results. Note that the service might return fewer
            results than the maximum even when there are more results available. You
            should check `NextToken` after every operation to ensure that you receive
            all of the results.
        resourceRegionScope:
          allOf:
          - $ref: '#/components/schemas/ResourceRegionScopeFilter'
          description: "Specifies that you want the results to include only resources\
            \ that have the specified scope.\n\n  * `ALL` – the results include both\
            \ global and regional resources or resource types.\n\n  * `GLOBAL` – the\
            \ results include only global resources or resource types.\n\n  * `REGIONAL`\
            \ – the results include only regional resources or resource types.\n\n\
            The default value is `ALL`."
    ListResourceTypesResponse:
      type: object
      properties:
        resourceTypes:
          allOf:
          - $ref: '#/components/schemas/ServiceNameAndResourceTypeList'
          description: An array of objects that contain information about the resource
            types that can be shared using RAM.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: If present, this value indicates that more output is available
            than is included in the current response. Use this value in the `NextToken`
            request parameter in a subsequent call to the operation to get the next
            part of the output. You should repeat this until the `NextToken` response
            element comes back as `null`. This indicates that this is the last page
            of results.
    ListResourcesRequest:
      type: object
      properties:
        resourceOwner:
          allOf:
          - $ref: '#/components/schemas/ResourceOwner'
          description: "Specifies that you want to list only the resource shares that\
            \ match the following:\n\n  * **`SELF` ** – resources that your account\
            \ shares with other accounts\n\n  * **`OTHER-ACCOUNTS` ** – resources\
            \ that other accounts share with your account"
        principal:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Specifies that you want to list only the resource shares that
            are associated with the specified principal.
        resourceType:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'Specifies that you want to list only the resource shares that
            include resources of the specified resource type.


            For valid values, query the ListResourceTypes operation.'
        resourceArns:
          allOf:
          - $ref: '#/components/schemas/ResourceArnList'
          description: Specifies that you want to list only the resource shares that
            include resources with the specified [Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html).
        resourceShareArns:
          allOf:
          - $ref: '#/components/schemas/ResourceShareArnList'
          description: Specifies that you want to list only resources in the resource
            shares identified by the specified [Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html).
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Specifies that you want to receive the next page of results.
            Valid only if you received a `NextToken` response in the previous request.
            If you did, it indicates that more output is available. Set this parameter
            to the value provided by the previous call's `NextToken` response to request
            the next page of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: Specifies the total number of results that you want included
            on each page of the response. If you do not include this parameter, it
            defaults to a value that is specific to the operation. If additional items
            exist beyond the number you specify, the `NextToken` response element
            is returned with a value (not null). Include the specified value as the
            `NextToken` request parameter in the next call to the operation to get
            the next part of the results. Note that the service might return fewer
            results than the maximum even when there are more results available. You
            should check `NextToken` after every operation to ensure that you receive
            all of the results.
        resourceRegionScope:
          allOf:
          - $ref: '#/components/schemas/ResourceRegionScopeFilter'
          description: "Specifies that you want the results to include only resources\
            \ that have the specified scope.\n\n  * `ALL` – the results include both\
            \ global and regional resources or resource types.\n\n  * `GLOBAL` – the\
            \ results include only global resources or resource types.\n\n  * `REGIONAL`\
            \ – the results include only regional resources or resource types.\n\n\
            The default value is `ALL`."
      required:
      - resourceOwner
    ListResourcesResponse:
      type: object
      properties:
        resources:
          allOf:
          - $ref: '#/components/schemas/ResourceList'
          description: An array of objects that contain information about the resources.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: If present, this value indicates that more output is available
            than is included in the current response. Use this value in the `NextToken`
            request parameter in a subsequent call to the operation to get the next
            part of the output. You should repeat this until the `NextToken` response
            element comes back as `null`. This indicates that this is the last page
            of results.
    MalformedArnException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      required:
      - message
      description: The operation failed because the specified [Amazon Resource Name
        (ARN)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
        has a format that isn't valid.
    MalformedPolicyTemplateException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      required:
      - message
      description: The operation failed because the policy template that you provided
        isn't valid.
    MaxResults:
      type: integer
      minimum: 1
      maximum: 500
    MissingRequiredParameterException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      required:
      - message
      description: The operation failed because a required input parameter is missing.
    OperationNotPermittedException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      required:
      - message
      description: The operation failed because the requested operation isn't permitted.
    PermissionAlreadyExistsException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      required:
      - message
      description: The operation failed because a permission with the specified name
        already exists in the requested Amazon Web Services Region. Choose a different
        name.
    PermissionArnList:
      type: array
      items:
        $ref: '#/components/schemas/String'
    PermissionFeatureSet:
      type: string
      enum:
      - CREATED_FROM_POLICY
      - PROMOTING_TO_STANDARD
      - STANDARD
    PermissionLimitExceededException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      required:
      - message
      description: The operation failed because it would exceed the maximum number
        of permissions you can create in each Amazon Web Services Region. To view
        the limits for your Amazon Web Services account, see the [RAM page in the
        Service Quotas console](https://console.aws.amazon.com/servicequotas/home/services/ram/quotas).
    PermissionName:
      type: string
      pattern: ^[\w.-]*$
      minLength: 1
      maxLength: 36
    PermissionStatus:
      type: string
      enum:
      - ATTACHABLE
      - UNATTACHABLE
      - DELETING
      - DELETED
    PermissionType:
      type: string
      enum:
      - CUSTOMER_MANAGED
      - AWS_MANAGED
    PermissionTypeFilter:
      type: string
      enum:
      - ALL
      - AWS_MANAGED
      - CUSTOMER_MANAGED
    PermissionVersionsLimitExceededException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      required:
      - message
      description: The operation failed because it would exceed the limit for the
        number of versions you can have for a permission. To view the limits for your
        Amazon Web Services account, see the [RAM page in the Service Quotas console](https://console.aws.amazon.com/servicequotas/home/services/ram/quotas).
    Policy:
      type: string
    PolicyList:
      type: array
      items:
        $ref: '#/components/schemas/Policy'
    Principal:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the principal that can be associated with a resource
            share.
        resourceShareArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The [Amazon Resource Name (ARN)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            of a resource share the principal is associated with.
        creationTime:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          description: The date and time when the principal was associated with the
            resource share.
        lastUpdatedTime:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          description: The date and time when the association between the resource
            share and the principal was last updated.
        external:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: "Indicates the relationship between the Amazon Web Services\
            \ account the principal belongs to and the account that owns the resource\
            \ share:\n\n  * `True` – The two accounts belong to same organization.\n\
            \n  * `False` – The two accounts do not belong to the same organization."
      description: Describes a principal for use with Resource Access Manager.
    PrincipalArnOrIdList:
      type: array
      items:
        $ref: '#/components/schemas/String'
    PrincipalList:
      type: array
      items:
        $ref: '#/components/schemas/Principal'
    PromotePermissionCreatedFromPolicyRequest:
      type: object
      properties:
        permissionArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Specifies the [Amazon Resource Name (ARN)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            of the `CREATED_FROM_POLICY` permission that you want to promote. You
            can get this [Amazon Resource Name (ARN)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            by calling the ListResourceSharePermissions operation.
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Specifies a name for the promoted customer managed permission.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'Specifies a unique, case-sensitive identifier that you provide
            to ensure the idempotency of the request. This lets you safely retry the
            request without accidentally performing the same operation a second time.
            Passing the same value to a later call to an operation requires that you
            also pass the same value for all other parameters. We recommend that you
            use a [UUID type of value.](https://wikipedia.org/wiki/Universally_unique_identifier).


            If you don''t provide this value, then Amazon Web Services generates a
            random one for you.


            If you retry the operation with the same `ClientToken`, but with different
            parameters, the retry fails with an `IdempotentParameterMismatch` error.'
      required:
      - permissionArn
      - name
    PromotePermissionCreatedFromPolicyResponse:
      type: object
      properties:
        permission:
          $ref: '#/components/schemas/ResourceSharePermissionSummary'
        clientToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The idempotency identifier associated with this request. If
            you want to repeat the same operation in an idempotent manner then you
            must include this value in the `clientToken` request parameter of that
            later call. All other parameters must also have the same values that you
            used in the first call.
    PromoteResourceShareCreatedFromPolicyRequest:
      type: object
      properties:
        resourceShareArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Specifies the [Amazon Resource Name (ARN)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            of the resource share to promote.
      required:
      - resourceShareArn
    PromoteResourceShareCreatedFromPolicyResponse:
      type: object
      properties:
        returnValue:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: A return value of `true` indicates that the request succeeded.
            A value of `false` indicates that the request failed.
    RejectResourceShareInvitationRequest:
      type: object
      properties:
        resourceShareInvitationArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Specifies the [Amazon Resource Name (ARN)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            of the invitation that you want to reject.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'Specifies a unique, case-sensitive identifier that you provide
            to ensure the idempotency of the request. This lets you safely retry the
            request without accidentally performing the same operation a second time.
            Passing the same value to a later call to an operation requires that you
            also pass the same value for all other parameters. We recommend that you
            use a [UUID type of value.](https://wikipedia.org/wiki/Universally_unique_identifier).


            If you don''t provide this value, then Amazon Web Services generates a
            random one for you.


            If you retry the operation with the same `ClientToken`, but with different
            parameters, the retry fails with an `IdempotentParameterMismatch` error.'
      required:
      - resourceShareInvitationArn
    RejectResourceShareInvitationResponse:
      type: object
      properties:
        resourceShareInvitation:
          allOf:
          - $ref: '#/components/schemas/ResourceShareInvitation'
          description: An object that contains the details about the rejected invitation.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The idempotency identifier associated with this request. If
            you want to repeat the same operation in an idempotent manner then you
            must include this value in the `clientToken` request parameter of that
            later call. All other parameters must also have the same values that you
            used in the first call.
    ReplacePermissionAssociationsRequest:
      type: object
      properties:
        fromPermissionArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Specifies the [Amazon Resource Name (ARN)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            of the managed permission that you want to replace.
        fromPermissionVersion:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: Specifies that you want to updated the permissions for only
            those resource shares that use the specified version of the managed permission.
        toPermissionArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'Specifies the ARN of the managed permission that you want
            to associate with resource shares in place of the one specified by `fromPerssionArn`
            and `fromPermissionVersion`.


            The operation always associates the version that is currently the default
            for the specified managed permission.'
        clientToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'Specifies a unique, case-sensitive identifier that you provide
            to ensure the idempotency of the request. This lets you safely retry the
            request without accidentally performing the same operation a second time.
            Passing the same value to a later call to an operation requires that you
            also pass the same value for all other parameters. We recommend that you
            use a [UUID type of value.](https://wikipedia.org/wiki/Universally_unique_identifier).


            If you don''t provide this value, then Amazon Web Services generates a
            random one for you.


            If you retry the operation with the same `ClientToken`, but with different
            parameters, the retry fails with an `IdempotentParameterMismatch` error.'
      required:
      - fromPermissionArn
      - toPermissionArn
    ReplacePermissionAssociationsResponse:
      type: object
      properties:
        replacePermissionAssociationsWork:
          allOf:
          - $ref: '#/components/schemas/ReplacePermissionAssociationsWork'
          description: Specifies a data structure that you can use to track the asynchronous
            tasks that RAM performs to complete this operation. You can use the ListReplacePermissionAssociationsWork
            operation and pass the `id` value returned in this structure.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The idempotency identifier associated with this request. If
            you want to repeat the same operation in an idempotent manner then you
            must include this value in the `clientToken` request parameter of that
            later call. All other parameters must also have the same values that you
            used in the first call.
    ReplacePermissionAssociationsWork:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique identifier for the background task associated with
            one ReplacePermissionAssociations request.
        fromPermissionArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The [Amazon Resource Name (ARN)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            of the managed permission that this background task is replacing.
        fromPermissionVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The version of the managed permission that this background
            task is replacing.
        toPermissionArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ARN of the managed permission that this background task
            is associating with the resource shares in place of the managed permission
            and version specified in `fromPermissionArn` and `fromPermissionVersion`.
        toPermissionVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The version of the managed permission that this background
            task is associating with the resource shares. This is always the version
            that is currently the default for this managed permission.
        status:
          allOf:
          - $ref: '#/components/schemas/ReplacePermissionAssociationsWorkStatus'
          description: "Specifies the current status of the background tasks for the\
            \ specified ID. The output is one of the following strings:\n\n  * `IN_PROGRESS`\n\
            \n  * `COMPLETED`\n\n  * `FAILED`"
        statusMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Specifies the reason for a `FAILED` status. This field is present
            only when there `status` is `FAILED`.
        creationTime:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          description: The date and time when this asynchronous background task was
            created.
        lastUpdatedTime:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          description: The date and time when the status of this background task was
            last updated.
      description: A structure that represents the background work that RAM performs
        when you invoke the ReplacePermissionAssociations operation.
    ReplacePermissionAssociationsWorkIdList:
      type: array
      items:
        $ref: '#/components/schemas/String'
    ReplacePermissionAssociationsWorkList:
      type: array
      items:
        $ref: '#/components/schemas/ReplacePermissionAssociationsWork'
    ReplacePermissionAssociationsWorkStatus:
      type: string
      enum:
      - IN_PROGRESS
      - COMPLETED
      - FAILED
    Resource:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The [Amazon Resource Name (ARN)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            of the resource.
        type:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'The resource type. This takes the form of: `service-code`:`resource-code`,
            and is case-insensitive. For example, an Amazon EC2 Subnet would be represented
            by the string `ec2:subnet`.'
        resourceShareArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The [Amazon Resource Name (ARN)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            of the resource share this resource is associated with.
        resourceGroupArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The [Amazon Resource Name (ARN)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            of the resource group. This value is available only if the resource is
            part of a resource group.
        status:
          allOf:
          - $ref: '#/components/schemas/ResourceStatus'
          description: The current status of the resource.
        statusMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A message about the status of the resource.
        creationTime:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          description: The date and time when the resource was associated with the
            resource share.
        lastUpdatedTime:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          description: The date an time when the association between the resource
            and the resource share was last updated.
        resourceRegionScope:
          allOf:
          - $ref: '#/components/schemas/ResourceRegionScope'
          description: "Specifies the scope of visibility of this resource:\n\n  *\
            \ **REGIONAL** – The resource can be accessed only by using requests that\
            \ target the Amazon Web Services Region in which the resource exists.\n\
            \n  * **GLOBAL** – The resource can be accessed from any Amazon Web Services\
            \ Region."
      description: Describes a resource associated with a resource share in RAM.
    ResourceArnList:
      type: array
      items:
        $ref: '#/components/schemas/String'
    ResourceArnNotFoundException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      required:
      - message
      description: The operation failed because the specified [Amazon Resource Name
        (ARN)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
        was not found.
    ResourceList:
      type: array
      items:
        $ref: '#/components/schemas/Resource'
    ResourceOwner:
      type: string
      enum:
      - SELF
      - OTHER-ACCOUNTS
    ResourceRegionScope:
      type: string
      enum:
      - REGIONAL
      - GLOBAL
    ResourceRegionScopeFilter:
      type: string
      enum:
      - ALL
      - REGIONAL
      - GLOBAL
    ResourceShare:
      type: object
      properties:
        resourceShareArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The [Amazon Resource Name (ARN)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            of the resource share
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the resource share.
        owningAccountId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the Amazon Web Services account that owns the resource
            share.
        allowExternalPrincipals:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: "Indicates whether principals outside your organization in\
            \ Organizations can be associated with a resource share.\n\n  * `True`\
            \ – the resource share can be shared with any Amazon Web Services account.\n\
            \n  * `False` – the resource share can be shared with only accounts in\
            \ the same organization as the account that owns the resource share."
        status:
          allOf:
          - $ref: '#/components/schemas/ResourceShareStatus'
          description: The current status of the resource share.
        statusMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A message about the status of the resource share.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: The tag key and value pairs attached to the resource share.
        creationTime:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          description: The date and time when the resource share was created.
        lastUpdatedTime:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          description: The date and time when the resource share was last updated.
        featureSet:
          allOf:
          - $ref: '#/components/schemas/ResourceShareFeatureSet'
          description: "Indicates what features are available for this resource share.\
            \ This parameter can have one of the following values:\n\n  * **STANDARD**\
            \ – A resource share that supports all functionality. These resource shares\
            \ are visible to all principals you share the resource share with. You\
            \ can modify these resource shares in RAM using the console or APIs. This\
            \ resource share might have been created by RAM, or it might have been\
            \ **CREATED_FROM_POLICY** and then promoted.\n\n  * **CREATED_FROM_POLICY**\
            \ – The customer manually shared a resource by attaching a resource-based\
            \ policy. That policy did not match any existing managed permissions,\
            \ so RAM created this customer managed permission automatically on the\
            \ customer's behalf based on the attached policy document. This type of\
            \ resource share is visible only to the Amazon Web Services account that\
            \ created it. You can't modify it in RAM unless you promote it. For more\
            \ information, see PromoteResourceShareCreatedFromPolicy.\n\n  * **PROMOTING_TO_STANDARD**\
            \ – This resource share was originally `CREATED_FROM_POLICY`, but the\
            \ customer ran the PromoteResourceShareCreatedFromPolicy and that operation\
            \ is still in progress. This value changes to `STANDARD` when complete."
      description: Describes a resource share in RAM.
    ResourceShareArnList:
      type: array
      items:
        $ref: '#/components/schemas/String'
    ResourceShareAssociation:
      type: object
      properties:
        resourceShareArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The [Amazon Resource Name (ARN)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            of the resource share.
        resourceShareName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the resource share.
        associatedEntity:
          allOf:
          - $ref: '#/components/schemas/String'
          description: "The associated entity. This can be either of the following:\n\
            \n  * For a resource association, this is the [Amazon Resource Name (ARN)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)\
            \ of the resource.\n\n  * For principal associations, this is one of the\
            \ following:\n\n    * The ID of an Amazon Web Services account\n\n   \
            \ * The [Amazon Resource Name (ARN)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)\
            \ of an organization in Organizations\n\n    * The ARN of an organizational\
            \ unit (OU) in Organizations\n\n    * The ARN of an IAM role\n\n    *\
            \ The ARN of an IAM user"
        associationType:
          allOf:
          - $ref: '#/components/schemas/ResourceShareAssociationType'
          description: The type of entity included in this association.
        status:
          allOf:
          - $ref: '#/components/schemas/ResourceShareAssociationStatus'
          description: The current status of the association.
        statusMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A message about the status of the association.
        creationTime:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          description: The date and time when the association was created.
        lastUpdatedTime:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          description: The date and time when the association was last updated.
        external:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether the principal belongs to the same organization
            in Organizations as the Amazon Web Services account that owns the resource
            share.
      description: Describes an association between a resource share and either a
        principal or a resource.
    ResourceShareAssociationList:
      type: array
      items:
        $ref: '#/components/schemas/ResourceShareAssociation'
    ResourceShareAssociationStatus:
      type: string
      enum:
      - ASSOCIATING
      - ASSOCIATED
      - FAILED
      - DISASSOCIATING
      - DISASSOCIATED
    ResourceShareAssociationType:
      type: string
      enum:
      - PRINCIPAL
      - RESOURCE
    ResourceShareFeatureSet:
      type: string
      enum:
      - CREATED_FROM_POLICY
      - PROMOTING_TO_STANDARD
      - STANDARD
    ResourceShareInvitation:
      type: object
      properties:
        resourceShareInvitationArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The [Amazon Resource Name (ARN)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            of the invitation.
        resourceShareName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the resource share.
        resourceShareArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The [Amazon Resource Name (ARN)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            of the resource share
        senderAccountId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the Amazon Web Services account that sent the invitation.
        receiverAccountId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the Amazon Web Services account that received the
            invitation.
        invitationTimestamp:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          description: The date and time when the invitation was sent.
        status:
          allOf:
          - $ref: '#/components/schemas/ResourceShareInvitationStatus'
          description: The current status of the invitation.
        resourceShareAssociations:
          allOf:
          - $ref: '#/components/schemas/ResourceShareAssociationList'
          description: To view the resources associated with a pending resource share
            invitation, use ListPendingInvitationResources.
        receiverArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The [Amazon Resource Name (ARN)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            of the IAM user or role that received the invitation.
      description: Describes an invitation for an Amazon Web Services account to join
        a resource share.
    ResourceShareInvitationAlreadyAcceptedException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      required:
      - message
      description: The operation failed because the specified invitation was already
        accepted.
    ResourceShareInvitationAlreadyRejectedException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      required:
      - message
      description: The operation failed because the specified invitation was already
        rejected.
    ResourceShareInvitationArnList:
      type: array
      items:
        $ref: '#/components/schemas/String'
    ResourceShareInvitationArnNotFoundException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      required:
      - message
      description: The operation failed because the specified [Amazon Resource Name
        (ARN)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
        for an invitation was not found.
    ResourceShareInvitationExpiredException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      required:
      - message
      description: The operation failed because the specified invitation is past its
        expiration date and time.
    ResourceShareInvitationList:
      type: array
      items:
        $ref: '#/components/schemas/ResourceShareInvitation'
    ResourceShareInvitationStatus:
      type: string
      enum:
      - PENDING
      - ACCEPTED
      - REJECTED
      - EXPIRED
    ResourceShareLimitExceededException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      required:
      - message
      description: The operation failed because it would exceed the limit for resource
        shares for your account. To view the limits for your Amazon Web Services account,
        see the [RAM page in the Service Quotas console](https://console.aws.amazon.com/servicequotas/home/services/ram/quotas).
    ResourceShareList:
      type: array
      items:
        $ref: '#/components/schemas/ResourceShare'
    ResourceSharePermissionDetail:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The [Amazon Resource Name (ARN)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            of this RAM managed permission.
        version:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The version of the permission described in this response.
        defaultVersion:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Specifies whether the version of the permission represented
            in this response is the default version for this permission.
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of this permission.
        resourceType:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The resource type to which this permission applies.
        permission:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The permission's effect and actions in JSON format. The `effect`
            indicates whether the specified actions are allowed or denied. The `actions`
            list the operations to which the principal is granted or denied access.
        creationTime:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          description: The date and time when the permission was created.
        lastUpdatedTime:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          description: The date and time when the permission was last updated.
        isResourceTypeDefault:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Specifies whether the version of the permission represented
            in this response is the default version for all resources of this resource
            type.
        permissionType:
          allOf:
          - $ref: '#/components/schemas/PermissionType'
          description: "The type of managed permission. This can be one of the following\
            \ values:\n\n  * `AWS_MANAGED` – Amazon Web Services created and manages\
            \ this managed permission. You can associate it with your resource shares,\
            \ but you can't modify it.\n\n  * `CUSTOMER_MANAGED` – You, or another\
            \ principal in your account created this managed permission. You can associate\
            \ it with your resource shares and create new versions that have different\
            \ permissions."
        featureSet:
          allOf:
          - $ref: '#/components/schemas/PermissionFeatureSet'
          description: "Indicates what features are available for this resource share.\
            \ This parameter can have one of the following values:\n\n  * **STANDARD**\
            \ – A resource share that supports all functionality. These resource shares\
            \ are visible to all principals you share the resource share with. You\
            \ can modify these resource shares in RAM using the console or APIs. This\
            \ resource share might have been created by RAM, or it might have been\
            \ **CREATED_FROM_POLICY** and then promoted.\n\n  * **CREATED_FROM_POLICY**\
            \ – The customer manually shared a resource by attaching a resource-based\
            \ policy. That policy did not match any existing managed permissions,\
            \ so RAM created this customer managed permission automatically on the\
            \ customer's behalf based on the attached policy document. This type of\
            \ resource share is visible only to the Amazon Web Services account that\
            \ created it. You can't modify it in RAM unless you promote it. For more\
            \ information, see PromoteResourceShareCreatedFromPolicy.\n\n  * **PROMOTING_TO_STANDARD**\
            \ – This resource share was originally `CREATED_FROM_POLICY`, but the\
            \ customer ran the PromoteResourceShareCreatedFromPolicy and that operation\
            \ is still in progress. This value changes to `STANDARD` when complete."
        status:
          allOf:
          - $ref: '#/components/schemas/PermissionStatus'
          description: "The current status of the association between the permission\
            \ and the resource share. The following are the possible values:\n\n \
            \ * `ATTACHABLE` – This permission or version can be associated with resource\
            \ shares.\n\n  * `UNATTACHABLE` – This permission or version can't currently\
            \ be associated with resource shares.\n\n  * `DELETING` – This permission\
            \ or version is in the process of being deleted.\n\n  * `DELETED` – This\
            \ permission or version is deleted."
        tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: The tag key and value pairs attached to the resource share.
      description: Information about a RAM managed permission.
    ResourceSharePermissionList:
      type: array
      items:
        $ref: '#/components/schemas/ResourceSharePermissionSummary'
    ResourceSharePermissionSummary:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The [Amazon Resource Name (ARN)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            of the permission you want information about.
        version:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The version of the permission associated with this resource
            share.
        defaultVersion:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Specifies whether the version of the managed permission used
            by this resource share is the default version for this managed permission.
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of this managed permission.
        resourceType:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'The type of resource to which this permission applies. This
            takes the form of: `service-code`:`resource-code`, and is case-insensitive.
            For example, an Amazon EC2 Subnet would be represented by the string `ec2:subnet`.'
        status:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The current status of the permission.
        creationTime:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          description: The date and time when the permission was created.
        lastUpdatedTime:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          description: The date and time when the permission was last updated.
        isResourceTypeDefault:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Specifies whether the managed permission associated with this
            resource share is the default managed permission for all resources of
            this resource type.
        permissionType:
          allOf:
          - $ref: '#/components/schemas/PermissionType'
          description: "The type of managed permission. This can be one of the following\
            \ values:\n\n  * `AWS_MANAGED` – Amazon Web Services created and manages\
            \ this managed permission. You can associate it with your resource shares,\
            \ but you can't modify it.\n\n  * `CUSTOMER_MANAGED` – You, or another\
            \ principal in your account created this managed permission. You can associate\
            \ it with your resource shares and create new versions that have different\
            \ permissions."
        featureSet:
          allOf:
          - $ref: '#/components/schemas/PermissionFeatureSet'
          description: "Indicates what features are available for this resource share.\
            \ This parameter can have one of the following values:\n\n  * **STANDARD**\
            \ – A resource share that supports all functionality. These resource shares\
            \ are visible to all principals you share the resource share with. You\
            \ can modify these resource shares in RAM using the console or APIs. This\
            \ resource share might have been created by RAM, or it might have been\
            \ **CREATED_FROM_POLICY** and then promoted.\n\n  * **CREATED_FROM_POLICY**\
            \ – The customer manually shared a resource by attaching a resource-based\
            \ policy. That policy did not match any existing managed permissions,\
            \ so RAM created this customer managed permission automatically on the\
            \ customer's behalf based on the attached policy document. This type of\
            \ resource share is visible only to the Amazon Web Services account that\
            \ created it. You can't modify it in RAM unless you promote it. For more\
            \ information, see PromoteResourceShareCreatedFromPolicy.\n\n  * **PROMOTING_TO_STANDARD**\
            \ – This resource share was originally `CREATED_FROM_POLICY`, but the\
            \ customer ran the PromoteResourceShareCreatedFromPolicy and that operation\
            \ is still in progress. This value changes to `STANDARD` when complete."
        tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: A list of the tag key value pairs currently attached to the
            permission.
      description: Information about an RAM permission.
    ResourceShareStatus:
      type: string
      enum:
      - PENDING
      - ACTIVE
      - FAILED
      - DELETING
      - DELETED
    ResourceStatus:
      type: string
      enum:
      - AVAILABLE
      - ZONAL_RESOURCE_INACCESSIBLE
      - LIMIT_EXCEEDED
      - UNAVAILABLE
      - PENDING
    ServerInternalException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      required:
      - message
      description: The operation failed because the service could not respond to the
        request due to an internal problem. Try again later.
    ServiceNameAndResourceType:
      type: object
      properties:
        resourceType:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'The type of the resource. This takes the form of: `service-code`:`resource-code`,
            and is case-insensitive. For example, an Amazon EC2 Subnet would be represented
            by the string `ec2:subnet`.'
        serviceName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the Amazon Web Services service to which resources
            of this type belong.
        resourceRegionScope:
          allOf:
          - $ref: '#/components/schemas/ResourceRegionScope'
          description: "Specifies the scope of visibility of resources of this type:\n\
            \n  * **REGIONAL** – The resource can be accessed only by using requests\
            \ that target the Amazon Web Services Region in which the resource exists.\n\
            \n  * **GLOBAL** – The resource can be accessed from any Amazon Web Services\
            \ Region."
      description: Information about a shareable resource type and the Amazon Web
        Services service to which resources of that type belong.
    ServiceNameAndResourceTypeList:
      type: array
      items:
        $ref: '#/components/schemas/ServiceNameAndResourceType'
    ServiceUnavailableException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      required:
      - message
      description: The operation failed because the service isn't available. Try again
        later.
    SetDefaultPermissionVersionRequest:
      type: object
      properties:
        permissionArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Specifies the [Amazon Resource Name (ARN)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            of the customer managed permission whose default version you want to change.
        permissionVersion:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: Specifies the version number that you want to designate as
            the default for customer managed permission. To see a list of all available
            version numbers, use ListPermissionVersions.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'Specifies a unique, case-sensitive identifier that you provide
            to ensure the idempotency of the request. This lets you safely retry the
            request without accidentally performing the same operation a second time.
            Passing the same value to a later call to an operation requires that you
            also pass the same value for all other parameters. We recommend that you
            use a [UUID type of value.](https://wikipedia.org/wiki/Universally_unique_identifier).


            If you don''t provide this value, then Amazon Web Services generates a
            random one for you.


            If you retry the operation with the same `ClientToken`, but with different
            parameters, the retry fails with an `IdempotentParameterMismatch` error.'
      required:
      - permissionArn
      - permissionVersion
    SetDefaultPermissionVersionResponse:
      type: object
      properties:
        returnValue:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: A boolean value that indicates whether the operation was successful.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The idempotency identifier associated with this request. If
            you want to repeat the same operation in an idempotent manner then you
            must include this value in the `clientToken` request parameter of that
            later call. All other parameters must also have the same values that you
            used in the first call.
    SourceArnOrAccountList:
      type: array
      items:
        $ref: '#/components/schemas/String'
    String:
      type: string
    Tag:
      type: object
      properties:
        key:
          allOf:
          - $ref: '#/components/schemas/TagKey'
          description: The key, or name, attached to the tag. Every tag must have
            a key. Key names are case sensitive.
        value:
          allOf:
          - $ref: '#/components/schemas/TagValue'
          description: The string value attached to the tag. The value can be an empty
            string. Key values are case sensitive.
      description: 'A structure containing a tag. A tag is metadata that you can attach
        to your resources to help organize and categorize them. You can also use them
        to help you secure your resources. For more information, see [Controlling
        access to Amazon Web Services resources using tags](https://docs.aws.amazon.com/IAM/latest/UserGuide/access_tags.html).


        For more information about tags, see [Tagging Amazon Web Services resources](https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html)
        in the _Amazon Web Services General Reference Guide_.'
    TagFilter:
      type: object
      properties:
        tagKey:
          allOf:
          - $ref: '#/components/schemas/TagKey'
          description: The tag key. This must have a valid string value and can't
            be empty.
        tagValues:
          allOf:
          - $ref: '#/components/schemas/TagValueList'
          description: A list of zero or more tag values. If no values are provided,
            then the filter matches any tag with the specified key, regardless of
            its value.
      description: A tag key and optional list of possible values that you can use
        to filter results for tagged resources.
    TagFilters:
      type: array
      items:
        $ref: '#/components/schemas/TagFilter'
    TagKey:
      type: string
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
    TagLimitExceededException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      required:
      - message
      description: The operation failed because it would exceed the limit for tags
        for your Amazon Web Services account.
    TagList:
      type: array
      items:
        $ref: '#/components/schemas/Tag'
    TagPolicyViolationException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      required:
      - message
      description: The operation failed because the specified tag key is a reserved
        word and can't be used.
    TagResourceRequest:
      type: object
      properties:
        resourceShareArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Specifies the [Amazon Resource Name (ARN)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            of the resource share that you want to add tags to. You must specify _either_
            `resourceShareArn`, or `resourceArn`, but not both.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: A list of one or more tag key and value pairs. The tag key
            must be present and not be an empty string. The tag value must be present
            but can be an empty string.
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Specifies the [Amazon Resource Name (ARN)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            of the managed permission that you want to add tags to. You must specify
            _either_ `resourceArn`, or `resourceShareArn`, but not both.
      required:
      - tags
    TagResourceResponse:
      type: object
      properties: {}
    TagValue:
      type: string
    TagValueList:
      type: array
      items:
        $ref: '#/components/schemas/TagValue'
    ThrottlingException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      required:
      - message
      description: The operation failed because it exceeded the rate at which you
        are allowed to perform this operation. Please try again later.
    UnknownResourceException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      required:
      - message
      description: The operation failed because a specified resource couldn't be found.
    UnmatchedPolicyPermissionException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      required:
      - message
      description: There isn't an existing managed permission defined in RAM that
        has the same IAM permissions as the resource-based policy attached to the
        resource. You should first run PromotePermissionCreatedFromPolicy to create
        that managed permission.
    UntagResourceRequest:
      type: object
      properties:
        resourceShareArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Specifies the [Amazon Resource Name (ARN)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            of the resource share that you want to remove tags from. The tags are
            removed from the resource share, not the resources in the resource share.
            You must specify either `resourceShareArn`, or `resourceArn`, but not
            both.
        tagKeys:
          allOf:
          - $ref: '#/components/schemas/TagKeyList'
          description: Specifies a list of one or more tag keys that you want to remove.
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Specifies the [Amazon Resource Name (ARN)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            of the managed permission that you want to remove tags from. You must
            specify either `resourceArn`, or `resourceShareArn`, but not both.
      required:
      - tagKeys
    UntagResourceResponse:
      type: object
      properties: {}
    UpdateResourceShareRequest:
      type: object
      properties:
        resourceShareArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Specifies the [Amazon Resource Name (ARN)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html)
            of the resource share that you want to modify.
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: If specified, the new name that you want to attach to the resource
            share.
        allowExternalPrincipals:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Specifies whether principals outside your organization in Organizations
            can be associated with a resource share.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'Specifies a unique, case-sensitive identifier that you provide
            to ensure the idempotency of the request. This lets you safely retry the
            request without accidentally performing the same operation a second time.
            Passing the same value to a later call to an operation requires that you
            also pass the same value for all other parameters. We recommend that you
            use a [UUID type of value.](https://wikipedia.org/wiki/Universally_unique_identifier).


            If you don''t provide this value, then Amazon Web Services generates a
            random one for you.


            If you retry the operation with the same `ClientToken`, but with different
            parameters, the retry fails with an `IdempotentParameterMismatch` error.'
      required:
      - resourceShareArn
    UpdateResourceShareResponse:
      type: object
      properties:
        resourceShare:
          allOf:
          - $ref: '#/components/schemas/ResourceShare'
          description: Information about the resource share.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The idempotency identifier associated with this request. If
            you want to repeat the same operation in an idempotent manner then you
            must include this value in the `clientToken` request parameter of that
            later call. All other parameters must also have the same values that you
            used in the first call.
