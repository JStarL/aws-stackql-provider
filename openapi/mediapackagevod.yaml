openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: mediapackage_vod
  x-aws-serviceName: mediapackagevod
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-07'
  version: '2018-11-07'
  title: AWS Elemental MediaPackage VOD
  description: |-
    AWS Elemental MediaPackage VOD
servers:
- description: The AWS Elemental MediaPackage VOD regional endpoint
  url: https://mediapackage-vod.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths:
  /packaging_groups/{Id}/configure_logs:
    put:
      operationId: ConfigureLogs
      description: |-
        Changes the packaging group's properities to configure log subscription
      parameters:
      - name: Id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                EgressAccessLogs:
                  $ref: '#/components/schemas/EgressAccessLogs'
      responses:
        '200': {}
        '403':
          description: |-
            The client is not authorized to access the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            An unexpected error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '503':
          description: |-
            An unexpected error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client has exceeded their resource or throttling limits.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '422':
          description: |-
            The parameters sent in the request are not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
  /assets:
    post:
      operationId: CreateAsset
      description: |-
        Creates a new MediaPackage VOD Asset resource.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Id:
                  $ref: '#/components/schemas/__string'
                PackagingGroupId:
                  $ref: '#/components/schemas/__string'
                ResourceId:
                  $ref: '#/components/schemas/__string'
                SourceArn:
                  $ref: '#/components/schemas/__string'
                SourceRoleArn:
                  $ref: '#/components/schemas/__string'
                Tags:
                  $ref: '#/components/schemas/Tags'
      responses:
        '200': {}
        '403':
          description: |-
            The client is not authorized to access the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            An unexpected error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '503':
          description: |-
            An unexpected error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client has exceeded their resource or throttling limits.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '422':
          description: |-
            The parameters sent in the request are not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
    get:
      operationId: ListAssets
      description: |-
        Returns a collection of MediaPackage VOD Asset resources.
      parameters:
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      - name: packagingGroupId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '403':
          description: |-
            The client is not authorized to access the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            An unexpected error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '503':
          description: |-
            An unexpected error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client has exceeded their resource or throttling limits.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '422':
          description: |-
            The parameters sent in the request are not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
  /packaging_configurations:
    post:
      operationId: CreatePackagingConfiguration
      description: |-
        Creates a new MediaPackage VOD PackagingConfiguration resource.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                CmafPackage:
                  $ref: '#/components/schemas/CmafPackage'
                DashPackage:
                  $ref: '#/components/schemas/DashPackage'
                HlsPackage:
                  $ref: '#/components/schemas/HlsPackage'
                Id:
                  $ref: '#/components/schemas/__string'
                MssPackage:
                  $ref: '#/components/schemas/MssPackage'
                PackagingGroupId:
                  $ref: '#/components/schemas/__string'
                Tags:
                  $ref: '#/components/schemas/Tags'
      responses:
        '200': {}
        '403':
          description: |-
            The client is not authorized to access the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            An unexpected error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '503':
          description: |-
            An unexpected error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client has exceeded their resource or throttling limits.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '422':
          description: |-
            The parameters sent in the request are not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
    get:
      operationId: ListPackagingConfigurations
      description: |-
        Returns a collection of MediaPackage VOD PackagingConfiguration resources.
      parameters:
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      - name: packagingGroupId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '403':
          description: |-
            The client is not authorized to access the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            An unexpected error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '503':
          description: |-
            An unexpected error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client has exceeded their resource or throttling limits.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '422':
          description: |-
            The parameters sent in the request are not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
  /packaging_groups:
    post:
      operationId: CreatePackagingGroup
      description: |-
        Creates a new MediaPackage VOD PackagingGroup resource.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Authorization:
                  $ref: '#/components/schemas/Authorization'
                EgressAccessLogs:
                  $ref: '#/components/schemas/EgressAccessLogs'
                Id:
                  $ref: '#/components/schemas/__string'
                Tags:
                  $ref: '#/components/schemas/Tags'
      responses:
        '200': {}
        '403':
          description: |-
            The client is not authorized to access the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            An unexpected error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '503':
          description: |-
            An unexpected error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client has exceeded their resource or throttling limits.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '422':
          description: |-
            The parameters sent in the request are not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
    get:
      operationId: ListPackagingGroups
      description: |-
        Returns a collection of MediaPackage VOD PackagingGroup resources.
      parameters:
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '403':
          description: |-
            The client is not authorized to access the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            An unexpected error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '503':
          description: |-
            An unexpected error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client has exceeded their resource or throttling limits.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '422':
          description: |-
            The parameters sent in the request are not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
  /assets/{Id}:
    delete:
      operationId: DeleteAsset
      description: |-
        Deletes an existing MediaPackage VOD Asset resource.
      parameters:
      - name: Id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '202': {}
        '403':
          description: |-
            The client is not authorized to access the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            An unexpected error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '503':
          description: |-
            An unexpected error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client has exceeded their resource or throttling limits.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '422':
          description: |-
            The parameters sent in the request are not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
    get:
      operationId: DescribeAsset
      description: |-
        Returns a description of a MediaPackage VOD Asset resource.
      parameters:
      - name: Id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '403':
          description: |-
            The client is not authorized to access the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            An unexpected error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '503':
          description: |-
            An unexpected error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client has exceeded their resource or throttling limits.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '422':
          description: |-
            The parameters sent in the request are not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
  /packaging_configurations/{Id}:
    delete:
      operationId: DeletePackagingConfiguration
      description: |-
        Deletes a MediaPackage VOD PackagingConfiguration resource.
      parameters:
      - name: Id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '202': {}
        '403':
          description: |-
            The client is not authorized to access the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            An unexpected error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '503':
          description: |-
            An unexpected error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client has exceeded their resource or throttling limits.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '422':
          description: |-
            The parameters sent in the request are not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
    get:
      operationId: DescribePackagingConfiguration
      description: |-
        Returns a description of a MediaPackage VOD PackagingConfiguration resource.
      parameters:
      - name: Id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '403':
          description: |-
            The client is not authorized to access the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            An unexpected error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '503':
          description: |-
            An unexpected error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client has exceeded their resource or throttling limits.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '422':
          description: |-
            The parameters sent in the request are not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
  /packaging_groups/{Id}:
    delete:
      operationId: DeletePackagingGroup
      description: |-
        Deletes a MediaPackage VOD PackagingGroup resource.
      parameters:
      - name: Id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '202': {}
        '403':
          description: |-
            The client is not authorized to access the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            An unexpected error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '503':
          description: |-
            An unexpected error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client has exceeded their resource or throttling limits.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '422':
          description: |-
            The parameters sent in the request are not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
    get:
      operationId: DescribePackagingGroup
      description: |-
        Returns a description of a MediaPackage VOD PackagingGroup resource.
      parameters:
      - name: Id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '403':
          description: |-
            The client is not authorized to access the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            An unexpected error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '503':
          description: |-
            An unexpected error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client has exceeded their resource or throttling limits.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '422':
          description: |-
            The parameters sent in the request are not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
    put:
      operationId: UpdatePackagingGroup
      description: |-
        Updates a specific packaging group. You can't change the id attribute or any other system-generated attributes.
      parameters:
      - name: Id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Authorization:
                  $ref: '#/components/schemas/Authorization'
      responses:
        '200': {}
        '403':
          description: |-
            The client is not authorized to access the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            An unexpected error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '503':
          description: |-
            An unexpected error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client has exceeded their resource or throttling limits.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '422':
          description: |-
            The parameters sent in the request are not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
  /tags/{ResourceArn}:
    get:
      operationId: ListTagsForResource
      description: |-
        Returns a list of the tags assigned to the specified resource.
      parameters:
      - name: ResourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
    post:
      operationId: TagResource
      description: |-
        Adds tags to the specified resource. You can specify one or more tags to add.
      parameters:
      - name: ResourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Tags:
                  $ref: '#/components/schemas/__mapOf__string'
      responses:
        '204': {}
    delete:
      operationId: UntagResource
      description: |-
        Removes tags from the specified resource. You can specify one or more tags to remove.
      parameters:
      - name: ResourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: tagKeys
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/__listOf__string'
      responses:
        '204': {}
components:
  schemas:
    AdMarkers:
      type: string
      enum:
      - NONE
      - SCTE35_ENHANCED
      - PASSTHROUGH
    AssetShallow:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN of the Asset.
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The time the Asset was initially submitted for Ingest.
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the Asset.
        PackagingGroupId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the PackagingGroup for the Asset.
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The resource ID to include in SPEKE key requests.
        SourceArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: ARN of the source object in S3.
        SourceRoleArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The IAM role ARN used to access the source S3 bucket.
        Tags:
          $ref: '#/components/schemas/Tags'
      description: A MediaPackage VOD Asset resource.
    Authorization:
      type: object
      properties:
        CdnIdentifierSecret:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) for the secret in AWS Secrets
            Manager that is used for CDN authorization.
        SecretsRoleArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) for the IAM role that allows
            MediaPackage to communicate with AWS Secrets Manager.
      required:
      - CdnIdentifierSecret
      - SecretsRoleArn
      description: CDN Authorization credentials
    CmafEncryption:
      type: object
      properties:
        ConstantInitializationVector:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: An optional 128-bit, 16-byte hex value represented by a 32-character
            string, used in conjunction with the key for encrypting blocks. If you
            don't specify a value, then MediaPackage creates the constant initialization
            vector (IV).
        SpekeKeyProvider:
          $ref: '#/components/schemas/SpekeKeyProvider'
      required:
      - SpekeKeyProvider
      description: A CMAF encryption configuration.
    CmafPackage:
      type: object
      properties:
        Encryption:
          $ref: '#/components/schemas/CmafEncryption'
        HlsManifests:
          allOf:
          - $ref: '#/components/schemas/__listOfHlsManifest'
          description: A list of HLS manifest configurations.
        IncludeEncoderConfigurationInSegments:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: When includeEncoderConfigurationInSegments is set to true,
            MediaPackage places your encoder's Sequence Parameter Set (SPS), Picture
            Parameter Set (PPS), and Video Parameter Set (VPS) metadata in every video
            segment instead of in the init fragment. This lets you use different SPS/PPS/VPS
            settings for your assets during content playback.
        SegmentDurationSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: Duration (in seconds) of each fragment. Actual fragments will
            be rounded to the nearest multiple of the source fragment duration.
      required:
      - HlsManifests
      description: A CMAF packaging configuration.
    ConfigureLogsRequest:
      type: object
      properties:
        EgressAccessLogs:
          $ref: '#/components/schemas/EgressAccessLogs'
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of a MediaPackage VOD PackagingGroup resource.
      required:
      - Id
      description: The option to configure log subscription.
    ConfigureLogsResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN of the PackagingGroup.
        Authorization:
          $ref: '#/components/schemas/Authorization'
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The time the PackagingGroup was created.
        DomainName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The fully qualified domain name for Assets in the PackagingGroup.
        EgressAccessLogs:
          $ref: '#/components/schemas/EgressAccessLogs'
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the PackagingGroup.
        Tags:
          $ref: '#/components/schemas/Tags'
    CreateAssetRequest:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the Asset.
        PackagingGroupId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the PackagingGroup for the Asset.
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The resource ID to include in SPEKE key requests.
        SourceArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: ARN of the source object in S3.
        SourceRoleArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The IAM role ARN used to access the source S3 bucket.
        Tags:
          $ref: '#/components/schemas/Tags'
      required:
      - Id
      - PackagingGroupId
      - SourceArn
      - SourceRoleArn
      description: A new MediaPackage VOD Asset configuration.
    CreateAssetResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN of the Asset.
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The time the Asset was initially submitted for Ingest.
        EgressEndpoints:
          allOf:
          - $ref: '#/components/schemas/__listOfEgressEndpoint'
          description: The list of egress endpoints available for the Asset.
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the Asset.
        PackagingGroupId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the PackagingGroup for the Asset.
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The resource ID to include in SPEKE key requests.
        SourceArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: ARN of the source object in S3.
        SourceRoleArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The IAM role_arn used to access the source S3 bucket.
        Tags:
          $ref: '#/components/schemas/Tags'
    CreatePackagingConfigurationRequest:
      type: object
      properties:
        CmafPackage:
          $ref: '#/components/schemas/CmafPackage'
        DashPackage:
          $ref: '#/components/schemas/DashPackage'
        HlsPackage:
          $ref: '#/components/schemas/HlsPackage'
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the PackagingConfiguration.
        MssPackage:
          $ref: '#/components/schemas/MssPackage'
        PackagingGroupId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of a PackagingGroup.
        Tags:
          $ref: '#/components/schemas/Tags'
      required:
      - Id
      - PackagingGroupId
      description: A new MediaPackage VOD PackagingConfiguration resource configuration.
    CreatePackagingConfigurationResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN of the PackagingConfiguration.
        CmafPackage:
          $ref: '#/components/schemas/CmafPackage'
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The time the PackagingConfiguration was created.
        DashPackage:
          $ref: '#/components/schemas/DashPackage'
        HlsPackage:
          $ref: '#/components/schemas/HlsPackage'
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the PackagingConfiguration.
        MssPackage:
          $ref: '#/components/schemas/MssPackage'
        PackagingGroupId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of a PackagingGroup.
        Tags:
          $ref: '#/components/schemas/Tags'
    CreatePackagingGroupRequest:
      type: object
      properties:
        Authorization:
          $ref: '#/components/schemas/Authorization'
        EgressAccessLogs:
          $ref: '#/components/schemas/EgressAccessLogs'
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the PackagingGroup.
        Tags:
          $ref: '#/components/schemas/Tags'
      required:
      - Id
      description: A new MediaPackage VOD PackagingGroup resource configuration.
    CreatePackagingGroupResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN of the PackagingGroup.
        Authorization:
          $ref: '#/components/schemas/Authorization'
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The time the PackagingGroup was created.
        DomainName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The fully qualified domain name for Assets in the PackagingGroup.
        EgressAccessLogs:
          $ref: '#/components/schemas/EgressAccessLogs'
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the PackagingGroup.
        Tags:
          $ref: '#/components/schemas/Tags'
    DashEncryption:
      type: object
      properties:
        SpekeKeyProvider:
          $ref: '#/components/schemas/SpekeKeyProvider'
      required:
      - SpekeKeyProvider
      description: A Dynamic Adaptive Streaming over HTTP (DASH) encryption configuration.
    DashManifest:
      type: object
      properties:
        ManifestLayout:
          allOf:
          - $ref: '#/components/schemas/ManifestLayout'
          description: Determines the position of some tags in the Media Presentation
            Description (MPD). When set to FULL, elements like SegmentTemplate and
            ContentProtection are included in each Representation. When set to COMPACT,
            duplicate elements are combined and presented at the AdaptationSet level.
        ManifestName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: An optional string to include in the name of the manifest.
        MinBufferTimeSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: Minimum duration (in seconds) that a player will buffer media
            before starting the presentation.
        Profile:
          allOf:
          - $ref: '#/components/schemas/Profile'
          description: The Dynamic Adaptive Streaming over HTTP (DASH) profile type.
            When set to "HBBTV_1_5", HbbTV 1.5 compliant output is enabled.
        ScteMarkersSource:
          allOf:
          - $ref: '#/components/schemas/ScteMarkersSource'
          description: The source of scte markers used. When set to SEGMENTS, the
            scte markers are sourced from the segments of the ingested content. When
            set to MANIFEST, the scte markers are sourced from the manifest of the
            ingested content.
        StreamSelection:
          $ref: '#/components/schemas/StreamSelection'
      description: A DASH manifest configuration.
    DashPackage:
      type: object
      properties:
        DashManifests:
          allOf:
          - $ref: '#/components/schemas/__listOfDashManifest'
          description: A list of DASH manifest configurations.
        Encryption:
          $ref: '#/components/schemas/DashEncryption'
        IncludeEncoderConfigurationInSegments:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: When includeEncoderConfigurationInSegments is set to true,
            MediaPackage places your encoder's Sequence Parameter Set (SPS), Picture
            Parameter Set (PPS), and Video Parameter Set (VPS) metadata in every video
            segment instead of in the init fragment. This lets you use different SPS/PPS/VPS
            settings for your assets during content playback.
        IncludeIframeOnlyStream:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: When enabled, an I-Frame only stream will be included in the
            output.
        PeriodTriggers:
          allOf:
          - $ref: '#/components/schemas/__listOf__PeriodTriggersElement'
          description: A list of triggers that controls when the outgoing Dynamic
            Adaptive Streaming over HTTP (DASH) Media Presentation Description (MPD)
            will be partitioned into multiple periods. If empty, the content will
            not be partitioned into more than one period. If the list contains "ADS",
            new periods will be created where the Asset contains SCTE-35 ad markers.
        SegmentDurationSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: Duration (in seconds) of each segment. Actual segments will
            be rounded to the nearest multiple of the source segment duration.
        SegmentTemplateFormat:
          allOf:
          - $ref: '#/components/schemas/SegmentTemplateFormat'
          description: Determines the type of SegmentTemplate included in the Media
            Presentation Description (MPD). When set to NUMBER_WITH_TIMELINE, a full
            timeline is presented in each SegmentTemplate, with $Number$ media URLs.
            When set to TIME_WITH_TIMELINE, a full timeline is presented in each SegmentTemplate,
            with $Time$ media URLs. When set to NUMBER_WITH_DURATION, only a duration
            is included in each SegmentTemplate, with $Number$ media URLs.
      required:
      - DashManifests
      description: A Dynamic Adaptive Streaming over HTTP (DASH) packaging configuration.
    DeleteAssetRequest:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the MediaPackage VOD Asset resource to delete.
      required:
      - Id
    DeleteAssetResponse:
      type: object
      properties: {}
    DeletePackagingConfigurationRequest:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the MediaPackage VOD PackagingConfiguration resource
            to delete.
      required:
      - Id
    DeletePackagingConfigurationResponse:
      type: object
      properties: {}
    DeletePackagingGroupRequest:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the MediaPackage VOD PackagingGroup resource to delete.
      required:
      - Id
    DeletePackagingGroupResponse:
      type: object
      properties: {}
    DescribeAssetRequest:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of an MediaPackage VOD Asset resource.
      required:
      - Id
    DescribeAssetResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN of the Asset.
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The time the Asset was initially submitted for Ingest.
        EgressEndpoints:
          allOf:
          - $ref: '#/components/schemas/__listOfEgressEndpoint'
          description: The list of egress endpoints available for the Asset.
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the Asset.
        PackagingGroupId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the PackagingGroup for the Asset.
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The resource ID to include in SPEKE key requests.
        SourceArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: ARN of the source object in S3.
        SourceRoleArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The IAM role_arn used to access the source S3 bucket.
        Tags:
          $ref: '#/components/schemas/Tags'
    DescribePackagingConfigurationRequest:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of a MediaPackage VOD PackagingConfiguration resource.
      required:
      - Id
    DescribePackagingConfigurationResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN of the PackagingConfiguration.
        CmafPackage:
          $ref: '#/components/schemas/CmafPackage'
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The time the PackagingConfiguration was created.
        DashPackage:
          $ref: '#/components/schemas/DashPackage'
        HlsPackage:
          $ref: '#/components/schemas/HlsPackage'
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the PackagingConfiguration.
        MssPackage:
          $ref: '#/components/schemas/MssPackage'
        PackagingGroupId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of a PackagingGroup.
        Tags:
          $ref: '#/components/schemas/Tags'
    DescribePackagingGroupRequest:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of a MediaPackage VOD PackagingGroup resource.
      required:
      - Id
    DescribePackagingGroupResponse:
      type: object
      properties:
        ApproximateAssetCount:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The approximate asset count of the PackagingGroup.
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN of the PackagingGroup.
        Authorization:
          $ref: '#/components/schemas/Authorization'
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The time the PackagingGroup was created.
        DomainName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The fully qualified domain name for Assets in the PackagingGroup.
        EgressAccessLogs:
          $ref: '#/components/schemas/EgressAccessLogs'
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the PackagingGroup.
        Tags:
          $ref: '#/components/schemas/Tags'
    EgressAccessLogs:
      type: object
      properties:
        LogGroupName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Customize the log group name.
      description: Configure egress access logging.
    EgressEndpoint:
      type: object
      properties:
        PackagingConfigurationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the PackagingConfiguration being applied to the Asset.
        Status:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The current processing status of the asset used for the packaging
            configuration. The status can be either QUEUED, PROCESSING, PLAYABLE,
            or FAILED. Status information won't be available for most assets ingested
            before 2021-09-30.
        Url:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The URL of the parent manifest for the repackaged Asset.
      description: The endpoint URL used to access an Asset using one PackagingConfiguration.
    EncryptionContractConfiguration:
      type: object
      properties:
        PresetSpeke20Audio:
          allOf:
          - $ref: '#/components/schemas/PresetSpeke20Audio'
          description: A collection of audio encryption presets.
        PresetSpeke20Video:
          allOf:
          - $ref: '#/components/schemas/PresetSpeke20Video'
          description: A collection of video encryption presets.
      required:
      - PresetSpeke20Audio
      - PresetSpeke20Video
      description: 'Use encryptionContractConfiguration to configure one or more content
        encryption keys for your endpoints that use SPEKE 2.0. The encryption contract
        defines which content keys are used to encrypt the audio and video tracks
        in your stream. To configure the encryption contract, specify which audio
        and video encryption presets to use. Note the following considerations when
        using encryptionContractConfiguration: encryptionContractConfiguration can
        be used for DASH endpoints that use SPEKE 2.0. SPEKE 2.0 relies on the CPIX
        2.3 specification. You must disable key rotation for this endpoint by setting
        keyRotationIntervalSeconds to 0.'
    EncryptionMethod:
      type: string
      enum:
      - AES_128
      - SAMPLE_AES
    ForbiddenException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/__string'
      description: The client is not authorized to access the requested resource.
    HlsEncryption:
      type: object
      properties:
        ConstantInitializationVector:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A constant initialization vector for encryption (optional).
            When not specified the initialization vector will be periodically rotated.
        EncryptionMethod:
          allOf:
          - $ref: '#/components/schemas/EncryptionMethod'
          description: The encryption method to use.
        SpekeKeyProvider:
          $ref: '#/components/schemas/SpekeKeyProvider'
      required:
      - SpekeKeyProvider
      description: An HTTP Live Streaming (HLS) encryption configuration.
    HlsManifest:
      type: object
      properties:
        AdMarkers:
          allOf:
          - $ref: '#/components/schemas/AdMarkers'
          description: This setting controls how ad markers are included in the packaged
            OriginEndpoint. "NONE" will omit all SCTE-35 ad markers from the output.
            "PASSTHROUGH" causes the manifest to contain a copy of the SCTE-35 ad
            markers (comments) taken directly from the input HTTP Live Streaming (HLS)
            manifest. "SCTE35_ENHANCED" generates ad markers and blackout tags based
            on SCTE-35 messages in the input source.
        IncludeIframeOnlyStream:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: When enabled, an I-Frame only stream will be included in the
            output.
        ManifestName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: An optional string to include in the name of the manifest.
        ProgramDateTimeIntervalSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The interval (in seconds) between each EXT-X-PROGRAM-DATE-TIME
            tag inserted into manifests. Additionally, when an interval is specified
            ID3Timed Metadata messages will be generated every 5 seconds using the
            ingest time of the content. If the interval is not specified, or set to
            0, then no EXT-X-PROGRAM-DATE-TIME tags will be inserted into manifests
            and no ID3Timed Metadata messages will be generated. Note that irrespective
            of this parameter, if any ID3 Timed Metadata is found in HTTP Live Streaming
            (HLS) input, it will be passed through to HLS output.
        RepeatExtXKey:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: When enabled, the EXT-X-KEY tag will be repeated in output
            manifests.
        StreamSelection:
          $ref: '#/components/schemas/StreamSelection'
      description: An HTTP Live Streaming (HLS) manifest configuration.
    HlsPackage:
      type: object
      properties:
        Encryption:
          $ref: '#/components/schemas/HlsEncryption'
        HlsManifests:
          allOf:
          - $ref: '#/components/schemas/__listOfHlsManifest'
          description: A list of HLS manifest configurations.
        IncludeDvbSubtitles:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: When enabled, MediaPackage passes through digital video broadcasting
            (DVB) subtitles into the output.
        SegmentDurationSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: Duration (in seconds) of each fragment. Actual fragments will
            be rounded to the nearest multiple of the source fragment duration.
        UseAudioRenditionGroup:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: When enabled, audio streams will be placed in rendition groups
            in the output.
      required:
      - HlsManifests
      description: An HTTP Live Streaming (HLS) packaging configuration.
    InternalServerErrorException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/__string'
      description: An unexpected error occurred.
    ListAssetsRequest:
      type: object
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: Upper bound on number of records to return.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A token used to resume pagination from the end of a previous
            request.
        PackagingGroupId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Returns Assets associated with the specified PackagingGroup.
    ListAssetsResponse:
      type: object
      properties:
        Assets:
          allOf:
          - $ref: '#/components/schemas/__listOfAssetShallow'
          description: A list of MediaPackage VOD Asset resources.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A token that can be used to resume pagination from the end
            of the collection.
    ListPackagingConfigurationsRequest:
      type: object
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: Upper bound on number of records to return.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A token used to resume pagination from the end of a previous
            request.
        PackagingGroupId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Returns MediaPackage VOD PackagingConfigurations associated
            with the specified PackagingGroup.
    ListPackagingConfigurationsResponse:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A token that can be used to resume pagination from the end
            of the collection.
        PackagingConfigurations:
          allOf:
          - $ref: '#/components/schemas/__listOfPackagingConfiguration'
          description: A list of MediaPackage VOD PackagingConfiguration resources.
    ListPackagingGroupsRequest:
      type: object
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: Upper bound on number of records to return.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A token used to resume pagination from the end of a previous
            request.
    ListPackagingGroupsResponse:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A token that can be used to resume pagination from the end
            of the collection.
        PackagingGroups:
          allOf:
          - $ref: '#/components/schemas/__listOfPackagingGroup'
          description: A list of MediaPackage VOD PackagingGroup resources.
    ListTagsForResourceRequest:
      type: object
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) for the resource. You can get
            this from the response to any request to the resource.
      required:
      - ResourceArn
    ListTagsForResourceResponse:
      type: object
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/__mapOf__string'
          description: A collection of tags associated with a resource
    ManifestLayout:
      type: string
      enum:
      - FULL
      - COMPACT
    MaxResults:
      type: integer
      minimum: 1
      maximum: 1000
    MssEncryption:
      type: object
      properties:
        SpekeKeyProvider:
          $ref: '#/components/schemas/SpekeKeyProvider'
      required:
      - SpekeKeyProvider
      description: A Microsoft Smooth Streaming (MSS) encryption configuration.
    MssManifest:
      type: object
      properties:
        ManifestName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: An optional string to include in the name of the manifest.
        StreamSelection:
          $ref: '#/components/schemas/StreamSelection'
      description: A Microsoft Smooth Streaming (MSS) manifest configuration.
    MssPackage:
      type: object
      properties:
        Encryption:
          $ref: '#/components/schemas/MssEncryption'
        MssManifests:
          allOf:
          - $ref: '#/components/schemas/__listOfMssManifest'
          description: A list of MSS manifest configurations.
        SegmentDurationSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The duration (in seconds) of each segment.
      required:
      - MssManifests
      description: A Microsoft Smooth Streaming (MSS) PackagingConfiguration.
    NotFoundException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/__string'
      description: The requested resource does not exist.
    PackagingConfiguration:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN of the PackagingConfiguration.
        CmafPackage:
          $ref: '#/components/schemas/CmafPackage'
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The time the PackagingConfiguration was created.
        DashPackage:
          $ref: '#/components/schemas/DashPackage'
        HlsPackage:
          $ref: '#/components/schemas/HlsPackage'
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the PackagingConfiguration.
        MssPackage:
          $ref: '#/components/schemas/MssPackage'
        PackagingGroupId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of a PackagingGroup.
        Tags:
          $ref: '#/components/schemas/Tags'
      description: A MediaPackage VOD PackagingConfiguration resource.
    PackagingGroup:
      type: object
      properties:
        ApproximateAssetCount:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The approximate asset count of the PackagingGroup.
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN of the PackagingGroup.
        Authorization:
          $ref: '#/components/schemas/Authorization'
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The time the PackagingGroup was created.
        DomainName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The fully qualified domain name for Assets in the PackagingGroup.
        EgressAccessLogs:
          $ref: '#/components/schemas/EgressAccessLogs'
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the PackagingGroup.
        Tags:
          $ref: '#/components/schemas/Tags'
      description: A MediaPackage VOD PackagingGroup resource.
    PresetSpeke20Audio:
      type: string
      enum:
      - PRESET-AUDIO-1
      - PRESET-AUDIO-2
      - PRESET-AUDIO-3
      - SHARED
      - UNENCRYPTED
    PresetSpeke20Video:
      type: string
      enum:
      - PRESET-VIDEO-1
      - PRESET-VIDEO-2
      - PRESET-VIDEO-3
      - PRESET-VIDEO-4
      - PRESET-VIDEO-5
      - PRESET-VIDEO-6
      - PRESET-VIDEO-7
      - PRESET-VIDEO-8
      - SHARED
      - UNENCRYPTED
    Profile:
      type: string
      enum:
      - NONE
      - HBBTV_1_5
    ScteMarkersSource:
      type: string
      enum:
      - SEGMENTS
      - MANIFEST
    SegmentTemplateFormat:
      type: string
      enum:
      - NUMBER_WITH_TIMELINE
      - TIME_WITH_TIMELINE
      - NUMBER_WITH_DURATION
    ServiceUnavailableException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/__string'
      description: An unexpected error occurred.
    SpekeKeyProvider:
      type: object
      properties:
        EncryptionContractConfiguration:
          $ref: '#/components/schemas/EncryptionContractConfiguration'
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: An Amazon Resource Name (ARN) of an IAM role that AWS Elemental
            MediaPackage will assume when accessing the key provider service.
        SystemIds:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: The system IDs to include in key requests.
        Url:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The URL of the external key provider service.
      required:
      - RoleArn
      - SystemIds
      - Url
      description: A configuration for accessing an external Secure Packager and Encoder
        Key Exchange (SPEKE) service that will provide encryption keys.
    StreamOrder:
      type: string
      enum:
      - ORIGINAL
      - VIDEO_BITRATE_ASCENDING
      - VIDEO_BITRATE_DESCENDING
    StreamSelection:
      type: object
      properties:
        MaxVideoBitsPerSecond:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The maximum video bitrate (bps) to include in output.
        MinVideoBitsPerSecond:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The minimum video bitrate (bps) to include in output.
        StreamOrder:
          allOf:
          - $ref: '#/components/schemas/StreamOrder'
          description: A directive that determines the order of streams in the output.
      description: A StreamSelection configuration.
    TagResourceRequest:
      type: object
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) for the resource. You can get
            this from the response to any request to the resource.
        Tags:
          allOf:
          - $ref: '#/components/schemas/__mapOf__string'
          description: A collection of tags associated with a resource
      required:
      - ResourceArn
      - Tags
    Tags:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/__string'
      description: A collection of tags associated with a resource
    TooManyRequestsException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/__string'
      description: The client has exceeded their resource or throttling limits.
    UnprocessableEntityException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/__string'
      description: The parameters sent in the request are not valid.
    UntagResourceRequest:
      type: object
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) for the resource. You can get
            this from the response to any request to the resource.
        TagKeys:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: A comma-separated list of the tag keys to remove from the resource.
      required:
      - ResourceArn
      - TagKeys
    UpdatePackagingGroupRequest:
      type: object
      properties:
        Authorization:
          $ref: '#/components/schemas/Authorization'
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of a MediaPackage VOD PackagingGroup resource.
      required:
      - Id
      description: A MediaPackage VOD PackagingGroup resource configuration.
    UpdatePackagingGroupResponse:
      type: object
      properties:
        ApproximateAssetCount:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The approximate asset count of the PackagingGroup.
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN of the PackagingGroup.
        Authorization:
          $ref: '#/components/schemas/Authorization'
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The time the PackagingGroup was created.
        DomainName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The fully qualified domain name for Assets in the PackagingGroup.
        EgressAccessLogs:
          $ref: '#/components/schemas/EgressAccessLogs'
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the PackagingGroup.
        Tags:
          $ref: '#/components/schemas/Tags'
    __PeriodTriggersElement:
      type: string
      enum:
      - ADS
    __boolean:
      type: boolean
    __integer:
      type: integer
    __listOfAssetShallow:
      type: array
      items:
        $ref: '#/components/schemas/AssetShallow'
    __listOfDashManifest:
      type: array
      items:
        $ref: '#/components/schemas/DashManifest'
    __listOfEgressEndpoint:
      type: array
      items:
        $ref: '#/components/schemas/EgressEndpoint'
    __listOfHlsManifest:
      type: array
      items:
        $ref: '#/components/schemas/HlsManifest'
    __listOfMssManifest:
      type: array
      items:
        $ref: '#/components/schemas/MssManifest'
    __listOfPackagingConfiguration:
      type: array
      items:
        $ref: '#/components/schemas/PackagingConfiguration'
    __listOfPackagingGroup:
      type: array
      items:
        $ref: '#/components/schemas/PackagingGroup'
    __listOf__PeriodTriggersElement:
      type: array
      items:
        $ref: '#/components/schemas/__PeriodTriggersElement'
    __listOf__string:
      type: array
      items:
        $ref: '#/components/schemas/__string'
    __mapOf__string:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/__string'
    __string:
      type: string
