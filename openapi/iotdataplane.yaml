openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: iot_data_plane
  x-aws-serviceName: iotdataplane
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-07'
  version: '2015-05-28'
  title: AWS IoT Data Plane
  description: |-
    IoT data

    IoT data enables secure, bi-directional communication between Internet-connected things (such as sensors, actuators, embedded devices, or smart appliances) and the Amazon Web Services cloud. It implements a broker for applications and things to publish messages over HTTP (Publish) and retrieve, update, and delete shadows. A shadow is a persistent representation of your things and their state in the Amazon Web Services cloud.

    Find the endpoint address for actions in IoT data by running this CLI command:

    `aws iot describe-endpoint --endpoint-type iot:Data-ATS`

    The service name used by [Amazon Web ServicesSignature Version 4](https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html) to sign requests is: _iotdevicegateway_.
servers:
- description: The AWS IoT Data Plane regional endpoint
  url: https://data-ats.iot.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths:
  /things/{thingName}/shadow:
    delete:
      operationId: DeleteThingShadow
      description: |-
        Deletes the shadow for the specified thing.

        Requires permission to access the [DeleteThingShadow](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.

        For more information, see [DeleteThingShadow](http://docs.aws.amazon.com/iot/latest/developerguide/API_DeleteThingShadow.html) in the IoT Developer Guide.
      parameters:
      - name: thingName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ThingName'
      - name: name
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ShadowName'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '405':
          description: |-
            The specified combination of HTTP verb and URI is not supported.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '415':
          description: |-
            The document encoding is not supported.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedDocumentEncodingException'
    get:
      operationId: GetThingShadow
      description: |-
        Gets the shadow for the specified thing.

        Requires permission to access the [GetThingShadow](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.

        For more information, see [GetThingShadow](http://docs.aws.amazon.com/iot/latest/developerguide/API_GetThingShadow.html) in the IoT Developer Guide.
      parameters:
      - name: thingName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ThingName'
      - name: name
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ShadowName'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '405':
          description: |-
            The specified combination of HTTP verb and URI is not supported.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '415':
          description: |-
            The document encoding is not supported.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedDocumentEncodingException'
    post:
      operationId: UpdateThingShadow
      description: |-
        Updates the shadow for the specified thing.

        Requires permission to access the [UpdateThingShadow](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.

        For more information, see [UpdateThingShadow](http://docs.aws.amazon.com/iot/latest/developerguide/API_UpdateThingShadow.html) in the IoT Developer Guide.
      parameters:
      - name: thingName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ThingName'
      - name: name
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ShadowName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                payload:
                  $ref: '#/components/schemas/JsonDocument'
      responses:
        '200': {}
        '409':
          description: |-
            The specified version does not match the version of the document.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '405':
          description: |-
            The specified combination of HTTP verb and URI is not supported.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '413':
          description: |-
            The payload exceeds the maximum size allowed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestEntityTooLargeException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '415':
          description: |-
            The document encoding is not supported.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedDocumentEncodingException'
  /retainedMessage/{topic}:
    get:
      operationId: GetRetainedMessage
      description: |-
        Gets the details of a single retained message for the specified topic.

        This action returns the message payload of the retained message, which can incur messaging costs. To list only the topic names of the retained messages, call [ListRetainedMessages](https://docs.aws.amazon.com/iot/latest/apireference/API_iotdata_ListRetainedMessages.html).

        Requires permission to access the [GetRetainedMessage](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiotfleethubfordevicemanagement.html#awsiotfleethubfordevicemanagement-actions-as-permissions) action.

        For more information about messaging costs, see [Amazon Web Services IoT Core pricing - Messaging](http://aws.amazon.com/iot-core/pricing/#Messaging).
      parameters:
      - name: topic
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Topic'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '405':
          description: |-
            The specified combination of HTTP verb and URI is not supported.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /api/things/shadow/ListNamedShadowsForThing/{thingName}:
    get:
      operationId: ListNamedShadowsForThing
      description: |-
        Lists the shadows for the specified thing.

        Requires permission to access the [ListNamedShadowsForThing](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.
      parameters:
      - name: thingName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ThingName'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: pageSize
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PageSize'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '405':
          description: |-
            The specified combination of HTTP verb and URI is not supported.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /retainedMessage:
    get:
      operationId: ListRetainedMessages
      description: |-
        Lists summary information about the retained messages stored for the account.

        This action returns only the topic names of the retained messages. It doesn't return any message payloads. Although this action doesn't return a message payload, it can still incur messaging costs.

        To get the message payload of a retained message, call [GetRetainedMessage](https://docs.aws.amazon.com/iot/latest/apireference/API_iotdata_GetRetainedMessage.html) with the topic name of the retained message.

        Requires permission to access the [ListRetainedMessages](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiotfleethubfordevicemanagement.html#awsiotfleethubfordevicemanagement-actions-as-permissions) action.

        For more information about messaging costs, see [Amazon Web Services IoT Core pricing - Messaging](http://aws.amazon.com/iot-core/pricing/#Messaging).
      parameters:
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '405':
          description: |-
            The specified combination of HTTP verb and URI is not supported.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '503':
          description: |-
            The service is temporarily unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /topics/{topic}:
    post:
      operationId: Publish
      description: |-
        Publishes an MQTT message.

        Requires permission to access the [Publish](https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions) action.

        For more information about MQTT messages, see [MQTT Protocol](http://docs.aws.amazon.com/iot/latest/developerguide/mqtt.html) in the IoT Developer Guide.

        For more information about messaging costs, see [Amazon Web Services IoT Core pricing - Messaging](http://aws.amazon.com/iot-core/pricing/#Messaging).
      parameters:
      - name: topic
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Topic'
      - name: qos
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Qos'
      - name: retain
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Retain'
      - name: x-amz-mqtt5-user-properties
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/SynthesizedJsonUserProperties'
      - name: x-amz-mqtt5-payload-format-indicator
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/PayloadFormatIndicator'
      - name: contentType
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ContentType'
      - name: responseTopic
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ResponseTopic'
      - name: x-amz-mqtt5-correlation-data
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/CorrelationData'
      - name: messageExpiry
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MessageExpiry'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                payload:
                  $ref: '#/components/schemas/Payload'
      responses:
        '200': {}
        '500':
          description: |-
            An unexpected error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '400':
          description: |-
            The request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '405':
          description: |-
            The specified combination of HTTP verb and URI is not supported.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '429':
          description: |-
            The rate exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '401':
          description: |-
            You are not authorized to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
components:
  schemas:
    ConflictException:
      type: object
      properties:
        message:
          allOf:
          - $ref: '#/components/schemas/errorMessage'
          description: The message for the exception.
      description: The specified version does not match the version of the document.
    ContentType:
      type: string
    CorrelationData:
      type: string
    DeleteThingShadowRequest:
      type: object
      properties:
        thingName:
          allOf:
          - $ref: '#/components/schemas/ThingName'
          description: The name of the thing.
        shadowName:
          allOf:
          - $ref: '#/components/schemas/ShadowName'
          description: The name of the shadow.
      required:
      - thingName
      description: The input for the DeleteThingShadow operation.
    DeleteThingShadowResponse:
      type: object
      properties:
        payload:
          allOf:
          - $ref: '#/components/schemas/JsonDocument'
          description: The state information, in JSON format.
      required:
      - payload
      description: The output from the DeleteThingShadow operation.
    GetRetainedMessageRequest:
      type: object
      properties:
        topic:
          allOf:
          - $ref: '#/components/schemas/Topic'
          description: The topic name of the retained message to retrieve.
      required:
      - topic
      description: The input for the GetRetainedMessage operation.
    GetRetainedMessageResponse:
      type: object
      properties:
        topic:
          allOf:
          - $ref: '#/components/schemas/Topic'
          description: The topic name to which the retained message was published.
        payload:
          allOf:
          - $ref: '#/components/schemas/Payload'
          description: The Base64-encoded message payload of the retained message
            body.
        qos:
          allOf:
          - $ref: '#/components/schemas/Qos'
          description: The quality of service (QoS) level used to publish the retained
            message.
        lastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The Epoch date and time, in milliseconds, when the retained
            message was stored by IoT.
        userProperties:
          allOf:
          - $ref: '#/components/schemas/UserPropertiesBlob'
          description: 'A base64-encoded JSON string that includes an array of JSON
            objects, or null if the retained message doesn''t include any user properties.


            The following example `userProperties` parameter is a JSON string that
            represents two user properties. Note that it will be base64-encoded:


            `[{"deviceName": "alpha"}, {"deviceCnt": "45"}]`'
      description: The output from the GetRetainedMessage operation.
    GetThingShadowRequest:
      type: object
      properties:
        thingName:
          allOf:
          - $ref: '#/components/schemas/ThingName'
          description: The name of the thing.
        shadowName:
          allOf:
          - $ref: '#/components/schemas/ShadowName'
          description: The name of the shadow.
      required:
      - thingName
      description: The input for the GetThingShadow operation.
    GetThingShadowResponse:
      type: object
      properties:
        payload:
          allOf:
          - $ref: '#/components/schemas/JsonDocument'
          description: The state information, in JSON format.
      description: The output from the GetThingShadow operation.
    InternalFailureException:
      type: object
      properties:
        message:
          allOf:
          - $ref: '#/components/schemas/errorMessage'
          description: The message for the exception.
      description: An unexpected error has occurred.
    InvalidRequestException:
      type: object
      properties:
        message:
          allOf:
          - $ref: '#/components/schemas/errorMessage'
          description: The message for the exception.
      description: The request is not valid.
    JsonDocument:
      type: string
      format: byte
    ListNamedShadowsForThingRequest:
      type: object
      properties:
        thingName:
          allOf:
          - $ref: '#/components/schemas/ThingName'
          description: The name of the thing.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token to retrieve the next set of results.
        pageSize:
          allOf:
          - $ref: '#/components/schemas/PageSize'
          description: The result page size.
      required:
      - thingName
    ListNamedShadowsForThingResponse:
      type: object
      properties:
        results:
          allOf:
          - $ref: '#/components/schemas/NamedShadowList'
          description: The list of shadows for the specified thing.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token to use to get the next set of results, or **null**
            if there are no additional results.
        timestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The Epoch date and time the response was generated by IoT.
    ListRetainedMessagesRequest:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: To retrieve the next set of results, the `nextToken` value
            from a previous response; otherwise **null** to receive the first set
            of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return at one time.
    ListRetainedMessagesResponse:
      type: object
      properties:
        retainedTopics:
          allOf:
          - $ref: '#/components/schemas/RetainedMessageList'
          description: A summary list the account's retained messages. The information
            returned doesn't include the message payloads of the retained messages.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results, or null if there are
            no additional results.
    MaxResults:
      type: integer
      minimum: 1
      maximum: 200
    MessageExpiry:
      type: integer
      format: int64
      default: 0
    MethodNotAllowedException:
      type: object
      properties:
        message:
          allOf:
          - $ref: '#/components/schemas/errorMessage'
          description: The message for the exception.
      description: The specified combination of HTTP verb and URI is not supported.
    NamedShadowList:
      type: array
      items:
        $ref: '#/components/schemas/ShadowName'
    NextToken:
      type: string
    PageSize:
      type: integer
      minimum: 1
      maximum: 100
    Payload:
      type: string
      format: byte
    PayloadFormatIndicator:
      type: string
      enum:
      - UNSPECIFIED_BYTES
      - UTF8_DATA
    PayloadSize:
      type: integer
      format: int64
      default: 0
    PublishRequest:
      type: object
      properties:
        topic:
          allOf:
          - $ref: '#/components/schemas/Topic'
          description: The name of the MQTT topic.
        qos:
          allOf:
          - $ref: '#/components/schemas/Qos'
          description: The Quality of Service (QoS) level. The default QoS level is
            0.
        retain:
          allOf:
          - $ref: '#/components/schemas/Retain'
          description: 'A Boolean value that determines whether to set the RETAIN
            flag when the message is published.


            Setting the RETAIN flag causes the message to be retained and sent to
            new subscribers to the topic.


            Valid values: `true` | `false`


            Default value: `false`'
        payload:
          allOf:
          - $ref: '#/components/schemas/Payload'
          description: 'The message body. MQTT accepts text, binary, and empty (null)
            message payloads.


            Publishing an empty (null) payload with **retain** = `true` deletes the
            retained message identified by **topic** from Amazon Web Services IoT
            Core.'
        userProperties:
          allOf:
          - $ref: '#/components/schemas/SynthesizedJsonUserProperties'
          description: 'A JSON string that contains an array of JSON objects. If you
            don’t use Amazon Web Services SDK or CLI, you must encode the JSON string
            to base64 format before adding it to the HTTP header. `userProperties`
            is an HTTP header value in the API.


            The following example `userProperties` parameter is a JSON string which
            represents two User Properties. Note that it needs to be base64-encoded:


            `[{"deviceName": "alpha"}, {"deviceCnt": "45"}]`'
        payloadFormatIndicator:
          allOf:
          - $ref: '#/components/schemas/PayloadFormatIndicator'
          description: An `Enum` string value that indicates whether the payload is
            formatted as UTF-8. `payloadFormatIndicator` is an HTTP header value in
            the API.
        contentType:
          allOf:
          - $ref: '#/components/schemas/ContentType'
          description: A UTF-8 encoded string that describes the content of the publishing
            message.
        responseTopic:
          allOf:
          - $ref: '#/components/schemas/ResponseTopic'
          description: A UTF-8 encoded string that's used as the topic name for a
            response message. The response topic is used to describe the topic which
            the receiver should publish to as part of the request-response flow. The
            topic must not contain wildcard characters.
        correlationData:
          allOf:
          - $ref: '#/components/schemas/CorrelationData'
          description: The base64-encoded binary data used by the sender of the request
            message to identify which request the response message is for when it's
            received. `correlationData` is an HTTP header value in the API.
        messageExpiry:
          allOf:
          - $ref: '#/components/schemas/MessageExpiry'
          description: A user-defined integer value that represents the message expiry
            interval in seconds. If absent, the message doesn't expire. For more information
            about the limits of `messageExpiry`, see [Amazon Web Services IoT Core
            message broker and protocol limits and quotas ](https://docs.aws.amazon.com/general/latest/gr/iot-core.html#message-broker-limits)
            from the Amazon Web Services Reference Guide.
      required:
      - topic
      description: The input for the Publish operation.
    Qos:
      type: integer
      default: 0
      minimum: 0
      maximum: 1
    RequestEntityTooLargeException:
      type: object
      properties:
        message:
          allOf:
          - $ref: '#/components/schemas/errorMessage'
          description: The message for the exception.
      description: The payload exceeds the maximum size allowed.
    ResourceNotFoundException:
      type: object
      properties:
        message:
          allOf:
          - $ref: '#/components/schemas/errorMessage'
          description: The message for the exception.
      description: The specified resource does not exist.
    ResponseTopic:
      type: string
    Retain:
      type: boolean
      default: false
    RetainedMessageList:
      type: array
      items:
        $ref: '#/components/schemas/RetainedMessageSummary'
    RetainedMessageSummary:
      type: object
      properties:
        topic:
          allOf:
          - $ref: '#/components/schemas/Topic'
          description: The topic name to which the retained message was published.
        payloadSize:
          allOf:
          - $ref: '#/components/schemas/PayloadSize'
          description: The size of the retained message's payload in bytes.
        qos:
          allOf:
          - $ref: '#/components/schemas/Qos'
          description: The quality of service (QoS) level used to publish the retained
            message.
        lastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The Epoch date and time, in milliseconds, when the retained
            message was stored by IoT.
      description: Information about a single retained message.
    ServiceUnavailableException:
      type: object
      properties:
        message:
          allOf:
          - $ref: '#/components/schemas/errorMessage'
          description: The message for the exception.
      description: The service is temporarily unavailable.
    ShadowName:
      type: string
      pattern: ^[$a-zA-Z0-9:_-]+$
      minLength: 1
      maxLength: 64
    SynthesizedJsonUserProperties:
      type: string
    ThingName:
      type: string
      pattern: ^[a-zA-Z0-9:_-]+$
      minLength: 1
      maxLength: 128
    ThrottlingException:
      type: object
      properties:
        message:
          allOf:
          - $ref: '#/components/schemas/errorMessage'
          description: The message for the exception.
      description: The rate exceeds the limit.
    Timestamp:
      type: integer
      format: int64
      default: 0
    Topic:
      type: string
    UnauthorizedException:
      type: object
      properties:
        message:
          allOf:
          - $ref: '#/components/schemas/errorMessage'
          description: The message for the exception.
      description: You are not authorized to perform this operation.
    UnsupportedDocumentEncodingException:
      type: object
      properties:
        message:
          allOf:
          - $ref: '#/components/schemas/errorMessage'
          description: The message for the exception.
      description: The document encoding is not supported.
    UpdateThingShadowRequest:
      type: object
      properties:
        thingName:
          allOf:
          - $ref: '#/components/schemas/ThingName'
          description: The name of the thing.
        shadowName:
          allOf:
          - $ref: '#/components/schemas/ShadowName'
          description: The name of the shadow.
        payload:
          allOf:
          - $ref: '#/components/schemas/JsonDocument'
          description: The state information, in JSON format.
      required:
      - thingName
      - payload
      description: The input for the UpdateThingShadow operation.
    UpdateThingShadowResponse:
      type: object
      properties:
        payload:
          allOf:
          - $ref: '#/components/schemas/JsonDocument'
          description: The state information, in JSON format.
      description: The output from the UpdateThingShadow operation.
    UserPropertiesBlob:
      type: string
      format: byte
    errorMessage:
      type: string
