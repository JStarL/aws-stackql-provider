openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: marketplace_deployment
  x-aws-serviceName: marketplacedeployment
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-07'
  version: '2023-01-25'
  title: AWS Marketplace Deployment Service
  description: |-
    The AWS Marketplace Deployment Service supports the Quick Launch experience, which is a deployment option for software as a service (SaaS) products. Quick Launch simplifies and reduces the time, resources, and steps required to configure, deploy, and launch a products. The AWS Marketplace Deployment Service provides sellers with a secure method for passing deployment parameters, such as API keys and external IDs, to buyers during the Quick Launch experience.
servers:
- description: The AWS Marketplace Deployment Service regional endpoint
  url: https://deployment-marketplace.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths:
  /tags/{resourceArn}:
    get:
      operationId: ListTagsForResource
      description: |-
        Lists all tags that have been added to a deployment parameter resource.
      parameters:
      - name: resourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            There was an internal service exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource wasn't found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Too many requests.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            An error occurred during validation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    post:
      operationId: TagResource
      description: |-
        Tags a resource.
      parameters:
      - name: resourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tags:
                  $ref: '#/components/schemas/Tags'
      responses:
        '204': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The request configuration has conflicts. For details, see the accompanying error message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            There was an internal service exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource wasn't found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Too many requests.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            An error occurred during validation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    delete:
      operationId: UntagResource
      description: |-
        Removes a tag or list of tags from a resource.
      parameters:
      - name: resourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: tagKeys
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/StringList'
      responses:
        '204': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The request configuration has conflicts. For details, see the accompanying error message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            There was an internal service exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource wasn't found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Too many requests.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            An error occurred during validation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /catalogs/{catalog}/products/{productId}/deployment-parameters:
    post:
      operationId: PutDeploymentParameter
      description: |-
        Creates or updates a deployment parameter and is targeted by `catalog` and `agreementId`.
      parameters:
      - name: catalog
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Catalog'
      - name: productId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                agreementId:
                  $ref: '#/components/schemas/ResourceId'
                deploymentParameter:
                  $ref: '#/components/schemas/DeploymentParameterInput'
                tags:
                  $ref: '#/components/schemas/TagsMap'
                expirationDate:
                  $ref: '#/components/schemas/Timestamp'
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The request configuration has conflicts. For details, see the accompanying error message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            There was an internal service exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource wasn't found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            The maximum number of requests per account has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            Too many requests.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            An error occurred during validation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
components:
  schemas:
    AccessDeniedException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      required:
      - message
      description: You do not have sufficient access to perform this action.
    Catalog:
      type: string
      pattern: ^[a-zA-Z_-]+$
      minLength: 1
      maxLength: 64
    ClientToken:
      type: string
      pattern: ^[a-zA-Z0-9/_+=.:@-]+$
      minLength: 32
      maxLength: 64
    ConflictException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
        resourceId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          description: The unique identifier for the resource associated with the
            error.
      required:
      - message
      - resourceId
      description: The request configuration has conflicts. For details, see the accompanying
        error message.
    DeploymentParameterInput:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/DeploymentParameterName'
          description: The desired name of the deployment parameter. This is the identifier
            on which deployment parameters are keyed for a given buyer and product.
            If this name matches an existing deployment parameter, this request will
            update the existing resource.
        secretString:
          allOf:
          - $ref: '#/components/schemas/SecretString'
          description: The text to encrypt and store in the secret.
      required:
      - name
      - secretString
      description: 'The shape containing the requested deployment parameter name and
        secretString.


        To support AWS CloudFormation dynamic references to this resource using Quick
        Launch, this value must match a parameter defined in the CloudFormation templated
        provided to buyers.'
    DeploymentParameterName:
      type: string
      pattern: ^[a-zA-Z0-9/_+=.@-]+$
      minLength: 1
      maxLength: 400
    DeploymentParameterResourceIdentifier:
      type: string
      pattern: ^dp-[a-zA-Z0-9]+$
      minLength: 1
      maxLength: 32
    InternalServerException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      required:
      - message
      description: There was an internal service exception.
    ListTagsForResourceRequest:
      type: object
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) associated with the deployment
            parameter resource you want to list tags on.
      required:
      - resourceArn
    ListTagsForResourceResponse:
      type: object
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: A map of key-value pairs, where each pair represents a tag
            present on the resource.
    PutDeploymentParameterRequest:
      type: object
      properties:
        catalog:
          allOf:
          - $ref: '#/components/schemas/Catalog'
          description: 'The catalog related to the request. Fixed value: `AWSMarketplace`'
        productId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          description: The product for which AWS Marketplace will save secrets for
            the buyer’s account.
        agreementId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          description: The unique identifier of the agreement.
        deploymentParameter:
          allOf:
          - $ref: '#/components/schemas/DeploymentParameterInput'
          description: The deployment parameter targeted to the acceptor of an agreement
            for which to create the AWS Secret Manager resource.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagsMap'
          description: A map of key-value pairs, where each pair represents a tag
            saved to the resource. Tags will only be applied for create operations,
            and they'll be ignored if the resource already exists.
        expirationDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date when deployment parameters expire and are scheduled
            for deletion.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: 'The idempotency token for deployment parameters. A unique
            identifier for the new version.


            This field is not required if you''re calling using an AWS SDK. Otherwise,
            a `clientToken` must be provided with the request.'
      required:
      - catalog
      - productId
      - agreementId
      - deploymentParameter
    PutDeploymentParameterResponse:
      type: object
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          description: The Amazon Resource Name (ARN) associated with the deployment
            parameter resource you want to create or update.
        agreementId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          description: The unique identifier of the agreement.
        deploymentParameterId:
          allOf:
          - $ref: '#/components/schemas/DeploymentParameterResourceIdentifier'
          description: The unique identifier of the deployment parameter.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagsMap'
          description: A map of key-value pairs, where each pair represents a tag
            saved to the resource. Tags will only be applied for create operations,
            and they'll be ignored if the resource already exists.
      required:
      - resourceArn
      - agreementId
      - deploymentParameterId
    ResourceArn:
      type: string
      pattern: ^[a-zA-Z0-9:*/-]+$
      minLength: 1
      maxLength: 2048
    ResourceId:
      type: string
      pattern: ^[A-Za-z0-9_/-]+$
      minLength: 1
      maxLength: 64
    ResourceNotFoundException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      required:
      - message
      description: The specified resource wasn't found.
    SecretString:
      type: string
      minLength: 1
      maxLength: 15000
    ServiceQuotaExceededException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      required:
      - message
      description: The maximum number of requests per account has been exceeded.
    StringList:
      type: array
      items:
        type: string
    TagKey:
      type: string
      pattern: ^[a-zA-Z0-9/_+=.:@-]+$
      minLength: 1
      maxLength: 128
    TagResourceRequest:
      type: object
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) associated with the resource
            you want to tag.
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: A map of key-value pairs, where each pair represents a tag
            present on the resource.
      required:
      - resourceArn
    TagResourceResponse:
      type: object
      properties: {}
    TagValue:
      type: string
      pattern: ^[a-zA-Z0-9/_+=.:@-]+$
      minLength: 1
      maxLength: 256
    Tags:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/String'
    TagsMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
    ThrottlingException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      required:
      - message
      description: Too many requests.
    UntagResourceRequest:
      type: object
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) associated with the resource
            you want to remove the tag from.
        tagKeys:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: A list of key names of tags to be removed.
      required:
      - resourceArn
      - tagKeys
    UntagResourceResponse:
      type: object
      properties: {}
    ValidationException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
        fieldName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The field name associated with the error.
      required:
      - message
      - fieldName
      description: An error occurred during validation.
