openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: auditmanager
  x-aws-serviceName: auditmanager
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-07'
  version: '2017-07-25'
  title: AWS Audit Manager
  description: |-
    Welcome to the Audit Manager API reference. This guide is for developers who need detailed information about the Audit Manager API operations, data types, and errors.

    Audit Manager is a service that provides automated evidence collection so that you can continually audit your Amazon Web Services usage. You can use it to assess the effectiveness of your controls, manage risk, and simplify compliance.

    Audit Manager provides prebuilt frameworks that structure and automate assessments for a given compliance standard. Frameworks include a prebuilt collection of controls with descriptions and testing procedures. These controls are grouped according to the requirements of the specified compliance standard or regulation. You can also customize frameworks and controls to support internal audits with specific requirements.

    Use the following links to get started with the Audit Manager API:

      * [Actions](https://docs.aws.amazon.com/audit-manager/latest/APIReference/API_Operations.html): An alphabetical list of all Audit Manager API operations.

      * [Data types](https://docs.aws.amazon.com/audit-manager/latest/APIReference/API_Types.html): An alphabetical list of all Audit Manager data types.

      * [Common parameters](https://docs.aws.amazon.com/audit-manager/latest/APIReference/CommonParameters.html): Parameters that all operations can use.

      * [Common errors](https://docs.aws.amazon.com/audit-manager/latest/APIReference/CommonErrors.html): Client and server errors that all operations can return.

    If you're new to Audit Manager, we recommend that you review the [ Audit Manager User Guide](https://docs.aws.amazon.com/audit-manager/latest/userguide/what-is.html).
servers:
- description: The AWS Audit Manager regional endpoint
  url: https://auditmanager.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths:
  /assessments/{assessmentId}/associateToAssessmentReport:
    put:
      operationId: AssociateAssessmentReportEvidenceFolder
      description: |-
        Associates an evidence folder to an assessment report in an Audit Manager assessment.
      parameters:
      - name: assessmentId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                evidenceFolderId:
                  $ref: '#/components/schemas/UUID'
      responses:
        '200': {}
        '403':
          description: |-
            Your account isn't registered with Audit Manager. Check the delegated administrator setup on the Audit Manager settings page, and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal service error occurred during the processing of your request. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource that's specified in the request can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The request has invalid or missing parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /assessments/{assessmentId}/batchAssociateToAssessmentReport:
    put:
      operationId: BatchAssociateAssessmentReportEvidence
      description: |-
        Associates a list of evidence to an assessment report in an Audit Manager assessment.
      parameters:
      - name: assessmentId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                evidenceFolderId:
                  $ref: '#/components/schemas/UUID'
                evidenceIds:
                  $ref: '#/components/schemas/EvidenceIds'
      responses:
        '200': {}
        '403':
          description: |-
            Your account isn't registered with Audit Manager. Check the delegated administrator setup on the Audit Manager settings page, and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal service error occurred during the processing of your request. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource that's specified in the request can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The request has invalid or missing parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /assessments/{assessmentId}/delegations:
    post:
      operationId: BatchCreateDelegationByAssessment
      description: |-
        Creates a batch of delegations for an assessment in Audit Manager.
      parameters:
      - name: assessmentId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                createDelegationRequests:
                  $ref: '#/components/schemas/CreateDelegationRequests'
      responses:
        '200': {}
        '403':
          description: |-
            Your account isn't registered with Audit Manager. Check the delegated administrator setup on the Audit Manager settings page, and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal service error occurred during the processing of your request. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource that's specified in the request can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The request has invalid or missing parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    put:
      operationId: BatchDeleteDelegationByAssessment
      description: |-
        Deletes a batch of delegations for an assessment in Audit Manager.
      parameters:
      - name: assessmentId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                delegationIds:
                  $ref: '#/components/schemas/DelegationIds'
      responses:
        '200': {}
        '403':
          description: |-
            Your account isn't registered with Audit Manager. Check the delegated administrator setup on the Audit Manager settings page, and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal service error occurred during the processing of your request. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource that's specified in the request can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The request has invalid or missing parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /assessments/{assessmentId}/batchDisassociateFromAssessmentReport:
    put:
      operationId: BatchDisassociateAssessmentReportEvidence
      description: |-
        Disassociates a list of evidence from an assessment report in Audit Manager.
      parameters:
      - name: assessmentId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                evidenceFolderId:
                  $ref: '#/components/schemas/UUID'
                evidenceIds:
                  $ref: '#/components/schemas/EvidenceIds'
      responses:
        '200': {}
        '403':
          description: |-
            Your account isn't registered with Audit Manager. Check the delegated administrator setup on the Audit Manager settings page, and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal service error occurred during the processing of your request. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource that's specified in the request can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The request has invalid or missing parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /assessments/{assessmentId}/controlSets/{controlSetId}/controls/{controlId}/evidence:
    post:
      operationId: BatchImportEvidenceToAssessmentControl
      description: |-
        Adds one or more pieces of evidence to a control in an Audit Manager assessment.

        You can import manual evidence from any S3 bucket by specifying the S3 URI of the object. You can also upload a file from your browser, or enter plain text in response to a risk assessment question.

        The following restrictions apply to this action:

          * `manualEvidence` can be only one of the following: `evidenceFileName`, `s3ResourcePath`, or `textResponse`

          * Maximum size of an individual evidence file: 100 MB

          * Number of daily manual evidence uploads per control: 100

          * Supported file formats: See [Supported file types for manual evidence](https://docs.aws.amazon.com/audit-manager/latest/userguide/upload-evidence.html#supported-manual-evidence-files) in the _Audit Manager User Guide_

        For more information about Audit Manager service restrictions, see [Quotas and restrictions for Audit Manager](https://docs.aws.amazon.com/audit-manager/latest/userguide/service-quotas.html).
      parameters:
      - name: assessmentId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: controlSetId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ControlSetId'
      - name: controlId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                manualEvidence:
                  $ref: '#/components/schemas/ManualEvidenceList'
      responses:
        '200': {}
        '403':
          description: |-
            Your account isn't registered with Audit Manager. Check the delegated administrator setup on the Audit Manager settings page, and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal service error occurred during the processing of your request. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource that's specified in the request can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request has invalid or missing parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /assessments:
    post:
      operationId: CreateAssessment
      description: |-
        Creates an assessment in Audit Manager.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  $ref: '#/components/schemas/AssessmentName'
                description:
                  $ref: '#/components/schemas/AssessmentDescription'
                assessmentReportsDestination:
                  $ref: '#/components/schemas/AssessmentReportsDestination'
                scope:
                  $ref: '#/components/schemas/Scope'
                roles:
                  $ref: '#/components/schemas/Roles'
                frameworkId:
                  $ref: '#/components/schemas/UUID'
                tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '200': {}
        '403':
          description: |-
            Your account isn't registered with Audit Manager. Check the delegated administrator setup on the Audit Manager settings page, and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal service error occurred during the processing of your request. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource that's specified in the request can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            You've reached your account quota for this resource type. To perform the requested action, delete some existing resources or [request a quota increase](https://docs.aws.amazon.com/general/latest/gr/aws_service_limits.html) from the Service Quotas console. For a list of Audit Manager service quotas, see [Quotas and restrictions for Audit Manager](https://docs.aws.amazon.com/audit-manager/latest/userguide/service-quotas.html).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request has invalid or missing parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: ListAssessments
      description: |-
        Returns a list of current and past assessments from Audit Manager.
      parameters:
      - name: status
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/AssessmentStatus'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Token'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            Your account isn't registered with Audit Manager. Check the delegated administrator setup on the Audit Manager settings page, and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal service error occurred during the processing of your request. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            The request has invalid or missing parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /assessmentFrameworks:
    post:
      operationId: CreateAssessmentFramework
      description: |-
        Creates a custom framework in Audit Manager.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  $ref: '#/components/schemas/FrameworkName'
                description:
                  $ref: '#/components/schemas/FrameworkDescription'
                complianceType:
                  $ref: '#/components/schemas/ComplianceType'
                controlSets:
                  $ref: '#/components/schemas/CreateAssessmentFrameworkControlSets'
                tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '200': {}
        '403':
          description: |-
            Your account isn't registered with Audit Manager. Check the delegated administrator setup on the Audit Manager settings page, and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal service error occurred during the processing of your request. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource that's specified in the request can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            You've reached your account quota for this resource type. To perform the requested action, delete some existing resources or [request a quota increase](https://docs.aws.amazon.com/general/latest/gr/aws_service_limits.html) from the Service Quotas console. For a list of Audit Manager service quotas, see [Quotas and restrictions for Audit Manager](https://docs.aws.amazon.com/audit-manager/latest/userguide/service-quotas.html).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '400':
          description: |-
            The request has invalid or missing parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: ListAssessmentFrameworks
      description: |-
        Returns a list of the frameworks that are available in the Audit Manager framework library.
      parameters:
      - name: frameworkType
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/FrameworkType'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Token'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            Your account isn't registered with Audit Manager. Check the delegated administrator setup on the Audit Manager settings page, and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal service error occurred during the processing of your request. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            The request has invalid or missing parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /assessments/{assessmentId}/reports:
    post:
      operationId: CreateAssessmentReport
      description: |-
        Creates an assessment report for the specified assessment.
      parameters:
      - name: assessmentId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  $ref: '#/components/schemas/AssessmentReportName'
                description:
                  $ref: '#/components/schemas/AssessmentReportDescription'
                queryStatement:
                  $ref: '#/components/schemas/QueryStatement'
      responses:
        '200': {}
        '403':
          description: |-
            Your account isn't registered with Audit Manager. Check the delegated administrator setup on the Audit Manager settings page, and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal service error occurred during the processing of your request. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource that's specified in the request can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The request has invalid or missing parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /controls:
    post:
      operationId: CreateControl
      description: |-
        Creates a new custom control in Audit Manager.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  $ref: '#/components/schemas/ControlName'
                description:
                  $ref: '#/components/schemas/ControlDescription'
                testingInformation:
                  $ref: '#/components/schemas/TestingInformation'
                actionPlanTitle:
                  $ref: '#/components/schemas/ActionPlanTitle'
                actionPlanInstructions:
                  $ref: '#/components/schemas/ActionPlanInstructions'
                controlMappingSources:
                  $ref: '#/components/schemas/CreateControlMappingSources'
                tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '200': {}
        '403':
          description: |-
            Your account isn't registered with Audit Manager. Check the delegated administrator setup on the Audit Manager settings page, and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal service error occurred during the processing of your request. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource that's specified in the request can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            You've reached your account quota for this resource type. To perform the requested action, delete some existing resources or [request a quota increase](https://docs.aws.amazon.com/general/latest/gr/aws_service_limits.html) from the Service Quotas console. For a list of Audit Manager service quotas, see [Quotas and restrictions for Audit Manager](https://docs.aws.amazon.com/audit-manager/latest/userguide/service-quotas.html).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '400':
          description: |-
            The request has invalid or missing parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: ListControls
      description: |-
        Returns a list of controls from Audit Manager.
      parameters:
      - name: controlType
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/ControlType'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Token'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: controlCatalogId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ControlCatalogId'
      responses:
        '200': {}
        '403':
          description: |-
            Your account isn't registered with Audit Manager. Check the delegated administrator setup on the Audit Manager settings page, and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal service error occurred during the processing of your request. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            The request has invalid or missing parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /assessments/{assessmentId}:
    delete:
      operationId: DeleteAssessment
      description: |-
        Deletes an assessment in Audit Manager.
      parameters:
      - name: assessmentId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        '200': {}
        '403':
          description: |-
            Your account isn't registered with Audit Manager. Check the delegated administrator setup on the Audit Manager settings page, and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal service error occurred during the processing of your request. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource that's specified in the request can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The request has invalid or missing parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetAssessment
      description: |-
        Gets information about a specified assessment.
      parameters:
      - name: assessmentId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        '200': {}
        '403':
          description: |-
            Your account isn't registered with Audit Manager. Check the delegated administrator setup on the Audit Manager settings page, and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal service error occurred during the processing of your request. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource that's specified in the request can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The request has invalid or missing parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    put:
      operationId: UpdateAssessment
      description: |-
        Edits an Audit Manager assessment.
      parameters:
      - name: assessmentId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                assessmentName:
                  $ref: '#/components/schemas/AssessmentName'
                assessmentDescription:
                  $ref: '#/components/schemas/AssessmentDescription'
                scope:
                  $ref: '#/components/schemas/Scope'
                assessmentReportsDestination:
                  $ref: '#/components/schemas/AssessmentReportsDestination'
                roles:
                  $ref: '#/components/schemas/Roles'
      responses:
        '200': {}
        '403':
          description: |-
            Your account isn't registered with Audit Manager. Check the delegated administrator setup on the Audit Manager settings page, and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal service error occurred during the processing of your request. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource that's specified in the request can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request has invalid or missing parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /assessmentFrameworks/{frameworkId}:
    delete:
      operationId: DeleteAssessmentFramework
      description: |-
        Deletes a custom framework in Audit Manager.
      parameters:
      - name: frameworkId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        '200': {}
        '403':
          description: |-
            Your account isn't registered with Audit Manager. Check the delegated administrator setup on the Audit Manager settings page, and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal service error occurred during the processing of your request. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource that's specified in the request can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The request has invalid or missing parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetAssessmentFramework
      description: |-
        Gets information about a specified framework.
      parameters:
      - name: frameworkId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        '200': {}
        '403':
          description: |-
            Your account isn't registered with Audit Manager. Check the delegated administrator setup on the Audit Manager settings page, and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal service error occurred during the processing of your request. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource that's specified in the request can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The request has invalid or missing parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    put:
      operationId: UpdateAssessmentFramework
      description: |-
        Updates a custom framework in Audit Manager.
      parameters:
      - name: frameworkId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  $ref: '#/components/schemas/FrameworkName'
                description:
                  $ref: '#/components/schemas/FrameworkDescription'
                complianceType:
                  $ref: '#/components/schemas/ComplianceType'
                controlSets:
                  $ref: '#/components/schemas/UpdateAssessmentFrameworkControlSets'
      responses:
        '200': {}
        '403':
          description: |-
            Your account isn't registered with Audit Manager. Check the delegated administrator setup on the Audit Manager settings page, and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal service error occurred during the processing of your request. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource that's specified in the request can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The request has invalid or missing parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /assessmentFrameworkShareRequests/{requestId}:
    delete:
      operationId: DeleteAssessmentFrameworkShare
      description: |-
        Deletes a share request for a custom framework in Audit Manager.
      parameters:
      - name: requestId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: requestType
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/ShareRequestType'
      responses:
        '200': {}
        '403':
          description: |-
            Your account isn't registered with Audit Manager. Check the delegated administrator setup on the Audit Manager settings page, and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal service error occurred during the processing of your request. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource that's specified in the request can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The request has invalid or missing parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    put:
      operationId: UpdateAssessmentFrameworkShare
      description: |-
        Updates a share request for a custom framework in Audit Manager.
      parameters:
      - name: requestId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                requestType:
                  $ref: '#/components/schemas/ShareRequestType'
                action:
                  $ref: '#/components/schemas/ShareRequestAction'
      responses:
        '200': {}
        '403':
          description: |-
            Your account isn't registered with Audit Manager. Check the delegated administrator setup on the Audit Manager settings page, and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal service error occurred during the processing of your request. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource that's specified in the request can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            You've reached your account quota for this resource type. To perform the requested action, delete some existing resources or [request a quota increase](https://docs.aws.amazon.com/general/latest/gr/aws_service_limits.html) from the Service Quotas console. For a list of Audit Manager service quotas, see [Quotas and restrictions for Audit Manager](https://docs.aws.amazon.com/audit-manager/latest/userguide/service-quotas.html).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '400':
          description: |-
            The request has invalid or missing parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /assessments/{assessmentId}/reports/{assessmentReportId}:
    delete:
      operationId: DeleteAssessmentReport
      description: |-
        Deletes an assessment report in Audit Manager.

        When you run the `DeleteAssessmentReport` operation, Audit Manager attempts to delete the following data:

          1. The specified assessment report that’s stored in your S3 bucket

          2. The associated metadata that’s stored in Audit Manager

        If Audit Manager can’t access the assessment report in your S3 bucket, the report isn’t deleted. In this event, the `DeleteAssessmentReport` operation doesn’t fail. Instead, it proceeds to delete the associated metadata only. You must then delete the assessment report from the S3 bucket yourself.

        This scenario happens when Audit Manager receives a `403 (Forbidden)` or `404 (Not Found)` error from Amazon S3. To avoid this, make sure that your S3 bucket is available, and that you configured the correct permissions for Audit Manager to delete resources in your S3 bucket. For an example permissions policy that you can use, see [Assessment report destination permissions](https://docs.aws.amazon.com/audit-manager/latest/userguide/security_iam_id-based-policy-examples.html#full-administrator-access-assessment-report-destination) in the _Audit Manager User Guide_. For information about the issues that could cause a `403 (Forbidden)` or `404 (Not Found`) error from Amazon S3, see [List of Error Codes](https://docs.aws.amazon.com/AmazonS3/latest/API/ErrorResponses.html#ErrorCodeList) in the _Amazon Simple Storage Service API Reference_.
      parameters:
      - name: assessmentId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: assessmentReportId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        '200': {}
        '403':
          description: |-
            Your account isn't registered with Audit Manager. Check the delegated administrator setup on the Audit Manager settings page, and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal service error occurred during the processing of your request. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource that's specified in the request can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The request has invalid or missing parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /controls/{controlId}:
    delete:
      operationId: DeleteControl
      description: |-
        Deletes a custom control in Audit Manager.

        When you invoke this operation, the custom control is deleted from any frameworks or assessments that it’s currently part of. As a result, Audit Manager will stop collecting evidence for that custom control in all of your assessments. This includes assessments that you previously created before you deleted the custom control.
      parameters:
      - name: controlId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        '200': {}
        '403':
          description: |-
            Your account isn't registered with Audit Manager. Check the delegated administrator setup on the Audit Manager settings page, and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal service error occurred during the processing of your request. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource that's specified in the request can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The request has invalid or missing parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetControl
      description: |-
        Gets information about a specified control.
      parameters:
      - name: controlId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        '200': {}
        '403':
          description: |-
            Your account isn't registered with Audit Manager. Check the delegated administrator setup on the Audit Manager settings page, and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal service error occurred during the processing of your request. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource that's specified in the request can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The request has invalid or missing parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    put:
      operationId: UpdateControl
      description: |-
        Updates a custom control in Audit Manager.
      parameters:
      - name: controlId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  $ref: '#/components/schemas/ControlName'
                description:
                  $ref: '#/components/schemas/ControlDescription'
                testingInformation:
                  $ref: '#/components/schemas/TestingInformation'
                actionPlanTitle:
                  $ref: '#/components/schemas/ActionPlanTitle'
                actionPlanInstructions:
                  $ref: '#/components/schemas/ActionPlanInstructions'
                controlMappingSources:
                  $ref: '#/components/schemas/ControlMappingSources'
      responses:
        '200': {}
        '403':
          description: |-
            Your account isn't registered with Audit Manager. Check the delegated administrator setup on the Audit Manager settings page, and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal service error occurred during the processing of your request. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource that's specified in the request can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The request has invalid or missing parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /account/deregisterAccount:
    post:
      operationId: DeregisterAccount
      description: |-
        Deregisters an account in Audit Manager.

        Before you deregister, you can use the [UpdateSettings](https://docs.aws.amazon.com/audit-manager/latest/APIReference/API_UpdateSettings.html) API operation to set your preferred data retention policy. By default, Audit Manager retains your data. If you want to delete your data, you can use the `DeregistrationPolicy` attribute to request the deletion of your data.

        For more information about data retention, see [Data Protection](https://docs.aws.amazon.com/audit-manager/latest/userguide/data-protection.html) in the _Audit Manager User Guide_.
      parameters: []
      responses:
        '200': {}
        '403':
          description: |-
            Your account isn't registered with Audit Manager. Check the delegated administrator setup on the Audit Manager settings page, and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal service error occurred during the processing of your request. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource that's specified in the request can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The request has invalid or missing parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /account/deregisterOrganizationAdminAccount:
    post:
      operationId: DeregisterOrganizationAdminAccount
      description: |-
        Removes the specified Amazon Web Services account as a delegated administrator for Audit Manager.

        When you remove a delegated administrator from your Audit Manager settings, you continue to have access to the evidence that you previously collected under that account. This is also the case when you deregister a delegated administrator from Organizations. However, Audit Manager stops collecting and attaching evidence to that delegated administrator account moving forward.

        Keep in mind the following cleanup task if you use evidence finder:

        Before you use your management account to remove a delegated administrator, make sure that the current delegated administrator account signs in to Audit Manager and disables evidence finder first. Disabling evidence finder automatically deletes the event data store that was created in their account when they enabled evidence finder. If this task isn’t completed, the event data store remains in their account. In this case, we recommend that the original delegated administrator goes to CloudTrail Lake and manually [deletes the event data store](https://docs.aws.amazon.com/awscloudtrail/latest/userguide/query-eds-disable-termination.html).

        This cleanup task is necessary to ensure that you don't end up with multiple event data stores. Audit Manager ignores an unused event data store after you remove or change a delegated administrator account. However, the unused event data store continues to incur storage costs from CloudTrail Lake if you don't delete it.

        When you deregister a delegated administrator account for Audit Manager, the data for that account isn’t deleted. If you want to delete resource data for a delegated administrator account, you must perform that task separately before you deregister the account. Either, you can do this in the Audit Manager console. Or, you can use one of the delete API operations that are provided by Audit Manager.

        To delete your Audit Manager resource data, see the following instructions:

          * [DeleteAssessment](https://docs.aws.amazon.com/audit-manager/latest/APIReference/API_DeleteAssessment.html) (see also: [Deleting an assessment](https://docs.aws.amazon.com/audit-manager/latest/userguide/delete-assessment.html) in the _Audit Manager User Guide_)

          * [DeleteAssessmentFramework](https://docs.aws.amazon.com/audit-manager/latest/APIReference/API_DeleteAssessmentFramework.html) (see also: [Deleting a custom framework](https://docs.aws.amazon.com/audit-manager/latest/userguide/delete-custom-framework.html) in the _Audit Manager User Guide_)

          * [DeleteAssessmentFrameworkShare](https://docs.aws.amazon.com/audit-manager/latest/APIReference/API_DeleteAssessmentFrameworkShare.html) (see also: [Deleting a share request](https://docs.aws.amazon.com/audit-manager/latest/userguide/deleting-shared-framework-requests.html) in the _Audit Manager User Guide_)

          * [DeleteAssessmentReport](https://docs.aws.amazon.com/audit-manager/latest/APIReference/API_DeleteAssessmentReport.html) (see also: [Deleting an assessment report](https://docs.aws.amazon.com/audit-manager/latest/userguide/generate-assessment-report.html#delete-assessment-report-steps) in the _Audit Manager User Guide_)

          * [DeleteControl](https://docs.aws.amazon.com/audit-manager/latest/APIReference/API_DeleteControl.html) (see also: [Deleting a custom control](https://docs.aws.amazon.com/audit-manager/latest/userguide/delete-controls.html) in the _Audit Manager User Guide_)

        At this time, Audit Manager doesn't provide an option to delete evidence for a specific delegated administrator. Instead, when your management account deregisters Audit Manager, we perform a cleanup for the current delegated administrator account at the time of deregistration.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                adminAccountId:
                  $ref: '#/components/schemas/AccountId'
      responses:
        '200': {}
        '403':
          description: |-
            Your account isn't registered with Audit Manager. Check the delegated administrator setup on the Audit Manager settings page, and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal service error occurred during the processing of your request. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource that's specified in the request can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The request has invalid or missing parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /assessments/{assessmentId}/disassociateFromAssessmentReport:
    put:
      operationId: DisassociateAssessmentReportEvidenceFolder
      description: |-
        Disassociates an evidence folder from the specified assessment report in Audit Manager.
      parameters:
      - name: assessmentId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                evidenceFolderId:
                  $ref: '#/components/schemas/UUID'
      responses:
        '200': {}
        '403':
          description: |-
            Your account isn't registered with Audit Manager. Check the delegated administrator setup on the Audit Manager settings page, and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal service error occurred during the processing of your request. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource that's specified in the request can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The request has invalid or missing parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /account/status:
    get:
      operationId: GetAccountStatus
      description: |-
        Gets the registration status of an account in Audit Manager.
      parameters: []
      responses:
        '200': {}
        '500':
          description: |-
            An internal service error occurred during the processing of your request. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
  /assessments/{assessmentId}/reports/{assessmentReportId}/url:
    get:
      operationId: GetAssessmentReportUrl
      description: |-
        Gets the URL of an assessment report in Audit Manager.
      parameters:
      - name: assessmentReportId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: assessmentId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        '200': {}
        '403':
          description: |-
            Your account isn't registered with Audit Manager. Check the delegated administrator setup on the Audit Manager settings page, and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal service error occurred during the processing of your request. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource that's specified in the request can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The request has invalid or missing parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /assessments/{assessmentId}/changelogs:
    get:
      operationId: GetChangeLogs
      description: |-
        Gets a list of changelogs from Audit Manager.
      parameters:
      - name: assessmentId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: controlSetId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ControlSetId'
      - name: controlId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/UUID'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Token'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            Your account isn't registered with Audit Manager. Check the delegated administrator setup on the Audit Manager settings page, and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal service error occurred during the processing of your request. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource that's specified in the request can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The request has invalid or missing parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /delegations:
    get:
      operationId: GetDelegations
      description: |-
        Gets a list of delegations from an audit owner to a delegate.
      parameters:
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Token'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            Your account isn't registered with Audit Manager. Check the delegated administrator setup on the Audit Manager settings page, and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal service error occurred during the processing of your request. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            The request has invalid or missing parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /assessments/{assessmentId}/controlSets/{controlSetId}/evidenceFolders/{evidenceFolderId}/evidence/{evidenceId}:
    get:
      operationId: GetEvidence
      description: |-
        Gets information about a specified evidence item.
      parameters:
      - name: assessmentId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: controlSetId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ControlSetId'
      - name: evidenceFolderId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: evidenceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        '200': {}
        '403':
          description: |-
            Your account isn't registered with Audit Manager. Check the delegated administrator setup on the Audit Manager settings page, and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal service error occurred during the processing of your request. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource that's specified in the request can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The request has invalid or missing parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /assessments/{assessmentId}/controlSets/{controlSetId}/evidenceFolders/{evidenceFolderId}/evidence:
    get:
      operationId: GetEvidenceByEvidenceFolder
      description: |-
        Gets all evidence from a specified evidence folder in Audit Manager.
      parameters:
      - name: assessmentId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: controlSetId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ControlSetId'
      - name: evidenceFolderId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Token'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            Your account isn't registered with Audit Manager. Check the delegated administrator setup on the Audit Manager settings page, and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal service error occurred during the processing of your request. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource that's specified in the request can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The request has invalid or missing parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /evidenceFileUploadUrl:
    get:
      operationId: GetEvidenceFileUploadUrl
      description: |-
        Creates a presigned Amazon S3 URL that can be used to upload a file as manual evidence. For instructions on how to use this operation, see [Upload a file from your browser ](https://docs.aws.amazon.com/audit-manager/latest/userguide/upload-evidence.html#how-to-upload-manual-evidence-files) in the _Audit Manager User Guide_.

        The following restrictions apply to this operation:

          * Maximum size of an individual evidence file: 100 MB

          * Number of daily manual evidence uploads per control: 100

          * Supported file formats: See [Supported file types for manual evidence](https://docs.aws.amazon.com/audit-manager/latest/userguide/upload-evidence.html#supported-manual-evidence-files) in the _Audit Manager User Guide_

        For more information about Audit Manager service restrictions, see [Quotas and restrictions for Audit Manager](https://docs.aws.amazon.com/audit-manager/latest/userguide/service-quotas.html).
      parameters:
      - name: fileName
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/ManualEvidenceLocalFileName'
      responses:
        '200': {}
        '403':
          description: |-
            Your account isn't registered with Audit Manager. Check the delegated administrator setup on the Audit Manager settings page, and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal service error occurred during the processing of your request. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request has invalid or missing parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /assessments/{assessmentId}/controlSets/{controlSetId}/evidenceFolders/{evidenceFolderId}:
    get:
      operationId: GetEvidenceFolder
      description: |-
        Gets an evidence folder from a specified assessment in Audit Manager.
      parameters:
      - name: assessmentId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: controlSetId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ControlSetId'
      - name: evidenceFolderId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        '200': {}
        '403':
          description: |-
            Your account isn't registered with Audit Manager. Check the delegated administrator setup on the Audit Manager settings page, and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal service error occurred during the processing of your request. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource that's specified in the request can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The request has invalid or missing parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /assessments/{assessmentId}/evidenceFolders:
    get:
      operationId: GetEvidenceFoldersByAssessment
      description: |-
        Gets the evidence folders from a specified assessment in Audit Manager.
      parameters:
      - name: assessmentId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Token'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            Your account isn't registered with Audit Manager. Check the delegated administrator setup on the Audit Manager settings page, and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal service error occurred during the processing of your request. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource that's specified in the request can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The request has invalid or missing parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /assessments/{assessmentId}/evidenceFolders-by-assessment-control/{controlSetId}/{controlId}:
    get:
      operationId: GetEvidenceFoldersByAssessmentControl
      description: |-
        Gets a list of evidence folders that are associated with a specified control in an Audit Manager assessment.
      parameters:
      - name: assessmentId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: controlSetId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ControlSetId'
      - name: controlId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Token'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            Your account isn't registered with Audit Manager. Check the delegated administrator setup on the Audit Manager settings page, and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal service error occurred during the processing of your request. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource that's specified in the request can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The request has invalid or missing parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /insights:
    get:
      operationId: GetInsights
      description: |-
        Gets the latest analytics data for all your current active assessments.
      parameters: []
      responses:
        '200': {}
        '403':
          description: |-
            Your account isn't registered with Audit Manager. Check the delegated administrator setup on the Audit Manager settings page, and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal service error occurred during the processing of your request. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
  /insights/assessments/{assessmentId}:
    get:
      operationId: GetInsightsByAssessment
      description: |-
        Gets the latest analytics data for a specific active assessment.
      parameters:
      - name: assessmentId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        '200': {}
        '403':
          description: |-
            Your account isn't registered with Audit Manager. Check the delegated administrator setup on the Audit Manager settings page, and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal service error occurred during the processing of your request. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource that's specified in the request can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The request has invalid or missing parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /account/organizationAdminAccount:
    get:
      operationId: GetOrganizationAdminAccount
      description: |-
        Gets the name of the delegated Amazon Web Services administrator account for a specified organization.
      parameters: []
      responses:
        '200': {}
        '403':
          description: |-
            Your account isn't registered with Audit Manager. Check the delegated administrator setup on the Audit Manager settings page, and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal service error occurred during the processing of your request. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource that's specified in the request can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The request has invalid or missing parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /services:
    get:
      operationId: GetServicesInScope
      description: |-
        Gets a list of the Amazon Web Services from which Audit Manager can collect evidence.

        Audit Manager defines which Amazon Web Services are in scope for an assessment. Audit Manager infers this scope by examining the assessment’s controls and their data sources, and then mapping this information to one or more of the corresponding Amazon Web Services that are in this list.

        For information about why it's no longer possible to specify services in scope manually, see [I can't edit the services in scope for my assessment](https://docs.aws.amazon.com/audit-manager/latest/userguide/evidence-collection-issues.html#unable-to-edit-services) in the _Troubleshooting_ section of the Audit Manager user guide.
      parameters: []
      responses:
        '200': {}
        '403':
          description: |-
            Your account isn't registered with Audit Manager. Check the delegated administrator setup on the Audit Manager settings page, and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal service error occurred during the processing of your request. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            The request has invalid or missing parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /settings/{attribute}:
    get:
      operationId: GetSettings
      description: |-
        Gets the settings for a specified Amazon Web Services account.
      parameters:
      - name: attribute
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/SettingAttribute'
      responses:
        '200': {}
        '403':
          description: |-
            Your account isn't registered with Audit Manager. Check the delegated administrator setup on the Audit Manager settings page, and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal service error occurred during the processing of your request. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
  /insights/controls-by-assessment:
    get:
      operationId: ListAssessmentControlInsightsByControlDomain
      description: |-
        Lists the latest analytics data for controls within a specific control domain and a specific active assessment.

        Control insights are listed only if the control belongs to the control domain and assessment that was specified. Moreover, the control must have collected evidence on the `lastUpdated` date of `controlInsightsByAssessment`. If neither of these conditions are met, no data is listed for that control.
      parameters:
      - name: controlDomainId
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/ControlDomainId'
      - name: assessmentId
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Token'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            Your account isn't registered with Audit Manager. Check the delegated administrator setup on the Audit Manager settings page, and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal service error occurred during the processing of your request. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource that's specified in the request can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The request has invalid or missing parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /assessmentFrameworkShareRequests:
    get:
      operationId: ListAssessmentFrameworkShareRequests
      description: |-
        Returns a list of sent or received share requests for custom frameworks in Audit Manager.
      parameters:
      - name: requestType
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/ShareRequestType'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Token'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            Your account isn't registered with Audit Manager. Check the delegated administrator setup on the Audit Manager settings page, and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal service error occurred during the processing of your request. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            The request has invalid or missing parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /assessmentReports:
    get:
      operationId: ListAssessmentReports
      description: |-
        Returns a list of assessment reports created in Audit Manager.
      parameters:
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Token'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            Your account isn't registered with Audit Manager. Check the delegated administrator setup on the Audit Manager settings page, and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal service error occurred during the processing of your request. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            The request has invalid or missing parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /insights/control-domains:
    get:
      operationId: ListControlDomainInsights
      description: |-
        Lists the latest analytics data for control domains across all of your active assessments.

        Audit Manager supports the control domains that are provided by Amazon Web Services Control Catalog. For information about how to find a list of available control domains, see [ `ListDomains` ](https://docs.aws.amazon.com/controlcatalog/latest/APIReference/API_ListDomains.html) in the Amazon Web Services Control Catalog API Reference.

        A control domain is listed only if at least one of the controls within that domain collected evidence on the `lastUpdated` date of `controlDomainInsights`. If this condition isn’t met, no data is listed for that control domain.
      parameters:
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Token'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            Your account isn't registered with Audit Manager. Check the delegated administrator setup on the Audit Manager settings page, and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal service error occurred during the processing of your request. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource that's specified in the request can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The request has invalid or missing parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /insights/control-domains-by-assessment:
    get:
      operationId: ListControlDomainInsightsByAssessment
      description: |-
        Lists analytics data for control domains within a specified active assessment.

        Audit Manager supports the control domains that are provided by Amazon Web Services Control Catalog. For information about how to find a list of available control domains, see [ `ListDomains` ](https://docs.aws.amazon.com/controlcatalog/latest/APIReference/API_ListDomains.html) in the Amazon Web Services Control Catalog API Reference.

        A control domain is listed only if at least one of the controls within that domain collected evidence on the `lastUpdated` date of `controlDomainInsights`. If this condition isn’t met, no data is listed for that domain.
      parameters:
      - name: assessmentId
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Token'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            Your account isn't registered with Audit Manager. Check the delegated administrator setup on the Audit Manager settings page, and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal service error occurred during the processing of your request. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource that's specified in the request can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The request has invalid or missing parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /insights/controls:
    get:
      operationId: ListControlInsightsByControlDomain
      description: |-
        Lists the latest analytics data for controls within a specific control domain across all active assessments.

        Control insights are listed only if the control belongs to the control domain that was specified and the control collected evidence on the `lastUpdated` date of `controlInsightsMetadata`. If neither of these conditions are met, no data is listed for that control.
      parameters:
      - name: controlDomainId
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/ControlDomainId'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Token'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            Your account isn't registered with Audit Manager. Check the delegated administrator setup on the Audit Manager settings page, and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal service error occurred during the processing of your request. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource that's specified in the request can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The request has invalid or missing parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /dataSourceKeywords:
    get:
      operationId: ListKeywordsForDataSource
      description: |-
        Returns a list of keywords that are pre-mapped to the specified control data source.
      parameters:
      - name: source
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/DataSourceType'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Token'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            Your account isn't registered with Audit Manager. Check the delegated administrator setup on the Audit Manager settings page, and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal service error occurred during the processing of your request. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            The request has invalid or missing parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /notifications:
    get:
      operationId: ListNotifications
      description: |-
        Returns a list of all Audit Manager notifications.
      parameters:
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Token'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            Your account isn't registered with Audit Manager. Check the delegated administrator setup on the Audit Manager settings page, and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal service error occurred during the processing of your request. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            The request has invalid or missing parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /tags/{resourceArn}:
    get:
      operationId: ListTagsForResource
      description: |-
        Returns a list of tags for the specified resource in Audit Manager.
      parameters:
      - name: resourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AuditManagerArn'
      responses:
        '200': {}
        '500':
          description: |-
            An internal service error occurred during the processing of your request. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource that's specified in the request can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The request has invalid or missing parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    post:
      operationId: TagResource
      description: |-
        Tags the specified resource in Audit Manager.
      parameters:
      - name: resourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AuditManagerArn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '200': {}
        '500':
          description: |-
            An internal service error occurred during the processing of your request. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource that's specified in the request can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The request has invalid or missing parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    delete:
      operationId: UntagResource
      description: |-
        Removes a tag from a resource in Audit Manager.
      parameters:
      - name: resourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AuditManagerArn'
      - name: tagKeys
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/TagKeyList'
      responses:
        '200': {}
        '500':
          description: |-
            An internal service error occurred during the processing of your request. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource that's specified in the request can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The request has invalid or missing parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /account/registerAccount:
    post:
      operationId: RegisterAccount
      description: |-
        Enables Audit Manager for the specified Amazon Web Services account.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                kmsKey:
                  $ref: '#/components/schemas/KmsKey'
                delegatedAdminAccount:
                  $ref: '#/components/schemas/AccountId'
      responses:
        '200': {}
        '403':
          description: |-
            Your account isn't registered with Audit Manager. Check the delegated administrator setup on the Audit Manager settings page, and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal service error occurred during the processing of your request. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource that's specified in the request can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request has invalid or missing parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /account/registerOrganizationAdminAccount:
    post:
      operationId: RegisterOrganizationAdminAccount
      description: |-
        Enables an Amazon Web Services account within the organization as the delegated administrator for Audit Manager.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                adminAccountId:
                  $ref: '#/components/schemas/AccountId'
      responses:
        '200': {}
        '403':
          description: |-
            Your account isn't registered with Audit Manager. Check the delegated administrator setup on the Audit Manager settings page, and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal service error occurred during the processing of your request. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource that's specified in the request can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The request has invalid or missing parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /assessmentFrameworks/{frameworkId}/shareRequests:
    post:
      operationId: StartAssessmentFrameworkShare
      description: |-
        Creates a share request for a custom framework in Audit Manager.

        The share request specifies a recipient and notifies them that a custom framework is available. Recipients have 120 days to accept or decline the request. If no action is taken, the share request expires.

        When you create a share request, Audit Manager stores a snapshot of your custom framework in the US East (N. Virginia) Amazon Web Services Region. Audit Manager also stores a backup of the same snapshot in the US West (Oregon) Amazon Web Services Region.

        Audit Manager deletes the snapshot and the backup snapshot when one of the following events occurs:

          * The sender revokes the share request.

          * The recipient declines the share request.

          * The recipient encounters an error and doesn't successfully accept the share request.

          * The share request expires before the recipient responds to the request.

        When a sender [resends a share request](https://docs.aws.amazon.com/audit-manager/latest/userguide/framework-sharing.html#framework-sharing-resend), the snapshot is replaced with an updated version that corresponds with the latest version of the custom framework.

        When a recipient accepts a share request, the snapshot is replicated into their Amazon Web Services account under the Amazon Web Services Region that was specified in the share request.

        When you invoke the `StartAssessmentFrameworkShare` API, you are about to share a custom framework with another Amazon Web Services account. You may not share a custom framework that is derived from a standard framework if the standard framework is designated as not eligible for sharing by Amazon Web Services, unless you have obtained permission to do so from the owner of the standard framework. To learn more about which standard frameworks are eligible for sharing, see [Framework sharing eligibility](https://docs.aws.amazon.com/audit-manager/latest/userguide/share-custom-framework-concepts-and-terminology.html#eligibility) in the _Audit Manager User Guide_.
      parameters:
      - name: frameworkId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                destinationAccount:
                  $ref: '#/components/schemas/AccountId'
                destinationRegion:
                  $ref: '#/components/schemas/Region'
                comment:
                  $ref: '#/components/schemas/ShareRequestComment'
      responses:
        '200': {}
        '403':
          description: |-
            Your account isn't registered with Audit Manager. Check the delegated administrator setup on the Audit Manager settings page, and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal service error occurred during the processing of your request. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource that's specified in the request can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The request has invalid or missing parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /assessments/{assessmentId}/controlSets/{controlSetId}/controls/{controlId}:
    put:
      operationId: UpdateAssessmentControl
      description: |-
        Updates a control within an assessment in Audit Manager.
      parameters:
      - name: assessmentId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: controlSetId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ControlSetId'
      - name: controlId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                controlStatus:
                  $ref: '#/components/schemas/ControlStatus'
                commentBody:
                  $ref: '#/components/schemas/ControlCommentBody'
      responses:
        '200': {}
        '403':
          description: |-
            Your account isn't registered with Audit Manager. Check the delegated administrator setup on the Audit Manager settings page, and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal service error occurred during the processing of your request. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource that's specified in the request can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The request has invalid or missing parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /assessments/{assessmentId}/controlSets/{controlSetId}/status:
    put:
      operationId: UpdateAssessmentControlSetStatus
      description: |-
        Updates the status of a control set in an Audit Manager assessment.
      parameters:
      - name: assessmentId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: controlSetId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  $ref: '#/components/schemas/ControlSetStatus'
                comment:
                  $ref: '#/components/schemas/DelegationComment'
      responses:
        '200': {}
        '403':
          description: |-
            Your account isn't registered with Audit Manager. Check the delegated administrator setup on the Audit Manager settings page, and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal service error occurred during the processing of your request. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource that's specified in the request can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The request has invalid or missing parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /assessments/{assessmentId}/status:
    put:
      operationId: UpdateAssessmentStatus
      description: |-
        Updates the status of an assessment in Audit Manager.
      parameters:
      - name: assessmentId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  $ref: '#/components/schemas/AssessmentStatus'
      responses:
        '200': {}
        '403':
          description: |-
            Your account isn't registered with Audit Manager. Check the delegated administrator setup on the Audit Manager settings page, and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal service error occurred during the processing of your request. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource that's specified in the request can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            You've reached your account quota for this resource type. To perform the requested action, delete some existing resources or [request a quota increase](https://docs.aws.amazon.com/general/latest/gr/aws_service_limits.html) from the Service Quotas console. For a list of Audit Manager service quotas, see [Quotas and restrictions for Audit Manager](https://docs.aws.amazon.com/audit-manager/latest/userguide/service-quotas.html).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '400':
          description: |-
            The request has invalid or missing parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /settings:
    put:
      operationId: UpdateSettings
      description: |-
        Updates Audit Manager settings for the current account.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                snsTopic:
                  $ref: '#/components/schemas/SnsArn'
                defaultAssessmentReportsDestination:
                  $ref: '#/components/schemas/AssessmentReportsDestination'
                defaultProcessOwners:
                  $ref: '#/components/schemas/Roles'
                kmsKey:
                  $ref: '#/components/schemas/KmsKey'
                evidenceFinderEnabled:
                  $ref: '#/components/schemas/Boolean'
                deregistrationPolicy:
                  $ref: '#/components/schemas/DeregistrationPolicy'
                defaultExportDestination:
                  $ref: '#/components/schemas/DefaultExportDestination'
      responses:
        '200': {}
        '403':
          description: |-
            Your account isn't registered with Audit Manager. Check the delegated administrator setup on the Audit Manager settings page, and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal service error occurred during the processing of your request. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            The request has invalid or missing parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /assessmentReports/integrity:
    post:
      operationId: ValidateAssessmentReportIntegrity
      description: |-
        Validates the integrity of an assessment report in Audit Manager.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                s3RelativePath:
                  $ref: '#/components/schemas/S3Url'
      responses:
        '200': {}
        '403':
          description: |-
            Your account isn't registered with Audit Manager. Check the delegated administrator setup on the Audit Manager settings page, and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal service error occurred during the processing of your request. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource that's specified in the request can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The request has invalid or missing parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
components:
  schemas:
    AWSAccount:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The identifier for the Amazon Web Services account.
        emailAddress:
          allOf:
          - $ref: '#/components/schemas/EmailAddress'
          description: The email address that's associated with the Amazon Web Services
            account.
        name:
          allOf:
          - $ref: '#/components/schemas/AccountName'
          description: The name of the Amazon Web Services account.
      description: The wrapper of Amazon Web Services account details, such as account
        ID or email address.
    AWSAccounts:
      type: array
      items:
        $ref: '#/components/schemas/AWSAccount'
      x-sensitive: true
    AWSService:
      type: object
      properties:
        serviceName:
          allOf:
          - $ref: '#/components/schemas/AWSServiceName'
          description: The name of the Amazon Web Service.
      description: "An Amazon Web Service such as Amazon S3 or CloudTrail.\n\nFor\
        \ an example of how to find an Amazon Web Service name and how to define it\
        \ in your assessment scope, see the following:\n\n  * [Finding an Amazon Web\
        \ Service name to use in your assessment scope](https://docs.aws.amazon.com/audit-manager/latest/APIReference/API_GetServicesInScope.html#API_GetServicesInScope_Example_2)\n\
        \n  * [Defining an Amazon Web Service name in your assessment scope](https://docs.aws.amazon.com/audit-manager/latest/APIReference/API_GetServicesInScope.html#API_GetServicesInScope_Example_3)"
    AWSServiceName:
      type: string
      pattern: ^[a-zA-Z0-9-\s().]+$
      minLength: 1
      maxLength: 40
    AWSServices:
      type: array
      items:
        $ref: '#/components/schemas/AWSService'
    AccessDeniedException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      required:
      - message
      description: Your account isn't registered with Audit Manager. Check the delegated
        administrator setup on the Audit Manager settings page, and try again.
    AccountId:
      type: string
      pattern: ^[0-9]{12}$
      minLength: 12
      maxLength: 12
    AccountName:
      type: string
      pattern: ^[\u0020-\u007E]+$
      minLength: 1
      maxLength: 50
    AccountStatus:
      type: string
      enum:
      - ACTIVE
      - INACTIVE
      - PENDING_ACTIVATION
    ActionEnum:
      type: string
      enum:
      - CREATE
      - UPDATE_METADATA
      - ACTIVE
      - INACTIVE
      - DELETE
      - UNDER_REVIEW
      - REVIEWED
      - IMPORT_EVIDENCE
    ActionPlanInstructions:
      type: string
      pattern: ^[\w\W\s\S]*$
      minLength: 0
      maxLength: 1000
    ActionPlanTitle:
      type: string
      pattern: ^[\w\W\s\S]*$
      minLength: 0
      maxLength: 300
    Assessment:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/AuditManagerArn'
          description: The Amazon Resource Name (ARN) of the assessment.
        awsAccount:
          allOf:
          - $ref: '#/components/schemas/AWSAccount'
          description: The Amazon Web Services account that's associated with the
            assessment.
        metadata:
          allOf:
          - $ref: '#/components/schemas/AssessmentMetadata'
          description: The metadata for the assessment.
        framework:
          allOf:
          - $ref: '#/components/schemas/AssessmentFramework'
          description: The framework that the assessment was created from.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The tags that are associated with the assessment.
      description: An entity that defines the scope of audit evidence collected by
        Audit Manager. An Audit Manager assessment is an implementation of an Audit
        Manager framework.
    AssessmentControl:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The identifier for the control.
        name:
          allOf:
          - $ref: '#/components/schemas/ControlName'
          description: The name of the control.
        description:
          allOf:
          - $ref: '#/components/schemas/ControlDescription'
          description: The description of the control.
        status:
          allOf:
          - $ref: '#/components/schemas/ControlStatus'
          description: The status of the control.
        response:
          allOf:
          - $ref: '#/components/schemas/ControlResponse'
          description: The response of the control.
        comments:
          allOf:
          - $ref: '#/components/schemas/ControlComments'
          description: The list of comments that's attached to the control.
        evidenceSources:
          allOf:
          - $ref: '#/components/schemas/EvidenceSources'
          description: The list of data sources for the evidence.
        evidenceCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The amount of evidence that's collected for the control.
        assessmentReportEvidenceCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The amount of evidence in the assessment report.
      description: The control entity that represents a standard control or a custom
        control in an Audit Manager assessment.
    AssessmentControlSet:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/ControlSetId'
          description: The identifier of the control set in the assessment. This is
            the control set name in a plain string format.
        description:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The description for the control set.
        status:
          allOf:
          - $ref: '#/components/schemas/ControlSetStatus'
          description: The current status of the control set.
        roles:
          allOf:
          - $ref: '#/components/schemas/Roles'
          description: The roles that are associated with the control set.
        controls:
          allOf:
          - $ref: '#/components/schemas/AssessmentControls'
          description: The list of controls that's contained with the control set.
        delegations:
          allOf:
          - $ref: '#/components/schemas/Delegations'
          description: The delegations that are associated with the control set.
        systemEvidenceCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The total number of evidence objects that are retrieved automatically
            for the control set.
        manualEvidenceCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The total number of evidence objects that are uploaded manually
            to the control set.
      description: Represents a set of controls in an Audit Manager assessment.
    AssessmentControlSets:
      type: array
      items:
        $ref: '#/components/schemas/AssessmentControlSet'
    AssessmentControls:
      type: array
      items:
        $ref: '#/components/schemas/AssessmentControl'
    AssessmentDescription:
      type: string
      pattern: ^[\w\W\s\S]*$
      minLength: 0
      maxLength: 1000
    AssessmentEvidenceFolder:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/AssessmentEvidenceFolderName'
          description: The name of the evidence folder.
        date:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date when the first evidence was added to the evidence
            folder.
        assessmentId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The identifier for the assessment.
        controlSetId:
          allOf:
          - $ref: '#/components/schemas/ControlSetId'
          description: The identifier for the control set.
        controlId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier for the control.
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The identifier for the folder that the evidence is stored in.
        dataSource:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Web Service that the evidence was collected from.
        author:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the user who created the evidence folder.
        totalEvidence:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The total amount of evidence in the evidence folder.
        assessmentReportSelectionCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The total count of evidence that's included in the assessment
            report.
        controlName:
          allOf:
          - $ref: '#/components/schemas/ControlName'
          description: The name of the control.
        evidenceResourcesIncludedCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The amount of evidence that's included in the evidence folder.
        evidenceByTypeConfigurationDataCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of evidence that falls under the configuration data
            category. This evidence is collected from configuration snapshots of other
            Amazon Web Services such as Amazon EC2, Amazon S3, or IAM.
        evidenceByTypeManualCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of evidence that falls under the manual category.
            This evidence is imported manually.
        evidenceByTypeComplianceCheckCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of evidence that falls under the compliance check
            category. This evidence is collected from Config or Security Hub.
        evidenceByTypeComplianceCheckIssuesCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The total number of issues that were reported directly from
            Security Hub, Config, or both.
        evidenceByTypeUserActivityCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of evidence that falls under the user activity category.
            This evidence is collected from CloudTrail logs.
        evidenceAwsServiceSourceCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The total number of Amazon Web Services resources that were
            assessed to generate the evidence.
      description: The folder where Audit Manager stores evidence for an assessment.
    AssessmentEvidenceFolderName:
      type: string
      pattern: ^[\w\W\s\S]*$
      minLength: 1
      maxLength: 300
    AssessmentEvidenceFolders:
      type: array
      items:
        $ref: '#/components/schemas/AssessmentEvidenceFolder'
    AssessmentFramework:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier for the framework.
        arn:
          allOf:
          - $ref: '#/components/schemas/AuditManagerArn'
          description: The Amazon Resource Name (ARN) of the framework.
        metadata:
          $ref: '#/components/schemas/FrameworkMetadata'
        controlSets:
          allOf:
          - $ref: '#/components/schemas/AssessmentControlSets'
          description: The control sets that are associated with the framework.
      description: The file used to structure and automate Audit Manager assessments
        for a given compliance standard.
    AssessmentFrameworkDescription:
      type: string
      pattern: ^[\w\W\s\S]*$
      minLength: 1
      maxLength: 200
    AssessmentFrameworkMetadata:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/AuditManagerArn'
          description: The Amazon Resource Name (ARN) of the framework.
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier for the framework.
        type:
          allOf:
          - $ref: '#/components/schemas/FrameworkType'
          description: The framework type, such as a standard framework or a custom
            framework.
        name:
          allOf:
          - $ref: '#/components/schemas/FrameworkName'
          description: The name of the framework.
        description:
          allOf:
          - $ref: '#/components/schemas/FrameworkDescription'
          description: The description of the framework.
        logo:
          allOf:
          - $ref: '#/components/schemas/Filename'
          description: The logo that's associated with the framework.
        complianceType:
          allOf:
          - $ref: '#/components/schemas/ComplianceType'
          description: The compliance type that the new custom framework supports,
            such as CIS or HIPAA.
        controlsCount:
          allOf:
          - $ref: '#/components/schemas/ControlsCount'
          description: The number of controls that are associated with the framework.
        controlSetsCount:
          allOf:
          - $ref: '#/components/schemas/ControlSetsCount'
          description: The number of control sets that are associated with the framework.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time when the framework was created.
        lastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time when the framework was most recently updated.
      description: The metadata that's associated with a standard framework or a custom
        framework.
    AssessmentFrameworkShareRequest:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier for the share request.
        frameworkId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier for the shared custom framework.
        frameworkName:
          allOf:
          - $ref: '#/components/schemas/FrameworkName'
          description: The name of the custom framework that the share request is
            for.
        frameworkDescription:
          allOf:
          - $ref: '#/components/schemas/FrameworkDescription'
          description: The description of the shared custom framework.
        status:
          allOf:
          - $ref: '#/components/schemas/ShareRequestStatus'
          description: The status of the share request.
        sourceAccount:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The Amazon Web Services account of the sender.
        destinationAccount:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The Amazon Web Services account of the recipient.
        destinationRegion:
          allOf:
          - $ref: '#/components/schemas/Region'
          description: The Amazon Web Services Region of the recipient.
        expirationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time when the share request expires.
        creationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time when the share request was created.
        lastUpdated:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: Specifies when the share request was last updated.
        comment:
          allOf:
          - $ref: '#/components/schemas/ShareRequestComment'
          description: An optional comment from the sender about the share request.
        standardControlsCount:
          allOf:
          - $ref: '#/components/schemas/NullableInteger'
          description: The number of standard controls that are part of the shared
            custom framework.
        customControlsCount:
          allOf:
          - $ref: '#/components/schemas/NullableInteger'
          description: The number of custom controls that are part of the shared custom
            framework.
        complianceType:
          allOf:
          - $ref: '#/components/schemas/ComplianceType'
          description: The compliance type that the shared custom framework supports,
            such as CIS or HIPAA.
      description: Represents a share request for a custom framework in Audit Manager.
    AssessmentFrameworkShareRequestList:
      type: array
      items:
        $ref: '#/components/schemas/AssessmentFrameworkShareRequest'
    AssessmentMetadata:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/AssessmentName'
          description: The name of the assessment.
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier for the assessment.
        description:
          allOf:
          - $ref: '#/components/schemas/AssessmentDescription'
          description: The description of the assessment.
        complianceType:
          allOf:
          - $ref: '#/components/schemas/ComplianceType'
          description: The name of the compliance standard that's related to the assessment,
            such as PCI-DSS.
        status:
          allOf:
          - $ref: '#/components/schemas/AssessmentStatus'
          description: The overall status of the assessment.
        assessmentReportsDestination:
          allOf:
          - $ref: '#/components/schemas/AssessmentReportsDestination'
          description: The destination that evidence reports are stored in for the
            assessment.
        scope:
          allOf:
          - $ref: '#/components/schemas/Scope'
          description: The wrapper of Amazon Web Services accounts and services that
            are in scope for the assessment.
        roles:
          allOf:
          - $ref: '#/components/schemas/Roles'
          description: The roles that are associated with the assessment.
        delegations:
          allOf:
          - $ref: '#/components/schemas/Delegations'
          description: The delegations that are associated with the assessment.
        creationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: Specifies when the assessment was created.
        lastUpdated:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time of the most recent update.
      description: The metadata that's associated with the specified assessment.
    AssessmentMetadataItem:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/AssessmentName'
          description: The name of the assessment.
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier for the assessment.
        complianceType:
          allOf:
          - $ref: '#/components/schemas/ComplianceType'
          description: The name of the compliance standard that's related to the assessment,
            such as PCI-DSS.
        status:
          allOf:
          - $ref: '#/components/schemas/AssessmentStatus'
          description: The current status of the assessment.
        roles:
          allOf:
          - $ref: '#/components/schemas/Roles'
          description: The roles that are associated with the assessment.
        delegations:
          allOf:
          - $ref: '#/components/schemas/Delegations'
          description: The delegations that are associated with the assessment.
        creationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: Specifies when the assessment was created.
        lastUpdated:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time of the most recent update.
      description: A metadata object that's associated with an assessment in Audit
        Manager.
    AssessmentName:
      type: string
      pattern: ^[^\\]*$
      minLength: 1
      maxLength: 300
    AssessmentReport:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier for the assessment report.
        name:
          allOf:
          - $ref: '#/components/schemas/AssessmentReportName'
          description: The name that's given to the assessment report.
        description:
          allOf:
          - $ref: '#/components/schemas/AssessmentReportDescription'
          description: The description of the specified assessment report.
        awsAccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The identifier for the specified Amazon Web Services account.
        assessmentId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The identifier for the specified assessment.
        assessmentName:
          allOf:
          - $ref: '#/components/schemas/AssessmentName'
          description: The name of the associated assessment.
        author:
          allOf:
          - $ref: '#/components/schemas/Username'
          description: The name of the user who created the assessment report.
        status:
          allOf:
          - $ref: '#/components/schemas/AssessmentReportStatus'
          description: The current status of the specified assessment report.
        creationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: Specifies when the assessment report was created.
      description: A finalized document that's generated from an Audit Manager assessment.
        These reports summarize the relevant evidence that was collected for your
        audit, and link to the relevant evidence folders. These evidence folders are
        named and organized according to the controls that are specified in your assessment.
    AssessmentReportDescription:
      type: string
      pattern: ^[\w\W\s\S]*$
      minLength: 0
      maxLength: 1000
    AssessmentReportDestinationType:
      type: string
      enum:
      - S3
    AssessmentReportEvidenceError:
      type: object
      properties:
        evidenceId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The identifier for the evidence.
        errorCode:
          allOf:
          - $ref: '#/components/schemas/ErrorCode'
          description: The error code that was returned.
        errorMessage:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage'
          description: The error message that was returned.
      description: An error entity for assessment report evidence errors. This is
        used to provide more meaningful errors than a simple string message.
    AssessmentReportEvidenceErrors:
      type: array
      items:
        $ref: '#/components/schemas/AssessmentReportEvidenceError'
    AssessmentReportMetadata:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier for the assessment report.
        name:
          allOf:
          - $ref: '#/components/schemas/AssessmentReportName'
          description: The name of the assessment report.
        description:
          allOf:
          - $ref: '#/components/schemas/AssessmentReportDescription'
          description: The description of the assessment report.
        assessmentId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier for the associated assessment.
        assessmentName:
          allOf:
          - $ref: '#/components/schemas/AssessmentName'
          description: The name of the associated assessment.
        author:
          allOf:
          - $ref: '#/components/schemas/Username'
          description: The name of the user who created the assessment report.
        status:
          allOf:
          - $ref: '#/components/schemas/AssessmentReportStatus'
          description: The current status of the assessment report.
        creationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: Specifies when the assessment report was created.
      description: The metadata objects that are associated with the specified assessment
        report.
    AssessmentReportName:
      type: string
      pattern: ^[a-zA-Z0-9-_\.]+$
      minLength: 1
      maxLength: 300
    AssessmentReportStatus:
      type: string
      enum:
      - COMPLETE
      - IN_PROGRESS
      - FAILED
    AssessmentReportsDestination:
      type: object
      properties:
        destinationType:
          allOf:
          - $ref: '#/components/schemas/AssessmentReportDestinationType'
          description: The destination type, such as Amazon S3.
        destination:
          allOf:
          - $ref: '#/components/schemas/S3Url'
          description: The destination bucket where Audit Manager stores assessment
            reports.
      description: The location where Audit Manager saves assessment reports for the
        given assessment.
    AssessmentReportsMetadata:
      type: array
      items:
        $ref: '#/components/schemas/AssessmentReportMetadata'
    AssessmentStatus:
      type: string
      enum:
      - ACTIVE
      - INACTIVE
    AssociateAssessmentReportEvidenceFolderRequest:
      type: object
      properties:
        assessmentId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The identifier for the assessment.
        evidenceFolderId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The identifier for the folder that the evidence is stored in.
      required:
      - assessmentId
      - evidenceFolderId
    AssociateAssessmentReportEvidenceFolderResponse:
      type: object
      properties: {}
    AuditManagerArn:
      type: string
      pattern: '^arn:.*:auditmanager:'
      minLength: 20
      maxLength: 2048
    BatchAssociateAssessmentReportEvidenceRequest:
      type: object
      properties:
        assessmentId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The identifier for the assessment.
        evidenceFolderId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The identifier for the folder that the evidence is stored in.
        evidenceIds:
          allOf:
          - $ref: '#/components/schemas/EvidenceIds'
          description: The list of evidence identifiers.
      required:
      - assessmentId
      - evidenceFolderId
      - evidenceIds
    BatchAssociateAssessmentReportEvidenceResponse:
      type: object
      properties:
        evidenceIds:
          allOf:
          - $ref: '#/components/schemas/EvidenceIds'
          description: The list of evidence identifiers.
        errors:
          allOf:
          - $ref: '#/components/schemas/AssessmentReportEvidenceErrors'
          description: A list of errors that the `BatchAssociateAssessmentReportEvidence`
            API returned.
    BatchCreateDelegationByAssessmentError:
      type: object
      properties:
        createDelegationRequest:
          allOf:
          - $ref: '#/components/schemas/CreateDelegationRequest'
          description: The API request to batch create delegations in Audit Manager.
        errorCode:
          allOf:
          - $ref: '#/components/schemas/ErrorCode'
          description: The error code that the `BatchCreateDelegationByAssessment`
            API returned.
        errorMessage:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage'
          description: The error message that the `BatchCreateDelegationByAssessment`
            API returned.
      description: An error entity for the `BatchCreateDelegationByAssessment` API.
        This is used to provide more meaningful errors than a simple string message.
    BatchCreateDelegationByAssessmentErrors:
      type: array
      items:
        $ref: '#/components/schemas/BatchCreateDelegationByAssessmentError'
      x-sensitive: true
    BatchCreateDelegationByAssessmentRequest:
      type: object
      properties:
        createDelegationRequests:
          allOf:
          - $ref: '#/components/schemas/CreateDelegationRequests'
          description: The API request to batch create delegations in Audit Manager.
        assessmentId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The identifier for the assessment.
      required:
      - createDelegationRequests
      - assessmentId
    BatchCreateDelegationByAssessmentResponse:
      type: object
      properties:
        delegations:
          allOf:
          - $ref: '#/components/schemas/Delegations'
          description: The delegations that are associated with the assessment.
        errors:
          allOf:
          - $ref: '#/components/schemas/BatchCreateDelegationByAssessmentErrors'
          description: A list of errors that the `BatchCreateDelegationByAssessment`
            API returned.
    BatchDeleteDelegationByAssessmentError:
      type: object
      properties:
        delegationId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The identifier for the delegation.
        errorCode:
          allOf:
          - $ref: '#/components/schemas/ErrorCode'
          description: The error code that the `BatchDeleteDelegationByAssessment`
            API returned.
        errorMessage:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage'
          description: The error message that the `BatchDeleteDelegationByAssessment`
            API returned.
      description: An error entity for the `BatchDeleteDelegationByAssessment` API.
        This is used to provide more meaningful errors than a simple string message.
    BatchDeleteDelegationByAssessmentErrors:
      type: array
      items:
        $ref: '#/components/schemas/BatchDeleteDelegationByAssessmentError'
      x-sensitive: true
    BatchDeleteDelegationByAssessmentRequest:
      type: object
      properties:
        delegationIds:
          allOf:
          - $ref: '#/components/schemas/DelegationIds'
          description: The identifiers for the delegations.
        assessmentId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The identifier for the assessment.
      required:
      - delegationIds
      - assessmentId
    BatchDeleteDelegationByAssessmentResponse:
      type: object
      properties:
        errors:
          allOf:
          - $ref: '#/components/schemas/BatchDeleteDelegationByAssessmentErrors'
          description: A list of errors that the `BatchDeleteDelegationByAssessment`
            API returned.
    BatchDisassociateAssessmentReportEvidenceRequest:
      type: object
      properties:
        assessmentId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The identifier for the assessment.
        evidenceFolderId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The identifier for the folder that the evidence is stored in.
        evidenceIds:
          allOf:
          - $ref: '#/components/schemas/EvidenceIds'
          description: The list of evidence identifiers.
      required:
      - assessmentId
      - evidenceFolderId
      - evidenceIds
    BatchDisassociateAssessmentReportEvidenceResponse:
      type: object
      properties:
        evidenceIds:
          allOf:
          - $ref: '#/components/schemas/EvidenceIds'
          description: The identifier for the evidence.
        errors:
          allOf:
          - $ref: '#/components/schemas/AssessmentReportEvidenceErrors'
          description: A list of errors that the `BatchDisassociateAssessmentReportEvidence`
            API returned.
    BatchImportEvidenceToAssessmentControlError:
      type: object
      properties:
        manualEvidence:
          allOf:
          - $ref: '#/components/schemas/ManualEvidence'
          description: Manual evidence that can't be collected automatically by Audit
            Manager.
        errorCode:
          allOf:
          - $ref: '#/components/schemas/ErrorCode'
          description: The error code that the `BatchImportEvidenceToAssessmentControl`
            API returned.
        errorMessage:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage'
          description: The error message that the `BatchImportEvidenceToAssessmentControl`
            API returned.
      description: An error entity for the `BatchImportEvidenceToAssessmentControl`
        API. This is used to provide more meaningful errors than a simple string message.
    BatchImportEvidenceToAssessmentControlErrors:
      type: array
      items:
        $ref: '#/components/schemas/BatchImportEvidenceToAssessmentControlError'
    BatchImportEvidenceToAssessmentControlRequest:
      type: object
      properties:
        assessmentId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The identifier for the assessment.
        controlSetId:
          allOf:
          - $ref: '#/components/schemas/ControlSetId'
          description: The identifier for the control set.
        controlId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The identifier for the control.
        manualEvidence:
          allOf:
          - $ref: '#/components/schemas/ManualEvidenceList'
          description: The list of manual evidence objects.
      required:
      - assessmentId
      - controlSetId
      - controlId
      - manualEvidence
    BatchImportEvidenceToAssessmentControlResponse:
      type: object
      properties:
        errors:
          allOf:
          - $ref: '#/components/schemas/BatchImportEvidenceToAssessmentControlErrors'
          description: A list of errors that the `BatchImportEvidenceToAssessmentControl`
            API returned.
    Boolean:
      type: boolean
    ChangeLog:
      type: object
      properties:
        objectType:
          allOf:
          - $ref: '#/components/schemas/ObjectTypeEnum'
          description: The object that was changed, such as an assessment, control,
            or control set.
        objectName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the object that changed. This could be the name
            of an assessment, control, or control set.
        action:
          allOf:
          - $ref: '#/components/schemas/ActionEnum'
          description: The action that was performed.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time when the action was performed and the changelog record
            was created.
        createdBy:
          allOf:
          - $ref: '#/components/schemas/IamArn'
          description: The user or role that performed the action.
      description: The record of a change within Audit Manager. For example, this
        could be the status change of an assessment or the delegation of a control
        set.
    ChangeLogs:
      type: array
      items:
        $ref: '#/components/schemas/ChangeLog'
    CloudTrailArn:
      type: string
      pattern: '^arn:.*:cloudtrail:'
      minLength: 20
      maxLength: 2048
    ComplianceType:
      type: string
      pattern: ^[\w\W\s\S]*$
      minLength: 0
      maxLength: 100
    Control:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/AuditManagerArn'
          description: The Amazon Resource Name (ARN) of the control.
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier for the control.
        type:
          allOf:
          - $ref: '#/components/schemas/ControlType'
          description: Specifies whether the control is a standard control or a custom
            control.
        name:
          allOf:
          - $ref: '#/components/schemas/ControlName'
          description: The name of the control.
        description:
          allOf:
          - $ref: '#/components/schemas/ControlDescription'
          description: The description of the control.
        testingInformation:
          allOf:
          - $ref: '#/components/schemas/TestingInformation'
          description: The steps that you should follow to determine if the control
            has been satisfied.
        actionPlanTitle:
          allOf:
          - $ref: '#/components/schemas/ActionPlanTitle'
          description: The title of the action plan for remediating the control.
        actionPlanInstructions:
          allOf:
          - $ref: '#/components/schemas/ActionPlanInstructions'
          description: The recommended actions to carry out if the control isn't fulfilled.
        controlSources:
          allOf:
          - $ref: '#/components/schemas/ControlSources'
          description: The data source types that determine where Audit Manager collects
            evidence from for the control.
        controlMappingSources:
          allOf:
          - $ref: '#/components/schemas/ControlMappingSources'
          description: The data mapping sources for the control.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time when the control was created.
        lastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time when the control was most recently updated.
        createdBy:
          allOf:
          - $ref: '#/components/schemas/CreatedBy'
          description: The user or role that created the control.
        lastUpdatedBy:
          allOf:
          - $ref: '#/components/schemas/LastUpdatedBy'
          description: The user or role that most recently updated the control.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The tags associated with the control.
        state:
          allOf:
          - $ref: '#/components/schemas/ControlState'
          description: The state of the control. The `END_OF_SUPPORT` state is applicable
            to standard controls only. This state indicates that the standard control
            can still be used to collect evidence, but Audit Manager is no longer
            updating or maintaining that control.
      description: A control in Audit Manager.
    ControlCatalogId:
      type: string
      pattern: ^arn:.*:controlcatalog:.*|UNCATEGORIZED$
      minLength: 13
      maxLength: 2048
    ControlComment:
      type: object
      properties:
        authorName:
          allOf:
          - $ref: '#/components/schemas/Username'
          description: The name of the user who authored the comment.
        commentBody:
          allOf:
          - $ref: '#/components/schemas/ControlCommentBody'
          description: The body text of a control comment.
        postedDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time when the comment was posted.
      description: A comment that's posted by a user on a control. This includes the
        author's name, the comment text, and a timestamp.
    ControlCommentBody:
      type: string
      pattern: ^[\w\W\s\S]*$
      minLength: 0
      maxLength: 500
    ControlComments:
      type: array
      items:
        $ref: '#/components/schemas/ControlComment'
    ControlDescription:
      type: string
      pattern: ^[\w\W\s\S]*$
      minLength: 0
      maxLength: 1000
    ControlDomainId:
      type: string
      pattern: ^arn:.*:controlcatalog:.*:.*:domain/.*|UNCATEGORIZED|^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
      minLength: 13
      maxLength: 2048
    ControlDomainInsights:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the control domain.
        id:
          allOf:
          - $ref: '#/components/schemas/ControlDomainId'
          description: The unique identifier for the control domain. Audit Manager
            supports the control domains that are provided by Amazon Web Services
            Control Catalog. For information about how to find a list of available
            control domains, see [ `ListDomains` ](https://docs.aws.amazon.com/controlcatalog/latest/APIReference/API_ListDomains.html)
            in the Amazon Web Services Control Catalog API Reference.
        controlsCountByNoncompliantEvidence:
          allOf:
          - $ref: '#/components/schemas/NullableInteger'
          description: The number of controls in the control domain that collected
            non-compliant evidence on the `lastUpdated` date.
        totalControlsCount:
          allOf:
          - $ref: '#/components/schemas/NullableInteger'
          description: The total number of controls in the control domain.
        evidenceInsights:
          allOf:
          - $ref: '#/components/schemas/EvidenceInsights'
          description: A breakdown of the compliance check status for the evidence
            that’s associated with the control domain.
        lastUpdated:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time when the control domain insights were last updated.
      description: 'A summary of the latest analytics data for a specific control
        domain.


        Control domain insights are grouped by control domain, and ranked by the highest
        total count of non-compliant evidence.'
    ControlDomainInsightsList:
      type: array
      items:
        $ref: '#/components/schemas/ControlDomainInsights'
    ControlInsightsMetadata:
      type: array
      items:
        $ref: '#/components/schemas/ControlInsightsMetadataItem'
    ControlInsightsMetadataByAssessment:
      type: array
      items:
        $ref: '#/components/schemas/ControlInsightsMetadataByAssessmentItem'
    ControlInsightsMetadataByAssessmentItem:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the assessment control.
        id:
          allOf:
          - $ref: '#/components/schemas/ControlDomainId'
          description: The unique identifier for the assessment control.
        evidenceInsights:
          allOf:
          - $ref: '#/components/schemas/EvidenceInsights'
          description: A breakdown of the compliance check status for the evidence
            that’s associated with the assessment control.
        controlSetName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the control set that the assessment control belongs
            to.
        lastUpdated:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time when the assessment control insights were last updated.
      description: 'A summary of the latest analytics data for a specific control
        in a specific active assessment.


        Control insights are grouped by control domain, and ranked by the highest
        total count of non-compliant evidence.'
    ControlInsightsMetadataItem:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the control.
        id:
          allOf:
          - $ref: '#/components/schemas/ControlDomainId'
          description: The unique identifier for the control.
        evidenceInsights:
          allOf:
          - $ref: '#/components/schemas/EvidenceInsights'
          description: A breakdown of the compliance check status for the evidence
            that’s associated with the control.
        lastUpdated:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time when the control insights were last updated.
      description: 'A summary of the latest analytics data for a specific control.


        This data reflects the total counts for the specified control across all active
        assessments. Control insights are grouped by control domain, and ranked by
        the highest total count of non-compliant evidence.'
    ControlMappingSource:
      type: object
      properties:
        sourceId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier for the source.
        sourceName:
          allOf:
          - $ref: '#/components/schemas/SourceName'
          description: The name of the source.
        sourceDescription:
          allOf:
          - $ref: '#/components/schemas/SourceDescription'
          description: The description of the source.
        sourceSetUpOption:
          allOf:
          - $ref: '#/components/schemas/SourceSetUpOption'
          description: The setup option for the data source. This option reflects
            if the evidence collection method is automated or manual. If you don’t
            provide a value for `sourceSetUpOption`, Audit Manager automatically infers
            and populates the correct value based on the `sourceType` that you specify.
        sourceType:
          allOf:
          - $ref: '#/components/schemas/SourceType'
          description: "Specifies which type of data source is used to collect evidence.\n\
            \n  * The source can be an individual data source type, such as `AWS_Cloudtrail`,\
            \ `AWS_Config`, `AWS_Security_Hub`, `AWS_API_Call`, or `MANUAL`. \n\n\
            \  * The source can also be a managed grouping of data sources, such as\
            \ a `Core_Control` or a `Common_Control`."
        sourceKeyword:
          $ref: '#/components/schemas/SourceKeyword'
        sourceFrequency:
          allOf:
          - $ref: '#/components/schemas/SourceFrequency'
          description: Specifies how often evidence is collected from the control
            mapping source.
        troubleshootingText:
          allOf:
          - $ref: '#/components/schemas/TroubleshootingText'
          description: The instructions for troubleshooting the control.
      description: The data source that determines where Audit Manager collects evidence
        from for the control.
    ControlMappingSources:
      type: array
      items:
        $ref: '#/components/schemas/ControlMappingSource'
    ControlMetadata:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/AuditManagerArn'
          description: The Amazon Resource Name (ARN) of the control.
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier for the control.
        name:
          allOf:
          - $ref: '#/components/schemas/ControlName'
          description: The name of the control.
        controlSources:
          allOf:
          - $ref: '#/components/schemas/ControlSources'
          description: The data source that determines where Audit Manager collects
            evidence from for the control.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time when the control was created.
        lastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time when the control was most recently updated.
      description: The metadata that's associated with the standard control or custom
        control.
    ControlMetadataList:
      type: array
      items:
        $ref: '#/components/schemas/ControlMetadata'
    ControlName:
      type: string
      pattern: ^[^\\]*$
      minLength: 1
      maxLength: 300
    ControlResponse:
      type: string
      enum:
      - MANUAL
      - AUTOMATE
      - DEFER
      - IGNORE
    ControlSet:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The identifier of the control set in the assessment. This is
            the control set name in a plain string format.
        name:
          allOf:
          - $ref: '#/components/schemas/ControlSetName'
          description: The name of the control set.
        controls:
          allOf:
          - $ref: '#/components/schemas/Controls'
          description: The list of controls within the control set.
      description: A set of controls in Audit Manager.
    ControlSetId:
      type: string
      pattern: ^[\w\W\s\S]*$
      minLength: 1
      maxLength: 300
    ControlSetName:
      type: string
      pattern: ^[^\\\_]*$
      minLength: 1
      maxLength: 300
    ControlSetStatus:
      type: string
      enum:
      - ACTIVE
      - UNDER_REVIEW
      - REVIEWED
    ControlSets:
      type: array
      items:
        $ref: '#/components/schemas/ControlSet'
      x-sensitive: true
    ControlSetsCount:
      type: integer
      default: 0
    ControlSources:
      type: string
      pattern: ^[a-zA-Z_0-9-\s.,]+$
      minLength: 1
      maxLength: 100
    ControlState:
      type: string
      enum:
      - ACTIVE
      - END_OF_SUPPORT
    ControlStatus:
      type: string
      enum:
      - UNDER_REVIEW
      - REVIEWED
      - INACTIVE
    ControlType:
      type: string
      enum:
      - Standard
      - Custom
      - Core
    Controls:
      type: array
      items:
        $ref: '#/components/schemas/Control'
    ControlsCount:
      type: integer
      default: 0
    CreateAssessmentFrameworkControl:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier of the control.
      required:
      - id
      description: The control entity attributes that uniquely identify an existing
        control to be added to a framework in Audit Manager.
    CreateAssessmentFrameworkControlSet:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/ControlSetName'
          description: The name of the control set.
        controls:
          allOf:
          - $ref: '#/components/schemas/CreateAssessmentFrameworkControls'
          description: The list of controls within the control set. This doesn't contain
            the control set ID.
      required:
      - name
      description: A `controlSet` entity that represents a collection of controls
        in Audit Manager. This doesn't contain the control set ID.
    CreateAssessmentFrameworkControlSets:
      type: array
      items:
        $ref: '#/components/schemas/CreateAssessmentFrameworkControlSet'
    CreateAssessmentFrameworkControls:
      type: array
      items:
        $ref: '#/components/schemas/CreateAssessmentFrameworkControl'
    CreateAssessmentFrameworkRequest:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/FrameworkName'
          description: The name of the new custom framework.
        description:
          allOf:
          - $ref: '#/components/schemas/FrameworkDescription'
          description: An optional description for the new custom framework.
        complianceType:
          allOf:
          - $ref: '#/components/schemas/ComplianceType'
          description: The compliance type that the new custom framework supports,
            such as CIS or HIPAA.
        controlSets:
          allOf:
          - $ref: '#/components/schemas/CreateAssessmentFrameworkControlSets'
          description: The control sets that are associated with the framework.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The tags that are associated with the framework.
      required:
      - name
      - controlSets
    CreateAssessmentFrameworkResponse:
      type: object
      properties:
        framework:
          allOf:
          - $ref: '#/components/schemas/Framework'
          description: The name of the new framework that the `CreateAssessmentFramework`
            API returned.
    CreateAssessmentReportRequest:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/AssessmentReportName'
          description: The name of the new assessment report.
        description:
          allOf:
          - $ref: '#/components/schemas/AssessmentReportDescription'
          description: The description of the assessment report.
        assessmentId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The identifier for the assessment.
        queryStatement:
          allOf:
          - $ref: '#/components/schemas/QueryStatement'
          description: 'A SQL statement that represents an evidence finder query.


            Provide this parameter when you want to generate an assessment report
            from the results of an evidence finder search query. When you use this
            parameter, Audit Manager generates a one-time report using only the evidence
            from the query output. This report does not include any assessment evidence
            that was manually [added to a report using the console](https://docs.aws.amazon.com/audit-manager/latest/userguide/generate-assessment-report.html#generate-assessment-report-include-evidence),
            or [associated with a report using the API](https://docs.aws.amazon.com/audit-manager/latest/APIReference/API_BatchAssociateAssessmentReportEvidence.html).


            To use this parameter, the [enablementStatus](https://docs.aws.amazon.com/audit-manager/latest/APIReference/API_EvidenceFinderEnablement.html#auditmanager-Type-EvidenceFinderEnablement-enablementStatus)
            of evidence finder must be `ENABLED`.


            For examples and help resolving `queryStatement` validation exceptions,
            see [Troubleshooting evidence finder issues](https://docs.aws.amazon.com/audit-manager/latest/userguide/evidence-finder-issues.html#querystatement-exceptions)
            in the _Audit Manager User Guide._'
      required:
      - name
      - assessmentId
    CreateAssessmentReportResponse:
      type: object
      properties:
        assessmentReport:
          allOf:
          - $ref: '#/components/schemas/AssessmentReport'
          description: The new assessment report that the `CreateAssessmentReport`
            API returned.
    CreateAssessmentRequest:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/AssessmentName'
          description: The name of the assessment to be created.
        description:
          allOf:
          - $ref: '#/components/schemas/AssessmentDescription'
          description: The optional description of the assessment to be created.
        assessmentReportsDestination:
          allOf:
          - $ref: '#/components/schemas/AssessmentReportsDestination'
          description: The assessment report storage destination for the assessment
            that's being created.
        scope:
          $ref: '#/components/schemas/Scope'
        roles:
          allOf:
          - $ref: '#/components/schemas/Roles'
          description: The list of roles for the assessment.
        frameworkId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The identifier for the framework that the assessment will be
            created from.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The tags that are associated with the assessment.
      required:
      - name
      - assessmentReportsDestination
      - scope
      - roles
      - frameworkId
    CreateAssessmentResponse:
      type: object
      properties:
        assessment:
          $ref: '#/components/schemas/Assessment'
    CreateControlMappingSource:
      type: object
      properties:
        sourceName:
          allOf:
          - $ref: '#/components/schemas/SourceName'
          description: The name of the control mapping data source.
        sourceDescription:
          allOf:
          - $ref: '#/components/schemas/SourceDescription'
          description: The description of the data source that determines where Audit
            Manager collects evidence from for the control.
        sourceSetUpOption:
          allOf:
          - $ref: '#/components/schemas/SourceSetUpOption'
          description: The setup option for the data source. This option reflects
            if the evidence collection method is automated or manual. If you don’t
            provide a value for `sourceSetUpOption`, Audit Manager automatically infers
            and populates the correct value based on the `sourceType` that you specify.
        sourceType:
          allOf:
          - $ref: '#/components/schemas/SourceType'
          description: "Specifies which type of data source is used to collect evidence.\n\
            \n  * The source can be an individual data source type, such as `AWS_Cloudtrail`,\
            \ `AWS_Config`, `AWS_Security_Hub`, `AWS_API_Call`, or `MANUAL`. \n\n\
            \  * The source can also be a managed grouping of data sources, such as\
            \ a `Core_Control` or a `Common_Control`."
        sourceKeyword:
          $ref: '#/components/schemas/SourceKeyword'
        sourceFrequency:
          allOf:
          - $ref: '#/components/schemas/SourceFrequency'
          description: Specifies how often evidence is collected from the control
            mapping source.
        troubleshootingText:
          allOf:
          - $ref: '#/components/schemas/TroubleshootingText'
          description: The instructions for troubleshooting the control.
      description: The mapping attributes that determine the evidence source for a
        given control, along with related parameters and metadata. This doesn't contain
        `mappingID`.
    CreateControlMappingSources:
      type: array
      items:
        $ref: '#/components/schemas/CreateControlMappingSource'
    CreateControlRequest:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/ControlName'
          description: The name of the control.
        description:
          allOf:
          - $ref: '#/components/schemas/ControlDescription'
          description: The description of the control.
        testingInformation:
          allOf:
          - $ref: '#/components/schemas/TestingInformation'
          description: The steps to follow to determine if the control is satisfied.
        actionPlanTitle:
          allOf:
          - $ref: '#/components/schemas/ActionPlanTitle'
          description: The title of the action plan for remediating the control.
        actionPlanInstructions:
          allOf:
          - $ref: '#/components/schemas/ActionPlanInstructions'
          description: The recommended actions to carry out if the control isn't fulfilled.
        controlMappingSources:
          allOf:
          - $ref: '#/components/schemas/CreateControlMappingSources'
          description: The data mapping sources for the control.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The tags that are associated with the control.
      required:
      - name
      - controlMappingSources
    CreateControlResponse:
      type: object
      properties:
        control:
          allOf:
          - $ref: '#/components/schemas/Control'
          description: The new control that the `CreateControl` API returned.
    CreateDelegationRequest:
      type: object
      properties:
        comment:
          allOf:
          - $ref: '#/components/schemas/DelegationComment'
          description: A comment that's related to the delegation request.
        controlSetId:
          allOf:
          - $ref: '#/components/schemas/ControlSetId'
          description: The unique identifier for the control set.
        roleArn:
          allOf:
          - $ref: '#/components/schemas/IamArn'
          description: The Amazon Resource Name (ARN) of the IAM role.
        roleType:
          allOf:
          - $ref: '#/components/schemas/RoleType'
          description: 'The type of customer persona.


            In `CreateAssessment`, `roleType` can only be `PROCESS_OWNER`.


            In `UpdateSettings`, `roleType` can only be `PROCESS_OWNER`.


            In `BatchCreateDelegationByAssessment`, `roleType` can only be `RESOURCE_OWNER`.'
      description: A collection of attributes that's used to create a delegation for
        an assessment in Audit Manager.
    CreateDelegationRequests:
      type: array
      items:
        $ref: '#/components/schemas/CreateDelegationRequest'
      x-sensitive: true
    CreatedBy:
      type: string
      pattern: ^[a-zA-Z0-9\s-_()\[\]]+$
      minLength: 1
      maxLength: 100
    DataSourceType:
      type: string
      enum:
      - AWS_Cloudtrail
      - AWS_Config
      - AWS_Security_Hub
      - AWS_API_Call
      - MANUAL
    DefaultExportDestination:
      type: object
      properties:
        destinationType:
          allOf:
          - $ref: '#/components/schemas/ExportDestinationType'
          description: The destination type, such as Amazon S3.
        destination:
          allOf:
          - $ref: '#/components/schemas/S3Url'
          description: The destination bucket where Audit Manager stores exported
            files.
      description: The default s3 bucket where Audit Manager saves the files that
        you export from evidence finder.
    Delegation:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier for the delegation.
        assessmentName:
          allOf:
          - $ref: '#/components/schemas/AssessmentName'
          description: The name of the assessment that's associated with the delegation.
        assessmentId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The identifier for the assessment that's associated with the
            delegation.
        status:
          allOf:
          - $ref: '#/components/schemas/DelegationStatus'
          description: The status of the delegation.
        roleArn:
          allOf:
          - $ref: '#/components/schemas/IamArn'
          description: The Amazon Resource Name (ARN) of the IAM role.
        roleType:
          allOf:
          - $ref: '#/components/schemas/RoleType'
          description: 'The type of customer persona.


            In `CreateAssessment`, `roleType` can only be `PROCESS_OWNER`.


            In `UpdateSettings`, `roleType` can only be `PROCESS_OWNER`.


            In `BatchCreateDelegationByAssessment`, `roleType` can only be `RESOURCE_OWNER`.'
        creationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: Specifies when the delegation was created.
        lastUpdated:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: Specifies when the delegation was last updated.
        controlSetId:
          allOf:
          - $ref: '#/components/schemas/ControlSetId'
          description: The identifier for the control set that's associated with the
            delegation.
        comment:
          allOf:
          - $ref: '#/components/schemas/DelegationComment'
          description: The comment that's related to the delegation.
        createdBy:
          allOf:
          - $ref: '#/components/schemas/CreatedBy'
          description: The user or role that created the delegation.
      description: The assignment of a control set to a delegate for review.
    DelegationComment:
      type: string
      pattern: ^[\w\W\s\S]*$
      minLength: 0
      maxLength: 350
    DelegationIds:
      type: array
      items:
        $ref: '#/components/schemas/UUID'
    DelegationMetadata:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier for the delegation.
        assessmentName:
          allOf:
          - $ref: '#/components/schemas/AssessmentName'
          description: The name of the associated assessment.
        assessmentId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier for the assessment.
        status:
          allOf:
          - $ref: '#/components/schemas/DelegationStatus'
          description: The current status of the delegation.
        roleArn:
          allOf:
          - $ref: '#/components/schemas/IamArn'
          description: The Amazon Resource Name (ARN) of the IAM role.
        creationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: Specifies when the delegation was created.
        controlSetName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Specifies the name of the control set that was delegated for
            review.
      description: The metadata that's associated with the delegation.
    DelegationMetadataList:
      type: array
      items:
        $ref: '#/components/schemas/DelegationMetadata'
    DelegationStatus:
      type: string
      enum:
      - IN_PROGRESS
      - UNDER_REVIEW
      - COMPLETE
    Delegations:
      type: array
      items:
        $ref: '#/components/schemas/Delegation'
    DeleteAssessmentFrameworkRequest:
      type: object
      properties:
        frameworkId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The identifier for the custom framework.
      required:
      - frameworkId
    DeleteAssessmentFrameworkResponse:
      type: object
      properties: {}
    DeleteAssessmentFrameworkShareRequest:
      type: object
      properties:
        requestId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier for the share request to be deleted.
        requestType:
          allOf:
          - $ref: '#/components/schemas/ShareRequestType'
          description: Specifies whether the share request is a sent request or a
            received request.
      required:
      - requestId
      - requestType
    DeleteAssessmentFrameworkShareResponse:
      type: object
      properties: {}
    DeleteAssessmentReportRequest:
      type: object
      properties:
        assessmentId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier for the assessment.
        assessmentReportId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier for the assessment report.
      required:
      - assessmentId
      - assessmentReportId
    DeleteAssessmentReportResponse:
      type: object
      properties: {}
    DeleteAssessmentRequest:
      type: object
      properties:
        assessmentId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The identifier for the assessment.
      required:
      - assessmentId
    DeleteAssessmentResponse:
      type: object
      properties: {}
    DeleteControlRequest:
      type: object
      properties:
        controlId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier for the control.
      required:
      - controlId
    DeleteControlResponse:
      type: object
      properties: {}
    DeleteResources:
      type: string
      enum:
      - ALL
      - DEFAULT
    DeregisterAccountRequest:
      type: object
      properties: {}
    DeregisterAccountResponse:
      type: object
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/AccountStatus'
          description: The registration status of the account.
    DeregisterOrganizationAdminAccountRequest:
      type: object
      properties:
        adminAccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The identifier for the administrator account.
    DeregisterOrganizationAdminAccountResponse:
      type: object
      properties: {}
    DeregistrationPolicy:
      type: object
      properties:
        deleteResources:
          allOf:
          - $ref: '#/components/schemas/DeleteResources'
          description: "Specifies which Audit Manager data will be deleted when you\
            \ deregister Audit Manager.\n\n  * If you set the value to `ALL`, all\
            \ of your data is deleted within seven days of deregistration.\n\n  *\
            \ If you set the value to `DEFAULT`, none of your data is deleted at the\
            \ time of deregistration. However, keep in mind that the Audit Manager\
            \ data retention policy still applies. As a result, any evidence data\
            \ will be deleted two years after its creation date. Your other Audit\
            \ Manager resources will continue to exist indefinitely."
      description: 'The deregistration policy for the data that''s stored in Audit
        Manager. You can use this attribute to determine how your data is handled
        when you [deregister Audit Manager](https://docs.aws.amazon.com/audit-manager/latest/APIReference/API_DeregisterAccount.html).


        By default, Audit Manager retains evidence data for two years from the time
        of its creation. Other Audit Manager resources (including assessments, custom
        controls, and custom frameworks) remain in Audit Manager indefinitely, and
        are available if you [re-register Audit Manager](https://docs.aws.amazon.com/audit-manager/latest/APIReference/API_RegisterAccount.html)
        in the future. For more information about data retention, see [Data Protection](https://docs.aws.amazon.com/audit-manager/latest/userguide/data-protection.html)
        in the _Audit Manager User Guide_.


        If you choose to delete all data, this action permanently deletes all evidence
        data in your account within seven days. It also deletes all of the Audit Manager
        resources that you created, including assessments, custom controls, and custom
        frameworks. Your data will not be available if you re-register Audit Manager
        in the future.'
    DisassociateAssessmentReportEvidenceFolderRequest:
      type: object
      properties:
        assessmentId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier for the assessment.
        evidenceFolderId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier for the folder that the evidence is stored
            in.
      required:
      - assessmentId
      - evidenceFolderId
    DisassociateAssessmentReportEvidenceFolderResponse:
      type: object
      properties: {}
    EmailAddress:
      type: string
      pattern: ^.*@.*$
      minLength: 1
      maxLength: 320
    ErrorCode:
      type: string
      pattern: ^[0-9]{3}$
      minLength: 3
      maxLength: 3
    ErrorMessage:
      type: string
      pattern: ^[\w\W\s\S]*$
      minLength: 0
      maxLength: 300
    EventName:
      type: string
      pattern: ^[\w\W\s\S]*$
      minLength: 0
      maxLength: 100
    Evidence:
      type: object
      properties:
        dataSource:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The data source where the evidence was collected from.
        evidenceAwsAccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The identifier for the Amazon Web Services account.
        time:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp that represents when the evidence was collected.
        eventSource:
          allOf:
          - $ref: '#/components/schemas/AWSServiceName'
          description: The Amazon Web Service that the evidence is collected from.
        eventName:
          allOf:
          - $ref: '#/components/schemas/EventName'
          description: The name of the evidence event.
        evidenceByType:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The type of automated evidence.
        resourcesIncluded:
          allOf:
          - $ref: '#/components/schemas/Resources'
          description: The list of resources that are assessed to generate the evidence.
        attributes:
          allOf:
          - $ref: '#/components/schemas/EvidenceAttributes'
          description: The names and values that are used by the evidence event. This
            includes an attribute name (such as `allowUsersToChangePassword`) and
            value (such as `true` or `false`).
        iamId:
          allOf:
          - $ref: '#/components/schemas/IamArn'
          description: The unique identifier for the user or role that's associated
            with the evidence.
        complianceCheck:
          allOf:
          - $ref: '#/components/schemas/String'
          description: "The evaluation status for automated evidence that falls under\
            \ the compliance check category.\n\n  * Audit Manager classes evidence\
            \ as non-compliant if Security Hub reports a _Fail_ result, or if Config\
            \ reports a _Non-compliant_ result.\n\n  * Audit Manager classes evidence\
            \ as compliant if Security Hub reports a _Pass_ result, or if Config reports\
            \ a _Compliant_ result.\n\n  * If a compliance check isn't available or\
            \ applicable, then no compliance evaluation can be made for that evidence.\
            \ This is the case if the evidence uses Config or Security Hub as the\
            \ underlying data source type, but those services aren't enabled. This\
            \ is also the case if the evidence uses an underlying data source type\
            \ that doesn't support compliance checks (such as manual evidence, Amazon\
            \ Web Services API calls, or CloudTrail)."
        awsOrganization:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Web Services account that the evidence is collected
            from, and its organization path.
        awsAccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The identifier for the Amazon Web Services account.
        evidenceFolderId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The identifier for the folder that the evidence is stored in.
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The identifier for the evidence.
        assessmentReportSelection:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Specifies whether the evidence is included in the assessment
            report.
      description: A record that contains the information needed to demonstrate compliance
        with the requirements specified by a control. Examples of evidence include
        change activity invoked by a user, or a system configuration snapshot.
    EvidenceAttributeKey:
      type: string
      pattern: ^[\w\W\s\S]*$
      minLength: 0
      maxLength: 100
    EvidenceAttributeValue:
      type: string
      pattern: ^[\w\W\s\S]*$
      minLength: 0
      maxLength: 200
    EvidenceAttributes:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/EvidenceAttributeValue'
    EvidenceFinderBackfillStatus:
      type: string
      enum:
      - NOT_STARTED
      - IN_PROGRESS
      - COMPLETED
    EvidenceFinderEnablement:
      type: object
      properties:
        eventDataStoreArn:
          allOf:
          - $ref: '#/components/schemas/CloudTrailArn'
          description: The Amazon Resource Name (ARN) of the CloudTrail Lake event
            data store that’s used by evidence finder. The event data store is the
            lake of evidence data that evidence finder runs queries against.
        enablementStatus:
          allOf:
          - $ref: '#/components/schemas/EvidenceFinderEnablementStatus'
          description: "The current status of the evidence finder feature and the\
            \ related event data store.\n\n  * `ENABLE_IN_PROGRESS` means that you\
            \ requested to enable evidence finder. An event data store is currently\
            \ being created to support evidence finder queries.\n\n  * `ENABLED` means\
            \ that an event data store was successfully created and evidence finder\
            \ is enabled. We recommend that you wait 7 days until the event data store\
            \ is backfilled with your past two years’ worth of evidence data. You\
            \ can use evidence finder in the meantime, but not all data might be available\
            \ until the backfill is complete.\n\n  * `DISABLE_IN_PROGRESS` means that\
            \ you requested to disable evidence finder, and your request is pending\
            \ the deletion of the event data store.\n\n  * `DISABLED` means that you\
            \ have permanently disabled evidence finder and the event data store has\
            \ been deleted. You can't re-enable evidence finder after this point."
        backfillStatus:
          allOf:
          - $ref: '#/components/schemas/EvidenceFinderBackfillStatus'
          description: "The current status of the evidence data backfill process.\n\
            \nThe backfill starts after you enable evidence finder. During this task,\
            \ Audit Manager populates an event data store with your past two years’\
            \ worth of evidence data so that your evidence can be queried.\n\n  *\
            \ `NOT_STARTED` means that the backfill hasn’t started yet. \n\n  * `IN_PROGRESS`\
            \ means that the backfill is in progress. This can take up to 7 days to\
            \ complete, depending on the amount of evidence data. \n\n  * `COMPLETED`\
            \ means that the backfill is complete. All of your past evidence is now\
            \ queryable."
        error:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage'
          description: Represents any errors that occurred when enabling or disabling
            evidence finder.
      description: The settings object that specifies whether evidence finder is enabled.
        This object also describes the related event data store, and the backfill
        status for populating the event data store with evidence data.
    EvidenceFinderEnablementStatus:
      type: string
      enum:
      - ENABLED
      - DISABLED
      - ENABLE_IN_PROGRESS
      - DISABLE_IN_PROGRESS
    EvidenceIds:
      type: array
      items:
        $ref: '#/components/schemas/UUID'
    EvidenceInsights:
      type: object
      properties:
        noncompliantEvidenceCount:
          allOf:
          - $ref: '#/components/schemas/NullableInteger'
          description: The number of compliance check evidence that Audit Manager
            classified as non-compliant. This includes evidence that was collected
            from Security Hub with a _Fail_ ruling, or collected from Config with
            a _Non-compliant_ ruling.
        compliantEvidenceCount:
          allOf:
          - $ref: '#/components/schemas/NullableInteger'
          description: The number of compliance check evidence that Audit Manager
            classified as compliant. This includes evidence that was collected from
            Security Hub with a _Pass_ ruling, or collected from Config with a _Compliant_
            ruling.
        inconclusiveEvidenceCount:
          allOf:
          - $ref: '#/components/schemas/NullableInteger'
          description: 'The number of evidence that a compliance check ruling isn''t
            available for. Evidence is inconclusive when the associated control uses
            Security Hub or Config as a data source but you didn''t enable those services.
            This is also the case when a control uses a data source that doesn’t support
            compliance checks (for example, manual evidence, API calls, or CloudTrail).


            If evidence has a compliance check status of _not applicable_ in the console,
            it''s classified as _inconclusive_ in `EvidenceInsights` data.'
      description: A breakdown of the latest compliance check status for the evidence
        in your Audit Manager assessments.
    EvidenceList:
      type: array
      items:
        $ref: '#/components/schemas/Evidence'
    EvidenceSources:
      type: array
      items:
        $ref: '#/components/schemas/NonEmptyString'
    ExportDestinationType:
      type: string
      enum:
      - S3
    Filename:
      type: string
      pattern: ^[\w,\s-]+\.[A-Za-z]+$
      minLength: 1
      maxLength: 255
    Framework:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/AuditManagerArn'
          description: The Amazon Resource Name (ARN) of the framework.
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier for the framework.
        name:
          allOf:
          - $ref: '#/components/schemas/FrameworkName'
          description: The name of the framework.
        type:
          allOf:
          - $ref: '#/components/schemas/FrameworkType'
          description: Specifies whether the framework is a standard framework or
            a custom framework.
        complianceType:
          allOf:
          - $ref: '#/components/schemas/ComplianceType'
          description: The compliance type that the framework supports, such as CIS
            or HIPAA.
        description:
          allOf:
          - $ref: '#/components/schemas/FrameworkDescription'
          description: The description of the framework.
        logo:
          allOf:
          - $ref: '#/components/schemas/Filename'
          description: The logo that's associated with the framework.
        controlSources:
          allOf:
          - $ref: '#/components/schemas/ControlSources'
          description: The control data sources where Audit Manager collects evidence
            from.
        controlSets:
          allOf:
          - $ref: '#/components/schemas/ControlSets'
          description: The control sets that are associated with the framework.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time when the framework was created.
        lastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time when the framework was most recently updated.
        createdBy:
          allOf:
          - $ref: '#/components/schemas/CreatedBy'
          description: The user or role that created the framework.
        lastUpdatedBy:
          allOf:
          - $ref: '#/components/schemas/LastUpdatedBy'
          description: The user or role that most recently updated the framework.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The tags that are associated with the framework.
      description: The file that's used to structure and automate Audit Manager assessments
        for a given compliance standard.
    FrameworkDescription:
      type: string
      pattern: ^[\w\W\s\S]*$
      minLength: 1
      maxLength: 1000
    FrameworkMetadata:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/AssessmentName'
          description: The name of the framework.
        description:
          allOf:
          - $ref: '#/components/schemas/AssessmentFrameworkDescription'
          description: The description of the framework.
        logo:
          allOf:
          - $ref: '#/components/schemas/Filename'
          description: The logo that's associated with the framework.
        complianceType:
          allOf:
          - $ref: '#/components/schemas/ComplianceType'
          description: The compliance standard that's associated with the framework.
            For example, this could be PCI DSS or HIPAA.
      description: The metadata of a framework, such as the name, ID, or description.
    FrameworkMetadataList:
      type: array
      items:
        $ref: '#/components/schemas/AssessmentFrameworkMetadata'
    FrameworkName:
      type: string
      pattern: ^[^\\]*$
      minLength: 1
      maxLength: 300
    FrameworkType:
      type: string
      enum:
      - Standard
      - Custom
    GenericArn:
      type: string
      pattern: '^arn:'
      minLength: 20
      maxLength: 2048
    GetAccountStatusRequest:
      type: object
      properties: {}
    GetAccountStatusResponse:
      type: object
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/AccountStatus'
          description: The status of the Amazon Web Services account.
    GetAssessmentFrameworkRequest:
      type: object
      properties:
        frameworkId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The identifier for the framework.
      required:
      - frameworkId
    GetAssessmentFrameworkResponse:
      type: object
      properties:
        framework:
          allOf:
          - $ref: '#/components/schemas/Framework'
          description: The framework that the `GetAssessmentFramework` API returned.
    GetAssessmentReportUrlRequest:
      type: object
      properties:
        assessmentReportId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier for the assessment report.
        assessmentId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier for the assessment.
      required:
      - assessmentReportId
      - assessmentId
    GetAssessmentReportUrlResponse:
      type: object
      properties:
        preSignedUrl:
          $ref: '#/components/schemas/URL'
    GetAssessmentRequest:
      type: object
      properties:
        assessmentId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier for the assessment.
      required:
      - assessmentId
    GetAssessmentResponse:
      type: object
      properties:
        assessment:
          $ref: '#/components/schemas/Assessment'
        userRole:
          $ref: '#/components/schemas/Role'
    GetChangeLogsRequest:
      type: object
      properties:
        assessmentId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier for the assessment.
        controlSetId:
          allOf:
          - $ref: '#/components/schemas/ControlSetId'
          description: The unique identifier for the control set.
        controlId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier for the control.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          description: The pagination token that's used to fetch the next set of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: Represents the maximum number of results on a page or for an
            API request call.
      required:
      - assessmentId
    GetChangeLogsResponse:
      type: object
      properties:
        changeLogs:
          allOf:
          - $ref: '#/components/schemas/ChangeLogs'
          description: The list of user activity for the control.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          description: The pagination token that's used to fetch the next set of results.
    GetControlRequest:
      type: object
      properties:
        controlId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The identifier for the control.
      required:
      - controlId
    GetControlResponse:
      type: object
      properties:
        control:
          allOf:
          - $ref: '#/components/schemas/Control'
          description: The details of the control that the `GetControl` API returned.
    GetDelegationsRequest:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          description: The pagination token that's used to fetch the next set of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: Represents the maximum number of results on a page or for an
            API request call.
    GetDelegationsResponse:
      type: object
      properties:
        delegations:
          allOf:
          - $ref: '#/components/schemas/DelegationMetadataList'
          description: The list of delegations that the `GetDelegations` API returned.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          description: The pagination token that's used to fetch the next set of results.
    GetEvidenceByEvidenceFolderRequest:
      type: object
      properties:
        assessmentId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The identifier for the assessment.
        controlSetId:
          allOf:
          - $ref: '#/components/schemas/ControlSetId'
          description: The identifier for the control set.
        evidenceFolderId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier for the folder that the evidence is stored
            in.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          description: The pagination token that's used to fetch the next set of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: Represents the maximum number of results on a page or for an
            API request call.
      required:
      - assessmentId
      - controlSetId
      - evidenceFolderId
    GetEvidenceByEvidenceFolderResponse:
      type: object
      properties:
        evidence:
          allOf:
          - $ref: '#/components/schemas/EvidenceList'
          description: The list of evidence that the `GetEvidenceByEvidenceFolder`
            API returned.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          description: The pagination token that's used to fetch the next set of results.
    GetEvidenceFileUploadUrlRequest:
      type: object
      properties:
        fileName:
          allOf:
          - $ref: '#/components/schemas/ManualEvidenceLocalFileName'
          description: The file that you want to upload. For a list of supported file
            formats, see [Supported file types for manual evidence](https://docs.aws.amazon.com/audit-manager/latest/userguide/upload-evidence.html#supported-manual-evidence-files)
            in the _Audit Manager User Guide_.
      required:
      - fileName
    GetEvidenceFileUploadUrlResponse:
      type: object
      properties:
        evidenceFileName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the uploaded manual evidence file that the presigned
            URL was generated for.
        uploadUrl:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The presigned URL that was generated.
    GetEvidenceFolderRequest:
      type: object
      properties:
        assessmentId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier for the assessment.
        controlSetId:
          allOf:
          - $ref: '#/components/schemas/ControlSetId'
          description: The unique identifier for the control set.
        evidenceFolderId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier for the folder that the evidence is stored
            in.
      required:
      - assessmentId
      - controlSetId
      - evidenceFolderId
    GetEvidenceFolderResponse:
      type: object
      properties:
        evidenceFolder:
          allOf:
          - $ref: '#/components/schemas/AssessmentEvidenceFolder'
          description: The folder that the evidence is stored in.
    GetEvidenceFoldersByAssessmentControlRequest:
      type: object
      properties:
        assessmentId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The identifier for the assessment.
        controlSetId:
          allOf:
          - $ref: '#/components/schemas/ControlSetId'
          description: The identifier for the control set.
        controlId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The identifier for the control.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          description: The pagination token that's used to fetch the next set of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: Represents the maximum number of results on a page or for an
            API request call.
      required:
      - assessmentId
      - controlSetId
      - controlId
    GetEvidenceFoldersByAssessmentControlResponse:
      type: object
      properties:
        evidenceFolders:
          allOf:
          - $ref: '#/components/schemas/AssessmentEvidenceFolders'
          description: The list of evidence folders that the `GetEvidenceFoldersByAssessmentControl`
            API returned.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          description: The pagination token that's used to fetch the next set of results.
    GetEvidenceFoldersByAssessmentRequest:
      type: object
      properties:
        assessmentId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier for the assessment.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          description: The pagination token that's used to fetch the next set of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: Represents the maximum number of results on a page or for an
            API request call.
      required:
      - assessmentId
    GetEvidenceFoldersByAssessmentResponse:
      type: object
      properties:
        evidenceFolders:
          allOf:
          - $ref: '#/components/schemas/AssessmentEvidenceFolders'
          description: The list of evidence folders that the `GetEvidenceFoldersByAssessment`
            API returned.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          description: The pagination token that's used to fetch the next set of results.
    GetEvidenceRequest:
      type: object
      properties:
        assessmentId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier for the assessment.
        controlSetId:
          allOf:
          - $ref: '#/components/schemas/ControlSetId'
          description: The unique identifier for the control set.
        evidenceFolderId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier for the folder that the evidence is stored
            in.
        evidenceId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier for the evidence.
      required:
      - assessmentId
      - controlSetId
      - evidenceFolderId
      - evidenceId
    GetEvidenceResponse:
      type: object
      properties:
        evidence:
          allOf:
          - $ref: '#/components/schemas/Evidence'
          description: The evidence that the `GetEvidence` API returned.
    GetInsightsByAssessmentRequest:
      type: object
      properties:
        assessmentId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier for the assessment.
      required:
      - assessmentId
    GetInsightsByAssessmentResponse:
      type: object
      properties:
        insights:
          allOf:
          - $ref: '#/components/schemas/InsightsByAssessment'
          description: The assessment analytics data that the `GetInsightsByAssessment`
            API returned.
    GetInsightsRequest:
      type: object
      properties: {}
    GetInsightsResponse:
      type: object
      properties:
        insights:
          allOf:
          - $ref: '#/components/schemas/Insights'
          description: The analytics data that the `GetInsights` API returned.
    GetOrganizationAdminAccountRequest:
      type: object
      properties: {}
    GetOrganizationAdminAccountResponse:
      type: object
      properties:
        adminAccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The identifier for the administrator account.
        organizationId:
          allOf:
          - $ref: '#/components/schemas/organizationId'
          description: The identifier for the organization.
    GetServicesInScopeRequest:
      type: object
      properties: {}
    GetServicesInScopeResponse:
      type: object
      properties:
        serviceMetadata:
          allOf:
          - $ref: '#/components/schemas/ServiceMetadataList'
          description: The metadata that's associated with the Amazon Web Service.
    GetSettingsRequest:
      type: object
      properties:
        attribute:
          allOf:
          - $ref: '#/components/schemas/SettingAttribute'
          description: The list of setting attribute enum values.
      required:
      - attribute
    GetSettingsResponse:
      type: object
      properties:
        settings:
          allOf:
          - $ref: '#/components/schemas/Settings'
          description: The settings object that holds all supported Audit Manager
            settings.
    HyperlinkName:
      type: string
      pattern: ^[\w\W\s\S]*$
      minLength: 1
      maxLength: 200
    IamArn:
      type: string
      pattern: '^arn:.*:iam:'
      minLength: 20
      maxLength: 2048
    Insights:
      type: object
      properties:
        activeAssessmentsCount:
          allOf:
          - $ref: '#/components/schemas/NullableInteger'
          description: The number of active assessments in Audit Manager.
        noncompliantEvidenceCount:
          allOf:
          - $ref: '#/components/schemas/NullableInteger'
          description: The number of compliance check evidence that Audit Manager
            classified as non-compliant on the `lastUpdated` date. This includes evidence
            that was collected from Security Hub with a _Fail_ ruling, or collected
            from Config with a _Non-compliant_ ruling.
        compliantEvidenceCount:
          allOf:
          - $ref: '#/components/schemas/NullableInteger'
          description: The number of compliance check evidence that Audit Manager
            classified as compliant on the `lastUpdated` date. This includes evidence
            that was collected from Security Hub with a _Pass_ ruling, or collected
            from Config with a _Compliant_ ruling.
        inconclusiveEvidenceCount:
          allOf:
          - $ref: '#/components/schemas/NullableInteger'
          description: 'The number of evidence without a compliance check ruling.
            Evidence is inconclusive when the associated control uses Security Hub
            or Config as a data source but you didn''t enable those services. This
            is also the case when a control uses a data source that doesn’t support
            compliance checks (for example: manual evidence, API calls, or CloudTrail).


            If evidence has a compliance check status of _not applicable_ , it''s
            classed as _inconclusive_ in `Insights` data.'
        assessmentControlsCountByNoncompliantEvidence:
          allOf:
          - $ref: '#/components/schemas/NullableInteger'
          description: The number of assessment controls that collected non-compliant
            evidence on the `lastUpdated` date.
        totalAssessmentControlsCount:
          allOf:
          - $ref: '#/components/schemas/NullableInteger'
          description: The total number of controls across all active assessments.
        lastUpdated:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time when the cross-assessment insights were last updated.
      description: "A summary of the latest analytics data for all your active assessments.\n\
        \nThis summary is a snapshot of the data that your active assessments collected\
        \ on the `lastUpdated` date. It’s important to understand that the following\
        \ totals are daily counts based on this date — they aren’t a total sum to\
        \ date.\n\nThe `Insights` data is eventually consistent. This means that,\
        \ when you read data from `Insights`, the response might not instantly reflect\
        \ the results of a recently completed write or update operation. If you repeat\
        \ your read request after a few hours, the response should return the latest\
        \ data.\n\nIf you delete an assessment or change its status to inactive, `InsightsByAssessment`\
        \ includes data for that assessment as follows.\n\n  * **Inactive assessments**\
        \ \\- If Audit Manager collected evidence for your assessment before you changed\
        \ it inactive, that evidence is included in the `InsightsByAssessment` counts\
        \ for that day.\n\n  * **Deleted assessments** \\- If Audit Manager collected\
        \ evidence for your assessment before you deleted it, that evidence isn't\
        \ included in the `InsightsByAssessment` counts for that day."
    InsightsByAssessment:
      type: object
      properties:
        noncompliantEvidenceCount:
          allOf:
          - $ref: '#/components/schemas/NullableInteger'
          description: The number of compliance check evidence that Audit Manager
            classified as non-compliant. This includes evidence that was collected
            from Security Hub with a _Fail_ ruling, or collected from Config with
            a _Non-compliant_ ruling.
        compliantEvidenceCount:
          allOf:
          - $ref: '#/components/schemas/NullableInteger'
          description: The number of compliance check evidence that Audit Manager
            classified as compliant. This includes evidence that was collected from
            Security Hub with a _Pass_ ruling, or collected from Config with a _Compliant_
            ruling.
        inconclusiveEvidenceCount:
          allOf:
          - $ref: '#/components/schemas/NullableInteger'
          description: 'The amount of evidence without a compliance check ruling.
            Evidence is inconclusive if the associated control uses Security Hub or
            Config as a data source and you didn''t enable those services. This is
            also the case if a control uses a data source that doesn’t support compliance
            checks (for example, manual evidence, API calls, or CloudTrail).


            If evidence has a compliance check status of _not applicable_ , it''s
            classified as _inconclusive_ in `InsightsByAssessment` data.'
        assessmentControlsCountByNoncompliantEvidence:
          allOf:
          - $ref: '#/components/schemas/NullableInteger'
          description: The number of assessment controls that collected non-compliant
            evidence on the `lastUpdated` date.
        totalAssessmentControlsCount:
          allOf:
          - $ref: '#/components/schemas/NullableInteger'
          description: The total number of controls in the assessment.
        lastUpdated:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time when the assessment insights were last updated.
      description: "A summary of the latest analytics data for a specific active assessment.\n\
        \nThis summary is a snapshot of the data that was collected on the `lastUpdated`\
        \ date. It’s important to understand that the totals in `InsightsByAssessment`\
        \ are daily counts based on this date — they aren’t a total sum to date.\n\
        \nThe `InsightsByAssessment` data is eventually consistent. This means that\
        \ when you read data from `InsightsByAssessment`, the response might not instantly\
        \ reflect the results of a recently completed write or update operation. If\
        \ you repeat your read request after a few hours, the response returns the\
        \ latest data.\n\nIf you delete an assessment or change its status to inactive,\
        \ `InsightsByAssessment` includes data for that assessment as follows.\n\n\
        \  * **Inactive assessments** \\- If Audit Manager collected evidence for\
        \ your assessment before you changed it inactive, that evidence is included\
        \ in the `InsightsByAssessment` counts for that day.\n\n  * **Deleted assessments**\
        \ \\- If Audit Manager collected evidence for your assessment before you deleted\
        \ it, that evidence isn't included in the `InsightsByAssessment` counts for\
        \ that day."
    Integer:
      type: integer
      default: 0
    InternalServerException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      required:
      - message
      description: An internal service error occurred during the processing of your
        request. Try again later.
    KeywordInputType:
      type: string
      enum:
      - SELECT_FROM_LIST
      - UPLOAD_FILE
      - INPUT_TEXT
    KeywordValue:
      type: string
      pattern: ^[a-zA-Z_0-9-\s().:\/]+$
      minLength: 1
      maxLength: 100
    Keywords:
      type: array
      items:
        $ref: '#/components/schemas/KeywordValue'
    KmsKey:
      type: string
      pattern: ^arn:.*:kms:.*|DEFAULT$
      minLength: 7
      maxLength: 2048
    LastUpdatedBy:
      type: string
      pattern: ^[a-zA-Z0-9\s-_()\[\]]+$
      minLength: 1
      maxLength: 100
    ListAssessmentControlInsightsByControlDomainRequest:
      type: object
      properties:
        controlDomainId:
          allOf:
          - $ref: '#/components/schemas/ControlDomainId'
          description: 'The unique identifier for the control domain.


            Audit Manager supports the control domains that are provided by Amazon
            Web Services Control Catalog. For information about how to find a list
            of available control domains, see [ `ListDomains` ](https://docs.aws.amazon.com/controlcatalog/latest/APIReference/API_ListDomains.html)
            in the Amazon Web Services Control Catalog API Reference.'
        assessmentId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier for the active assessment.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          description: The pagination token that's used to fetch the next set of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: Represents the maximum number of results on a page or for an
            API request call.
      required:
      - controlDomainId
      - assessmentId
    ListAssessmentControlInsightsByControlDomainResponse:
      type: object
      properties:
        controlInsightsByAssessment:
          allOf:
          - $ref: '#/components/schemas/ControlInsightsMetadataByAssessment'
          description: The assessment control analytics data that the `ListAssessmentControlInsightsByControlDomain`
            API returned.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          description: The pagination token that's used to fetch the next set of results.
    ListAssessmentFrameworkShareRequestsRequest:
      type: object
      properties:
        requestType:
          allOf:
          - $ref: '#/components/schemas/ShareRequestType'
          description: Specifies whether the share request is a sent request or a
            received request.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          description: The pagination token that's used to fetch the next set of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: Represents the maximum number of results on a page or for an
            API request call.
      required:
      - requestType
    ListAssessmentFrameworkShareRequestsResponse:
      type: object
      properties:
        assessmentFrameworkShareRequests:
          allOf:
          - $ref: '#/components/schemas/AssessmentFrameworkShareRequestList'
          description: The list of share requests that the `ListAssessmentFrameworkShareRequests`
            API returned.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          description: The pagination token that's used to fetch the next set of results.
    ListAssessmentFrameworksRequest:
      type: object
      properties:
        frameworkType:
          allOf:
          - $ref: '#/components/schemas/FrameworkType'
          description: The type of framework, such as a standard framework or a custom
            framework.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          description: The pagination token that's used to fetch the next set of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: Represents the maximum number of results on a page or for an
            API request call.
      required:
      - frameworkType
    ListAssessmentFrameworksResponse:
      type: object
      properties:
        frameworkMetadataList:
          allOf:
          - $ref: '#/components/schemas/FrameworkMetadataList'
          description: A list of metadata that the `ListAssessmentFrameworks` API
            returns for each framework.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          description: The pagination token that's used to fetch the next set of results.
    ListAssessmentMetadata:
      type: array
      items:
        $ref: '#/components/schemas/AssessmentMetadataItem'
    ListAssessmentReportsRequest:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          description: The pagination token that's used to fetch the next set of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: Represents the maximum number of results on a page or for an
            API request call.
    ListAssessmentReportsResponse:
      type: object
      properties:
        assessmentReports:
          allOf:
          - $ref: '#/components/schemas/AssessmentReportsMetadata'
          description: The list of assessment reports that the `ListAssessmentReports`
            API returned.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          description: The pagination token that's used to fetch the next set of results.
    ListAssessmentsRequest:
      type: object
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/AssessmentStatus'
          description: The current status of the assessment.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          description: The pagination token that's used to fetch the next set of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: Represents the maximum number of results on a page or for an
            API request call.
    ListAssessmentsResponse:
      type: object
      properties:
        assessmentMetadata:
          allOf:
          - $ref: '#/components/schemas/ListAssessmentMetadata'
          description: The metadata that the `ListAssessments` API returns for each
            assessment.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          description: The pagination token that's used to fetch the next set of results.
    ListControlDomainInsightsByAssessmentRequest:
      type: object
      properties:
        assessmentId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier for the active assessment.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          description: The pagination token that's used to fetch the next set of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: Represents the maximum number of results on a page or for an
            API request call.
      required:
      - assessmentId
    ListControlDomainInsightsByAssessmentResponse:
      type: object
      properties:
        controlDomainInsights:
          allOf:
          - $ref: '#/components/schemas/ControlDomainInsightsList'
          description: The control domain analytics data that the `ListControlDomainInsightsByAssessment`
            API returned.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          description: The pagination token that's used to fetch the next set of results.
    ListControlDomainInsightsRequest:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          description: The pagination token that's used to fetch the next set of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: Represents the maximum number of results on a page or for an
            API request call.
    ListControlDomainInsightsResponse:
      type: object
      properties:
        controlDomainInsights:
          allOf:
          - $ref: '#/components/schemas/ControlDomainInsightsList'
          description: The control domain analytics data that the `ListControlDomainInsights`
            API returned.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          description: The pagination token that's used to fetch the next set of results.
    ListControlInsightsByControlDomainRequest:
      type: object
      properties:
        controlDomainId:
          allOf:
          - $ref: '#/components/schemas/ControlDomainId'
          description: 'The unique identifier for the control domain.


            Audit Manager supports the control domains that are provided by Amazon
            Web Services Control Catalog. For information about how to find a list
            of available control domains, see [ `ListDomains` ](https://docs.aws.amazon.com/controlcatalog/latest/APIReference/API_ListDomains.html)
            in the Amazon Web Services Control Catalog API Reference.'
        nextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          description: The pagination token that's used to fetch the next set of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: Represents the maximum number of results on a page or for an
            API request call.
      required:
      - controlDomainId
    ListControlInsightsByControlDomainResponse:
      type: object
      properties:
        controlInsightsMetadata:
          allOf:
          - $ref: '#/components/schemas/ControlInsightsMetadata'
          description: The control analytics data that the `ListControlInsightsByControlDomain`
            API returned.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          description: The pagination token that's used to fetch the next set of results.
    ListControlsRequest:
      type: object
      properties:
        controlType:
          allOf:
          - $ref: '#/components/schemas/ControlType'
          description: A filter that narrows the list of controls to a specific type.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          description: The pagination token that's used to fetch the next set of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results on a page or for an API request
            call.
        controlCatalogId:
          allOf:
          - $ref: '#/components/schemas/ControlCatalogId'
          description: 'A filter that narrows the list of controls to a specific resource
            from the Amazon Web Services Control Catalog.


            To use this parameter, specify the ARN of the Control Catalog resource.
            You can specify either a control domain, a control objective, or a common
            control. For information about how to find the ARNs for these resources,
            see [ `ListDomains` ](https://docs.aws.amazon.com/controlcatalog/latest/APIReference/API_ListDomains.html),
            [ `ListObjectives` ](https://docs.aws.amazon.com/controlcatalog/latest/APIReference/API_ListObjectives.html),
            and [ `ListCommonControls` ](https://docs.aws.amazon.com/controlcatalog/latest/APIReference/API_ListCommonControls.html).


            You can only filter by one Control Catalog resource at a time. Specifying
            multiple resource ARNs isn’t currently supported. If you want to filter
            by more than one ARN, we recommend that you run the `ListControls` operation
            separately for each ARN.


            Alternatively, specify `UNCATEGORIZED` to list controls that aren''t mapped
            to a Control Catalog resource. For example, this operation might return
            a list of custom controls that don''t belong to any control domain or
            control objective.'
      required:
      - controlType
    ListControlsResponse:
      type: object
      properties:
        controlMetadataList:
          allOf:
          - $ref: '#/components/schemas/ControlMetadataList'
          description: A list of metadata that the `ListControls` API returns for
            each control.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          description: The pagination token that's used to fetch the next set of results.
    ListKeywordsForDataSourceRequest:
      type: object
      properties:
        source:
          allOf:
          - $ref: '#/components/schemas/DataSourceType'
          description: The control mapping data source that the keywords apply to.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          description: The pagination token that's used to fetch the next set of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: Represents the maximum number of results on a page or for an
            API request call.
      required:
      - source
    ListKeywordsForDataSourceResponse:
      type: object
      properties:
        keywords:
          allOf:
          - $ref: '#/components/schemas/Keywords'
          description: The list of keywords for the control mapping source.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          description: The pagination token that's used to fetch the next set of results.
    ListNotificationsRequest:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          description: The pagination token that's used to fetch the next set of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: Represents the maximum number of results on a page or for an
            API request call.
    ListNotificationsResponse:
      type: object
      properties:
        notifications:
          allOf:
          - $ref: '#/components/schemas/Notifications'
          description: The returned list of notifications.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          description: The pagination token that's used to fetch the next set of results.
    ListTagsForResourceRequest:
      type: object
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/AuditManagerArn'
          description: The Amazon Resource Name (ARN) of the resource.
      required:
      - resourceArn
    ListTagsForResourceResponse:
      type: object
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The list of tags that the `ListTagsForResource` API returned.
    ManualEvidence:
      type: object
      properties:
        s3ResourcePath:
          allOf:
          - $ref: '#/components/schemas/S3Url'
          description: The S3 URL of the object that's imported as manual evidence.
        textResponse:
          allOf:
          - $ref: '#/components/schemas/ManualEvidenceTextResponse'
          description: The plain text response that's entered and saved as manual
            evidence.
        evidenceFileName:
          allOf:
          - $ref: '#/components/schemas/ManualEvidenceLocalFileName'
          description: The name of the file that's uploaded as manual evidence. This
            name is populated using the `evidenceFileName` value from the [ `GetEvidenceFileUploadUrl`
            ](https://docs.aws.amazon.com/audit-manager/latest/APIReference/API_GetEvidenceFileUploadUrl.html)
            API response.
      description: 'Evidence that''s manually added to a control in Audit Manager.
        `manualEvidence` can be one of the following: `evidenceFileName`, `s3ResourcePath`,
        or `textResponse`.'
    ManualEvidenceList:
      type: array
      items:
        $ref: '#/components/schemas/ManualEvidence'
    ManualEvidenceLocalFileName:
      type: string
      pattern: ^[^\/]*$
      minLength: 1
      maxLength: 300
    ManualEvidenceTextResponse:
      type: string
      pattern: ^[\w\W\s\S]*$
      minLength: 1
      maxLength: 1000
    MaxResults:
      type: integer
      minimum: 1
      maximum: 1000
      description: Max results in the page.
    NonEmptyString:
      type: string
      pattern: \S
      minLength: 1
      maxLength: 2048
    Notification:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/TimestampUUID'
          description: The unique identifier for the notification.
        assessmentId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The identifier for the assessment.
        assessmentName:
          allOf:
          - $ref: '#/components/schemas/AssessmentName'
          description: The name of the related assessment.
        controlSetId:
          allOf:
          - $ref: '#/components/schemas/ControlSetId'
          description: The identifier for the control set.
        controlSetName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Specifies the name of the control set that the notification
            is about.
        description:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The description of the notification.
        eventTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time when the notification was sent.
        source:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The sender of the notification.
      description: The notification that informs a user of an update in Audit Manager.
        For example, this includes the notification that's sent when a control set
        is delegated for review.
    Notifications:
      type: array
      items:
        $ref: '#/components/schemas/Notification'
    NullableInteger:
      type: integer
    ObjectTypeEnum:
      type: string
      enum:
      - ASSESSMENT
      - CONTROL_SET
      - CONTROL
      - DELEGATION
      - ASSESSMENT_REPORT
    QueryStatement:
      type: string
      pattern: ^(?s)
      minLength: 1
      maxLength: 10000
    Region:
      type: string
      pattern: ^[a-z]{2}-[a-z]+-[0-9]{1}$
    RegisterAccountRequest:
      type: object
      properties:
        kmsKey:
          allOf:
          - $ref: '#/components/schemas/KmsKey'
          description: The KMS key details.
        delegatedAdminAccount:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The delegated administrator account for Audit Manager.
    RegisterAccountResponse:
      type: object
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/AccountStatus'
          description: The status of the account registration request.
    RegisterOrganizationAdminAccountRequest:
      type: object
      properties:
        adminAccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The identifier for the delegated administrator account.
      required:
      - adminAccountId
    RegisterOrganizationAdminAccountResponse:
      type: object
      properties:
        adminAccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The identifier for the delegated administrator account.
        organizationId:
          allOf:
          - $ref: '#/components/schemas/organizationId'
          description: The identifier for the organization.
    Resource:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/GenericArn'
          description: The Amazon Resource Name (ARN) for the resource.
        value:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The value of the resource.
        complianceCheck:
          allOf:
          - $ref: '#/components/schemas/String'
          description: "The evaluation status for a resource that was assessed when\
            \ collecting compliance check evidence.\n\n  * Audit Manager classes the\
            \ resource as non-compliant if Security Hub reports a _Fail_ result, or\
            \ if Config reports a _Non-compliant_ result.\n\n  * Audit Manager classes\
            \ the resource as compliant if Security Hub reports a _Pass_ result, or\
            \ if Config reports a _Compliant_ result.\n\n  * If a compliance check\
            \ isn't available or applicable, then no compliance evaluation can be\
            \ made for that resource. This is the case if a resource assessment uses\
            \ Config or Security Hub as the underlying data source type, but those\
            \ services aren't enabled. This is also the case if the resource assessment\
            \ uses an underlying data source type that doesn't support compliance\
            \ checks (such as manual evidence, Amazon Web Services API calls, or CloudTrail)."
      description: A system asset that's evaluated in an Audit Manager assessment.
    ResourceNotFoundException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
        resourceId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique identifier for the resource.
        resourceType:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The type of resource that's affected by the error.
      required:
      - message
      - resourceId
      - resourceType
      description: The resource that's specified in the request can't be found.
    Resources:
      type: array
      items:
        $ref: '#/components/schemas/Resource'
    Role:
      type: object
      properties:
        roleType:
          allOf:
          - $ref: '#/components/schemas/RoleType'
          description: 'The type of customer persona.


            In `CreateAssessment`, `roleType` can only be `PROCESS_OWNER`.


            In `UpdateSettings`, `roleType` can only be `PROCESS_OWNER`.


            In `BatchCreateDelegationByAssessment`, `roleType` can only be `RESOURCE_OWNER`.'
        roleArn:
          allOf:
          - $ref: '#/components/schemas/IamArn'
          description: The Amazon Resource Name (ARN) of the IAM role.
      required:
      - roleType
      - roleArn
      description: The wrapper that contains the Audit Manager role information of
        the current user. This includes the role type and IAM Amazon Resource Name
        (ARN).
    RoleType:
      type: string
      enum:
      - PROCESS_OWNER
      - RESOURCE_OWNER
    Roles:
      type: array
      items:
        $ref: '#/components/schemas/Role'
      x-sensitive: true
    S3Url:
      type: string
      pattern: ^(S|s)3:\/\/[a-zA-Z0-9\-\.\(\)\'\*\_\!\/]+$
      minLength: 1
      maxLength: 1024
    SNSTopic:
      type: string
      pattern: ^[a-zA-Z0-9-_\(\)\[\]]+$
      minLength: 1
      maxLength: 255
    Scope:
      type: object
      properties:
        awsAccounts:
          allOf:
          - $ref: '#/components/schemas/AWSAccounts'
          description: The Amazon Web Services accounts that are included in the scope
            of the assessment.
        awsServices:
          allOf:
          - $ref: '#/components/schemas/AWSServices'
          description: 'The Amazon Web Services services that are included in the
            scope of the assessment.


            This API parameter is no longer supported. If you use this parameter to
            specify one or more Amazon Web Services, Audit Manager ignores this input.
            Instead, the value for `awsServices` will show as empty.'
      description: 'The wrapper that contains the Amazon Web Services accounts that
        are in scope for the assessment.


        You no longer need to specify which Amazon Web Services are in scope when
        you create or update an assessment. Audit Manager infers the services in scope
        by examining your assessment controls and their data sources, and then mapping
        this information to the relevant Amazon Web Services.


        If an underlying data source changes for your assessment, we automatically
        update the services scope as needed to reflect the correct Amazon Web Services.
        This ensures that your assessment collects accurate and comprehensive evidence
        about all of the relevant services in your AWS environment.'
    ServiceMetadata:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/AWSServiceName'
          description: The name of the Amazon Web Service.
        displayName:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The display name of the Amazon Web Service.
        description:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The description of the Amazon Web Service.
        category:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The category that the Amazon Web Service belongs to, such as
            compute, storage, or database.
      description: The metadata that's associated with the Amazon Web Service.
    ServiceMetadataList:
      type: array
      items:
        $ref: '#/components/schemas/ServiceMetadata'
    ServiceQuotaExceededException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      required:
      - message
      description: You've reached your account quota for this resource type. To perform
        the requested action, delete some existing resources or [request a quota increase](https://docs.aws.amazon.com/general/latest/gr/aws_service_limits.html)
        from the Service Quotas console. For a list of Audit Manager service quotas,
        see [Quotas and restrictions for Audit Manager](https://docs.aws.amazon.com/audit-manager/latest/userguide/service-quotas.html).
    SettingAttribute:
      type: string
      enum:
      - ALL
      - IS_AWS_ORG_ENABLED
      - SNS_TOPIC
      - DEFAULT_ASSESSMENT_REPORTS_DESTINATION
      - DEFAULT_PROCESS_OWNERS
      - EVIDENCE_FINDER_ENABLEMENT
      - DEREGISTRATION_POLICY
      - DEFAULT_EXPORT_DESTINATION
    Settings:
      type: object
      properties:
        isAwsOrgEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Specifies whether Organizations is enabled.
        snsTopic:
          allOf:
          - $ref: '#/components/schemas/SNSTopic'
          description: The designated Amazon Simple Notification Service (Amazon SNS)
            topic.
        defaultAssessmentReportsDestination:
          allOf:
          - $ref: '#/components/schemas/AssessmentReportsDestination'
          description: The default S3 destination bucket for storing assessment reports.
        defaultProcessOwners:
          allOf:
          - $ref: '#/components/schemas/Roles'
          description: The designated default audit owners.
        kmsKey:
          allOf:
          - $ref: '#/components/schemas/KmsKey'
          description: The KMS key details.
        evidenceFinderEnablement:
          allOf:
          - $ref: '#/components/schemas/EvidenceFinderEnablement'
          description: The current evidence finder status and event data store details.
        deregistrationPolicy:
          allOf:
          - $ref: '#/components/schemas/DeregistrationPolicy'
          description: The deregistration policy for your Audit Manager data. You
            can use this attribute to determine how your data is handled when you
            deregister Audit Manager.
        defaultExportDestination:
          allOf:
          - $ref: '#/components/schemas/DefaultExportDestination'
          description: The default S3 destination bucket for storing evidence finder
            exports.
      description: The settings object that holds all supported Audit Manager settings.
    ShareRequestAction:
      type: string
      enum:
      - ACCEPT
      - DECLINE
      - REVOKE
    ShareRequestComment:
      type: string
      pattern: ^[\w\W\s\S]*$
      minLength: 0
      maxLength: 500
    ShareRequestStatus:
      type: string
      enum:
      - ACTIVE
      - REPLICATING
      - SHARED
      - EXPIRING
      - FAILED
      - EXPIRED
      - DECLINED
      - REVOKED
    ShareRequestType:
      type: string
      enum:
      - SENT
      - RECEIVED
    SnsArn:
      type: string
      pattern: ^arn:.*:sns:.*|NONE$
      minLength: 4
      maxLength: 2048
    SourceDescription:
      type: string
      pattern: ^[\w\W\s\S]*$
      minLength: 0
      maxLength: 1000
    SourceFrequency:
      type: string
      enum:
      - DAILY
      - WEEKLY
      - MONTHLY
    SourceKeyword:
      type: object
      properties:
        keywordInputType:
          allOf:
          - $ref: '#/components/schemas/KeywordInputType'
          description: "The input method for the keyword.\n\n  * `SELECT_FROM_LIST`\
            \ is used when mapping a data source for automated evidence.\n\n    *\
            \ When `keywordInputType` is `SELECT_FROM_LIST`, a keyword must be selected\
            \ to collect automated evidence. For example, this keyword can be a CloudTrail\
            \ event name, a rule name for Config, a Security Hub control, or the name\
            \ of an Amazon Web Services API call.\n\n  * `UPLOAD_FILE` and `INPUT_TEXT`\
            \ are only used when mapping a data source for manual evidence.\n\n  \
            \  * When `keywordInputType` is `UPLOAD_FILE`, a file must be uploaded\
            \ as manual evidence.\n\n    * When `keywordInputType` is `INPUT_TEXT`,\
            \ text must be entered as manual evidence."
        keywordValue:
          allOf:
          - $ref: '#/components/schemas/KeywordValue'
          description: "The value of the keyword that's used when mapping a control\
            \ data source. For example, this can be a CloudTrail event name, a rule\
            \ name for Config, a Security Hub control, or the name of an Amazon Web\
            \ Services API call.\n\nIf you’re mapping a data source to a rule in Config,\
            \ the `keywordValue` that you specify depends on the type of rule:\n\n\
            \  * For [managed rules](https://docs.aws.amazon.com/config/latest/developerguide/evaluate-config_use-managed-rules.html),\
            \ you can use the rule identifier as the `keywordValue`. You can find\
            \ the rule identifier from the [list of Config managed rules](https://docs.aws.amazon.com/config/latest/developerguide/managed-rules-by-aws-config.html).\
            \ For some rules, the rule identifier is different from the rule name.\
            \ For example, the rule name `restricted-ssh` has the following rule identifier:\
            \ `INCOMING_SSH_DISABLED`. Make sure to use the rule identifier, not the\
            \ rule name. \n\nKeyword example for managed rules:\n\n    * Managed rule\
            \ name: [s3-bucket-acl-prohibited](https://docs.aws.amazon.com/config/latest/developerguide/s3-bucket-acl-prohibited.html)\n\
            \n`keywordValue`: `S3_BUCKET_ACL_PROHIBITED`\n\n  * For [custom rules](https://docs.aws.amazon.com/config/latest/developerguide/evaluate-config_develop-rules.html),\
            \ you form the `keywordValue` by adding the `Custom_` prefix to the rule\
            \ name. This prefix distinguishes the custom rule from a managed rule.\
            \ \n\nKeyword example for custom rules:\n\n    * Custom rule name: my-custom-config-rule\n\
            \n`keywordValue`: `Custom_my-custom-config-rule`\n\n  * For [service-linked\
            \ rules](https://docs.aws.amazon.com/config/latest/developerguide/service-linked-awsconfig-rules.html),\
            \ you form the `keywordValue` by adding the `Custom_` prefix to the rule\
            \ name. In addition, you remove the suffix ID that appears at the end\
            \ of the rule name. \n\nKeyword examples for service-linked rules:\n\n\
            \    * Service-linked rule name: CustomRuleForAccount-conformance-pack-szsm1uv0w\n\
            \n`keywordValue`: `Custom_CustomRuleForAccount-conformance-pack`\n\n \
            \   * Service-linked rule name: OrgConfigRule-s3-bucket-versioning-enabled-dbgzf8ba\n\
            \n`keywordValue`: `Custom_OrgConfigRule-s3-bucket-versioning-enabled`\n\
            \nThe `keywordValue` is case sensitive. If you enter a value incorrectly,\
            \ Audit Manager might not recognize the data source mapping. As a result,\
            \ you might not successfully collect evidence from that data source as\
            \ intended.\n\nKeep in mind the following requirements, depending on the\
            \ data source type that you're using.\n\n  1. For Config: \n\n     * For\
            \ managed rules, make sure that the `keywordValue` is the rule identifier\
            \ in `ALL_CAPS_WITH_UNDERSCORES`. For example, `CLOUDWATCH_LOG_GROUP_ENCRYPTED`.\
            \ For accuracy, we recommend that you reference the list of [supported\
            \ Config managed rules](https://docs.aws.amazon.com/audit-manager/latest/userguide/control-data-sources-config.html).\n\
            \n     * For custom rules, make sure that the `keywordValue` has the `Custom_`\
            \ prefix followed by the custom rule name. The format of the custom rule\
            \ name itself may vary. For accuracy, we recommend that you visit the\
            \ [Config console](https://console.aws.amazon.com/config/) to verify your\
            \ custom rule name.\n\n  2. For Security Hub: The format varies for Security\
            \ Hub control names. For accuracy, we recommend that you reference the\
            \ list of [supported Security Hub controls](https://docs.aws.amazon.com/audit-manager/latest/userguide/control-data-sources-ash.html).\n\
            \n  3. For Amazon Web Services API calls: Make sure that the `keywordValue`\
            \ is written as `serviceprefix_ActionName`. For example, `iam_ListGroups`.\
            \ For accuracy, we recommend that you reference the list of [supported\
            \ API calls](https://docs.aws.amazon.com/audit-manager/latest/userguide/control-data-sources-api.html).\n\
            \n  4. For CloudTrail: Make sure that the `keywordValue` is written as\
            \ `serviceprefix_ActionName`. For example, `cloudtrail_StartLogging`.\
            \ For accuracy, we recommend that you review the Amazon Web Service prefix\
            \ and action names in the [Service Authorization Reference](https://docs.aws.amazon.com/service-authorization/latest/reference/reference_policies_actions-resources-contextkeys.html)."
      description: "A keyword that relates to the control data source.\n\nFor manual\
        \ evidence, this keyword indicates if the manual evidence is a file or text.\n\
        \nFor automated evidence, this keyword identifies a specific CloudTrail event,\
        \ Config rule, Security Hub control, or Amazon Web Services API name.\n\n\
        To learn more about the supported keywords that you can use when mapping a\
        \ control data source, see the following pages in the _Audit Manager User\
        \ Guide_ :\n\n  * [Config rules supported by Audit Manager](https://docs.aws.amazon.com/audit-manager/latest/userguide/control-data-sources-config.html)\n\
        \n  * [Security Hub controls supported by Audit Manager](https://docs.aws.amazon.com/audit-manager/latest/userguide/control-data-sources-ash.html)\n\
        \n  * [API calls supported by Audit Manager](https://docs.aws.amazon.com/audit-manager/latest/userguide/control-data-sources-api.html)\n\
        \n  * [CloudTrail event names supported by Audit Manager](https://docs.aws.amazon.com/audit-manager/latest/userguide/control-data-sources-cloudtrail.html)"
    SourceName:
      type: string
      minLength: 1
      maxLength: 300
    SourceSetUpOption:
      type: string
      enum:
      - System_Controls_Mapping
      - Procedural_Controls_Mapping
    SourceType:
      type: string
      enum:
      - AWS_Cloudtrail
      - AWS_Config
      - AWS_Security_Hub
      - AWS_API_Call
      - MANUAL
      - Common_Control
      - Core_Control
    StartAssessmentFrameworkShareRequest:
      type: object
      properties:
        frameworkId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier for the custom framework to be shared.
        destinationAccount:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The Amazon Web Services account of the recipient.
        destinationRegion:
          allOf:
          - $ref: '#/components/schemas/Region'
          description: The Amazon Web Services Region of the recipient.
        comment:
          allOf:
          - $ref: '#/components/schemas/ShareRequestComment'
          description: An optional comment from the sender about the share request.
      required:
      - frameworkId
      - destinationAccount
      - destinationRegion
    StartAssessmentFrameworkShareResponse:
      type: object
      properties:
        assessmentFrameworkShareRequest:
          allOf:
          - $ref: '#/components/schemas/AssessmentFrameworkShareRequest'
          description: The share request that's created by the `StartAssessmentFrameworkShare`
            API.
    String:
      type: string
      pattern: .*
      minLength: 0
      maxLength: 2048
    TagKey:
      type: string
      pattern: ^(?!aws:)[a-zA-Z+-=._:/]+$
      minLength: 1
      maxLength: 128
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
    TagMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
    TagResourceRequest:
      type: object
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/AuditManagerArn'
          description: The Amazon Resource Name (ARN) of the resource.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The tags that are associated with the resource.
      required:
      - resourceArn
      - tags
    TagResourceResponse:
      type: object
      properties: {}
    TagValue:
      type: string
      pattern: ^.{0,255}$
      minLength: 0
      maxLength: 256
    TestingInformation:
      type: string
      pattern: ^[\w\W\s\S]*$
      minLength: 0
      maxLength: 1000
    ThrottlingException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      required:
      - message
      description: The request was denied due to request throttling.
    Timestamp:
      type: string
      format: date-time
    TimestampUUID:
      type: string
      pattern: ^[0-9]{10,13}_[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
      minLength: 47
      maxLength: 50
    Token:
      type: string
      pattern: ^[A-Za-z0-9+\/=]*$
      minLength: 1
      maxLength: 1000
    TroubleshootingText:
      type: string
      pattern: ^[\w\W\s\S]*$
      minLength: 0
      maxLength: 1000
    URL:
      type: object
      properties:
        hyperlinkName:
          allOf:
          - $ref: '#/components/schemas/HyperlinkName'
          description: The name or word that's used as a hyperlink to the URL.
        link:
          allOf:
          - $ref: '#/components/schemas/UrlLink'
          description: The unique identifier for the internet resource.
      description: Short for uniform resource locator. A URL is used as a unique identifier
        to locate a resource on the internet.
    UUID:
      type: string
      pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
      minLength: 36
      maxLength: 36
    UntagResourceRequest:
      type: object
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/AuditManagerArn'
          description: The Amazon Resource Name (ARN) of the specified resource.
        tagKeys:
          allOf:
          - $ref: '#/components/schemas/TagKeyList'
          description: The name or key of the tag.
      required:
      - resourceArn
      - tagKeys
    UntagResourceResponse:
      type: object
      properties: {}
    UpdateAssessmentControlRequest:
      type: object
      properties:
        assessmentId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier for the assessment.
        controlSetId:
          allOf:
          - $ref: '#/components/schemas/ControlSetId'
          description: The unique identifier for the control set.
        controlId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier for the control.
        controlStatus:
          allOf:
          - $ref: '#/components/schemas/ControlStatus'
          description: The status of the control.
        commentBody:
          allOf:
          - $ref: '#/components/schemas/ControlCommentBody'
          description: The comment body text for the control.
      required:
      - assessmentId
      - controlSetId
      - controlId
    UpdateAssessmentControlResponse:
      type: object
      properties:
        control:
          allOf:
          - $ref: '#/components/schemas/AssessmentControl'
          description: The name of the updated control set that the `UpdateAssessmentControl`
            API returned.
    UpdateAssessmentControlSetStatusRequest:
      type: object
      properties:
        assessmentId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier for the assessment.
        controlSetId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique identifier for the control set.
        status:
          allOf:
          - $ref: '#/components/schemas/ControlSetStatus'
          description: The status of the control set that's being updated.
        comment:
          allOf:
          - $ref: '#/components/schemas/DelegationComment'
          description: The comment that's related to the status update.
      required:
      - assessmentId
      - controlSetId
      - status
      - comment
    UpdateAssessmentControlSetStatusResponse:
      type: object
      properties:
        controlSet:
          allOf:
          - $ref: '#/components/schemas/AssessmentControlSet'
          description: The name of the updated control set that the `UpdateAssessmentControlSetStatus`
            API returned.
    UpdateAssessmentFrameworkControlSet:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/ControlSetName'
          description: The unique identifier for the control set.
        name:
          allOf:
          - $ref: '#/components/schemas/ControlSetName'
          description: The name of the control set.
        controls:
          allOf:
          - $ref: '#/components/schemas/CreateAssessmentFrameworkControls'
          description: The list of controls that are contained within the control
            set.
      required:
      - name
      - controls
      description: A `controlSet` entity that represents a collection of controls
        in Audit Manager. This doesn't contain the control set ID.
    UpdateAssessmentFrameworkControlSets:
      type: array
      items:
        $ref: '#/components/schemas/UpdateAssessmentFrameworkControlSet'
    UpdateAssessmentFrameworkRequest:
      type: object
      properties:
        frameworkId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier for the framework.
        name:
          allOf:
          - $ref: '#/components/schemas/FrameworkName'
          description: The name of the framework to be updated.
        description:
          allOf:
          - $ref: '#/components/schemas/FrameworkDescription'
          description: The description of the updated framework.
        complianceType:
          allOf:
          - $ref: '#/components/schemas/ComplianceType'
          description: The compliance type that the new custom framework supports,
            such as CIS or HIPAA.
        controlSets:
          allOf:
          - $ref: '#/components/schemas/UpdateAssessmentFrameworkControlSets'
          description: The control sets that are associated with the framework.
      required:
      - frameworkId
      - name
      - controlSets
    UpdateAssessmentFrameworkResponse:
      type: object
      properties:
        framework:
          allOf:
          - $ref: '#/components/schemas/Framework'
          description: The name of the framework.
    UpdateAssessmentFrameworkShareRequest:
      type: object
      properties:
        requestId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier for the share request.
        requestType:
          allOf:
          - $ref: '#/components/schemas/ShareRequestType'
          description: Specifies whether the share request is a sent request or a
            received request.
        action:
          allOf:
          - $ref: '#/components/schemas/ShareRequestAction'
          description: Specifies the update action for the share request.
      required:
      - requestId
      - requestType
      - action
    UpdateAssessmentFrameworkShareResponse:
      type: object
      properties:
        assessmentFrameworkShareRequest:
          allOf:
          - $ref: '#/components/schemas/AssessmentFrameworkShareRequest'
          description: The updated share request that's returned by the `UpdateAssessmentFrameworkShare`
            operation.
    UpdateAssessmentRequest:
      type: object
      properties:
        assessmentId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier for the assessment.
        assessmentName:
          allOf:
          - $ref: '#/components/schemas/AssessmentName'
          description: The name of the assessment to be updated.
        assessmentDescription:
          allOf:
          - $ref: '#/components/schemas/AssessmentDescription'
          description: The description of the assessment.
        scope:
          allOf:
          - $ref: '#/components/schemas/Scope'
          description: The scope of the assessment.
        assessmentReportsDestination:
          allOf:
          - $ref: '#/components/schemas/AssessmentReportsDestination'
          description: The assessment report storage destination for the assessment
            that's being updated.
        roles:
          allOf:
          - $ref: '#/components/schemas/Roles'
          description: The list of roles for the assessment.
      required:
      - assessmentId
      - scope
    UpdateAssessmentResponse:
      type: object
      properties:
        assessment:
          allOf:
          - $ref: '#/components/schemas/Assessment'
          description: The response object for the `UpdateAssessment` API. This is
            the name of the updated assessment.
    UpdateAssessmentStatusRequest:
      type: object
      properties:
        assessmentId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier for the assessment.
        status:
          allOf:
          - $ref: '#/components/schemas/AssessmentStatus'
          description: The current status of the assessment.
      required:
      - assessmentId
      - status
    UpdateAssessmentStatusResponse:
      type: object
      properties:
        assessment:
          allOf:
          - $ref: '#/components/schemas/Assessment'
          description: The name of the updated assessment that the `UpdateAssessmentStatus`
            API returned.
    UpdateControlRequest:
      type: object
      properties:
        controlId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The identifier for the control.
        name:
          allOf:
          - $ref: '#/components/schemas/ControlName'
          description: The name of the updated control.
        description:
          allOf:
          - $ref: '#/components/schemas/ControlDescription'
          description: The optional description of the control.
        testingInformation:
          allOf:
          - $ref: '#/components/schemas/TestingInformation'
          description: The steps that you should follow to determine if the control
            is met.
        actionPlanTitle:
          allOf:
          - $ref: '#/components/schemas/ActionPlanTitle'
          description: The title of the action plan for remediating the control.
        actionPlanInstructions:
          allOf:
          - $ref: '#/components/schemas/ActionPlanInstructions'
          description: The recommended actions to carry out if the control isn't fulfilled.
        controlMappingSources:
          allOf:
          - $ref: '#/components/schemas/ControlMappingSources'
          description: The data mapping sources for the control.
      required:
      - controlId
      - name
      - controlMappingSources
    UpdateControlResponse:
      type: object
      properties:
        control:
          allOf:
          - $ref: '#/components/schemas/Control'
          description: The name of the updated control set that the `UpdateControl`
            API returned.
    UpdateSettingsRequest:
      type: object
      properties:
        snsTopic:
          allOf:
          - $ref: '#/components/schemas/SnsArn'
          description: The Amazon Simple Notification Service (Amazon SNS) topic that
            Audit Manager sends notifications to.
        defaultAssessmentReportsDestination:
          allOf:
          - $ref: '#/components/schemas/AssessmentReportsDestination'
          description: The default S3 destination bucket for storing assessment reports.
        defaultProcessOwners:
          allOf:
          - $ref: '#/components/schemas/Roles'
          description: A list of the default audit owners.
        kmsKey:
          allOf:
          - $ref: '#/components/schemas/KmsKey'
          description: The KMS key details.
        evidenceFinderEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: 'Specifies whether the evidence finder feature is enabled.
            Change this attribute to enable or disable evidence finder.


            When you use this attribute to disable evidence finder, Audit Manager
            deletes the event data store that’s used to query your evidence data.
            As a result, you can’t re-enable evidence finder and use the feature again.
            Your only alternative is to [deregister](https://docs.aws.amazon.com/audit-manager/latest/APIReference/API_DeregisterAccount.html)
            and then [re-register](https://docs.aws.amazon.com/audit-manager/latest/APIReference/API_RegisterAccount.html)
            Audit Manager.'
        deregistrationPolicy:
          allOf:
          - $ref: '#/components/schemas/DeregistrationPolicy'
          description: The deregistration policy for your Audit Manager data. You
            can use this attribute to determine how your data is handled when you
            deregister Audit Manager.
        defaultExportDestination:
          allOf:
          - $ref: '#/components/schemas/DefaultExportDestination'
          description: The default S3 destination bucket for storing evidence finder
            exports.
    UpdateSettingsResponse:
      type: object
      properties:
        settings:
          allOf:
          - $ref: '#/components/schemas/Settings'
          description: The current list of settings.
    UrlLink:
      type: string
      pattern: ^(https?:\/\/)?(www\.)?[a-zA-Z0-9-_]+([\.]+[a-zA-Z]+)+[\/\w]*$
      minLength: 1
      maxLength: 8192
    Username:
      type: string
      pattern: ^[a-zA-Z0-9-_()\s\+=,.@]+$
      minLength: 1
      maxLength: 128
    ValidateAssessmentReportIntegrityRequest:
      type: object
      properties:
        s3RelativePath:
          allOf:
          - $ref: '#/components/schemas/S3Url'
          description: The relative path of the Amazon S3 bucket that the assessment
            report is stored in.
      required:
      - s3RelativePath
    ValidateAssessmentReportIntegrityResponse:
      type: object
      properties:
        signatureValid:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Specifies whether the signature key is valid.
        signatureAlgorithm:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The signature algorithm that's used to code sign the assessment
            report file.
        signatureDateTime:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The date and time signature that specifies when the assessment
            report was created.
        signatureKeyId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique identifier for the validation signature key.
        validationErrors:
          allOf:
          - $ref: '#/components/schemas/ValidationErrors'
          description: Represents any errors that occurred when validating the assessment
            report.
    ValidationErrors:
      type: array
      items:
        $ref: '#/components/schemas/NonEmptyString'
    ValidationException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
        reason:
          allOf:
          - $ref: '#/components/schemas/ValidationExceptionReason'
          description: The reason the request failed validation.
        fields:
          allOf:
          - $ref: '#/components/schemas/ValidationExceptionFieldList'
          description: The fields that caused the error, if applicable.
      required:
      - message
      description: The request has invalid or missing parameters.
    ValidationExceptionField:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the validation error.
        message:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The body of the error message.
      required:
      - name
      - message
      description: Indicates that the request has invalid or missing parameters for
        the field.
    ValidationExceptionFieldList:
      type: array
      items:
        $ref: '#/components/schemas/ValidationExceptionField'
    ValidationExceptionReason:
      type: string
      enum:
      - unknownOperation
      - cannotParse
      - fieldValidationFailed
      - other
    organizationId:
      type: string
      pattern: ^o-[a-z0-9]{10,32}$
      minLength: 12
      maxLength: 34
