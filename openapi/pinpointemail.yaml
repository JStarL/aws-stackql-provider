openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: pinpoint_email
  x-aws-serviceName: pinpointemail
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-05'
  version: '2018-07-26'
  title: Amazon Pinpoint Email Service
  description: |-
    Amazon Pinpoint Email Service

    Welcome to the _Amazon Pinpoint Email API Reference_. This guide provides information about the Amazon Pinpoint Email API (version 1.0), including supported operations, data types, parameters, and schemas.

    [Amazon Pinpoint](https://aws.amazon.com/pinpoint) is an AWS service that you can use to engage with your customers across multiple messaging channels. You can use Amazon Pinpoint to send email, SMS text messages, voice messages, and push notifications. The Amazon Pinpoint Email API provides programmatic access to options that are unique to the email channel and supplement the options provided by the Amazon Pinpoint API.

    If you're new to Amazon Pinpoint, you might find it helpful to also review the [Amazon Pinpoint Developer Guide](https://docs.aws.amazon.com/pinpoint/latest/developerguide/welcome.html). The _Amazon Pinpoint Developer Guide_ provides tutorials, code samples, and procedures that demonstrate how to use Amazon Pinpoint features programmatically and how to integrate Amazon Pinpoint functionality into mobile apps and other types of applications. The guide also provides information about key topics such as Amazon Pinpoint integration with other AWS services and the limits that apply to using the service.

    The Amazon Pinpoint Email API is available in several AWS Regions and it provides an endpoint for each of these Regions. For a list of all the Regions and endpoints where the API is currently available, see [AWS Service Endpoints](https://docs.aws.amazon.com/general/latest/gr/rande.html#pinpoint_region) in the _Amazon Web Services General Reference_. To learn more about AWS Regions, see [Managing AWS Regions](https://docs.aws.amazon.com/general/latest/gr/rande-manage.html) in the _Amazon Web Services General Reference_.

    In each Region, AWS maintains multiple Availability Zones. These Availability Zones are physically isolated from each other, but are united by private, low-latency, high-throughput, and highly redundant network connections. These Availability Zones enable us to provide very high levels of availability and redundancy, while also minimizing latency. To learn more about the number of Availability Zones that are available in each Region, see [AWS Global Infrastructure](http://aws.amazon.com/about-aws/global-infrastructure/).
servers:
- description: The Amazon Pinpoint Email Service regional endpoint
  url: https://email.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths: {}
components:
  schemas:
    AmazonResourceName:
      type: string
    BehaviorOnMxFailure:
      type: string
      enum:
      - USE_DEFAULT_VALUE
      - REJECT_MESSAGE
      description: "<p>The action that you want Amazon Pinpoint to take if it can't\
        \ read the required MX record for a\n            custom MAIL FROM domain.\
        \ When you set this value to <code>UseDefaultValue</code>, Amazon Pinpoint\n\
        \            uses <i>amazonses.com</i> as the MAIL FROM domain. When you set\
        \ this value\n            to <code>RejectMessage</code>, Amazon Pinpoint returns\
        \ a <code>MailFromDomainNotVerified</code>\n            error, and doesn't\
        \ attempt to deliver the email.</p>\n        <p>These behaviors are taken\
        \ when the custom MAIL FROM domain configuration is in the\n             \
        \   <code>Pending</code>, <code>Failed</code>, and <code>TemporaryFailure</code>\n\
        \            states.</p>"
    BlacklistEntries:
      type: array
      items:
        $ref: '#/components/schemas/BlacklistEntry'
    BlacklistItemName:
      type: string
    BlacklistItemNames:
      type: array
      items:
        $ref: '#/components/schemas/BlacklistItemName'
    BlacklistReport:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/BlacklistEntries'
    BlacklistingDescription:
      type: string
    CampaignId:
      type: string
    Charset:
      type: string
    CloudWatchDimensionConfigurations:
      type: array
      items:
        $ref: '#/components/schemas/CloudWatchDimensionConfiguration'
    ConfigurationSetName:
      type: string
    ConfigurationSetNameList:
      type: array
      items:
        $ref: '#/components/schemas/ConfigurationSetName'
    CustomRedirectDomain:
      type: string
    DailyVolumes:
      type: array
      items:
        $ref: '#/components/schemas/DailyVolume'
    DedicatedIpList:
      type: array
      items:
        $ref: '#/components/schemas/DedicatedIp'
      description: <p>A list of dedicated IP addresses that are associated with your
        Amazon Pinpoint account.</p>
    DefaultDimensionValue:
      type: string
    DeliverabilityDashboardAccountStatus:
      type: string
      enum:
      - ACTIVE
      - PENDING_EXPIRATION
      - DISABLED
      description: "<p>The current status of your Deliverability dashboard subscription.\
        \ If this value is\n                <code>PENDING_EXPIRATION</code>, your\
        \ subscription is scheduled to expire at the end\n            of the current\
        \ calendar month.</p>"
    DeliverabilityTestReports:
      type: array
      items:
        $ref: '#/components/schemas/DeliverabilityTestReport'
    DeliverabilityTestStatus:
      type: string
      enum:
      - IN_PROGRESS
      - COMPLETED
      description: "<p>The status of a predictive inbox placement test. If the status\
        \ is <code>IN_PROGRESS</code>, then the predictive inbox placement test is\n\
        \            currently running. Predictive inbox placement tests are usually\
        \ complete within 24 hours of creating the test.\n            If the status\
        \ is <code>COMPLETE</code>, then the test is finished, and you can use the\n\
        \                <code>GetDeliverabilityTestReport</code> operation to view\
        \ the results of the\n            test.</p>"
    DeliverabilityTestSubject:
      type: string
    DimensionName:
      type: string
    DimensionValueSource:
      type: string
      enum:
      - MESSAGE_TAG
      - EMAIL_HEADER
      - LINK_TAG
      description: "<p>The location where Amazon Pinpoint finds the value of a dimension\
        \ to publish to Amazon CloudWatch. If you\n            want Amazon Pinpoint\
        \ to use the message tags that you specify using an X-SES-MESSAGE-TAGS header\n\
        \            or a parameter to the SendEmail/SendRawEmail API, choose <code>messageTag</code>.\
        \ If you\n            want Amazon Pinpoint to use your own email headers,\
        \ choose <code>emailHeader</code>. If you want\n            Amazon Pinpoint\
        \ to use link tags, choose <code>linkTags</code>.</p>"
    DkimStatus:
      type: string
      enum:
      - PENDING
      - SUCCESS
      - FAILED
      - TEMPORARY_FAILURE
      - NOT_STARTED
      description: "<p>The DKIM authentication status of the identity. The status\
        \ can be one of the\n            following:</p>\n        <ul>\n          \
        \  <li>\n                <p>\n                  <code>PENDING</code> – The\
        \ DKIM verification process was initiated, and\n                    Amazon\
        \ Pinpoint is still waiting for the required CNAME records to appear in the\
        \ DNS\n                    configuration for the domain.</p>\n           \
        \ </li>\n            <li>\n                <p>\n                  <code>SUCCESS</code>\
        \ – The DKIM authentication process completed\n                    successfully.</p>\n\
        \            </li>\n            <li>\n                <p>\n              \
        \    <code>FAILED</code> – The DKIM authentication process failed. This can\n\
        \                    happen when Amazon Pinpoint fails to find the required\
        \ CNAME records in the DNS\n                    configuration of the domain.</p>\n\
        \            </li>\n            <li>\n                <p>\n              \
        \    <code>TEMPORARY_FAILURE</code> – A temporary issue is preventing Amazon\
        \ Pinpoint\n                    from determining the DKIM authentication status\
        \ of the domain.</p>\n            </li>\n            <li>\n              \
        \  <p>\n                  <code>NOT_STARTED</code> – The DKIM verification\
        \ process hasn't been\n                    initiated for the domain.</p>\n\
        \            </li>\n         </ul>"
    DnsToken:
      type: string
    DnsTokenList:
      type: array
      items:
        $ref: '#/components/schemas/DnsToken'
    Domain:
      type: string
    DomainDeliverabilityCampaignList:
      type: array
      items:
        $ref: '#/components/schemas/DomainDeliverabilityCampaign'
      description: <p></p>
    DomainDeliverabilityTrackingOptions:
      type: array
      items:
        $ref: '#/components/schemas/DomainDeliverabilityTrackingOption'
      description: "<p>An object that contains information about the Deliverability\
        \ dashboard subscription for a\n            verified domain that you use to\
        \ send email and currently has an active Deliverability dashboard\n      \
        \      subscription. If a Deliverability dashboard subscription is active\
        \ for a domain, you gain access\n            to reputation, inbox placement,\
        \ and other metrics for the domain.</p>"
    DomainIspPlacements:
      type: array
      items:
        $ref: '#/components/schemas/DomainIspPlacement'
    EmailAddress:
      type: string
    EmailAddressList:
      type: array
      items:
        $ref: '#/components/schemas/EmailAddress'
    Enabled:
      type: boolean
      default: false
    ErrorMessage:
      type: string
    Esp:
      type: string
    Esps:
      type: array
      items:
        $ref: '#/components/schemas/Esp'
    EventDestinationName:
      type: string
    EventDestinations:
      type: array
      items:
        $ref: '#/components/schemas/EventDestination'
    EventType:
      type: string
      enum:
      - SEND
      - REJECT
      - BOUNCE
      - COMPLAINT
      - DELIVERY
      - OPEN
      - CLICK
      - RENDERING_FAILURE
      description: "<p>An email sending event type. For example, email sends, opens,\
        \ and bounces are all\n            email events.</p>"
    EventTypes:
      type: array
      items:
        $ref: '#/components/schemas/EventType'
    GeneralEnforcementStatus:
      type: string
    Identity:
      type: string
    IdentityInfoList:
      type: array
      items:
        $ref: '#/components/schemas/IdentityInfo'
    IdentityType:
      type: string
      enum:
      - EMAIL_ADDRESS
      - DOMAIN
      - MANAGED_DOMAIN
      description: "<p>The email identity type. The identity type can be one of the\
        \ following:</p>\n        <ul>\n            <li>\n                <p>\n  \
        \                <code>EMAIL_ADDRESS</code> – The identity is an email address.</p>\n\
        \            </li>\n            <li>\n                <p>\n              \
        \    <code>DOMAIN</code> – The identity is a domain.</p>\n            </li>\n\
        \         </ul>"
    ImageUrl:
      type: string
    Ip:
      type: string
    IpList:
      type: array
      items:
        $ref: '#/components/schemas/Ip'
    IspName:
      type: string
    IspNameList:
      type: array
      items:
        $ref: '#/components/schemas/IspName'
    IspPlacements:
      type: array
      items:
        $ref: '#/components/schemas/IspPlacement'
    LastFreshStart:
      type: string
      format: date-time
      description: "<p>The date and time (in Unix time) when the reputation metrics\
        \ were last given a fresh\n            start. When your account is given a\
        \ fresh start, your reputation metrics are calculated\n            starting\
        \ from the date of the fresh start.</p>"
    ListOfDedicatedIpPools:
      type: array
      items:
        $ref: '#/components/schemas/PoolName'
      description: <p>A list of dedicated IP pools that are associated with your Amazon
        Pinpoint account.</p>
    MailFromDomainName:
      type: string
    MailFromDomainStatus:
      type: string
      enum:
      - PENDING
      - SUCCESS
      - FAILED
      - TEMPORARY_FAILURE
      description: "<p>The status of the MAIL FROM domain. This status can have the\
        \ following values:</p>\n        <ul>\n            <li>\n                <p>\n\
        \                  <code>PENDING</code> – Amazon Pinpoint hasn't started searching\
        \ for the MX record\n                    yet.</p>\n            </li>\n   \
        \         <li>\n                <p>\n                  <code>SUCCESS</code>\
        \ – Amazon Pinpoint detected the required MX record for the\n            \
        \        MAIL FROM domain.</p>\n            </li>\n            <li>\n    \
        \            <p>\n                  <code>FAILED</code> – Amazon Pinpoint\
        \ can't find the required MX record, or the\n                    record no\
        \ longer exists.</p>\n            </li>\n            <li>\n              \
        \  <p>\n                  <code>TEMPORARY_FAILURE</code> – A temporary issue\
        \ occurred, which\n                    prevented Amazon Pinpoint from determining\
        \ the status of the MAIL FROM domain.</p>\n            </li>\n         </ul>"
    Max24HourSend:
      type: number
      format: double
      default: 0
    MaxItems:
      type: integer
    MaxSendRate:
      type: number
      format: double
      default: 0
    MessageContent:
      type: string
    MessageData:
      type: string
    MessageTagList:
      type: array
      items:
        $ref: '#/components/schemas/MessageTag'
      description: <p>A list of message tags.</p>
    MessageTagName:
      type: string
    MessageTagValue:
      type: string
    NextToken:
      type: string
    OutboundMessageId:
      type: string
    Percentage:
      type: number
      format: double
      description: <p>An object that contains information about inbox placement percentages.</p>
    Percentage100Wrapper:
      type: integer
    PoolName:
      type: string
    RawMessageData:
      type: string
      format: byte
      description: "<p>The raw email message. The message has to meet the following\
        \ criteria:</p>\n        <ul>\n            <li>\n                <p>The message\
        \ has to contain a header and a body, separated by one blank\n           \
        \         line.</p>\n            </li>\n            <li>\n               \
        \ <p>All of the required header fields must be present in the message.</p>\n\
        \            </li>\n            <li>\n                <p>Each part of a multipart\
        \ MIME message must be formatted properly.</p>\n            </li>\n      \
        \      <li>\n                <p>Attachments must be in a file format that\
        \ Amazon Pinpoint supports.\n                    </p>\n            </li>\n\
        \            <li>\n                <p>The entire message must be Base64 encoded.</p>\n\
        \            </li>\n            <li>\n                <p>If any of the MIME\
        \ parts in your message contain content that is outside of\n             \
        \       the 7-bit ASCII character range, you should encode that content to\
        \ ensure that\n                    recipients' email clients render the message\
        \ properly.</p>\n            </li>\n            <li>\n                <p>The\
        \ length of any single line of text in the message can't exceed 1,000\n  \
        \                  characters. This restriction is defined in <a href=\"https://tools.ietf.org/html/rfc5321\"\
        >RFC 5321</a>.</p>\n            </li>\n         </ul>"
    RblName:
      type: string
    ReportId:
      type: string
    ReportName:
      type: string
    SendingPoolName:
      type: string
    SentLast24Hours:
      type: number
      format: double
      default: 0
    Subject:
      type: string
    TagKey:
      type: string
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
    TagList:
      type: array
      items:
        $ref: '#/components/schemas/Tag'
    TagValue:
      type: string
    TemplateArn:
      type: string
    TemplateData:
      type: string
      minLength: 0
      maxLength: 262144
    Timestamp:
      type: string
      format: date-time
    TlsPolicy:
      type: string
      enum:
      - REQUIRE
      - OPTIONAL
      description: "<p>Specifies whether messages that use the configuration set are\
        \ required to use\n            Transport Layer Security (TLS). If the value\
        \ is <code>Require</code>, messages are only\n            delivered if a TLS\
        \ connection can be established. If the value is <code>Optional</code>,\n\
        \            messages can be delivered in plain text if a TLS connection can't\
        \ be established.</p>"
    Volume:
      type: integer
      format: int64
      description: <p>An object that contains information about inbox placement volume.</p>
    WarmupStatus:
      type: string
      enum:
      - IN_PROGRESS
      - DONE
      description: <p>The warmup status of a dedicated IP.</p>
