openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: pinpoint_email
  x-aws-serviceName: pinpointemail
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-07'
  version: '2018-07-26'
  title: Amazon Pinpoint Email Service
  description: |-
    Amazon Pinpoint Email Service

    Welcome to the _Amazon Pinpoint Email API Reference_. This guide provides information about the Amazon Pinpoint Email API (version 1.0), including supported operations, data types, parameters, and schemas.

    [Amazon Pinpoint](https://aws.amazon.com/pinpoint) is an AWS service that you can use to engage with your customers across multiple messaging channels. You can use Amazon Pinpoint to send email, SMS text messages, voice messages, and push notifications. The Amazon Pinpoint Email API provides programmatic access to options that are unique to the email channel and supplement the options provided by the Amazon Pinpoint API.

    If you're new to Amazon Pinpoint, you might find it helpful to also review the [Amazon Pinpoint Developer Guide](https://docs.aws.amazon.com/pinpoint/latest/developerguide/welcome.html). The _Amazon Pinpoint Developer Guide_ provides tutorials, code samples, and procedures that demonstrate how to use Amazon Pinpoint features programmatically and how to integrate Amazon Pinpoint functionality into mobile apps and other types of applications. The guide also provides information about key topics such as Amazon Pinpoint integration with other AWS services and the limits that apply to using the service.

    The Amazon Pinpoint Email API is available in several AWS Regions and it provides an endpoint for each of these Regions. For a list of all the Regions and endpoints where the API is currently available, see [AWS Service Endpoints](https://docs.aws.amazon.com/general/latest/gr/rande.html#pinpoint_region) in the _Amazon Web Services General Reference_. To learn more about AWS Regions, see [Managing AWS Regions](https://docs.aws.amazon.com/general/latest/gr/rande-manage.html) in the _Amazon Web Services General Reference_.

    In each Region, AWS maintains multiple Availability Zones. These Availability Zones are physically isolated from each other, but are united by private, low-latency, high-throughput, and highly redundant network connections. These Availability Zones enable us to provide very high levels of availability and redundancy, while also minimizing latency. To learn more about the number of Availability Zones that are available in each Region, see [AWS Global Infrastructure](http://aws.amazon.com/about-aws/global-infrastructure/).
servers:
- description: The Amazon Pinpoint Email Service regional endpoint
  url: https://email.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths:
  /v1/email/configuration-sets:
    post:
      operationId: CreateConfigurationSet
      description: |-
        Create a configuration set. _Configuration sets_ are groups of rules that you can apply to the emails you send using Amazon Pinpoint. You apply a configuration set to an email by including a reference to the configuration set in the headers of the email. When you apply a configuration set to an email, all of the rules in that configuration set are applied to the email.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ConfigurationSetName:
                  $ref: '#/components/schemas/ConfigurationSetName'
                TrackingOptions:
                  $ref: '#/components/schemas/TrackingOptions'
                DeliveryOptions:
                  $ref: '#/components/schemas/DeliveryOptions'
                ReputationOptions:
                  $ref: '#/components/schemas/ReputationOptions'
                SendingOptions:
                  $ref: '#/components/schemas/SendingOptions'
                Tags:
                  $ref: '#/components/schemas/TagList'
      responses:
        '200': {}
        '400':
          description: |-
            There are too many instances of the specified resource type.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '500':
          description: |-
            The resource is being modified by another operation or thread.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    get:
      operationId: ListConfigurationSets
      description: |-
        List all of the configuration sets associated with your Amazon Pinpoint account in the current region.

        In Amazon Pinpoint, _configuration sets_ are groups of rules that you can apply to the emails you send. You apply a configuration set to an email by including a reference to the configuration set in the headers of the email. When you apply a configuration set to an email, all of the rules in that configuration set are applied to the email.
      parameters:
      - name: NextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: PageSize
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxItems'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v1/email/configuration-sets/{ConfigurationSetName}/event-destinations:
    post:
      operationId: CreateConfigurationSetEventDestination
      description: |-
        Create an event destination. In Amazon Pinpoint, _events_ include message sends, deliveries, opens, clicks, bounces, and complaints. _Event destinations_ are places that you can send information about these events to. For example, you can send event data to Amazon SNS to receive notifications when you receive bounces or complaints, or you can use Amazon Kinesis Data Firehose to stream data to Amazon S3 for long-term storage.

        A single configuration set can include more than one event destination.
      parameters:
      - name: ConfigurationSetName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ConfigurationSetName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                EventDestinationName:
                  $ref: '#/components/schemas/EventDestinationName'
                EventDestination:
                  $ref: '#/components/schemas/EventDestinationDefinition'
      responses:
        '200': {}
        '400':
          description: |-
            There are too many instances of the specified resource type.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    get:
      operationId: GetConfigurationSetEventDestinations
      description: |-
        Retrieve a list of event destinations that are associated with a configuration set.

        In Amazon Pinpoint, _events_ include message sends, deliveries, opens, clicks, bounces, and complaints. _Event destinations_ are places that you can send information about these events to. For example, you can send event data to Amazon SNS to receive notifications when you receive bounces or complaints, or you can use Amazon Kinesis Data Firehose to stream data to Amazon S3 for long-term storage.
      parameters:
      - name: ConfigurationSetName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ConfigurationSetName'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v1/email/dedicated-ip-pools:
    post:
      operationId: CreateDedicatedIpPool
      description: |-
        Create a new pool of dedicated IP addresses. A pool can include one or more dedicated IP addresses that are associated with your Amazon Pinpoint account. You can associate a pool with a configuration set. When you send an email that uses that configuration set, Amazon Pinpoint sends it using only the IP addresses in the associated pool.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                PoolName:
                  $ref: '#/components/schemas/PoolName'
                Tags:
                  $ref: '#/components/schemas/TagList'
      responses:
        '200': {}
        '400':
          description: |-
            There are too many instances of the specified resource type.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '500':
          description: |-
            The resource is being modified by another operation or thread.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    get:
      operationId: ListDedicatedIpPools
      description: |-
        List all of the dedicated IP pools that exist in your Amazon Pinpoint account in the current AWS Region.
      parameters:
      - name: NextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: PageSize
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxItems'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v1/email/deliverability-dashboard/test:
    post:
      operationId: CreateDeliverabilityTestReport
      description: |-
        Create a new predictive inbox placement test. Predictive inbox placement tests can help you predict how your messages will be handled by various email providers around the world. When you perform a predictive inbox placement test, you provide a sample message that contains the content that you plan to send to your customers. Amazon Pinpoint then sends that message to special email addresses spread across several major email providers. After about 24 hours, the test is complete, and you can use the `GetDeliverabilityTestReport` operation to view the results of the test.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ReportName:
                  $ref: '#/components/schemas/ReportName'
                FromEmailAddress:
                  $ref: '#/components/schemas/EmailAddress'
                Content:
                  $ref: '#/components/schemas/EmailContent'
                Tags:
                  $ref: '#/components/schemas/TagList'
      responses:
        '200': {}
        '400':
          description: |-
            The message can't be sent because the account's ability to send email is currently paused.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendingPausedException'
        '500':
          description: |-
            The resource is being modified by another operation or thread.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v1/email/identities:
    post:
      operationId: CreateEmailIdentity
      description: |-
        Verifies an email identity for use with Amazon Pinpoint. In Amazon Pinpoint, an identity is an email address or domain that you use when you send email. Before you can use an identity to send email with Amazon Pinpoint, you first have to verify it. By verifying an address, you demonstrate that you're the owner of the address, and that you've given Amazon Pinpoint permission to send email from the address.

        When you verify an email address, Amazon Pinpoint sends an email to the address. Your email address is verified as soon as you follow the link in the verification email.

        When you verify a domain, this operation provides a set of DKIM tokens, which you can convert into CNAME tokens. You add these CNAME tokens to the DNS configuration for your domain. Your domain is verified when Amazon Pinpoint detects these records in the DNS configuration for your domain. It usually takes around 72 hours to complete the domain verification process.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                EmailIdentity:
                  $ref: '#/components/schemas/Identity'
                Tags:
                  $ref: '#/components/schemas/TagList'
      responses:
        '200': {}
        '400':
          description: |-
            There are too many instances of the specified resource type.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '500':
          description: |-
            The resource is being modified by another operation or thread.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    get:
      operationId: ListEmailIdentities
      description: |-
        Returns a list of all of the email identities that are associated with your Amazon Pinpoint account. An identity can be either an email address or a domain. This operation returns identities that are verified as well as those that aren't.
      parameters:
      - name: NextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: PageSize
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxItems'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v1/email/configuration-sets/{ConfigurationSetName}:
    delete:
      operationId: DeleteConfigurationSet
      description: |-
        Delete an existing configuration set.

        In Amazon Pinpoint, _configuration sets_ are groups of rules that you can apply to the emails you send. You apply a configuration set to an email by including a reference to the configuration set in the headers of the email. When you apply a configuration set to an email, all of the rules in that configuration set are applied to the email.
      parameters:
      - name: ConfigurationSetName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ConfigurationSetName'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            The resource is being modified by another operation or thread.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    get:
      operationId: GetConfigurationSet
      description: |-
        Get information about an existing configuration set, including the dedicated IP pool that it's associated with, whether or not it's enabled for sending email, and more.

        In Amazon Pinpoint, _configuration sets_ are groups of rules that you can apply to the emails you send. You apply a configuration set to an email by including a reference to the configuration set in the headers of the email. When you apply a configuration set to an email, all of the rules in that configuration set are applied to the email.
      parameters:
      - name: ConfigurationSetName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ConfigurationSetName'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v1/email/configuration-sets/{ConfigurationSetName}/event-destinations/{EventDestinationName}:
    delete:
      operationId: DeleteConfigurationSetEventDestination
      description: |-
        Delete an event destination.

        In Amazon Pinpoint, _events_ include message sends, deliveries, opens, clicks, bounces, and complaints. _Event destinations_ are places that you can send information about these events to. For example, you can send event data to Amazon SNS to receive notifications when you receive bounces or complaints, or you can use Amazon Kinesis Data Firehose to stream data to Amazon S3 for long-term storage.
      parameters:
      - name: ConfigurationSetName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ConfigurationSetName'
      - name: EventDestinationName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/EventDestinationName'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    put:
      operationId: UpdateConfigurationSetEventDestination
      description: |-
        Update the configuration of an event destination for a configuration set.

        In Amazon Pinpoint, _events_ include message sends, deliveries, opens, clicks, bounces, and complaints. _Event destinations_ are places that you can send information about these events to. For example, you can send event data to Amazon SNS to receive notifications when you receive bounces or complaints, or you can use Amazon Kinesis Data Firehose to stream data to Amazon S3 for long-term storage.
      parameters:
      - name: ConfigurationSetName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ConfigurationSetName'
      - name: EventDestinationName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/EventDestinationName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                EventDestination:
                  $ref: '#/components/schemas/EventDestinationDefinition'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v1/email/dedicated-ip-pools/{PoolName}:
    delete:
      operationId: DeleteDedicatedIpPool
      description: |-
        Delete a dedicated IP pool.
      parameters:
      - name: PoolName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PoolName'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            The resource is being modified by another operation or thread.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v1/email/identities/{EmailIdentity}:
    delete:
      operationId: DeleteEmailIdentity
      description: |-
        Deletes an email identity that you previously verified for use with Amazon Pinpoint. An identity can be either an email address or a domain name.
      parameters:
      - name: EmailIdentity
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Identity'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            The resource is being modified by another operation or thread.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    get:
      operationId: GetEmailIdentity
      description: |-
        Provides information about a specific identity associated with your Amazon Pinpoint account, including the identity's verification status, its DKIM authentication status, and its custom Mail-From settings.
      parameters:
      - name: EmailIdentity
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Identity'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v1/email/account:
    get:
      operationId: GetAccount
      description: |-
        Obtain information about the email-sending status and capabilities of your Amazon Pinpoint account in the current AWS Region.
      parameters: []
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v1/email/deliverability-dashboard/blacklist-report:
    get:
      operationId: GetBlacklistReports
      description: |-
        Retrieve a list of the blacklists that your dedicated IP addresses appear on.
      parameters:
      - name: BlacklistItemNames
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/BlacklistItemNames'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v1/email/dedicated-ips/{Ip}:
    get:
      operationId: GetDedicatedIp
      description: |-
        Get information about a dedicated IP address, including the name of the dedicated IP pool that it's associated with, as well information about the automatic warm-up process for the address.
      parameters:
      - name: Ip
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Ip'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v1/email/dedicated-ips:
    get:
      operationId: GetDedicatedIps
      description: |-
        List the dedicated IP addresses that are associated with your Amazon Pinpoint account.
      parameters:
      - name: PoolName
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PoolName'
      - name: NextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: PageSize
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxItems'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v1/email/deliverability-dashboard:
    get:
      operationId: GetDeliverabilityDashboardOptions
      description: |-
        Retrieve information about the status of the Deliverability dashboard for your Amazon Pinpoint account. When the Deliverability dashboard is enabled, you gain access to reputation, deliverability, and other metrics for the domains that you use to send email using Amazon Pinpoint. You also gain the ability to perform predictive inbox placement tests.

        When you use the Deliverability dashboard, you pay a monthly subscription charge, in addition to any other fees that you accrue by using Amazon Pinpoint. For more information about the features and cost of a Deliverability dashboard subscription, see [Amazon Pinpoint Pricing](http://aws.amazon.com/pinpoint/pricing/).
      parameters: []
      responses:
        '200': {}
        '400':
          description: |-
            There are too many instances of the specified resource type.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    put:
      operationId: PutDeliverabilityDashboardOption
      description: |-
        Enable or disable the Deliverability dashboard for your Amazon Pinpoint account. When you enable the Deliverability dashboard, you gain access to reputation, deliverability, and other metrics for the domains that you use to send email using Amazon Pinpoint. You also gain the ability to perform predictive inbox placement tests.

        When you use the Deliverability dashboard, you pay a monthly subscription charge, in addition to any other fees that you accrue by using Amazon Pinpoint. For more information about the features and cost of a Deliverability dashboard subscription, see [Amazon Pinpoint Pricing](http://aws.amazon.com/pinpoint/pricing/).
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                DashboardEnabled:
                  $ref: '#/components/schemas/Enabled'
                SubscribedDomains:
                  $ref: '#/components/schemas/DomainDeliverabilityTrackingOptions'
      responses:
        '200': {}
        '400':
          description: |-
            There are too many instances of the specified resource type.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v1/email/deliverability-dashboard/test-reports/{ReportId}:
    get:
      operationId: GetDeliverabilityTestReport
      description: |-
        Retrieve the results of a predictive inbox placement test.
      parameters:
      - name: ReportId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ReportId'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v1/email/deliverability-dashboard/campaigns/{CampaignId}:
    get:
      operationId: GetDomainDeliverabilityCampaign
      description: |-
        Retrieve all the deliverability data for a specific campaign. This data is available for a campaign only if the campaign sent email by using a domain that the Deliverability dashboard is enabled for (`PutDeliverabilityDashboardOption` operation).
      parameters:
      - name: CampaignId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CampaignId'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v1/email/deliverability-dashboard/statistics-report/{Domain}:
    get:
      operationId: GetDomainStatisticsReport
      description: |-
        Retrieve inbox placement and engagement rates for the domains that you use to send email.
      parameters:
      - name: Domain
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Identity'
      - name: StartDate
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Timestamp'
      - name: EndDate
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Timestamp'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v1/email/deliverability-dashboard/test-reports:
    get:
      operationId: ListDeliverabilityTestReports
      description: |-
        Show a list of the predictive inbox placement tests that you've performed, regardless of their statuses. For predictive inbox placement tests that are complete, you can use the `GetDeliverabilityTestReport` operation to view the results.
      parameters:
      - name: NextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: PageSize
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxItems'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v1/email/deliverability-dashboard/domains/{SubscribedDomain}/campaigns:
    get:
      operationId: ListDomainDeliverabilityCampaigns
      description: |-
        Retrieve deliverability data for all the campaigns that used a specific domain to send email during a specified time range. This data is available for a domain only if you enabled the Deliverability dashboard (`PutDeliverabilityDashboardOption` operation) for the domain.
      parameters:
      - name: StartDate
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Timestamp'
      - name: EndDate
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Timestamp'
      - name: SubscribedDomain
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Domain'
      - name: NextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: PageSize
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxItems'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v1/email/tags:
    get:
      operationId: ListTagsForResource
      description: |-
        Retrieve a list of the tags (keys and values) that are associated with a specified resource. A  _tag_ is a label that you optionally define and associate with a resource in Amazon Pinpoint. Each tag consists of a required  _tag key_ and an optional associated  _tag value_. A tag key is a general label that acts as a category for more specific tag values. A tag value acts as a descriptor within a tag key.
      parameters:
      - name: ResourceArn
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/AmazonResourceName'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    post:
      operationId: TagResource
      description: |-
        Add one or more tags (keys and values) to a specified resource. A _tag_ is a label that you optionally define and associate with a resource in Amazon Pinpoint. Tags can help you categorize and manage resources in different ways, such as by purpose, owner, environment, or other criteria. A resource can have as many as 50 tags.

        Each tag consists of a required  _tag key_ and an associated  _tag value_ , both of which you define. A tag key is a general label that acts as a category for more specific tag values. A tag value acts as a descriptor within a tag key.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ResourceArn:
                  $ref: '#/components/schemas/AmazonResourceName'
                Tags:
                  $ref: '#/components/schemas/TagList'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            The resource is being modified by another operation or thread.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    delete:
      operationId: UntagResource
      description: |-
        Remove one or more tags (keys and values) from a specified resource.
      parameters:
      - name: ResourceArn
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/AmazonResourceName'
      - name: TagKeys
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/TagKeyList'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            The resource is being modified by another operation or thread.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v1/email/account/dedicated-ips/warmup:
    put:
      operationId: PutAccountDedicatedIpWarmupAttributes
      description: |-
        Enable or disable the automatic warm-up feature for dedicated IP addresses.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AutoWarmupEnabled:
                  $ref: '#/components/schemas/Enabled'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v1/email/account/sending:
    put:
      operationId: PutAccountSendingAttributes
      description: |-
        Enable or disable the ability of your account to send email.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                SendingEnabled:
                  $ref: '#/components/schemas/Enabled'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v1/email/configuration-sets/{ConfigurationSetName}/delivery-options:
    put:
      operationId: PutConfigurationSetDeliveryOptions
      description: |-
        Associate a configuration set with a dedicated IP pool. You can use dedicated IP pools to create groups of dedicated IP addresses for sending specific types of email.
      parameters:
      - name: ConfigurationSetName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ConfigurationSetName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                TlsPolicy:
                  $ref: '#/components/schemas/TlsPolicy'
                SendingPoolName:
                  $ref: '#/components/schemas/SendingPoolName'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v1/email/configuration-sets/{ConfigurationSetName}/reputation-options:
    put:
      operationId: PutConfigurationSetReputationOptions
      description: |-
        Enable or disable collection of reputation metrics for emails that you send using a particular configuration set in a specific AWS Region.
      parameters:
      - name: ConfigurationSetName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ConfigurationSetName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ReputationMetricsEnabled:
                  $ref: '#/components/schemas/Enabled'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v1/email/configuration-sets/{ConfigurationSetName}/sending:
    put:
      operationId: PutConfigurationSetSendingOptions
      description: |-
        Enable or disable email sending for messages that use a particular configuration set in a specific AWS Region.
      parameters:
      - name: ConfigurationSetName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ConfigurationSetName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                SendingEnabled:
                  $ref: '#/components/schemas/Enabled'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v1/email/configuration-sets/{ConfigurationSetName}/tracking-options:
    put:
      operationId: PutConfigurationSetTrackingOptions
      description: |-
        Specify a custom domain to use for open and click tracking elements in email that you send using Amazon Pinpoint.
      parameters:
      - name: ConfigurationSetName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ConfigurationSetName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                CustomRedirectDomain:
                  $ref: '#/components/schemas/CustomRedirectDomain'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v1/email/dedicated-ips/{Ip}/pool:
    put:
      operationId: PutDedicatedIpInPool
      description: |-
        Move a dedicated IP address to an existing dedicated IP pool.

        The dedicated IP address that you specify must already exist, and must be associated with your Amazon Pinpoint account.

        The dedicated IP pool you specify must already exist. You can create a new pool by using the `CreateDedicatedIpPool` operation.
      parameters:
      - name: Ip
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Ip'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                DestinationPoolName:
                  $ref: '#/components/schemas/PoolName'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v1/email/dedicated-ips/{Ip}/warmup:
    put:
      operationId: PutDedicatedIpWarmupAttributes
      description: ""
      parameters:
      - name: Ip
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Ip'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                WarmupPercentage:
                  $ref: '#/components/schemas/Percentage100Wrapper'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v1/email/identities/{EmailIdentity}/dkim:
    put:
      operationId: PutEmailIdentityDkimAttributes
      description: |-
        Used to enable or disable DKIM authentication for an email identity.
      parameters:
      - name: EmailIdentity
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Identity'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                SigningEnabled:
                  $ref: '#/components/schemas/Enabled'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v1/email/identities/{EmailIdentity}/feedback:
    put:
      operationId: PutEmailIdentityFeedbackAttributes
      description: |-
        Used to enable or disable feedback forwarding for an identity. This setting determines what happens when an identity is used to send an email that results in a bounce or complaint event.

        When you enable feedback forwarding, Amazon Pinpoint sends you email notifications when bounce or complaint events occur. Amazon Pinpoint sends this notification to the address that you specified in the Return-Path header of the original email.

        When you disable feedback forwarding, Amazon Pinpoint sends notifications through other mechanisms, such as by notifying an Amazon SNS topic. You're required to have a method of tracking bounces and complaints. If you haven't set up another mechanism for receiving bounce or complaint notifications, Amazon Pinpoint sends an email notification when these events occur (even if this setting is disabled).
      parameters:
      - name: EmailIdentity
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Identity'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                EmailForwardingEnabled:
                  $ref: '#/components/schemas/Enabled'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v1/email/identities/{EmailIdentity}/mail-from:
    put:
      operationId: PutEmailIdentityMailFromAttributes
      description: |-
        Used to enable or disable the custom Mail-From domain configuration for an email identity.
      parameters:
      - name: EmailIdentity
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Identity'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                MailFromDomain:
                  $ref: '#/components/schemas/MailFromDomainName'
                BehaviorOnMxFailure:
                  $ref: '#/components/schemas/BehaviorOnMxFailure'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v1/email/outbound-emails:
    post:
      operationId: SendEmail
      description: |-
        Sends an email message. You can use the Amazon Pinpoint Email API to send two types of messages:

          * **Simple** – A standard email message. When you create this type of message, you specify the sender, the recipient, and the message body, and Amazon Pinpoint assembles the message for you.

          * **Raw** – A raw, MIME-formatted email message. When you send this type of email, you have to specify all of the message headers, as well as the message body. You can use this message type to send messages that contain attachments. The message that you specify has to be a valid MIME message.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                FromEmailAddress:
                  $ref: '#/components/schemas/EmailAddress'
                Destination:
                  $ref: '#/components/schemas/Destination'
                ReplyToAddresses:
                  $ref: '#/components/schemas/EmailAddressList'
                FeedbackForwardingEmailAddress:
                  $ref: '#/components/schemas/EmailAddress'
                Content:
                  $ref: '#/components/schemas/EmailContent'
                EmailTags:
                  $ref: '#/components/schemas/MessageTagList'
                ConfigurationSetName:
                  $ref: '#/components/schemas/ConfigurationSetName'
      responses:
        '200': {}
        '400':
          description: |-
            The message can't be sent because the account's ability to send email is currently paused.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendingPausedException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
components:
  schemas:
    AccountSuspendedException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: The message can't be sent because the account's ability to send
        email has been permanently restricted.
    AlreadyExistsException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: The resource specified in your request already exists.
    AmazonResourceName:
      type: string
    BadRequestException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: The input you provided is invalid.
    BehaviorOnMxFailure:
      type: string
      enum:
      - USE_DEFAULT_VALUE
      - REJECT_MESSAGE
      description: "<p>The action that you want Amazon Pinpoint to take if it can't\
        \ read the required MX record for a\n            custom MAIL FROM domain.\
        \ When you set this value to <code>UseDefaultValue</code>, Amazon Pinpoint\n\
        \            uses <i>amazonses.com</i> as the MAIL FROM domain. When you set\
        \ this value\n            to <code>RejectMessage</code>, Amazon Pinpoint returns\
        \ a <code>MailFromDomainNotVerified</code>\n            error, and doesn't\
        \ attempt to deliver the email.</p>\n        <p>These behaviors are taken\
        \ when the custom MAIL FROM domain configuration is in the\n             \
        \   <code>Pending</code>, <code>Failed</code>, and <code>TemporaryFailure</code>\n\
        \            states.</p>"
    BlacklistEntries:
      type: array
      items:
        $ref: '#/components/schemas/BlacklistEntry'
    BlacklistEntry:
      type: object
      properties:
        RblName:
          allOf:
          - $ref: '#/components/schemas/RblName'
          description: The name of the blacklist that the IP address appears on.
        ListingTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time when the blacklisting event occurred, shown in Unix
            time format.
        Description:
          allOf:
          - $ref: '#/components/schemas/BlacklistingDescription'
          description: Additional information about the blacklisting event, as provided
            by the blacklist maintainer.
      description: An object that contains information about a blacklisting event
        that impacts one of the dedicated IP addresses that is associated with your
        account.
    BlacklistItemName:
      type: string
    BlacklistItemNames:
      type: array
      items:
        $ref: '#/components/schemas/BlacklistItemName'
    BlacklistReport:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/BlacklistEntries'
    BlacklistingDescription:
      type: string
    Body:
      type: object
      properties:
        Text:
          allOf:
          - $ref: '#/components/schemas/Content'
          description: An object that represents the version of the message that is
            displayed in email clients that don't support HTML, or clients where the
            recipient has disabled HTML rendering.
        Html:
          allOf:
          - $ref: '#/components/schemas/Content'
          description: An object that represents the version of the message that is
            displayed in email clients that support HTML. HTML messages can include
            formatted text, hyperlinks, images, and more.
      description: Represents the body of the email message.
    CampaignId:
      type: string
    Charset:
      type: string
    CloudWatchDestination:
      type: object
      properties:
        DimensionConfigurations:
          allOf:
          - $ref: '#/components/schemas/CloudWatchDimensionConfigurations'
          description: An array of objects that define the dimensions to use when
            you send email events to Amazon CloudWatch.
      required:
      - DimensionConfigurations
      description: An object that defines an Amazon CloudWatch destination for email
        events. You can use Amazon CloudWatch to monitor and gain insights on your
        email sending metrics.
    CloudWatchDimensionConfiguration:
      type: object
      properties:
        DimensionName:
          allOf:
          - $ref: '#/components/schemas/DimensionName'
          description: "The name of an Amazon CloudWatch dimension associated with\
            \ an email sending metric. The name has to meet the following criteria:\n\
            \n  * It can only contain ASCII letters (a-z, A-Z), numbers (0-9), underscores\
            \ (_), or dashes (-).\n\n  * It can contain no more than 256 characters."
        DimensionValueSource:
          allOf:
          - $ref: '#/components/schemas/DimensionValueSource'
          description: The location where Amazon Pinpoint finds the value of a dimension
            to publish to Amazon CloudWatch. If you want Amazon Pinpoint to use the
            message tags that you specify using an X-SES-MESSAGE-TAGS header or a
            parameter to the SendEmail/SendRawEmail API, choose `messageTag`. If you
            want Amazon Pinpoint to use your own email headers, choose `emailHeader`.
            If you want Amazon Pinpoint to use link tags, choose `linkTags`.
        DefaultDimensionValue:
          allOf:
          - $ref: '#/components/schemas/DefaultDimensionValue'
          description: "The default value of the dimension that is published to Amazon\
            \ CloudWatch if you don't provide the value of the dimension when you\
            \ send an email. This value has to meet the following criteria:\n\n  *\
            \ It can only contain ASCII letters (a-z, A-Z), numbers (0-9), underscores\
            \ (_), or dashes (-).\n\n  * It can contain no more than 256 characters."
      required:
      - DimensionName
      - DimensionValueSource
      - DefaultDimensionValue
      description: An object that defines the dimension configuration to use when
        you send Amazon Pinpoint email events to Amazon CloudWatch.
    CloudWatchDimensionConfigurations:
      type: array
      items:
        $ref: '#/components/schemas/CloudWatchDimensionConfiguration'
    ConcurrentModificationException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: The resource is being modified by another operation or thread.
    ConfigurationSetName:
      type: string
    ConfigurationSetNameList:
      type: array
      items:
        $ref: '#/components/schemas/ConfigurationSetName'
    Content:
      type: object
      properties:
        Data:
          allOf:
          - $ref: '#/components/schemas/MessageData'
          description: The content of the message itself.
        Charset:
          allOf:
          - $ref: '#/components/schemas/Charset'
          description: The character set for the content. Because of the constraints
            of the SMTP protocol, Amazon Pinpoint uses 7-bit ASCII by default. If
            the text includes characters outside of the ASCII range, you have to specify
            a character set. For example, you could specify `UTF-8`, `ISO-8859-1`,
            or `Shift_JIS`.
      required:
      - Data
      description: An object that represents the content of the email, and optionally
        a character set specification.
    CreateConfigurationSetEventDestinationRequest:
      type: object
      properties:
        ConfigurationSetName:
          allOf:
          - $ref: '#/components/schemas/ConfigurationSetName'
          description: The name of the configuration set that you want to add an event
            destination to.
        EventDestinationName:
          allOf:
          - $ref: '#/components/schemas/EventDestinationName'
          description: A name that identifies the event destination within the configuration
            set.
        EventDestination:
          allOf:
          - $ref: '#/components/schemas/EventDestinationDefinition'
          description: An object that defines the event destination.
      required:
      - ConfigurationSetName
      - EventDestinationName
      - EventDestination
      description: A request to add an event destination to a configuration set.
    CreateConfigurationSetEventDestinationResponse:
      type: object
      properties: {}
      description: An HTTP 200 response if the request succeeds, or an error message
        if the request fails.
    CreateConfigurationSetRequest:
      type: object
      properties:
        ConfigurationSetName:
          allOf:
          - $ref: '#/components/schemas/ConfigurationSetName'
          description: The name of the configuration set.
        TrackingOptions:
          allOf:
          - $ref: '#/components/schemas/TrackingOptions'
          description: An object that defines the open and click tracking options
            for emails that you send using the configuration set.
        DeliveryOptions:
          allOf:
          - $ref: '#/components/schemas/DeliveryOptions'
          description: An object that defines the dedicated IP pool that is used to
            send emails that you send using the configuration set.
        ReputationOptions:
          allOf:
          - $ref: '#/components/schemas/ReputationOptions'
          description: An object that defines whether or not Amazon Pinpoint collects
            reputation metrics for the emails that you send that use the configuration
            set.
        SendingOptions:
          allOf:
          - $ref: '#/components/schemas/SendingOptions'
          description: An object that defines whether or not Amazon Pinpoint can send
            email that you send using the configuration set.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: An array of objects that define the tags (keys and values)
            that you want to associate with the configuration set.
      required:
      - ConfigurationSetName
      description: A request to create a configuration set.
    CreateConfigurationSetResponse:
      type: object
      properties: {}
      description: An HTTP 200 response if the request succeeds, or an error message
        if the request fails.
    CreateDedicatedIpPoolRequest:
      type: object
      properties:
        PoolName:
          allOf:
          - $ref: '#/components/schemas/PoolName'
          description: The name of the dedicated IP pool.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: An object that defines the tags (keys and values) that you
            want to associate with the pool.
      required:
      - PoolName
      description: A request to create a new dedicated IP pool.
    CreateDedicatedIpPoolResponse:
      type: object
      properties: {}
      description: An HTTP 200 response if the request succeeds, or an error message
        if the request fails.
    CreateDeliverabilityTestReportRequest:
      type: object
      properties:
        ReportName:
          allOf:
          - $ref: '#/components/schemas/ReportName'
          description: A unique name that helps you to identify the predictive inbox
            placement test when you retrieve the results.
        FromEmailAddress:
          allOf:
          - $ref: '#/components/schemas/EmailAddress'
          description: The email address that the predictive inbox placement test
            email was sent from.
        Content:
          allOf:
          - $ref: '#/components/schemas/EmailContent'
          description: The HTML body of the message that you sent when you performed
            the predictive inbox placement test.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: An array of objects that define the tags (keys and values)
            that you want to associate with the predictive inbox placement test.
      required:
      - FromEmailAddress
      - Content
      description: A request to perform a predictive inbox placement test. Predictive
        inbox placement tests can help you predict how your messages will be handled
        by various email providers around the world. When you perform a predictive
        inbox placement test, you provide a sample message that contains the content
        that you plan to send to your customers. Amazon Pinpoint then sends that message
        to special email addresses spread across several major email providers. After
        about 24 hours, the test is complete, and you can use the `GetDeliverabilityTestReport`
        operation to view the results of the test.
    CreateDeliverabilityTestReportResponse:
      type: object
      properties:
        ReportId:
          allOf:
          - $ref: '#/components/schemas/ReportId'
          description: A unique string that identifies the predictive inbox placement
            test.
        DeliverabilityTestStatus:
          allOf:
          - $ref: '#/components/schemas/DeliverabilityTestStatus'
          description: The status of the predictive inbox placement test. If the status
            is `IN_PROGRESS`, then the predictive inbox placement test is currently
            running. Predictive inbox placement tests are usually complete within
            24 hours of creating the test. If the status is `COMPLETE`, then the test
            is finished, and you can use the `GetDeliverabilityTestReport` to view
            the results of the test.
      required:
      - ReportId
      - DeliverabilityTestStatus
      description: Information about the predictive inbox placement test that you
        created.
    CreateEmailIdentityRequest:
      type: object
      properties:
        EmailIdentity:
          allOf:
          - $ref: '#/components/schemas/Identity'
          description: The email address or domain that you want to verify.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: An array of objects that define the tags (keys and values)
            that you want to associate with the email identity.
      required:
      - EmailIdentity
      description: A request to begin the verification process for an email identity
        (an email address or domain).
    CreateEmailIdentityResponse:
      type: object
      properties:
        IdentityType:
          allOf:
          - $ref: '#/components/schemas/IdentityType'
          description: The email identity type.
        VerifiedForSendingStatus:
          allOf:
          - $ref: '#/components/schemas/Enabled'
          description: Specifies whether or not the identity is verified. In Amazon
            Pinpoint, you can only send email from verified email addresses or domains.
            For more information about verifying identities, see the [Amazon Pinpoint
            User Guide](https://docs.aws.amazon.com/pinpoint/latest/userguide/channels-email-manage-verify.html).
        DkimAttributes:
          allOf:
          - $ref: '#/components/schemas/DkimAttributes'
          description: An object that contains information about the DKIM attributes
            for the identity. This object includes the tokens that you use to create
            the CNAME records that are required to complete the DKIM verification
            process.
      description: 'If the email identity is a domain, this object contains tokens
        that you can use to create a set of CNAME records. To sucessfully verify your
        domain, you have to add these records to the DNS configuration for your domain.


        If the email identity is an email address, this object is empty.'
    CustomRedirectDomain:
      type: string
    DailyVolume:
      type: object
      properties:
        StartDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date that the DailyVolume metrics apply to, in Unix time.
        VolumeStatistics:
          allOf:
          - $ref: '#/components/schemas/VolumeStatistics'
          description: An object that contains inbox placement metrics for a specific
            day in the analysis period.
        DomainIspPlacements:
          allOf:
          - $ref: '#/components/schemas/DomainIspPlacements'
          description: An object that contains inbox placement metrics for a specified
            day in the analysis period, broken out by the recipient's email provider.
      description: An object that contains information about the volume of email sent
        on each day of the analysis period.
    DailyVolumes:
      type: array
      items:
        $ref: '#/components/schemas/DailyVolume'
    DedicatedIp:
      type: object
      properties:
        Ip:
          allOf:
          - $ref: '#/components/schemas/Ip'
          description: An IP address that is reserved for use by your Amazon Pinpoint
            account.
        WarmupStatus:
          allOf:
          - $ref: '#/components/schemas/WarmupStatus'
          description: "The warm-up status of a dedicated IP address. The status can\
            \ have one of the following values:\n\n  * `IN_PROGRESS` – The IP address\
            \ isn't ready to use because the dedicated IP warm-up process is ongoing.\n\
            \n  * `DONE` – The dedicated IP warm-up process is complete, and the IP\
            \ address is ready to use."
        WarmupPercentage:
          allOf:
          - $ref: '#/components/schemas/Percentage100Wrapper'
          description: Indicates how complete the dedicated IP warm-up process is.
            When this value equals 1, the address has completed the warm-up process
            and is ready for use.
        PoolName:
          allOf:
          - $ref: '#/components/schemas/PoolName'
          description: The name of the dedicated IP pool that the IP address is associated
            with.
      required:
      - Ip
      - WarmupStatus
      - WarmupPercentage
      description: Contains information about a dedicated IP address that is associated
        with your Amazon Pinpoint account.
    DedicatedIpList:
      type: array
      items:
        $ref: '#/components/schemas/DedicatedIp'
      description: <p>A list of dedicated IP addresses that are associated with your
        Amazon Pinpoint account.</p>
    DefaultDimensionValue:
      type: string
    DeleteConfigurationSetEventDestinationRequest:
      type: object
      properties:
        ConfigurationSetName:
          allOf:
          - $ref: '#/components/schemas/ConfigurationSetName'
          description: The name of the configuration set that contains the event destination
            that you want to delete.
        EventDestinationName:
          allOf:
          - $ref: '#/components/schemas/EventDestinationName'
          description: The name of the event destination that you want to delete.
      required:
      - ConfigurationSetName
      - EventDestinationName
      description: A request to delete an event destination from a configuration set.
    DeleteConfigurationSetEventDestinationResponse:
      type: object
      properties: {}
      description: An HTTP 200 response if the request succeeds, or an error message
        if the request fails.
    DeleteConfigurationSetRequest:
      type: object
      properties:
        ConfigurationSetName:
          allOf:
          - $ref: '#/components/schemas/ConfigurationSetName'
          description: The name of the configuration set that you want to delete.
      required:
      - ConfigurationSetName
      description: A request to delete a configuration set.
    DeleteConfigurationSetResponse:
      type: object
      properties: {}
      description: An HTTP 200 response if the request succeeds, or an error message
        if the request fails.
    DeleteDedicatedIpPoolRequest:
      type: object
      properties:
        PoolName:
          allOf:
          - $ref: '#/components/schemas/PoolName'
          description: The name of the dedicated IP pool that you want to delete.
      required:
      - PoolName
      description: A request to delete a dedicated IP pool.
    DeleteDedicatedIpPoolResponse:
      type: object
      properties: {}
      description: An HTTP 200 response if the request succeeds, or an error message
        if the request fails.
    DeleteEmailIdentityRequest:
      type: object
      properties:
        EmailIdentity:
          allOf:
          - $ref: '#/components/schemas/Identity'
          description: The identity (that is, the email address or domain) that you
            want to delete from your Amazon Pinpoint account.
      required:
      - EmailIdentity
      description: A request to delete an existing email identity. When you delete
        an identity, you lose the ability to use Amazon Pinpoint to send email from
        that identity. You can restore your ability to send email by completing the
        verification process for the identity again.
    DeleteEmailIdentityResponse:
      type: object
      properties: {}
      description: An HTTP 200 response if the request succeeds, or an error message
        if the request fails.
    DeliverabilityDashboardAccountStatus:
      type: string
      enum:
      - ACTIVE
      - PENDING_EXPIRATION
      - DISABLED
      description: "<p>The current status of your Deliverability dashboard subscription.\
        \ If this value is\n                <code>PENDING_EXPIRATION</code>, your\
        \ subscription is scheduled to expire at the end\n            of the current\
        \ calendar month.</p>"
    DeliverabilityTestReport:
      type: object
      properties:
        ReportId:
          allOf:
          - $ref: '#/components/schemas/ReportId'
          description: A unique string that identifies the predictive inbox placement
            test.
        ReportName:
          allOf:
          - $ref: '#/components/schemas/ReportName'
          description: A name that helps you identify a predictive inbox placement
            test report.
        Subject:
          allOf:
          - $ref: '#/components/schemas/DeliverabilityTestSubject'
          description: The subject line for an email that you submitted in a predictive
            inbox placement test.
        FromEmailAddress:
          allOf:
          - $ref: '#/components/schemas/EmailAddress'
          description: The sender address that you specified for the predictive inbox
            placement test.
        CreateDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time when the predictive inbox placement test
            was created, in Unix time format.
        DeliverabilityTestStatus:
          allOf:
          - $ref: '#/components/schemas/DeliverabilityTestStatus'
          description: The status of the predictive inbox placement test. If the status
            is `IN_PROGRESS`, then the predictive inbox placement test is currently
            running. Predictive inbox placement tests are usually complete within
            24 hours of creating the test. If the status is `COMPLETE`, then the test
            is finished, and you can use the `GetDeliverabilityTestReport` to view
            the results of the test.
      description: An object that contains metadata related to a predictive inbox
        placement test.
    DeliverabilityTestReports:
      type: array
      items:
        $ref: '#/components/schemas/DeliverabilityTestReport'
    DeliverabilityTestStatus:
      type: string
      enum:
      - IN_PROGRESS
      - COMPLETED
      description: "<p>The status of a predictive inbox placement test. If the status\
        \ is <code>IN_PROGRESS</code>, then the predictive inbox placement test is\n\
        \            currently running. Predictive inbox placement tests are usually\
        \ complete within 24 hours of creating the test.\n            If the status\
        \ is <code>COMPLETE</code>, then the test is finished, and you can use the\n\
        \                <code>GetDeliverabilityTestReport</code> operation to view\
        \ the results of the\n            test.</p>"
    DeliverabilityTestSubject:
      type: string
    DeliveryOptions:
      type: object
      properties:
        TlsPolicy:
          allOf:
          - $ref: '#/components/schemas/TlsPolicy'
          description: Specifies whether messages that use the configuration set are
            required to use Transport Layer Security (TLS). If the value is `Require`,
            messages are only delivered if a TLS connection can be established. If
            the value is `Optional`, messages can be delivered in plain text if a
            TLS connection can't be established.
        SendingPoolName:
          allOf:
          - $ref: '#/components/schemas/PoolName'
          description: The name of the dedicated IP pool that you want to associate
            with the configuration set.
      description: Used to associate a configuration set with a dedicated IP pool.
    Destination:
      type: object
      properties:
        ToAddresses:
          allOf:
          - $ref: '#/components/schemas/EmailAddressList'
          description: An array that contains the email addresses of the "To" recipients
            for the email.
        CcAddresses:
          allOf:
          - $ref: '#/components/schemas/EmailAddressList'
          description: An array that contains the email addresses of the "CC" (carbon
            copy) recipients for the email.
        BccAddresses:
          allOf:
          - $ref: '#/components/schemas/EmailAddressList'
          description: An array that contains the email addresses of the "BCC" (blind
            carbon copy) recipients for the email.
      description: An object that describes the recipients for an email.
    DimensionName:
      type: string
    DimensionValueSource:
      type: string
      enum:
      - MESSAGE_TAG
      - EMAIL_HEADER
      - LINK_TAG
      description: "<p>The location where Amazon Pinpoint finds the value of a dimension\
        \ to publish to Amazon CloudWatch. If you\n            want Amazon Pinpoint\
        \ to use the message tags that you specify using an X-SES-MESSAGE-TAGS header\n\
        \            or a parameter to the SendEmail/SendRawEmail API, choose <code>messageTag</code>.\
        \ If you\n            want Amazon Pinpoint to use your own email headers,\
        \ choose <code>emailHeader</code>. If you want\n            Amazon Pinpoint\
        \ to use link tags, choose <code>linkTags</code>.</p>"
    DkimAttributes:
      type: object
      properties:
        SigningEnabled:
          allOf:
          - $ref: '#/components/schemas/Enabled'
          description: If the value is `true`, then the messages that Amazon Pinpoint
            sends from the identity are DKIM-signed. If the value is `false`, then
            the messages that Amazon Pinpoint sends from the identity aren't DKIM-signed.
        Status:
          allOf:
          - $ref: '#/components/schemas/DkimStatus'
          description: "Describes whether or not Amazon Pinpoint has successfully\
            \ located the DKIM records in the DNS records for the domain. The status\
            \ can be one of the following:\n\n  * `PENDING` – Amazon Pinpoint hasn't\
            \ yet located the DKIM records in the DNS configuration for the domain,\
            \ but will continue to attempt to locate them.\n\n  * `SUCCESS` – Amazon\
            \ Pinpoint located the DKIM records in the DNS configuration for the domain\
            \ and determined that they're correct. Amazon Pinpoint can now send DKIM-signed\
            \ email from the identity.\n\n  * `FAILED` – Amazon Pinpoint was unable\
            \ to locate the DKIM records in the DNS settings for the domain, and won't\
            \ continue to search for them.\n\n  * `TEMPORARY_FAILURE` – A temporary\
            \ issue occurred, which prevented Amazon Pinpoint from determining the\
            \ DKIM status for the domain.\n\n  * `NOT_STARTED` – Amazon Pinpoint hasn't\
            \ yet started searching for the DKIM records in the DKIM records for the\
            \ domain."
        Tokens:
          allOf:
          - $ref: '#/components/schemas/DnsTokenList'
          description: A set of unique strings that you use to create a set of CNAME
            records that you add to the DNS configuration for your domain. When Amazon
            Pinpoint detects these records in the DNS configuration for your domain,
            the DKIM authentication process is complete. Amazon Pinpoint usually detects
            these records within about 72 hours of adding them to the DNS configuration
            for your domain.
      description: An object that contains information about the DKIM configuration
        for an email identity.
    DkimStatus:
      type: string
      enum:
      - PENDING
      - SUCCESS
      - FAILED
      - TEMPORARY_FAILURE
      - NOT_STARTED
      description: "<p>The DKIM authentication status of the identity. The status\
        \ can be one of the\n            following:</p>\n        <ul>\n          \
        \  <li>\n                <p>\n                  <code>PENDING</code> – The\
        \ DKIM verification process was initiated, and\n                    Amazon\
        \ Pinpoint is still waiting for the required CNAME records to appear in the\
        \ DNS\n                    configuration for the domain.</p>\n           \
        \ </li>\n            <li>\n                <p>\n                  <code>SUCCESS</code>\
        \ – The DKIM authentication process completed\n                    successfully.</p>\n\
        \            </li>\n            <li>\n                <p>\n              \
        \    <code>FAILED</code> – The DKIM authentication process failed. This can\n\
        \                    happen when Amazon Pinpoint fails to find the required\
        \ CNAME records in the DNS\n                    configuration of the domain.</p>\n\
        \            </li>\n            <li>\n                <p>\n              \
        \    <code>TEMPORARY_FAILURE</code> – A temporary issue is preventing Amazon\
        \ Pinpoint\n                    from determining the DKIM authentication status\
        \ of the domain.</p>\n            </li>\n            <li>\n              \
        \  <p>\n                  <code>NOT_STARTED</code> – The DKIM verification\
        \ process hasn't been\n                    initiated for the domain.</p>\n\
        \            </li>\n         </ul>"
    DnsToken:
      type: string
    DnsTokenList:
      type: array
      items:
        $ref: '#/components/schemas/DnsToken'
    Domain:
      type: string
    DomainDeliverabilityCampaign:
      type: object
      properties:
        CampaignId:
          allOf:
          - $ref: '#/components/schemas/CampaignId'
          description: The unique identifier for the campaign. Amazon Pinpoint automatically
            generates and assigns this identifier to a campaign. This value is not
            the same as the campaign identifier that Amazon Pinpoint assigns to campaigns
            that you create and manage by using the Amazon Pinpoint API or the Amazon
            Pinpoint console.
        ImageUrl:
          allOf:
          - $ref: '#/components/schemas/ImageUrl'
          description: The URL of an image that contains a snapshot of the email message
            that was sent.
        Subject:
          allOf:
          - $ref: '#/components/schemas/Subject'
          description: The subject line, or title, of the email message.
        FromAddress:
          allOf:
          - $ref: '#/components/schemas/Identity'
          description: The verified email address that the email message was sent
            from.
        SendingIps:
          allOf:
          - $ref: '#/components/schemas/IpList'
          description: The IP addresses that were used to send the email message.
        FirstSeenDateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The first time, in Unix time format, when the email message
            was delivered to any recipient's inbox. This value can help you determine
            how long it took for a campaign to deliver an email message.
        LastSeenDateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The last time, in Unix time format, when the email message
            was delivered to any recipient's inbox. This value can help you determine
            how long it took for a campaign to deliver an email message.
        InboxCount:
          allOf:
          - $ref: '#/components/schemas/Volume'
          description: The number of email messages that were delivered to recipients’
            inboxes.
        SpamCount:
          allOf:
          - $ref: '#/components/schemas/Volume'
          description: The number of email messages that were delivered to recipients'
            spam or junk mail folders.
        ReadRate:
          allOf:
          - $ref: '#/components/schemas/Percentage'
          description: The percentage of email messages that were opened by recipients.
            Due to technical limitations, this value only includes recipients who
            opened the message by using an email client that supports images.
        DeleteRate:
          allOf:
          - $ref: '#/components/schemas/Percentage'
          description: The percentage of email messages that were deleted by recipients,
            without being opened first. Due to technical limitations, this value only
            includes recipients who opened the message by using an email client that
            supports images.
        ReadDeleteRate:
          allOf:
          - $ref: '#/components/schemas/Percentage'
          description: The percentage of email messages that were opened and then
            deleted by recipients. Due to technical limitations, this value only includes
            recipients who opened the message by using an email client that supports
            images.
        ProjectedVolume:
          allOf:
          - $ref: '#/components/schemas/Volume'
          description: The projected number of recipients that the email message was
            sent to.
        Esps:
          allOf:
          - $ref: '#/components/schemas/Esps'
          description: The major email providers who handled the email message.
      description: An object that contains the deliverability data for a specific
        campaign. This data is available for a campaign only if the campaign sent
        email by using a domain that the Deliverability dashboard is enabled for (`PutDeliverabilityDashboardOption`
        operation).
    DomainDeliverabilityCampaignList:
      type: array
      items:
        $ref: '#/components/schemas/DomainDeliverabilityCampaign'
      description: <p></p>
    DomainDeliverabilityTrackingOption:
      type: object
      properties:
        Domain:
          allOf:
          - $ref: '#/components/schemas/Domain'
          description: A verified domain that’s associated with your AWS account and
            currently has an active Deliverability dashboard subscription.
        SubscriptionStartDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date, in Unix time format, when you enabled the Deliverability
            dashboard for the domain.
        InboxPlacementTrackingOption:
          allOf:
          - $ref: '#/components/schemas/InboxPlacementTrackingOption'
          description: An object that contains information about the inbox placement
            data settings for the domain.
      description: An object that contains information about the Deliverability dashboard
        subscription for a verified domain that you use to send email and currently
        has an active Deliverability dashboard subscription. If a Deliverability dashboard
        subscription is active for a domain, you gain access to reputation, inbox
        placement, and other metrics for the domain.
    DomainDeliverabilityTrackingOptions:
      type: array
      items:
        $ref: '#/components/schemas/DomainDeliverabilityTrackingOption'
      description: "<p>An object that contains information about the Deliverability\
        \ dashboard subscription for a\n            verified domain that you use to\
        \ send email and currently has an active Deliverability dashboard\n      \
        \      subscription. If a Deliverability dashboard subscription is active\
        \ for a domain, you gain access\n            to reputation, inbox placement,\
        \ and other metrics for the domain.</p>"
    DomainIspPlacement:
      type: object
      properties:
        IspName:
          allOf:
          - $ref: '#/components/schemas/IspName'
          description: The name of the email provider that the inbox placement data
            applies to.
        InboxRawCount:
          allOf:
          - $ref: '#/components/schemas/Volume'
          description: The total number of messages that were sent from the selected
            domain to the specified email provider that arrived in recipients' inboxes.
        SpamRawCount:
          allOf:
          - $ref: '#/components/schemas/Volume'
          description: The total number of messages that were sent from the selected
            domain to the specified email provider that arrived in recipients' spam
            or junk mail folders.
        InboxPercentage:
          allOf:
          - $ref: '#/components/schemas/Percentage'
          description: The percentage of messages that were sent from the selected
            domain to the specified email provider that arrived in recipients' inboxes.
        SpamPercentage:
          allOf:
          - $ref: '#/components/schemas/Percentage'
          description: The percentage of messages that were sent from the selected
            domain to the specified email provider that arrived in recipients' spam
            or junk mail folders.
      description: An object that contains inbox placement data for email sent from
        one of your email domains to a specific email provider.
    DomainIspPlacements:
      type: array
      items:
        $ref: '#/components/schemas/DomainIspPlacement'
    EmailAddress:
      type: string
    EmailAddressList:
      type: array
      items:
        $ref: '#/components/schemas/EmailAddress'
    EmailContent:
      type: object
      properties:
        Simple:
          allOf:
          - $ref: '#/components/schemas/Message'
          description: The simple email message. The message consists of a subject
            and a message body.
        Raw:
          allOf:
          - $ref: '#/components/schemas/RawMessage'
          description: "The raw email message. The message has to meet the following\
            \ criteria:\n\n  * The message has to contain a header and a body, separated\
            \ by one blank line.\n\n  * All of the required header fields must be\
            \ present in the message.\n\n  * Each part of a multipart MIME message\
            \ must be formatted properly.\n\n  * If you include attachments, they\
            \ must be in a file format that Amazon Pinpoint supports. \n\n  * The\
            \ entire message must be Base64 encoded.\n\n  * If any of the MIME parts\
            \ in your message contain content that is outside of the 7-bit ASCII character\
            \ range, you should encode that content to ensure that recipients' email\
            \ clients render the message properly.\n\n  * The length of any single\
            \ line of text in the message can't exceed 1,000 characters. This restriction\
            \ is defined in [RFC 5321](https://tools.ietf.org/html/rfc5321)."
        Template:
          allOf:
          - $ref: '#/components/schemas/Template'
          description: The template to use for the email message.
      description: An object that defines the entire content of the email, including
        the message headers and the body content. You can create a simple email message,
        in which you specify the subject and the text and HTML versions of the message
        body. You can also create raw messages, in which you specify a complete MIME-formatted
        message. Raw messages can include attachments and custom headers.
    Enabled:
      type: boolean
      default: false
    ErrorMessage:
      type: string
    Esp:
      type: string
    Esps:
      type: array
      items:
        $ref: '#/components/schemas/Esp'
    EventDestination:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/EventDestinationName'
          description: A name that identifies the event destination.
        Enabled:
          allOf:
          - $ref: '#/components/schemas/Enabled'
          description: 'If `true`, the event destination is enabled. When the event
            destination is enabled, the specified event types are sent to the destinations
            in this `EventDestinationDefinition`.


            If `false`, the event destination is disabled. When the event destination
            is disabled, events aren''t sent to the specified destinations.'
        MatchingEventTypes:
          allOf:
          - $ref: '#/components/schemas/EventTypes'
          description: The types of events that Amazon Pinpoint sends to the specified
            event destinations.
        KinesisFirehoseDestination:
          allOf:
          - $ref: '#/components/schemas/KinesisFirehoseDestination'
          description: An object that defines an Amazon Kinesis Data Firehose destination
            for email events. You can use Amazon Kinesis Data Firehose to stream data
            to other services, such as Amazon S3 and Amazon Redshift.
        CloudWatchDestination:
          allOf:
          - $ref: '#/components/schemas/CloudWatchDestination'
          description: An object that defines an Amazon CloudWatch destination for
            email events. You can use Amazon CloudWatch to monitor and gain insights
            on your email sending metrics.
        SnsDestination:
          allOf:
          - $ref: '#/components/schemas/SnsDestination'
          description: An object that defines an Amazon SNS destination for email
            events. You can use Amazon SNS to send notification when certain email
            events occur.
        PinpointDestination:
          allOf:
          - $ref: '#/components/schemas/PinpointDestination'
          description: An object that defines a Amazon Pinpoint destination for email
            events. You can use Amazon Pinpoint events to create attributes in Amazon
            Pinpoint projects. You can use these attributes to create segments for
            your campaigns.
      required:
      - Name
      - MatchingEventTypes
      description: In Amazon Pinpoint, _events_ include message sends, deliveries,
        opens, clicks, bounces, and complaints. _Event destinations_ are places that
        you can send information about these events to. For example, you can send
        event data to Amazon SNS to receive notifications when you receive bounces
        or complaints, or you can use Amazon Kinesis Data Firehose to stream data
        to Amazon S3 for long-term storage.
    EventDestinationDefinition:
      type: object
      properties:
        Enabled:
          allOf:
          - $ref: '#/components/schemas/Enabled'
          description: 'If `true`, the event destination is enabled. When the event
            destination is enabled, the specified event types are sent to the destinations
            in this `EventDestinationDefinition`.


            If `false`, the event destination is disabled. When the event destination
            is disabled, events aren''t sent to the specified destinations.'
        MatchingEventTypes:
          allOf:
          - $ref: '#/components/schemas/EventTypes'
          description: An array that specifies which events Amazon Pinpoint should
            send to the destinations in this `EventDestinationDefinition`.
        KinesisFirehoseDestination:
          allOf:
          - $ref: '#/components/schemas/KinesisFirehoseDestination'
          description: An object that defines an Amazon Kinesis Data Firehose destination
            for email events. You can use Amazon Kinesis Data Firehose to stream data
            to other services, such as Amazon S3 and Amazon Redshift.
        CloudWatchDestination:
          allOf:
          - $ref: '#/components/schemas/CloudWatchDestination'
          description: An object that defines an Amazon CloudWatch destination for
            email events. You can use Amazon CloudWatch to monitor and gain insights
            on your email sending metrics.
        SnsDestination:
          allOf:
          - $ref: '#/components/schemas/SnsDestination'
          description: An object that defines an Amazon SNS destination for email
            events. You can use Amazon SNS to send notification when certain email
            events occur.
        PinpointDestination:
          allOf:
          - $ref: '#/components/schemas/PinpointDestination'
          description: An object that defines a Amazon Pinpoint destination for email
            events. You can use Amazon Pinpoint events to create attributes in Amazon
            Pinpoint projects. You can use these attributes to create segments for
            your campaigns.
      description: An object that defines the event destination. Specifically, it
        defines which services receive events from emails sent using the configuration
        set that the event destination is associated with. Also defines the types
        of events that are sent to the event destination.
    EventDestinationName:
      type: string
    EventDestinations:
      type: array
      items:
        $ref: '#/components/schemas/EventDestination'
    EventType:
      type: string
      enum:
      - SEND
      - REJECT
      - BOUNCE
      - COMPLAINT
      - DELIVERY
      - OPEN
      - CLICK
      - RENDERING_FAILURE
      description: "<p>An email sending event type. For example, email sends, opens,\
        \ and bounces are all\n            email events.</p>"
    EventTypes:
      type: array
      items:
        $ref: '#/components/schemas/EventType'
    GeneralEnforcementStatus:
      type: string
    GetAccountRequest:
      type: object
      properties: {}
      description: A request to obtain information about the email-sending capabilities
        of your Amazon Pinpoint account.
    GetAccountResponse:
      type: object
      properties:
        SendQuota:
          allOf:
          - $ref: '#/components/schemas/SendQuota'
          description: An object that contains information about the per-day and per-second
            sending limits for your Amazon Pinpoint account in the current AWS Region.
        SendingEnabled:
          allOf:
          - $ref: '#/components/schemas/Enabled'
          description: Indicates whether or not email sending is enabled for your
            Amazon Pinpoint account in the current AWS Region.
        DedicatedIpAutoWarmupEnabled:
          allOf:
          - $ref: '#/components/schemas/Enabled'
          description: Indicates whether or not the automatic warm-up feature is enabled
            for dedicated IP addresses that are associated with your account.
        EnforcementStatus:
          allOf:
          - $ref: '#/components/schemas/GeneralEnforcementStatus'
          description: "The reputation status of your Amazon Pinpoint account. The\
            \ status can be one of the following:\n\n  * `HEALTHY` – There are no\
            \ reputation-related issues that currently impact your account.\n\n  *\
            \ `PROBATION` – We've identified some issues with your Amazon Pinpoint\
            \ account. We're placing your account under review while you work on correcting\
            \ these issues.\n\n  * `SHUTDOWN` – Your account's ability to send email\
            \ is currently paused because of an issue with the email sent from your\
            \ account. When you correct the issue, you can contact us and request\
            \ that your account's ability to send email is resumed."
        ProductionAccessEnabled:
          allOf:
          - $ref: '#/components/schemas/Enabled'
          description: 'Indicates whether or not your account has production access
            in the current AWS Region.


            If the value is `false`, then your account is in the _sandbox_. When your
            account is in the sandbox, you can only send email to verified identities.
            Additionally, the maximum number of emails you can send in a 24-hour period
            (your sending quota) is 200, and the maximum number of emails you can
            send per second (your maximum sending rate) is 1.


            If the value is `true`, then your account has production access. When
            your account has production access, you can send email to any address.
            The sending quota and maximum sending rate for your account vary based
            on your specific use case.'
      description: A list of details about the email-sending capabilities of your
        Amazon Pinpoint account in the current AWS Region.
    GetBlacklistReportsRequest:
      type: object
      properties:
        BlacklistItemNames:
          allOf:
          - $ref: '#/components/schemas/BlacklistItemNames'
          description: A list of IP addresses that you want to retrieve blacklist
            information about. You can only specify the dedicated IP addresses that
            you use to send email using Amazon Pinpoint or Amazon SES.
      required:
      - BlacklistItemNames
      description: A request to retrieve a list of the blacklists that your dedicated
        IP addresses appear on.
    GetBlacklistReportsResponse:
      type: object
      properties:
        BlacklistReport:
          allOf:
          - $ref: '#/components/schemas/BlacklistReport'
          description: An object that contains information about a blacklist that
            one of your dedicated IP addresses appears on.
      required:
      - BlacklistReport
      description: An object that contains information about blacklist events.
    GetConfigurationSetEventDestinationsRequest:
      type: object
      properties:
        ConfigurationSetName:
          allOf:
          - $ref: '#/components/schemas/ConfigurationSetName'
          description: The name of the configuration set that contains the event destination.
      required:
      - ConfigurationSetName
      description: A request to obtain information about the event destinations for
        a configuration set.
    GetConfigurationSetEventDestinationsResponse:
      type: object
      properties:
        EventDestinations:
          allOf:
          - $ref: '#/components/schemas/EventDestinations'
          description: An array that includes all of the events destinations that
            have been configured for the configuration set.
      description: Information about an event destination for a configuration set.
    GetConfigurationSetRequest:
      type: object
      properties:
        ConfigurationSetName:
          allOf:
          - $ref: '#/components/schemas/ConfigurationSetName'
          description: The name of the configuration set that you want to obtain more
            information about.
      required:
      - ConfigurationSetName
      description: A request to obtain information about a configuration set.
    GetConfigurationSetResponse:
      type: object
      properties:
        ConfigurationSetName:
          allOf:
          - $ref: '#/components/schemas/ConfigurationSetName'
          description: The name of the configuration set.
        TrackingOptions:
          allOf:
          - $ref: '#/components/schemas/TrackingOptions'
          description: An object that defines the open and click tracking options
            for emails that you send using the configuration set.
        DeliveryOptions:
          allOf:
          - $ref: '#/components/schemas/DeliveryOptions'
          description: An object that defines the dedicated IP pool that is used to
            send emails that you send using the configuration set.
        ReputationOptions:
          allOf:
          - $ref: '#/components/schemas/ReputationOptions'
          description: An object that defines whether or not Amazon Pinpoint collects
            reputation metrics for the emails that you send that use the configuration
            set.
        SendingOptions:
          allOf:
          - $ref: '#/components/schemas/SendingOptions'
          description: An object that defines whether or not Amazon Pinpoint can send
            email that you send using the configuration set.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: An array of objects that define the tags (keys and values)
            that are associated with the configuration set.
      description: Information about a configuration set.
    GetDedicatedIpRequest:
      type: object
      properties:
        Ip:
          allOf:
          - $ref: '#/components/schemas/Ip'
          description: The IP address that you want to obtain more information about.
            The value you specify has to be a dedicated IP address that's assocaited
            with your Amazon Pinpoint account.
      required:
      - Ip
      description: A request to obtain more information about a dedicated IP address.
    GetDedicatedIpResponse:
      type: object
      properties:
        DedicatedIp:
          allOf:
          - $ref: '#/components/schemas/DedicatedIp'
          description: An object that contains information about a dedicated IP address.
      description: Information about a dedicated IP address.
    GetDedicatedIpsRequest:
      type: object
      properties:
        PoolName:
          allOf:
          - $ref: '#/components/schemas/PoolName'
          description: The name of the IP pool that the dedicated IP address is associated
            with.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A token returned from a previous call to `GetDedicatedIps`
            to indicate the position of the dedicated IP pool in the list of IP pools.
        PageSize:
          allOf:
          - $ref: '#/components/schemas/MaxItems'
          description: The number of results to show in a single call to `GetDedicatedIpsRequest`.
            If the number of results is larger than the number you specified in this
            parameter, then the response includes a `NextToken` element, which you
            can use to obtain additional results.
      description: A request to obtain more information about dedicated IP pools.
    GetDedicatedIpsResponse:
      type: object
      properties:
        DedicatedIps:
          allOf:
          - $ref: '#/components/schemas/DedicatedIpList'
          description: A list of dedicated IP addresses that are reserved for use
            by your Amazon Pinpoint account.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A token that indicates that there are additional dedicated
            IP addresses to list. To view additional addresses, issue another request
            to `GetDedicatedIps`, passing this token in the `NextToken` parameter.
      description: Information about the dedicated IP addresses that are associated
        with your Amazon Pinpoint account.
    GetDeliverabilityDashboardOptionsRequest:
      type: object
      properties: {}
      description: 'Retrieve information about the status of the Deliverability dashboard
        for your Amazon Pinpoint account. When the Deliverability dashboard is enabled,
        you gain access to reputation, deliverability, and other metrics for the domains
        that you use to send email using Amazon Pinpoint. You also gain the ability
        to perform predictive inbox placement tests.


        When you use the Deliverability dashboard, you pay a monthly subscription
        charge, in addition to any other fees that you accrue by using Amazon Pinpoint.
        For more information about the features and cost of a Deliverability dashboard
        subscription, see [Amazon Pinpoint Pricing](http://aws.amazon.com/pinpoint/pricing/).'
    GetDeliverabilityDashboardOptionsResponse:
      type: object
      properties:
        DashboardEnabled:
          allOf:
          - $ref: '#/components/schemas/Enabled'
          description: Specifies whether the Deliverability dashboard is enabled for
            your Amazon Pinpoint account. If this value is `true`, the dashboard is
            enabled.
        SubscriptionExpiryDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date, in Unix time format, when your current subscription
            to the Deliverability dashboard is scheduled to expire, if your subscription
            is scheduled to expire at the end of the current calendar month. This
            value is null if you have an active subscription that isn’t due to expire
            at the end of the month.
        AccountStatus:
          allOf:
          - $ref: '#/components/schemas/DeliverabilityDashboardAccountStatus'
          description: The current status of your Deliverability dashboard subscription.
            If this value is `PENDING_EXPIRATION`, your subscription is scheduled
            to expire at the end of the current calendar month.
        ActiveSubscribedDomains:
          allOf:
          - $ref: '#/components/schemas/DomainDeliverabilityTrackingOptions'
          description: An array of objects, one for each verified domain that you
            use to send email and currently has an active Deliverability dashboard
            subscription that isn’t scheduled to expire at the end of the current
            calendar month.
        PendingExpirationSubscribedDomains:
          allOf:
          - $ref: '#/components/schemas/DomainDeliverabilityTrackingOptions'
          description: An array of objects, one for each verified domain that you
            use to send email and currently has an active Deliverability dashboard
            subscription that's scheduled to expire at the end of the current calendar
            month.
      required:
      - DashboardEnabled
      description: An object that shows the status of the Deliverability dashboard
        for your Amazon Pinpoint account.
    GetDeliverabilityTestReportRequest:
      type: object
      properties:
        ReportId:
          allOf:
          - $ref: '#/components/schemas/ReportId'
          description: A unique string that identifies the predictive inbox placement
            test.
      required:
      - ReportId
      description: A request to retrieve the results of a predictive inbox placement
        test.
    GetDeliverabilityTestReportResponse:
      type: object
      properties:
        DeliverabilityTestReport:
          allOf:
          - $ref: '#/components/schemas/DeliverabilityTestReport'
          description: An object that contains the results of the predictive inbox
            placement test.
        OverallPlacement:
          allOf:
          - $ref: '#/components/schemas/PlacementStatistics'
          description: An object that specifies how many test messages that were sent
            during the predictive inbox placement test were delivered to recipients'
            inboxes, how many were sent to recipients' spam folders, and how many
            weren't delivered.
        IspPlacements:
          allOf:
          - $ref: '#/components/schemas/IspPlacements'
          description: An object that describes how the test email was handled by
            several email providers, including Gmail, Hotmail, Yahoo, AOL, and others.
        Message:
          allOf:
          - $ref: '#/components/schemas/MessageContent'
          description: An object that contains the message that you sent when you
            performed this predictive inbox placement test.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: An array of objects that define the tags (keys and values)
            that are associated with the predictive inbox placement test.
      required:
      - DeliverabilityTestReport
      - OverallPlacement
      - IspPlacements
      description: The results of the predictive inbox placement test.
    GetDomainDeliverabilityCampaignRequest:
      type: object
      properties:
        CampaignId:
          allOf:
          - $ref: '#/components/schemas/CampaignId'
          description: The unique identifier for the campaign. Amazon Pinpoint automatically
            generates and assigns this identifier to a campaign. This value is not
            the same as the campaign identifier that Amazon Pinpoint assigns to campaigns
            that you create and manage by using the Amazon Pinpoint API or the Amazon
            Pinpoint console.
      required:
      - CampaignId
      description: Retrieve all the deliverability data for a specific campaign. This
        data is available for a campaign only if the campaign sent email by using
        a domain that the Deliverability dashboard is enabled for (`PutDeliverabilityDashboardOption`
        operation).
    GetDomainDeliverabilityCampaignResponse:
      type: object
      properties:
        DomainDeliverabilityCampaign:
          allOf:
          - $ref: '#/components/schemas/DomainDeliverabilityCampaign'
          description: An object that contains the deliverability data for the campaign.
      required:
      - DomainDeliverabilityCampaign
      description: An object that contains all the deliverability data for a specific
        campaign. This data is available for a campaign only if the campaign sent
        email by using a domain that the Deliverability dashboard is enabled for (`PutDeliverabilityDashboardOption`
        operation).
    GetDomainStatisticsReportRequest:
      type: object
      properties:
        Domain:
          allOf:
          - $ref: '#/components/schemas/Identity'
          description: The domain that you want to obtain deliverability metrics for.
        StartDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The first day (in Unix time) that you want to obtain domain
            deliverability metrics for.
        EndDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The last day (in Unix time) that you want to obtain domain
            deliverability metrics for. The `EndDate` that you specify has to be less
            than or equal to 30 days after the `StartDate`.
      required:
      - Domain
      - StartDate
      - EndDate
      description: A request to obtain deliverability metrics for a domain.
    GetDomainStatisticsReportResponse:
      type: object
      properties:
        OverallVolume:
          allOf:
          - $ref: '#/components/schemas/OverallVolume'
          description: An object that contains deliverability metrics for the domain
            that you specified. The data in this object is a summary of all of the
            data that was collected from the `StartDate` to the `EndDate`.
        DailyVolumes:
          allOf:
          - $ref: '#/components/schemas/DailyVolumes'
          description: An object that contains deliverability metrics for the domain
            that you specified. This object contains data for each day, starting on
            the `StartDate` and ending on the `EndDate`.
      required:
      - OverallVolume
      - DailyVolumes
      description: An object that includes statistics that are related to the domain
        that you specified.
    GetEmailIdentityRequest:
      type: object
      properties:
        EmailIdentity:
          allOf:
          - $ref: '#/components/schemas/Identity'
          description: The email identity that you want to retrieve details for.
      required:
      - EmailIdentity
      description: A request to return details about an email identity.
    GetEmailIdentityResponse:
      type: object
      properties:
        IdentityType:
          allOf:
          - $ref: '#/components/schemas/IdentityType'
          description: The email identity type.
        FeedbackForwardingStatus:
          allOf:
          - $ref: '#/components/schemas/Enabled'
          description: 'The feedback forwarding configuration for the identity.


            If the value is `true`, Amazon Pinpoint sends you email notifications
            when bounce or complaint events occur. Amazon Pinpoint sends this notification
            to the address that you specified in the Return-Path header of the original
            email.


            When you set this value to `false`, Amazon Pinpoint sends notifications
            through other mechanisms, such as by notifying an Amazon SNS topic or
            another event destination. You''re required to have a method of tracking
            bounces and complaints. If you haven''t set up another mechanism for receiving
            bounce or complaint notifications, Amazon Pinpoint sends an email notification
            when these events occur (even if this setting is disabled).'
        VerifiedForSendingStatus:
          allOf:
          - $ref: '#/components/schemas/Enabled'
          description: Specifies whether or not the identity is verified. In Amazon
            Pinpoint, you can only send email from verified email addresses or domains.
            For more information about verifying identities, see the [Amazon Pinpoint
            User Guide](https://docs.aws.amazon.com/pinpoint/latest/userguide/channels-email-manage-verify.html).
        DkimAttributes:
          allOf:
          - $ref: '#/components/schemas/DkimAttributes'
          description: An object that contains information about the DKIM attributes
            for the identity. This object includes the tokens that you use to create
            the CNAME records that are required to complete the DKIM verification
            process.
        MailFromAttributes:
          allOf:
          - $ref: '#/components/schemas/MailFromAttributes'
          description: An object that contains information about the Mail-From attributes
            for the email identity.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: An array of objects that define the tags (keys and values)
            that are associated with the email identity.
      description: Details about an email identity.
    Identity:
      type: string
    IdentityInfo:
      type: object
      properties:
        IdentityType:
          allOf:
          - $ref: '#/components/schemas/IdentityType'
          description: "The email identity type. The identity type can be one of the\
            \ following:\n\n  * `EMAIL_ADDRESS` – The identity is an email address.\n\
            \n  * `DOMAIN` – The identity is a domain.\n\n  * `MANAGED_DOMAIN` – The\
            \ identity is a domain that is managed by AWS."
        IdentityName:
          allOf:
          - $ref: '#/components/schemas/Identity'
          description: The address or domain of the identity.
        SendingEnabled:
          allOf:
          - $ref: '#/components/schemas/Enabled'
          description: 'Indicates whether or not you can send email from the identity.


            In Amazon Pinpoint, an identity is an email address or domain that you
            send email from. Before you can send email from an identity, you have
            to demostrate that you own the identity, and that you authorize Amazon
            Pinpoint to send email from that identity.'
      description: Information about an email identity.
    IdentityInfoList:
      type: array
      items:
        $ref: '#/components/schemas/IdentityInfo'
    IdentityType:
      type: string
      enum:
      - EMAIL_ADDRESS
      - DOMAIN
      - MANAGED_DOMAIN
      description: "<p>The email identity type. The identity type can be one of the\
        \ following:</p>\n        <ul>\n            <li>\n                <p>\n  \
        \                <code>EMAIL_ADDRESS</code> – The identity is an email address.</p>\n\
        \            </li>\n            <li>\n                <p>\n              \
        \    <code>DOMAIN</code> – The identity is a domain.</p>\n            </li>\n\
        \         </ul>"
    ImageUrl:
      type: string
    InboxPlacementTrackingOption:
      type: object
      properties:
        Global:
          allOf:
          - $ref: '#/components/schemas/Enabled'
          description: Specifies whether inbox placement data is being tracked for
            the domain.
        TrackedIsps:
          allOf:
          - $ref: '#/components/schemas/IspNameList'
          description: An array of strings, one for each major email provider that
            the inbox placement data applies to.
      description: An object that contains information about the inbox placement data
        settings for a verified domain that’s associated with your AWS account. This
        data is available only if you enabled the Deliverability dashboard for the
        domain (`PutDeliverabilityDashboardOption` operation).
    Ip:
      type: string
    IpList:
      type: array
      items:
        $ref: '#/components/schemas/Ip'
    IspName:
      type: string
    IspNameList:
      type: array
      items:
        $ref: '#/components/schemas/IspName'
    IspPlacement:
      type: object
      properties:
        IspName:
          allOf:
          - $ref: '#/components/schemas/IspName'
          description: The name of the email provider that the inbox placement data
            applies to.
        PlacementStatistics:
          allOf:
          - $ref: '#/components/schemas/PlacementStatistics'
          description: An object that contains inbox placement metrics for a specific
            email provider.
      description: An object that describes how email sent during the predictive inbox
        placement test was handled by a certain email provider.
    IspPlacements:
      type: array
      items:
        $ref: '#/components/schemas/IspPlacement'
    KinesisFirehoseDestination:
      type: object
      properties:
        IamRoleArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          description: The Amazon Resource Name (ARN) of the IAM role that Amazon
            Pinpoint uses when sending email events to the Amazon Kinesis Data Firehose
            stream.
        DeliveryStreamArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          description: The Amazon Resource Name (ARN) of the Amazon Kinesis Data Firehose
            stream that Amazon Pinpoint sends email events to.
      required:
      - IamRoleArn
      - DeliveryStreamArn
      description: An object that defines an Amazon Kinesis Data Firehose destination
        for email events. You can use Amazon Kinesis Data Firehose to stream data
        to other services, such as Amazon S3 and Amazon Redshift.
    LastFreshStart:
      type: string
      format: date-time
      description: "<p>The date and time (in Unix time) when the reputation metrics\
        \ were last given a fresh\n            start. When your account is given a\
        \ fresh start, your reputation metrics are calculated\n            starting\
        \ from the date of the fresh start.</p>"
    LimitExceededException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: There are too many instances of the specified resource type.
    ListConfigurationSetsRequest:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A token returned from a previous call to `ListConfigurationSets`
            to indicate the position in the list of configuration sets.
        PageSize:
          allOf:
          - $ref: '#/components/schemas/MaxItems'
          description: The number of results to show in a single call to `ListConfigurationSets`.
            If the number of results is larger than the number you specified in this
            parameter, then the response includes a `NextToken` element, which you
            can use to obtain additional results.
      description: A request to obtain a list of configuration sets for your Amazon
        Pinpoint account in the current AWS Region.
    ListConfigurationSetsResponse:
      type: object
      properties:
        ConfigurationSets:
          allOf:
          - $ref: '#/components/schemas/ConfigurationSetNameList'
          description: An array that contains all of the configuration sets in your
            Amazon Pinpoint account in the current AWS Region.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A token that indicates that there are additional configuration
            sets to list. To view additional configuration sets, issue another request
            to `ListConfigurationSets`, and pass this token in the `NextToken` parameter.
      description: A list of configuration sets in your Amazon Pinpoint account in
        the current AWS Region.
    ListDedicatedIpPoolsRequest:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A token returned from a previous call to `ListDedicatedIpPools`
            to indicate the position in the list of dedicated IP pools.
        PageSize:
          allOf:
          - $ref: '#/components/schemas/MaxItems'
          description: The number of results to show in a single call to `ListDedicatedIpPools`.
            If the number of results is larger than the number you specified in this
            parameter, then the response includes a `NextToken` element, which you
            can use to obtain additional results.
      description: A request to obtain a list of dedicated IP pools.
    ListDedicatedIpPoolsResponse:
      type: object
      properties:
        DedicatedIpPools:
          allOf:
          - $ref: '#/components/schemas/ListOfDedicatedIpPools'
          description: A list of all of the dedicated IP pools that are associated
            with your Amazon Pinpoint account.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A token that indicates that there are additional IP pools to
            list. To view additional IP pools, issue another request to `ListDedicatedIpPools`,
            passing this token in the `NextToken` parameter.
      description: A list of dedicated IP pools.
    ListDeliverabilityTestReportsRequest:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A token returned from a previous call to `ListDeliverabilityTestReports`
            to indicate the position in the list of predictive inbox placement tests.
        PageSize:
          allOf:
          - $ref: '#/components/schemas/MaxItems'
          description: 'The number of results to show in a single call to `ListDeliverabilityTestReports`.
            If the number of results is larger than the number you specified in this
            parameter, then the response includes a `NextToken` element, which you
            can use to obtain additional results.


            The value you specify has to be at least 0, and can be no more than 1000.'
      description: A request to list all of the predictive inbox placement tests that
        you've performed.
    ListDeliverabilityTestReportsResponse:
      type: object
      properties:
        DeliverabilityTestReports:
          allOf:
          - $ref: '#/components/schemas/DeliverabilityTestReports'
          description: An object that contains a lists of predictive inbox placement
            tests that you've performed.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A token that indicates that there are additional predictive
            inbox placement tests to list. To view additional predictive inbox placement
            tests, issue another request to `ListDeliverabilityTestReports`, and pass
            this token in the `NextToken` parameter.
      required:
      - DeliverabilityTestReports
      description: A list of the predictive inbox placement test reports that are
        available for your account, regardless of whether or not those tests are complete.
    ListDomainDeliverabilityCampaignsRequest:
      type: object
      properties:
        StartDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The first day, in Unix time format, that you want to obtain
            deliverability data for.
        EndDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The last day, in Unix time format, that you want to obtain
            deliverability data for. This value has to be less than or equal to 30
            days after the value of the `StartDate` parameter.
        SubscribedDomain:
          allOf:
          - $ref: '#/components/schemas/Domain'
          description: The domain to obtain deliverability data for.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A token that’s returned from a previous call to the `ListDomainDeliverabilityCampaigns`
            operation. This token indicates the position of a campaign in the list
            of campaigns.
        PageSize:
          allOf:
          - $ref: '#/components/schemas/MaxItems'
          description: The maximum number of results to include in response to a single
            call to the `ListDomainDeliverabilityCampaigns` operation. If the number
            of results is larger than the number that you specify in this parameter,
            the response includes a `NextToken` element, which you can use to obtain
            additional results.
      required:
      - StartDate
      - EndDate
      - SubscribedDomain
      description: Retrieve deliverability data for all the campaigns that used a
        specific domain to send email during a specified time range. This data is
        available for a domain only if you enabled the Deliverability dashboard (`PutDeliverabilityDashboardOption`
        operation) for the domain.
    ListDomainDeliverabilityCampaignsResponse:
      type: object
      properties:
        DomainDeliverabilityCampaigns:
          allOf:
          - $ref: '#/components/schemas/DomainDeliverabilityCampaignList'
          description: An array of responses, one for each campaign that used the
            domain to send email during the specified time range.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A token that’s returned from a previous call to the `ListDomainDeliverabilityCampaigns`
            operation. This token indicates the position of the campaign in the list
            of campaigns.
      required:
      - DomainDeliverabilityCampaigns
      description: An array of objects that provide deliverability data for all the
        campaigns that used a specific domain to send email during a specified time
        range. This data is available for a domain only if you enabled the Deliverability
        dashboard (`PutDeliverabilityDashboardOption` operation) for the domain.
    ListEmailIdentitiesRequest:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A token returned from a previous call to `ListEmailIdentities`
            to indicate the position in the list of identities.
        PageSize:
          allOf:
          - $ref: '#/components/schemas/MaxItems'
          description: 'The number of results to show in a single call to `ListEmailIdentities`.
            If the number of results is larger than the number you specified in this
            parameter, then the response includes a `NextToken` element, which you
            can use to obtain additional results.


            The value you specify has to be at least 0, and can be no more than 1000.'
      description: A request to list all of the email identities associated with your
        Amazon Pinpoint account. This list includes identities that you've already
        verified, identities that are unverified, and identities that were verified
        in the past, but are no longer verified.
    ListEmailIdentitiesResponse:
      type: object
      properties:
        EmailIdentities:
          allOf:
          - $ref: '#/components/schemas/IdentityInfoList'
          description: An array that includes all of the identities associated with
            your Amazon Pinpoint account.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A token that indicates that there are additional configuration
            sets to list. To view additional configuration sets, issue another request
            to `ListEmailIdentities`, and pass this token in the `NextToken` parameter.
      description: A list of all of the identities that you've attempted to verify
        for use with Amazon Pinpoint, regardless of whether or not those identities
        were successfully verified.
    ListOfDedicatedIpPools:
      type: array
      items:
        $ref: '#/components/schemas/PoolName'
      description: <p>A list of dedicated IP pools that are associated with your Amazon
        Pinpoint account.</p>
    ListTagsForResourceRequest:
      type: object
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          description: The Amazon Resource Name (ARN) of the resource that you want
            to retrieve tag information for.
      required:
      - ResourceArn
    ListTagsForResourceResponse:
      type: object
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: An array that lists all the tags that are associated with the
            resource. Each tag consists of a required tag key (`Key`) and an associated
            tag value (`Value`)
      required:
      - Tags
    MailFromAttributes:
      type: object
      properties:
        MailFromDomain:
          allOf:
          - $ref: '#/components/schemas/MailFromDomainName'
          description: The name of a domain that an email identity uses as a custom
            MAIL FROM domain.
        MailFromDomainStatus:
          allOf:
          - $ref: '#/components/schemas/MailFromDomainStatus'
          description: "The status of the MAIL FROM domain. This status can have the\
            \ following values:\n\n  * `PENDING` – Amazon Pinpoint hasn't started\
            \ searching for the MX record yet.\n\n  * `SUCCESS` – Amazon Pinpoint\
            \ detected the required MX record for the MAIL FROM domain.\n\n  * `FAILED`\
            \ – Amazon Pinpoint can't find the required MX record, or the record no\
            \ longer exists.\n\n  * `TEMPORARY_FAILURE` – A temporary issue occurred,\
            \ which prevented Amazon Pinpoint from determining the status of the MAIL\
            \ FROM domain."
        BehaviorOnMxFailure:
          allOf:
          - $ref: '#/components/schemas/BehaviorOnMxFailure'
          description: 'The action that Amazon Pinpoint to takes if it can''t read
            the required MX record for a custom MAIL FROM domain. When you set this
            value to `UseDefaultValue`, Amazon Pinpoint uses _amazonses.com_ as the
            MAIL FROM domain. When you set this value to `RejectMessage`, Amazon Pinpoint
            returns a `MailFromDomainNotVerified` error, and doesn''t attempt to deliver
            the email.


            These behaviors are taken when the custom MAIL FROM domain configuration
            is in the `Pending`, `Failed`, and `TemporaryFailure` states.'
      required:
      - MailFromDomain
      - MailFromDomainStatus
      - BehaviorOnMxFailure
      description: A list of attributes that are associated with a MAIL FROM domain.
    MailFromDomainName:
      type: string
    MailFromDomainNotVerifiedException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: The message can't be sent because the sending domain isn't verified.
    MailFromDomainStatus:
      type: string
      enum:
      - PENDING
      - SUCCESS
      - FAILED
      - TEMPORARY_FAILURE
      description: "<p>The status of the MAIL FROM domain. This status can have the\
        \ following values:</p>\n        <ul>\n            <li>\n                <p>\n\
        \                  <code>PENDING</code> – Amazon Pinpoint hasn't started searching\
        \ for the MX record\n                    yet.</p>\n            </li>\n   \
        \         <li>\n                <p>\n                  <code>SUCCESS</code>\
        \ – Amazon Pinpoint detected the required MX record for the\n            \
        \        MAIL FROM domain.</p>\n            </li>\n            <li>\n    \
        \            <p>\n                  <code>FAILED</code> – Amazon Pinpoint\
        \ can't find the required MX record, or the\n                    record no\
        \ longer exists.</p>\n            </li>\n            <li>\n              \
        \  <p>\n                  <code>TEMPORARY_FAILURE</code> – A temporary issue\
        \ occurred, which\n                    prevented Amazon Pinpoint from determining\
        \ the status of the MAIL FROM domain.</p>\n            </li>\n         </ul>"
    Max24HourSend:
      type: number
      format: double
      default: 0
    MaxItems:
      type: integer
    MaxSendRate:
      type: number
      format: double
      default: 0
    Message:
      type: object
      properties:
        Subject:
          allOf:
          - $ref: '#/components/schemas/Content'
          description: The subject line of the email. The subject line can only contain
            7-bit ASCII characters. However, you can specify non-ASCII characters
            in the subject line by using encoded-word syntax, as described in [RFC
            2047](https://tools.ietf.org/html/rfc2047).
        Body:
          allOf:
          - $ref: '#/components/schemas/Body'
          description: The body of the message. You can specify an HTML version of
            the message, a text-only version of the message, or both.
      required:
      - Subject
      - Body
      description: Represents the email message that you're sending. The `Message`
        object consists of a subject line and a message body.
    MessageContent:
      type: string
    MessageData:
      type: string
    MessageRejected:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: The message can't be sent because it contains invalid content.
    MessageTag:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/MessageTagName'
          description: "The name of the message tag. The message tag name has to meet\
            \ the following criteria:\n\n  * It can only contain ASCII letters (a–z,\
            \ A–Z), numbers (0–9), underscores (_), or dashes (-).\n\n  * It can contain\
            \ no more than 256 characters."
        Value:
          allOf:
          - $ref: '#/components/schemas/MessageTagValue'
          description: "The value of the message tag. The message tag value has to\
            \ meet the following criteria:\n\n  * It can only contain ASCII letters\
            \ (a–z, A–Z), numbers (0–9), underscores (_), or dashes (-).\n\n  * It\
            \ can contain no more than 256 characters."
      required:
      - Name
      - Value
      description: Contains the name and value of a tag that you apply to an email.
        You can use message tags when you publish email sending events.
    MessageTagList:
      type: array
      items:
        $ref: '#/components/schemas/MessageTag'
      description: <p>A list of message tags.</p>
    MessageTagName:
      type: string
    MessageTagValue:
      type: string
    NextToken:
      type: string
    NotFoundException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: The resource you attempted to access doesn't exist.
    OutboundMessageId:
      type: string
    OverallVolume:
      type: object
      properties:
        VolumeStatistics:
          allOf:
          - $ref: '#/components/schemas/VolumeStatistics'
          description: An object that contains information about the numbers of messages
            that arrived in recipients' inboxes and junk mail folders.
        ReadRatePercent:
          allOf:
          - $ref: '#/components/schemas/Percentage'
          description: The percentage of emails that were sent from the domain that
            were read by their recipients.
        DomainIspPlacements:
          allOf:
          - $ref: '#/components/schemas/DomainIspPlacements'
          description: An object that contains inbox and junk mail placement metrics
            for individual email providers.
      description: An object that contains information about email that was sent from
        the selected domain.
    Percentage:
      type: number
      format: double
      description: <p>An object that contains information about inbox placement percentages.</p>
    Percentage100Wrapper:
      type: integer
    PinpointDestination:
      type: object
      properties:
        ApplicationArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          description: The Amazon Resource Name (ARN) of the Amazon Pinpoint project
            that you want to send email events to.
      description: An object that defines a Amazon Pinpoint destination for email
        events. You can use Amazon Pinpoint events to create attributes in Amazon
        Pinpoint projects. You can use these attributes to create segments for your
        campaigns.
    PlacementStatistics:
      type: object
      properties:
        InboxPercentage:
          allOf:
          - $ref: '#/components/schemas/Percentage'
          description: The percentage of emails that arrived in recipients' inboxes
            during the predictive inbox placement test.
        SpamPercentage:
          allOf:
          - $ref: '#/components/schemas/Percentage'
          description: The percentage of emails that arrived in recipients' spam or
            junk mail folders during the predictive inbox placement test.
        MissingPercentage:
          allOf:
          - $ref: '#/components/schemas/Percentage'
          description: The percentage of emails that didn't arrive in recipients'
            inboxes at all during the predictive inbox placement test.
        SpfPercentage:
          allOf:
          - $ref: '#/components/schemas/Percentage'
          description: The percentage of emails that were authenticated by using Sender
            Policy Framework (SPF) during the predictive inbox placement test.
        DkimPercentage:
          allOf:
          - $ref: '#/components/schemas/Percentage'
          description: The percentage of emails that were authenticated by using DomainKeys
            Identified Mail (DKIM) during the predictive inbox placement test.
      description: An object that contains inbox placement data for an email provider.
    PoolName:
      type: string
    PutAccountDedicatedIpWarmupAttributesRequest:
      type: object
      properties:
        AutoWarmupEnabled:
          allOf:
          - $ref: '#/components/schemas/Enabled'
          description: Enables or disables the automatic warm-up feature for dedicated
            IP addresses that are associated with your Amazon Pinpoint account in
            the current AWS Region. Set to `true` to enable the automatic warm-up
            feature, or set to `false` to disable it.
      description: A request to enable or disable the automatic IP address warm-up
        feature.
    PutAccountDedicatedIpWarmupAttributesResponse:
      type: object
      properties: {}
      description: An HTTP 200 response if the request succeeds, or an error message
        if the request fails.
    PutAccountSendingAttributesRequest:
      type: object
      properties:
        SendingEnabled:
          allOf:
          - $ref: '#/components/schemas/Enabled'
          description: 'Enables or disables your account''s ability to send email.
            Set to `true` to enable email sending, or set to `false` to disable email
            sending.


            If AWS paused your account''s ability to send email, you can''t use this
            operation to resume your account''s ability to send email.'
      description: A request to change the ability of your account to send email.
    PutAccountSendingAttributesResponse:
      type: object
      properties: {}
      description: An HTTP 200 response if the request succeeds, or an error message
        if the request fails.
    PutConfigurationSetDeliveryOptionsRequest:
      type: object
      properties:
        ConfigurationSetName:
          allOf:
          - $ref: '#/components/schemas/ConfigurationSetName'
          description: The name of the configuration set that you want to associate
            with a dedicated IP pool.
        TlsPolicy:
          allOf:
          - $ref: '#/components/schemas/TlsPolicy'
          description: Specifies whether messages that use the configuration set are
            required to use Transport Layer Security (TLS). If the value is `Require`,
            messages are only delivered if a TLS connection can be established. If
            the value is `Optional`, messages can be delivered in plain text if a
            TLS connection can't be established.
        SendingPoolName:
          allOf:
          - $ref: '#/components/schemas/SendingPoolName'
          description: The name of the dedicated IP pool that you want to associate
            with the configuration set.
      required:
      - ConfigurationSetName
      description: A request to associate a configuration set with a dedicated IP
        pool.
    PutConfigurationSetDeliveryOptionsResponse:
      type: object
      properties: {}
      description: An HTTP 200 response if the request succeeds, or an error message
        if the request fails.
    PutConfigurationSetReputationOptionsRequest:
      type: object
      properties:
        ConfigurationSetName:
          allOf:
          - $ref: '#/components/schemas/ConfigurationSetName'
          description: The name of the configuration set that you want to enable or
            disable reputation metric tracking for.
        ReputationMetricsEnabled:
          allOf:
          - $ref: '#/components/schemas/Enabled'
          description: If `true`, tracking of reputation metrics is enabled for the
            configuration set. If `false`, tracking of reputation metrics is disabled
            for the configuration set.
      required:
      - ConfigurationSetName
      description: A request to enable or disable tracking of reputation metrics for
        a configuration set.
    PutConfigurationSetReputationOptionsResponse:
      type: object
      properties: {}
      description: An HTTP 200 response if the request succeeds, or an error message
        if the request fails.
    PutConfigurationSetSendingOptionsRequest:
      type: object
      properties:
        ConfigurationSetName:
          allOf:
          - $ref: '#/components/schemas/ConfigurationSetName'
          description: The name of the configuration set that you want to enable or
            disable email sending for.
        SendingEnabled:
          allOf:
          - $ref: '#/components/schemas/Enabled'
          description: If `true`, email sending is enabled for the configuration set.
            If `false`, email sending is disabled for the configuration set.
      required:
      - ConfigurationSetName
      description: A request to enable or disable the ability of Amazon Pinpoint to
        send emails that use a specific configuration set.
    PutConfigurationSetSendingOptionsResponse:
      type: object
      properties: {}
      description: An HTTP 200 response if the request succeeds, or an error message
        if the request fails.
    PutConfigurationSetTrackingOptionsRequest:
      type: object
      properties:
        ConfigurationSetName:
          allOf:
          - $ref: '#/components/schemas/ConfigurationSetName'
          description: The name of the configuration set that you want to add a custom
            tracking domain to.
        CustomRedirectDomain:
          allOf:
          - $ref: '#/components/schemas/CustomRedirectDomain'
          description: The domain that you want to use to track open and click events.
      required:
      - ConfigurationSetName
      description: A request to add a custom domain for tracking open and click events
        to a configuration set.
    PutConfigurationSetTrackingOptionsResponse:
      type: object
      properties: {}
      description: An HTTP 200 response if the request succeeds, or an error message
        if the request fails.
    PutDedicatedIpInPoolRequest:
      type: object
      properties:
        Ip:
          allOf:
          - $ref: '#/components/schemas/Ip'
          description: The IP address that you want to move to the dedicated IP pool.
            The value you specify has to be a dedicated IP address that's associated
            with your Amazon Pinpoint account.
        DestinationPoolName:
          allOf:
          - $ref: '#/components/schemas/PoolName'
          description: The name of the IP pool that you want to add the dedicated
            IP address to. You have to specify an IP pool that already exists.
      required:
      - Ip
      - DestinationPoolName
      description: A request to move a dedicated IP address to a dedicated IP pool.
    PutDedicatedIpInPoolResponse:
      type: object
      properties: {}
      description: An HTTP 200 response if the request succeeds, or an error message
        if the request fails.
    PutDedicatedIpWarmupAttributesRequest:
      type: object
      properties:
        Ip:
          allOf:
          - $ref: '#/components/schemas/Ip'
          description: The dedicated IP address that you want to update the warm-up
            attributes for.
        WarmupPercentage:
          allOf:
          - $ref: '#/components/schemas/Percentage100Wrapper'
          description: The warm-up percentage that you want to associate with the
            dedicated IP address.
      required:
      - Ip
      - WarmupPercentage
      description: A request to change the warm-up attributes for a dedicated IP address.
        This operation is useful when you want to resume the warm-up process for an
        existing IP address.
    PutDedicatedIpWarmupAttributesResponse:
      type: object
      properties: {}
      description: An HTTP 200 response if the request succeeds, or an error message
        if the request fails.
    PutDeliverabilityDashboardOptionRequest:
      type: object
      properties:
        DashboardEnabled:
          allOf:
          - $ref: '#/components/schemas/Enabled'
          description: Specifies whether to enable the Deliverability dashboard for
            your Amazon Pinpoint account. To enable the dashboard, set this value
            to `true`.
        SubscribedDomains:
          allOf:
          - $ref: '#/components/schemas/DomainDeliverabilityTrackingOptions'
          description: An array of objects, one for each verified domain that you
            use to send email and enabled the Deliverability dashboard for.
      required:
      - DashboardEnabled
      description: 'Enable or disable the Deliverability dashboard for your Amazon
        Pinpoint account. When you enable the Deliverability dashboard, you gain access
        to reputation, deliverability, and other metrics for the domains that you
        use to send email using Amazon Pinpoint. You also gain the ability to perform
        predictive inbox placement tests.


        When you use the Deliverability dashboard, you pay a monthly subscription
        charge, in addition to any other fees that you accrue by using Amazon Pinpoint.
        For more information about the features and cost of a Deliverability dashboard
        subscription, see [Amazon Pinpoint Pricing](http://aws.amazon.com/pinpoint/pricing/).'
    PutDeliverabilityDashboardOptionResponse:
      type: object
      properties: {}
      description: A response that indicates whether the Deliverability dashboard
        is enabled for your Amazon Pinpoint account.
    PutEmailIdentityDkimAttributesRequest:
      type: object
      properties:
        EmailIdentity:
          allOf:
          - $ref: '#/components/schemas/Identity'
          description: The email identity that you want to change the DKIM settings
            for.
        SigningEnabled:
          allOf:
          - $ref: '#/components/schemas/Enabled'
          description: 'Sets the DKIM signing configuration for the identity.


            When you set this value `true`, then the messages that Amazon Pinpoint
            sends from the identity are DKIM-signed. When you set this value to `false`,
            then the messages that Amazon Pinpoint sends from the identity aren''t
            DKIM-signed.'
      required:
      - EmailIdentity
      description: A request to enable or disable DKIM signing of email that you send
        from an email identity.
    PutEmailIdentityDkimAttributesResponse:
      type: object
      properties: {}
      description: An HTTP 200 response if the request succeeds, or an error message
        if the request fails.
    PutEmailIdentityFeedbackAttributesRequest:
      type: object
      properties:
        EmailIdentity:
          allOf:
          - $ref: '#/components/schemas/Identity'
          description: The email identity that you want to configure bounce and complaint
            feedback forwarding for.
        EmailForwardingEnabled:
          allOf:
          - $ref: '#/components/schemas/Enabled'
          description: 'Sets the feedback forwarding configuration for the identity.


            If the value is `true`, Amazon Pinpoint sends you email notifications
            when bounce or complaint events occur. Amazon Pinpoint sends this notification
            to the address that you specified in the Return-Path header of the original
            email.


            When you set this value to `false`, Amazon Pinpoint sends notifications
            through other mechanisms, such as by notifying an Amazon SNS topic or
            another event destination. You''re required to have a method of tracking
            bounces and complaints. If you haven''t set up another mechanism for receiving
            bounce or complaint notifications, Amazon Pinpoint sends an email notification
            when these events occur (even if this setting is disabled).'
      required:
      - EmailIdentity
      description: A request to set the attributes that control how bounce and complaint
        events are processed.
    PutEmailIdentityFeedbackAttributesResponse:
      type: object
      properties: {}
      description: An HTTP 200 response if the request succeeds, or an error message
        if the request fails.
    PutEmailIdentityMailFromAttributesRequest:
      type: object
      properties:
        EmailIdentity:
          allOf:
          - $ref: '#/components/schemas/Identity'
          description: The verified email identity that you want to set up the custom
            MAIL FROM domain for.
        MailFromDomain:
          allOf:
          - $ref: '#/components/schemas/MailFromDomainName'
          description: "The custom MAIL FROM domain that you want the verified identity\
            \ to use. The MAIL FROM domain must meet the following criteria:\n\n \
            \ * It has to be a subdomain of the verified identity.\n\n  * It can't\
            \ be used to receive email.\n\n  * It can't be used in a \"From\" address\
            \ if the MAIL FROM domain is a destination for feedback forwarding emails."
        BehaviorOnMxFailure:
          allOf:
          - $ref: '#/components/schemas/BehaviorOnMxFailure'
          description: 'The action that you want Amazon Pinpoint to take if it can''t
            read the required MX record when you send an email. When you set this
            value to `UseDefaultValue`, Amazon Pinpoint uses _amazonses.com_ as the
            MAIL FROM domain. When you set this value to `RejectMessage`, Amazon Pinpoint
            returns a `MailFromDomainNotVerified` error, and doesn''t attempt to deliver
            the email.


            These behaviors are taken when the custom MAIL FROM domain configuration
            is in the `Pending`, `Failed`, and `TemporaryFailure` states.'
      required:
      - EmailIdentity
      description: A request to configure the custom MAIL FROM domain for a verified
        identity.
    PutEmailIdentityMailFromAttributesResponse:
      type: object
      properties: {}
      description: An HTTP 200 response if the request succeeds, or an error message
        if the request fails.
    RawMessage:
      type: object
      properties:
        Data:
          allOf:
          - $ref: '#/components/schemas/RawMessageData'
          description: "The raw email message. The message has to meet the following\
            \ criteria:\n\n  * The message has to contain a header and a body, separated\
            \ by one blank line.\n\n  * All of the required header fields must be\
            \ present in the message.\n\n  * Each part of a multipart MIME message\
            \ must be formatted properly.\n\n  * Attachments must be in a file format\
            \ that Amazon Pinpoint supports. \n\n  * The entire message must be Base64\
            \ encoded.\n\n  * If any of the MIME parts in your message contain content\
            \ that is outside of the 7-bit ASCII character range, you should encode\
            \ that content to ensure that recipients' email clients render the message\
            \ properly.\n\n  * The length of any single line of text in the message\
            \ can't exceed 1,000 characters. This restriction is defined in [RFC 5321](https://tools.ietf.org/html/rfc5321)."
      required:
      - Data
      description: The raw email message.
    RawMessageData:
      type: string
      format: byte
      description: "<p>The raw email message. The message has to meet the following\
        \ criteria:</p>\n        <ul>\n            <li>\n                <p>The message\
        \ has to contain a header and a body, separated by one blank\n           \
        \         line.</p>\n            </li>\n            <li>\n               \
        \ <p>All of the required header fields must be present in the message.</p>\n\
        \            </li>\n            <li>\n                <p>Each part of a multipart\
        \ MIME message must be formatted properly.</p>\n            </li>\n      \
        \      <li>\n                <p>Attachments must be in a file format that\
        \ Amazon Pinpoint supports.\n                    </p>\n            </li>\n\
        \            <li>\n                <p>The entire message must be Base64 encoded.</p>\n\
        \            </li>\n            <li>\n                <p>If any of the MIME\
        \ parts in your message contain content that is outside of\n             \
        \       the 7-bit ASCII character range, you should encode that content to\
        \ ensure that\n                    recipients' email clients render the message\
        \ properly.</p>\n            </li>\n            <li>\n                <p>The\
        \ length of any single line of text in the message can't exceed 1,000\n  \
        \                  characters. This restriction is defined in <a href=\"https://tools.ietf.org/html/rfc5321\"\
        >RFC 5321</a>.</p>\n            </li>\n         </ul>"
    RblName:
      type: string
    ReportId:
      type: string
    ReportName:
      type: string
    ReputationOptions:
      type: object
      properties:
        ReputationMetricsEnabled:
          allOf:
          - $ref: '#/components/schemas/Enabled'
          description: If `true`, tracking of reputation metrics is enabled for the
            configuration set. If `false`, tracking of reputation metrics is disabled
            for the configuration set.
        LastFreshStart:
          allOf:
          - $ref: '#/components/schemas/LastFreshStart'
          description: The date and time (in Unix time) when the reputation metrics
            were last given a fresh start. When your account is given a fresh start,
            your reputation metrics are calculated starting from the date of the fresh
            start.
      description: Enable or disable collection of reputation metrics for emails that
        you send using this configuration set in the current AWS Region.
    SendEmailRequest:
      type: object
      properties:
        FromEmailAddress:
          allOf:
          - $ref: '#/components/schemas/EmailAddress'
          description: The email address that you want to use as the "From" address
            for the email. The address that you specify has to be verified.
        Destination:
          allOf:
          - $ref: '#/components/schemas/Destination'
          description: An object that contains the recipients of the email message.
        ReplyToAddresses:
          allOf:
          - $ref: '#/components/schemas/EmailAddressList'
          description: The "Reply-to" email addresses for the message. When the recipient
            replies to the message, each Reply-to address receives the reply.
        FeedbackForwardingEmailAddress:
          allOf:
          - $ref: '#/components/schemas/EmailAddress'
          description: The address that Amazon Pinpoint should send bounce and complaint
            notifications to.
        Content:
          allOf:
          - $ref: '#/components/schemas/EmailContent'
          description: An object that contains the body of the message. You can send
            either a Simple message or a Raw message.
        EmailTags:
          allOf:
          - $ref: '#/components/schemas/MessageTagList'
          description: A list of tags, in the form of name/value pairs, to apply to
            an email that you send using the `SendEmail` operation. Tags correspond
            to characteristics of the email that you define, so that you can publish
            email sending events.
        ConfigurationSetName:
          allOf:
          - $ref: '#/components/schemas/ConfigurationSetName'
          description: The name of the configuration set that you want to use when
            sending the email.
      required:
      - Destination
      - Content
      description: A request to send an email message.
    SendEmailResponse:
      type: object
      properties:
        MessageId:
          allOf:
          - $ref: '#/components/schemas/OutboundMessageId'
          description: 'A unique identifier for the message that is generated when
            Amazon Pinpoint accepts the message.


            It is possible for Amazon Pinpoint to accept a message without sending
            it. This can happen when the message you''re trying to send has an attachment
            doesn''t pass a virus check, or when you send a templated email that contains
            invalid personalization content, for example.'
      description: A unique message ID that you receive when Amazon Pinpoint accepts
        an email for sending.
    SendQuota:
      type: object
      properties:
        Max24HourSend:
          allOf:
          - $ref: '#/components/schemas/Max24HourSend'
          description: The maximum number of emails that you can send in the current
            AWS Region over a 24-hour period. This value is also called your _sending
            quota_.
        MaxSendRate:
          allOf:
          - $ref: '#/components/schemas/MaxSendRate'
          description: The maximum number of emails that you can send per second in
            the current AWS Region. This value is also called your _maximum sending
            rate_ or your _maximum TPS (transactions per second) rate_.
        SentLast24Hours:
          allOf:
          - $ref: '#/components/schemas/SentLast24Hours'
          description: The number of emails sent from your Amazon Pinpoint account
            in the current AWS Region over the past 24 hours.
      description: An object that contains information about the per-day and per-second
        sending limits for your Amazon Pinpoint account in the current AWS Region.
    SendingOptions:
      type: object
      properties:
        SendingEnabled:
          allOf:
          - $ref: '#/components/schemas/Enabled'
          description: If `true`, email sending is enabled for the configuration set.
            If `false`, email sending is disabled for the configuration set.
      description: Used to enable or disable email sending for messages that use this
        configuration set in the current AWS Region.
    SendingPausedException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: The message can't be sent because the account's ability to send
        email is currently paused.
    SendingPoolName:
      type: string
    SentLast24Hours:
      type: number
      format: double
      default: 0
    SnsDestination:
      type: object
      properties:
        TopicArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          description: The Amazon Resource Name (ARN) of the Amazon SNS topic that
            you want to publish email events to. For more information about Amazon
            SNS topics, see the [Amazon SNS Developer Guide](https://docs.aws.amazon.com/sns/latest/dg/CreateTopic.html).
      required:
      - TopicArn
      description: An object that defines an Amazon SNS destination for email events.
        You can use Amazon SNS to send notification when certain email events occur.
    Subject:
      type: string
    Tag:
      type: object
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/TagKey'
          description: One part of a key-value pair that defines a tag. The maximum
            length of a tag key is 128 characters. The minimum length is 1 character.
        Value:
          allOf:
          - $ref: '#/components/schemas/TagValue'
          description: The optional part of a key-value pair that defines a tag. The
            maximum length of a tag value is 256 characters. The minimum length is
            0 characters. If you don’t want a resource to have a specific tag value,
            don’t specify a value for this parameter. Amazon Pinpoint will set the
            value to an empty string.
      required:
      - Key
      - Value
      description: "An object that defines the tags that are associated with a resource.\
        \ A  _tag_ is a label that you optionally define and associate with a resource\
        \ in Amazon Pinpoint. Tags can help you categorize and manage resources in\
        \ different ways, such as by purpose, owner, environment, or other criteria.\
        \ A resource can have as many as 50 tags.\n\nEach tag consists of a required\
        \  _tag key_ and an associated  _tag value_ , both of which you define. A\
        \ tag key is a general label that acts as a category for a more specific tag\
        \ value. A tag value acts as a descriptor within a tag key. A tag key can\
        \ contain as many as 128 characters. A tag value can contain as many as 256\
        \ characters. The characters can be Unicode letters, digits, white space,\
        \ or one of the following symbols: _ . : / = + -. The following additional\
        \ restrictions apply to tags:\n\n  * Tag keys and values are case sensitive.\n\
        \n  * For each associated resource, each tag key must be unique and it can\
        \ have only one value.\n\n  * The `aws:` prefix is reserved for use by AWS;\
        \ you can’t use it in any tag keys or values that you define. In addition,\
        \ you can't edit or remove tag keys or values that use this prefix. Tags that\
        \ use this prefix don’t count against the limit of 50 tags per resource.\n\
        \n  * You can associate tags with public or shared resources, but the tags\
        \ are available only for your AWS account, not any other accounts that share\
        \ the resource. In addition, the tags are available only for resources that\
        \ are located in the specified AWS Region for your AWS account."
    TagKey:
      type: string
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
    TagList:
      type: array
      items:
        $ref: '#/components/schemas/Tag'
    TagResourceRequest:
      type: object
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          description: The Amazon Resource Name (ARN) of the resource that you want
            to add one or more tags to.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: A list of the tags that you want to add to the resource. A
            tag consists of a required tag key (`Key`) and an associated tag value
            (`Value`). The maximum length of a tag key is 128 characters. The maximum
            length of a tag value is 256 characters.
      required:
      - ResourceArn
      - Tags
    TagResourceResponse:
      type: object
      properties: {}
    TagValue:
      type: string
    Template:
      type: object
      properties:
        TemplateArn:
          allOf:
          - $ref: '#/components/schemas/TemplateArn'
          description: The Amazon Resource Name (ARN) of the template.
        TemplateData:
          allOf:
          - $ref: '#/components/schemas/TemplateData'
          description: An object that defines the values to use for message variables
            in the template. This object is a set of key-value pairs. Each key defines
            a message variable in the template. The corresponding value defines the
            value to use for that variable.
    TemplateArn:
      type: string
    TemplateData:
      type: string
      minLength: 0
      maxLength: 262144
    Timestamp:
      type: string
      format: date-time
    TlsPolicy:
      type: string
      enum:
      - REQUIRE
      - OPTIONAL
      description: "<p>Specifies whether messages that use the configuration set are\
        \ required to use\n            Transport Layer Security (TLS). If the value\
        \ is <code>Require</code>, messages are only\n            delivered if a TLS\
        \ connection can be established. If the value is <code>Optional</code>,\n\
        \            messages can be delivered in plain text if a TLS connection can't\
        \ be established.</p>"
    TooManyRequestsException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: Too many requests have been made to the operation.
    TrackingOptions:
      type: object
      properties:
        CustomRedirectDomain:
          allOf:
          - $ref: '#/components/schemas/CustomRedirectDomain'
          description: The domain that you want to use for tracking open and click
            events.
      required:
      - CustomRedirectDomain
      description: 'An object that defines the tracking options for a configuration
        set. When you use Amazon Pinpoint to send an email, it contains an invisible
        image that''s used to track when recipients open your email. If your email
        contains links, those links are changed slightly in order to track when recipients
        click them.


        These images and links include references to a domain operated by AWS. You
        can optionally configure Amazon Pinpoint to use a domain that you operate
        for these images and links.'
    UntagResourceRequest:
      type: object
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          description: The Amazon Resource Name (ARN) of the resource that you want
            to remove one or more tags from.
        TagKeys:
          allOf:
          - $ref: '#/components/schemas/TagKeyList'
          description: 'The tags (tag keys) that you want to remove from the resource.
            When you specify a tag key, the action removes both that key and its associated
            tag value.


            To remove more than one tag from the resource, append the `TagKeys` parameter
            and argument for each additional tag to remove, separated by an ampersand.
            For example: `/v1/email/tags?ResourceArn=ResourceArn&TagKeys;=Key1&TagKeys;=Key2`'
      required:
      - ResourceArn
      - TagKeys
    UntagResourceResponse:
      type: object
      properties: {}
    UpdateConfigurationSetEventDestinationRequest:
      type: object
      properties:
        ConfigurationSetName:
          allOf:
          - $ref: '#/components/schemas/ConfigurationSetName'
          description: The name of the configuration set that contains the event destination
            that you want to modify.
        EventDestinationName:
          allOf:
          - $ref: '#/components/schemas/EventDestinationName'
          description: The name of the event destination that you want to modify.
        EventDestination:
          allOf:
          - $ref: '#/components/schemas/EventDestinationDefinition'
          description: An object that defines the event destination.
      required:
      - ConfigurationSetName
      - EventDestinationName
      - EventDestination
      description: A request to change the settings for an event destination for a
        configuration set.
    UpdateConfigurationSetEventDestinationResponse:
      type: object
      properties: {}
      description: An HTTP 200 response if the request succeeds, or an error message
        if the request fails.
    Volume:
      type: integer
      format: int64
      description: <p>An object that contains information about inbox placement volume.</p>
    VolumeStatistics:
      type: object
      properties:
        InboxRawCount:
          allOf:
          - $ref: '#/components/schemas/Volume'
          description: The total number of emails that arrived in recipients' inboxes.
        SpamRawCount:
          allOf:
          - $ref: '#/components/schemas/Volume'
          description: The total number of emails that arrived in recipients' spam
            or junk mail folders.
        ProjectedInbox:
          allOf:
          - $ref: '#/components/schemas/Volume'
          description: An estimate of the percentage of emails sent from the current
            domain that will arrive in recipients' inboxes.
        ProjectedSpam:
          allOf:
          - $ref: '#/components/schemas/Volume'
          description: An estimate of the percentage of emails sent from the current
            domain that will arrive in recipients' spam or junk mail folders.
      description: An object that contains information about the amount of email that
        was delivered to recipients.
    WarmupStatus:
      type: string
      enum:
      - IN_PROGRESS
      - DONE
      description: <p>The warmup status of a dedicated IP.</p>
