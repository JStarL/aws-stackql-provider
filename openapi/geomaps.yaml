openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: geo_maps
  x-aws-serviceName: geomaps
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-07'
  version: '2020-11-19'
  title: Amazon Location Service Maps V2
  description: |-
    Integrate high-quality base map data into your applications using [MapLibre](https://maplibre.org). Capabilities include:

      * Access to comprehensive base map data, allowing you to tailor the map display to your specific needs.

      * Multiple pre-designed map styles suited for various application types, such as navigation, logistics, or data visualization.

      * Generation of static map images for scenarios where interactive maps aren't suitable, such as:

        * Embedding in emails or documents

        * Displaying in low-bandwidth environments

        * Creating printable maps

        * Enhancing application performance by reducing client-side rendering
servers:
- description: The Amazon Location Service Maps V2 regional endpoint
  url: https://geo-maps.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths:
  /glyphs/{FontStack}/{FontUnicodeRange}:
    get:
      operationId: GetGlyphs
      description: |-
        `GetGlyphs` returns the map's glyphs.
      parameters:
      - name: FontStack
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: FontUnicodeRange
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
  /styles/{Style}/{ColorScheme}/{Variant}/sprites/{FileName}:
    get:
      operationId: GetSprites
      description: |-
        `GetSprites` returns the map's sprites.
      parameters:
      - name: FileName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: Style
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MapStyle'
      - name: ColorScheme
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ColorScheme'
      - name: Variant
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Variant'
      responses:
        '200': {}
  /static/{FileName}:
    get:
      operationId: GetStaticMap
      description: |-
        `GetStaticMap` provides high-quality static map images with customizable options. You can modify the map's appearance and overlay additional information. It's an ideal solution for applications requiring tailored static map snapshots.
      parameters:
      - name: bounding-box
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PositionListString'
      - name: bounded-positions
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PositionListString'
      - name: center
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PositionString'
      - name: color-scheme
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ColorScheme'
      - name: compact-overlay
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/CompactOverlay'
      - name: crop-labels
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Boolean'
      - name: geojson-overlay
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/GeoJsonOverlay'
      - name: height
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Integer'
      - name: key
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ApiKey'
      - name: label-size
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/LabelSize'
      - name: lang
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/LanguageTag'
      - name: padding
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Integer'
      - name: political-view
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/CountryCode'
      - name: pois
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MapFeatureMode'
      - name: radius
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/DistanceMeters'
      - name: FileName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: scale-unit
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ScaleBarUnit'
      - name: style
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/StaticMapStyle'
      - name: width
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Integer'
      - name: zoom
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Float'
      responses:
        '200': {}
        '403':
          description: |-
            The request was denied because of insufficient access or permissions. Check with an administrator to verify your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /styles/{Style}/descriptor:
    get:
      operationId: GetStyleDescriptor
      description: |-
        `GetStyleDescriptor` returns information about the style.
      parameters:
      - name: Style
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MapStyle'
      - name: color-scheme
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ColorScheme'
      - name: political-view
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/CountryCode'
      - name: key
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ApiKey'
      responses:
        '200': {}
  /tiles/{Tileset}/{Z}/{X}/{Y}:
    get:
      operationId: GetTile
      description: |-
        `GetTile` returns a tile. Map tiles are used by clients to render a map. they're addressed using a grid arrangement with an X coordinate, Y coordinate, and Z (zoom) level.
      parameters:
      - name: Tileset
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Tileset'
      - name: Z
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: X
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: Y
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: key
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ApiKey'
      responses:
        '200': {}
        '403':
          description: |-
            The request was denied because of insufficient access or permissions. Check with an administrator to verify your permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
components:
  schemas:
    AccessDeniedException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
      required:
      - Message
      description: The request was denied because of insufficient access or permissions.
        Check with an administrator to verify your permissions.
    ApiKey:
      type: string
      maxLength: 1000
    ColorScheme:
      type: string
      enum:
      - Light
      - Dark
    CompactOverlay:
      type: string
      minLength: 1
      maxLength: 7000
    CountryCode:
      type: string
      pattern: ^([A-Z]{2}|[A-Z]{3})$
      minLength: 2
      maxLength: 3
    DistanceMeters:
      type: integer
      format: int64
      default: 0
      minimum: 0
      maximum: 4294967295
    GeoJsonOverlay:
      type: string
      minLength: 1
      maxLength: 7000
    GetGlyphsRequest:
      type: object
      properties:
        FontStack:
          allOf:
          - $ref: '#/components/schemas/String'
          description: "Name of the `FontStack` to retrieve.\n\nExample: `Amazon Ember\
            \ Bold,Noto Sans Bold`.\n\nThe supported font stacks are as follows:\n\
            \n  * Amazon Ember Bold\n\n  * Amazon Ember Bold Italic\n\n  * Amazon\
            \ Ember Bold,Noto Sans Bold\n\n  * Amazon Ember Bold,Noto Sans Bold,Noto\
            \ Sans Arabic Bold\n\n  * Amazon Ember Condensed RC BdItalic\n\n  * Amazon\
            \ Ember Condensed RC Bold\n\n  * Amazon Ember Condensed RC Bold Italic\n\
            \n  * Amazon Ember Condensed RC Bold,Noto Sans Bold\n\n  * Amazon Ember\
            \ Condensed RC Bold,Noto Sans Bold,Noto Sans Arabic Condensed Bold\n\n\
            \  * Amazon Ember Condensed RC Light\n\n  * Amazon Ember Condensed RC\
            \ Light Italic\n\n  * Amazon Ember Condensed RC LtItalic\n\n  * Amazon\
            \ Ember Condensed RC Regular\n\n  * Amazon Ember Condensed RC Regular\
            \ Italic\n\n  * Amazon Ember Condensed RC Regular,Noto Sans Regular\n\n\
            \  * Amazon Ember Condensed RC Regular,Noto Sans Regular,Noto Sans Arabic\
            \ Condensed Regular\n\n  * Amazon Ember Condensed RC RgItalic\n\n  * Amazon\
            \ Ember Condensed RC ThItalic\n\n  * Amazon Ember Condensed RC Thin\n\n\
            \  * Amazon Ember Condensed RC Thin Italic\n\n  * Amazon Ember Heavy\n\
            \n  * Amazon Ember Heavy Italic\n\n  * Amazon Ember Light\n\n  * Amazon\
            \ Ember Light Italic\n\n  * Amazon Ember Medium\n\n  * Amazon Ember Medium\
            \ Italic\n\n  * Amazon Ember Medium,Noto Sans Medium\n\n  * Amazon Ember\
            \ Medium,Noto Sans Medium,Noto Sans Arabic Medium\n\n  * Amazon Ember\
            \ Regular\n\n  * Amazon Ember Regular Italic\n\n  * Amazon Ember Regular\
            \ Italic,Noto Sans Italic\n\n  * Amazon Ember Regular Italic,Noto Sans\
            \ Italic,Noto Sans Arabic Regular\n\n  * Amazon Ember Regular,Noto Sans\
            \ Regular\n\n  * Amazon Ember Regular,Noto Sans Regular,Noto Sans Arabic\
            \ Regular\n\n  * Amazon Ember Thin\n\n  * Amazon Ember Thin Italic\n\n\
            \  * AmazonEmberCdRC_Bd\n\n  * AmazonEmberCdRC_BdIt\n\n  * AmazonEmberCdRC_Lt\n\
            \n  * AmazonEmberCdRC_LtIt\n\n  * AmazonEmberCdRC_Rg\n\n  * AmazonEmberCdRC_RgIt\n\
            \n  * AmazonEmberCdRC_Th\n\n  * AmazonEmberCdRC_ThIt\n\n  * AmazonEmber_Bd\n\
            \n  * AmazonEmber_BdIt\n\n  * AmazonEmber_He\n\n  * AmazonEmber_HeIt\n\
            \n  * AmazonEmber_Lt\n\n  * AmazonEmber_LtIt\n\n  * AmazonEmber_Md\n\n\
            \  * AmazonEmber_MdIt\n\n  * AmazonEmber_Rg\n\n  * AmazonEmber_RgIt\n\n\
            \  * AmazonEmber_Th\n\n  * AmazonEmber_ThIt\n\n  * Noto Sans Black\n\n\
            \  * Noto Sans Black Italic\n\n  * Noto Sans Bold\n\n  * Noto Sans Bold\
            \ Italic\n\n  * Noto Sans Extra Bold\n\n  * Noto Sans Extra Bold Italic\n\
            \n  * Noto Sans Extra Light\n\n  * Noto Sans Extra Light Italic\n\n  *\
            \ Noto Sans Italic\n\n  * Noto Sans Light\n\n  * Noto Sans Light Italic\n\
            \n  * Noto Sans Medium\n\n  * Noto Sans Medium Italic\n\n  * Noto Sans\
            \ Regular\n\n  * Noto Sans Semi Bold\n\n  * Noto Sans Semi Bold Italic\n\
            \n  * Noto Sans Thin\n\n  * Noto Sans Thin Italic\n\n  * NotoSans-Bold\n\
            \n  * NotoSans-Italic\n\n  * NotoSans-Medium\n\n  * NotoSans-Regular\n\
            \n  * Open Sans Regular,Arial Unicode MS Regular"
        FontUnicodeRange:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'A Unicode range of characters to download glyphs for. This
            must be aligned to multiples of 256.


            Example: `0-255.pdf`'
      required:
      - FontStack
      - FontUnicodeRange
    GetGlyphsResponse:
      type: object
      properties:
        Blob:
          allOf:
          - $ref: '#/components/schemas/Blob'
          description: The Glyph, as a binary blob.
        ContentType:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Header that represents the format of the response. The response
            returns the following as the HTTP body.
        CacheControl:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Header that instructs caching configuration for the client.
        ETag:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The glyph's Etag.
    GetSpritesRequest:
      type: object
      properties:
        FileName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: '`Sprites` API: The name of the sprite ﬁle to retrieve, following
            pattern `sprites(@2x)?\.(png|json)`.


            Example: `sprites.png`'
        Style:
          allOf:
          - $ref: '#/components/schemas/MapStyle'
          description: Style specifies the desired map style for the `Sprites` APIs.
        ColorScheme:
          allOf:
          - $ref: '#/components/schemas/ColorScheme'
          description: 'Sets color tone for map such as dark and light for specific
            map styles. It applies to only vector map styles such as Standard and
            Monochrome.


            Example: `Light`


            Default value: `Light`


            Valid values for ColorScheme are case sensitive.'
        Variant:
          allOf:
          - $ref: '#/components/schemas/Variant'
          description: 'Optimizes map styles for specific use case or industry. You
            can choose allowed variant only with Standard map style.


            Example: `Default`


            Valid values for Variant are case sensitive.'
      required:
      - FileName
      - Style
      - ColorScheme
      - Variant
    GetSpritesResponse:
      type: object
      properties:
        Blob:
          allOf:
          - $ref: '#/components/schemas/Blob'
          description: The body of the sprite sheet or JSON offset file (image/png
            or application/json, depending on input).
        ContentType:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Header that represents the format of the response. The response
            returns the following as the HTTP body.
        CacheControl:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Header that instructs caching configuration for the client.
        ETag:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The sprite's Etag.
    GetStaticMapRequest:
      type: object
      properties:
        BoundingBox:
          allOf:
          - $ref: '#/components/schemas/PositionListString'
          description: 'Takes in two pairs of coordinates, [Lon, Lat], denoting south-westerly
            and north-easterly edges of the image. The underlying area becomes the
            view of the image.


            Example: -123.17075,49.26959,-123.08125,49.31429'
        BoundedPositions:
          allOf:
          - $ref: '#/components/schemas/PositionListString'
          description: 'Takes in two or more pair of coordinates, [Lon, Lat], with
            each coordinate separated by a comma. The API will generate an image to
            encompass all of the provided coordinates.


            Cannot be used with `Zoom` and or `Radius`


            Example: 97.170451,78.039098,99.045536,27.176178'
        Center:
          allOf:
          - $ref: '#/components/schemas/PositionString'
          description: 'Takes in a pair of coordinates, [Lon, Lat], which becomes
            the center point of the image. This parameter requires that either zoom
            or radius is set.


            Cannot be used with `Zoom` and or `Radius`


            Example: 49.295,-123.108'
        ColorScheme:
          allOf:
          - $ref: '#/components/schemas/ColorScheme'
          description: 'Sets color tone for map, such as dark and light for specific
            map styles. It only applies to vector map styles, such as Standard.


            Example: `Light`


            Default value: `Light`


            Valid values for `ColorScheme` are case sensitive.'
        CompactOverlay:
          allOf:
          - $ref: '#/components/schemas/CompactOverlay'
          description: 'Takes in a string to draw geometries on the image. The input
            is a comma separated format as follows format: `[Lon, Lat]`


            Example: `line:-122.407653,37.798557,-122.413291,37.802443;color=%23DD0000;width=7;outline-color=#00DD00;outline-width=5yd|point:-122.40572,37.80004;label=Fog
            Hill Market;size=large;text-color=%23DD0000;color=#EE4B2B`


            Currently it supports the following geometry types: point, line and polygon.
            It does not support multiPoint , multiLine and multiPolgyon.'
        CropLabels:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: It is a flag that takes in true or false. It prevents the labels
            that are on the edge of the image from being cut or obscured.
        GeoJsonOverlay:
          allOf:
          - $ref: '#/components/schemas/GeoJsonOverlay'
          description: 'Takes in a string to draw geometries on the image. The input
            is a valid GeoJSON collection object.


            Example: `{"type":"FeatureCollection","features": [{"type":"Feature","geometry":{"type":"MultiPoint","coordinates":
            [[-90.076345,51.504107],[-0.074451,51.506892]]},"properties": {"color":"#00DD00"}}]}`'
        Height:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: Specifies the height of the map image.
        Key:
          allOf:
          - $ref: '#/components/schemas/ApiKey'
          description: 'Optional: The API key to be used for authorization. Either
            an API key or valid SigV4 signature must be provided when making a request.'
        LabelSize:
          allOf:
          - $ref: '#/components/schemas/LabelSize'
          description: Overrides the label size auto-calculated by `FileName`. Takes
            in one of the values - `Small` or `Large`.
        Language:
          allOf:
          - $ref: '#/components/schemas/LanguageTag'
          description: "Specifies the language on the map labels using the BCP 47\
            \ language tag, limited to ISO 639-1 two-letter language codes. If the\
            \ specified language data isn't available for the map image, the labels\
            \ will default to the regional primary language.\n\nSupported codes:\n\
            \n  * `ar`\n\n  * `as`\n\n  * `az`\n\n  * `be`\n\n  * `bg`\n\n  * `bn`\n\
            \n  * `bs`\n\n  * `ca`\n\n  * `cs`\n\n  * `cy`\n\n  * `da`\n\n  * `de`\n\
            \n  * `el`\n\n  * `en`\n\n  * `es`\n\n  * `et`\n\n  * `eu`\n\n  * `fi`\n\
            \n  * `fo`\n\n  * `fr`\n\n  * `ga`\n\n  * `gl`\n\n  * `gn`\n\n  * `gu`\n\
            \n  * `he`\n\n  * `hi`\n\n  * `hr`\n\n  * `hu`\n\n  * `hy`\n\n  * `id`\n\
            \n  * `is`\n\n  * `it`\n\n  * `ja`\n\n  * `ka`\n\n  * `kk`\n\n  * `km`\n\
            \n  * `kn`\n\n  * `ko`\n\n  * `ky`\n\n  * `lt`\n\n  * `lv`\n\n  * `mk`\n\
            \n  * `ml`\n\n  * `mr`\n\n  * `ms`\n\n  * `mt`\n\n  * `my`\n\n  * `nl`\n\
            \n  * `no`\n\n  * `or`\n\n  * `pa`\n\n  * `pl`\n\n  * `pt`\n\n  * `ro`\n\
            \n  * `ru`\n\n  * `sk`\n\n  * `sl`\n\n  * `sq`\n\n  * `sr`\n\n  * `sv`\n\
            \n  * `ta`\n\n  * `te`\n\n  * `th`\n\n  * `tr`\n\n  * `uk`\n\n  * `uz`\n\
            \n  * `vi`\n\n  * `zh`"
        Padding:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: 'Applies additional space (in pixels) around overlay feature
            to prevent them from being cut or obscured.


            Value for max and min is determined by:


            Min: `1`


            Max: `min(height, width)/4`


            Example: `100`'
        PoliticalView:
          allOf:
          - $ref: '#/components/schemas/CountryCode'
          description: "Specifies the political view, using ISO 3166-2 or ISO 3166-3\
            \ country code format.\n\nThe following political views are currently\
            \ supported:\n\n  * `ARG`: Argentina's view on the Southern Patagonian\
            \ Ice Field and Tierra Del Fuego, including the Falkland Islands, South\
            \ Georgia, and South Sandwich Islands\n\n  * `EGY`: Egypt's view on Bir\
            \ Tawil\n\n  * `IND`: India's view on Gilgit-Baltistan\n\n  * `KEN`: Kenya's\
            \ view on the Ilemi Triangle\n\n  * `MAR`: Morocco's view on Western Sahara\n\
            \n  * `RUS`: Russia's view on Crimea\n\n  * `SDN`: Sudan's view on the\
            \ Halaib Triangle\n\n  * `SRB`: Serbia's view on Kosovo, Vukovar, and\
            \ Sarengrad Islands\n\n  * `SUR`: Suriname's view on the Courantyne Headwaters\
            \ and Lawa Headwaters\n\n  * `SYR`: Syria's view on the Golan Heights\n\
            \n  * `TUR`: Turkey's view on Cyprus and Northern Cyprus\n\n  * `TZA`:\
            \ Tanzania's view on Lake Malawi\n\n  * `URY`: Uruguay's view on Rincon\
            \ de Artigas\n\n  * `VNM`: Vietnam's view on the Paracel Islands and Spratly\
            \ Islands"
        PointsOfInterests:
          allOf:
          - $ref: '#/components/schemas/MapFeatureMode'
          description: Determines if the result image will display icons representing
            points of interest on the map.
        Radius:
          allOf:
          - $ref: '#/components/schemas/DistanceMeters'
          description: 'Used with center parameter, it specifies the zoom of the image
            where you can control it on a granular level. Takes in any value `>= 1`.


            Example: `1500`


            Cannot be used with `Zoom`.


            **Unit** : `Meters`'
        FileName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'The map scaling parameter to size the image, icons, and labels.
            It follows the pattern of `^map(@2x)?$`.


            Example: `map, map@2x`'
        ScaleBarUnit:
          allOf:
          - $ref: '#/components/schemas/ScaleBarUnit'
          description: 'Displays a scale on the bottom right of the map image with
            the unit specified in the input.


            Example: `KilometersMiles, Miles, Kilometers, MilesKilometers`'
        Style:
          allOf:
          - $ref: '#/components/schemas/StaticMapStyle'
          description: '`Style` specifies the desired map style.'
        Width:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: Specifies the width of the map image.
        Zoom:
          allOf:
          - $ref: '#/components/schemas/Float'
          description: 'Specifies the zoom level of the map image.


            Cannot be used with `Radius`.'
      required:
      - Height
      - FileName
      - Width
    GetStaticMapResponse:
      type: object
      properties:
        Blob:
          allOf:
          - $ref: '#/components/schemas/Blob'
          description: The blob represents a map image as a `jpeg` for the `GetStaticMap`
            API.
        ContentType:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Header that represents the format of the response. The response
            returns the following as the HTTP body.
        CacheControl:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Header that instructs caching configuration for the client.
        ETag:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The static map's Etag.
        PricingBucket:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The pricing bucket for which the request is charged at.
      required:
      - PricingBucket
    GetStyleDescriptorRequest:
      type: object
      properties:
        Style:
          allOf:
          - $ref: '#/components/schemas/MapStyle'
          description: Style specifies the desired map style.
        ColorScheme:
          allOf:
          - $ref: '#/components/schemas/ColorScheme'
          description: 'Sets color tone for map such as dark and light for specific
            map styles. It applies to only vector map styles such as Standard and
            Monochrome.


            Example: `Light`


            Default value: `Light`


            Valid values for ColorScheme are case sensitive.'
        PoliticalView:
          allOf:
          - $ref: '#/components/schemas/CountryCode'
          description: "Specifies the political view using ISO 3166-2 or ISO 3166-3\
            \ country code format.\n\nThe following political views are currently\
            \ supported:\n\n  * `ARG`: Argentina's view on the Southern Patagonian\
            \ Ice Field and Tierra Del Fuego, including the Falkland Islands, South\
            \ Georgia, and South Sandwich Islands\n\n  * `EGY`: Egypt's view on Bir\
            \ Tawil\n\n  * `IND`: India's view on Gilgit-Baltistan\n\n  * `KEN`: Kenya's\
            \ view on the Ilemi Triangle\n\n  * `MAR`: Morocco's view on Western Sahara\n\
            \n  * `RUS`: Russia's view on Crimea\n\n  * `SDN`: Sudan's view on the\
            \ Halaib Triangle\n\n  * `SRB`: Serbia's view on Kosovo, Vukovar, and\
            \ Sarengrad Islands\n\n  * `SUR`: Suriname's view on the Courantyne Headwaters\
            \ and Lawa Headwaters\n\n  * `SYR`: Syria's view on the Golan Heights\n\
            \n  * `TUR`: Turkey's view on Cyprus and Northern Cyprus\n\n  * `TZA`:\
            \ Tanzania's view on Lake Malawi\n\n  * `URY`: Uruguay's view on Rincon\
            \ de Artigas\n\n  * `VNM`: Vietnam's view on the Paracel Islands and Spratly\
            \ Islands"
        Key:
          allOf:
          - $ref: '#/components/schemas/ApiKey'
          description: 'Optional: The API key to be used for authorization. Either
            an API key or valid SigV4 signature must be provided when making a request.'
      required:
      - Style
    GetStyleDescriptorResponse:
      type: object
      properties:
        Blob:
          allOf:
          - $ref: '#/components/schemas/Blob'
          description: This Blob contains the body of the style descriptor which is
            in application/json format.
        ContentType:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Header that represents the format of the response. The response
            returns the following as the HTTP body.
        CacheControl:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Header that instructs caching configuration for the client.
        ETag:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The style descriptor's Etag.
    GetTileRequest:
      type: object
      properties:
        Tileset:
          allOf:
          - $ref: '#/components/schemas/Tileset'
          description: 'Specifies the desired tile set.


            Valid Values: `raster.satellite | vector.basemap`'
        Z:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The zoom value for the map tile.
        X:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The X axis value for the map tile. Must be between 0 and 19.
        Y:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Y axis value for the map tile.
        Key:
          allOf:
          - $ref: '#/components/schemas/ApiKey'
          description: 'Optional: The API key to be used for authorization. Either
            an API key or valid SigV4 signature must be provided when making a request.'
      required:
      - Tileset
      - Z
      - X
      - Y
    GetTileResponse:
      type: object
      properties:
        Blob:
          allOf:
          - $ref: '#/components/schemas/Blob'
          description: The blob represents a vector tile in `mvt` or a raster tile
            in an image format.
        ContentType:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Header that represents the format of the response. The response
            returns the following as the HTTP body.
        CacheControl:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Header that instructs caching configuration for the client.
        ETag:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The pricing bucket for which the request is charged at.
        PricingBucket:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The pricing bucket for which the request is charged at.
      required:
      - PricingBucket
    InternalServerException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
      required:
      - Message
      description: The request processing has failed because of an unknown error,
        exception or failure.
    LabelSize:
      type: string
      enum:
      - Small
      - Large
    LanguageTag:
      type: string
      minLength: 2
      maxLength: 35
    MapFeatureMode:
      type: string
      enum:
      - Enabled
      - Disabled
    MapStyle:
      type: string
      enum:
      - Standard
      - Monochrome
      - Hybrid
      - Satellite
    PositionListString:
      type: string
      pattern: ^(-?\d{1,3}(\.\d{1,14})?,-?\d{1,2}(\.\d{1,14})?)(,(-?\d{1,3}(\.\d{1,14})?,-?\d{1,2}(\.\d{1,14})?))*$
      minLength: 7
    PositionString:
      type: string
      pattern: ^-?\d{1,3}(\.\d{1,14})?,-?\d{1,2}(\.\d{1,14})?$
      minLength: 3
      maxLength: 36
    ScaleBarUnit:
      type: string
      enum:
      - Kilometers
      - KilometersMiles
      - Miles
      - MilesKilometers
    StaticMapStyle:
      type: string
      enum:
      - Satellite
      - Standard
    ThrottlingException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
      required:
      - Message
      description: The request was denied due to request throttling.
    Tileset:
      type: string
      pattern: ^[-.\w]+$
      minLength: 1
      maxLength: 100
    ValidationException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
        Reason:
          allOf:
          - $ref: '#/components/schemas/ValidationExceptionReason'
          description: The field where the invalid entry was detected.
        FieldList:
          allOf:
          - $ref: '#/components/schemas/ValidationExceptionFieldList'
          description: A message with the reason for the validation exception error.
      required:
      - Message
      - Reason
      - FieldList
      description: The input fails to satisfy the constraints specified by an AWS
        service.
    ValidationExceptionField:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the resource.
        Message:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The error message.
      required:
      - Name
      - Message
      description: The input fails to satisfy the constraints specified by the Amazon
        Location service.
    ValidationExceptionFieldList:
      type: array
      items:
        $ref: '#/components/schemas/ValidationExceptionField'
    ValidationExceptionReason:
      type: string
      enum:
      - UnknownOperation
      - Missing
      - CannotParse
      - FieldValidationFailed
      - Other
      - UnknownField
    Variant:
      type: string
      enum:
      - Default
