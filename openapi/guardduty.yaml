openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: guardduty
  x-aws-serviceName: guardduty
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-07'
  version: '2017-11-28'
  title: Amazon GuardDuty
  description: |-
    Amazon GuardDuty is a continuous security monitoring service that analyzes and processes the following foundational data sources - VPC flow logs, Amazon Web Services CloudTrail management event logs, CloudTrail S3 data event logs, EKS audit logs, DNS logs, Amazon EBS volume data, runtime activity belonging to container workloads, such as Amazon EKS, Amazon ECS (including Amazon Web Services Fargate), and Amazon EC2 instances. It uses threat intelligence feeds, such as lists of malicious IPs and domains, and machine learning to identify unexpected, potentially unauthorized, and malicious activity within your Amazon Web Services environment. This can include issues like escalations of privileges, uses of exposed credentials, or communication with malicious IPs, domains, or presence of malware on your Amazon EC2 instances and container workloads. For example, GuardDuty can detect compromised EC2 instances and container workloads serving malware, or mining bitcoin.

    GuardDuty also monitors Amazon Web Services account access behavior for signs of compromise, such as unauthorized infrastructure deployments like EC2 instances deployed in a Region that has never been used, or unusual API calls like a password policy change to reduce password strength.

    GuardDuty informs you about the status of your Amazon Web Services environment by producing security findings that you can view in the GuardDuty console or through Amazon EventBridge. For more information, see the _[Amazon GuardDuty User Guide](https://docs.aws.amazon.com/guardduty/latest/ug/what-is-guardduty.html) _.
servers:
- description: The Amazon GuardDuty regional endpoint
  url: https://guardduty.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths:
  /detector/{DetectorId}/administrator:
    post:
      operationId: AcceptAdministratorInvitation
      description: |-
        Accepts the invitation to be a member account and get monitored by a GuardDuty administrator account that sent the invitation.
      parameters:
      - name: DetectorId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DetectorId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AdministratorId:
                  $ref: '#/components/schemas/String'
                InvitationId:
                  $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '400':
          description: |-
            A bad request exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            An internal server error exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
    get:
      operationId: GetAdministratorAccount
      description: |-
        Provides the details of the GuardDuty administrator account associated with the current GuardDuty member account.

        If the organization's management account or a delegated administrator runs this API, it will return success (`HTTP 200`) but no content.
      parameters:
      - name: DetectorId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DetectorId'
      responses:
        '200': {}
        '400':
          description: |-
            A bad request exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            An internal server error exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
  /detector/{DetectorId}/master:
    post:
      operationId: AcceptInvitation
      description: |-
        Accepts the invitation to be monitored by a GuardDuty administrator account.
      parameters:
      - name: DetectorId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DetectorId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                MasterId:
                  $ref: '#/components/schemas/String'
                InvitationId:
                  $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '400':
          description: |-
            A bad request exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            An internal server error exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
    get:
      operationId: GetMasterAccount
      description: |-
        Provides the details for the GuardDuty administrator account associated with the current GuardDuty member account.
      parameters:
      - name: DetectorId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DetectorId'
      responses:
        '200': {}
        '400':
          description: |-
            A bad request exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            An internal server error exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
  /detector/{DetectorId}/findings/archive:
    post:
      operationId: ArchiveFindings
      description: |-
        Archives GuardDuty findings that are specified by the list of finding IDs.

        Only the administrator account can archive findings. Member accounts don't have permission to archive findings from their accounts.
      parameters:
      - name: DetectorId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DetectorId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                FindingIds:
                  $ref: '#/components/schemas/FindingIds'
      responses:
        '200': {}
        '400':
          description: |-
            A bad request exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            An internal server error exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
  /detector:
    post:
      operationId: CreateDetector
      description: "Creates a single GuardDuty detector. A detector is a resource\
        \ that represents the GuardDuty service. To start using GuardDuty, you must\
        \ create a detector in each Region where you enable the service. You can have\
        \ only one detector per account per Region. All data sources are enabled in\
        \ a new detector by default.\n\n  * When you don't specify any `features`,\
        \ with an exception to `RUNTIME_MONITORING`, all the optional features are\
        \ enabled by default.\n\n  * When you specify some of the `features`, any\
        \ feature that is not specified in the API call gets enabled by default, with\
        \ an exception to `RUNTIME_MONITORING`. \n\nSpecifying both EKS Runtime Monitoring\
        \ (`EKS_RUNTIME_MONITORING`) and Runtime Monitoring (`RUNTIME_MONITORING`)\
        \ will cause an error. You can add only one of these two features because\
        \ Runtime Monitoring already includes the threat detection for Amazon EKS\
        \ resources. For more information, see [Runtime Monitoring](https://docs.aws.amazon.com/guardduty/latest/ug/runtime-monitoring.html).\n\
        \nThere might be regional differences because some data sources might not\
        \ be available in all the Amazon Web Services Regions where GuardDuty is presently\
        \ supported. For more information, see [Regions and endpoints](https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_regions.html)."
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Enable:
                  $ref: '#/components/schemas/Boolean'
                ClientToken:
                  $ref: '#/components/schemas/ClientToken'
                FindingPublishingFrequency:
                  $ref: '#/components/schemas/FindingPublishingFrequency'
                DataSources:
                  $ref: '#/components/schemas/DataSourceConfigurations'
                Tags:
                  $ref: '#/components/schemas/TagMap'
                Features:
                  $ref: '#/components/schemas/DetectorFeatureConfigurations'
      responses:
        '200': {}
        '400':
          description: |-
            A bad request exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            An internal server error exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
    get:
      operationId: ListDetectors
      description: |-
        Lists detectorIds of all the existing Amazon GuardDuty detector resources.
      parameters:
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '400':
          description: |-
            A bad request exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            An internal server error exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
  /detector/{DetectorId}/filter:
    post:
      operationId: CreateFilter
      description: |-
        Creates a filter using the specified finding criteria. The maximum number of saved filters per Amazon Web Services account per Region is 100. For more information, see [Quotas for GuardDuty](https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_limits.html).
      parameters:
      - name: DetectorId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DetectorId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  $ref: '#/components/schemas/FilterName'
                Description:
                  $ref: '#/components/schemas/FilterDescription'
                Action:
                  $ref: '#/components/schemas/FilterAction'
                Rank:
                  $ref: '#/components/schemas/FilterRank'
                FindingCriteria:
                  $ref: '#/components/schemas/FindingCriteria'
                ClientToken:
                  $ref: '#/components/schemas/ClientToken'
                Tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '200': {}
        '400':
          description: |-
            A bad request exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            An internal server error exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
    get:
      operationId: ListFilters
      description: |-
        Returns a paginated list of the current filters.
      parameters:
      - name: DetectorId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DetectorId'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '400':
          description: |-
            A bad request exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            An internal server error exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
  /detector/{DetectorId}/ipset:
    post:
      operationId: CreateIPSet
      description: |-
        Creates a new IPSet, which is called a trusted IP list in the console user interface. An IPSet is a list of IP addresses that are trusted for secure communication with Amazon Web Services infrastructure and applications. GuardDuty doesn't generate findings for IP addresses that are included in IPSets. Only users from the administrator account can use this operation.
      parameters:
      - name: DetectorId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DetectorId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  $ref: '#/components/schemas/Name'
                Format:
                  $ref: '#/components/schemas/IpSetFormat'
                Location:
                  $ref: '#/components/schemas/Location'
                Activate:
                  $ref: '#/components/schemas/Boolean'
                ClientToken:
                  $ref: '#/components/schemas/ClientToken'
                Tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '200': {}
        '400':
          description: |-
            A bad request exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            An internal server error exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
    get:
      operationId: ListIPSets
      description: |-
        Lists the IPSets of the GuardDuty service specified by the detector ID. If you use this operation from a member account, the IPSets returned are the IPSets from the associated administrator account.
      parameters:
      - name: DetectorId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DetectorId'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '400':
          description: |-
            A bad request exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            An internal server error exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
  /malware-protection-plan:
    post:
      operationId: CreateMalwareProtectionPlan
      description: |-
        Creates a new Malware Protection plan for the protected resource.

        When you create a Malware Protection plan, the Amazon Web Services service terms for GuardDuty Malware Protection apply. For more information, see [Amazon Web Services service terms for GuardDuty Malware Protection](http://aws.amazon.com/service-terms/#87._Amazon_GuardDuty).
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ClientToken:
                  $ref: '#/components/schemas/ClientToken'
                Role:
                  $ref: '#/components/schemas/String'
                ProtectedResource:
                  $ref: '#/components/schemas/CreateProtectedResource'
                Actions:
                  $ref: '#/components/schemas/MalwareProtectionPlanActions'
                Tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '200': {}
        '403':
          description: |-
            An access denied exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            A bad request exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            A request conflict exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An internal server error exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
    get:
      operationId: ListMalwareProtectionPlans
      description: |-
        Lists the Malware Protection plan IDs associated with the protected resources in your Amazon Web Services account.
      parameters:
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '403':
          description: |-
            An access denied exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            A bad request exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            An internal server error exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
  /detector/{DetectorId}/member:
    post:
      operationId: CreateMembers
      description: |-
        Creates member accounts of the current Amazon Web Services account by specifying a list of Amazon Web Services account IDs. This step is a prerequisite for managing the associated member accounts either by invitation or through an organization.

        As a delegated administrator, using `CreateMembers` will enable GuardDuty in the added member accounts, with the exception of the organization delegated administrator account. A delegated administrator must enable GuardDuty prior to being added as a member.

        When you use CreateMembers as an Organizations delegated administrator, GuardDuty applies your organization's auto-enable settings to the member accounts in this request, irrespective of the accounts being new or existing members. For more information about the existing auto-enable settings for your organization, see [DescribeOrganizationConfiguration](https://docs.aws.amazon.com/guardduty/latest/APIReference/API_DescribeOrganizationConfiguration.html).

        If you disassociate a member account that was added by invitation, the member account details obtained from this API, including the associated email addresses, will be retained. This is done so that the delegated administrator can invoke the [InviteMembers](https://docs.aws.amazon.com/guardduty/latest/APIReference/API_InviteMembers.html) API without the need to invoke the CreateMembers API again. To remove the details associated with a member account, the delegated administrator must invoke the [DeleteMembers](https://docs.aws.amazon.com/guardduty/latest/APIReference/API_DeleteMembers.html) API.

        When the member accounts added through Organizations are later disassociated, you (administrator) can't invite them by calling the InviteMembers API. You can create an association with these member accounts again only by calling the CreateMembers API.
      parameters:
      - name: DetectorId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DetectorId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AccountDetails:
                  $ref: '#/components/schemas/AccountDetails'
      responses:
        '200': {}
        '400':
          description: |-
            A bad request exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            An internal server error exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
    get:
      operationId: ListMembers
      description: |-
        Lists details about all member accounts for the current GuardDuty administrator account.
      parameters:
      - name: DetectorId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DetectorId'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      - name: onlyAssociated
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '400':
          description: |-
            A bad request exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            An internal server error exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
  /detector/{DetectorId}/publishingDestination:
    post:
      operationId: CreatePublishingDestination
      description: |-
        Creates a publishing destination where you can export your GuardDuty findings. Before you start exporting the findings, the destination resource must exist.
      parameters:
      - name: DetectorId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DetectorId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                DestinationType:
                  $ref: '#/components/schemas/DestinationType'
                DestinationProperties:
                  $ref: '#/components/schemas/DestinationProperties'
                ClientToken:
                  $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '400':
          description: |-
            A bad request exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            An internal server error exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
    get:
      operationId: ListPublishingDestinations
      description: |-
        Returns a list of publishing destinations associated with the specified `detectorId`.
      parameters:
      - name: DetectorId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DetectorId'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '400':
          description: |-
            A bad request exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            An internal server error exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
  /detector/{DetectorId}/findings/create:
    post:
      operationId: CreateSampleFindings
      description: |-
        Generates sample findings of types specified by the list of finding types. If 'NULL' is specified for `findingTypes`, the API generates sample findings of all supported finding types.
      parameters:
      - name: DetectorId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DetectorId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                FindingTypes:
                  $ref: '#/components/schemas/FindingTypes'
      responses:
        '200': {}
        '400':
          description: |-
            A bad request exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            An internal server error exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
  /detector/{DetectorId}/threatintelset:
    post:
      operationId: CreateThreatIntelSet
      description: |-
        Creates a new ThreatIntelSet. ThreatIntelSets consist of known malicious IP addresses. GuardDuty generates findings based on ThreatIntelSets. Only users of the administrator account can use this operation.
      parameters:
      - name: DetectorId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DetectorId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  $ref: '#/components/schemas/Name'
                Format:
                  $ref: '#/components/schemas/ThreatIntelSetFormat'
                Location:
                  $ref: '#/components/schemas/Location'
                Activate:
                  $ref: '#/components/schemas/Boolean'
                ClientToken:
                  $ref: '#/components/schemas/ClientToken'
                Tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '200': {}
        '400':
          description: |-
            A bad request exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            An internal server error exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
    get:
      operationId: ListThreatIntelSets
      description: |-
        Lists the ThreatIntelSets of the GuardDuty service specified by the detector ID. If you use this operation from a member account, the ThreatIntelSets associated with the administrator account are returned.
      parameters:
      - name: DetectorId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DetectorId'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '400':
          description: |-
            A bad request exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            An internal server error exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
  /invitation/decline:
    post:
      operationId: DeclineInvitations
      description: |-
        Declines invitations sent to the current member account by Amazon Web Services accounts specified by their account IDs.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AccountIds:
                  $ref: '#/components/schemas/AccountIds'
      responses:
        '200': {}
        '400':
          description: |-
            A bad request exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            An internal server error exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
  /detector/{DetectorId}:
    delete:
      operationId: DeleteDetector
      description: |-
        Deletes an Amazon GuardDuty detector that is specified by the detector ID.
      parameters:
      - name: DetectorId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DetectorId'
      responses:
        '200': {}
        '400':
          description: |-
            A bad request exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            An internal server error exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
    get:
      operationId: GetDetector
      description: |-
        Retrieves a GuardDuty detector specified by the detectorId.

        There might be regional differences because some data sources might not be available in all the Amazon Web Services Regions where GuardDuty is presently supported. For more information, see [Regions and endpoints](https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_regions.html).
      parameters:
      - name: DetectorId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DetectorId'
      responses:
        '200': {}
        '400':
          description: |-
            A bad request exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            An internal server error exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
    post:
      operationId: UpdateDetector
      description: |-
        Updates the GuardDuty detector specified by the detector ID.

        Specifying both EKS Runtime Monitoring (`EKS_RUNTIME_MONITORING`) and Runtime Monitoring (`RUNTIME_MONITORING`) will cause an error. You can add only one of these two features because Runtime Monitoring already includes the threat detection for Amazon EKS resources. For more information, see [Runtime Monitoring](https://docs.aws.amazon.com/guardduty/latest/ug/runtime-monitoring.html).

        There might be regional differences because some data sources might not be available in all the Amazon Web Services Regions where GuardDuty is presently supported. For more information, see [Regions and endpoints](https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_regions.html).
      parameters:
      - name: DetectorId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DetectorId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Enable:
                  $ref: '#/components/schemas/Boolean'
                FindingPublishingFrequency:
                  $ref: '#/components/schemas/FindingPublishingFrequency'
                DataSources:
                  $ref: '#/components/schemas/DataSourceConfigurations'
                Features:
                  $ref: '#/components/schemas/DetectorFeatureConfigurations'
      responses:
        '200': {}
        '400':
          description: |-
            A bad request exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            An internal server error exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
  /detector/{DetectorId}/filter/{FilterName}:
    delete:
      operationId: DeleteFilter
      description: |-
        Deletes the filter specified by the filter name.
      parameters:
      - name: DetectorId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DetectorId'
      - name: FilterName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '400':
          description: |-
            A bad request exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            An internal server error exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
    get:
      operationId: GetFilter
      description: |-
        Returns the details of the filter specified by the filter name.
      parameters:
      - name: DetectorId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DetectorId'
      - name: FilterName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '400':
          description: |-
            A bad request exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            An internal server error exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
    post:
      operationId: UpdateFilter
      description: |-
        Updates the filter specified by the filter name.
      parameters:
      - name: DetectorId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DetectorId'
      - name: FilterName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Description:
                  $ref: '#/components/schemas/FilterDescription'
                Action:
                  $ref: '#/components/schemas/FilterAction'
                Rank:
                  $ref: '#/components/schemas/FilterRank'
                FindingCriteria:
                  $ref: '#/components/schemas/FindingCriteria'
      responses:
        '200': {}
        '400':
          description: |-
            A bad request exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            An internal server error exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
  /detector/{DetectorId}/ipset/{IpSetId}:
    delete:
      operationId: DeleteIPSet
      description: |-
        Deletes the IPSet specified by the `ipSetId`. IPSets are called trusted IP lists in the console user interface.
      parameters:
      - name: DetectorId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DetectorId'
      - name: IpSetId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '400':
          description: |-
            A bad request exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            An internal server error exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
    get:
      operationId: GetIPSet
      description: |-
        Retrieves the IPSet specified by the `ipSetId`.
      parameters:
      - name: DetectorId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DetectorId'
      - name: IpSetId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '400':
          description: |-
            A bad request exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            An internal server error exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
    post:
      operationId: UpdateIPSet
      description: |-
        Updates the IPSet specified by the IPSet ID.
      parameters:
      - name: DetectorId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DetectorId'
      - name: IpSetId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  $ref: '#/components/schemas/Name'
                Location:
                  $ref: '#/components/schemas/Location'
                Activate:
                  $ref: '#/components/schemas/Boolean'
      responses:
        '200': {}
        '400':
          description: |-
            A bad request exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            An internal server error exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
  /invitation/delete:
    post:
      operationId: DeleteInvitations
      description: |-
        Deletes invitations sent to the current member account by Amazon Web Services accounts specified by their account IDs.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AccountIds:
                  $ref: '#/components/schemas/AccountIds'
      responses:
        '200': {}
        '400':
          description: |-
            A bad request exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            An internal server error exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
  /malware-protection-plan/{MalwareProtectionPlanId}:
    delete:
      operationId: DeleteMalwareProtectionPlan
      description: |-
        Deletes the Malware Protection plan ID associated with the Malware Protection plan resource. Use this API only when you no longer want to protect the resource associated with this Malware Protection plan ID.
      parameters:
      - name: MalwareProtectionPlanId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '403':
          description: |-
            An access denied exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            A bad request exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            An internal server error exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
    get:
      operationId: GetMalwareProtectionPlan
      description: |-
        Retrieves the Malware Protection plan details associated with a Malware Protection plan ID.
      parameters:
      - name: MalwareProtectionPlanId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '403':
          description: |-
            An access denied exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            A bad request exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            An internal server error exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
    patch:
      operationId: UpdateMalwareProtectionPlan
      description: |-
        Updates an existing Malware Protection plan resource.
      parameters:
      - name: MalwareProtectionPlanId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Role:
                  $ref: '#/components/schemas/String'
                Actions:
                  $ref: '#/components/schemas/MalwareProtectionPlanActions'
                ProtectedResource:
                  $ref: '#/components/schemas/UpdateProtectedResource'
      responses:
        '200': {}
        '403':
          description: |-
            An access denied exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            A bad request exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            An internal server error exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /detector/{DetectorId}/member/delete:
    post:
      operationId: DeleteMembers
      description: |-
        Deletes GuardDuty member accounts (to the current GuardDuty administrator account) specified by the account IDs.

        With `autoEnableOrganizationMembers` configuration for your organization set to `ALL`, you'll receive an error if you attempt to disable GuardDuty for a member account in your organization.
      parameters:
      - name: DetectorId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DetectorId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AccountIds:
                  $ref: '#/components/schemas/AccountIds'
      responses:
        '200': {}
        '400':
          description: |-
            A bad request exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            An internal server error exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
  /detector/{DetectorId}/publishingDestination/{DestinationId}:
    delete:
      operationId: DeletePublishingDestination
      description: |-
        Deletes the publishing definition with the specified `destinationId`.
      parameters:
      - name: DetectorId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DetectorId'
      - name: DestinationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '400':
          description: |-
            A bad request exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            An internal server error exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
    get:
      operationId: DescribePublishingDestination
      description: |-
        Returns information about the publishing destination specified by the provided `destinationId`.
      parameters:
      - name: DetectorId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DetectorId'
      - name: DestinationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '400':
          description: |-
            A bad request exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            An internal server error exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
    post:
      operationId: UpdatePublishingDestination
      description: |-
        Updates information about the publishing destination specified by the `destinationId`.
      parameters:
      - name: DetectorId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DetectorId'
      - name: DestinationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                DestinationProperties:
                  $ref: '#/components/schemas/DestinationProperties'
      responses:
        '200': {}
        '400':
          description: |-
            A bad request exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            An internal server error exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
  /detector/{DetectorId}/threatintelset/{ThreatIntelSetId}:
    delete:
      operationId: DeleteThreatIntelSet
      description: |-
        Deletes the ThreatIntelSet specified by the ThreatIntelSet ID.
      parameters:
      - name: DetectorId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DetectorId'
      - name: ThreatIntelSetId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '400':
          description: |-
            A bad request exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            An internal server error exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
    get:
      operationId: GetThreatIntelSet
      description: |-
        Retrieves the ThreatIntelSet that is specified by the ThreatIntelSet ID.
      parameters:
      - name: DetectorId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DetectorId'
      - name: ThreatIntelSetId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '400':
          description: |-
            A bad request exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            An internal server error exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
    post:
      operationId: UpdateThreatIntelSet
      description: |-
        Updates the ThreatIntelSet specified by the ThreatIntelSet ID.
      parameters:
      - name: DetectorId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DetectorId'
      - name: ThreatIntelSetId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  $ref: '#/components/schemas/Name'
                Location:
                  $ref: '#/components/schemas/Location'
                Activate:
                  $ref: '#/components/schemas/Boolean'
      responses:
        '200': {}
        '400':
          description: |-
            A bad request exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            An internal server error exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
  /detector/{DetectorId}/malware-scans:
    post:
      operationId: DescribeMalwareScans
      description: |-
        Returns a list of malware scans. Each member account can view the malware scans for their own accounts. An administrator can view the malware scans for all the member accounts.

        There might be regional differences because some data sources might not be available in all the Amazon Web Services Regions where GuardDuty is presently supported. For more information, see [Regions and endpoints](https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_regions.html).
      parameters:
      - name: DetectorId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DetectorId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                NextToken:
                  $ref: '#/components/schemas/String'
                MaxResults:
                  $ref: '#/components/schemas/IntegerValueWithMax'
                FilterCriteria:
                  $ref: '#/components/schemas/FilterCriteria'
                SortCriteria:
                  $ref: '#/components/schemas/SortCriteria'
      responses:
        '200': {}
        '400':
          description: |-
            A bad request exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            An internal server error exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
  /detector/{DetectorId}/admin:
    get:
      operationId: DescribeOrganizationConfiguration
      description: |-
        Returns information about the account selected as the delegated administrator for GuardDuty.

        There might be regional differences because some data sources might not be available in all the Amazon Web Services Regions where GuardDuty is presently supported. For more information, see [Regions and endpoints](https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_regions.html).
      parameters:
      - name: DetectorId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DetectorId'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '400':
          description: |-
            A bad request exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            An internal server error exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
    post:
      operationId: UpdateOrganizationConfiguration
      description: |-
        Configures the delegated administrator account with the provided values. You must provide a value for either `autoEnableOrganizationMembers` or `autoEnable`, but not both.

        Specifying both EKS Runtime Monitoring (`EKS_RUNTIME_MONITORING`) and Runtime Monitoring (`RUNTIME_MONITORING`) will cause an error. You can add only one of these two features because Runtime Monitoring already includes the threat detection for Amazon EKS resources. For more information, see [Runtime Monitoring](https://docs.aws.amazon.com/guardduty/latest/ug/runtime-monitoring.html).

        There might be regional differences because some data sources might not be available in all the Amazon Web Services Regions where GuardDuty is presently supported. For more information, see [Regions and endpoints](https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_regions.html).
      parameters:
      - name: DetectorId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DetectorId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AutoEnable:
                  $ref: '#/components/schemas/Boolean'
                DataSources:
                  $ref: '#/components/schemas/OrganizationDataSourceConfigurations'
                Features:
                  $ref: '#/components/schemas/OrganizationFeaturesConfigurations'
                AutoEnableOrganizationMembers:
                  $ref: '#/components/schemas/AutoEnableMembers'
      responses:
        '200': {}
        '400':
          description: |-
            A bad request exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            An internal server error exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
  /admin/disable:
    post:
      operationId: DisableOrganizationAdminAccount
      description: |-
        Removes the existing GuardDuty delegated administrator of the organization. Only the organization's management account can run this API operation.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AdminAccountId:
                  $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '400':
          description: |-
            A bad request exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            An internal server error exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
  /detector/{DetectorId}/administrator/disassociate:
    post:
      operationId: DisassociateFromAdministratorAccount
      description: |-
        Disassociates the current GuardDuty member account from its administrator account.

        When you disassociate an invited member from a GuardDuty delegated administrator, the member account details obtained from the [CreateMembers](https://docs.aws.amazon.com/guardduty/latest/APIReference/API_CreateMembers.html) API, including the associated email addresses, are retained. This is done so that the delegated administrator can invoke the [InviteMembers](https://docs.aws.amazon.com/guardduty/latest/APIReference/API_InviteMembers.html) API without the need to invoke the CreateMembers API again. To remove the details associated with a member account, the delegated administrator must invoke the [DeleteMembers](https://docs.aws.amazon.com/guardduty/latest/APIReference/API_DeleteMembers.html) API.

        With `autoEnableOrganizationMembers` configuration for your organization set to `ALL`, you'll receive an error if you attempt to disable GuardDuty in a member account.
      parameters:
      - name: DetectorId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DetectorId'
      responses:
        '200': {}
        '400':
          description: |-
            A bad request exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            An internal server error exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
  /detector/{DetectorId}/master/disassociate:
    post:
      operationId: DisassociateFromMasterAccount
      description: |-
        Disassociates the current GuardDuty member account from its administrator account.

        When you disassociate an invited member from a GuardDuty delegated administrator, the member account details obtained from the [CreateMembers](https://docs.aws.amazon.com/guardduty/latest/APIReference/API_CreateMembers.html) API, including the associated email addresses, are retained. This is done so that the delegated administrator can invoke the [InviteMembers](https://docs.aws.amazon.com/guardduty/latest/APIReference/API_InviteMembers.html) API without the need to invoke the CreateMembers API again. To remove the details associated with a member account, the delegated administrator must invoke the [DeleteMembers](https://docs.aws.amazon.com/guardduty/latest/APIReference/API_DeleteMembers.html) API.
      parameters:
      - name: DetectorId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DetectorId'
      responses:
        '200': {}
        '400':
          description: |-
            A bad request exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            An internal server error exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
  /detector/{DetectorId}/member/disassociate:
    post:
      operationId: DisassociateMembers
      description: |-
        Disassociates GuardDuty member accounts (from the current administrator account) specified by the account IDs.

        When you disassociate an invited member from a GuardDuty delegated administrator, the member account details obtained from the [CreateMembers](https://docs.aws.amazon.com/guardduty/latest/APIReference/API_CreateMembers.html) API, including the associated email addresses, are retained. This is done so that the delegated administrator can invoke the [InviteMembers](https://docs.aws.amazon.com/guardduty/latest/APIReference/API_InviteMembers.html) API without the need to invoke the CreateMembers API again. To remove the details associated with a member account, the delegated administrator must invoke the [DeleteMembers](https://docs.aws.amazon.com/guardduty/latest/APIReference/API_DeleteMembers.html) API.

        With `autoEnableOrganizationMembers` configuration for your organization set to `ALL`, you'll receive an error if you attempt to disassociate a member account before removing them from your organization.

        If you disassociate a member account that was added by invitation, the member account details obtained from this API, including the associated email addresses, will be retained. This is done so that the delegated administrator can invoke the [InviteMembers](https://docs.aws.amazon.com/guardduty/latest/APIReference/API_InviteMembers.html) API without the need to invoke the CreateMembers API again. To remove the details associated with a member account, the delegated administrator must invoke the [DeleteMembers](https://docs.aws.amazon.com/guardduty/latest/APIReference/API_DeleteMembers.html) API.

        When the member accounts added through Organizations are later disassociated, you (administrator) can't invite them by calling the InviteMembers API. You can create an association with these member accounts again only by calling the CreateMembers API.
      parameters:
      - name: DetectorId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DetectorId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AccountIds:
                  $ref: '#/components/schemas/AccountIds'
      responses:
        '200': {}
        '400':
          description: |-
            A bad request exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            An internal server error exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
  /admin/enable:
    post:
      operationId: EnableOrganizationAdminAccount
      description: |-
        Designates an Amazon Web Services account within the organization as your GuardDuty delegated administrator. Only the organization's management account can run this API operation.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AdminAccountId:
                  $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '400':
          description: |-
            A bad request exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            An internal server error exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
  /detector/{DetectorId}/coverage/statistics:
    post:
      operationId: GetCoverageStatistics
      description: |-
        Retrieves aggregated statistics for your account. If you are a GuardDuty administrator, you can retrieve the statistics for all the resources associated with the active member accounts in your organization who have enabled Runtime Monitoring and have the GuardDuty security agent running on their resources.
      parameters:
      - name: DetectorId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DetectorId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                FilterCriteria:
                  $ref: '#/components/schemas/CoverageFilterCriteria'
                StatisticsType:
                  $ref: '#/components/schemas/CoverageStatisticsTypeList'
      responses:
        '200': {}
        '400':
          description: |-
            A bad request exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            An internal server error exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
  /detector/{DetectorId}/findings/get:
    post:
      operationId: GetFindings
      description: |-
        Describes Amazon GuardDuty findings specified by finding IDs.
      parameters:
      - name: DetectorId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DetectorId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                FindingIds:
                  $ref: '#/components/schemas/FindingIds'
                SortCriteria:
                  $ref: '#/components/schemas/SortCriteria'
      responses:
        '200': {}
        '400':
          description: |-
            A bad request exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            An internal server error exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
  /detector/{DetectorId}/findings/statistics:
    post:
      operationId: GetFindingsStatistics
      description: |-
        Lists GuardDuty findings statistics for the specified detector ID.

        You must provide either `findingStatisticTypes` or `groupBy` parameter, and not both. You can use the `maxResults` and `orderBy` parameters only when using `groupBy`.

        There might be regional differences because some flags might not be available in all the Regions where GuardDuty is currently supported. For more information, see [Regions and endpoints](https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_regions.html).
      parameters:
      - name: DetectorId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DetectorId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                FindingStatisticTypes:
                  $ref: '#/components/schemas/FindingStatisticTypes'
                FindingCriteria:
                  $ref: '#/components/schemas/FindingCriteria'
                GroupBy:
                  $ref: '#/components/schemas/GroupByType'
                OrderBy:
                  $ref: '#/components/schemas/OrderBy'
                MaxResults:
                  $ref: '#/components/schemas/MaxResults100'
      responses:
        '200': {}
        '400':
          description: |-
            A bad request exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            An internal server error exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
  /invitation/count:
    get:
      operationId: GetInvitationsCount
      description: |-
        Returns the count of all GuardDuty membership invitations that were sent to the current member account except the currently accepted invitation.
      parameters: []
      responses:
        '200': {}
        '400':
          description: |-
            A bad request exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            An internal server error exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
  /detector/{DetectorId}/malware-scan-settings:
    get:
      operationId: GetMalwareScanSettings
      description: |-
        Returns the details of the malware scan settings.

        There might be regional differences because some data sources might not be available in all the Amazon Web Services Regions where GuardDuty is presently supported. For more information, see [Regions and endpoints](https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_regions.html).
      parameters:
      - name: DetectorId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DetectorId'
      responses:
        '200': {}
        '400':
          description: |-
            A bad request exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            An internal server error exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
    post:
      operationId: UpdateMalwareScanSettings
      description: |-
        Updates the malware scan settings.

        There might be regional differences because some data sources might not be available in all the Amazon Web Services Regions where GuardDuty is presently supported. For more information, see [Regions and endpoints](https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_regions.html).
      parameters:
      - name: DetectorId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DetectorId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ScanResourceCriteria:
                  $ref: '#/components/schemas/ScanResourceCriteria'
                EbsSnapshotPreservation:
                  $ref: '#/components/schemas/EbsSnapshotPreservation'
      responses:
        '200': {}
        '400':
          description: |-
            A bad request exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            An internal server error exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
  /detector/{DetectorId}/member/detector/get:
    post:
      operationId: GetMemberDetectors
      description: |-
        Describes which data sources are enabled for the member account's detector.

        There might be regional differences because some data sources might not be available in all the Amazon Web Services Regions where GuardDuty is presently supported. For more information, see [Regions and endpoints](https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_regions.html).
      parameters:
      - name: DetectorId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DetectorId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AccountIds:
                  $ref: '#/components/schemas/AccountIds'
      responses:
        '200': {}
        '400':
          description: |-
            A bad request exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            An internal server error exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
  /detector/{DetectorId}/member/get:
    post:
      operationId: GetMembers
      description: |-
        Retrieves GuardDuty member accounts (of the current GuardDuty administrator account) specified by the account IDs.
      parameters:
      - name: DetectorId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DetectorId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AccountIds:
                  $ref: '#/components/schemas/AccountIds'
      responses:
        '200': {}
        '400':
          description: |-
            A bad request exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            An internal server error exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
  /organization/statistics:
    get:
      operationId: GetOrganizationStatistics
      description: |-
        Retrieves how many active member accounts have each feature enabled within GuardDuty. Only a delegated GuardDuty administrator of an organization can run this API.

        When you create a new organization, it might take up to 24 hours to generate the statistics for the entire organization.
      responses:
        '200': {}
        '400':
          description: |-
            A bad request exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            An internal server error exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
  /detector/{DetectorId}/freeTrial/daysRemaining:
    post:
      operationId: GetRemainingFreeTrialDays
      description: |-
        Provides the number of days left for each data source used in the free trial period.
      parameters:
      - name: DetectorId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DetectorId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AccountIds:
                  $ref: '#/components/schemas/AccountIds'
      responses:
        '200': {}
        '400':
          description: |-
            A bad request exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            An internal server error exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
  /detector/{DetectorId}/usage/statistics:
    post:
      operationId: GetUsageStatistics
      description: |-
        Lists Amazon GuardDuty usage statistics over the last 30 days for the specified detector ID. For newly enabled detectors or data sources, the cost returned will include only the usage so far under 30 days. This may differ from the cost metrics in the console, which project usage over 30 days to provide a monthly cost estimate. For more information, see [Understanding How Usage Costs are Calculated](https://docs.aws.amazon.com/guardduty/latest/ug/monitoring_costs.html#usage-calculations).
      parameters:
      - name: DetectorId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DetectorId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                UsageStatisticType:
                  $ref: '#/components/schemas/UsageStatisticType'
                UsageCriteria:
                  $ref: '#/components/schemas/UsageCriteria'
                Unit:
                  $ref: '#/components/schemas/String'
                MaxResults:
                  $ref: '#/components/schemas/MaxResults'
                NextToken:
                  $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '400':
          description: |-
            A bad request exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            An internal server error exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
  /detector/{DetectorId}/member/invite:
    post:
      operationId: InviteMembers
      description: |-
        Invites Amazon Web Services accounts to become members of an organization administered by the Amazon Web Services account that invokes this API. If you are using Amazon Web Services Organizations to manage your GuardDuty environment, this step is not needed. For more information, see [Managing accounts with organizations](https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_organizations.html).

        To invite Amazon Web Services accounts, the first step is to ensure that GuardDuty has been enabled in the potential member accounts. You can now invoke this API to add accounts by invitation. The invited accounts can either accept or decline the invitation from their GuardDuty accounts. Each invited Amazon Web Services account can choose to accept the invitation from only one Amazon Web Services account. For more information, see [Managing GuardDuty accounts by invitation](https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_invitations.html).

        After the invite has been accepted and you choose to disassociate a member account (by using [DisassociateMembers](https://docs.aws.amazon.com/guardduty/latest/APIReference/API_DisassociateMembers.html)) from your account, the details of the member account obtained by invoking [CreateMembers](https://docs.aws.amazon.com/guardduty/latest/APIReference/API_CreateMembers.html), including the associated email addresses, will be retained. This is done so that you can invoke InviteMembers without the need to invoke [CreateMembers](https://docs.aws.amazon.com/guardduty/latest/APIReference/API_CreateMembers.html) again. To remove the details associated with a member account, you must also invoke [DeleteMembers](https://docs.aws.amazon.com/guardduty/latest/APIReference/API_DeleteMembers.html).

        If you disassociate a member account that was added by invitation, the member account details obtained from this API, including the associated email addresses, will be retained. This is done so that the delegated administrator can invoke the [InviteMembers](https://docs.aws.amazon.com/guardduty/latest/APIReference/API_InviteMembers.html) API without the need to invoke the CreateMembers API again. To remove the details associated with a member account, the delegated administrator must invoke the [DeleteMembers](https://docs.aws.amazon.com/guardduty/latest/APIReference/API_DeleteMembers.html) API.

        When the member accounts added through Organizations are later disassociated, you (administrator) can't invite them by calling the InviteMembers API. You can create an association with these member accounts again only by calling the CreateMembers API.
      parameters:
      - name: DetectorId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DetectorId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AccountIds:
                  $ref: '#/components/schemas/AccountIds'
                DisableEmailNotification:
                  $ref: '#/components/schemas/Boolean'
                Message:
                  $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '400':
          description: |-
            A bad request exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            An internal server error exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
  /detector/{DetectorId}/coverage:
    post:
      operationId: ListCoverage
      description: |-
        Lists coverage details for your GuardDuty account. If you're a GuardDuty administrator, you can retrieve all resources associated with the active member accounts in your organization.

        Make sure the accounts have Runtime Monitoring enabled and GuardDuty agent running on their resources.
      parameters:
      - name: DetectorId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DetectorId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                NextToken:
                  $ref: '#/components/schemas/String'
                MaxResults:
                  $ref: '#/components/schemas/MaxResults'
                FilterCriteria:
                  $ref: '#/components/schemas/CoverageFilterCriteria'
                SortCriteria:
                  $ref: '#/components/schemas/CoverageSortCriteria'
      responses:
        '200': {}
        '400':
          description: |-
            A bad request exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            An internal server error exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
  /detector/{DetectorId}/findings:
    post:
      operationId: ListFindings
      description: |-
        Lists GuardDuty findings for the specified detector ID.

        There might be regional differences because some flags might not be available in all the Regions where GuardDuty is currently supported. For more information, see [Regions and endpoints](https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_regions.html).
      parameters:
      - name: DetectorId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DetectorId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                FindingCriteria:
                  $ref: '#/components/schemas/FindingCriteria'
                SortCriteria:
                  $ref: '#/components/schemas/SortCriteria'
                MaxResults:
                  $ref: '#/components/schemas/MaxResults'
                NextToken:
                  $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '400':
          description: |-
            A bad request exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            An internal server error exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
  /invitation:
    get:
      operationId: ListInvitations
      description: |-
        Lists all GuardDuty membership invitations that were sent to the current Amazon Web Services account.
      parameters:
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '400':
          description: |-
            A bad request exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            An internal server error exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
  /admin:
    get:
      operationId: ListOrganizationAdminAccounts
      description: |-
        Lists the accounts designated as GuardDuty delegated administrators. Only the organization's management account can run this API operation.
      parameters:
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '400':
          description: |-
            A bad request exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            An internal server error exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
  /tags/{ResourceArn}:
    get:
      operationId: ListTagsForResource
      description: |-
        Lists tags for a resource. Tagging is currently supported for detectors, finding filters, IP sets, threat intel sets, and publishing destination, with a limit of 50 tags per resource. When invoked, this operation returns all assigned tags for a given resource.
      parameters:
      - name: ResourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/GuardDutyArn'
      responses:
        '200': {}
        '403':
          description: |-
            An access denied exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            A bad request exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            An internal server error exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
    post:
      operationId: TagResource
      description: |-
        Adds tags to a resource.
      parameters:
      - name: ResourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/GuardDutyArn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '204': {}
        '403':
          description: |-
            An access denied exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            A bad request exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            An internal server error exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
    delete:
      operationId: UntagResource
      description: |-
        Removes tags from a resource.
      parameters:
      - name: ResourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/GuardDutyArn'
      - name: tagKeys
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/TagKeyList'
      responses:
        '204': {}
        '403':
          description: |-
            An access denied exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            A bad request exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            An internal server error exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
  /malware-scan/start:
    post:
      operationId: StartMalwareScan
      description: |-
        Initiates the malware scan. Invoking this API will automatically create the [Service-linked role](https://docs.aws.amazon.com/guardduty/latest/ug/slr-permissions-malware-protection.html) in the corresponding account.

        When the malware scan starts, you can use the associated scan ID to track the status of the scan. For more information, see [DescribeMalwareScans](https://docs.aws.amazon.com/guardduty/latest/APIReference/API_DescribeMalwareScans.html).
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ResourceArn:
                  $ref: '#/components/schemas/ResourceArn'
      responses:
        '200': {}
        '400':
          description: |-
            A bad request exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            A request conflict exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An internal server error exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
  /detector/{DetectorId}/member/start:
    post:
      operationId: StartMonitoringMembers
      description: |-
        Turns on GuardDuty monitoring of the specified member accounts. Use this operation to restart monitoring of accounts that you stopped monitoring with the [StopMonitoringMembers](https://docs.aws.amazon.com/guardduty/latest/APIReference/API_StopMonitoringMembers.html) operation.
      parameters:
      - name: DetectorId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DetectorId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AccountIds:
                  $ref: '#/components/schemas/AccountIds'
      responses:
        '200': {}
        '400':
          description: |-
            A bad request exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            An internal server error exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
  /detector/{DetectorId}/member/stop:
    post:
      operationId: StopMonitoringMembers
      description: |-
        Stops GuardDuty monitoring for the specified member accounts. Use the `StartMonitoringMembers` operation to restart monitoring for those accounts.

        With `autoEnableOrganizationMembers` configuration for your organization set to `ALL`, you'll receive an error if you attempt to stop monitoring the member accounts in your organization.
      parameters:
      - name: DetectorId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DetectorId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AccountIds:
                  $ref: '#/components/schemas/AccountIds'
      responses:
        '200': {}
        '400':
          description: |-
            A bad request exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            An internal server error exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
  /detector/{DetectorId}/findings/unarchive:
    post:
      operationId: UnarchiveFindings
      description: |-
        Unarchives GuardDuty findings specified by the `findingIds`.
      parameters:
      - name: DetectorId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DetectorId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                FindingIds:
                  $ref: '#/components/schemas/FindingIds'
      responses:
        '200': {}
        '400':
          description: |-
            A bad request exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            An internal server error exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
  /detector/{DetectorId}/findings/feedback:
    post:
      operationId: UpdateFindingsFeedback
      description: |-
        Marks the specified GuardDuty findings as useful or not useful.
      parameters:
      - name: DetectorId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DetectorId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                FindingIds:
                  $ref: '#/components/schemas/FindingIds'
                Feedback:
                  $ref: '#/components/schemas/Feedback'
                Comments:
                  $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '400':
          description: |-
            A bad request exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            An internal server error exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
  /detector/{DetectorId}/member/detector/update:
    post:
      operationId: UpdateMemberDetectors
      description: |-
        Contains information on member accounts to be updated.

        Specifying both EKS Runtime Monitoring (`EKS_RUNTIME_MONITORING`) and Runtime Monitoring (`RUNTIME_MONITORING`) will cause an error. You can add only one of these two features because Runtime Monitoring already includes the threat detection for Amazon EKS resources. For more information, see [Runtime Monitoring](https://docs.aws.amazon.com/guardduty/latest/ug/runtime-monitoring.html).

        There might be regional differences because some data sources might not be available in all the Amazon Web Services Regions where GuardDuty is presently supported. For more information, see [Regions and endpoints](https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_regions.html).
      parameters:
      - name: DetectorId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DetectorId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AccountIds:
                  $ref: '#/components/schemas/AccountIds'
                DataSources:
                  $ref: '#/components/schemas/DataSourceConfigurations'
                Features:
                  $ref: '#/components/schemas/MemberFeaturesConfigurations'
      responses:
        '200': {}
        '400':
          description: |-
            A bad request exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            An internal server error exception object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
components:
  schemas:
    AcceptAdministratorInvitationRequest:
      type: object
      properties:
        DetectorId:
          allOf:
          - $ref: '#/components/schemas/DetectorId'
          description: The unique ID of the detector of the GuardDuty member account.
        AdministratorId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The account ID of the GuardDuty administrator account whose
            invitation you're accepting.
        InvitationId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The value that is used to validate the administrator account
            to the member account.
      required:
      - DetectorId
      - AdministratorId
      - InvitationId
    AcceptAdministratorInvitationResponse:
      type: object
      properties: {}
    AcceptInvitationRequest:
      type: object
      properties:
        DetectorId:
          allOf:
          - $ref: '#/components/schemas/DetectorId'
          description: 'The unique ID of the detector of the GuardDuty member account.


            To find the `detectorId` in the current Region, see the Settings page
            in the GuardDuty console, or run the [ListDetectors](https://docs.aws.amazon.com/guardduty/latest/APIReference/API_ListDetectors.html)
            API.'
        MasterId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The account ID of the GuardDuty administrator account whose
            invitation you're accepting.
        InvitationId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The value that is used to validate the administrator account
            to the member account.
      required:
      - DetectorId
      - MasterId
      - InvitationId
    AcceptInvitationResponse:
      type: object
      properties: {}
    AccessControlList:
      type: object
      properties:
        AllowsPublicReadAccess:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: A value that indicates whether public read access for the bucket
            is enabled through an Access Control List (ACL).
        AllowsPublicWriteAccess:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: A value that indicates whether public write access for the
            bucket is enabled through an Access Control List (ACL).
      description: Contains information on the current access control policies for
        the bucket.
    AccessDeniedException:
      type: object
      properties:
        Message:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The error message.
        Type:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The error type.
      description: An access denied exception object.
    AccessKey:
      type: object
      properties:
        PrincipalId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Principal ID of the user.
        UserName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Name of the user.
        UserType:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Type of the user.
      description: Contains information about the access keys.
    AccessKeyDetails:
      type: object
      properties:
        AccessKeyId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The access key ID of the user.
        PrincipalId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The principal ID of the user.
        UserName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the user.
        UserType:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The type of the user.
      description: Contains information about the access keys.
    Account:
      type: object
      properties:
        Uid:
          allOf:
          - $ref: '#/components/schemas/String'
          description: ID of the member's Amazon Web Services account
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Name of the member's Amazon Web Services account.
      required:
      - Uid
      description: Contains information about the account.
    AccountDetail:
      type: object
      properties:
        AccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The member account ID.
        Email:
          allOf:
          - $ref: '#/components/schemas/Email'
          description: The email address of the member account.
      required:
      - AccountId
      - Email
      description: Contains information about the account.
    AccountDetails:
      type: array
      items:
        $ref: '#/components/schemas/AccountDetail'
    AccountFreeTrialInfo:
      type: object
      properties:
        AccountId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The account identifier of the GuardDuty member account.
        DataSources:
          allOf:
          - $ref: '#/components/schemas/DataSourcesFreeTrial'
          description: Describes the data source enabled for the GuardDuty member
            account.
        Features:
          allOf:
          - $ref: '#/components/schemas/FreeTrialFeatureConfigurationsResults'
          description: A list of features enabled for the GuardDuty account.
      description: Provides details of the GuardDuty member account that uses a free
        trial service.
    AccountFreeTrialInfos:
      type: array
      items:
        $ref: '#/components/schemas/AccountFreeTrialInfo'
    AccountId:
      type: string
      minLength: 12
      maxLength: 12
    AccountIds:
      type: array
      items:
        $ref: '#/components/schemas/AccountId'
    AccountLevelPermissions:
      type: object
      properties:
        BlockPublicAccess:
          allOf:
          - $ref: '#/components/schemas/BlockPublicAccess'
          description: Describes the S3 Block Public Access settings of the bucket's
            parent account.
      description: Contains information about the account level permissions on the
        S3 bucket.
    AccountStatistics:
      type: object
      properties:
        AccountId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the Amazon Web Services account.
        LastGeneratedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp at which the finding for this account was last
            generated.
        TotalFindings:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The total number of findings associated with an account.
      description: Represents a list of map of accounts with the number of findings
        associated with each account.
    Action:
      type: object
      properties:
        ActionType:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The GuardDuty finding activity type.
        AwsApiCallAction:
          allOf:
          - $ref: '#/components/schemas/AwsApiCallAction'
          description: Information about the AWS_API_CALL action described in this
            finding.
        DnsRequestAction:
          allOf:
          - $ref: '#/components/schemas/DnsRequestAction'
          description: Information about the DNS_REQUEST action described in this
            finding.
        NetworkConnectionAction:
          allOf:
          - $ref: '#/components/schemas/NetworkConnectionAction'
          description: Information about the NETWORK_CONNECTION action described in
            this finding.
        PortProbeAction:
          allOf:
          - $ref: '#/components/schemas/PortProbeAction'
          description: Information about the PORT_PROBE action described in this finding.
        KubernetesApiCallAction:
          allOf:
          - $ref: '#/components/schemas/KubernetesApiCallAction'
          description: Information about the Kubernetes API call action described
            in this finding.
        RdsLoginAttemptAction:
          allOf:
          - $ref: '#/components/schemas/RdsLoginAttemptAction'
          description: Information about `RDS_LOGIN_ATTEMPT` action described in this
            finding.
        KubernetesPermissionCheckedDetails:
          allOf:
          - $ref: '#/components/schemas/KubernetesPermissionCheckedDetails'
          description: Information whether the user has the permission to use a specific
            Kubernetes API.
        KubernetesRoleBindingDetails:
          allOf:
          - $ref: '#/components/schemas/KubernetesRoleBindingDetails'
          description: Information about the role binding that grants the permission
            defined in a Kubernetes role.
        KubernetesRoleDetails:
          allOf:
          - $ref: '#/components/schemas/KubernetesRoleDetails'
          description: Information about the Kubernetes role name and role type.
      description: Contains information about actions.
    Actor:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/String'
          description: ID of the threat actor.
        User:
          allOf:
          - $ref: '#/components/schemas/User'
          description: Contains information about the user credentials used by the
            threat actor.
        Session:
          allOf:
          - $ref: '#/components/schemas/Session'
          description: Contains information about the user session where the activity
            initiated.
      required:
      - Id
      description: Information about the actors involved in an attack sequence.
    ActorIds:
      type: array
      items:
        $ref: '#/components/schemas/String'
    Actors:
      type: array
      items:
        $ref: '#/components/schemas/Actor'
    AddonDetails:
      type: object
      properties:
        AddonVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Version of the installed EKS add-on.
        AddonStatus:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Status of the installed EKS add-on.
      description: Information about the installed EKS add-on (GuardDuty security
        agent).
    AdminAccount:
      type: object
      properties:
        AdminAccountId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Web Services account ID for the account.
        AdminStatus:
          allOf:
          - $ref: '#/components/schemas/AdminStatus'
          description: Indicates whether the account is enabled as the delegated administrator.
      description: The account within the organization specified as the GuardDuty
        delegated administrator.
    AdminAccounts:
      type: array
      items:
        $ref: '#/components/schemas/AdminAccount'
    AdminStatus:
      type: string
      enum:
      - ENABLED
      - DISABLE_IN_PROGRESS
    Administrator:
      type: object
      properties:
        AccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The ID of the account used as the administrator account.
        InvitationId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The value that is used to validate the administrator account
            to the member account.
        RelationshipStatus:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The status of the relationship between the administrator and
            member accounts.
        InvitedAt:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The timestamp when the invitation was sent.
      description: Contains information about the administrator account and invitation.
    AffectedResources:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/String'
    AgentDetails:
      type: object
      properties:
        Version:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Version of the installed GuardDuty security agent.
      description: Information about the installed GuardDuty security agent.
    Anomaly:
      type: object
      properties:
        Profiles:
          allOf:
          - $ref: '#/components/schemas/AnomalyProfiles'
          description: Information about the types of profiles.
        Unusual:
          allOf:
          - $ref: '#/components/schemas/AnomalyUnusual'
          description: Information about the behavior of the anomalies.
      description: Contains information about the anomalies.
    AnomalyObject:
      type: object
      properties:
        ProfileType:
          allOf:
          - $ref: '#/components/schemas/ProfileType'
          description: The type of behavior of the profile.
        ProfileSubtype:
          allOf:
          - $ref: '#/components/schemas/ProfileSubtype'
          description: The frequency of the anomaly.
        Observations:
          allOf:
          - $ref: '#/components/schemas/Observations'
          description: The recorded value.
      description: Contains information about the unusual anomalies.
    AnomalyProfileFeatureObjects:
      type: array
      items:
        $ref: '#/components/schemas/AnomalyObject'
    AnomalyProfileFeatures:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/AnomalyProfileFeatureObjects'
    AnomalyProfiles:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/AnomalyProfileFeatures'
    AnomalyUnusual:
      type: object
      properties:
        Behavior:
          allOf:
          - $ref: '#/components/schemas/Behavior'
          description: The behavior of the anomalous activity that caused GuardDuty
            to generate the finding.
      description: Contains information about the behavior of the anomaly that is
        new to GuardDuty.
    AnomalyUnusualBehaviorFeature:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/AnomalyObject'
    ArchiveFindingsRequest:
      type: object
      properties:
        DetectorId:
          allOf:
          - $ref: '#/components/schemas/DetectorId'
          description: 'The ID of the detector that specifies the GuardDuty service
            whose findings you want to archive.


            To find the `detectorId` in the current Region, see the Settings page
            in the GuardDuty console, or run the [ListDetectors](https://docs.aws.amazon.com/guardduty/latest/APIReference/API_ListDetectors.html)
            API.'
        FindingIds:
          allOf:
          - $ref: '#/components/schemas/FindingIds'
          description: The IDs of the findings that you want to archive.
      required:
      - DetectorId
      - FindingIds
    ArchiveFindingsResponse:
      type: object
      properties: {}
    AutoEnableMembers:
      type: string
      enum:
      - NEW
      - ALL
      - NONE
    AutonomousSystem:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Name associated with the Autonomous System (AS).
        Number:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The unique number that identifies the Autonomous System (AS).
      required:
      - Name
      - Number
      description: Contains information about the Autonomous System (AS) associated
        with the network endpoints involved in an attack sequence.
    AwsApiCallAction:
      type: object
      properties:
        Api:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Web Services API name.
        CallerType:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Web Services API caller type.
        DomainDetails:
          allOf:
          - $ref: '#/components/schemas/DomainDetails'
          description: The domain information for the Amazon Web Services API call.
        ErrorCode:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The error code of the failed Amazon Web Services API action.
        UserAgent:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The agent through which the API request was made.
        RemoteIpDetails:
          allOf:
          - $ref: '#/components/schemas/RemoteIpDetails'
          description: The remote IP information of the connection that initiated
            the Amazon Web Services API call.
        ServiceName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Web Services service name whose API was invoked.
        RemoteAccountDetails:
          allOf:
          - $ref: '#/components/schemas/RemoteAccountDetails'
          description: The details of the Amazon Web Services account that made the
            API call. This field appears if the call was made from outside your account.
        AffectedResources:
          allOf:
          - $ref: '#/components/schemas/AffectedResources'
          description: The details of the Amazon Web Services account that made the
            API call. This field identifies the resources that were affected by this
            API call.
      description: Contains information about the API action.
    BadRequestException:
      type: object
      properties:
        Message:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The error message.
        Type:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The error type.
      description: A bad request exception object.
    Behavior:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/AnomalyUnusualBehaviorFeature'
    BlockPublicAccess:
      type: object
      properties:
        IgnorePublicAcls:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates if S3 Block Public Access is set to `IgnorePublicAcls`.
        RestrictPublicBuckets:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates if S3 Block Public Access is set to `RestrictPublicBuckets`.
        BlockPublicAcls:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates if S3 Block Public Access is set to `BlockPublicAcls`.
        BlockPublicPolicy:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates if S3 Block Public Access is set to `BlockPublicPolicy`.
      description: Contains information on how the bucker owner's S3 Block Public
        Access settings are being applied to the S3 bucket. See [S3 Block Public Access](https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html)
        for more information.
    Boolean:
      type: boolean
    BucketLevelPermissions:
      type: object
      properties:
        AccessControlList:
          allOf:
          - $ref: '#/components/schemas/AccessControlList'
          description: Contains information on how Access Control Policies are applied
            to the bucket.
        BucketPolicy:
          allOf:
          - $ref: '#/components/schemas/BucketPolicy'
          description: Contains information on the bucket policies for the S3 bucket.
        BlockPublicAccess:
          allOf:
          - $ref: '#/components/schemas/BlockPublicAccess'
          description: Contains information on which account level S3 Block Public
            Access settings are applied to the S3 bucket.
      description: Contains information about the bucket level permissions for the
        S3 bucket.
    BucketPolicy:
      type: object
      properties:
        AllowsPublicReadAccess:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: A value that indicates whether public read access for the bucket
            is enabled through a bucket policy.
        AllowsPublicWriteAccess:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: A value that indicates whether public write access for the
            bucket is enabled through a bucket policy.
      description: Contains information on the current bucket policies for the S3
        bucket.
    City:
      type: object
      properties:
        CityName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The city name of the remote IP address.
      description: Contains information about the city associated with the IP address.
    ClientToken:
      type: string
      minLength: 0
      maxLength: 64
    CloudTrailConfigurationResult:
      type: object
      properties:
        Status:
          allOf:
          - $ref: '#/components/schemas/DataSourceStatus'
          description: Describes whether CloudTrail is enabled as a data source for
            the detector.
      required:
      - Status
      description: Contains information on the status of CloudTrail as a data source
        for the detector.
    Condition:
      type: object
      properties:
        Eq:
          allOf:
          - $ref: '#/components/schemas/Eq'
          description: Represents the _equal_ condition to be applied to a single
            field when querying for findings.
        Neq:
          allOf:
          - $ref: '#/components/schemas/Neq'
          description: Represents the _not equal_ condition to be applied to a single
            field when querying for findings.
        Gt:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: Represents a _greater than_ condition to be applied to a single
            field when querying for findings.
        Gte:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: Represents a _greater than or equal_ condition to be applied
            to a single field when querying for findings.
        Lt:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: Represents a _less than_ condition to be applied to a single
            field when querying for findings.
        Lte:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: Represents a _less than or equal_ condition to be applied to
            a single field when querying for findings.
        Equals:
          allOf:
          - $ref: '#/components/schemas/Equals'
          description: Represents an _equal_ ****condition to be applied to a single
            field when querying for findings.
        NotEquals:
          allOf:
          - $ref: '#/components/schemas/NotEquals'
          description: Represents a _not equal_ ****condition to be applied to a single
            field when querying for findings.
        GreaterThan:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: Represents a _greater than_ condition to be applied to a single
            field when querying for findings.
        GreaterThanOrEqual:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: Represents a _greater than or equal_ condition to be applied
            to a single field when querying for findings.
        LessThan:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: Represents a _less than_ condition to be applied to a single
            field when querying for findings.
        LessThanOrEqual:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: Represents a _less than or equal_ condition to be applied to
            a single field when querying for findings.
      description: Contains information about the condition.
    ConflictException:
      type: object
      properties:
        Message:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The error message.
        Type:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The error type.
      description: A request conflict exception object.
    Container:
      type: object
      properties:
        ContainerRuntime:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The container runtime (such as, Docker or containerd) used
            to run the container.
        Id:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Container ID.
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Container name.
        Image:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Container image.
        ImagePrefix:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Part of the image name before the last slash. For example,
            imagePrefix for public.ecr.aws/amazonlinux/amazonlinux:latest would be
            public.ecr.aws/amazonlinux. If the image name is relative and does not
            have a slash, this field is empty.
        VolumeMounts:
          allOf:
          - $ref: '#/components/schemas/VolumeMounts'
          description: Container volume mounts.
        SecurityContext:
          allOf:
          - $ref: '#/components/schemas/SecurityContext'
          description: Container security context.
      description: Details of a container.
    ContainerInstanceDetails:
      type: object
      properties:
        CoveredContainerInstances:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: Represents the nodes in the Amazon ECS cluster that has a `HEALTHY`
            coverage status.
        CompatibleContainerInstances:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: Represents total number of nodes in the Amazon ECS cluster.
      description: Contains information about the Amazon EC2 instance that is running
        the Amazon ECS container.
    Containers:
      type: array
      items:
        $ref: '#/components/schemas/Container'
    CountByCoverageStatus:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Long'
    CountByResourceType:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Long'
    CountBySeverity:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Integer'
    Country:
      type: object
      properties:
        CountryCode:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The country code of the remote IP address.
        CountryName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The country name of the remote IP address.
      description: Contains information about the country where the remote IP address
        is located.
    CoverageEc2InstanceDetails:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon EC2 instance ID.
        InstanceType:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The instance type of the Amazon EC2 instance.
        ClusterArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The cluster ARN of the Amazon ECS cluster running on the Amazon
            EC2 instance.
        AgentDetails:
          allOf:
          - $ref: '#/components/schemas/AgentDetails'
          description: Information about the installed security agent.
        ManagementType:
          allOf:
          - $ref: '#/components/schemas/ManagementType'
          description: "Indicates how the GuardDuty security agent is managed for\
            \ this resource.\n\n  * `AUTO_MANAGED` indicates that GuardDuty deploys\
            \ and manages updates for this resource.\n\n  * `MANUAL` indicates that\
            \ you are responsible to deploy, update, and manage the GuardDuty security\
            \ agent updates for this resource.\n\nThe `DISABLED` status doesn't apply\
            \ to Amazon EC2 instances and Amazon EKS clusters."
      description: Contains information about the Amazon EC2 instance runtime coverage
        details.
    CoverageEcsClusterDetails:
      type: object
      properties:
        ClusterName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the Amazon ECS cluster.
        FargateDetails:
          allOf:
          - $ref: '#/components/schemas/FargateDetails'
          description: Information about the Fargate details associated with the Amazon
            ECS cluster.
        ContainerInstanceDetails:
          allOf:
          - $ref: '#/components/schemas/ContainerInstanceDetails'
          description: Information about the Amazon ECS container running on Amazon
            EC2 instance.
      description: Contains information about Amazon ECS cluster runtime coverage
        details.
    CoverageEksClusterDetails:
      type: object
      properties:
        ClusterName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Name of the EKS cluster.
        CoveredNodes:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: Represents the nodes within the EKS cluster that have a `HEALTHY`
            coverage status.
        CompatibleNodes:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: Represents all the nodes within the EKS cluster in your account.
        AddonDetails:
          allOf:
          - $ref: '#/components/schemas/AddonDetails'
          description: Information about the installed EKS add-on.
        ManagementType:
          allOf:
          - $ref: '#/components/schemas/ManagementType'
          description: 'Indicates how the Amazon EKS add-on GuardDuty agent is managed
            for this EKS cluster.


            `AUTO_MANAGED` indicates GuardDuty deploys and manages updates for this
            resource.


            `MANUAL` indicates that you are responsible to deploy, update, and manage
            the Amazon EKS add-on GuardDuty agent for this resource.'
      description: Information about the EKS cluster that has a coverage status.
    CoverageFilterCondition:
      type: object
      properties:
        Equals:
          allOf:
          - $ref: '#/components/schemas/Equals'
          description: Represents an equal condition that is applied to a single field
            while retrieving the coverage details.
        NotEquals:
          allOf:
          - $ref: '#/components/schemas/NotEquals'
          description: Represents a not equal condition that is applied to a single
            field while retrieving the coverage details.
      description: Represents a condition that when matched will be added to the response
        of the operation.
    CoverageFilterCriteria:
      type: object
      properties:
        FilterCriterion:
          allOf:
          - $ref: '#/components/schemas/CoverageFilterCriterionList'
          description: Represents a condition that when matched will be added to the
            response of the operation.
      description: Represents the criteria used in the filter.
    CoverageFilterCriterion:
      type: object
      properties:
        CriterionKey:
          allOf:
          - $ref: '#/components/schemas/CoverageFilterCriterionKey'
          description: 'An enum value representing possible filter fields.


            Replace the enum value `CLUSTER_NAME` with `EKS_CLUSTER_NAME`. `CLUSTER_NAME`
            has been deprecated.'
        FilterCondition:
          allOf:
          - $ref: '#/components/schemas/CoverageFilterCondition'
          description: Contains information about the condition.
      description: Represents a condition that when matched will be added to the response
        of the operation.
    CoverageFilterCriterionKey:
      type: string
      enum:
      - ACCOUNT_ID
      - CLUSTER_NAME
      - RESOURCE_TYPE
      - COVERAGE_STATUS
      - ADDON_VERSION
      - MANAGEMENT_TYPE
      - EKS_CLUSTER_NAME
      - ECS_CLUSTER_NAME
      - AGENT_VERSION
      - INSTANCE_ID
      - CLUSTER_ARN
    CoverageFilterCriterionList:
      type: array
      items:
        $ref: '#/components/schemas/CoverageFilterCriterion'
    CoverageResource:
      type: object
      properties:
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique ID of the resource.
        DetectorId:
          allOf:
          - $ref: '#/components/schemas/DetectorId'
          description: The unique ID of the GuardDuty detector associated with the
            resource.
        AccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The unique ID of the Amazon Web Services account.
        ResourceDetails:
          allOf:
          - $ref: '#/components/schemas/CoverageResourceDetails'
          description: Information about the resource for which the coverage statistics
            are retrieved.
        CoverageStatus:
          allOf:
          - $ref: '#/components/schemas/CoverageStatus'
          description: Represents the status of the EKS cluster coverage.
        Issue:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Represents the reason why a coverage status was `UNHEALTHY`
            for the EKS cluster.
        UpdatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp at which the coverage details for the resource
            were last updated. This is in UTC format.
      description: Information about the resource of the GuardDuty account.
    CoverageResourceDetails:
      type: object
      properties:
        EksClusterDetails:
          allOf:
          - $ref: '#/components/schemas/CoverageEksClusterDetails'
          description: EKS cluster details involved in the coverage statistics.
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          description: The type of Amazon Web Services resource.
        EcsClusterDetails:
          allOf:
          - $ref: '#/components/schemas/CoverageEcsClusterDetails'
          description: Information about the Amazon ECS cluster that is assessed for
            runtime coverage.
        Ec2InstanceDetails:
          allOf:
          - $ref: '#/components/schemas/CoverageEc2InstanceDetails'
          description: Information about the Amazon EC2 instance assessed for runtime
            coverage.
      description: Information about the resource for each individual EKS cluster.
    CoverageResources:
      type: array
      items:
        $ref: '#/components/schemas/CoverageResource'
    CoverageSortCriteria:
      type: object
      properties:
        AttributeName:
          allOf:
          - $ref: '#/components/schemas/CoverageSortKey'
          description: 'Represents the field name used to sort the coverage details.


            Replace the enum value `CLUSTER_NAME` with `EKS_CLUSTER_NAME`. `CLUSTER_NAME`
            has been deprecated.'
        OrderBy:
          allOf:
          - $ref: '#/components/schemas/OrderBy'
          description: The order in which the sorted findings are to be displayed.
      description: Information about the sorting criteria used in the coverage statistics.
    CoverageSortKey:
      type: string
      enum:
      - ACCOUNT_ID
      - CLUSTER_NAME
      - COVERAGE_STATUS
      - ISSUE
      - ADDON_VERSION
      - UPDATED_AT
      - EKS_CLUSTER_NAME
      - ECS_CLUSTER_NAME
      - INSTANCE_ID
    CoverageStatistics:
      type: object
      properties:
        CountByResourceType:
          allOf:
          - $ref: '#/components/schemas/CountByResourceType'
          description: Represents coverage statistics for EKS clusters aggregated
            by resource type.
        CountByCoverageStatus:
          allOf:
          - $ref: '#/components/schemas/CountByCoverageStatus'
          description: Represents coverage statistics for EKS clusters aggregated
            by coverage status.
      description: Information about the coverage statistics for a resource.
    CoverageStatisticsType:
      type: string
      enum:
      - COUNT_BY_RESOURCE_TYPE
      - COUNT_BY_COVERAGE_STATUS
    CoverageStatisticsTypeList:
      type: array
      items:
        $ref: '#/components/schemas/CoverageStatisticsType'
    CoverageStatus:
      type: string
      enum:
      - HEALTHY
      - UNHEALTHY
    CreateDetectorRequest:
      type: object
      properties:
        Enable:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: A Boolean value that specifies whether the detector is to be
            enabled.
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: The idempotency token for the create request.
        FindingPublishingFrequency:
          allOf:
          - $ref: '#/components/schemas/FindingPublishingFrequency'
          description: A value that specifies how frequently updated findings are
            exported.
        DataSources:
          allOf:
          - $ref: '#/components/schemas/DataSourceConfigurations'
          description: 'Describes which data sources will be enabled for the detector.


            There might be regional differences because some data sources might not
            be available in all the Amazon Web Services Regions where GuardDuty is
            presently supported. For more information, see [Regions and endpoints](https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_regions.html).'
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The tags to be added to a new detector resource.
        Features:
          allOf:
          - $ref: '#/components/schemas/DetectorFeatureConfigurations'
          description: A list of features that will be configured for the detector.
      required:
      - Enable
    CreateDetectorResponse:
      type: object
      properties:
        DetectorId:
          allOf:
          - $ref: '#/components/schemas/DetectorId'
          description: The unique ID of the created detector.
        UnprocessedDataSources:
          allOf:
          - $ref: '#/components/schemas/UnprocessedDataSourcesResult'
          description: Specifies the data sources that couldn't be enabled when GuardDuty
            was enabled for the first time.
    CreateFilterRequest:
      type: object
      properties:
        DetectorId:
          allOf:
          - $ref: '#/components/schemas/DetectorId'
          description: 'The detector ID associated with the GuardDuty account for
            which you want to create a filter.


            To find the `detectorId` in the current Region, see the Settings page
            in the GuardDuty console, or run the [ListDetectors](https://docs.aws.amazon.com/guardduty/latest/APIReference/API_ListDetectors.html)
            API.'
        Name:
          allOf:
          - $ref: '#/components/schemas/FilterName'
          description: The name of the filter. Valid characters include period (.),
            underscore (_), dash (-), and alphanumeric characters. A whitespace is
            considered to be an invalid character.
        Description:
          allOf:
          - $ref: '#/components/schemas/FilterDescription'
          description: The description of the filter. Valid characters include alphanumeric
            characters, and special characters such as hyphen, period, colon, underscore,
            parentheses (`{ }`, `[ ]`, and `( )`), forward slash, horizontal tab,
            vertical tab, newline, form feed, return, and whitespace.
        Action:
          allOf:
          - $ref: '#/components/schemas/FilterAction'
          description: Specifies the action that is to be applied to the findings
            that match the filter.
        Rank:
          allOf:
          - $ref: '#/components/schemas/FilterRank'
          description: Specifies the position of the filter in the list of current
            filters. Also specifies the order in which this filter is applied to the
            findings.
        FindingCriteria:
          allOf:
          - $ref: '#/components/schemas/FindingCriteria'
          description: "Represents the criteria to be used in the filter for querying\
            \ findings.\n\nYou can only use the following attributes to query findings:\n\
            \n  * accountId\n\n  * id\n\n  * region\n\n  * severity\n\nTo filter on\
            \ the basis of severity, the API and CLI use the following input list\
            \ for the [FindingCriteria](https://docs.aws.amazon.com/guardduty/latest/APIReference/API_FindingCriteria.html)\
            \ condition:\n\n    * **Low** : `[\"1\", \"2\", \"3\"]`\n\n    * **Medium**\
            \ : `[\"4\", \"5\", \"6\"]`\n\n    * **High** : `[\"7\", \"8\"]`\n\n \
            \   * **Critical** : `[\"9\", \"10\"]`\n\nFor more information, see [Findings\
            \ severity levels](https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_findings-severity.html)\
            \ in the _Amazon GuardDuty User Guide_.\n\n  * type\n\n  * updatedAt\n\
            \nType: ISO 8601 string format: YYYY-MM-DDTHH:MM:SS.SSSZ or YYYY-MM-DDTHH:MM:SSZ\
            \ depending on whether the value contains milliseconds.\n\n  * resource.accessKeyDetails.accessKeyId\n\
            \n  * resource.accessKeyDetails.principalId\n\n  * resource.accessKeyDetails.userName\n\
            \n  * resource.accessKeyDetails.userType\n\n  * resource.instanceDetails.iamInstanceProfile.id\n\
            \n  * resource.instanceDetails.imageId\n\n  * resource.instanceDetails.instanceId\n\
            \n  * resource.instanceDetails.tags.key\n\n  * resource.instanceDetails.tags.value\n\
            \n  * resource.instanceDetails.networkInterfaces.ipv6Addresses\n\n  *\
            \ resource.instanceDetails.networkInterfaces.privateIpAddresses.privateIpAddress\n\
            \n  * resource.instanceDetails.networkInterfaces.publicDnsName\n\n  *\
            \ resource.instanceDetails.networkInterfaces.publicIp\n\n  * resource.instanceDetails.networkInterfaces.securityGroups.groupId\n\
            \n  * resource.instanceDetails.networkInterfaces.securityGroups.groupName\n\
            \n  * resource.instanceDetails.networkInterfaces.subnetId\n\n  * resource.instanceDetails.networkInterfaces.vpcId\n\
            \n  * resource.instanceDetails.outpostArn\n\n  * resource.resourceType\n\
            \n  * resource.s3BucketDetails.publicAccess.effectivePermissions\n\n \
            \ * resource.s3BucketDetails.name\n\n  * resource.s3BucketDetails.tags.key\n\
            \n  * resource.s3BucketDetails.tags.value\n\n  * resource.s3BucketDetails.type\n\
            \n  * service.action.actionType\n\n  * service.action.awsApiCallAction.api\n\
            \n  * service.action.awsApiCallAction.callerType\n\n  * service.action.awsApiCallAction.errorCode\n\
            \n  * service.action.awsApiCallAction.remoteIpDetails.city.cityName\n\n\
            \  * service.action.awsApiCallAction.remoteIpDetails.country.countryName\n\
            \n  * service.action.awsApiCallAction.remoteIpDetails.ipAddressV4\n\n\
            \  * service.action.awsApiCallAction.remoteIpDetails.ipAddressV6\n\n \
            \ * service.action.awsApiCallAction.remoteIpDetails.organization.asn\n\
            \n  * service.action.awsApiCallAction.remoteIpDetails.organization.asnOrg\n\
            \n  * service.action.awsApiCallAction.serviceName\n\n  * service.action.dnsRequestAction.domain\n\
            \n  * service.action.dnsRequestAction.domainWithSuffix\n\n  * service.action.networkConnectionAction.blocked\n\
            \n  * service.action.networkConnectionAction.connectionDirection\n\n \
            \ * service.action.networkConnectionAction.localPortDetails.port\n\n \
            \ * service.action.networkConnectionAction.protocol\n\n  * service.action.networkConnectionAction.remoteIpDetails.city.cityName\n\
            \n  * service.action.networkConnectionAction.remoteIpDetails.country.countryName\n\
            \n  * service.action.networkConnectionAction.remoteIpDetails.ipAddressV4\n\
            \n  * service.action.networkConnectionAction.remoteIpDetails.ipAddressV6\n\
            \n  * service.action.networkConnectionAction.remoteIpDetails.organization.asn\n\
            \n  * service.action.networkConnectionAction.remoteIpDetails.organization.asnOrg\n\
            \n  * service.action.networkConnectionAction.remotePortDetails.port\n\n\
            \  * service.action.awsApiCallAction.remoteAccountDetails.affiliated\n\
            \n  * service.action.kubernetesApiCallAction.remoteIpDetails.ipAddressV4\n\
            \n  * service.action.kubernetesApiCallAction.remoteIpDetails.ipAddressV6\n\
            \n  * service.action.kubernetesApiCallAction.namespace\n\n  * service.action.kubernetesApiCallAction.remoteIpDetails.organization.asn\n\
            \n  * service.action.kubernetesApiCallAction.requestUri\n\n  * service.action.kubernetesApiCallAction.statusCode\n\
            \n  * service.action.networkConnectionAction.localIpDetails.ipAddressV4\n\
            \n  * service.action.networkConnectionAction.localIpDetails.ipAddressV6\n\
            \n  * service.action.networkConnectionAction.protocol\n\n  * service.action.awsApiCallAction.serviceName\n\
            \n  * service.action.awsApiCallAction.remoteAccountDetails.accountId\n\
            \n  * service.additionalInfo.threatListName\n\n  * service.resourceRole\n\
            \n  * resource.eksClusterDetails.name\n\n  * resource.kubernetesDetails.kubernetesWorkloadDetails.name\n\
            \n  * resource.kubernetesDetails.kubernetesWorkloadDetails.namespace\n\
            \n  * resource.kubernetesDetails.kubernetesUserDetails.username\n\n  *\
            \ resource.kubernetesDetails.kubernetesWorkloadDetails.containers.image\n\
            \n  * resource.kubernetesDetails.kubernetesWorkloadDetails.containers.imagePrefix\n\
            \n  * service.ebsVolumeScanDetails.scanId\n\n  * service.ebsVolumeScanDetails.scanDetections.threatDetectedByName.threatNames.name\n\
            \n  * service.ebsVolumeScanDetails.scanDetections.threatDetectedByName.threatNames.severity\n\
            \n  * service.ebsVolumeScanDetails.scanDetections.threatDetectedByName.threatNames.filePaths.hash\n\
            \n  * resource.ecsClusterDetails.name\n\n  * resource.ecsClusterDetails.taskDetails.containers.image\n\
            \n  * resource.ecsClusterDetails.taskDetails.definitionArn\n\n  * resource.containerDetails.image\n\
            \n  * resource.rdsDbInstanceDetails.dbInstanceIdentifier\n\n  * resource.rdsDbInstanceDetails.dbClusterIdentifier\n\
            \n  * resource.rdsDbInstanceDetails.engine\n\n  * resource.rdsDbUserDetails.user\n\
            \n  * resource.rdsDbInstanceDetails.tags.key\n\n  * resource.rdsDbInstanceDetails.tags.value\n\
            \n  * service.runtimeDetails.process.executableSha256\n\n  * service.runtimeDetails.process.name\n\
            \n  * service.runtimeDetails.process.executablePath\n\n  * resource.lambdaDetails.functionName\n\
            \n  * resource.lambdaDetails.functionArn\n\n  * resource.lambdaDetails.tags.key\n\
            \n  * resource.lambdaDetails.tags.value"
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: The idempotency token for the create request.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The tags to be added to a new filter resource.
      required:
      - DetectorId
      - Name
      - FindingCriteria
    CreateFilterResponse:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/FilterName'
          description: The name of the successfully created filter.
      required:
      - Name
    CreateIPSetRequest:
      type: object
      properties:
        DetectorId:
          allOf:
          - $ref: '#/components/schemas/DetectorId'
          description: 'The unique ID of the detector of the GuardDuty account for
            which you want to create an IPSet.


            To find the `detectorId` in the current Region, see the Settings page
            in the GuardDuty console, or run the [ListDetectors](https://docs.aws.amazon.com/guardduty/latest/APIReference/API_ListDetectors.html)
            API.'
        Name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: 'The user-friendly name to identify the IPSet.


            Allowed characters are alphanumeric, whitespace, dash (-), and underscores
            (_).'
        Format:
          allOf:
          - $ref: '#/components/schemas/IpSetFormat'
          description: The format of the file that contains the IPSet.
        Location:
          allOf:
          - $ref: '#/components/schemas/Location'
          description: The URI of the file that contains the IPSet.
        Activate:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: A Boolean value that indicates whether GuardDuty is to start
            using the uploaded IPSet.
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: The idempotency token for the create request.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The tags to be added to a new IP set resource.
      required:
      - DetectorId
      - Name
      - Format
      - Location
      - Activate
    CreateIPSetResponse:
      type: object
      properties:
        IpSetId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the IPSet resource.
      required:
      - IpSetId
    CreateMalwareProtectionPlanRequest:
      type: object
      properties:
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: The idempotency token for the create request.
        Role:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Amazon Resource Name (ARN) of the IAM role that has the permissions
            to scan and add tags to the associated protected resource.
        ProtectedResource:
          allOf:
          - $ref: '#/components/schemas/CreateProtectedResource'
          description: Information about the protected resource that is associated
            with the created Malware Protection plan. Presently, `S3Bucket` is the
            only supported protected resource.
        Actions:
          allOf:
          - $ref: '#/components/schemas/MalwareProtectionPlanActions'
          description: Information about whether the tags will be added to the S3
            object after scanning.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: Tags added to the Malware Protection plan resource.
      required:
      - Role
      - ProtectedResource
    CreateMalwareProtectionPlanResponse:
      type: object
      properties:
        MalwareProtectionPlanId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A unique identifier associated with the Malware Protection
            plan resource.
    CreateMembersRequest:
      type: object
      properties:
        DetectorId:
          allOf:
          - $ref: '#/components/schemas/DetectorId'
          description: 'The unique ID of the detector of the GuardDuty account for
            which you want to associate member accounts.


            To find the `detectorId` in the current Region, see the Settings page
            in the GuardDuty console, or run the [ListDetectors](https://docs.aws.amazon.com/guardduty/latest/APIReference/API_ListDetectors.html)
            API.'
        AccountDetails:
          allOf:
          - $ref: '#/components/schemas/AccountDetails'
          description: A list of account ID and email address pairs of the accounts
            that you want to associate with the GuardDuty administrator account.
      required:
      - DetectorId
      - AccountDetails
    CreateMembersResponse:
      type: object
      properties:
        UnprocessedAccounts:
          allOf:
          - $ref: '#/components/schemas/UnprocessedAccounts'
          description: A list of objects that include the `accountIds` of the unprocessed
            accounts and a result string that explains why each was unprocessed.
      required:
      - UnprocessedAccounts
    CreateProtectedResource:
      type: object
      properties:
        S3Bucket:
          allOf:
          - $ref: '#/components/schemas/CreateS3BucketResource'
          description: Information about the protected S3 bucket resource.
      description: Information about the protected resource that is associated with
        the created Malware Protection plan. Presently, `S3Bucket` is the only supported
        protected resource.
    CreatePublishingDestinationRequest:
      type: object
      properties:
        DetectorId:
          allOf:
          - $ref: '#/components/schemas/DetectorId'
          description: 'The ID of the GuardDuty detector associated with the publishing
            destination.


            To find the `detectorId` in the current Region, see the Settings page
            in the GuardDuty console, or run the [ListDetectors](https://docs.aws.amazon.com/guardduty/latest/APIReference/API_ListDetectors.html)
            API.'
        DestinationType:
          allOf:
          - $ref: '#/components/schemas/DestinationType'
          description: The type of resource for the publishing destination. Currently
            only Amazon S3 buckets are supported.
        DestinationProperties:
          allOf:
          - $ref: '#/components/schemas/DestinationProperties'
          description: The properties of the publishing destination, including the
            ARNs for the destination and the KMS key used for encryption.
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: The idempotency token for the request.
      required:
      - DetectorId
      - DestinationType
      - DestinationProperties
    CreatePublishingDestinationResponse:
      type: object
      properties:
        DestinationId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the publishing destination that is created.
      required:
      - DestinationId
    CreateS3BucketResource:
      type: object
      properties:
        BucketName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Name of the S3 bucket.
        ObjectPrefixes:
          allOf:
          - $ref: '#/components/schemas/MalwareProtectionPlanObjectPrefixesList'
          description: Information about the specified object prefixes. The S3 object
            will be scanned only if it belongs to any of the specified object prefixes.
      description: Information about the protected S3 bucket resource.
    CreateSampleFindingsRequest:
      type: object
      properties:
        DetectorId:
          allOf:
          - $ref: '#/components/schemas/DetectorId'
          description: 'The ID of the detector for which you need to create sample
            findings.


            To find the `detectorId` in the current Region, see the Settings page
            in the GuardDuty console, or run the [ListDetectors](https://docs.aws.amazon.com/guardduty/latest/APIReference/API_ListDetectors.html)
            API.'
        FindingTypes:
          allOf:
          - $ref: '#/components/schemas/FindingTypes'
          description: The types of sample findings to generate.
      required:
      - DetectorId
    CreateSampleFindingsResponse:
      type: object
      properties: {}
    CreateThreatIntelSetRequest:
      type: object
      properties:
        DetectorId:
          allOf:
          - $ref: '#/components/schemas/DetectorId'
          description: 'The unique ID of the detector of the GuardDuty account for
            which you want to create a `ThreatIntelSet`.


            To find the `detectorId` in the current Region, see the Settings page
            in the GuardDuty console, or run the [ListDetectors](https://docs.aws.amazon.com/guardduty/latest/APIReference/API_ListDetectors.html)
            API.'
        Name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: A user-friendly ThreatIntelSet name displayed in all findings
            that are generated by activity that involves IP addresses included in
            this ThreatIntelSet.
        Format:
          allOf:
          - $ref: '#/components/schemas/ThreatIntelSetFormat'
          description: The format of the file that contains the ThreatIntelSet.
        Location:
          allOf:
          - $ref: '#/components/schemas/Location'
          description: The URI of the file that contains the ThreatIntelSet.
        Activate:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: A Boolean value that indicates whether GuardDuty is to start
            using the uploaded ThreatIntelSet.
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: The idempotency token for the create request.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The tags to be added to a new threat list resource.
      required:
      - DetectorId
      - Name
      - Format
      - Location
      - Activate
    CreateThreatIntelSetResponse:
      type: object
      properties:
        ThreatIntelSetId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the ThreatIntelSet resource.
      required:
      - ThreatIntelSetId
    Criterion:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Condition'
    CriterionKey:
      type: string
      enum:
      - EC2_INSTANCE_ARN
      - SCAN_ID
      - ACCOUNT_ID
      - GUARDDUTY_FINDING_ID
      - SCAN_START_TIME
      - SCAN_STATUS
      - SCAN_TYPE
    DNSLogsConfigurationResult:
      type: object
      properties:
        Status:
          allOf:
          - $ref: '#/components/schemas/DataSourceStatus'
          description: Denotes whether DNS logs is enabled as a data source.
      required:
      - Status
      description: Contains information on the status of DNS logs as a data source.
    DataSource:
      type: string
      enum:
      - FLOW_LOGS
      - CLOUD_TRAIL
      - DNS_LOGS
      - S3_LOGS
      - KUBERNETES_AUDIT_LOGS
      - EC2_MALWARE_SCAN
    DataSourceConfigurations:
      type: object
      properties:
        S3Logs:
          allOf:
          - $ref: '#/components/schemas/S3LogsConfiguration'
          description: Describes whether S3 data event logs are enabled as a data
            source.
        Kubernetes:
          allOf:
          - $ref: '#/components/schemas/KubernetesConfiguration'
          description: Describes whether any Kubernetes logs are enabled as data sources.
        MalwareProtection:
          allOf:
          - $ref: '#/components/schemas/MalwareProtectionConfiguration'
          description: Describes whether Malware Protection is enabled as a data source.
      description: Contains information about which data sources are enabled.
    DataSourceConfigurationsResult:
      type: object
      properties:
        CloudTrail:
          allOf:
          - $ref: '#/components/schemas/CloudTrailConfigurationResult'
          description: An object that contains information on the status of CloudTrail
            as a data source.
        DNSLogs:
          allOf:
          - $ref: '#/components/schemas/DNSLogsConfigurationResult'
          description: An object that contains information on the status of DNS logs
            as a data source.
        FlowLogs:
          allOf:
          - $ref: '#/components/schemas/FlowLogsConfigurationResult'
          description: An object that contains information on the status of VPC flow
            logs as a data source.
        S3Logs:
          allOf:
          - $ref: '#/components/schemas/S3LogsConfigurationResult'
          description: An object that contains information on the status of S3 Data
            event logs as a data source.
        Kubernetes:
          allOf:
          - $ref: '#/components/schemas/KubernetesConfigurationResult'
          description: An object that contains information on the status of all Kubernetes
            data sources.
        MalwareProtection:
          allOf:
          - $ref: '#/components/schemas/MalwareProtectionConfigurationResult'
          description: Describes the configuration of Malware Protection data sources.
      required:
      - CloudTrail
      - DNSLogs
      - FlowLogs
      - S3Logs
      description: Contains information on the status of data sources for the detector.
    DataSourceFreeTrial:
      type: object
      properties:
        FreeTrialDaysRemaining:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: A value that specifies the number of days left to use each
            enabled data source.
      description: Contains information about which data sources are enabled for the
        GuardDuty member account.
    DataSourceList:
      type: array
      items:
        $ref: '#/components/schemas/DataSource'
    DataSourceStatus:
      type: string
      enum:
      - ENABLED
      - DISABLED
    DataSourcesFreeTrial:
      type: object
      properties:
        CloudTrail:
          allOf:
          - $ref: '#/components/schemas/DataSourceFreeTrial'
          description: Describes whether any Amazon Web Services CloudTrail management
            event logs are enabled as data sources.
        DnsLogs:
          allOf:
          - $ref: '#/components/schemas/DataSourceFreeTrial'
          description: Describes whether any DNS logs are enabled as data sources.
        FlowLogs:
          allOf:
          - $ref: '#/components/schemas/DataSourceFreeTrial'
          description: Describes whether any VPC Flow logs are enabled as data sources.
        S3Logs:
          allOf:
          - $ref: '#/components/schemas/DataSourceFreeTrial'
          description: Describes whether any S3 data event logs are enabled as data
            sources.
        Kubernetes:
          allOf:
          - $ref: '#/components/schemas/KubernetesDataSourceFreeTrial'
          description: Describes whether any Kubernetes logs are enabled as data sources.
        MalwareProtection:
          allOf:
          - $ref: '#/components/schemas/MalwareProtectionDataSourceFreeTrial'
          description: Describes whether Malware Protection is enabled as a data source.
      description: Contains information about which data sources are enabled for the
        GuardDuty member account.
    DateStatistics:
      type: object
      properties:
        Date:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: 'The timestamp when the total findings count is observed.


            For example, `Date` would look like `"2024-09-05T17:00:00-07:00"` whereas
            `LastGeneratedAt` would look like 2024-09-05T17:12:29-07:00".'
        LastGeneratedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp at which the last finding in the findings count,
            was generated.
        Severity:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: The severity of the findings generated on each date.
        TotalFindings:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The total number of findings that were generated per severity
            level on each date.
      description: Represents list a map of dates with a count of total findings generated
        on each date.
    DeclineInvitationsRequest:
      type: object
      properties:
        AccountIds:
          allOf:
          - $ref: '#/components/schemas/AccountIds'
          description: A list of account IDs of the Amazon Web Services accounts that
            sent invitations to the current member account that you want to decline
            invitations from.
      required:
      - AccountIds
    DeclineInvitationsResponse:
      type: object
      properties:
        UnprocessedAccounts:
          allOf:
          - $ref: '#/components/schemas/UnprocessedAccounts'
          description: A list of objects that contain the unprocessed account and
            a result string that explains why it was unprocessed.
      required:
      - UnprocessedAccounts
    DefaultServerSideEncryption:
      type: object
      properties:
        EncryptionType:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The type of encryption used for objects within the S3 bucket.
        KmsMasterKeyArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) of the KMS encryption key. Only
            available if the bucket `EncryptionType` is `aws:kms`.
      description: Contains information on the server side encryption method used
        in the S3 bucket. See [S3 Server-Side Encryption](https://docs.aws.amazon.com/AmazonS3/latest/dev/serv-side-encryption.html)
        for more information.
    DeleteDetectorRequest:
      type: object
      properties:
        DetectorId:
          allOf:
          - $ref: '#/components/schemas/DetectorId'
          description: 'The unique ID of the detector that you want to delete.


            To find the `detectorId` in the current Region, see the Settings page
            in the GuardDuty console, or run the [ListDetectors](https://docs.aws.amazon.com/guardduty/latest/APIReference/API_ListDetectors.html)
            API.'
      required:
      - DetectorId
    DeleteDetectorResponse:
      type: object
      properties: {}
    DeleteFilterRequest:
      type: object
      properties:
        DetectorId:
          allOf:
          - $ref: '#/components/schemas/DetectorId'
          description: 'The unique ID of the detector that is associated with the
            filter.


            To find the `detectorId` in the current Region, see the Settings page
            in the GuardDuty console, or run the [ListDetectors](https://docs.aws.amazon.com/guardduty/latest/APIReference/API_ListDetectors.html)
            API.'
        FilterName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the filter that you want to delete.
      required:
      - DetectorId
      - FilterName
    DeleteFilterResponse:
      type: object
      properties: {}
    DeleteIPSetRequest:
      type: object
      properties:
        DetectorId:
          allOf:
          - $ref: '#/components/schemas/DetectorId'
          description: 'The unique ID of the detector associated with the IPSet.


            To find the `detectorId` in the current Region, see the Settings page
            in the GuardDuty console, or run the [ListDetectors](https://docs.aws.amazon.com/guardduty/latest/APIReference/API_ListDetectors.html)
            API.'
        IpSetId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique ID of the IPSet to delete.
      required:
      - DetectorId
      - IpSetId
    DeleteIPSetResponse:
      type: object
      properties: {}
    DeleteInvitationsRequest:
      type: object
      properties:
        AccountIds:
          allOf:
          - $ref: '#/components/schemas/AccountIds'
          description: A list of account IDs of the Amazon Web Services accounts that
            sent invitations to the current member account that you want to delete
            invitations from.
      required:
      - AccountIds
    DeleteInvitationsResponse:
      type: object
      properties:
        UnprocessedAccounts:
          allOf:
          - $ref: '#/components/schemas/UnprocessedAccounts'
          description: A list of objects that contain the unprocessed account and
            a result string that explains why it was unprocessed.
      required:
      - UnprocessedAccounts
    DeleteMalwareProtectionPlanRequest:
      type: object
      properties:
        MalwareProtectionPlanId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A unique identifier associated with Malware Protection plan
            resource.
      required:
      - MalwareProtectionPlanId
    DeleteMembersRequest:
      type: object
      properties:
        DetectorId:
          allOf:
          - $ref: '#/components/schemas/DetectorId'
          description: 'The unique ID of the detector of the GuardDuty account whose
            members you want to delete.


            To find the `detectorId` in the current Region, see the Settings page
            in the GuardDuty console, or run the [ListDetectors](https://docs.aws.amazon.com/guardduty/latest/APIReference/API_ListDetectors.html)
            API.'
        AccountIds:
          allOf:
          - $ref: '#/components/schemas/AccountIds'
          description: A list of account IDs of the GuardDuty member accounts that
            you want to delete.
      required:
      - DetectorId
      - AccountIds
    DeleteMembersResponse:
      type: object
      properties:
        UnprocessedAccounts:
          allOf:
          - $ref: '#/components/schemas/UnprocessedAccounts'
          description: The accounts that could not be processed.
      required:
      - UnprocessedAccounts
    DeletePublishingDestinationRequest:
      type: object
      properties:
        DetectorId:
          allOf:
          - $ref: '#/components/schemas/DetectorId'
          description: 'The unique ID of the detector associated with the publishing
            destination to delete.


            To find the `detectorId` in the current Region, see the Settings page
            in the GuardDuty console, or run the [ListDetectors](https://docs.aws.amazon.com/guardduty/latest/APIReference/API_ListDetectors.html)
            API.'
        DestinationId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the publishing destination to delete.
      required:
      - DetectorId
      - DestinationId
    DeletePublishingDestinationResponse:
      type: object
      properties: {}
    DeleteThreatIntelSetRequest:
      type: object
      properties:
        DetectorId:
          allOf:
          - $ref: '#/components/schemas/DetectorId'
          description: 'The unique ID of the detector that is associated with the
            threatIntelSet.


            To find the `detectorId` in the current Region, see the Settings page
            in the GuardDuty console, or run the [ListDetectors](https://docs.aws.amazon.com/guardduty/latest/APIReference/API_ListDetectors.html)
            API.'
        ThreatIntelSetId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique ID of the threatIntelSet that you want to delete.
      required:
      - DetectorId
      - ThreatIntelSetId
    DeleteThreatIntelSetResponse:
      type: object
      properties: {}
    DescribeMalwareScansRequest:
      type: object
      properties:
        DetectorId:
          allOf:
          - $ref: '#/components/schemas/DetectorId'
          description: 'The unique ID of the detector that the request is associated
            with.


            To find the `detectorId` in the current Region, see the Settings page
            in the GuardDuty console, or run the [ListDetectors](https://docs.aws.amazon.com/guardduty/latest/APIReference/API_ListDetectors.html)
            API.'
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: You can use this parameter when paginating results. Set the
            value of this parameter to null on your first call to the list action.
            For subsequent calls to the action, fill nextToken in the request with
            the value of NextToken from the previous response to continue listing
            data.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/IntegerValueWithMax'
          description: You can use this parameter to indicate the maximum number of
            items that you want in the response. The default value is 50. The maximum
            value is 50.
        FilterCriteria:
          allOf:
          - $ref: '#/components/schemas/FilterCriteria'
          description: Represents the criteria to be used in the filter for describing
            scan entries.
        SortCriteria:
          allOf:
          - $ref: '#/components/schemas/SortCriteria'
          description: Represents the criteria used for sorting scan entries. The
            [ `attributeName` ](https://docs.aws.amazon.com/guardduty/latest/APIReference/API_SortCriteria.html#guardduty-Type-SortCriteria-attributeName)
            is required and it must be `scanStartTime`.
      required:
      - DetectorId
    DescribeMalwareScansResponse:
      type: object
      properties:
        Scans:
          allOf:
          - $ref: '#/components/schemas/Scans'
          description: Contains information about malware scans associated with GuardDuty
            Malware Protection for EC2.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The pagination parameter to be used on the next list operation
            to retrieve more items.
      required:
      - Scans
    DescribeOrganizationConfigurationRequest:
      type: object
      properties:
        DetectorId:
          allOf:
          - $ref: '#/components/schemas/DetectorId'
          description: 'The detector ID of the delegated administrator for which you
            need to retrieve the information.


            To find the `detectorId` in the current Region, see the Settings page
            in the GuardDuty console, or run the [ListDetectors](https://docs.aws.amazon.com/guardduty/latest/APIReference/API_ListDetectors.html)
            API.'
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: You can use this parameter to indicate the maximum number of
            items that you want in the response.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: You can use this parameter when paginating results. Set the
            value of this parameter to null on your first call to the list action.
            For subsequent calls to the action, fill `nextToken` in the request with
            the value of `NextToken` from the previous response to continue listing
            data.
      required:
      - DetectorId
    DescribeOrganizationConfigurationResponse:
      type: object
      properties:
        AutoEnable:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: 'Indicates whether GuardDuty is automatically enabled for accounts
            added to the organization.


            Even though this is still supported, we recommend using `AutoEnableOrganizationMembers`
            to achieve the similar results.'
        MemberAccountLimitReached:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether the maximum number of allowed member accounts
            are already associated with the delegated administrator account for your
            organization.
        DataSources:
          allOf:
          - $ref: '#/components/schemas/OrganizationDataSourceConfigurationsResult'
          description: Describes which data sources are enabled automatically for
            member accounts.
        Features:
          allOf:
          - $ref: '#/components/schemas/OrganizationFeaturesConfigurationsResults'
          description: A list of features that are configured for this organization.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The pagination parameter to be used on the next list operation
            to retrieve more items.
        AutoEnableOrganizationMembers:
          allOf:
          - $ref: '#/components/schemas/AutoEnableMembers'
          description: "Indicates the auto-enablement configuration of GuardDuty or\
            \ any of the corresponding protection plans for the member accounts in\
            \ the organization.\n\n  * `NEW`: Indicates that when a new account joins\
            \ the organization, they will have GuardDuty or any of the corresponding\
            \ protection plans enabled automatically. \n\n  * `ALL`: Indicates that\
            \ all accounts in the organization have GuardDuty and any of the corresponding\
            \ protection plans enabled automatically. This includes `NEW` accounts\
            \ that join the organization and accounts that may have been suspended\
            \ or removed from the organization in GuardDuty.\n\n  * `NONE`: Indicates\
            \ that GuardDuty or any of the corresponding protection plans will not\
            \ be automatically enabled for any account in the organization. The administrator\
            \ must manage GuardDuty for each account in the organization individually.\n\
            \nWhen you update the auto-enable setting from `ALL` or `NEW` to `NONE`,\
            \ this action doesn't disable the corresponding option for your existing\
            \ accounts. This configuration will apply to the new accounts that join\
            \ the organization. After you update the auto-enable settings, no new\
            \ account will have the corresponding option as enabled."
      required:
      - MemberAccountLimitReached
    DescribePublishingDestinationRequest:
      type: object
      properties:
        DetectorId:
          allOf:
          - $ref: '#/components/schemas/DetectorId'
          description: 'The unique ID of the detector associated with the publishing
            destination to retrieve.


            To find the `detectorId` in the current Region, see the Settings page
            in the GuardDuty console, or run the [ListDetectors](https://docs.aws.amazon.com/guardduty/latest/APIReference/API_ListDetectors.html)
            API.'
        DestinationId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the publishing destination to retrieve.
      required:
      - DetectorId
      - DestinationId
    DescribePublishingDestinationResponse:
      type: object
      properties:
        DestinationId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the publishing destination.
        DestinationType:
          allOf:
          - $ref: '#/components/schemas/DestinationType'
          description: The type of publishing destination. Currently, only Amazon
            S3 buckets are supported.
        Status:
          allOf:
          - $ref: '#/components/schemas/PublishingStatus'
          description: The status of the publishing destination.
        PublishingFailureStartTimestamp:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: The time, in epoch millisecond format, at which GuardDuty was
            first unable to publish findings to the destination.
        DestinationProperties:
          allOf:
          - $ref: '#/components/schemas/DestinationProperties'
          description: A `DestinationProperties` object that includes the `DestinationArn`
            and `KmsKeyArn` of the publishing destination.
      required:
      - DestinationId
      - DestinationType
      - Status
      - PublishingFailureStartTimestamp
      - DestinationProperties
    Destination:
      type: object
      properties:
        DestinationId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique ID of the publishing destination.
        DestinationType:
          allOf:
          - $ref: '#/components/schemas/DestinationType'
          description: The type of resource used for the publishing destination. Currently,
            only Amazon S3 buckets are supported.
        Status:
          allOf:
          - $ref: '#/components/schemas/PublishingStatus'
          description: The status of the publishing destination.
      required:
      - DestinationId
      - DestinationType
      - Status
      description: Contains information about the publishing destination, including
        the ID, type, and status.
    DestinationProperties:
      type: object
      properties:
        DestinationArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'The ARN of the resource to publish to.


            To specify an S3 bucket folder use the following format: `arn:aws:s3:::DOC-EXAMPLE-BUCKET/myFolder/`'
        KmsKeyArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ARN of the KMS key to use for encryption.
      description: Contains the Amazon Resource Name (ARN) of the resource to publish
        to, such as an S3 bucket, and the ARN of the KMS key to use to encrypt published
        findings.
    DestinationType:
      type: string
      enum:
      - S3
    Destinations:
      type: array
      items:
        $ref: '#/components/schemas/Destination'
    Detection:
      type: object
      properties:
        Anomaly:
          allOf:
          - $ref: '#/components/schemas/Anomaly'
          description: The details about the anomalous activity that caused GuardDuty
            to generate the finding.
        Sequence:
          allOf:
          - $ref: '#/components/schemas/Sequence'
          description: The details about the attack sequence.
      description: Contains information about the detected behavior.
    DetectorAdditionalConfiguration:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/FeatureAdditionalConfiguration'
          description: Name of the additional configuration.
        Status:
          allOf:
          - $ref: '#/components/schemas/FeatureStatus'
          description: Status of the additional configuration.
      description: Information about the additional configuration for a feature in
        your GuardDuty account.
    DetectorAdditionalConfigurationResult:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/FeatureAdditionalConfiguration'
          description: Name of the additional configuration.
        Status:
          allOf:
          - $ref: '#/components/schemas/FeatureStatus'
          description: Status of the additional configuration.
        UpdatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp at which the additional configuration was last
            updated. This is in UTC format.
      description: Information about the additional configuration.
    DetectorAdditionalConfigurationResults:
      type: array
      items:
        $ref: '#/components/schemas/DetectorAdditionalConfigurationResult'
    DetectorAdditionalConfigurations:
      type: array
      items:
        $ref: '#/components/schemas/DetectorAdditionalConfiguration'
    DetectorFeature:
      type: string
      enum:
      - S3_DATA_EVENTS
      - EKS_AUDIT_LOGS
      - EBS_MALWARE_PROTECTION
      - RDS_LOGIN_EVENTS
      - EKS_RUNTIME_MONITORING
      - LAMBDA_NETWORK_LOGS
      - RUNTIME_MONITORING
    DetectorFeatureConfiguration:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/DetectorFeature'
          description: The name of the feature.
        Status:
          allOf:
          - $ref: '#/components/schemas/FeatureStatus'
          description: The status of the feature.
        AdditionalConfiguration:
          allOf:
          - $ref: '#/components/schemas/DetectorAdditionalConfigurations'
          description: Additional configuration for a resource.
      description: 'Contains information about a GuardDuty feature.


        Specifying both EKS Runtime Monitoring (`EKS_RUNTIME_MONITORING`) and Runtime
        Monitoring (`RUNTIME_MONITORING`) will cause an error. You can add only one
        of these two features because Runtime Monitoring already includes the threat
        detection for Amazon EKS resources. For more information, see [Runtime Monitoring](https://docs.aws.amazon.com/guardduty/latest/ug/runtime-monitoring.html).'
    DetectorFeatureConfigurationResult:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/DetectorFeatureResult'
          description: Indicates the name of the feature that can be enabled for the
            detector.
        Status:
          allOf:
          - $ref: '#/components/schemas/FeatureStatus'
          description: Indicates the status of the feature that is enabled for the
            detector.
        UpdatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp at which the feature object was updated.
        AdditionalConfiguration:
          allOf:
          - $ref: '#/components/schemas/DetectorAdditionalConfigurationResults'
          description: Additional configuration for a resource.
      description: 'Contains information about a GuardDuty feature.


        Specifying both EKS Runtime Monitoring (`EKS_RUNTIME_MONITORING`) and Runtime
        Monitoring (`RUNTIME_MONITORING`) will cause an error. You can add only one
        of these two features because Runtime Monitoring already includes the threat
        detection for Amazon EKS resources. For more information, see [Runtime Monitoring](https://docs.aws.amazon.com/guardduty/latest/ug/runtime-monitoring.html).'
    DetectorFeatureConfigurations:
      type: array
      items:
        $ref: '#/components/schemas/DetectorFeatureConfiguration'
    DetectorFeatureConfigurationsResults:
      type: array
      items:
        $ref: '#/components/schemas/DetectorFeatureConfigurationResult'
    DetectorFeatureResult:
      type: string
      enum:
      - FLOW_LOGS
      - CLOUD_TRAIL
      - DNS_LOGS
      - S3_DATA_EVENTS
      - EKS_AUDIT_LOGS
      - EBS_MALWARE_PROTECTION
      - RDS_LOGIN_EVENTS
      - EKS_RUNTIME_MONITORING
      - LAMBDA_NETWORK_LOGS
      - RUNTIME_MONITORING
    DetectorId:
      type: string
      minLength: 1
      maxLength: 300
    DetectorIds:
      type: array
      items:
        $ref: '#/components/schemas/DetectorId'
    DetectorStatus:
      type: string
      enum:
      - ENABLED
      - DISABLED
    DisableOrganizationAdminAccountRequest:
      type: object
      properties:
        AdminAccountId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Web Services Account ID for the organizations account
            to be disabled as a GuardDuty delegated administrator.
      required:
      - AdminAccountId
    DisableOrganizationAdminAccountResponse:
      type: object
      properties: {}
    DisassociateFromAdministratorAccountRequest:
      type: object
      properties:
        DetectorId:
          allOf:
          - $ref: '#/components/schemas/DetectorId'
          description: The unique ID of the detector of the GuardDuty member account.
      required:
      - DetectorId
    DisassociateFromAdministratorAccountResponse:
      type: object
      properties: {}
    DisassociateFromMasterAccountRequest:
      type: object
      properties:
        DetectorId:
          allOf:
          - $ref: '#/components/schemas/DetectorId'
          description: The unique ID of the detector of the GuardDuty member account.
      required:
      - DetectorId
    DisassociateFromMasterAccountResponse:
      type: object
      properties: {}
    DisassociateMembersRequest:
      type: object
      properties:
        DetectorId:
          allOf:
          - $ref: '#/components/schemas/DetectorId'
          description: The unique ID of the detector of the GuardDuty account whose
            members you want to disassociate from the administrator account.
        AccountIds:
          allOf:
          - $ref: '#/components/schemas/AccountIds'
          description: A list of account IDs of the GuardDuty member accounts that
            you want to disassociate from the administrator account.
      required:
      - DetectorId
      - AccountIds
    DisassociateMembersResponse:
      type: object
      properties:
        UnprocessedAccounts:
          allOf:
          - $ref: '#/components/schemas/UnprocessedAccounts'
          description: A list of objects that contain the unprocessed account and
            a result string that explains why it was unprocessed.
      required:
      - UnprocessedAccounts
    DnsRequestAction:
      type: object
      properties:
        Domain:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The domain information for the DNS query.
        Protocol:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The network connection protocol observed in the activity that
            prompted GuardDuty to generate the finding.
        Blocked:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether the targeted port is blocked.
        DomainWithSuffix:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The second and top level domain involved in the activity that
            potentially prompted GuardDuty to generate this finding. For a list of
            top-level and second-level domains, see [public suffix list](https://publicsuffix.org/).
      description: Contains information about the DNS_REQUEST action described in
        this finding.
    DomainDetails:
      type: object
      properties:
        Domain:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The domain information for the Amazon Web Services API call.
      description: Contains information about the domain.
    Double:
      type: number
      format: double
    EbsSnapshotPreservation:
      type: string
      enum:
      - NO_RETENTION
      - RETENTION_WITH_FINDING
    EbsVolumeDetails:
      type: object
      properties:
        ScannedVolumeDetails:
          allOf:
          - $ref: '#/components/schemas/VolumeDetails'
          description: List of EBS volumes that were scanned.
        SkippedVolumeDetails:
          allOf:
          - $ref: '#/components/schemas/VolumeDetails'
          description: List of EBS volumes that were skipped from the malware scan.
      description: Contains list of scanned and skipped EBS volumes with details.
    EbsVolumeScanDetails:
      type: object
      properties:
        ScanId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Unique Id of the malware scan that generated the finding.
        ScanStartedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: Returns the start date and time of the malware scan.
        ScanCompletedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: Returns the completion date and time of the malware scan.
        TriggerFindingId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: GuardDuty finding ID that triggered a malware scan.
        Sources:
          allOf:
          - $ref: '#/components/schemas/Sources'
          description: Contains list of threat intelligence sources used to detect
            threats.
        ScanDetections:
          allOf:
          - $ref: '#/components/schemas/ScanDetections'
          description: Contains a complete view providing malware scan result details.
        ScanType:
          allOf:
          - $ref: '#/components/schemas/ScanType'
          description: Specifies the scan type that invoked the malware scan.
      description: Contains details from the malware scan that created a finding.
    EbsVolumesResult:
      type: object
      properties:
        Status:
          allOf:
          - $ref: '#/components/schemas/DataSourceStatus'
          description: Describes whether scanning EBS volumes is enabled as a data
            source.
        Reason:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Specifies the reason why scanning EBS volumes (Malware Protection)
            was not enabled as a data source.
      description: Describes the configuration of scanning EBS volumes as a data source.
    Ec2Instance:
      type: object
      properties:
        AvailabilityZone:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The availability zone of the Amazon EC2 instance. For more
            information, see [Availability zones](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html#concepts-availability-zones)
            in the _Amazon EC2 User Guide_.
        ImageDescription:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The image description of the Amazon EC2 instance.
        InstanceState:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The state of the Amazon EC2 instance. For more information,
            see [Amazon EC2 instance state changes](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-lifecycle.html)
            in the _Amazon EC2 User Guide_.
        IamInstanceProfile:
          $ref: '#/components/schemas/IamInstanceProfile'
        InstanceType:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Type of the Amazon EC2 instance.
        OutpostArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) of the Amazon Web Services Outpost.
            This shows applicable Amazon Web Services Outposts instances.
        Platform:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The platform of the Amazon EC2 instance.
        ProductCodes:
          allOf:
          - $ref: '#/components/schemas/ProductCodes'
          description: The product code of the Amazon EC2 instance.
        Ec2NetworkInterfaceUids:
          allOf:
          - $ref: '#/components/schemas/Ec2NetworkInterfaceUids'
          description: The ID of the network interface.
      description: Details about the potentially impacted Amazon EC2 instance resource.
    Ec2NetworkInterface:
      type: object
      properties:
        Ipv6Addresses:
          allOf:
          - $ref: '#/components/schemas/Ipv6Addresses'
          description: A list of IPv6 addresses for the Amazon EC2 instance.
        PrivateIpAddresses:
          allOf:
          - $ref: '#/components/schemas/PrivateIpAddresses'
          description: Other private IP address information of the Amazon EC2 instance.
        PublicIp:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The public IP address of the Amazon EC2 instance.
        SecurityGroups:
          allOf:
          - $ref: '#/components/schemas/SecurityGroups'
          description: The security groups associated with the Amazon EC2 instance.
        SubNetId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The subnet ID of the Amazon EC2 instance.
        VpcId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The VPC ID of the Amazon EC2 instance.
      description: Contains information about the elastic network interface of the
        Amazon EC2 instance.
    Ec2NetworkInterfaceUids:
      type: array
      items:
        $ref: '#/components/schemas/String'
    EcsClusterDetails:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the ECS Cluster.
        Arn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) that identifies the cluster.
        Status:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The status of the ECS cluster.
        ActiveServicesCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of services that are running on the cluster in an
            ACTIVE state.
        RegisteredContainerInstancesCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of container instances registered into the cluster.
        RunningTasksCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of tasks in the cluster that are in the RUNNING
            state.
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: The tags of the ECS Cluster.
        TaskDetails:
          allOf:
          - $ref: '#/components/schemas/EcsTaskDetails'
          description: Contains information about the details of the ECS Task.
      description: Contains information about the details of the ECS Cluster.
    EcsTaskDetails:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) of the task.
        DefinitionArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ARN of the task definition that creates the task.
        Version:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The version counter for the task.
        TaskCreatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The Unix timestamp for the time when the task was created.
        StartedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The Unix timestamp for the time when the task started.
        StartedBy:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Contains the tag specified when a task is started.
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: The tags of the ECS Task.
        Volumes:
          allOf:
          - $ref: '#/components/schemas/Volumes'
          description: The list of data volume definitions for the task.
        Containers:
          allOf:
          - $ref: '#/components/schemas/Containers'
          description: The containers that's associated with the task.
        Group:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the task group that's associated with the task.
        LaunchType:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A capacity on which the task is running. For example, `Fargate`
            and `EC2`.
      description: Contains information about the task in an ECS cluster.
    EksClusterDetails:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: EKS cluster name.
        Arn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: EKS cluster ARN.
        VpcId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The VPC ID to which the EKS cluster is attached.
        Status:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The EKS cluster status.
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: The EKS cluster tags.
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp when the EKS cluster was created.
      description: Details about the EKS cluster involved in a Kubernetes finding.
    Email:
      type: string
      minLength: 1
      maxLength: 64
    EnableOrganizationAdminAccountRequest:
      type: object
      properties:
        AdminAccountId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Web Services account ID for the organization account
            to be enabled as a GuardDuty delegated administrator.
      required:
      - AdminAccountId
    EnableOrganizationAdminAccountResponse:
      type: object
      properties: {}
    EndpointIds:
      type: array
      items:
        $ref: '#/components/schemas/String'
    Eq:
      type: array
      items:
        $ref: '#/components/schemas/String'
    Equals:
      type: array
      items:
        $ref: '#/components/schemas/String'
    Evidence:
      type: object
      properties:
        ThreatIntelligenceDetails:
          allOf:
          - $ref: '#/components/schemas/ThreatIntelligenceDetails'
          description: A list of threat intelligence details related to the evidence.
      description: Contains information about the reason that the finding was generated.
    FargateDetails:
      type: object
      properties:
        Issues:
          allOf:
          - $ref: '#/components/schemas/Issues'
          description: Runtime coverage issues identified for the resource running
            on Amazon Web Services Fargate.
        ManagementType:
          allOf:
          - $ref: '#/components/schemas/ManagementType'
          description: "Indicates how the GuardDuty security agent is managed for\
            \ this resource.\n\n  * `AUTO_MANAGED` indicates that GuardDuty deploys\
            \ and manages updates for this resource.\n\n  * `DISABLED` indicates that\
            \ the deployment of the GuardDuty security agent is disabled for this\
            \ resource.\n\nThe `MANUAL` status doesn't apply to the Amazon Web Services\
            \ Fargate (Amazon ECS only) woprkloads."
      description: Contains information about Amazon Web Services Fargate details
        associated with an Amazon ECS cluster.
    FeatureAdditionalConfiguration:
      type: string
      enum:
      - EKS_ADDON_MANAGEMENT
      - ECS_FARGATE_AGENT_MANAGEMENT
      - EC2_AGENT_MANAGEMENT
    FeatureStatus:
      type: string
      enum:
      - ENABLED
      - DISABLED
    Feedback:
      type: string
      enum:
      - USEFUL
      - NOT_USEFUL
    FilePaths:
      type: array
      items:
        $ref: '#/components/schemas/ScanFilePath'
    FilterAction:
      type: string
      enum:
      - NOOP
      - ARCHIVE
    FilterCondition:
      type: object
      properties:
        EqualsValue:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Represents an _equal_ ****condition to be applied to a single
            field when querying for scan entries.
        GreaterThan:
          allOf:
          - $ref: '#/components/schemas/LongValue'
          description: Represents a _greater than_ condition to be applied to a single
            field when querying for scan entries.
        LessThan:
          allOf:
          - $ref: '#/components/schemas/LongValue'
          description: Represents a _less than_ condition to be applied to a single
            field when querying for scan entries.
      description: Contains information about the condition.
    FilterCriteria:
      type: object
      properties:
        FilterCriterion:
          allOf:
          - $ref: '#/components/schemas/FilterCriterionList'
          description: Represents a condition that when matched will be added to the
            response of the operation.
      description: Represents the criteria to be used in the filter for describing
        scan entries.
    FilterCriterion:
      type: object
      properties:
        CriterionKey:
          allOf:
          - $ref: '#/components/schemas/CriterionKey'
          description: 'An enum value representing possible scan properties to match
            with given scan entries.


            Replace the enum value `CLUSTER_NAME` with `EKS_CLUSTER_NAME`. `CLUSTER_NAME`
            has been deprecated.'
        FilterCondition:
          allOf:
          - $ref: '#/components/schemas/FilterCondition'
          description: Contains information about the condition.
      description: Represents a condition that when matched will be added to the response
        of the operation. Irrespective of using any filter criteria, an administrator
        account can view the scan entries for all of its member accounts. However,
        each member account can view the scan entries only for their own account.
    FilterCriterionList:
      type: array
      items:
        $ref: '#/components/schemas/FilterCriterion'
    FilterDescription:
      type: string
      minLength: 0
      maxLength: 512
    FilterName:
      type: string
      minLength: 3
      maxLength: 64
    FilterNames:
      type: array
      items:
        $ref: '#/components/schemas/FilterName'
    FilterRank:
      type: integer
      minimum: 1
      maximum: 100
    Finding:
      type: object
      properties:
        AccountId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the account in which the finding was generated.
        Arn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ARN of the finding.
        Confidence:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: The confidence score for the finding.
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The time and date when the finding was created.
        Description:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The description of the finding.
        Id:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the finding.
        Partition:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The partition associated with the finding.
        Region:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Region where the finding was generated.
        Resource:
          $ref: '#/components/schemas/Resource'
        SchemaVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The version of the schema used for the finding.
        Service:
          $ref: '#/components/schemas/Service'
        Severity:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: The severity of the finding.
        Title:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The title of the finding.
        Type:
          allOf:
          - $ref: '#/components/schemas/FindingType'
          description: The type of finding.
        UpdatedAt:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The time and date when the finding was last updated.
        AssociatedAttackSequenceArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Amazon Resource Name (ARN) associated with the attack sequence
            finding.
      required:
      - AccountId
      - Arn
      - CreatedAt
      - Id
      - Region
      - Resource
      - SchemaVersion
      - Severity
      - Type
      - UpdatedAt
      description: Contains information about the finding that is generated when abnormal
        or suspicious activity is detected.
    FindingCriteria:
      type: object
      properties:
        Criterion:
          allOf:
          - $ref: '#/components/schemas/Criterion'
          description: Represents a map of finding properties that match specified
            conditions and values when querying findings.
      description: Contains information about the criteria used for querying findings.
    FindingId:
      type: string
      minLength: 1
      maxLength: 300
    FindingIds:
      type: array
      items:
        $ref: '#/components/schemas/FindingId'
    FindingPublishingFrequency:
      type: string
      enum:
      - FIFTEEN_MINUTES
      - ONE_HOUR
      - SIX_HOURS
    FindingResourceType:
      type: string
      enum:
      - EC2_INSTANCE
      - EC2_NETWORK_INTERFACE
      - S3_BUCKET
      - S3_OBJECT
      - ACCESS_KEY
    FindingStatisticType:
      type: string
      enum:
      - COUNT_BY_SEVERITY
    FindingStatisticTypes:
      type: array
      items:
        $ref: '#/components/schemas/FindingStatisticType'
    FindingStatistics:
      type: object
      properties:
        CountBySeverity:
          allOf:
          - $ref: '#/components/schemas/CountBySeverity'
          description: Represents a list of map of severity to count statistics for
            a set of findings.
        GroupedByAccount:
          allOf:
          - $ref: '#/components/schemas/GroupedByAccount'
          description: Represents a list of map of accounts with a findings count
            associated with each account.
        GroupedByDate:
          allOf:
          - $ref: '#/components/schemas/GroupedByDate'
          description: Represents a list of map of dates with a count of total findings
            generated on each date per severity level.
        GroupedByFindingType:
          allOf:
          - $ref: '#/components/schemas/GroupedByFindingType'
          description: 'Represents a list of map of finding types with a count of
            total findings generated for each type.


            Based on the `orderBy` parameter, this request returns either the most
            occurring finding types or the least occurring finding types. If the `orderBy`
            parameter is `ASC`, this will represent the least occurring finding types
            in your account; otherwise, this will represent the most occurring finding
            types. The default value of `orderBy` is `DESC`.'
        GroupedByResource:
          allOf:
          - $ref: '#/components/schemas/GroupedByResource'
          description: Represents a list of map of top resources with a count of total
            findings.
        GroupedBySeverity:
          allOf:
          - $ref: '#/components/schemas/GroupedBySeverity'
          description: Represents a list of map of total findings for each severity
            level.
      description: Contains information about finding statistics.
    FindingType:
      type: string
      minLength: 1
      maxLength: 50
    FindingTypeStatistics:
      type: object
      properties:
        FindingType:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Name of the finding type.
        LastGeneratedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp at which this finding type was last generated
            in your environment.
        TotalFindings:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The total number of findings associated with generated for
            each distinct finding type.
      description: Information about each finding type associated with the `groupedByFindingType`
        statistics.
    FindingTypes:
      type: array
      items:
        $ref: '#/components/schemas/FindingType'
    Findings:
      type: array
      items:
        $ref: '#/components/schemas/Finding'
    FlagsList:
      type: array
      items:
        $ref: '#/components/schemas/String'
    FlowLogsConfigurationResult:
      type: object
      properties:
        Status:
          allOf:
          - $ref: '#/components/schemas/DataSourceStatus'
          description: Denotes whether VPC flow logs is enabled as a data source.
      required:
      - Status
      description: Contains information on the status of VPC flow logs as a data source.
    FreeTrialFeatureConfigurationResult:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/FreeTrialFeatureResult'
          description: The name of the feature for which the free trial is configured.
        FreeTrialDaysRemaining:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of the remaining free trial days for the feature.
      description: Contains information about the free trial period for a feature.
    FreeTrialFeatureConfigurationsResults:
      type: array
      items:
        $ref: '#/components/schemas/FreeTrialFeatureConfigurationResult'
    FreeTrialFeatureResult:
      type: string
      enum:
      - FLOW_LOGS
      - CLOUD_TRAIL
      - DNS_LOGS
      - S3_DATA_EVENTS
      - EKS_AUDIT_LOGS
      - EBS_MALWARE_PROTECTION
      - RDS_LOGIN_EVENTS
      - EKS_RUNTIME_MONITORING
      - LAMBDA_NETWORK_LOGS
      - FARGATE_RUNTIME_MONITORING
      - EC2_RUNTIME_MONITORING
    GeoLocation:
      type: object
      properties:
        Lat:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: The latitude information of the remote IP address.
        Lon:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: The longitude information of the remote IP address.
      description: Contains information about the location of the remote IP address.
    GetAdministratorAccountRequest:
      type: object
      properties:
        DetectorId:
          allOf:
          - $ref: '#/components/schemas/DetectorId'
          description: The unique ID of the detector of the GuardDuty member account.
      required:
      - DetectorId
    GetAdministratorAccountResponse:
      type: object
      properties:
        Administrator:
          allOf:
          - $ref: '#/components/schemas/Administrator'
          description: The administrator account details.
      required:
      - Administrator
    GetCoverageStatisticsRequest:
      type: object
      properties:
        DetectorId:
          allOf:
          - $ref: '#/components/schemas/DetectorId'
          description: 'The unique ID of the GuardDuty detector.


            To find the `detectorId` in the current Region, see the Settings page
            in the GuardDuty console, or run the [ListDetectors](https://docs.aws.amazon.com/guardduty/latest/APIReference/API_ListDetectors.html)
            API.'
        FilterCriteria:
          allOf:
          - $ref: '#/components/schemas/CoverageFilterCriteria'
          description: Represents the criteria used to filter the coverage statistics.
        StatisticsType:
          allOf:
          - $ref: '#/components/schemas/CoverageStatisticsTypeList'
          description: Represents the statistics type used to aggregate the coverage
            details.
      required:
      - DetectorId
      - StatisticsType
    GetCoverageStatisticsResponse:
      type: object
      properties:
        CoverageStatistics:
          allOf:
          - $ref: '#/components/schemas/CoverageStatistics'
          description: Represents the count aggregated by the `statusCode` and `resourceType`.
    GetDetectorRequest:
      type: object
      properties:
        DetectorId:
          allOf:
          - $ref: '#/components/schemas/DetectorId'
          description: 'The unique ID of the detector that you want to get.


            To find the `detectorId` in the current Region, see the Settings page
            in the GuardDuty console, or run the [ListDetectors](https://docs.aws.amazon.com/guardduty/latest/APIReference/API_ListDetectors.html)
            API.'
      required:
      - DetectorId
    GetDetectorResponse:
      type: object
      properties:
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The timestamp of when the detector was created.
        FindingPublishingFrequency:
          allOf:
          - $ref: '#/components/schemas/FindingPublishingFrequency'
          description: The publishing frequency of the finding.
        ServiceRole:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The GuardDuty service role.
        Status:
          allOf:
          - $ref: '#/components/schemas/DetectorStatus'
          description: The detector status.
        UpdatedAt:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The last-updated timestamp for the detector.
        DataSources:
          allOf:
          - $ref: '#/components/schemas/DataSourceConfigurationsResult'
          description: Describes which data sources are enabled for the detector.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The tags of the detector resource.
        Features:
          allOf:
          - $ref: '#/components/schemas/DetectorFeatureConfigurationsResults'
          description: Describes the features that have been enabled for the detector.
      required:
      - ServiceRole
      - Status
    GetFilterRequest:
      type: object
      properties:
        DetectorId:
          allOf:
          - $ref: '#/components/schemas/DetectorId'
          description: 'The unique ID of the detector that is associated with this
            filter.


            To find the `detectorId` in the current Region, see the Settings page
            in the GuardDuty console, or run the [ListDetectors](https://docs.aws.amazon.com/guardduty/latest/APIReference/API_ListDetectors.html)
            API.'
        FilterName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the filter you want to get.
      required:
      - DetectorId
      - FilterName
    GetFilterResponse:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/FilterName'
          description: The name of the filter.
        Description:
          allOf:
          - $ref: '#/components/schemas/FilterDescription'
          description: The description of the filter.
        Action:
          allOf:
          - $ref: '#/components/schemas/FilterAction'
          description: Specifies the action that is to be applied to the findings
            that match the filter.
        Rank:
          allOf:
          - $ref: '#/components/schemas/FilterRank'
          description: Specifies the position of the filter in the list of current
            filters. Also specifies the order in which this filter is applied to the
            findings.
        FindingCriteria:
          allOf:
          - $ref: '#/components/schemas/FindingCriteria'
          description: Represents the criteria to be used in the filter for querying
            findings.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The tags of the filter resource.
      required:
      - Name
      - Action
      - FindingCriteria
    GetFindingsRequest:
      type: object
      properties:
        DetectorId:
          allOf:
          - $ref: '#/components/schemas/DetectorId'
          description: 'The ID of the detector that specifies the GuardDuty service
            whose findings you want to retrieve.


            To find the `detectorId` in the current Region, see the Settings page
            in the GuardDuty console, or run the [ListDetectors](https://docs.aws.amazon.com/guardduty/latest/APIReference/API_ListDetectors.html)
            API.'
        FindingIds:
          allOf:
          - $ref: '#/components/schemas/FindingIds'
          description: The IDs of the findings that you want to retrieve.
        SortCriteria:
          allOf:
          - $ref: '#/components/schemas/SortCriteria'
          description: Represents the criteria used for sorting findings.
      required:
      - DetectorId
      - FindingIds
    GetFindingsResponse:
      type: object
      properties:
        Findings:
          allOf:
          - $ref: '#/components/schemas/Findings'
          description: A list of findings.
      required:
      - Findings
    GetFindingsStatisticsRequest:
      type: object
      properties:
        DetectorId:
          allOf:
          - $ref: '#/components/schemas/DetectorId'
          description: 'The ID of the detector whose findings statistics you want
            to retrieve.


            To find the `detectorId` in the current Region, see the Settings page
            in the GuardDuty console, or run the [ListDetectors](https://docs.aws.amazon.com/guardduty/latest/APIReference/API_ListDetectors.html)
            API.'
        FindingStatisticTypes:
          allOf:
          - $ref: '#/components/schemas/FindingStatisticTypes'
          description: The types of finding statistics to retrieve.
        FindingCriteria:
          allOf:
          - $ref: '#/components/schemas/FindingCriteria'
          description: Represents the criteria that is used for querying findings.
        GroupBy:
          allOf:
          - $ref: '#/components/schemas/GroupByType'
          description: Displays the findings statistics grouped by one of the listed
            valid values.
        OrderBy:
          allOf:
          - $ref: '#/components/schemas/OrderBy'
          description: 'Displays the sorted findings in the requested order. The default
            value of `orderBy` is `DESC`.


            You can use this parameter only with the `groupBy` parameter.'
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults100'
          description: 'The maximum number of results to be returned in the response.
            The default value is 25.


            You can use this parameter only with the `groupBy` parameter.'
      required:
      - DetectorId
    GetFindingsStatisticsResponse:
      type: object
      properties:
        FindingStatistics:
          allOf:
          - $ref: '#/components/schemas/FindingStatistics'
          description: The finding statistics object.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'The pagination parameter to be used on the next list operation
            to retrieve more items.


            This parameter is currently not supported.'
      required:
      - FindingStatistics
    GetIPSetRequest:
      type: object
      properties:
        DetectorId:
          allOf:
          - $ref: '#/components/schemas/DetectorId'
          description: 'The unique ID of the detector that is associated with the
            IPSet.


            To find the `detectorId` in the current Region, see the Settings page
            in the GuardDuty console, or run the [ListDetectors](https://docs.aws.amazon.com/guardduty/latest/APIReference/API_ListDetectors.html)
            API.'
        IpSetId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique ID of the IPSet to retrieve.
      required:
      - DetectorId
      - IpSetId
    GetIPSetResponse:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The user-friendly name for the IPSet.
        Format:
          allOf:
          - $ref: '#/components/schemas/IpSetFormat'
          description: The format of the file that contains the IPSet.
        Location:
          allOf:
          - $ref: '#/components/schemas/Location'
          description: The URI of the file that contains the IPSet.
        Status:
          allOf:
          - $ref: '#/components/schemas/IpSetStatus'
          description: The status of IPSet file that was uploaded.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The tags of the IPSet resource.
      required:
      - Name
      - Format
      - Location
      - Status
    GetInvitationsCountRequest:
      type: object
      properties: {}
    GetInvitationsCountResponse:
      type: object
      properties:
        InvitationsCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of received invitations.
    GetMalwareProtectionPlanRequest:
      type: object
      properties:
        MalwareProtectionPlanId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A unique identifier associated with Malware Protection plan
            resource.
      required:
      - MalwareProtectionPlanId
    GetMalwareProtectionPlanResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Amazon Resource Name (ARN) of the protected resource.
        Role:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Amazon Resource Name (ARN) of the IAM role that includes the
            permissions to scan and add tags to the associated protected resource.
        ProtectedResource:
          allOf:
          - $ref: '#/components/schemas/CreateProtectedResource'
          description: Information about the protected resource that is associated
            with the created Malware Protection plan. Presently, `S3Bucket` is the
            only supported protected resource.
        Actions:
          allOf:
          - $ref: '#/components/schemas/MalwareProtectionPlanActions'
          description: Information about whether the tags will be added to the S3
            object after scanning.
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp when the Malware Protection plan resource was
            created.
        Status:
          allOf:
          - $ref: '#/components/schemas/MalwareProtectionPlanStatus'
          description: Malware Protection plan status.
        StatusReasons:
          allOf:
          - $ref: '#/components/schemas/MalwareProtectionPlanStatusReasonsList'
          description: Information about the issue code and message associated to
            the status of your Malware Protection plan.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: Tags added to the Malware Protection plan resource.
    GetMalwareScanSettingsRequest:
      type: object
      properties:
        DetectorId:
          allOf:
          - $ref: '#/components/schemas/DetectorId'
          description: 'The unique ID of the detector that is associated with this
            scan.


            To find the `detectorId` in the current Region, see the Settings page
            in the GuardDuty console, or run the [ListDetectors](https://docs.aws.amazon.com/guardduty/latest/APIReference/API_ListDetectors.html)
            API.'
      required:
      - DetectorId
    GetMalwareScanSettingsResponse:
      type: object
      properties:
        ScanResourceCriteria:
          allOf:
          - $ref: '#/components/schemas/ScanResourceCriteria'
          description: Represents the criteria to be used in the filter for scanning
            resources.
        EbsSnapshotPreservation:
          allOf:
          - $ref: '#/components/schemas/EbsSnapshotPreservation'
          description: An enum value representing possible snapshot preservation settings.
    GetMasterAccountRequest:
      type: object
      properties:
        DetectorId:
          allOf:
          - $ref: '#/components/schemas/DetectorId'
          description: 'The unique ID of the detector of the GuardDuty member account.


            To find the `detectorId` in the current Region, see the Settings page
            in the GuardDuty console, or run the [ListDetectors](https://docs.aws.amazon.com/guardduty/latest/APIReference/API_ListDetectors.html)
            API.'
      required:
      - DetectorId
    GetMasterAccountResponse:
      type: object
      properties:
        Master:
          allOf:
          - $ref: '#/components/schemas/Master'
          description: The administrator account details.
      required:
      - Master
    GetMemberDetectorsRequest:
      type: object
      properties:
        DetectorId:
          allOf:
          - $ref: '#/components/schemas/DetectorId'
          description: 'The detector ID for the administrator account.


            To find the `detectorId` in the current Region, see the Settings page
            in the GuardDuty console, or run the [ListDetectors](https://docs.aws.amazon.com/guardduty/latest/APIReference/API_ListDetectors.html)
            API.'
        AccountIds:
          allOf:
          - $ref: '#/components/schemas/AccountIds'
          description: A list of member account IDs.
      required:
      - DetectorId
      - AccountIds
    GetMemberDetectorsResponse:
      type: object
      properties:
        MemberDataSourceConfigurations:
          allOf:
          - $ref: '#/components/schemas/MemberDataSourceConfigurations'
          description: An object that describes which data sources are enabled for
            a member account.
        UnprocessedAccounts:
          allOf:
          - $ref: '#/components/schemas/UnprocessedAccounts'
          description: A list of member account IDs that were unable to be processed
            along with an explanation for why they were not processed.
      required:
      - MemberDataSourceConfigurations
      - UnprocessedAccounts
    GetMembersRequest:
      type: object
      properties:
        DetectorId:
          allOf:
          - $ref: '#/components/schemas/DetectorId'
          description: 'The unique ID of the detector of the GuardDuty account whose
            members you want to retrieve.


            To find the `detectorId` in the current Region, see the Settings page
            in the GuardDuty console, or run the [ListDetectors](https://docs.aws.amazon.com/guardduty/latest/APIReference/API_ListDetectors.html)
            API.'
        AccountIds:
          allOf:
          - $ref: '#/components/schemas/AccountIds'
          description: A list of account IDs of the GuardDuty member accounts that
            you want to describe.
      required:
      - DetectorId
      - AccountIds
    GetMembersResponse:
      type: object
      properties:
        Members:
          allOf:
          - $ref: '#/components/schemas/Members'
          description: A list of members.
        UnprocessedAccounts:
          allOf:
          - $ref: '#/components/schemas/UnprocessedAccounts'
          description: A list of objects that contain the unprocessed account and
            a result string that explains why it was unprocessed.
      required:
      - Members
      - UnprocessedAccounts
    GetOrganizationStatisticsResponse:
      type: object
      properties:
        OrganizationDetails:
          allOf:
          - $ref: '#/components/schemas/OrganizationDetails'
          description: Information about the statistics report for your organization.
    GetRemainingFreeTrialDaysRequest:
      type: object
      properties:
        DetectorId:
          allOf:
          - $ref: '#/components/schemas/DetectorId'
          description: 'The unique ID of the detector of the GuardDuty member account.


            To find the `detectorId` in the current Region, see the Settings page
            in the GuardDuty console, or run the [ListDetectors](https://docs.aws.amazon.com/guardduty/latest/APIReference/API_ListDetectors.html)
            API.'
        AccountIds:
          allOf:
          - $ref: '#/components/schemas/AccountIds'
          description: A list of account identifiers of the GuardDuty member account.
      required:
      - DetectorId
    GetRemainingFreeTrialDaysResponse:
      type: object
      properties:
        Accounts:
          allOf:
          - $ref: '#/components/schemas/AccountFreeTrialInfos'
          description: The member accounts which were included in a request and were
            processed successfully.
        UnprocessedAccounts:
          allOf:
          - $ref: '#/components/schemas/UnprocessedAccounts'
          description: The member account that was included in a request but for which
            the request could not be processed.
    GetThreatIntelSetRequest:
      type: object
      properties:
        DetectorId:
          allOf:
          - $ref: '#/components/schemas/DetectorId'
          description: 'The unique ID of the detector that is associated with the
            threatIntelSet.


            To find the `detectorId` in the current Region, see the Settings page
            in the GuardDuty console, or run the [ListDetectors](https://docs.aws.amazon.com/guardduty/latest/APIReference/API_ListDetectors.html)
            API.'
        ThreatIntelSetId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique ID of the threatIntelSet that you want to get.
      required:
      - DetectorId
      - ThreatIntelSetId
    GetThreatIntelSetResponse:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: A user-friendly ThreatIntelSet name displayed in all findings
            that are generated by activity that involves IP addresses included in
            this ThreatIntelSet.
        Format:
          allOf:
          - $ref: '#/components/schemas/ThreatIntelSetFormat'
          description: The format of the threatIntelSet.
        Location:
          allOf:
          - $ref: '#/components/schemas/Location'
          description: The URI of the file that contains the ThreatIntelSet.
        Status:
          allOf:
          - $ref: '#/components/schemas/ThreatIntelSetStatus'
          description: The status of threatIntelSet file uploaded.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The tags of the threat list resource.
      required:
      - Name
      - Format
      - Location
      - Status
    GetUsageStatisticsRequest:
      type: object
      properties:
        DetectorId:
          allOf:
          - $ref: '#/components/schemas/DetectorId'
          description: 'The ID of the detector that specifies the GuardDuty service
            whose usage statistics you want to retrieve.


            To find the `detectorId` in the current Region, see the Settings page
            in the GuardDuty console, or run the [ListDetectors](https://docs.aws.amazon.com/guardduty/latest/APIReference/API_ListDetectors.html)
            API.'
        UsageStatisticType:
          allOf:
          - $ref: '#/components/schemas/UsageStatisticType'
          description: The type of usage statistics to retrieve.
        UsageCriteria:
          allOf:
          - $ref: '#/components/schemas/UsageCriteria'
          description: Represents the criteria used for querying usage.
        Unit:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The currency unit you would like to view your usage statistics
            in. Current valid values are USD.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return in the response.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A token to use for paginating results that are returned in
            the response. Set the value of this parameter to null for the first request
            to a list action. For subsequent calls, use the NextToken value returned
            from the previous request to continue listing results after the first
            page.
      required:
      - DetectorId
      - UsageStatisticType
      - UsageCriteria
    GetUsageStatisticsResponse:
      type: object
      properties:
        UsageStatistics:
          allOf:
          - $ref: '#/components/schemas/UsageStatistics'
          description: The usage statistics object. If a UsageStatisticType was provided,
            the objects representing other types will be null.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The pagination parameter to be used on the next list operation
            to retrieve more items.
    GroupByType:
      type: string
      enum:
      - ACCOUNT
      - DATE
      - FINDING_TYPE
      - RESOURCE
      - SEVERITY
    GroupedByAccount:
      type: array
      items:
        $ref: '#/components/schemas/AccountStatistics'
    GroupedByDate:
      type: array
      items:
        $ref: '#/components/schemas/DateStatistics'
    GroupedByFindingType:
      type: array
      items:
        $ref: '#/components/schemas/FindingTypeStatistics'
    GroupedByResource:
      type: array
      items:
        $ref: '#/components/schemas/ResourceStatistics'
    GroupedBySeverity:
      type: array
      items:
        $ref: '#/components/schemas/SeverityStatistics'
    Groups:
      type: array
      items:
        $ref: '#/components/schemas/String'
    GuardDutyArn:
      type: string
      pattern: ^arn:[A-Za-z_.-]{1,20}:guardduty:[A-Za-z0-9_/.-]{0,63}:\d+:detector/[A-Za-z0-9_/.-]{32,264}$
    HighestSeverityThreatDetails:
      type: object
      properties:
        Severity:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Severity level of the highest severity threat detected.
        ThreatName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Threat name of the highest severity threat detected as part
            of the malware scan.
        Count:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: Total number of infected files with the highest severity threat
            detected.
      description: Contains details of the highest severity threat detected during
        scan and number of infected files.
    HostPath:
      type: object
      properties:
        Path:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Path of the file or directory on the host that the volume maps
            to.
      description: Represents a pre-existing file or directory on the host machine
        that the volume maps to.
    IamInstanceProfile:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The profile ARN of the EC2 instance.
        Id:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The profile ID of the EC2 instance.
      description: Contains information about the EC2 instance profile.
    ImpersonatedUser:
      type: object
      properties:
        Username:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Information about the `username` that was being impersonated.
        Groups:
          allOf:
          - $ref: '#/components/schemas/Groups'
          description: The `group` to which the user name belongs.
      description: Contains information about the impersonated user.
    Indicator:
      type: object
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/IndicatorType'
          description: Specific indicator keys observed in the attack sequence. For
            description of the valid values for key, see [Attack sequence finding
            details](https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_findings-summary.html#guardduty-extended-threat-detection-attack-sequence-finding-details)
            in the _Amazon GuardDuty User Guide_.
        Values:
          allOf:
          - $ref: '#/components/schemas/IndicatorValues'
          description: Values associated with each indicator key. For example, if
            the indicator key is `SUSPICIOUS_NETWORK`, then the value will be the
            name of the network. If the indicator key is `ATTACK_TACTIC`, then the
            value will be one of the MITRE tactics.
        Title:
          allOf:
          - $ref: '#/components/schemas/IndicatorTitle'
          description: Title describing the indicator.
      required:
      - Key
      description: Contains information about the indicators that include a set of
        signals observed in an attack sequence.
    IndicatorTitle:
      type: string
      minLength: 1
      maxLength: 256
    IndicatorType:
      type: string
      enum:
      - SUSPICIOUS_USER_AGENT
      - SUSPICIOUS_NETWORK
      - MALICIOUS_IP
      - TOR_IP
      - ATTACK_TACTIC
      - HIGH_RISK_API
      - ATTACK_TECHNIQUE
      - UNUSUAL_API_FOR_ACCOUNT
      - UNUSUAL_ASN_FOR_ACCOUNT
      - UNUSUAL_ASN_FOR_USER
    IndicatorValueString:
      type: string
      minLength: 1
      maxLength: 256
    IndicatorValues:
      type: array
      items:
        $ref: '#/components/schemas/IndicatorValueString'
    Indicators:
      type: array
      items:
        $ref: '#/components/schemas/Indicator'
    InstanceArn:
      type: string
      pattern: ^arn:(aws|aws-cn|aws-us-gov):[a-z]+:[a-z]+(-[0-9]+|-[a-z]+)+:([0-9]{12}):[a-z\-]+\/[a-zA-Z0-9]*$
    InstanceDetails:
      type: object
      properties:
        AvailabilityZone:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Availability Zone of the EC2 instance.
        IamInstanceProfile:
          allOf:
          - $ref: '#/components/schemas/IamInstanceProfile'
          description: The profile information of the EC2 instance.
        ImageDescription:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The image description of the EC2 instance.
        ImageId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The image ID of the EC2 instance.
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the EC2 instance.
        InstanceState:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The state of the EC2 instance.
        InstanceType:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The type of the EC2 instance.
        OutpostArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) of the Amazon Web Services Outpost.
            Only applicable to Amazon Web Services Outposts instances.
        LaunchTime:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The launch time of the EC2 instance.
        NetworkInterfaces:
          allOf:
          - $ref: '#/components/schemas/NetworkInterfaces'
          description: The elastic network interface information of the EC2 instance.
        Platform:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The platform of the EC2 instance.
        ProductCodes:
          allOf:
          - $ref: '#/components/schemas/ProductCodes'
          description: The product code of the EC2 instance.
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: The tags of the EC2 instance.
      description: Contains information about the details of an instance.
    Integer:
      type: integer
    IntegerValueWithMax:
      type: integer
      minimum: 1
      maximum: 50
    InternalServerErrorException:
      type: object
      properties:
        Message:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The error message.
        Type:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The error type.
      description: An internal server error exception object.
    Invitation:
      type: object
      properties:
        AccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The ID of the account that the invitation was sent from.
        InvitationId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the invitation. This value is used to validate the
            inviter account to the member account.
        RelationshipStatus:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The status of the relationship between the inviter and invitee
            accounts.
        InvitedAt:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The timestamp when the invitation was sent.
      description: Contains information about the invitation to become a member account.
    Invitations:
      type: array
      items:
        $ref: '#/components/schemas/Invitation'
    InviteMembersRequest:
      type: object
      properties:
        DetectorId:
          allOf:
          - $ref: '#/components/schemas/DetectorId'
          description: 'The unique ID of the detector of the GuardDuty account with
            which you want to invite members.


            To find the `detectorId` in the current Region, see the Settings page
            in the GuardDuty console, or run the [ListDetectors](https://docs.aws.amazon.com/guardduty/latest/APIReference/API_ListDetectors.html)
            API.'
        AccountIds:
          allOf:
          - $ref: '#/components/schemas/AccountIds'
          description: A list of account IDs of the accounts that you want to invite
            to GuardDuty as members.
        DisableEmailNotification:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: A Boolean value that specifies whether you want to disable
            email notification to the accounts that you are inviting to GuardDuty
            as members.
        Message:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The invitation message that you want to send to the accounts
            that you're inviting to GuardDuty as members.
      required:
      - DetectorId
      - AccountIds
    InviteMembersResponse:
      type: object
      properties:
        UnprocessedAccounts:
          allOf:
          - $ref: '#/components/schemas/UnprocessedAccounts'
          description: A list of objects that contain the unprocessed account and
            a result string that explains why it was unprocessed.
      required:
      - UnprocessedAccounts
    IpSetFormat:
      type: string
      enum:
      - TXT
      - STIX
      - OTX_CSV
      - ALIEN_VAULT
      - PROOF_POINT
      - FIRE_EYE
    IpSetIds:
      type: array
      items:
        $ref: '#/components/schemas/String'
    IpSetStatus:
      type: string
      enum:
      - INACTIVE
      - ACTIVATING
      - ACTIVE
      - DEACTIVATING
      - ERROR
      - DELETE_PENDING
      - DELETED
    Ipv6Addresses:
      type: array
      items:
        $ref: '#/components/schemas/String'
    Issues:
      type: array
      items:
        $ref: '#/components/schemas/String'
    ItemPath:
      type: object
      properties:
        NestedItemPath:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The nested item path where the infected file was found.
        Hash:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The hash value of the infected resource.
      description: Information about the nested item path and hash of the protected
        resource.
    ItemPaths:
      type: array
      items:
        $ref: '#/components/schemas/ItemPath'
    KubernetesApiCallAction:
      type: object
      properties:
        RequestUri:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Kubernetes API request URI.
        Verb:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Kubernetes API request HTTP verb.
        SourceIps:
          allOf:
          - $ref: '#/components/schemas/SourceIps'
          description: The IP of the Kubernetes API caller and the IPs of any proxies
            or load balancers between the caller and the API endpoint.
        UserAgent:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The user agent of the caller of the Kubernetes API.
        RemoteIpDetails:
          $ref: '#/components/schemas/RemoteIpDetails'
        StatusCode:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The resulting HTTP response code of the Kubernetes API call
            action.
        Parameters:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Parameters related to the Kubernetes API call action.
        Resource:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The resource component in the Kubernetes API call action.
        Subresource:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the sub-resource in the Kubernetes API call action.
        Namespace:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the namespace where the Kubernetes API call action
            takes place.
        ResourceName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the resource in the Kubernetes API call action.
      description: Information about the Kubernetes API call action described in this
        finding.
    KubernetesAuditLogsConfiguration:
      type: object
      properties:
        Enable:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: The status of Kubernetes audit logs as a data source.
      required:
      - Enable
      description: Describes whether Kubernetes audit logs are enabled as a data source.
    KubernetesAuditLogsConfigurationResult:
      type: object
      properties:
        Status:
          allOf:
          - $ref: '#/components/schemas/DataSourceStatus'
          description: A value that describes whether Kubernetes audit logs are enabled
            as a data source.
      required:
      - Status
      description: Describes whether Kubernetes audit logs are enabled as a data source.
    KubernetesConfiguration:
      type: object
      properties:
        AuditLogs:
          allOf:
          - $ref: '#/components/schemas/KubernetesAuditLogsConfiguration'
          description: The status of Kubernetes audit logs as a data source.
      required:
      - AuditLogs
      description: Describes whether any Kubernetes data sources are enabled.
    KubernetesConfigurationResult:
      type: object
      properties:
        AuditLogs:
          allOf:
          - $ref: '#/components/schemas/KubernetesAuditLogsConfigurationResult'
          description: Describes whether Kubernetes audit logs are enabled as a data
            source.
      required:
      - AuditLogs
      description: Describes whether any Kubernetes logs will be enabled as a data
        source.
    KubernetesDataSourceFreeTrial:
      type: object
      properties:
        AuditLogs:
          allOf:
          - $ref: '#/components/schemas/DataSourceFreeTrial'
          description: Describes whether Kubernetes audit logs are enabled as a data
            source.
      description: Provides details about the Kubernetes resources when it is enabled
        as a data source.
    KubernetesDetails:
      type: object
      properties:
        KubernetesUserDetails:
          allOf:
          - $ref: '#/components/schemas/KubernetesUserDetails'
          description: Details about the Kubernetes user involved in a Kubernetes
            finding.
        KubernetesWorkloadDetails:
          allOf:
          - $ref: '#/components/schemas/KubernetesWorkloadDetails'
          description: Details about the Kubernetes workload involved in a Kubernetes
            finding.
      description: Details about Kubernetes resources such as a Kubernetes user or
        workload resource involved in a Kubernetes finding.
    KubernetesPermissionCheckedDetails:
      type: object
      properties:
        Verb:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The verb component of the Kubernetes API call. For example,
            when you check whether or not you have the permission to call the `CreatePod`
            API, the verb component will be `Create`.
        Resource:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Kubernetes resource with which your Kubernetes API call
            will interact.
        Namespace:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The namespace where the Kubernetes API action will take place.
        Allowed:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Information whether the user has the permission to call the
            Kubernetes API.
      description: Information about the Kubernetes API for which you check if you
        have permission to call.
    KubernetesRoleBindingDetails:
      type: object
      properties:
        Kind:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The kind of the role. For role binding, this value will be
            `RoleBinding`.
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the `RoleBinding`.
        Uid:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique identifier of the role binding.
        RoleRefName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the role being referenced. This must match the
            name of the `Role` or `ClusterRole` that you want to bind to.
        RoleRefKind:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The type of the role being referenced. This could be either
            `Role` or `ClusterRole`.
      description: Contains information about the role binding that grants the permission
        defined in a Kubernetes role.
    KubernetesRoleDetails:
      type: object
      properties:
        Kind:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The kind of role. For this API, the value of `kind` will be
            `Role`.
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the Kubernetes role.
        Uid:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique identifier of the Kubernetes role name.
      description: Information about the Kubernetes role name and role type.
    KubernetesUserDetails:
      type: object
      properties:
        Username:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The username of the user who called the Kubernetes API.
        Uid:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The user ID of the user who called the Kubernetes API.
        Groups:
          allOf:
          - $ref: '#/components/schemas/Groups'
          description: The groups that include the user who called the Kubernetes
            API.
        SessionName:
          allOf:
          - $ref: '#/components/schemas/SessionNameList'
          description: Entity that assumes the IAM role when Kubernetes RBAC permissions
            are assigned to that role.
        ImpersonatedUser:
          allOf:
          - $ref: '#/components/schemas/ImpersonatedUser'
          description: Information about the impersonated user.
      description: Details about the Kubernetes user involved in a Kubernetes finding.
    KubernetesWorkloadDetails:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Kubernetes workload name.
        Type:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Kubernetes workload type (e.g. Pod, Deployment, etc.).
        Uid:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Kubernetes workload ID.
        Namespace:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Kubernetes namespace that the workload is part of.
        HostNetwork:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether the hostNetwork flag is enabled for the pods included
            in the workload.
        Containers:
          allOf:
          - $ref: '#/components/schemas/Containers'
          description: Containers running as part of the Kubernetes workload.
        Volumes:
          allOf:
          - $ref: '#/components/schemas/Volumes'
          description: Volumes used by the Kubernetes workload.
        ServiceAccountName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The service account name that is associated with a Kubernetes
            workload.
        HostIPC:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether the host IPC flag is enabled for the pods in the workload.
        HostPID:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether the host PID flag is enabled for the pods in the workload.
      description: Details about the Kubernetes workload involved in a Kubernetes
        finding.
    LambdaDetails:
      type: object
      properties:
        FunctionArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Amazon Resource Name (ARN) of the Lambda function.
        FunctionName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Name of the Lambda function.
        Description:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Description of the Lambda function.
        LastModifiedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp when the Lambda function was last modified. This
            field is in the UTC date string format `(2023-03-22T19:37:20.168Z)`.
        RevisionId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The revision ID of the Lambda function version.
        FunctionVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The version of the Lambda function.
        Role:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The execution role of the Lambda function.
        VpcConfig:
          allOf:
          - $ref: '#/components/schemas/VpcConfig'
          description: Amazon Virtual Private Cloud configuration details associated
            with your Lambda function.
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: A list of tags attached to this resource, listed in the format
            of `key`:`value` pair.
      description: Information about the Lambda function involved in the finding.
    Lineage:
      type: array
      items:
        $ref: '#/components/schemas/LineageObject'
    LineageObject:
      type: object
      properties:
        StartTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time when the process started. This is in UTC format.
        NamespacePid:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The process ID of the child process.
        UserId:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The user ID of the user that executed the process.
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the process.
        Pid:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The ID of the process.
        Uuid:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique ID assigned to the process by GuardDuty.
        ExecutablePath:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The absolute path of the process executable file.
        Euid:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The effective user ID that was used to execute the process.
        ParentUuid:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique ID of the parent process. This ID is assigned to
            the parent process by GuardDuty.
      description: Information about the runtime process details.
    ListCoverageRequest:
      type: object
      properties:
        DetectorId:
          allOf:
          - $ref: '#/components/schemas/DetectorId'
          description: 'The unique ID of the detector whose coverage details you want
            to retrieve.


            To find the `detectorId` in the current Region, see the Settings page
            in the GuardDuty console, or run the [ListDetectors](https://docs.aws.amazon.com/guardduty/latest/APIReference/API_ListDetectors.html)
            API.'
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A token to use for paginating results that are returned in
            the response. Set the value of this parameter to null for the first request
            to a list action. For subsequent calls, use the NextToken value returned
            from the previous request to continue listing results after the first
            page.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return in the response.
        FilterCriteria:
          allOf:
          - $ref: '#/components/schemas/CoverageFilterCriteria'
          description: Represents the criteria used to filter the coverage details.
        SortCriteria:
          allOf:
          - $ref: '#/components/schemas/CoverageSortCriteria'
          description: Represents the criteria used to sort the coverage details.
      required:
      - DetectorId
    ListCoverageResponse:
      type: object
      properties:
        Resources:
          allOf:
          - $ref: '#/components/schemas/CoverageResources'
          description: A list of resources and their attributes providing cluster
            details.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The pagination parameter to be used on the next list operation
            to retrieve more items.
      required:
      - Resources
    ListDetectorsRequest:
      type: object
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: You can use this parameter to indicate the maximum number of
            items that you want in the response. The default value is 50. The maximum
            value is 50.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: You can use this parameter when paginating results. Set the
            value of this parameter to null on your first call to the list action.
            For subsequent calls to the action, fill nextToken in the request with
            the value of NextToken from the previous response to continue listing
            data.
    ListDetectorsResponse:
      type: object
      properties:
        DetectorIds:
          allOf:
          - $ref: '#/components/schemas/DetectorIds'
          description: A list of detector IDs.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The pagination parameter to be used on the next list operation
            to retrieve more items.
      required:
      - DetectorIds
    ListFiltersRequest:
      type: object
      properties:
        DetectorId:
          allOf:
          - $ref: '#/components/schemas/DetectorId'
          description: 'The unique ID of the detector that is associated with the
            filter.


            To find the `detectorId` in the current Region, see the Settings page
            in the GuardDuty console, or run the [ListDetectors](https://docs.aws.amazon.com/guardduty/latest/APIReference/API_ListDetectors.html)
            API.'
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: You can use this parameter to indicate the maximum number of
            items that you want in the response. The default value is 50. The maximum
            value is 50.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: You can use this parameter when paginating results. Set the
            value of this parameter to null on your first call to the list action.
            For subsequent calls to the action, fill nextToken in the request with
            the value of NextToken from the previous response to continue listing
            data.
      required:
      - DetectorId
    ListFiltersResponse:
      type: object
      properties:
        FilterNames:
          allOf:
          - $ref: '#/components/schemas/FilterNames'
          description: A list of filter names.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The pagination parameter to be used on the next list operation
            to retrieve more items.
      required:
      - FilterNames
    ListFindingsRequest:
      type: object
      properties:
        DetectorId:
          allOf:
          - $ref: '#/components/schemas/DetectorId'
          description: 'The ID of the detector that specifies the GuardDuty service
            whose findings you want to list.


            To find the `detectorId` in the current Region, see the Settings page
            in the GuardDuty console, or run the [ListDetectors](https://docs.aws.amazon.com/guardduty/latest/APIReference/API_ListDetectors.html)
            API.'
        FindingCriteria:
          allOf:
          - $ref: '#/components/schemas/FindingCriteria'
          description: "Represents the criteria used for querying findings. Valid\
            \ values include:\n\n  * JSON field name\n\n  * accountId\n\n  * region\n\
            \n  * confidence\n\n  * id\n\n  * resource.accessKeyDetails.accessKeyId\n\
            \n  * resource.accessKeyDetails.principalId\n\n  * resource.accessKeyDetails.userName\n\
            \n  * resource.accessKeyDetails.userType\n\n  * resource.instanceDetails.iamInstanceProfile.id\n\
            \n  * resource.instanceDetails.imageId\n\n  * resource.instanceDetails.instanceId\n\
            \n  * resource.instanceDetails.networkInterfaces.ipv6Addresses\n\n  *\
            \ resource.instanceDetails.networkInterfaces.privateIpAddresses.privateIpAddress\n\
            \n  * resource.instanceDetails.networkInterfaces.publicDnsName\n\n  *\
            \ resource.instanceDetails.networkInterfaces.publicIp\n\n  * resource.instanceDetails.networkInterfaces.securityGroups.groupId\n\
            \n  * resource.instanceDetails.networkInterfaces.securityGroups.groupName\n\
            \n  * resource.instanceDetails.networkInterfaces.subnetId\n\n  * resource.instanceDetails.networkInterfaces.vpcId\n\
            \n  * resource.instanceDetails.tags.key\n\n  * resource.instanceDetails.tags.value\n\
            \n  * resource.resourceType\n\n  * service.action.actionType\n\n  * service.action.awsApiCallAction.api\n\
            \n  * service.action.awsApiCallAction.callerType\n\n  * service.action.awsApiCallAction.remoteIpDetails.city.cityName\n\
            \n  * service.action.awsApiCallAction.remoteIpDetails.country.countryName\n\
            \n  * service.action.awsApiCallAction.remoteIpDetails.ipAddressV4\n\n\
            \  * service.action.awsApiCallAction.remoteIpDetails.organization.asn\n\
            \n  * service.action.awsApiCallAction.remoteIpDetails.organization.asnOrg\n\
            \n  * service.action.awsApiCallAction.serviceName\n\n  * service.action.dnsRequestAction.domain\n\
            \n  * service.action.dnsRequestAction.domainWithSuffix\n\n  * service.action.networkConnectionAction.blocked\n\
            \n  * service.action.networkConnectionAction.connectionDirection\n\n \
            \ * service.action.networkConnectionAction.localPortDetails.port\n\n \
            \ * service.action.networkConnectionAction.protocol\n\n  * service.action.networkConnectionAction.remoteIpDetails.country.countryName\n\
            \n  * service.action.networkConnectionAction.remoteIpDetails.ipAddressV4\n\
            \n  * service.action.networkConnectionAction.remoteIpDetails.organization.asn\n\
            \n  * service.action.networkConnectionAction.remoteIpDetails.organization.asnOrg\n\
            \n  * service.action.networkConnectionAction.remotePortDetails.port\n\n\
            \  * service.additionalInfo.threatListName\n\n  * service.archived\n\n\
            When this attribute is set to 'true', only archived findings are listed.\
            \ When it's set to 'false', only unarchived findings are listed. When\
            \ this attribute is not set, all existing findings are listed.\n\n  *\
            \ service.ebsVolumeScanDetails.scanId\n\n  * service.resourceRole\n\n\
            \  * severity\n\n  * type\n\n  * updatedAt\n\nType: Timestamp in Unix\
            \ Epoch millisecond format: 1486685375000"
        SortCriteria:
          allOf:
          - $ref: '#/components/schemas/SortCriteria'
          description: Represents the criteria used for sorting findings.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: You can use this parameter to indicate the maximum number of
            items you want in the response. The default value is 50. The maximum value
            is 50.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: You can use this parameter when paginating results. Set the
            value of this parameter to null on your first call to the list action.
            For subsequent calls to the action, fill nextToken in the request with
            the value of NextToken from the previous response to continue listing
            data.
      required:
      - DetectorId
    ListFindingsResponse:
      type: object
      properties:
        FindingIds:
          allOf:
          - $ref: '#/components/schemas/FindingIds'
          description: The IDs of the findings that you're listing.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The pagination parameter to be used on the next list operation
            to retrieve more items.
      required:
      - FindingIds
    ListIPSetsRequest:
      type: object
      properties:
        DetectorId:
          allOf:
          - $ref: '#/components/schemas/DetectorId'
          description: 'The unique ID of the detector that is associated with IPSet.


            To find the `detectorId` in the current Region, see the Settings page
            in the GuardDuty console, or run the [ListDetectors](https://docs.aws.amazon.com/guardduty/latest/APIReference/API_ListDetectors.html)
            API.'
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: You can use this parameter to indicate the maximum number of
            items you want in the response. The default value is 50. The maximum value
            is 50.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: You can use this parameter when paginating results. Set the
            value of this parameter to null on your first call to the list action.
            For subsequent calls to the action, fill nextToken in the request with
            the value of NextToken from the previous response to continue listing
            data.
      required:
      - DetectorId
    ListIPSetsResponse:
      type: object
      properties:
        IpSetIds:
          allOf:
          - $ref: '#/components/schemas/IpSetIds'
          description: The IDs of the IPSet resources.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The pagination parameter to be used on the next list operation
            to retrieve more items.
      required:
      - IpSetIds
    ListInvitationsRequest:
      type: object
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: You can use this parameter to indicate the maximum number of
            items that you want in the response. The default value is 50. The maximum
            value is 50.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: You can use this parameter when paginating results. Set the
            value of this parameter to null on your first call to the list action.
            For subsequent calls to the action, fill nextToken in the request with
            the value of NextToken from the previous response to continue listing
            data.
    ListInvitationsResponse:
      type: object
      properties:
        Invitations:
          allOf:
          - $ref: '#/components/schemas/Invitations'
          description: A list of invitation descriptions.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The pagination parameter to be used on the next list operation
            to retrieve more items.
    ListMalwareProtectionPlansRequest:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: You can use this parameter when paginating results. Set the
            value of this parameter to null on your first call to the list action.
            For subsequent calls to the action, fill nextToken in the request with
            the value of `NextToken` from the previous response to continue listing
            data.
    ListMalwareProtectionPlansResponse:
      type: object
      properties:
        MalwareProtectionPlans:
          allOf:
          - $ref: '#/components/schemas/MalwareProtectionPlansSummary'
          description: A list of unique identifiers associated with each Malware Protection
            plan.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: You can use this parameter when paginating results. Set the
            value of this parameter to null on your first call to the list action.
            For subsequent calls to the action, fill nextToken in the request with
            the value of `NextToken` from the previous response to continue listing
            data.
    ListMembersRequest:
      type: object
      properties:
        DetectorId:
          allOf:
          - $ref: '#/components/schemas/DetectorId'
          description: 'The unique ID of the detector that is associated with the
            member.


            To find the `detectorId` in the current Region, see the Settings page
            in the GuardDuty console, or run the [ListDetectors](https://docs.aws.amazon.com/guardduty/latest/APIReference/API_ListDetectors.html)
            API.'
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: You can use this parameter to indicate the maximum number of
            items you want in the response. The default value is 50. The maximum value
            is 50.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: You can use this parameter when paginating results. Set the
            value of this parameter to null on your first call to the list action.
            For subsequent calls to the action, fill nextToken in the request with
            the value of NextToken from the previous response to continue listing
            data.
        OnlyAssociated:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Specifies whether to only return associated members or to return
            all members (including members who haven't been invited yet or have been
            disassociated). Member accounts must have been previously associated with
            the GuardDuty administrator account using [ `Create Members` ](https://docs.aws.amazon.com/guardduty/latest/APIReference/API_CreateMembers.html).
      required:
      - DetectorId
    ListMembersResponse:
      type: object
      properties:
        Members:
          allOf:
          - $ref: '#/components/schemas/Members'
          description: 'A list of members.


            The values for `email` and `invitedAt` are available only if the member
            accounts are added by invitation.'
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The pagination parameter to be used on the next list operation
            to retrieve more items.
    ListOrganizationAdminAccountsRequest:
      type: object
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return in the response.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A token to use for paginating results that are returned in
            the response. Set the value of this parameter to null for the first request
            to a list action. For subsequent calls, use the `NextToken` value returned
            from the previous request to continue listing results after the first
            page.
    ListOrganizationAdminAccountsResponse:
      type: object
      properties:
        AdminAccounts:
          allOf:
          - $ref: '#/components/schemas/AdminAccounts'
          description: A list of accounts configured as GuardDuty delegated administrators.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The pagination parameter to be used on the next list operation
            to retrieve more items.
    ListPublishingDestinationsRequest:
      type: object
      properties:
        DetectorId:
          allOf:
          - $ref: '#/components/schemas/DetectorId'
          description: 'The detector ID for which you want to retrieve the publishing
            destination.


            To find the `detectorId` in the current Region, see the Settings page
            in the GuardDuty console, or run the [ListDetectors](https://docs.aws.amazon.com/guardduty/latest/APIReference/API_ListDetectors.html)
            API.'
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return in the response.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A token to use for paginating results that are returned in
            the response. Set the value of this parameter to null for the first request
            to a list action. For subsequent calls, use the `NextToken` value returned
            from the previous request to continue listing results after the first
            page.
      required:
      - DetectorId
    ListPublishingDestinationsResponse:
      type: object
      properties:
        Destinations:
          allOf:
          - $ref: '#/components/schemas/Destinations'
          description: A `Destinations` object that includes information about each
            publishing destination returned.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A token to use for paginating results that are returned in
            the response. Set the value of this parameter to null for the first request
            to a list action. For subsequent calls, use the `NextToken` value returned
            from the previous request to continue listing results after the first
            page.
      required:
      - Destinations
    ListTagsForResourceRequest:
      type: object
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/GuardDutyArn'
          description: The Amazon Resource Name (ARN) for the given GuardDuty resource.
      required:
      - ResourceArn
    ListTagsForResourceResponse:
      type: object
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The tags associated with the resource.
    ListThreatIntelSetsRequest:
      type: object
      properties:
        DetectorId:
          allOf:
          - $ref: '#/components/schemas/DetectorId'
          description: 'The unique ID of the detector that is associated with the
            threatIntelSet.


            To find the `detectorId` in the current Region, see the Settings page
            in the GuardDuty console, or run the [ListDetectors](https://docs.aws.amazon.com/guardduty/latest/APIReference/API_ListDetectors.html)
            API.'
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: You can use this parameter to indicate the maximum number of
            items that you want in the response. The default value is 50. The maximum
            value is 50.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: You can use this parameter to paginate results in the response.
            Set the value of this parameter to null on your first call to the list
            action. For subsequent calls to the action, fill nextToken in the request
            with the value of NextToken from the previous response to continue listing
            data.
      required:
      - DetectorId
    ListThreatIntelSetsResponse:
      type: object
      properties:
        ThreatIntelSetIds:
          allOf:
          - $ref: '#/components/schemas/ThreatIntelSetIds'
          description: The IDs of the ThreatIntelSet resources.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The pagination parameter to be used on the next list operation
            to retrieve more items.
      required:
      - ThreatIntelSetIds
    LocalIpDetails:
      type: object
      properties:
        IpAddressV4:
          allOf:
          - $ref: '#/components/schemas/SensitiveString'
          description: The IPv4 local address of the connection.
        IpAddressV6:
          allOf:
          - $ref: '#/components/schemas/SensitiveString'
          description: The IPv6 local address of the connection.
      description: Contains information about the local IP address of the connection.
    LocalPortDetails:
      type: object
      properties:
        Port:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The port number of the local connection.
        PortName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The port name of the local connection.
      description: Contains information about the port for the local connection.
    Location:
      type: string
      minLength: 1
      maxLength: 300
    LoginAttribute:
      type: object
      properties:
        User:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Indicates the user name which attempted to log in.
        Application:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Indicates the application name used to attempt log in.
        FailedLoginAttempts:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: Represents the sum of failed (unsuccessful) login attempts
            made to establish a connection to the database instance.
        SuccessfulLoginAttempts:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: Represents the sum of successful connections (a correct combination
            of login attributes) made to the database instance by the actor.
      description: Information about the login attempts.
    LoginAttributes:
      type: array
      items:
        $ref: '#/components/schemas/LoginAttribute'
    Long:
      type: integer
      format: int64
    LongValue:
      type: integer
      format: int64
    MalwareProtectionConfiguration:
      type: object
      properties:
        ScanEc2InstanceWithFindings:
          allOf:
          - $ref: '#/components/schemas/ScanEc2InstanceWithFindings'
          description: Describes the configuration of Malware Protection for EC2 instances
            with findings.
      description: Describes whether Malware Protection will be enabled as a data
        source.
    MalwareProtectionConfigurationResult:
      type: object
      properties:
        ScanEc2InstanceWithFindings:
          allOf:
          - $ref: '#/components/schemas/ScanEc2InstanceWithFindingsResult'
          description: Describes the configuration of Malware Protection for EC2 instances
            with findings.
        ServiceRole:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The GuardDuty Malware Protection service role.
      description: An object that contains information on the status of all Malware
        Protection data sources.
    MalwareProtectionDataSourceFreeTrial:
      type: object
      properties:
        ScanEc2InstanceWithFindings:
          allOf:
          - $ref: '#/components/schemas/DataSourceFreeTrial'
          description: Describes whether Malware Protection for EC2 instances with
            findings is enabled as a data source.
      description: Provides details about Malware Protection when it is enabled as
        a data source.
    MalwareProtectionPlanActions:
      type: object
      properties:
        Tagging:
          allOf:
          - $ref: '#/components/schemas/MalwareProtectionPlanTaggingAction'
          description: Indicates whether the scanned S3 object will have tags about
            the scan result.
      description: Information about whether the tags will be added to the S3 object
        after scanning.
    MalwareProtectionPlanObjectPrefixesList:
      type: array
      items:
        $ref: '#/components/schemas/String'
    MalwareProtectionPlanStatus:
      type: string
      enum:
      - ACTIVE
      - WARNING
      - ERROR
    MalwareProtectionPlanStatusReason:
      type: object
      properties:
        Code:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Issue code.
        Message:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Issue message that specifies the reason. For information about
            potential troubleshooting steps, see [Troubleshooting Malware Protection
            for S3 status issues](https://docs.aws.amazon.com/guardduty/latest/ug/troubleshoot-s3-malware-protection-status-errors.html)
            in the _Amazon GuardDuty User Guide_.
      description: Information about the issue code and message associated to the
        status of your Malware Protection plan.
    MalwareProtectionPlanStatusReasonsList:
      type: array
      items:
        $ref: '#/components/schemas/MalwareProtectionPlanStatusReason'
    MalwareProtectionPlanSummary:
      type: object
      properties:
        MalwareProtectionPlanId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A unique identifier associated with Malware Protection plan.
      description: Information about the Malware Protection plan resource.
    MalwareProtectionPlanTaggingAction:
      type: object
      properties:
        Status:
          allOf:
          - $ref: '#/components/schemas/MalwareProtectionPlanTaggingActionStatus'
          description: Indicates whether or not the tags will added.
      description: Information about adding tags to the scanned S3 object after the
        scan result.
    MalwareProtectionPlanTaggingActionStatus:
      type: string
      enum:
      - ENABLED
      - DISABLED
    MalwareProtectionPlansSummary:
      type: array
      items:
        $ref: '#/components/schemas/MalwareProtectionPlanSummary'
    MalwareScanDetails:
      type: object
      properties:
        Threats:
          allOf:
          - $ref: '#/components/schemas/Threats'
          description: Information about the detected threats associated with the
            generated GuardDuty finding.
      description: Information about the malware scan that generated a GuardDuty finding.
    ManagementType:
      type: string
      enum:
      - AUTO_MANAGED
      - MANUAL
      - DISABLED
    MapEquals:
      type: array
      items:
        $ref: '#/components/schemas/ScanConditionPair'
    Master:
      type: object
      properties:
        AccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The ID of the account used as the administrator account.
        InvitationId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The value used to validate the administrator account to the
            member account.
        RelationshipStatus:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The status of the relationship between the administrator and
            member accounts.
        InvitedAt:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The timestamp when the invitation was sent.
      description: Contains information about the administrator account and invitation.
    MaxResults:
      type: integer
      minimum: 1
      maximum: 50
    MaxResults100:
      type: integer
      minimum: 1
      maximum: 100
    Member:
      type: object
      properties:
        AccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The ID of the member account.
        DetectorId:
          allOf:
          - $ref: '#/components/schemas/DetectorId'
          description: The detector ID of the member account.
        MasterId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The administrator account ID.
        Email:
          allOf:
          - $ref: '#/components/schemas/Email'
          description: The email address of the member account.
        RelationshipStatus:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The status of the relationship between the member and the administrator.
        InvitedAt:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The timestamp when the invitation was sent.
        UpdatedAt:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The last-updated timestamp of the member.
        AdministratorId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The administrator account ID.
      required:
      - AccountId
      - MasterId
      - Email
      - RelationshipStatus
      - UpdatedAt
      description: Contains information about the member account.
    MemberAdditionalConfiguration:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/OrgFeatureAdditionalConfiguration'
          description: Name of the additional configuration.
        Status:
          allOf:
          - $ref: '#/components/schemas/FeatureStatus'
          description: Status of the additional configuration.
      description: Information about the additional configuration for the member account.
    MemberAdditionalConfigurationResult:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/OrgFeatureAdditionalConfiguration'
          description: Indicates the name of the additional configuration that is
            set for the member account.
        Status:
          allOf:
          - $ref: '#/components/schemas/FeatureStatus'
          description: Indicates the status of the additional configuration that is
            set for the member account.
        UpdatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp at which the additional configuration was set
            for the member account. This is in UTC format.
      description: Information about the additional configuration for the member account.
    MemberAdditionalConfigurationResults:
      type: array
      items:
        $ref: '#/components/schemas/MemberAdditionalConfigurationResult'
    MemberAdditionalConfigurations:
      type: array
      items:
        $ref: '#/components/schemas/MemberAdditionalConfiguration'
    MemberDataSourceConfiguration:
      type: object
      properties:
        AccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The account ID for the member account.
        DataSources:
          allOf:
          - $ref: '#/components/schemas/DataSourceConfigurationsResult'
          description: Contains information on the status of data sources for the
            account.
        Features:
          allOf:
          - $ref: '#/components/schemas/MemberFeaturesConfigurationsResults'
          description: Contains information about the status of the features for the
            member account.
      required:
      - AccountId
      description: Contains information on which data sources are enabled for a member
        account.
    MemberDataSourceConfigurations:
      type: array
      items:
        $ref: '#/components/schemas/MemberDataSourceConfiguration'
    MemberFeaturesConfiguration:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/OrgFeature'
          description: The name of the feature.
        Status:
          allOf:
          - $ref: '#/components/schemas/FeatureStatus'
          description: The status of the feature.
        AdditionalConfiguration:
          allOf:
          - $ref: '#/components/schemas/MemberAdditionalConfigurations'
          description: Additional configuration of the feature for the member account.
      description: Contains information about the features for the member account.
    MemberFeaturesConfigurationResult:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/OrgFeature'
          description: Indicates the name of the feature that is enabled for the detector.
        Status:
          allOf:
          - $ref: '#/components/schemas/FeatureStatus'
          description: Indicates the status of the feature that is enabled for the
            detector.
        UpdatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp at which the feature object was updated.
        AdditionalConfiguration:
          allOf:
          - $ref: '#/components/schemas/MemberAdditionalConfigurationResults'
          description: Indicates the additional configuration of the feature that
            is configured for the member account.
      description: Contains information about the features for the member account.
    MemberFeaturesConfigurations:
      type: array
      items:
        $ref: '#/components/schemas/MemberFeaturesConfiguration'
    MemberFeaturesConfigurationsResults:
      type: array
      items:
        $ref: '#/components/schemas/MemberFeaturesConfigurationResult'
    Members:
      type: array
      items:
        $ref: '#/components/schemas/Member'
    MemoryRegionsList:
      type: array
      items:
        $ref: '#/components/schemas/String'
    MfaStatus:
      type: string
      enum:
      - ENABLED
      - DISABLED
    Name:
      type: string
      minLength: 1
      maxLength: 300
    Neq:
      type: array
      items:
        $ref: '#/components/schemas/String'
    NetworkConnection:
      type: object
      properties:
        Direction:
          allOf:
          - $ref: '#/components/schemas/NetworkDirection'
          description: The direction in which the network traffic is flowing.
      required:
      - Direction
      description: Contains information about the network connection.
    NetworkConnectionAction:
      type: object
      properties:
        Blocked:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether EC2 blocked the network connection to your
            instance.
        ConnectionDirection:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The network connection direction.
        LocalPortDetails:
          allOf:
          - $ref: '#/components/schemas/LocalPortDetails'
          description: The local port information of the connection.
        Protocol:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The network connection protocol.
        LocalIpDetails:
          allOf:
          - $ref: '#/components/schemas/LocalIpDetails'
          description: The local IP information of the connection.
        LocalNetworkInterface:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The EC2 instance's local elastic network interface utilized
            for the connection.
        RemoteIpDetails:
          allOf:
          - $ref: '#/components/schemas/RemoteIpDetails'
          description: The remote IP information of the connection.
        RemotePortDetails:
          allOf:
          - $ref: '#/components/schemas/RemotePortDetails'
          description: The remote port information of the connection.
      description: Contains information about the NETWORK_CONNECTION action described
        in the finding.
    NetworkDirection:
      type: string
      enum:
      - INBOUND
      - OUTBOUND
    NetworkEndpoint:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the network endpoint.
        Ip:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The IP address associated with the network endpoint.
        Domain:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The domain information for the network endpoint.
        Port:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The port number associated with the network endpoint.
        Location:
          allOf:
          - $ref: '#/components/schemas/NetworkGeoLocation'
          description: Information about the location of the network endpoint.
        AutonomousSystem:
          allOf:
          - $ref: '#/components/schemas/AutonomousSystem'
          description: The Autonomous System (AS) of the network endpoint.
        Connection:
          allOf:
          - $ref: '#/components/schemas/NetworkConnection'
          description: Information about the network connection.
      required:
      - Id
      description: Contains information about network endpoints that were observed
        in the attack sequence.
    NetworkEndpoints:
      type: array
      items:
        $ref: '#/components/schemas/NetworkEndpoint'
    NetworkGeoLocation:
      type: object
      properties:
        City:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the city.
        Country:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the country.
        Latitude:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: The latitude information of the endpoint location.
        Longitude:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: The longitude information of the endpoint location.
      required:
      - City
      - Country
      - Latitude
      - Longitude
      description: Contains information about network endpoint location.
    NetworkInterface:
      type: object
      properties:
        Ipv6Addresses:
          allOf:
          - $ref: '#/components/schemas/Ipv6Addresses'
          description: A list of IPv6 addresses for the EC2 instance.
        NetworkInterfaceId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the network interface.
        PrivateDnsName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The private DNS name of the EC2 instance.
        PrivateIpAddress:
          allOf:
          - $ref: '#/components/schemas/SensitiveString'
          description: The private IP address of the EC2 instance.
        PrivateIpAddresses:
          allOf:
          - $ref: '#/components/schemas/PrivateIpAddresses'
          description: Other private IP address information of the EC2 instance.
        PublicDnsName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The public DNS name of the EC2 instance.
        PublicIp:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The public IP address of the EC2 instance.
        SecurityGroups:
          allOf:
          - $ref: '#/components/schemas/SecurityGroups'
          description: The security groups associated with the EC2 instance.
        SubnetId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The subnet ID of the EC2 instance.
        VpcId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The VPC ID of the EC2 instance.
      description: Contains information about the elastic network interface of the
        EC2 instance.
    NetworkInterfaces:
      type: array
      items:
        $ref: '#/components/schemas/NetworkInterface'
    NonEmptyString:
      type: string
      minLength: 1
      maxLength: 200
    NotEquals:
      type: array
      items:
        $ref: '#/components/schemas/String'
    ObservationTexts:
      type: array
      items:
        $ref: '#/components/schemas/String'
    Observations:
      type: object
      properties:
        Text:
          allOf:
          - $ref: '#/components/schemas/ObservationTexts'
          description: The text that was unusual.
      description: Contains information about the observed behavior.
    OrderBy:
      type: string
      enum:
      - ASC
      - DESC
    OrgFeature:
      type: string
      enum:
      - S3_DATA_EVENTS
      - EKS_AUDIT_LOGS
      - EBS_MALWARE_PROTECTION
      - RDS_LOGIN_EVENTS
      - EKS_RUNTIME_MONITORING
      - LAMBDA_NETWORK_LOGS
      - RUNTIME_MONITORING
    OrgFeatureAdditionalConfiguration:
      type: string
      enum:
      - EKS_ADDON_MANAGEMENT
      - ECS_FARGATE_AGENT_MANAGEMENT
      - EC2_AGENT_MANAGEMENT
    OrgFeatureStatus:
      type: string
      enum:
      - NEW
      - NONE
      - ALL
    Organization:
      type: object
      properties:
        Asn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Autonomous System Number (ASN) of the internet provider
            of the remote IP address.
        AsnOrg:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The organization that registered this ASN.
        Isp:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ISP information for the internet provider.
        Org:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the internet provider.
      description: Contains information about the ISP organization of the remote IP
        address.
    OrganizationAdditionalConfiguration:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/OrgFeatureAdditionalConfiguration'
          description: The name of the additional configuration that will be configured
            for the organization. These values are applicable to only Runtime Monitoring
            protection plan.
        AutoEnable:
          allOf:
          - $ref: '#/components/schemas/OrgFeatureStatus'
          description: "The status of the additional configuration that will be configured\
            \ for the organization. Use one of the following values to configure the\
            \ feature status for the entire organization:\n\n  * `NEW`: Indicates\
            \ that when a new account joins the organization, they will have the additional\
            \ configuration enabled automatically. \n\n  * `ALL`: Indicates that all\
            \ accounts in the organization have the additional configuration enabled\
            \ automatically. This includes `NEW` accounts that join the organization\
            \ and accounts that may have been suspended or removed from the organization\
            \ in GuardDuty.\n\nIt may take up to 24 hours to update the configuration\
            \ for all the member accounts.\n\n  * `NONE`: Indicates that the additional\
            \ configuration will not be automatically enabled for any account in the\
            \ organization. The administrator must manage the additional configuration\
            \ for each account individually."
      description: 'A list of additional configurations which will be configured for
        the organization.


        Additional configuration applies to only GuardDuty Runtime Monitoring protection
        plan.'
    OrganizationAdditionalConfigurationResult:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/OrgFeatureAdditionalConfiguration'
          description: The name of the additional configuration that is configured
            for the member accounts within the organization. These values are applicable
            to only Runtime Monitoring protection plan.
        AutoEnable:
          allOf:
          - $ref: '#/components/schemas/OrgFeatureStatus'
          description: "Describes the status of the additional configuration that\
            \ is configured for the member accounts within the organization. One of\
            \ the following values is the status for the entire organization:\n\n\
            \  * `NEW`: Indicates that when a new account joins the organization,\
            \ they will have the additional configuration enabled automatically. \n\
            \n  * `ALL`: Indicates that all accounts in the organization have the\
            \ additional configuration enabled automatically. This includes `NEW`\
            \ accounts that join the organization and accounts that may have been\
            \ suspended or removed from the organization in GuardDuty.\n\nIt may take\
            \ up to 24 hours to update the configuration for all the member accounts.\n\
            \n  * `NONE`: Indicates that the additional configuration will not be\
            \ automatically enabled for any account in the organization. The administrator\
            \ must manage the additional configuration for each account individually."
      description: A list of additional configuration which will be configured for
        the organization.
    OrganizationAdditionalConfigurationResults:
      type: array
      items:
        $ref: '#/components/schemas/OrganizationAdditionalConfigurationResult'
    OrganizationAdditionalConfigurations:
      type: array
      items:
        $ref: '#/components/schemas/OrganizationAdditionalConfiguration'
    OrganizationDataSourceConfigurations:
      type: object
      properties:
        S3Logs:
          allOf:
          - $ref: '#/components/schemas/OrganizationS3LogsConfiguration'
          description: Describes whether S3 data event logs are enabled for new members
            of the organization.
        Kubernetes:
          allOf:
          - $ref: '#/components/schemas/OrganizationKubernetesConfiguration'
          description: Describes the configuration of Kubernetes data sources for
            new members of the organization.
        MalwareProtection:
          allOf:
          - $ref: '#/components/schemas/OrganizationMalwareProtectionConfiguration'
          description: Describes the configuration of Malware Protection for new members
            of the organization.
      description: An object that contains information on which data sources will
        be configured to be automatically enabled for new members within the organization.
    OrganizationDataSourceConfigurationsResult:
      type: object
      properties:
        S3Logs:
          allOf:
          - $ref: '#/components/schemas/OrganizationS3LogsConfigurationResult'
          description: Describes whether S3 data event logs are enabled as a data
            source.
        Kubernetes:
          allOf:
          - $ref: '#/components/schemas/OrganizationKubernetesConfigurationResult'
          description: Describes the configuration of Kubernetes data sources.
        MalwareProtection:
          allOf:
          - $ref: '#/components/schemas/OrganizationMalwareProtectionConfigurationResult'
          description: Describes the configuration of Malware Protection data source
            for an organization.
      required:
      - S3Logs
      description: An object that contains information on which data sources are automatically
        enabled for new members within the organization.
    OrganizationDetails:
      type: object
      properties:
        UpdatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp at which the organization statistics was last
            updated. This is in UTC format.
        OrganizationStatistics:
          allOf:
          - $ref: '#/components/schemas/OrganizationStatistics'
          description: Information about the GuardDuty coverage statistics for members
            in your Amazon Web Services organization.
      description: Information about GuardDuty coverage statistics for members in
        your Amazon Web Services organization.
    OrganizationEbsVolumes:
      type: object
      properties:
        AutoEnable:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether scanning EBS volumes should be auto-enabled for new
            members joining the organization.
      description: Organization-wide EBS volumes scan configuration.
    OrganizationEbsVolumesResult:
      type: object
      properties:
        AutoEnable:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: An object that contains the status of whether scanning EBS
            volumes should be auto-enabled for new members joining the organization.
      description: An object that contains information on the status of whether EBS
        volumes scanning will be enabled as a data source for an organization.
    OrganizationFeatureConfiguration:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/OrgFeature'
          description: The name of the feature that will be configured for the organization.
        AutoEnable:
          allOf:
          - $ref: '#/components/schemas/OrgFeatureStatus'
          description: "Describes the status of the feature that is configured for\
            \ the member accounts within the organization. One of the following values\
            \ is the status for the entire organization:\n\n  * `NEW`: Indicates that\
            \ when a new account joins the organization, they will have the feature\
            \ enabled automatically. \n\n  * `ALL`: Indicates that all accounts in\
            \ the organization have the feature enabled automatically. This includes\
            \ `NEW` accounts that join the organization and accounts that may have\
            \ been suspended or removed from the organization in GuardDuty.\n\nIt\
            \ may take up to 24 hours to update the configuration for all the member\
            \ accounts.\n\n  * `NONE`: Indicates that the feature will not be automatically\
            \ enabled for any account in the organization. The administrator must\
            \ manage the feature for each account individually."
        AdditionalConfiguration:
          allOf:
          - $ref: '#/components/schemas/OrganizationAdditionalConfigurations'
          description: The additional information that will be configured for the
            organization.
      description: A list of features which will be configured for the organization.
    OrganizationFeatureConfigurationResult:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/OrgFeature'
          description: The name of the feature that is configured for the member accounts
            within the organization.
        AutoEnable:
          allOf:
          - $ref: '#/components/schemas/OrgFeatureStatus'
          description: "Describes the status of the feature that is configured for\
            \ the member accounts within the organization.\n\n  * `NEW`: Indicates\
            \ that when a new account joins the organization, they will have the feature\
            \ enabled automatically. \n\n  * `ALL`: Indicates that all accounts in\
            \ the organization have the feature enabled automatically. This includes\
            \ `NEW` accounts that join the organization and accounts that may have\
            \ been suspended or removed from the organization in GuardDuty.\n\n  *\
            \ `NONE`: Indicates that the feature will not be automatically enabled\
            \ for any account in the organization. In this case, each account will\
            \ be managed individually by the administrator."
        AdditionalConfiguration:
          allOf:
          - $ref: '#/components/schemas/OrganizationAdditionalConfigurationResults'
          description: The additional configuration that is configured for the member
            accounts within the organization.
      description: A list of features which will be configured for the organization.
    OrganizationFeatureStatistics:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/OrgFeature'
          description: Name of the feature.
        EnabledAccountsCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: Total number of accounts that have enabled a specific feature.
        AdditionalConfiguration:
          allOf:
          - $ref: '#/components/schemas/OrganizationFeatureStatisticsAdditionalConfigurations'
          description: Name of the additional configuration.
      description: Information about the number of accounts that have enabled a specific
        feature.
    OrganizationFeatureStatisticsAdditionalConfiguration:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/OrgFeatureAdditionalConfiguration'
          description: Name of the additional configuration within a feature.
        EnabledAccountsCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: Total number of accounts that have enabled the additional configuration.
      description: Information about the coverage statistic for the additional configuration
        of the feature.
    OrganizationFeatureStatisticsAdditionalConfigurations:
      type: array
      items:
        $ref: '#/components/schemas/OrganizationFeatureStatisticsAdditionalConfiguration'
    OrganizationFeatureStatisticsResults:
      type: array
      items:
        $ref: '#/components/schemas/OrganizationFeatureStatistics'
    OrganizationFeaturesConfigurations:
      type: array
      items:
        $ref: '#/components/schemas/OrganizationFeatureConfiguration'
    OrganizationFeaturesConfigurationsResults:
      type: array
      items:
        $ref: '#/components/schemas/OrganizationFeatureConfigurationResult'
    OrganizationKubernetesAuditLogsConfiguration:
      type: object
      properties:
        AutoEnable:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: A value that contains information on whether Kubernetes audit
            logs should be enabled automatically as a data source for the organization.
      required:
      - AutoEnable
      description: Organization-wide Kubernetes audit logs configuration.
    OrganizationKubernetesAuditLogsConfigurationResult:
      type: object
      properties:
        AutoEnable:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether Kubernetes audit logs data source should be auto-enabled
            for new members joining the organization.
      required:
      - AutoEnable
      description: The current configuration of Kubernetes audit logs as a data source
        for the organization.
    OrganizationKubernetesConfiguration:
      type: object
      properties:
        AuditLogs:
          allOf:
          - $ref: '#/components/schemas/OrganizationKubernetesAuditLogsConfiguration'
          description: Whether Kubernetes audit logs data source should be auto-enabled
            for new members joining the organization.
      required:
      - AuditLogs
      description: Organization-wide Kubernetes data sources configurations.
    OrganizationKubernetesConfigurationResult:
      type: object
      properties:
        AuditLogs:
          allOf:
          - $ref: '#/components/schemas/OrganizationKubernetesAuditLogsConfigurationResult'
          description: The current configuration of Kubernetes audit logs as a data
            source for the organization.
      required:
      - AuditLogs
      description: The current configuration of all Kubernetes data sources for the
        organization.
    OrganizationMalwareProtectionConfiguration:
      type: object
      properties:
        ScanEc2InstanceWithFindings:
          allOf:
          - $ref: '#/components/schemas/OrganizationScanEc2InstanceWithFindings'
          description: Whether Malware Protection for EC2 instances with findings
            should be auto-enabled for new members joining the organization.
      description: Organization-wide Malware Protection configurations.
    OrganizationMalwareProtectionConfigurationResult:
      type: object
      properties:
        ScanEc2InstanceWithFindings:
          allOf:
          - $ref: '#/components/schemas/OrganizationScanEc2InstanceWithFindingsResult'
          description: Describes the configuration for scanning EC2 instances with
            findings for an organization.
      description: An object that contains information on the status of all Malware
        Protection data source for an organization.
    OrganizationS3LogsConfiguration:
      type: object
      properties:
        AutoEnable:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: A value that contains information on whether S3 data event
            logs will be enabled automatically as a data source for the organization.
      required:
      - AutoEnable
      description: Describes whether S3 data event logs will be automatically enabled
        for new members of the organization.
    OrganizationS3LogsConfigurationResult:
      type: object
      properties:
        AutoEnable:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: A value that describes whether S3 data event logs are automatically
            enabled for new members of the organization.
      required:
      - AutoEnable
      description: The current configuration of S3 data event logs as a data source
        for the organization.
    OrganizationScanEc2InstanceWithFindings:
      type: object
      properties:
        EbsVolumes:
          allOf:
          - $ref: '#/components/schemas/OrganizationEbsVolumes'
          description: Whether scanning EBS volumes should be auto-enabled for new
            members joining the organization.
      description: Organization-wide EC2 instances with findings scan configuration.
    OrganizationScanEc2InstanceWithFindingsResult:
      type: object
      properties:
        EbsVolumes:
          allOf:
          - $ref: '#/components/schemas/OrganizationEbsVolumesResult'
          description: Describes the configuration for scanning EBS volumes for an
            organization.
      description: An object that contains information on the status of scanning EC2
        instances with findings for an organization.
    OrganizationStatistics:
      type: object
      properties:
        TotalAccountsCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: Total number of accounts in your Amazon Web Services organization.
        MemberAccountsCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: Total number of accounts in your Amazon Web Services organization
            that are associated with GuardDuty.
        ActiveAccountsCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: Total number of active accounts in your Amazon Web Services
            organization that are associated with GuardDuty.
        EnabledAccountsCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: Total number of accounts that have enabled GuardDuty.
        CountByFeature:
          allOf:
          - $ref: '#/components/schemas/OrganizationFeatureStatisticsResults'
          description: Retrieves the coverage statistics for each feature.
      description: 'Information about the coverage statistics of the features for
        the entire Amazon Web Services organization.


        When you create a new Amazon Web Services organization, it might take up to
        24 hours to generate the statistics summary for this organization.'
    Owner:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The canonical user ID of the bucket owner. For information
            about locating your canonical user ID see [Finding Your Account Canonical
            User ID.](https://docs.aws.amazon.com/general/latest/gr/acct-identifiers.html#FindingCanonicalId)
      description: Contains information on the owner of the bucket.
    PermissionConfiguration:
      type: object
      properties:
        BucketLevelPermissions:
          allOf:
          - $ref: '#/components/schemas/BucketLevelPermissions'
          description: Contains information about the bucket level permissions for
            the S3 bucket.
        AccountLevelPermissions:
          allOf:
          - $ref: '#/components/schemas/AccountLevelPermissions'
          description: Contains information about the account level permissions on
            the S3 bucket.
      description: Contains information about how permissions are configured for the
        S3 bucket.
    PortProbeAction:
      type: object
      properties:
        Blocked:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether EC2 blocked the port probe to the instance,
            such as with an ACL.
        PortProbeDetails:
          allOf:
          - $ref: '#/components/schemas/PortProbeDetails'
          description: A list of objects related to port probe details.
      description: Contains information about the PORT_PROBE action described in the
        finding.
    PortProbeDetail:
      type: object
      properties:
        LocalPortDetails:
          allOf:
          - $ref: '#/components/schemas/LocalPortDetails'
          description: The local port information of the connection.
        LocalIpDetails:
          allOf:
          - $ref: '#/components/schemas/LocalIpDetails'
          description: The local IP information of the connection.
        RemoteIpDetails:
          allOf:
          - $ref: '#/components/schemas/RemoteIpDetails'
          description: The remote IP information of the connection.
      description: Contains information about the port probe details.
    PortProbeDetails:
      type: array
      items:
        $ref: '#/components/schemas/PortProbeDetail'
    PositiveLong:
      type: integer
      format: int64
      minimum: 0
    PrivateIpAddressDetails:
      type: object
      properties:
        PrivateDnsName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The private DNS name of the EC2 instance.
        PrivateIpAddress:
          allOf:
          - $ref: '#/components/schemas/SensitiveString'
          description: The private IP address of the EC2 instance.
      description: Contains other private IP address information of the EC2 instance.
    PrivateIpAddresses:
      type: array
      items:
        $ref: '#/components/schemas/PrivateIpAddressDetails'
    ProcessDetails:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the process.
        ExecutablePath:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The absolute path of the process executable file.
        ExecutableSha256:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The `SHA256` hash of the process executable.
        NamespacePid:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The ID of the child process.
        Pwd:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The present working directory of the process.
        Pid:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The ID of the process.
        StartTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time when the process started. This is in UTC format.
        Uuid:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique ID assigned to the process by GuardDuty.
        ParentUuid:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique ID of the parent process. This ID is assigned to
            the parent process by GuardDuty.
        User:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The user that executed the process.
        UserId:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The unique ID of the user that executed the process.
        Euid:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The effective user ID of the user that executed the process.
        Lineage:
          allOf:
          - $ref: '#/components/schemas/Lineage'
          description: Information about the process's lineage.
      description: Information about the observed process.
    ProductCode:
      type: object
      properties:
        Code:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The product code information.
        ProductType:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The product code type.
      description: Contains information about the product code for the EC2 instance.
    ProductCodes:
      type: array
      items:
        $ref: '#/components/schemas/ProductCode'
    ProfileSubtype:
      type: string
      enum:
      - FREQUENT
      - INFREQUENT
      - UNSEEN
      - RARE
    ProfileType:
      type: string
      enum:
      - FREQUENCY
    PublicAccess:
      type: object
      properties:
        PermissionConfiguration:
          allOf:
          - $ref: '#/components/schemas/PermissionConfiguration'
          description: Contains information about how permissions are configured for
            the S3 bucket.
        EffectivePermission:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Describes the effective permission on this bucket after factoring
            all attached policies.
      description: Describes the public access policies that apply to the S3 bucket.
    PublicAccessConfiguration:
      type: object
      properties:
        PublicAclAccess:
          allOf:
          - $ref: '#/components/schemas/PublicAccessStatus'
          description: Indicates whether or not there is a setting that allows public
            access to the Amazon S3 buckets through access control lists (ACLs).
        PublicPolicyAccess:
          allOf:
          - $ref: '#/components/schemas/PublicAccessStatus'
          description: Indicates whether or not there is a setting that allows public
            access to the Amazon S3 bucket policy.
        PublicAclIgnoreBehavior:
          allOf:
          - $ref: '#/components/schemas/PublicAclIgnoreBehavior'
          description: Indicates whether or not there is a setting that ignores all
            public access control lists (ACLs) on the Amazon S3 bucket and the objects
            that it contains.
        PublicBucketRestrictBehavior:
          allOf:
          - $ref: '#/components/schemas/PublicBucketRestrictBehavior'
          description: Indicates whether or not there is a setting that restricts
            access to the bucket with specified policies.
      description: 'Describes public access policies that apply to the Amazon S3 bucket.


        For information about each of the following settings, see [Blocking public
        access to your Amazon S3 storage](https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-control-block-public-access.html)
        in the _Amazon S3 User Guide_.'
    PublicAccessStatus:
      type: string
      enum:
      - BLOCKED
      - ALLOWED
    PublicAclIgnoreBehavior:
      type: string
      enum:
      - IGNORED
      - NOT_IGNORED
    PublicBucketRestrictBehavior:
      type: string
      enum:
      - RESTRICTED
      - NOT_RESTRICTED
    PublishingStatus:
      type: string
      enum:
      - PENDING_VERIFICATION
      - PUBLISHING
      - UNABLE_TO_PUBLISH_FIX_DESTINATION_PROPERTY
      - STOPPED
    RdsDbInstanceDetails:
      type: object
      properties:
        DbInstanceIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The identifier associated to the database instance that was
            involved in the finding.
        Engine:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The database engine of the database instance involved in the
            finding.
        EngineVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The version of the database engine that was involved in the
            finding.
        DbClusterIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The identifier of the database cluster that contains the database
            instance ID involved in the finding.
        DbInstanceArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) that identifies the database
            instance involved in the finding.
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: Information about the tag key-value pairs.
      description: Contains information about the resource type `RDSDBInstance` involved
        in a GuardDuty finding.
    RdsDbUserDetails:
      type: object
      properties:
        User:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The user name used in the anomalous login attempt.
        Application:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The application name used in the anomalous login attempt.
        Database:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the database instance involved in the anomalous
            login attempt.
        Ssl:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The version of the Secure Socket Layer (SSL) used for the network.
        AuthMethod:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The authentication method used by the user involved in the
            finding.
      description: Contains information about the user and authentication details
        for a database instance involved in the finding.
    RdsLimitlessDbDetails:
      type: object
      properties:
        DbShardGroupIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name associated with the Limitless DB shard group.
        DbShardGroupResourceId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The resource identifier of the DB shard group within the Limitless
            Database.
        DbShardGroupArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) that identifies the DB shard
            group.
        Engine:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The database engine of the database instance involved in the
            finding.
        EngineVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The version of the database engine.
        DbClusterIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the database cluster that is a part of the Limitless
            Database.
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: Information about the tag key-value pair.
      description: Contains information about the resource type `RDSLimitlessDB` that
        is involved in a GuardDuty finding.
    RdsLoginAttemptAction:
      type: object
      properties:
        RemoteIpDetails:
          $ref: '#/components/schemas/RemoteIpDetails'
        LoginAttributes:
          allOf:
          - $ref: '#/components/schemas/LoginAttributes'
          description: Indicates the login attributes used in the login attempt.
      description: Indicates that a login attempt was made to the potentially compromised
        database from a remote IP address.
    RemoteAccountDetails:
      type: object
      properties:
        AccountId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Web Services account ID of the remote API caller.
        Affiliated:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Details on whether the Amazon Web Services account of the remote
            API caller is related to your GuardDuty environment. If this value is
            `True` the API caller is affiliated to your account in some way. If it
            is `False` the API caller is from outside your environment.
      description: Contains details about the remote Amazon Web Services account that
        made the API call.
    RemoteIpDetails:
      type: object
      properties:
        City:
          allOf:
          - $ref: '#/components/schemas/City'
          description: The city information of the remote IP address.
        Country:
          allOf:
          - $ref: '#/components/schemas/Country'
          description: The country code of the remote IP address.
        GeoLocation:
          allOf:
          - $ref: '#/components/schemas/GeoLocation'
          description: The location information of the remote IP address.
        IpAddressV4:
          allOf:
          - $ref: '#/components/schemas/SensitiveString'
          description: The IPv4 remote address of the connection.
        IpAddressV6:
          allOf:
          - $ref: '#/components/schemas/SensitiveString'
          description: The IPv6 remote address of the connection.
        Organization:
          allOf:
          - $ref: '#/components/schemas/Organization'
          description: The ISP organization information of the remote IP address.
      description: Contains information about the remote IP address of the connection.
    RemotePortDetails:
      type: object
      properties:
        Port:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The port number of the remote connection.
        PortName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The port name of the remote connection.
      description: Contains information about the remote port.
    Resource:
      type: object
      properties:
        AccessKeyDetails:
          allOf:
          - $ref: '#/components/schemas/AccessKeyDetails'
          description: The IAM access key details (user information) of a user that
            engaged in the activity that prompted GuardDuty to generate a finding.
        S3BucketDetails:
          allOf:
          - $ref: '#/components/schemas/S3BucketDetails'
          description: Contains information on the S3 bucket.
        InstanceDetails:
          allOf:
          - $ref: '#/components/schemas/InstanceDetails'
          description: The information about the EC2 instance associated with the
            activity that prompted GuardDuty to generate a finding.
        EksClusterDetails:
          allOf:
          - $ref: '#/components/schemas/EksClusterDetails'
          description: Details about the EKS cluster involved in a Kubernetes finding.
        KubernetesDetails:
          allOf:
          - $ref: '#/components/schemas/KubernetesDetails'
          description: Details about the Kubernetes user and workload involved in
            a Kubernetes finding.
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The type of Amazon Web Services resource.
        EbsVolumeDetails:
          allOf:
          - $ref: '#/components/schemas/EbsVolumeDetails'
          description: Contains list of scanned and skipped EBS volumes with details.
        EcsClusterDetails:
          allOf:
          - $ref: '#/components/schemas/EcsClusterDetails'
          description: Contains information about the details of the ECS Cluster.
        ContainerDetails:
          $ref: '#/components/schemas/Container'
        RdsDbInstanceDetails:
          allOf:
          - $ref: '#/components/schemas/RdsDbInstanceDetails'
          description: Contains information about the database instance to which an
            anomalous login attempt was made.
        RdsLimitlessDbDetails:
          allOf:
          - $ref: '#/components/schemas/RdsLimitlessDbDetails'
          description: Contains information about the RDS Limitless database that
            was involved in a GuardDuty finding.
        RdsDbUserDetails:
          allOf:
          - $ref: '#/components/schemas/RdsDbUserDetails'
          description: Contains information about the user details through which anomalous
            login attempt was made.
        LambdaDetails:
          allOf:
          - $ref: '#/components/schemas/LambdaDetails'
          description: Contains information about the Lambda function that was involved
            in a finding.
      description: Contains information about the Amazon Web Services resource associated
        with the activity that prompted GuardDuty to generate a finding.
    ResourceArn:
      type: string
      pattern: ^arn:[A-Za-z-]+:[A-Za-z0-9]+:[A-Za-z0-9-]+:\d+:(([A-Za-z0-9-]+)[:\/])?[A-Za-z0-9-]*$
    ResourceData:
      type: object
      properties:
        S3Bucket:
          allOf:
          - $ref: '#/components/schemas/S3Bucket'
          description: Contains information about the Amazon S3 bucket.
        Ec2Instance:
          allOf:
          - $ref: '#/components/schemas/Ec2Instance'
          description: Contains information about the Amazon EC2 instance.
        AccessKey:
          allOf:
          - $ref: '#/components/schemas/AccessKey'
          description: Contains information about the IAM access key details of a
            user that involved in the GuardDuty finding.
        Ec2NetworkInterface:
          allOf:
          - $ref: '#/components/schemas/Ec2NetworkInterface'
          description: Contains information about the elastic network interface of
            the Amazon EC2 instance.
        S3Object:
          allOf:
          - $ref: '#/components/schemas/S3Object'
          description: Contains information about the Amazon S3 object.
      description: Contains information about the Amazon Web Services resource that
        is associated with the activity that prompted GuardDuty to generate a finding.
    ResourceDetails:
      type: object
      properties:
        InstanceArn:
          allOf:
          - $ref: '#/components/schemas/InstanceArn'
          description: Instance ARN that was scanned in the scan entry.
      description: Represents the resources that were scanned in the scan entry.
    ResourceList:
      type: array
      items:
        $ref: '#/components/schemas/String'
    ResourceNotFoundException:
      type: object
      properties:
        Message:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The error message.
        Type:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The error type.
      description: The requested resource can't be found.
    ResourceStatistics:
      type: object
      properties:
        AccountId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the Amazon Web Services account.
        LastGeneratedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp at which the statistics for this resource was
            last generated.
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: "ID associated with each resource. The following list provides\
            \ the mapping of the resource type and resource ID.\n\n**Mapping of resource\
            \ and resource ID**\n\n  * AccessKey - `resource.accessKeyDetails.accessKeyId`\n\
            \n  * Container - `resource.containerDetails.id`\n\n  * ECSCluster - `resource.ecsClusterDetails.name`\n\
            \n  * EKSCluster - `resource.eksClusterDetails.name`\n\n  * Instance -\
            \ `resource.instanceDetails.instanceId`\n\n  * KubernetesCluster - `resource.kubernetesDetails.kubernetesWorkloadDetails.name`\n\
            \n  * Lambda - `resource.lambdaDetails.functionName`\n\n  * RDSDBInstance\
            \ - `resource.rdsDbInstanceDetails.dbInstanceIdentifier`\n\n  * S3Bucket\
            \ - `resource.s3BucketDetails.name`\n\n  * S3Object - `resource.s3BucketDetails.name`"
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The type of resource.
        TotalFindings:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The total number of findings associated with this resource.
      description: Information about each resource type associated with the `groupedByResource`
        statistics.
    ResourceType:
      type: string
      enum:
      - EKS
      - ECS
      - EC2
    ResourceUids:
      type: array
      items:
        $ref: '#/components/schemas/String'
    ResourceV2:
      type: object
      properties:
        Uid:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique identifier of the resource.
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the resource.
        AccountId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Web Services account ID to which the resource belongs.
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/FindingResourceType'
          description: The type of the Amazon Web Services resource.
        Region:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Web Services Region where the resource belongs.
        Service:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Web Services service of the resource.
        CloudPartition:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The cloud partition within the Amazon Web Services Region to
            which the resource belongs.
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: Contains information about the tags associated with the resource.
        Data:
          allOf:
          - $ref: '#/components/schemas/ResourceData'
          description: Contains information about the Amazon Web Services resource
            associated with the activity that prompted GuardDuty to generate a finding.
      required:
      - Uid
      - ResourceType
      description: Contains information about the Amazon Web Services resource that
        is associated with the GuardDuty finding.
    Resources:
      type: array
      items:
        $ref: '#/components/schemas/ResourceV2'
    RuntimeContext:
      type: object
      properties:
        ModifyingProcess:
          allOf:
          - $ref: '#/components/schemas/ProcessDetails'
          description: Information about the process that modified the current process.
            This is available for multiple finding types.
        ModifiedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp at which the process modified the current process.
            The timestamp is in UTC date string format.
        ScriptPath:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The path to the script that was executed.
        LibraryPath:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The path to the new library that was loaded.
        LdPreloadValue:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The value of the LD_PRELOAD environment variable.
        SocketPath:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The path to the docket socket that was accessed.
        RuncBinaryPath:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The path to the leveraged `runc` implementation.
        ReleaseAgentPath:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The path in the container that modified the release agent file.
        MountSource:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The path on the host that is mounted by the container.
        MountTarget:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The path in the container that is mapped to the host directory.
        FileSystemType:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Represents the type of mounted fileSystem.
        Flags:
          allOf:
          - $ref: '#/components/schemas/FlagsList'
          description: Represents options that control the behavior of a runtime operation
            or action. For example, a filesystem mount operation may contain a read-only
            flag.
        ModuleName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the module loaded into the kernel.
        ModuleFilePath:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The path to the module loaded into the kernel.
        ModuleSha256:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The `SHA256` hash of the module.
        ShellHistoryFilePath:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The path to the modified shell history file.
        TargetProcess:
          allOf:
          - $ref: '#/components/schemas/ProcessDetails'
          description: Information about the process that had its memory overwritten
            by the current process.
        AddressFamily:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Represents the communication protocol associated with the address.
            For example, the address family `AF_INET` is used for IP version of 4
            protocol.
        IanaProtocolNumber:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: Specifies a particular protocol within the address family.
            Usually there is a single protocol in address families. For example, the
            address family `AF_INET` only has the IP protocol.
        MemoryRegions:
          allOf:
          - $ref: '#/components/schemas/MemoryRegionsList'
          description: Specifies the Region of a process's address space such as stack
            and heap.
        ToolName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Name of the potentially suspicious tool.
        ToolCategory:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Category that the tool belongs to. Some of the examples are
            Backdoor Tool, Pentest Tool, Network Scanner, and Network Sniffer.
        ServiceName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Name of the security service that has been potentially disabled.
        CommandLineExample:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Example of the command line involved in the suspicious activity.
        ThreatFilePath:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The suspicious file path for which the threat intelligence
            details were found.
      description: Additional information about the suspicious activity.
    RuntimeDetails:
      type: object
      properties:
        Process:
          allOf:
          - $ref: '#/components/schemas/ProcessDetails'
          description: Information about the observed process.
        Context:
          allOf:
          - $ref: '#/components/schemas/RuntimeContext'
          description: Additional information about the suspicious activity.
      description: Information about the process and any required context values for
        a specific finding.
    S3Bucket:
      type: object
      properties:
        OwnerId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The owner ID of the associated S3Amazon S3bucket.
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp at which the Amazon S3 bucket was created.
        EncryptionType:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The type of encryption used for the Amazon S3 buckets and its
            objects. For more information, see [Protecting data with server-side encryption](https://docs.aws.amazon.com/AmazonS3/latest/userguide/serv-side-encryption.html)
            in the _Amazon S3 User Guide_.
        EncryptionKeyArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) of the encryption key that is
            used to encrypt the Amazon S3 bucket and its objects.
        EffectivePermission:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Describes the effective permissions on this S3 bucket, after
            factoring all the attached policies.
        PublicReadAccess:
          allOf:
          - $ref: '#/components/schemas/PublicAccessStatus'
          description: Indicates whether or not the public read access is allowed
            for an Amazon S3 bucket.
        PublicWriteAccess:
          allOf:
          - $ref: '#/components/schemas/PublicAccessStatus'
          description: Indicates whether or not the public write access is allowed
            for an Amazon S3 bucket.
        AccountPublicAccess:
          allOf:
          - $ref: '#/components/schemas/PublicAccessConfiguration'
          description: Contains information about the public access policies that
            apply to the Amazon S3 bucket at the account level.
        BucketPublicAccess:
          allOf:
          - $ref: '#/components/schemas/PublicAccessConfiguration'
          description: Contains information about public access policies that apply
            to the Amazon S3 bucket.
        S3ObjectUids:
          allOf:
          - $ref: '#/components/schemas/S3ObjectUids'
          description: Represents a list of Amazon S3 object identifiers.
      description: Contains information about the Amazon S3 bucket policies and encryption.
    S3BucketDetail:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) of the S3 bucket.
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the S3 bucket.
        Type:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Describes whether the bucket is a source or destination bucket.
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time the bucket was created at.
        Owner:
          allOf:
          - $ref: '#/components/schemas/Owner'
          description: The owner of the S3 bucket.
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: All tags attached to the S3 bucket
        DefaultServerSideEncryption:
          allOf:
          - $ref: '#/components/schemas/DefaultServerSideEncryption'
          description: Describes the server side encryption method used in the S3
            bucket.
        PublicAccess:
          allOf:
          - $ref: '#/components/schemas/PublicAccess'
          description: Describes the public access policies that apply to the S3 bucket.
        S3ObjectDetails:
          allOf:
          - $ref: '#/components/schemas/S3ObjectDetails'
          description: Information about the S3 object that was scanned.
      description: Contains information on the S3 bucket.
    S3BucketDetails:
      type: array
      items:
        $ref: '#/components/schemas/S3BucketDetail'
    S3LogsConfiguration:
      type: object
      properties:
        Enable:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: The status of S3 data event logs as a data source.
      required:
      - Enable
      description: Describes whether S3 data event logs will be enabled as a data
        source.
    S3LogsConfigurationResult:
      type: object
      properties:
        Status:
          allOf:
          - $ref: '#/components/schemas/DataSourceStatus'
          description: A value that describes whether S3 data event logs are automatically
            enabled for new members of the organization.
      required:
      - Status
      description: Describes whether S3 data event logs will be enabled as a data
        source.
    S3Object:
      type: object
      properties:
        ETag:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The entity tag is a hash of the Amazon S3 object. The ETag
            reflects changes only to the contents of an object, and not its metadata.
        Key:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The key of the Amazon S3 object.
        VersionId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The version Id of the Amazon S3 object.
      description: Contains information about the Amazon S3 object.
    S3ObjectDetail:
      type: object
      properties:
        ObjectArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Amazon Resource Name (ARN) of the S3 object.
        Key:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Key of the S3 object.
        ETag:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The entity tag is a hash of the S3 object. The ETag reflects
            changes only to the contents of an object, and not its metadata.
        Hash:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Hash of the threat detected in this finding.
        VersionId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Version ID of the object.
      description: Information about the S3 object that was scanned
    S3ObjectDetails:
      type: array
      items:
        $ref: '#/components/schemas/S3ObjectDetail'
    S3ObjectUids:
      type: array
      items:
        $ref: '#/components/schemas/String'
    Scan:
      type: object
      properties:
        DetectorId:
          allOf:
          - $ref: '#/components/schemas/DetectorId'
          description: 'The unique ID of the detector that is associated with the
            request.


            To find the `detectorId` in the current Region, see the Settings page
            in the GuardDuty console, or run the [ListDetectors](https://docs.aws.amazon.com/guardduty/latest/APIReference/API_ListDetectors.html)
            API.'
        AdminDetectorId:
          allOf:
          - $ref: '#/components/schemas/DetectorId'
          description: 'The unique detector ID of the administrator account that the
            request is associated with. If the account is an administrator, the `AdminDetectorId`
            will be the same as the one used for `DetectorId`.


            To find the `detectorId` in the current Region, see the Settings page
            in the GuardDuty console, or run the [ListDetectors](https://docs.aws.amazon.com/guardduty/latest/APIReference/API_ListDetectors.html)
            API.'
        ScanId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The unique scan ID associated with a scan entry.
        ScanStatus:
          allOf:
          - $ref: '#/components/schemas/ScanStatus'
          description: An enum value representing possible scan statuses.
        FailureReason:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: Represents the reason for `FAILED` scan status.
        ScanStartTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp of when the scan was triggered.
        ScanEndTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp of when the scan was finished.
        TriggerDetails:
          allOf:
          - $ref: '#/components/schemas/TriggerDetails'
          description: Specifies the reason why the scan was initiated.
        ResourceDetails:
          allOf:
          - $ref: '#/components/schemas/ResourceDetails'
          description: Represents the resources that were scanned in the scan entry.
        ScanResultDetails:
          allOf:
          - $ref: '#/components/schemas/ScanResultDetails'
          description: Represents the result of the scan.
        AccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The ID for the account that belongs to the scan.
        TotalBytes:
          allOf:
          - $ref: '#/components/schemas/PositiveLong'
          description: Represents total bytes that were scanned.
        FileCount:
          allOf:
          - $ref: '#/components/schemas/PositiveLong'
          description: Represents the number of files that were scanned.
        AttachedVolumes:
          allOf:
          - $ref: '#/components/schemas/VolumeDetails'
          description: List of volumes that were attached to the original instance
            to be scanned.
        ScanType:
          allOf:
          - $ref: '#/components/schemas/ScanType'
          description: Specifies the scan type that invoked the malware scan.
      description: Contains information about malware scans associated with GuardDuty
        Malware Protection for EC2.
    ScanCondition:
      type: object
      properties:
        MapEquals:
          allOf:
          - $ref: '#/components/schemas/MapEquals'
          description: Represents an _mapEqual_ ****condition to be applied to a single
            field when triggering for malware scan.
      required:
      - MapEquals
      description: Contains information about the condition.
    ScanConditionPair:
      type: object
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/TagKey'
          description: Represents the **key** in the map condition.
        Value:
          allOf:
          - $ref: '#/components/schemas/TagValue'
          description: Represents optional **value** in the map condition. If not
            specified, only the **key** will be matched.
      required:
      - Key
      description: Represents the `key:value` pair to be matched against given resource
        property.
    ScanCriterion:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/ScanCondition'
      description: "<p>Represents a map of resource properties that match specified\
        \ conditions and values when\n      triggering malware scans.</p>"
    ScanCriterionKey:
      type: string
      enum:
      - EC2_INSTANCE_TAG
      description: "<p>An enum value representing possible resource properties to\
        \ match with given scan\n      condition.</p>"
    ScanDetections:
      type: object
      properties:
        ScannedItemCount:
          allOf:
          - $ref: '#/components/schemas/ScannedItemCount'
          description: Total number of scanned files.
        ThreatsDetectedItemCount:
          allOf:
          - $ref: '#/components/schemas/ThreatsDetectedItemCount'
          description: Total number of infected files.
        HighestSeverityThreatDetails:
          allOf:
          - $ref: '#/components/schemas/HighestSeverityThreatDetails'
          description: Details of the highest severity threat detected during malware
            scan and number of infected files.
        ThreatDetectedByName:
          allOf:
          - $ref: '#/components/schemas/ThreatDetectedByName'
          description: Contains details about identified threats organized by threat
            name.
      description: Contains a complete view providing malware scan result details.
    ScanEc2InstanceWithFindings:
      type: object
      properties:
        EbsVolumes:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Describes the configuration for scanning EBS volumes as data
            source.
      description: Describes whether Malware Protection for EC2 instances with findings
        will be enabled as a data source.
    ScanEc2InstanceWithFindingsResult:
      type: object
      properties:
        EbsVolumes:
          allOf:
          - $ref: '#/components/schemas/EbsVolumesResult'
          description: Describes the configuration of scanning EBS volumes as a data
            source.
      description: An object that contains information on the status of whether Malware
        Protection for EC2 instances with findings will be enabled as a data source.
    ScanFilePath:
      type: object
      properties:
        FilePath:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The file path of the infected file.
        VolumeArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: EBS volume ARN details of the infected file.
        Hash:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The hash value of the infected file.
        FileName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: File name of the infected file.
      description: Contains details of infected file including name, file path and
        hash.
    ScanResourceCriteria:
      type: object
      properties:
        Include:
          allOf:
          - $ref: '#/components/schemas/ScanCriterion'
          description: Represents condition that when matched will allow a malware
            scan for a certain resource.
        Exclude:
          allOf:
          - $ref: '#/components/schemas/ScanCriterion'
          description: Represents condition that when matched will prevent a malware
            scan for a certain resource.
      description: Contains information about criteria used to filter resources before
        triggering malware scan.
    ScanResult:
      type: string
      enum:
      - CLEAN
      - INFECTED
    ScanResultDetails:
      type: object
      properties:
        ScanResult:
          allOf:
          - $ref: '#/components/schemas/ScanResult'
          description: An enum value representing possible scan results.
      description: Represents the result of the scan.
    ScanStatus:
      type: string
      enum:
      - RUNNING
      - COMPLETED
      - FAILED
      - SKIPPED
    ScanThreatName:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the identified threat.
        Severity:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Severity of threat identified as part of the malware scan.
        ItemCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: Total number of files infected with given threat.
        FilePaths:
          allOf:
          - $ref: '#/components/schemas/FilePaths'
          description: List of infected files in EBS volume with details.
      description: Contains files infected with the given threat providing details
        of malware name and severity.
    ScanThreatNames:
      type: array
      items:
        $ref: '#/components/schemas/ScanThreatName'
    ScanType:
      type: string
      enum:
      - GUARDDUTY_INITIATED
      - ON_DEMAND
    ScannedItemCount:
      type: object
      properties:
        TotalGb:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: Total GB of files scanned for malware.
        Files:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: Number of files scanned.
        Volumes:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: Total number of scanned volumes.
      description: Total number of scanned files.
    Scans:
      type: array
      items:
        $ref: '#/components/schemas/Scan'
    SecurityContext:
      type: object
      properties:
        Privileged:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether the container is privileged.
        AllowPrivilegeEscalation:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether or not a container or a Kubernetes pod is allowed to
            gain more privileges than its parent process.
      description: Container security context.
    SecurityGroup:
      type: object
      properties:
        GroupId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The security group ID of the EC2 instance.
        GroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The security group name of the EC2 instance.
      description: Contains information about the security groups associated with
        the EC2 instance.
    SecurityGroups:
      type: array
      items:
        $ref: '#/components/schemas/SecurityGroup'
    SensitiveString:
      type: string
    Sequence:
      type: object
      properties:
        Uid:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Unique identifier of the attack sequence.
        Description:
          allOf:
          - $ref: '#/components/schemas/SequenceDescription'
          description: Description of the attack sequence.
        Actors:
          allOf:
          - $ref: '#/components/schemas/Actors'
          description: Contains information about the actors involved in the attack
            sequence.
        Resources:
          allOf:
          - $ref: '#/components/schemas/Resources'
          description: Contains information about the resources involved in the attack
            sequence.
        Endpoints:
          allOf:
          - $ref: '#/components/schemas/NetworkEndpoints'
          description: Contains information about the network endpoints that were
            used in the attack sequence.
        Signals:
          allOf:
          - $ref: '#/components/schemas/Signals'
          description: Contains information about the signals involved in the attack
            sequence.
        SequenceIndicators:
          allOf:
          - $ref: '#/components/schemas/Indicators'
          description: Contains information about the indicators observed in the attack
            sequence.
      required:
      - Uid
      - Description
      - Signals
      description: Contains information about the GuardDuty attack sequence finding.
    SequenceDescription:
      type: string
      minLength: 0
      maxLength: 4096
    Service:
      type: object
      properties:
        Action:
          allOf:
          - $ref: '#/components/schemas/Action'
          description: Information about the activity that is described in a finding.
        Evidence:
          allOf:
          - $ref: '#/components/schemas/Evidence'
          description: An evidence object associated with the service.
        Archived:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether this finding is archived.
        Count:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The total count of the occurrences of this finding type.
        DetectorId:
          allOf:
          - $ref: '#/components/schemas/DetectorId'
          description: The detector ID for the GuardDuty service.
        EventFirstSeen:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The first-seen timestamp of the activity that prompted GuardDuty
            to generate this finding.
        EventLastSeen:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The last-seen timestamp of the activity that prompted GuardDuty
            to generate this finding.
        ResourceRole:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The resource role information for this finding.
        ServiceName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the Amazon Web Services service (GuardDuty) that
            generated a finding.
        UserFeedback:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Feedback that was submitted about the finding.
        AdditionalInfo:
          allOf:
          - $ref: '#/components/schemas/ServiceAdditionalInfo'
          description: Contains additional information about the generated finding.
        FeatureName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the feature that generated a finding.
        EbsVolumeScanDetails:
          allOf:
          - $ref: '#/components/schemas/EbsVolumeScanDetails'
          description: Returns details from the malware scan that created a finding.
        RuntimeDetails:
          allOf:
          - $ref: '#/components/schemas/RuntimeDetails'
          description: Information about the process and any required context values
            for a specific finding
        Detection:
          allOf:
          - $ref: '#/components/schemas/Detection'
          description: Contains information about the detected unusual behavior.
        MalwareScanDetails:
          allOf:
          - $ref: '#/components/schemas/MalwareScanDetails'
          description: Returns details from the malware scan that generated a GuardDuty
            finding.
      description: Contains additional information about the generated finding.
    ServiceAdditionalInfo:
      type: object
      properties:
        Value:
          allOf:
          - $ref: '#/components/schemas/String'
          description: This field specifies the value of the additional information.
        Type:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Describes the type of the additional information.
      description: Additional information about the generated finding.
    Session:
      type: object
      properties:
        Uid:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique identifier of the session.
        MfaStatus:
          allOf:
          - $ref: '#/components/schemas/MfaStatus'
          description: 'Indicates whether or not multi-factor authencation (MFA) was
            used during authentication.


            In Amazon Web Services CloudTrail, you can find this value as `userIdentity.sessionContext.attributes.mfaAuthenticated`.'
        CreatedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: 'The timestamp for when the session was created.


            In Amazon Web Services CloudTrail, you can find this value as `userIdentity.sessionContext.attributes.creationDate`.'
        Issuer:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'Identifier of the session issuer.


            In Amazon Web Services CloudTrail, you can find this value as `userIdentity.sessionContext.sessionIssuer.arn`.'
      description: Contains information about the authenticated session.
    SessionNameList:
      type: array
      items:
        $ref: '#/components/schemas/String'
    SeverityStatistics:
      type: object
      properties:
        LastGeneratedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp at which a finding type for a specific severity
            was last generated.
        Severity:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: The severity level associated with each finding type.
        TotalFindings:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The total number of findings associated with this severity.
      description: Information about severity level for each finding type.
    Signal:
      type: object
      properties:
        Uid:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique identifier of the signal.
        Type:
          allOf:
          - $ref: '#/components/schemas/SignalType'
          description: "The type of the signal used to identify an attack sequence.\n\
            \nSignals can be GuardDuty findings or activities observed in data sources\
            \ that GuardDuty monitors. For more information, see [Foundational data\
            \ sources](https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_data-sources.html)\
            \ in the _Amazon GuardDuty User Guide_.\n\nA signal type can be one of\
            \ the valid values listed in this API. Here are the related descriptions:\n\
            \n  * `FINDING` \\- Individually generated GuardDuty finding.\n\n  * `CLOUD_TRAIL`\
            \ \\- Activity observed from CloudTrail logs\n\n  * `S3_DATA_EVENTS` \\\
            - Activity observed from CloudTrail data events for S3. Activities associated\
            \ with this type will show up only when you have enabled GuardDuty S3\
            \ Protection feature in your account. For more information about S3 Protection\
            \ and steps to enable it, see [S3 Protection](https://docs.aws.amazon.com/guardduty/latest/ug/s3-protection.html)\
            \ in the _Amazon GuardDuty User Guide_."
        Description:
          allOf:
          - $ref: '#/components/schemas/SignalDescription'
          description: The description of the signal.
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the signal. For example, when signal type is `FINDING`,
            the signal name is the name of the finding.
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp when the first finding or activity related to
            this signal was observed.
        UpdatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp when this signal was last observed.
        FirstSeenAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp when the first finding or activity related to
            this signal was observed.
        LastSeenAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp when the last finding or activity related to
            this signal was observed.
        Severity:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: The severity associated with the signal. For more information
            about severity, see [Findings severity levels](https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_findings-severity.html)
            in the _Amazon GuardDuty User Guide_.
        Count:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of times this signal was observed.
        ResourceUids:
          allOf:
          - $ref: '#/components/schemas/ResourceUids'
          description: Information about the unique identifiers of the resources involved
            in the signal.
        ActorIds:
          allOf:
          - $ref: '#/components/schemas/ActorIds'
          description: Information about the IDs of the threat actors involved in
            the signal.
        EndpointIds:
          allOf:
          - $ref: '#/components/schemas/EndpointIds'
          description: Information about the endpoint IDs associated with this signal.
        SignalIndicators:
          allOf:
          - $ref: '#/components/schemas/Indicators'
          description: Contains information about the indicators associated with the
            signals.
      required:
      - Uid
      - Type
      - Name
      - CreatedAt
      - UpdatedAt
      - FirstSeenAt
      - LastSeenAt
      - Count
      description: Contains information about the signals involved in the attack sequence.
    SignalDescription:
      type: string
      minLength: 0
      maxLength: 2000
    SignalType:
      type: string
      enum:
      - FINDING
      - CLOUD_TRAIL
      - S3_DATA_EVENTS
    Signals:
      type: array
      items:
        $ref: '#/components/schemas/Signal'
    SortCriteria:
      type: object
      properties:
        AttributeName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Represents the finding attribute, such as `accountId`, that
            sorts the findings.
        OrderBy:
          allOf:
          - $ref: '#/components/schemas/OrderBy'
          description: The order by which the sorted findings are to be displayed.
      description: Contains information about the criteria used for sorting findings.
    SourceIps:
      type: array
      items:
        $ref: '#/components/schemas/String'
    Sources:
      type: array
      items:
        $ref: '#/components/schemas/String'
    StartMalwareScanRequest:
      type: object
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          description: Amazon Resource Name (ARN) of the resource for which you invoked
            the API.
      required:
      - ResourceArn
    StartMalwareScanResponse:
      type: object
      properties:
        ScanId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: A unique identifier that gets generated when you invoke the
            API without any error. Each malware scan has a corresponding scan ID.
            Using this scan ID, you can monitor the status of your malware scan.
    StartMonitoringMembersRequest:
      type: object
      properties:
        DetectorId:
          allOf:
          - $ref: '#/components/schemas/DetectorId'
          description: 'The unique ID of the detector of the GuardDuty administrator
            account associated with the member accounts to monitor.


            To find the `detectorId` in the current Region, see the Settings page
            in the GuardDuty console, or run the [ListDetectors](https://docs.aws.amazon.com/guardduty/latest/APIReference/API_ListDetectors.html)
            API.'
        AccountIds:
          allOf:
          - $ref: '#/components/schemas/AccountIds'
          description: A list of account IDs of the GuardDuty member accounts to start
            monitoring.
      required:
      - DetectorId
      - AccountIds
    StartMonitoringMembersResponse:
      type: object
      properties:
        UnprocessedAccounts:
          allOf:
          - $ref: '#/components/schemas/UnprocessedAccounts'
          description: A list of objects that contain the unprocessed account and
            a result string that explains why it was unprocessed.
      required:
      - UnprocessedAccounts
    StopMonitoringMembersRequest:
      type: object
      properties:
        DetectorId:
          allOf:
          - $ref: '#/components/schemas/DetectorId'
          description: 'The unique ID of the detector associated with the GuardDuty
            administrator account that is monitoring member accounts.


            To find the `detectorId` in the current Region, see the Settings page
            in the GuardDuty console, or run the [ListDetectors](https://docs.aws.amazon.com/guardduty/latest/APIReference/API_ListDetectors.html)
            API.'
        AccountIds:
          allOf:
          - $ref: '#/components/schemas/AccountIds'
          description: A list of account IDs for the member accounts to stop monitoring.
      required:
      - DetectorId
      - AccountIds
    StopMonitoringMembersResponse:
      type: object
      properties:
        UnprocessedAccounts:
          allOf:
          - $ref: '#/components/schemas/UnprocessedAccounts'
          description: A list of objects that contain an accountId for each account
            that could not be processed, and a result string that indicates why the
            account was not processed.
      required:
      - UnprocessedAccounts
    String:
      type: string
    SubnetIds:
      type: array
      items:
        $ref: '#/components/schemas/String'
    Tag:
      type: object
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Describes the key associated with the tag.
        Value:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Describes the value associated with the tag key.
      description: Contains information about a tag key-value pair.
    TagKey:
      type: string
      pattern: ^(?!aws:)[a-zA-Z+-=._:/]+$
      minLength: 1
      maxLength: 128
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
    TagMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
    TagResourceRequest:
      type: object
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/GuardDutyArn'
          description: The Amazon Resource Name (ARN) for the GuardDuty resource to
            apply a tag to.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The tags to be added to a resource.
      required:
      - ResourceArn
      - Tags
    TagResourceResponse:
      type: object
      properties: {}
    TagValue:
      type: string
      minLength: 0
      maxLength: 256
    Tags:
      type: array
      items:
        $ref: '#/components/schemas/Tag'
    Threat:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Name of the detected threat that caused GuardDuty to generate
            this finding.
        Source:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Source of the threat that generated this finding.
        ItemPaths:
          allOf:
          - $ref: '#/components/schemas/ItemPaths'
          description: Information about the nested item path and hash of the protected
            resource.
      description: Information about the detected threats associated with the generated
        finding.
    ThreatDetectedByName:
      type: object
      properties:
        ItemCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: Total number of infected files identified.
        UniqueThreatNameCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: Total number of unique threats by name identified, as part
            of the malware scan.
        Shortened:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Flag to determine if the finding contains every single infected
            file-path and/or every threat.
        ThreatNames:
          allOf:
          - $ref: '#/components/schemas/ScanThreatNames'
          description: List of identified threats with details, organized by threat
            name.
      description: Contains details about identified threats organized by threat name.
    ThreatIntelSetFormat:
      type: string
      enum:
      - TXT
      - STIX
      - OTX_CSV
      - ALIEN_VAULT
      - PROOF_POINT
      - FIRE_EYE
    ThreatIntelSetIds:
      type: array
      items:
        $ref: '#/components/schemas/String'
    ThreatIntelSetStatus:
      type: string
      enum:
      - INACTIVE
      - ACTIVATING
      - ACTIVE
      - DEACTIVATING
      - ERROR
      - DELETE_PENDING
      - DELETED
    ThreatIntelligenceDetail:
      type: object
      properties:
        ThreatListName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the threat intelligence list that triggered the
            finding.
        ThreatNames:
          allOf:
          - $ref: '#/components/schemas/ThreatNames'
          description: A list of names of the threats in the threat intelligence list
            that triggered the finding.
        ThreatFileSha256:
          allOf:
          - $ref: '#/components/schemas/String'
          description: SHA256 of the file that generated the finding.
      description: An instance of a threat intelligence detail that constitutes evidence
        for the finding.
    ThreatIntelligenceDetails:
      type: array
      items:
        $ref: '#/components/schemas/ThreatIntelligenceDetail'
    ThreatNames:
      type: array
      items:
        $ref: '#/components/schemas/String'
    Threats:
      type: array
      items:
        $ref: '#/components/schemas/Threat'
    ThreatsDetectedItemCount:
      type: object
      properties:
        Files:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: Total number of infected files.
      description: Contains total number of infected files.
    Timestamp:
      type: string
      format: date-time
    Total:
      type: object
      properties:
        Amount:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The total usage.
        Unit:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The currency unit that the amount is given in.
      description: Contains the total usage with the corresponding currency unit for
        that value.
    TriggerDetails:
      type: object
      properties:
        GuardDutyFindingId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The ID of the GuardDuty finding that triggered the malware
            scan.
        Description:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The description of the scan trigger.
      description: Represents the reason the scan was triggered.
    UnarchiveFindingsRequest:
      type: object
      properties:
        DetectorId:
          allOf:
          - $ref: '#/components/schemas/DetectorId'
          description: 'The ID of the detector associated with the findings to unarchive.


            To find the `detectorId` in the current Region, see the Settings page
            in the GuardDuty console, or run the [ListDetectors](https://docs.aws.amazon.com/guardduty/latest/APIReference/API_ListDetectors.html)
            API.'
        FindingIds:
          allOf:
          - $ref: '#/components/schemas/FindingIds'
          description: The IDs of the findings to unarchive.
      required:
      - DetectorId
      - FindingIds
    UnarchiveFindingsResponse:
      type: object
      properties: {}
    UnprocessedAccount:
      type: object
      properties:
        AccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The Amazon Web Services account ID.
        Result:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A reason why the account hasn't been processed.
      required:
      - AccountId
      - Result
      description: Contains information about the accounts that weren't processed.
    UnprocessedAccounts:
      type: array
      items:
        $ref: '#/components/schemas/UnprocessedAccount'
    UnprocessedDataSourcesResult:
      type: object
      properties:
        MalwareProtection:
          $ref: '#/components/schemas/MalwareProtectionConfigurationResult'
      description: Specifies the names of the data sources that couldn't be enabled.
    UntagResourceRequest:
      type: object
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/GuardDutyArn'
          description: The Amazon Resource Name (ARN) for the resource to remove tags
            from.
        TagKeys:
          allOf:
          - $ref: '#/components/schemas/TagKeyList'
          description: The tag keys to remove from the resource.
      required:
      - ResourceArn
      - TagKeys
    UntagResourceResponse:
      type: object
      properties: {}
    UpdateDetectorRequest:
      type: object
      properties:
        DetectorId:
          allOf:
          - $ref: '#/components/schemas/DetectorId'
          description: 'The unique ID of the detector to update.


            To find the `detectorId` in the current Region, see the Settings page
            in the GuardDuty console, or run the [ListDetectors](https://docs.aws.amazon.com/guardduty/latest/APIReference/API_ListDetectors.html)
            API.'
        Enable:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Specifies whether the detector is enabled or not enabled.
        FindingPublishingFrequency:
          allOf:
          - $ref: '#/components/schemas/FindingPublishingFrequency'
          description: An enum value that specifies how frequently findings are exported,
            such as to CloudWatch Events.
        DataSources:
          allOf:
          - $ref: '#/components/schemas/DataSourceConfigurations'
          description: 'Describes which data sources will be updated.


            There might be regional differences because some data sources might not
            be available in all the Amazon Web Services Regions where GuardDuty is
            presently supported. For more information, see [Regions and endpoints](https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_regions.html).'
        Features:
          allOf:
          - $ref: '#/components/schemas/DetectorFeatureConfigurations'
          description: Provides the features that will be updated for the detector.
      required:
      - DetectorId
    UpdateDetectorResponse:
      type: object
      properties: {}
    UpdateFilterRequest:
      type: object
      properties:
        DetectorId:
          allOf:
          - $ref: '#/components/schemas/DetectorId'
          description: 'The unique ID of the detector that specifies the GuardDuty
            service where you want to update a filter.


            To find the `detectorId` in the current Region, see the Settings page
            in the GuardDuty console, or run the [ListDetectors](https://docs.aws.amazon.com/guardduty/latest/APIReference/API_ListDetectors.html)
            API.'
        FilterName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the filter.
        Description:
          allOf:
          - $ref: '#/components/schemas/FilterDescription'
          description: The description of the filter. Valid characters include alphanumeric
            characters, and special characters such as hyphen, period, colon, underscore,
            parentheses (`{ }`, `[ ]`, and `( )`), forward slash, horizontal tab,
            vertical tab, newline, form feed, return, and whitespace.
        Action:
          allOf:
          - $ref: '#/components/schemas/FilterAction'
          description: Specifies the action that is to be applied to the findings
            that match the filter.
        Rank:
          allOf:
          - $ref: '#/components/schemas/FilterRank'
          description: Specifies the position of the filter in the list of current
            filters. Also specifies the order in which this filter is applied to the
            findings.
        FindingCriteria:
          allOf:
          - $ref: '#/components/schemas/FindingCriteria'
          description: Represents the criteria to be used in the filter for querying
            findings.
      required:
      - DetectorId
      - FilterName
    UpdateFilterResponse:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/FilterName'
          description: The name of the filter.
      required:
      - Name
    UpdateFindingsFeedbackRequest:
      type: object
      properties:
        DetectorId:
          allOf:
          - $ref: '#/components/schemas/DetectorId'
          description: 'The ID of the detector that is associated with the findings
            for which you want to update the feedback.


            To find the `detectorId` in the current Region, see the Settings page
            in the GuardDuty console, or run the [ListDetectors](https://docs.aws.amazon.com/guardduty/latest/APIReference/API_ListDetectors.html)
            API.'
        FindingIds:
          allOf:
          - $ref: '#/components/schemas/FindingIds'
          description: The IDs of the findings that you want to mark as useful or
            not useful.
        Feedback:
          allOf:
          - $ref: '#/components/schemas/Feedback'
          description: The feedback for the finding.
        Comments:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Additional feedback about the GuardDuty findings.
      required:
      - DetectorId
      - FindingIds
      - Feedback
    UpdateFindingsFeedbackResponse:
      type: object
      properties: {}
    UpdateIPSetRequest:
      type: object
      properties:
        DetectorId:
          allOf:
          - $ref: '#/components/schemas/DetectorId'
          description: 'The detectorID that specifies the GuardDuty service whose
            IPSet you want to update.


            To find the `detectorId` in the current Region, see the Settings page
            in the GuardDuty console, or run the [ListDetectors](https://docs.aws.amazon.com/guardduty/latest/APIReference/API_ListDetectors.html)
            API.'
        IpSetId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique ID that specifies the IPSet that you want to update.
        Name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The unique ID that specifies the IPSet that you want to update.
        Location:
          allOf:
          - $ref: '#/components/schemas/Location'
          description: The updated URI of the file that contains the IPSet.
        Activate:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: The updated Boolean value that specifies whether the IPSet
            is active or not.
      required:
      - DetectorId
      - IpSetId
    UpdateIPSetResponse:
      type: object
      properties: {}
    UpdateMalwareProtectionPlanRequest:
      type: object
      properties:
        MalwareProtectionPlanId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A unique identifier associated with the Malware Protection
            plan.
        Role:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Amazon Resource Name (ARN) of the IAM role with permissions
            to scan and add tags to the associated protected resource.
        Actions:
          allOf:
          - $ref: '#/components/schemas/MalwareProtectionPlanActions'
          description: Information about whether the tags will be added to the S3
            object after scanning.
        ProtectedResource:
          allOf:
          - $ref: '#/components/schemas/UpdateProtectedResource'
          description: Information about the protected resource that is associated
            with the created Malware Protection plan. Presently, `S3Bucket` is the
            only supported protected resource.
      required:
      - MalwareProtectionPlanId
    UpdateMalwareScanSettingsRequest:
      type: object
      properties:
        DetectorId:
          allOf:
          - $ref: '#/components/schemas/DetectorId'
          description: 'The unique ID of the detector that specifies the GuardDuty
            service where you want to update scan settings.


            To find the `detectorId` in the current Region, see the Settings page
            in the GuardDuty console, or run the [ListDetectors](https://docs.aws.amazon.com/guardduty/latest/APIReference/API_ListDetectors.html)
            API.'
        ScanResourceCriteria:
          allOf:
          - $ref: '#/components/schemas/ScanResourceCriteria'
          description: Represents the criteria to be used in the filter for selecting
            resources to scan.
        EbsSnapshotPreservation:
          allOf:
          - $ref: '#/components/schemas/EbsSnapshotPreservation'
          description: An enum value representing possible snapshot preservation settings.
      required:
      - DetectorId
    UpdateMalwareScanSettingsResponse:
      type: object
      properties: {}
    UpdateMemberDetectorsRequest:
      type: object
      properties:
        DetectorId:
          allOf:
          - $ref: '#/components/schemas/DetectorId'
          description: 'The detector ID of the administrator account.


            To find the `detectorId` in the current Region, see the Settings page
            in the GuardDuty console, or run the [ListDetectors](https://docs.aws.amazon.com/guardduty/latest/APIReference/API_ListDetectors.html)
            API.'
        AccountIds:
          allOf:
          - $ref: '#/components/schemas/AccountIds'
          description: A list of member account IDs to be updated.
        DataSources:
          allOf:
          - $ref: '#/components/schemas/DataSourceConfigurations'
          description: Describes which data sources will be updated.
        Features:
          allOf:
          - $ref: '#/components/schemas/MemberFeaturesConfigurations'
          description: A list of features that will be updated for the specified member
            accounts.
      required:
      - DetectorId
      - AccountIds
    UpdateMemberDetectorsResponse:
      type: object
      properties:
        UnprocessedAccounts:
          allOf:
          - $ref: '#/components/schemas/UnprocessedAccounts'
          description: A list of member account IDs that were unable to be processed
            along with an explanation for why they were not processed.
      required:
      - UnprocessedAccounts
    UpdateOrganizationConfigurationRequest:
      type: object
      properties:
        DetectorId:
          allOf:
          - $ref: '#/components/schemas/DetectorId'
          description: 'The ID of the detector that configures the delegated administrator.


            To find the `detectorId` in the current Region, see the Settings page
            in the GuardDuty console, or run the [ListDetectors](https://docs.aws.amazon.com/guardduty/latest/APIReference/API_ListDetectors.html)
            API.'
        AutoEnable:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: 'Represents whether to automatically enable member accounts
            in the organization. This applies to only new member accounts, not the
            existing member accounts. When a new account joins the organization, the
            chosen features will be enabled for them by default.


            Even though this is still supported, we recommend using `AutoEnableOrganizationMembers`
            to achieve the similar results. You must provide a value for either `autoEnableOrganizationMembers`
            or `autoEnable`.'
        DataSources:
          allOf:
          - $ref: '#/components/schemas/OrganizationDataSourceConfigurations'
          description: Describes which data sources will be updated.
        Features:
          allOf:
          - $ref: '#/components/schemas/OrganizationFeaturesConfigurations'
          description: A list of features that will be configured for the organization.
        AutoEnableOrganizationMembers:
          allOf:
          - $ref: '#/components/schemas/AutoEnableMembers'
          description: "Indicates the auto-enablement configuration of GuardDuty for\
            \ the member accounts in the organization. You must provide a value for\
            \ either `autoEnableOrganizationMembers` or `autoEnable`.\n\nUse one of\
            \ the following configuration values for `autoEnableOrganizationMembers`:\n\
            \n  * `NEW`: Indicates that when a new account joins the organization,\
            \ they will have GuardDuty enabled automatically. \n\n  * `ALL`: Indicates\
            \ that all accounts in the organization have GuardDuty enabled automatically.\
            \ This includes `NEW` accounts that join the organization and accounts\
            \ that may have been suspended or removed from the organization in GuardDuty.\n\
            \nIt may take up to 24 hours to update the configuration for all the member\
            \ accounts.\n\n  * `NONE`: Indicates that GuardDuty will not be automatically\
            \ enabled for any account in the organization. The administrator must\
            \ manage GuardDuty for each account in the organization individually.\n\
            \nWhen you update the auto-enable setting from `ALL` or `NEW` to `NONE`,\
            \ this action doesn't disable the corresponding option for your existing\
            \ accounts. This configuration will apply to the new accounts that join\
            \ the organization. After you update the auto-enable settings, no new\
            \ account will have the corresponding option as enabled."
      required:
      - DetectorId
    UpdateOrganizationConfigurationResponse:
      type: object
      properties: {}
    UpdateProtectedResource:
      type: object
      properties:
        S3Bucket:
          allOf:
          - $ref: '#/components/schemas/UpdateS3BucketResource'
          description: Information about the protected S3 bucket resource.
      description: Information about the protected resource that is associated with
        the created Malware Protection plan. Presently, `S3Bucket` is the only supported
        protected resource.
    UpdatePublishingDestinationRequest:
      type: object
      properties:
        DetectorId:
          allOf:
          - $ref: '#/components/schemas/DetectorId'
          description: 'The ID of the detector associated with the publishing destinations
            to update.


            To find the `detectorId` in the current Region, see the Settings page
            in the GuardDuty console, or run the [ListDetectors](https://docs.aws.amazon.com/guardduty/latest/APIReference/API_ListDetectors.html)
            API.'
        DestinationId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the publishing destination to update.
        DestinationProperties:
          allOf:
          - $ref: '#/components/schemas/DestinationProperties'
          description: A `DestinationProperties` object that includes the `DestinationArn`
            and `KmsKeyArn` of the publishing destination.
      required:
      - DetectorId
      - DestinationId
    UpdatePublishingDestinationResponse:
      type: object
      properties: {}
    UpdateS3BucketResource:
      type: object
      properties:
        ObjectPrefixes:
          allOf:
          - $ref: '#/components/schemas/MalwareProtectionPlanObjectPrefixesList'
          description: Information about the specified object prefixes. The S3 object
            will be scanned only if it belongs to any of the specified object prefixes.
      description: Information about the protected S3 bucket resource.
    UpdateThreatIntelSetRequest:
      type: object
      properties:
        DetectorId:
          allOf:
          - $ref: '#/components/schemas/DetectorId'
          description: 'The detectorID that specifies the GuardDuty service whose
            ThreatIntelSet you want to update.


            To find the `detectorId` in the current Region, see the Settings page
            in the GuardDuty console, or run the [ListDetectors](https://docs.aws.amazon.com/guardduty/latest/APIReference/API_ListDetectors.html)
            API.'
        ThreatIntelSetId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique ID that specifies the ThreatIntelSet that you want
            to update.
        Name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The unique ID that specifies the ThreatIntelSet that you want
            to update.
        Location:
          allOf:
          - $ref: '#/components/schemas/Location'
          description: The updated URI of the file that contains the ThreateIntelSet.
        Activate:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: The updated Boolean value that specifies whether the ThreateIntelSet
            is active or not.
      required:
      - DetectorId
      - ThreatIntelSetId
    UpdateThreatIntelSetResponse:
      type: object
      properties: {}
    UsageAccountResult:
      type: object
      properties:
        AccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The Account ID that generated usage.
        Total:
          allOf:
          - $ref: '#/components/schemas/Total'
          description: Represents the total of usage for the Account ID.
      description: Contains information on the total of usage based on account IDs.
    UsageAccountResultList:
      type: array
      items:
        $ref: '#/components/schemas/UsageAccountResult'
    UsageCriteria:
      type: object
      properties:
        AccountIds:
          allOf:
          - $ref: '#/components/schemas/AccountIds'
          description: The account IDs to aggregate usage statistics from.
        DataSources:
          allOf:
          - $ref: '#/components/schemas/DataSourceList'
          description: The data sources to aggregate usage statistics from.
        Resources:
          allOf:
          - $ref: '#/components/schemas/ResourceList'
          description: The resources to aggregate usage statistics from. Only accepts
            exact resource names.
        Features:
          allOf:
          - $ref: '#/components/schemas/UsageFeatureList'
          description: The features to aggregate usage statistics from.
      description: Contains information about the criteria used to query usage statistics.
    UsageDataSourceResult:
      type: object
      properties:
        DataSource:
          allOf:
          - $ref: '#/components/schemas/DataSource'
          description: The data source type that generated usage.
        Total:
          allOf:
          - $ref: '#/components/schemas/Total'
          description: Represents the total of usage for the specified data source.
      description: Contains information on the result of usage based on data source
        type.
    UsageDataSourceResultList:
      type: array
      items:
        $ref: '#/components/schemas/UsageDataSourceResult'
    UsageFeature:
      type: string
      enum:
      - FLOW_LOGS
      - CLOUD_TRAIL
      - DNS_LOGS
      - S3_DATA_EVENTS
      - EKS_AUDIT_LOGS
      - EBS_MALWARE_PROTECTION
      - RDS_LOGIN_EVENTS
      - LAMBDA_NETWORK_LOGS
      - EKS_RUNTIME_MONITORING
      - FARGATE_RUNTIME_MONITORING
      - EC2_RUNTIME_MONITORING
      - RDS_DBI_PROTECTION_PROVISIONED
      - RDS_DBI_PROTECTION_SERVERLESS
    UsageFeatureList:
      type: array
      items:
        $ref: '#/components/schemas/UsageFeature'
    UsageFeatureResult:
      type: object
      properties:
        Feature:
          allOf:
          - $ref: '#/components/schemas/UsageFeature'
          description: The feature that generated the usage cost.
        Total:
          $ref: '#/components/schemas/Total'
      description: Contains information about the result of the total usage based
        on the feature.
    UsageFeatureResultList:
      type: array
      items:
        $ref: '#/components/schemas/UsageFeatureResult'
    UsageResourceResult:
      type: object
      properties:
        Resource:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Web Services resource that generated usage.
        Total:
          allOf:
          - $ref: '#/components/schemas/Total'
          description: Represents the sum total of usage for the specified resource
            type.
      description: Contains information on the sum of usage based on an Amazon Web
        Services resource.
    UsageResourceResultList:
      type: array
      items:
        $ref: '#/components/schemas/UsageResourceResult'
    UsageStatisticType:
      type: string
      enum:
      - SUM_BY_ACCOUNT
      - SUM_BY_DATA_SOURCE
      - SUM_BY_RESOURCE
      - TOP_RESOURCES
      - SUM_BY_FEATURES
      - TOP_ACCOUNTS_BY_FEATURE
    UsageStatistics:
      type: object
      properties:
        SumByAccount:
          allOf:
          - $ref: '#/components/schemas/UsageAccountResultList'
          description: The usage statistic sum organized by account ID.
        TopAccountsByFeature:
          allOf:
          - $ref: '#/components/schemas/UsageTopAccountsResultList'
          description: 'Lists the top 50 accounts by feature that have generated the
            most GuardDuty usage, in the order from most to least expensive.


            Currently, this doesn''t support `RDS_LOGIN_EVENTS`.'
        SumByDataSource:
          allOf:
          - $ref: '#/components/schemas/UsageDataSourceResultList'
          description: The usage statistic sum organized by on data source.
        SumByResource:
          allOf:
          - $ref: '#/components/schemas/UsageResourceResultList'
          description: The usage statistic sum organized by resource.
        TopResources:
          allOf:
          - $ref: '#/components/schemas/UsageResourceResultList'
          description: Lists the top 50 resources that have generated the most GuardDuty
            usage, in order from most to least expensive.
        SumByFeature:
          allOf:
          - $ref: '#/components/schemas/UsageFeatureResultList'
          description: The usage statistic sum organized by feature.
      description: Contains the result of GuardDuty usage. If a UsageStatisticType
        is provided the result for other types will be null.
    UsageTopAccountResult:
      type: object
      properties:
        AccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The unique account ID.
        Total:
          $ref: '#/components/schemas/Total'
      description: Contains information on the total of usage based on the topmost
        50 account IDs.
    UsageTopAccountsByFeatureList:
      type: array
      items:
        $ref: '#/components/schemas/UsageTopAccountResult'
    UsageTopAccountsResult:
      type: object
      properties:
        Feature:
          allOf:
          - $ref: '#/components/schemas/UsageFeature'
          description: 'Features by which you can generate the usage statistics.


            `RDS_LOGIN_EVENTS` is currently not supported with `topAccountsByFeature`.'
        Accounts:
          allOf:
          - $ref: '#/components/schemas/UsageTopAccountsByFeatureList'
          description: The accounts that contributed to the total usage cost.
      description: Information about the usage statistics, calculated by top accounts
        by feature.
    UsageTopAccountsResultList:
      type: array
      items:
        $ref: '#/components/schemas/UsageTopAccountsResult'
    User:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the user.
        Uid:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique identifier of the user.
        Type:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The type of the user.
        CredentialUid:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The credentials of the user ID.
        Account:
          allOf:
          - $ref: '#/components/schemas/Account'
          description: Contains information about the Amazon Web Services account.
      required:
      - Name
      - Uid
      - Type
      description: Contains information about the user involved in the attack sequence.
    Volume:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Volume name.
        HostPath:
          allOf:
          - $ref: '#/components/schemas/HostPath'
          description: Represents a pre-existing file or directory on the host machine
            that the volume maps to.
      description: Volume used by the Kubernetes workload.
    VolumeDetail:
      type: object
      properties:
        VolumeArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: EBS volume ARN information.
        VolumeType:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The EBS volume type.
        DeviceName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The device name for the EBS volume.
        VolumeSizeInGB:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: EBS volume size in GB.
        EncryptionType:
          allOf:
          - $ref: '#/components/schemas/String'
          description: EBS volume encryption type.
        SnapshotArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Snapshot ARN of the EBS volume.
        KmsKeyArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: KMS key ARN used to encrypt the EBS volume.
      description: Contains EBS volume details.
    VolumeDetails:
      type: array
      items:
        $ref: '#/components/schemas/VolumeDetail'
    VolumeMount:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Volume mount name.
        MountPath:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Volume mount path.
      description: Container volume mount.
    VolumeMounts:
      type: array
      items:
        $ref: '#/components/schemas/VolumeMount'
    Volumes:
      type: array
      items:
        $ref: '#/components/schemas/Volume'
    VpcConfig:
      type: object
      properties:
        SubnetIds:
          allOf:
          - $ref: '#/components/schemas/SubnetIds'
          description: The identifiers of the subnets that are associated with your
            Lambda function.
        VpcId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The identifier of the Amazon Virtual Private Cloud.
        SecurityGroups:
          allOf:
          - $ref: '#/components/schemas/SecurityGroups'
          description: The identifier of the security group attached to the Lambda
            function.
      description: Amazon Virtual Private Cloud configuration details associated with
        your Lambda function.
