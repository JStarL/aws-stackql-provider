openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: ebs
  x-aws-serviceName: ebs
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-05'
  version: '2019-11-02'
  title: Amazon Elastic Block Store
  description: |-
    You can use the Amazon Elastic Block Store (Amazon EBS) direct APIs to create Amazon EBS snapshots, write data directly to your snapshots, read data on your snapshots, and identify the differences or changes between two snapshots. If youâ€™re an independent software vendor (ISV) who offers backup services for Amazon EBS, the EBS direct APIs make it more efficient and cost-effective to track incremental changes on your Amazon EBS volumes through snapshots. This can be done without having to create new volumes from snapshots, and then use Amazon Elastic Compute Cloud (Amazon EC2) instances to compare the differences.

    You can create incremental snapshots directly from data on-premises into volumes and the cloud to use for quick disaster recovery. With the ability to write and read snapshots, you can write your on-premises data to an snapshot during a disaster. Then after recovery, you can restore it back to Amazon Web Services or on-premises from the snapshot. You no longer need to build and maintain complex mechanisms to copy data to and from Amazon EBS.

    This API reference provides detailed information about the actions, data types, parameters, and errors of the EBS direct APIs. For more information about the elements that make up the EBS direct APIs, and examples of how to use them effectively, see [Accessing the Contents of an Amazon EBS Snapshot](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-accessing-snapshot.html) in the _Amazon Elastic Compute Cloud User Guide_. For more information about the supported Amazon Web Services Regions, endpoints, and service quotas for the EBS direct APIs, see [Amazon Elastic Block Store Endpoints and Quotas](https://docs.aws.amazon.com/general/latest/gr/ebs-service.html) in the _Amazon Web Services General Reference_.
servers:
- description: The Amazon Elastic Block Store regional endpoint
  url: https://ebs.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths: {}
components:
  schemas:
    AccessDeniedExceptionReason:
      type: string
      enum:
      - UNAUTHORIZED_ACCOUNT
      - DEPENDENCY_ACCESS_DENIED
    BlockData:
      type: string
      format: byte
      x-sensitive: true
    BlockIndex:
      type: integer
      minimum: 0
    BlockSize:
      type: integer
    BlockToken:
      type: string
      pattern: ^[A-Za-z0-9+/=]+$
      minLength: 0
      maxLength: 256
    Blocks:
      type: array
      items:
        $ref: '#/components/schemas/Block'
      x-sensitive: true
    Boolean:
      type: boolean
    ChangedBlocks:
      type: array
      items:
        $ref: '#/components/schemas/ChangedBlock'
    ChangedBlocksCount:
      type: integer
      minimum: 0
    Checksum:
      type: string
      pattern: ^[A-Za-z0-9+/=]+$
      minLength: 0
      maxLength: 64
    ChecksumAggregationMethod:
      type: string
      enum:
      - LINEAR
    ChecksumAlgorithm:
      type: string
      enum:
      - SHA256
    DataLength:
      type: integer
    Description:
      type: string
      pattern: ^[\S\s]+$
      minLength: 0
      maxLength: 255
    ErrorMessage:
      type: string
      minLength: 0
      maxLength: 256
    IdempotencyToken:
      type: string
      pattern: ^[\S]+$
      minLength: 0
      maxLength: 255
    KmsKeyArn:
      type: string
      pattern: ^arn:aws[a-z\-]*:kms:.*:[0-9]{12}:key/
      minLength: 1
      maxLength: 2048
    MaxResults:
      type: integer
      minimum: 100
      maximum: 10000
    OwnerId:
      type: string
      pattern: ^\S+$
      minLength: 1
      maxLength: 24
    PageToken:
      type: string
      pattern: ^[A-Za-z0-9+/=]+$
      minLength: 0
      maxLength: 256
    Progress:
      type: integer
      minimum: 0
      maximum: 100
    RequestThrottledExceptionReason:
      type: string
      enum:
      - ACCOUNT_THROTTLED
      - DEPENDENCY_REQUEST_THROTTLED
      - RESOURCE_LEVEL_THROTTLE
    ResourceNotFoundExceptionReason:
      type: string
      enum:
      - SNAPSHOT_NOT_FOUND
      - GRANT_NOT_FOUND
      - DEPENDENCY_RESOURCE_NOT_FOUND
      - IMAGE_NOT_FOUND
    SSEType:
      type: string
      enum:
      - sse-ebs
      - sse-kms
      - none
    ServiceQuotaExceededExceptionReason:
      type: string
      enum:
      - DEPENDENCY_SERVICE_QUOTA_EXCEEDED
    SnapshotId:
      type: string
      pattern: ^snap-[0-9a-f]+$
      minLength: 1
      maxLength: 64
    Status:
      type: string
      enum:
      - completed
      - pending
      - error
    TagKey:
      type: string
      pattern: ^[\S\s]+$
      minLength: 0
      maxLength: 127
    TagValue:
      type: string
      pattern: ^[\S\s]*$
      minLength: 0
      maxLength: 255
    Tags:
      type: array
      items:
        $ref: '#/components/schemas/Tag'
    TimeStamp:
      type: string
      format: date-time
    Timeout:
      type: integer
      minimum: 10
      maximum: 4320
    ValidationExceptionReason:
      type: string
      enum:
      - INVALID_CUSTOMER_KEY
      - INVALID_PAGE_TOKEN
      - INVALID_BLOCK_TOKEN
      - INVALID_GRANT_TOKEN
      - INVALID_SNAPSHOT_ID
      - UNRELATED_SNAPSHOTS
      - INVALID_BLOCK
      - INVALID_CONTENT_ENCODING
      - INVALID_TAG
      - INVALID_DEPENDENCY_REQUEST
      - INVALID_PARAMETER_VALUE
      - INVALID_VOLUME_SIZE
      - CONFLICTING_BLOCK_UPDATE
      - INVALID_IMAGE_ID
      - WRITE_REQUEST_TIMEOUT
    VolumeSize:
      type: integer
      format: int64
      minimum: 1
