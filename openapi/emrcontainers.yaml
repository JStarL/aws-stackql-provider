openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: emr_containers
  x-aws-serviceName: emrcontainers
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-05'
  version: '2020-10-01'
  title: Amazon EMR Containers
  description: |-
    Amazon EMR on EKS provides a deployment option for Amazon EMR that allows you to run open-source big data frameworks on Amazon Elastic Kubernetes Service (Amazon EKS). With this deployment option, you can focus on running analytics workloads while Amazon EMR on EKS builds, configures, and manages containers for open-source applications. For more information about Amazon EMR on EKS concepts and tasks, see [What is Amazon EMR on EKS](https://docs.aws.amazon.com/emr/latest/EMR-on-EKS-DevelopmentGuide/emr-eks.html).

    _Amazon EMR containers_ is the API name for Amazon EMR on EKS. The `emr-containers` prefix is used in the following scenarios:

      * It is the prefix in the CLI commands for Amazon EMR on EKS. For example, `aws emr-containers start-job-run`.

      * It is the prefix before IAM policy actions for Amazon EMR on EKS. For example, `"Action": [ "emr-containers:StartJobRun"]`. For more information, see [Policy actions for Amazon EMR on EKS](https://docs.aws.amazon.com/emr/latest/EMR-on-EKS-DevelopmentGuide/security_iam_service-with-iam.html#security_iam_service-with-iam-id-based-policies-actions).

      * It is the prefix used in Amazon EMR on EKS service endpoints. For example, `emr-containers.us-east-2.amazonaws.com`. For more information, see [Amazon EMR on EKSService Endpoints](https://docs.aws.amazon.com/emr/latest/EMR-on-EKS-DevelopmentGuide/service-quotas.html#service-endpoints).
servers:
- description: The Amazon EMR Containers regional endpoint
  url: https://emr-containers.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths: {}
components:
  schemas:
    ACMCertArn:
      type: string
      pattern: ^arn:(aws[a-zA-Z0-9-]*):acm:.+:(\d{12}):certificate/.+$
      minLength: 44
      maxLength: 2048
    Base64Encoded:
      type: string
      pattern: ^([A-Za-z0-9+/]{4})*([A-Za-z0-9+/]{4}|[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{2}==)?$
      minLength: 0
      maxLength: 5000
    Boolean:
      type: boolean
    ClientToken:
      type: string
      pattern: \S
      minLength: 1
      maxLength: 64
    ClusterId:
      type: string
      pattern: ^[0-9A-Za-z][A-Za-z0-9\-_]*$
      minLength: 1
      maxLength: 100
    CredentialType:
      type: string
      pattern: ^.*\S.*$
      minLength: 1
      maxLength: 64
    EndpointArn:
      type: string
      pattern: ^arn:(aws[a-zA-Z0-9-]*):emr-containers:.+:(\d{12}):\/virtualclusters\/[0-9a-zA-Z]+\/endpoints\/[0-9a-zA-Z]+$
      minLength: 60
      maxLength: 1024
    EndpointType:
      type: string
      pattern: \S
      minLength: 1
      maxLength: 64
    EntryPointArgument:
      type: string
      pattern: \S
      minLength: 1
      maxLength: 10280
    EntryPointPath:
      type: string
      pattern: \S
      minLength: 1
      maxLength: 256
    IAMRoleArn:
      type: string
      pattern: ^arn:(aws[a-zA-Z0-9-]*):iam::(\d{12})?:(role((\u002F)|(\u002F[\u0021-\u007F]+\u002F))[\w+=,.@-]+)$
      minLength: 20
      maxLength: 2048
    JavaInteger:
      type: integer
    JobArn:
      type: string
      pattern: ^arn:(aws[a-zA-Z0-9-]*):emr-containers:.+:(\d{12}):\/virtualclusters\/[0-9a-zA-Z]+\/jobruns\/[0-9a-zA-Z]+$
      minLength: 60
      maxLength: 1024
    JobTemplateArn:
      type: string
      pattern: ^arn:(aws[a-zA-Z0-9-]*):emr-containers:.+:(\d{12}):\/jobtemplates\/[0-9a-zA-Z]+$
      minLength: 60
      maxLength: 1024
    KmsKeyArn:
      type: string
      pattern: ^(arn:(aws[a-zA-Z0-9-]*):kms:.+:(\d{12})?:key\/[(0-9a-zA-Z)-?]+|\$\{[a-zA-Z]\w*\})$
      minLength: 3
      maxLength: 2048
    KubernetesNamespace:
      type: string
      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
      minLength: 1
      maxLength: 63
    LogContext:
      type: string
      pattern: ^((?!.*-s3alias)(?!xn--.*)[a-z0-9][-a-z0-9.]*)?[a-z0-9]$
      minLength: 3
      maxLength: 63
    LogGroupName:
      type: string
      pattern: ^[\.\-_/#A-Za-z0-9]+$
      minLength: 1
      maxLength: 512
    MaxFilesToKeep:
      type: integer
      minimum: 1
      maximum: 50
    NextToken:
      type: string
      pattern: \S
      minLength: 1
      maxLength: 1024
    ParametricIAMRoleArn:
      type: string
      pattern: ^(^arn:(aws[a-zA-Z0-9-]*):iam::(\d{12})?:(role((\u002F)|(\u002F[\u0021-\u007F]+\u002F))[\w+=,.@-]+)$)|([\.\-_\#A-Za-z0-9\$\{\}]+)$
      minLength: 4
      maxLength: 2048
    ParametricReleaseLabel:
      type: string
      pattern: ^([\.\-_/A-Za-z0-9]+|\$\{[a-zA-Z]\w*\})$
      minLength: 1
      maxLength: 64
    ReleaseLabel:
      type: string
      pattern: ^[\.\-_/A-Za-z0-9]+$
      minLength: 1
      maxLength: 64
    RequestIdentityUserArn:
      type: string
      pattern: ^arn:(aws[a-zA-Z0-9-]*):(iam|sts)::(\d{12})?:[\w/+=,.@-]+$
      minLength: 20
      maxLength: 2048
    ResourceIdString:
      type: string
      pattern: ^[0-9a-z]+$
      minLength: 1
      maxLength: 64
    ResourceNameString:
      type: string
      pattern: ^[\.\-_/#A-Za-z0-9]+$
      minLength: 1
      maxLength: 64
    RotationSize:
      type: string
      pattern: ^\d+(\.\d+)?[KMG][Bb]?$
      minLength: 3
      maxLength: 12
    RsiArn:
      type: string
      pattern: ^arn:(aws[a-zA-Z0-9-]*):emr-containers:.+:(\d{12}):/virtualclusters/.+$
      minLength: 60
      maxLength: 500
    SecretsManagerArn:
      type: string
      pattern: ^arn:(aws[a-zA-Z0-9-]*):secretsmanager:.+:(\d{12}):secret:[0-9a-zA-Z/_+=.@-]+$
      minLength: 3
      maxLength: 2048
    SecurityConfigurationArn:
      type: string
      pattern: ^arn:(aws[a-zA-Z0-9-]*):emr-containers:.+:(\d{12}):\/securityconfigurations\/[0-9a-zA-Z]+$
      minLength: 60
      maxLength: 1024
    SessionTagValue:
      type: string
      pattern: ^[\.\-_/#A-Za-z0-9 ]+$
      minLength: 1
      maxLength: 512
    SparkSqlParameters:
      type: string
      pattern: \S
      minLength: 1
      maxLength: 102400
    SparkSubmitParameters:
      type: string
      pattern: \S
      minLength: 1
      maxLength: 102400
    String1024:
      type: string
      pattern: \S
      minLength: 1
      maxLength: 1024
    String128:
      type: string
      pattern: \S
      minLength: 1
      maxLength: 128
    String2048:
      type: string
      pattern: \S
      minLength: 1
      maxLength: 2048
    String256:
      type: string
      pattern: \S
      minLength: 1
      maxLength: 256
    StringEmpty256:
      type: string
      pattern: \S
      minLength: 0
      maxLength: 256
    TemplateParameter:
      type: string
      pattern: ^[\.\-_/#A-Za-z0-9\$\{\}]+$
      minLength: 1
      maxLength: 512
    TemplateParameterName:
      type: string
      pattern: ^[\.\-_\#A-Za-z0-9]+$
      minLength: 1
      maxLength: 512
    Token:
      type: string
      pattern: ^.*\S.*$
      minLength: 1
    UriString:
      type: string
      pattern: ^[\u0020-\uD7FF\uE000-\uFFFD\uD800\uDBFF-\uDC00\uDFFF\r\n\t]*$
      minLength: 1
      maxLength: 10280
    VirtualClusterArn:
      type: string
      pattern: ^arn:(aws[a-zA-Z0-9-]*):emr-containers:.+:(\d{12}):\/virtualclusters\/[0-9a-zA-Z]+$
      minLength: 60
      maxLength: 1024
