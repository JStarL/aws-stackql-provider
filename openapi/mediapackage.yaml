openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: mediapackage
  x-aws-serviceName: mediapackage
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-07'
  version: '2017-10-12'
  title: AWS Elemental MediaPackage
  description: |-
    AWS Elemental MediaPackage
servers:
- description: The AWS Elemental MediaPackage regional endpoint
  url: https://mediapackage.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths:
  /channels/{Id}/configure_logs:
    put:
      operationId: ConfigureLogs
      description: |-
        Changes the Channel's properities to configure log subscription
      parameters:
      - name: Id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                EgressAccessLogs:
                  $ref: '#/components/schemas/EgressAccessLogs'
                IngressAccessLogs:
                  $ref: '#/components/schemas/IngressAccessLogs'
      responses:
        '200': {}
        '403':
          description: |-
            The client is not authorized to access the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            An unexpected error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '503':
          description: |-
            An unexpected error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client has exceeded their resource or throttling limits.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '422':
          description: |-
            The parameters sent in the request are not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
  /channels:
    post:
      operationId: CreateChannel
      description: |-
        Creates a new Channel.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Description:
                  $ref: '#/components/schemas/__string'
                Id:
                  $ref: '#/components/schemas/__string'
                Tags:
                  $ref: '#/components/schemas/Tags'
      responses:
        '200': {}
        '403':
          description: |-
            The client is not authorized to access the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            An unexpected error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '503':
          description: |-
            An unexpected error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client has exceeded their resource or throttling limits.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '422':
          description: |-
            The parameters sent in the request are not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
    get:
      operationId: ListChannels
      description: |-
        Returns a collection of Channels.
      parameters:
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '403':
          description: |-
            The client is not authorized to access the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            An unexpected error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '503':
          description: |-
            An unexpected error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client has exceeded their resource or throttling limits.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '422':
          description: |-
            The parameters sent in the request are not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
  /harvest_jobs:
    post:
      operationId: CreateHarvestJob
      description: |-
        Creates a new HarvestJob record.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                EndTime:
                  $ref: '#/components/schemas/__string'
                Id:
                  $ref: '#/components/schemas/__string'
                OriginEndpointId:
                  $ref: '#/components/schemas/__string'
                S3Destination:
                  $ref: '#/components/schemas/S3Destination'
                StartTime:
                  $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '403':
          description: |-
            The client is not authorized to access the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            An unexpected error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '503':
          description: |-
            An unexpected error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client has exceeded their resource or throttling limits.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '422':
          description: |-
            The parameters sent in the request are not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
    get:
      operationId: ListHarvestJobs
      description: |-
        Returns a collection of HarvestJob records.
      parameters:
      - name: includeChannelId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      - name: includeStatus
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '403':
          description: |-
            The client is not authorized to access the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            An unexpected error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '503':
          description: |-
            An unexpected error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client has exceeded their resource or throttling limits.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '422':
          description: |-
            The parameters sent in the request are not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
  /origin_endpoints:
    post:
      operationId: CreateOriginEndpoint
      description: |-
        Creates a new OriginEndpoint record.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Authorization:
                  $ref: '#/components/schemas/Authorization'
                ChannelId:
                  $ref: '#/components/schemas/__string'
                CmafPackage:
                  $ref: '#/components/schemas/CmafPackageCreateOrUpdateParameters'
                DashPackage:
                  $ref: '#/components/schemas/DashPackage'
                Description:
                  $ref: '#/components/schemas/__string'
                HlsPackage:
                  $ref: '#/components/schemas/HlsPackage'
                Id:
                  $ref: '#/components/schemas/__string'
                ManifestName:
                  $ref: '#/components/schemas/__string'
                MssPackage:
                  $ref: '#/components/schemas/MssPackage'
                Origination:
                  $ref: '#/components/schemas/Origination'
                StartoverWindowSeconds:
                  $ref: '#/components/schemas/__integer'
                Tags:
                  $ref: '#/components/schemas/Tags'
                TimeDelaySeconds:
                  $ref: '#/components/schemas/__integer'
                Whitelist:
                  $ref: '#/components/schemas/__listOf__string'
      responses:
        '200': {}
        '403':
          description: |-
            The client is not authorized to access the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            An unexpected error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '503':
          description: |-
            An unexpected error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client has exceeded their resource or throttling limits.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '422':
          description: |-
            The parameters sent in the request are not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
    get:
      operationId: ListOriginEndpoints
      description: |-
        Returns a collection of OriginEndpoint records.
      parameters:
      - name: channelId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '403':
          description: |-
            The client is not authorized to access the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            An unexpected error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '503':
          description: |-
            An unexpected error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client has exceeded their resource or throttling limits.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '422':
          description: |-
            The parameters sent in the request are not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
  /channels/{Id}:
    delete:
      operationId: DeleteChannel
      description: |-
        Deletes an existing Channel.
      parameters:
      - name: Id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '202': {}
        '403':
          description: |-
            The client is not authorized to access the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            An unexpected error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '503':
          description: |-
            An unexpected error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client has exceeded their resource or throttling limits.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '422':
          description: |-
            The parameters sent in the request are not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
    get:
      operationId: DescribeChannel
      description: |-
        Gets details about a Channel.
      parameters:
      - name: Id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '403':
          description: |-
            The client is not authorized to access the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            An unexpected error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '503':
          description: |-
            An unexpected error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client has exceeded their resource or throttling limits.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '422':
          description: |-
            The parameters sent in the request are not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
    put:
      operationId: UpdateChannel
      description: |-
        Updates an existing Channel.
      parameters:
      - name: Id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Description:
                  $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '403':
          description: |-
            The client is not authorized to access the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            An unexpected error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '503':
          description: |-
            An unexpected error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client has exceeded their resource or throttling limits.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '422':
          description: |-
            The parameters sent in the request are not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
  /origin_endpoints/{Id}:
    delete:
      operationId: DeleteOriginEndpoint
      description: |-
        Deletes an existing OriginEndpoint.
      parameters:
      - name: Id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '202': {}
        '403':
          description: |-
            The client is not authorized to access the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            An unexpected error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '503':
          description: |-
            An unexpected error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client has exceeded their resource or throttling limits.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '422':
          description: |-
            The parameters sent in the request are not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
    get:
      operationId: DescribeOriginEndpoint
      description: |-
        Gets details about an existing OriginEndpoint.
      parameters:
      - name: Id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '403':
          description: |-
            The client is not authorized to access the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            An unexpected error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '503':
          description: |-
            An unexpected error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client has exceeded their resource or throttling limits.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '422':
          description: |-
            The parameters sent in the request are not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
    put:
      operationId: UpdateOriginEndpoint
      description: |-
        Updates an existing OriginEndpoint.
      parameters:
      - name: Id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Authorization:
                  $ref: '#/components/schemas/Authorization'
                CmafPackage:
                  $ref: '#/components/schemas/CmafPackageCreateOrUpdateParameters'
                DashPackage:
                  $ref: '#/components/schemas/DashPackage'
                Description:
                  $ref: '#/components/schemas/__string'
                HlsPackage:
                  $ref: '#/components/schemas/HlsPackage'
                ManifestName:
                  $ref: '#/components/schemas/__string'
                MssPackage:
                  $ref: '#/components/schemas/MssPackage'
                Origination:
                  $ref: '#/components/schemas/Origination'
                StartoverWindowSeconds:
                  $ref: '#/components/schemas/__integer'
                TimeDelaySeconds:
                  $ref: '#/components/schemas/__integer'
                Whitelist:
                  $ref: '#/components/schemas/__listOf__string'
      responses:
        '200': {}
        '403':
          description: |-
            The client is not authorized to access the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            An unexpected error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '503':
          description: |-
            An unexpected error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client has exceeded their resource or throttling limits.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '422':
          description: |-
            The parameters sent in the request are not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
  /harvest_jobs/{Id}:
    get:
      operationId: DescribeHarvestJob
      description: |-
        Gets details about an existing HarvestJob.
      parameters:
      - name: Id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '403':
          description: |-
            The client is not authorized to access the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            An unexpected error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '503':
          description: |-
            An unexpected error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client has exceeded their resource or throttling limits.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '422':
          description: |-
            The parameters sent in the request are not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
  /tags/{ResourceArn}:
    get:
      operationId: ListTagsForResource
      parameters:
      - name: ResourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
    post:
      operationId: TagResource
      parameters:
      - name: ResourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Tags:
                  $ref: '#/components/schemas/__mapOf__string'
      responses:
        '204': {}
    delete:
      operationId: UntagResource
      parameters:
      - name: ResourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: tagKeys
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/__listOf__string'
      responses:
        '204': {}
  /channels/{Id}/credentials:
    put:
      operationId: RotateChannelCredentials
      description: |-
        Changes the Channel's first IngestEndpoint's username and password. WARNING - This API is deprecated. Please use RotateIngestEndpointCredentials instead
      parameters:
      - name: Id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '403':
          description: |-
            The client is not authorized to access the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            An unexpected error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '503':
          description: |-
            An unexpected error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client has exceeded their resource or throttling limits.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '422':
          description: |-
            The parameters sent in the request are not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
  /channels/{Id}/ingest_endpoints/{IngestEndpointId}/credentials:
    put:
      operationId: RotateIngestEndpointCredentials
      description: |-
        Rotate the IngestEndpoint's username and password, as specified by the IngestEndpoint's id.
      parameters:
      - name: Id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: IngestEndpointId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '403':
          description: |-
            The client is not authorized to access the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            An unexpected error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '503':
          description: |-
            An unexpected error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client has exceeded their resource or throttling limits.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '422':
          description: |-
            The parameters sent in the request are not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityException'
components:
  schemas:
    AdMarkers:
      type: string
      enum:
      - NONE
      - SCTE35_ENHANCED
      - PASSTHROUGH
      - DATERANGE
    AdTriggers:
      type: array
      items:
        $ref: '#/components/schemas/__AdTriggersElement'
      description: 'A list of SCTE-35 message types that are treated as ad markers
        in the output.  If empty, no

        ad markers are output.  Specify multiple items to create ad markers for all
        of the included

        message types.'
    AdsOnDeliveryRestrictions:
      type: string
      enum:
      - NONE
      - RESTRICTED
      - UNRESTRICTED
      - BOTH
      description: 'This setting allows the delivery restriction flags on SCTE-35
        segmentation descriptors to

        determine whether a message signals an ad.  Choosing "NONE" means no SCTE-35
        messages become

        ads.  Choosing "RESTRICTED" means SCTE-35 messages of the types specified
        in AdTriggers that

        contain delivery restrictions will be treated as ads.  Choosing "UNRESTRICTED"
        means SCTE-35

        messages of the types specified in AdTriggers that do not contain delivery
        restrictions will

        be treated as ads.  Choosing "BOTH" means all SCTE-35 messages of the types
        specified in

        AdTriggers will be treated as ads.  Note that Splice Insert messages do not
        have these flags

        and are always treated as ads if specified in AdTriggers.'
    Authorization:
      type: object
      properties:
        CdnIdentifierSecret:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) for the secret in Secrets Manager
            that your Content Distribution Network (CDN) uses for authorization to
            access your endpoint.
        SecretsRoleArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) for the IAM role that allows
            MediaPackage to communicate with AWS Secrets Manager.
      required:
      - CdnIdentifierSecret
      - SecretsRoleArn
      description: CDN Authorization credentials
    Channel:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) assigned to the Channel.
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The date and time the Channel was created.
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A short text description of the Channel.
        EgressAccessLogs:
          $ref: '#/components/schemas/EgressAccessLogs'
        HlsIngest:
          $ref: '#/components/schemas/HlsIngest'
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the Channel.
        IngressAccessLogs:
          $ref: '#/components/schemas/IngressAccessLogs'
        Tags:
          $ref: '#/components/schemas/Tags'
      description: A Channel resource configuration.
    CmafEncryption:
      type: object
      properties:
        ConstantInitializationVector:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: An optional 128-bit, 16-byte hex value represented by a 32-character
            string, used in conjunction with the key for encrypting blocks. If you
            don't specify a value, then MediaPackage creates the constant initialization
            vector (IV).
        EncryptionMethod:
          $ref: '#/components/schemas/CmafEncryptionMethod'
        KeyRotationIntervalSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: Time (in seconds) between each encryption key rotation.
        SpekeKeyProvider:
          $ref: '#/components/schemas/SpekeKeyProvider'
      required:
      - SpekeKeyProvider
      description: A Common Media Application Format (CMAF) encryption configuration.
    CmafEncryptionMethod:
      type: string
      enum:
      - SAMPLE_AES
      - AES_CTR
      description: The encryption method to use.
    CmafPackage:
      type: object
      properties:
        Encryption:
          $ref: '#/components/schemas/CmafEncryption'
        HlsManifests:
          allOf:
          - $ref: '#/components/schemas/__listOfHlsManifest'
          description: A list of HLS manifest configurations
        SegmentDurationSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: Duration (in seconds) of each segment. Actual segments will
            be rounded to the nearest multiple of the source segment duration.
        SegmentPrefix:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: An optional custom string that is prepended to the name of
            each segment. If not specified, it defaults to the ChannelId.
        StreamSelection:
          $ref: '#/components/schemas/StreamSelection'
      description: A Common Media Application Format (CMAF) packaging configuration.
    CmafPackageCreateOrUpdateParameters:
      type: object
      properties:
        Encryption:
          $ref: '#/components/schemas/CmafEncryption'
        HlsManifests:
          allOf:
          - $ref: '#/components/schemas/__listOfHlsManifestCreateOrUpdateParameters'
          description: A list of HLS manifest configurations
        SegmentDurationSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: Duration (in seconds) of each segment. Actual segments will
            be rounded to the nearest multiple of the source segment duration.
        SegmentPrefix:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: An optional custom string that is prepended to the name of
            each segment. If not specified, it defaults to the ChannelId.
        StreamSelection:
          $ref: '#/components/schemas/StreamSelection'
      description: A Common Media Application Format (CMAF) packaging configuration.
    ConfigureLogsRequest:
      type: object
      properties:
        EgressAccessLogs:
          $ref: '#/components/schemas/EgressAccessLogs'
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the channel to log subscription.
        IngressAccessLogs:
          $ref: '#/components/schemas/IngressAccessLogs'
      required:
      - Id
      description: the option to configure log subscription.
    ConfigureLogsResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) assigned to the Channel.
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The date and time the Channel was created.
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A short text description of the Channel.
        EgressAccessLogs:
          $ref: '#/components/schemas/EgressAccessLogs'
        HlsIngest:
          $ref: '#/components/schemas/HlsIngest'
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the Channel.
        IngressAccessLogs:
          $ref: '#/components/schemas/IngressAccessLogs'
        Tags:
          $ref: '#/components/schemas/Tags'
    CreateChannelRequest:
      type: object
      properties:
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A short text description of the Channel.
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the Channel. The ID must be unique within the region
            and it cannot be changed after a Channel is created.
        Tags:
          $ref: '#/components/schemas/Tags'
      required:
      - Id
      description: A new Channel configuration.
    CreateChannelResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) assigned to the Channel.
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The date and time the Channel was created.
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A short text description of the Channel.
        EgressAccessLogs:
          $ref: '#/components/schemas/EgressAccessLogs'
        HlsIngest:
          $ref: '#/components/schemas/HlsIngest'
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the Channel.
        IngressAccessLogs:
          $ref: '#/components/schemas/IngressAccessLogs'
        Tags:
          $ref: '#/components/schemas/Tags'
    CreateHarvestJobRequest:
      type: object
      properties:
        EndTime:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The end of the time-window which will be harvested
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the HarvestJob. The ID must be unique within the
            region and it cannot be changed after the HarvestJob is submitted
        OriginEndpointId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the OriginEndpoint that the HarvestJob will harvest
            from. This cannot be changed after the HarvestJob is submitted.
        S3Destination:
          $ref: '#/components/schemas/S3Destination'
        StartTime:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The start of the time-window which will be harvested
      required:
      - EndTime
      - Id
      - OriginEndpointId
      - S3Destination
      - StartTime
      description: Configuration parameters used to create a new HarvestJob.
    CreateHarvestJobResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) assigned to the HarvestJob.
        ChannelId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the Channel that the HarvestJob will harvest from.
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The date and time the HarvestJob was submitted.
        EndTime:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The end of the time-window which will be harvested.
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the HarvestJob. The ID must be unique within the
            region and it cannot be changed after the HarvestJob is submitted.
        OriginEndpointId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the OriginEndpoint that the HarvestJob will harvest
            from. This cannot be changed after the HarvestJob is submitted.
        S3Destination:
          $ref: '#/components/schemas/S3Destination'
        StartTime:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The start of the time-window which will be harvested.
        Status:
          allOf:
          - $ref: '#/components/schemas/Status'
          description: The current status of the HarvestJob. Consider setting up a
            CloudWatch Event to listen for HarvestJobs as they succeed or fail. In
            the event of failure, the CloudWatch Event will include an explanation
            of why the HarvestJob failed.
    CreateOriginEndpointRequest:
      type: object
      properties:
        Authorization:
          $ref: '#/components/schemas/Authorization'
        ChannelId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the Channel that the OriginEndpoint will be associated
            with. This cannot be changed after the OriginEndpoint is created.
        CmafPackage:
          $ref: '#/components/schemas/CmafPackageCreateOrUpdateParameters'
        DashPackage:
          $ref: '#/components/schemas/DashPackage'
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A short text description of the OriginEndpoint.
        HlsPackage:
          $ref: '#/components/schemas/HlsPackage'
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the OriginEndpoint. The ID must be unique within
            the region and it cannot be changed after the OriginEndpoint is created.
        ManifestName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A short string that will be used as the filename of the OriginEndpoint
            URL (defaults to "index").
        MssPackage:
          $ref: '#/components/schemas/MssPackage'
        Origination:
          allOf:
          - $ref: '#/components/schemas/Origination'
          description: Control whether origination of video is allowed for this OriginEndpoint.
            If set to ALLOW, the OriginEndpoint may by requested, pursuant to any
            other form of access control. If set to DENY, the OriginEndpoint may not
            be requested. This can be helpful for Live to VOD harvesting, or for temporarily
            disabling origination
        StartoverWindowSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: Maximum duration (seconds) of content to retain for startover
            playback. If not specified, startover playback will be disabled for the
            OriginEndpoint.
        Tags:
          $ref: '#/components/schemas/Tags'
        TimeDelaySeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: Amount of delay (seconds) to enforce on the playback of live
            content. If not specified, there will be no time delay in effect for the
            OriginEndpoint.
        Whitelist:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: A list of source IP CIDR blocks that will be allowed to access
            the OriginEndpoint.
      required:
      - ChannelId
      - Id
      description: Configuration parameters used to create a new OriginEndpoint.
    CreateOriginEndpointResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) assigned to the OriginEndpoint.
        Authorization:
          $ref: '#/components/schemas/Authorization'
        ChannelId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the Channel the OriginEndpoint is associated with.
        CmafPackage:
          $ref: '#/components/schemas/CmafPackage'
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The date and time the OriginEndpoint was created.
        DashPackage:
          $ref: '#/components/schemas/DashPackage'
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A short text description of the OriginEndpoint.
        HlsPackage:
          $ref: '#/components/schemas/HlsPackage'
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the OriginEndpoint.
        ManifestName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A short string appended to the end of the OriginEndpoint URL.
        MssPackage:
          $ref: '#/components/schemas/MssPackage'
        Origination:
          allOf:
          - $ref: '#/components/schemas/Origination'
          description: Control whether origination of video is allowed for this OriginEndpoint.
            If set to ALLOW, the OriginEndpoint may by requested, pursuant to any
            other form of access control. If set to DENY, the OriginEndpoint may not
            be requested. This can be helpful for Live to VOD harvesting, or for temporarily
            disabling origination
        StartoverWindowSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: Maximum duration (seconds) of content to retain for startover
            playback. If not specified, startover playback will be disabled for the
            OriginEndpoint.
        Tags:
          $ref: '#/components/schemas/Tags'
        TimeDelaySeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: Amount of delay (seconds) to enforce on the playback of live
            content. If not specified, there will be no time delay in effect for the
            OriginEndpoint.
        Url:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The URL of the packaged OriginEndpoint for consumption.
        Whitelist:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: A list of source IP CIDR blocks that will be allowed to access
            the OriginEndpoint.
    DashEncryption:
      type: object
      properties:
        KeyRotationIntervalSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: Time (in seconds) between each encryption key rotation.
        SpekeKeyProvider:
          $ref: '#/components/schemas/SpekeKeyProvider'
      required:
      - SpekeKeyProvider
      description: A Dynamic Adaptive Streaming over HTTP (DASH) encryption configuration.
    DashPackage:
      type: object
      properties:
        AdTriggers:
          $ref: '#/components/schemas/AdTriggers'
        AdsOnDeliveryRestrictions:
          $ref: '#/components/schemas/AdsOnDeliveryRestrictions'
        Encryption:
          $ref: '#/components/schemas/DashEncryption'
        IncludeIframeOnlyStream:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: When enabled, an I-Frame only stream will be included in the
            output.
        ManifestLayout:
          allOf:
          - $ref: '#/components/schemas/ManifestLayout'
          description: Determines the position of some tags in the Media Presentation
            Description (MPD). When set to FULL, elements like SegmentTemplate and
            ContentProtection are included in each Representation. When set to COMPACT,
            duplicate elements are combined and presented at the AdaptationSet level.
            When set to DRM_TOP_LEVEL_COMPACT, content protection elements are placed
            the MPD level and referenced at the AdaptationSet level.
        ManifestWindowSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: Time window (in seconds) contained in each manifest.
        MinBufferTimeSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: Minimum duration (in seconds) that a player will buffer media
            before starting the presentation.
        MinUpdatePeriodSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: Minimum duration (in seconds) between potential changes to
            the Dynamic Adaptive Streaming over HTTP (DASH) Media Presentation Description
            (MPD).
        PeriodTriggers:
          allOf:
          - $ref: '#/components/schemas/__listOf__PeriodTriggersElement'
          description: A list of triggers that controls when the outgoing Dynamic
            Adaptive Streaming over HTTP (DASH) Media Presentation Description (MPD)
            will be partitioned into multiple periods. If empty, the content will
            not be partitioned into more than one period. If the list contains "ADS",
            new periods will be created where the Channel source contains SCTE-35
            ad markers.
        Profile:
          allOf:
          - $ref: '#/components/schemas/Profile'
          description: The Dynamic Adaptive Streaming over HTTP (DASH) profile type.
            When set to "HBBTV_1_5", HbbTV 1.5 compliant output is enabled. When set
            to "DVB-DASH_2014", DVB-DASH 2014 compliant output is enabled.
        SegmentDurationSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: Duration (in seconds) of each segment. Actual segments will
            be rounded to the nearest multiple of the source segment duration.
        SegmentTemplateFormat:
          allOf:
          - $ref: '#/components/schemas/SegmentTemplateFormat'
          description: Determines the type of SegmentTemplate included in the Media
            Presentation Description (MPD). When set to NUMBER_WITH_TIMELINE, a full
            timeline is presented in each SegmentTemplate, with $Number$ media URLs.
            When set to TIME_WITH_TIMELINE, a full timeline is presented in each SegmentTemplate,
            with $Time$ media URLs. When set to NUMBER_WITH_DURATION, only a duration
            is included in each SegmentTemplate, with $Number$ media URLs.
        StreamSelection:
          $ref: '#/components/schemas/StreamSelection'
        SuggestedPresentationDelaySeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: Duration (in seconds) to delay live content before presentation.
        UtcTiming:
          allOf:
          - $ref: '#/components/schemas/UtcTiming'
          description: Determines the type of UTCTiming included in the Media Presentation
            Description (MPD)
        UtcTimingUri:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Specifies the value attribute of the UTCTiming field when utcTiming
            is set to HTTP-ISO, HTTP-HEAD or HTTP-XSDATE
      description: A Dynamic Adaptive Streaming over HTTP (DASH) packaging configuration.
    DeleteChannelRequest:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the Channel to delete.
      required:
      - Id
    DeleteChannelResponse:
      type: object
      properties: {}
    DeleteOriginEndpointRequest:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the OriginEndpoint to delete.
      required:
      - Id
    DeleteOriginEndpointResponse:
      type: object
      properties: {}
    DescribeChannelRequest:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of a Channel.
      required:
      - Id
    DescribeChannelResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) assigned to the Channel.
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The date and time the Channel was created.
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A short text description of the Channel.
        EgressAccessLogs:
          $ref: '#/components/schemas/EgressAccessLogs'
        HlsIngest:
          $ref: '#/components/schemas/HlsIngest'
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the Channel.
        IngressAccessLogs:
          $ref: '#/components/schemas/IngressAccessLogs'
        Tags:
          $ref: '#/components/schemas/Tags'
    DescribeHarvestJobRequest:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the HarvestJob.
      required:
      - Id
    DescribeHarvestJobResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) assigned to the HarvestJob.
        ChannelId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the Channel that the HarvestJob will harvest from.
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The date and time the HarvestJob was submitted.
        EndTime:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The end of the time-window which will be harvested.
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the HarvestJob. The ID must be unique within the
            region and it cannot be changed after the HarvestJob is submitted.
        OriginEndpointId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the OriginEndpoint that the HarvestJob will harvest
            from. This cannot be changed after the HarvestJob is submitted.
        S3Destination:
          $ref: '#/components/schemas/S3Destination'
        StartTime:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The start of the time-window which will be harvested.
        Status:
          allOf:
          - $ref: '#/components/schemas/Status'
          description: The current status of the HarvestJob. Consider setting up a
            CloudWatch Event to listen for HarvestJobs as they succeed or fail. In
            the event of failure, the CloudWatch Event will include an explanation
            of why the HarvestJob failed.
    DescribeOriginEndpointRequest:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the OriginEndpoint.
      required:
      - Id
    DescribeOriginEndpointResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) assigned to the OriginEndpoint.
        Authorization:
          $ref: '#/components/schemas/Authorization'
        ChannelId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the Channel the OriginEndpoint is associated with.
        CmafPackage:
          $ref: '#/components/schemas/CmafPackage'
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The date and time the OriginEndpoint was created.
        DashPackage:
          $ref: '#/components/schemas/DashPackage'
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A short text description of the OriginEndpoint.
        HlsPackage:
          $ref: '#/components/schemas/HlsPackage'
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the OriginEndpoint.
        ManifestName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A short string appended to the end of the OriginEndpoint URL.
        MssPackage:
          $ref: '#/components/schemas/MssPackage'
        Origination:
          allOf:
          - $ref: '#/components/schemas/Origination'
          description: Control whether origination of video is allowed for this OriginEndpoint.
            If set to ALLOW, the OriginEndpoint may by requested, pursuant to any
            other form of access control. If set to DENY, the OriginEndpoint may not
            be requested. This can be helpful for Live to VOD harvesting, or for temporarily
            disabling origination
        StartoverWindowSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: Maximum duration (seconds) of content to retain for startover
            playback. If not specified, startover playback will be disabled for the
            OriginEndpoint.
        Tags:
          $ref: '#/components/schemas/Tags'
        TimeDelaySeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: Amount of delay (seconds) to enforce on the playback of live
            content. If not specified, there will be no time delay in effect for the
            OriginEndpoint.
        Url:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The URL of the packaged OriginEndpoint for consumption.
        Whitelist:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: A list of source IP CIDR blocks that will be allowed to access
            the OriginEndpoint.
    EgressAccessLogs:
      type: object
      properties:
        LogGroupName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Customize the log group name.
      description: Configure egress access logging.
    EncryptionContractConfiguration:
      type: object
      properties:
        PresetSpeke20Audio:
          allOf:
          - $ref: '#/components/schemas/PresetSpeke20Audio'
          description: A collection of audio encryption presets.
        PresetSpeke20Video:
          allOf:
          - $ref: '#/components/schemas/PresetSpeke20Video'
          description: A collection of video encryption presets.
      required:
      - PresetSpeke20Audio
      - PresetSpeke20Video
      description: 'Use encryptionContractConfiguration to configure one or more content
        encryption keys for your endpoints that use SPEKE 2.0. The encryption contract
        defines which content keys are used to encrypt the audio and video tracks
        in your stream. To configure the encryption contract, specify which audio
        and video encryption presets to use. Note the following considerations when
        using encryptionContractConfiguration: encryptionContractConfiguration can
        be used for DASH or CMAF endpoints that use SPEKE 2.0. SPEKE 2.0 relies on
        the CPIX 2.3 specification. You must disable key rotation for this endpoint
        by setting keyRotationIntervalSeconds to 0.'
    EncryptionMethod:
      type: string
      enum:
      - AES_128
      - SAMPLE_AES
    ForbiddenException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/__string'
      description: The client is not authorized to access the requested resource.
    HarvestJob:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) assigned to the HarvestJob.
        ChannelId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the Channel that the HarvestJob will harvest from.
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The date and time the HarvestJob was submitted.
        EndTime:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The end of the time-window which will be harvested.
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the HarvestJob. The ID must be unique within the
            region and it cannot be changed after the HarvestJob is submitted.
        OriginEndpointId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the OriginEndpoint that the HarvestJob will harvest
            from. This cannot be changed after the HarvestJob is submitted.
        S3Destination:
          $ref: '#/components/schemas/S3Destination'
        StartTime:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The start of the time-window which will be harvested.
        Status:
          allOf:
          - $ref: '#/components/schemas/Status'
          description: The current status of the HarvestJob. Consider setting up a
            CloudWatch Event to listen for HarvestJobs as they succeed or fail. In
            the event of failure, the CloudWatch Event will include an explanation
            of why the HarvestJob failed.
      description: A HarvestJob resource configuration
    HlsEncryption:
      type: object
      properties:
        ConstantInitializationVector:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A constant initialization vector for encryption (optional).
            When not specified the initialization vector will be periodically rotated.
        EncryptionMethod:
          allOf:
          - $ref: '#/components/schemas/EncryptionMethod'
          description: The encryption method to use.
        KeyRotationIntervalSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: Interval (in seconds) between each encryption key rotation.
        RepeatExtXKey:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: When enabled, the EXT-X-KEY tag will be repeated in output
            manifests.
        SpekeKeyProvider:
          $ref: '#/components/schemas/SpekeKeyProvider'
      required:
      - SpekeKeyProvider
      description: An HTTP Live Streaming (HLS) encryption configuration.
    HlsIngest:
      type: object
      properties:
        IngestEndpoints:
          allOf:
          - $ref: '#/components/schemas/__listOfIngestEndpoint'
          description: A list of endpoints to which the source stream should be sent.
      description: An HTTP Live Streaming (HLS) ingest resource configuration.
    HlsManifest:
      type: object
      properties:
        AdMarkers:
          allOf:
          - $ref: '#/components/schemas/AdMarkers'
          description: This setting controls how ad markers are included in the packaged
            OriginEndpoint. "NONE" will omit all SCTE-35 ad markers from the output.
            "PASSTHROUGH" causes the manifest to contain a copy of the SCTE-35 ad
            markers (comments) taken directly from the input HTTP Live Streaming (HLS)
            manifest. "SCTE35_ENHANCED" generates ad markers and blackout tags based
            on SCTE-35 messages in the input source. "DATERANGE" inserts EXT-X-DATERANGE
            tags to signal ad and program transition events in HLS and CMAF manifests.
            For this option, you must set a programDateTimeIntervalSeconds value that
            is greater than 0.
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the manifest. The ID must be unique within the OriginEndpoint
            and it cannot be changed after it is created.
        IncludeIframeOnlyStream:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: When enabled, an I-Frame only stream will be included in the
            output.
        ManifestName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: An optional short string appended to the end of the OriginEndpoint
            URL. If not specified, defaults to the manifestName for the OriginEndpoint.
        PlaylistType:
          allOf:
          - $ref: '#/components/schemas/PlaylistType'
          description: The HTTP Live Streaming (HLS) playlist type. When either "EVENT"
            or "VOD" is specified, a corresponding EXT-X-PLAYLIST-TYPE entry will
            be included in the media playlist.
        PlaylistWindowSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: Time window (in seconds) contained in each parent manifest.
        ProgramDateTimeIntervalSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The interval (in seconds) between each EXT-X-PROGRAM-DATE-TIME
            tag inserted into manifests. Additionally, when an interval is specified
            ID3Timed Metadata messages will be generated every 5 seconds using the
            ingest time of the content. If the interval is not specified, or set to
            0, then no EXT-X-PROGRAM-DATE-TIME tags will be inserted into manifests
            and no ID3Timed Metadata messages will be generated. Note that irrespective
            of this parameter, if any ID3 Timed Metadata is found in HTTP Live Streaming
            (HLS) input, it will be passed through to HLS output.
        Url:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The URL of the packaged OriginEndpoint for consumption.
        AdTriggers:
          $ref: '#/components/schemas/AdTriggers'
        AdsOnDeliveryRestrictions:
          $ref: '#/components/schemas/AdsOnDeliveryRestrictions'
      required:
      - Id
      description: A HTTP Live Streaming (HLS) manifest configuration.
    HlsManifestCreateOrUpdateParameters:
      type: object
      properties:
        AdMarkers:
          allOf:
          - $ref: '#/components/schemas/AdMarkers'
          description: This setting controls how ad markers are included in the packaged
            OriginEndpoint. "NONE" will omit all SCTE-35 ad markers from the output.
            "PASSTHROUGH" causes the manifest to contain a copy of the SCTE-35 ad
            markers (comments) taken directly from the input HTTP Live Streaming (HLS)
            manifest. "SCTE35_ENHANCED" generates ad markers and blackout tags based
            on SCTE-35 messages in the input source. "DATERANGE" inserts EXT-X-DATERANGE
            tags to signal ad and program transition events in HLS and CMAF manifests.
            For this option, you must set a programDateTimeIntervalSeconds value that
            is greater than 0.
        AdTriggers:
          $ref: '#/components/schemas/AdTriggers'
        AdsOnDeliveryRestrictions:
          $ref: '#/components/schemas/AdsOnDeliveryRestrictions'
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the manifest. The ID must be unique within the OriginEndpoint
            and it cannot be changed after it is created.
        IncludeIframeOnlyStream:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: When enabled, an I-Frame only stream will be included in the
            output.
        ManifestName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: An optional short string appended to the end of the OriginEndpoint
            URL. If not specified, defaults to the manifestName for the OriginEndpoint.
        PlaylistType:
          allOf:
          - $ref: '#/components/schemas/PlaylistType'
          description: The HTTP Live Streaming (HLS) playlist type. When either "EVENT"
            or "VOD" is specified, a corresponding EXT-X-PLAYLIST-TYPE entry will
            be included in the media playlist.
        PlaylistWindowSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: Time window (in seconds) contained in each parent manifest.
        ProgramDateTimeIntervalSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The interval (in seconds) between each EXT-X-PROGRAM-DATE-TIME
            tag inserted into manifests. Additionally, when an interval is specified
            ID3Timed Metadata messages will be generated every 5 seconds using the
            ingest time of the content. If the interval is not specified, or set to
            0, then no EXT-X-PROGRAM-DATE-TIME tags will be inserted into manifests
            and no ID3Timed Metadata messages will be generated. Note that irrespective
            of this parameter, if any ID3 Timed Metadata is found in HTTP Live Streaming
            (HLS) input, it will be passed through to HLS output.
      required:
      - Id
      description: A HTTP Live Streaming (HLS) manifest configuration.
    HlsPackage:
      type: object
      properties:
        AdMarkers:
          allOf:
          - $ref: '#/components/schemas/AdMarkers'
          description: This setting controls how ad markers are included in the packaged
            OriginEndpoint. "NONE" will omit all SCTE-35 ad markers from the output.
            "PASSTHROUGH" causes the manifest to contain a copy of the SCTE-35 ad
            markers (comments) taken directly from the input HTTP Live Streaming (HLS)
            manifest. "SCTE35_ENHANCED" generates ad markers and blackout tags based
            on SCTE-35 messages in the input source. "DATERANGE" inserts EXT-X-DATERANGE
            tags to signal ad and program transition events in HLS and CMAF manifests.
            For this option, you must set a programDateTimeIntervalSeconds value that
            is greater than 0.
        AdTriggers:
          $ref: '#/components/schemas/AdTriggers'
        AdsOnDeliveryRestrictions:
          $ref: '#/components/schemas/AdsOnDeliveryRestrictions'
        Encryption:
          $ref: '#/components/schemas/HlsEncryption'
        IncludeDvbSubtitles:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: When enabled, MediaPackage passes through digital video broadcasting
            (DVB) subtitles into the output.
        IncludeIframeOnlyStream:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: When enabled, an I-Frame only stream will be included in the
            output.
        PlaylistType:
          allOf:
          - $ref: '#/components/schemas/PlaylistType'
          description: The HTTP Live Streaming (HLS) playlist type. When either "EVENT"
            or "VOD" is specified, a corresponding EXT-X-PLAYLIST-TYPE entry will
            be included in the media playlist.
        PlaylistWindowSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: Time window (in seconds) contained in each parent manifest.
        ProgramDateTimeIntervalSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The interval (in seconds) between each EXT-X-PROGRAM-DATE-TIME
            tag inserted into manifests. Additionally, when an interval is specified
            ID3Timed Metadata messages will be generated every 5 seconds using the
            ingest time of the content. If the interval is not specified, or set to
            0, then no EXT-X-PROGRAM-DATE-TIME tags will be inserted into manifests
            and no ID3Timed Metadata messages will be generated. Note that irrespective
            of this parameter, if any ID3 Timed Metadata is found in HTTP Live Streaming
            (HLS) input, it will be passed through to HLS output.
        SegmentDurationSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: Duration (in seconds) of each fragment. Actual fragments will
            be rounded to the nearest multiple of the source fragment duration.
        StreamSelection:
          $ref: '#/components/schemas/StreamSelection'
        UseAudioRenditionGroup:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: When enabled, audio streams will be placed in rendition groups
            in the output.
      description: An HTTP Live Streaming (HLS) packaging configuration.
    IngestEndpoint:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The system generated unique identifier for the IngestEndpoint
        Password:
          allOf:
          - $ref: '#/components/schemas/SensitiveString'
          description: The system generated password for ingest authentication.
        Url:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ingest URL to which the source stream should be sent.
        Username:
          allOf:
          - $ref: '#/components/schemas/SensitiveString'
          description: The system generated username for ingest authentication.
      description: An endpoint for ingesting source content for a Channel.
    IngressAccessLogs:
      type: object
      properties:
        LogGroupName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Customize the log group name.
      description: Configure ingress access logging.
    InternalServerErrorException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/__string'
      description: An unexpected error occurred.
    ListChannelsRequest:
      type: object
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: Upper bound on number of records to return.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A token used to resume pagination from the end of a previous
            request.
    ListChannelsResponse:
      type: object
      properties:
        Channels:
          allOf:
          - $ref: '#/components/schemas/__listOfChannel'
          description: A list of Channel records.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A token that can be used to resume pagination from the end
            of the collection.
    ListHarvestJobsRequest:
      type: object
      properties:
        IncludeChannelId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: When specified, the request will return only HarvestJobs associated
            with the given Channel ID.
        IncludeStatus:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: When specified, the request will return only HarvestJobs in
            the given status.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The upper bound on the number of records to return.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A token used to resume pagination from the end of a previous
            request.
    ListHarvestJobsResponse:
      type: object
      properties:
        HarvestJobs:
          allOf:
          - $ref: '#/components/schemas/__listOfHarvestJob'
          description: A list of HarvestJob records.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A token that can be used to resume pagination from the end
            of the collection.
    ListOriginEndpointsRequest:
      type: object
      properties:
        ChannelId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: When specified, the request will return only OriginEndpoints
            associated with the given Channel ID.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The upper bound on the number of records to return.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A token used to resume pagination from the end of a previous
            request.
    ListOriginEndpointsResponse:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A token that can be used to resume pagination from the end
            of the collection.
        OriginEndpoints:
          allOf:
          - $ref: '#/components/schemas/__listOfOriginEndpoint'
          description: A list of OriginEndpoint records.
    ListTagsForResourceRequest:
      type: object
      properties:
        ResourceArn:
          $ref: '#/components/schemas/__string'
      required:
      - ResourceArn
    ListTagsForResourceResponse:
      type: object
      properties:
        Tags:
          $ref: '#/components/schemas/__mapOf__string'
    ManifestLayout:
      type: string
      enum:
      - FULL
      - COMPACT
      - DRM_TOP_LEVEL_COMPACT
    MaxResults:
      type: integer
      minimum: 1
      maximum: 1000
    MssEncryption:
      type: object
      properties:
        SpekeKeyProvider:
          $ref: '#/components/schemas/SpekeKeyProvider'
      required:
      - SpekeKeyProvider
      description: A Microsoft Smooth Streaming (MSS) encryption configuration.
    MssPackage:
      type: object
      properties:
        Encryption:
          $ref: '#/components/schemas/MssEncryption'
        ManifestWindowSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The time window (in seconds) contained in each manifest.
        SegmentDurationSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The duration (in seconds) of each segment.
        StreamSelection:
          $ref: '#/components/schemas/StreamSelection'
      description: A Microsoft Smooth Streaming (MSS) packaging configuration.
    NotFoundException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/__string'
      description: The requested resource does not exist.
    OriginEndpoint:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) assigned to the OriginEndpoint.
        Authorization:
          $ref: '#/components/schemas/Authorization'
        ChannelId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the Channel the OriginEndpoint is associated with.
        CmafPackage:
          $ref: '#/components/schemas/CmafPackage'
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The date and time the OriginEndpoint was created.
        DashPackage:
          $ref: '#/components/schemas/DashPackage'
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A short text description of the OriginEndpoint.
        HlsPackage:
          $ref: '#/components/schemas/HlsPackage'
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the OriginEndpoint.
        ManifestName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A short string appended to the end of the OriginEndpoint URL.
        MssPackage:
          $ref: '#/components/schemas/MssPackage'
        Origination:
          allOf:
          - $ref: '#/components/schemas/Origination'
          description: Control whether origination of video is allowed for this OriginEndpoint.
            If set to ALLOW, the OriginEndpoint may by requested, pursuant to any
            other form of access control. If set to DENY, the OriginEndpoint may not
            be requested. This can be helpful for Live to VOD harvesting, or for temporarily
            disabling origination
        StartoverWindowSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: Maximum duration (seconds) of content to retain for startover
            playback. If not specified, startover playback will be disabled for the
            OriginEndpoint.
        Tags:
          $ref: '#/components/schemas/Tags'
        TimeDelaySeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: Amount of delay (seconds) to enforce on the playback of live
            content. If not specified, there will be no time delay in effect for the
            OriginEndpoint.
        Url:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The URL of the packaged OriginEndpoint for consumption.
        Whitelist:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: A list of source IP CIDR blocks that will be allowed to access
            the OriginEndpoint.
      description: An OriginEndpoint resource configuration.
    Origination:
      type: string
      enum:
      - ALLOW
      - DENY
    PlaylistType:
      type: string
      enum:
      - NONE
      - EVENT
      - VOD
    PresetSpeke20Audio:
      type: string
      enum:
      - PRESET-AUDIO-1
      - PRESET-AUDIO-2
      - PRESET-AUDIO-3
      - SHARED
      - UNENCRYPTED
    PresetSpeke20Video:
      type: string
      enum:
      - PRESET-VIDEO-1
      - PRESET-VIDEO-2
      - PRESET-VIDEO-3
      - PRESET-VIDEO-4
      - PRESET-VIDEO-5
      - PRESET-VIDEO-6
      - PRESET-VIDEO-7
      - PRESET-VIDEO-8
      - SHARED
      - UNENCRYPTED
    Profile:
      type: string
      enum:
      - NONE
      - HBBTV_1_5
      - HYBRIDCAST
      - DVB_DASH_2014
    RotateChannelCredentialsRequest:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the channel to update.
      required:
      - Id
    RotateChannelCredentialsResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) assigned to the Channel.
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The date and time the Channel was created.
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A short text description of the Channel.
        EgressAccessLogs:
          $ref: '#/components/schemas/EgressAccessLogs'
        HlsIngest:
          $ref: '#/components/schemas/HlsIngest'
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the Channel.
        IngressAccessLogs:
          $ref: '#/components/schemas/IngressAccessLogs'
        Tags:
          $ref: '#/components/schemas/Tags'
    RotateIngestEndpointCredentialsRequest:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the channel the IngestEndpoint is on.
        IngestEndpointId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The id of the IngestEndpoint whose credentials should be rotated
      required:
      - Id
      - IngestEndpointId
    RotateIngestEndpointCredentialsResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) assigned to the Channel.
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The date and time the Channel was created.
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A short text description of the Channel.
        EgressAccessLogs:
          $ref: '#/components/schemas/EgressAccessLogs'
        HlsIngest:
          $ref: '#/components/schemas/HlsIngest'
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the Channel.
        IngressAccessLogs:
          $ref: '#/components/schemas/IngressAccessLogs'
        Tags:
          $ref: '#/components/schemas/Tags'
    S3Destination:
      type: object
      properties:
        BucketName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of an S3 bucket within which harvested content will
            be exported
        ManifestKey:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The key in the specified S3 bucket where the harvested top-level
            manifest will be placed.
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The IAM role used to write to the specified S3 bucket
      required:
      - BucketName
      - ManifestKey
      - RoleArn
      description: Configuration parameters for where in an S3 bucket to place the
        harvested content
    SegmentTemplateFormat:
      type: string
      enum:
      - NUMBER_WITH_TIMELINE
      - TIME_WITH_TIMELINE
      - NUMBER_WITH_DURATION
    SensitiveString:
      type: string
    ServiceUnavailableException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/__string'
      description: An unexpected error occurred.
    SpekeKeyProvider:
      type: object
      properties:
        CertificateArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: An Amazon Resource Name (ARN) of a Certificate Manager certificate
            that MediaPackage will use for enforcing secure end-to-end data transfer
            with the key provider service.
        EncryptionContractConfiguration:
          $ref: '#/components/schemas/EncryptionContractConfiguration'
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The resource ID to include in key requests.
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: An Amazon Resource Name (ARN) of an IAM role that AWS Elemental
            MediaPackage will assume when accessing the key provider service.
        SystemIds:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: The system IDs to include in key requests.
        Url:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The URL of the external key provider service.
      required:
      - ResourceId
      - RoleArn
      - SystemIds
      - Url
      description: A configuration for accessing an external Secure Packager and Encoder
        Key Exchange (SPEKE) service that will provide encryption keys.
    Status:
      type: string
      enum:
      - IN_PROGRESS
      - SUCCEEDED
      - FAILED
    StreamOrder:
      type: string
      enum:
      - ORIGINAL
      - VIDEO_BITRATE_ASCENDING
      - VIDEO_BITRATE_DESCENDING
    StreamSelection:
      type: object
      properties:
        MaxVideoBitsPerSecond:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The maximum video bitrate (bps) to include in output.
        MinVideoBitsPerSecond:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The minimum video bitrate (bps) to include in output.
        StreamOrder:
          allOf:
          - $ref: '#/components/schemas/StreamOrder'
          description: A directive that determines the order of streams in the output.
      description: A StreamSelection configuration.
    TagResourceRequest:
      type: object
      properties:
        ResourceArn:
          $ref: '#/components/schemas/__string'
        Tags:
          $ref: '#/components/schemas/__mapOf__string'
      required:
      - ResourceArn
      - Tags
    Tags:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/__string'
      description: A collection of tags associated with a resource
    TooManyRequestsException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/__string'
      description: The client has exceeded their resource or throttling limits.
    UnprocessableEntityException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/__string'
      description: The parameters sent in the request are not valid.
    UntagResourceRequest:
      type: object
      properties:
        ResourceArn:
          $ref: '#/components/schemas/__string'
        TagKeys:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: The key(s) of tag to be deleted
      required:
      - ResourceArn
      - TagKeys
    UpdateChannelRequest:
      type: object
      properties:
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A short text description of the Channel.
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the Channel to update.
      required:
      - Id
      description: Configuration parameters used to update the Channel.
    UpdateChannelResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) assigned to the Channel.
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The date and time the Channel was created.
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A short text description of the Channel.
        EgressAccessLogs:
          $ref: '#/components/schemas/EgressAccessLogs'
        HlsIngest:
          $ref: '#/components/schemas/HlsIngest'
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the Channel.
        IngressAccessLogs:
          $ref: '#/components/schemas/IngressAccessLogs'
        Tags:
          $ref: '#/components/schemas/Tags'
    UpdateOriginEndpointRequest:
      type: object
      properties:
        Authorization:
          $ref: '#/components/schemas/Authorization'
        CmafPackage:
          $ref: '#/components/schemas/CmafPackageCreateOrUpdateParameters'
        DashPackage:
          $ref: '#/components/schemas/DashPackage'
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A short text description of the OriginEndpoint.
        HlsPackage:
          $ref: '#/components/schemas/HlsPackage'
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the OriginEndpoint to update.
        ManifestName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A short string that will be appended to the end of the Endpoint
            URL.
        MssPackage:
          $ref: '#/components/schemas/MssPackage'
        Origination:
          allOf:
          - $ref: '#/components/schemas/Origination'
          description: Control whether origination of video is allowed for this OriginEndpoint.
            If set to ALLOW, the OriginEndpoint may by requested, pursuant to any
            other form of access control. If set to DENY, the OriginEndpoint may not
            be requested. This can be helpful for Live to VOD harvesting, or for temporarily
            disabling origination
        StartoverWindowSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: Maximum duration (in seconds) of content to retain for startover
            playback. If not specified, startover playback will be disabled for the
            OriginEndpoint.
        TimeDelaySeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: Amount of delay (in seconds) to enforce on the playback of
            live content. If not specified, there will be no time delay in effect
            for the OriginEndpoint.
        Whitelist:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: A list of source IP CIDR blocks that will be allowed to access
            the OriginEndpoint.
      required:
      - Id
      description: Configuration parameters used to update an existing OriginEndpoint.
    UpdateOriginEndpointResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) assigned to the OriginEndpoint.
        Authorization:
          $ref: '#/components/schemas/Authorization'
        ChannelId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the Channel the OriginEndpoint is associated with.
        CmafPackage:
          $ref: '#/components/schemas/CmafPackage'
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The date and time the OriginEndpoint was created.
        DashPackage:
          $ref: '#/components/schemas/DashPackage'
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A short text description of the OriginEndpoint.
        HlsPackage:
          $ref: '#/components/schemas/HlsPackage'
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the OriginEndpoint.
        ManifestName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A short string appended to the end of the OriginEndpoint URL.
        MssPackage:
          $ref: '#/components/schemas/MssPackage'
        Origination:
          allOf:
          - $ref: '#/components/schemas/Origination'
          description: Control whether origination of video is allowed for this OriginEndpoint.
            If set to ALLOW, the OriginEndpoint may by requested, pursuant to any
            other form of access control. If set to DENY, the OriginEndpoint may not
            be requested. This can be helpful for Live to VOD harvesting, or for temporarily
            disabling origination
        StartoverWindowSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: Maximum duration (seconds) of content to retain for startover
            playback. If not specified, startover playback will be disabled for the
            OriginEndpoint.
        Tags:
          $ref: '#/components/schemas/Tags'
        TimeDelaySeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: Amount of delay (seconds) to enforce on the playback of live
            content. If not specified, there will be no time delay in effect for the
            OriginEndpoint.
        Url:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The URL of the packaged OriginEndpoint for consumption.
        Whitelist:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: A list of source IP CIDR blocks that will be allowed to access
            the OriginEndpoint.
    UtcTiming:
      type: string
      enum:
      - NONE
      - HTTP-HEAD
      - HTTP-ISO
      - HTTP-XSDATE
    __AdTriggersElement:
      type: string
      enum:
      - SPLICE_INSERT
      - BREAK
      - PROVIDER_ADVERTISEMENT
      - DISTRIBUTOR_ADVERTISEMENT
      - PROVIDER_PLACEMENT_OPPORTUNITY
      - DISTRIBUTOR_PLACEMENT_OPPORTUNITY
      - PROVIDER_OVERLAY_PLACEMENT_OPPORTUNITY
      - DISTRIBUTOR_OVERLAY_PLACEMENT_OPPORTUNITY
    __PeriodTriggersElement:
      type: string
      enum:
      - ADS
    __boolean:
      type: boolean
    __integer:
      type: integer
    __listOfChannel:
      type: array
      items:
        $ref: '#/components/schemas/Channel'
    __listOfHarvestJob:
      type: array
      items:
        $ref: '#/components/schemas/HarvestJob'
    __listOfHlsManifest:
      type: array
      items:
        $ref: '#/components/schemas/HlsManifest'
    __listOfHlsManifestCreateOrUpdateParameters:
      type: array
      items:
        $ref: '#/components/schemas/HlsManifestCreateOrUpdateParameters'
    __listOfIngestEndpoint:
      type: array
      items:
        $ref: '#/components/schemas/IngestEndpoint'
    __listOfOriginEndpoint:
      type: array
      items:
        $ref: '#/components/schemas/OriginEndpoint'
    __listOf__PeriodTriggersElement:
      type: array
      items:
        $ref: '#/components/schemas/__PeriodTriggersElement'
    __listOf__string:
      type: array
      items:
        $ref: '#/components/schemas/__string'
    __mapOf__string:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/__string'
    __string:
      type: string
