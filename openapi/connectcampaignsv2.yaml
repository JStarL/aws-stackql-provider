openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: connectcampaignsv2
  x-aws-serviceName: connectcampaignsv2
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-07'
  version: '2024-04-23'
  title: AmazonConnectCampaignServiceV2
  description: |-
    Provide APIs to create and manage Amazon Connect Campaigns.
servers:
- description: The AmazonConnectCampaignServiceV2 regional endpoint
  url: https://connect-campaigns.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths:
  /v2/campaigns:
    put:
      operationId: CreateCampaign
      description: |-
        Creates a campaign for the specified Amazon Connect account. This API is idempotent.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  $ref: '#/components/schemas/CampaignName'
                connectInstanceId:
                  $ref: '#/components/schemas/InstanceId'
                channelSubtypeConfig:
                  $ref: '#/components/schemas/ChannelSubtypeConfig'
                source:
                  $ref: '#/components/schemas/Source'
                connectCampaignFlowArn:
                  $ref: '#/components/schemas/Arn'
                schedule:
                  $ref: '#/components/schemas/Schedule'
                communicationTimeConfig:
                  $ref: '#/components/schemas/CommunicationTimeConfig'
                communicationLimitsOverride:
                  $ref: '#/components/schemas/CommunicationLimitsConfig'
                tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            Request would cause a service quota to be exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /v2/campaigns/{id}:
    delete:
      operationId: DeleteCampaign
      description: |-
        Deletes a campaign from the specified Amazon Connect account.
      parameters:
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CampaignId'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: DescribeCampaign
      description: |-
        Describes the specific campaign.
      parameters:
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CampaignId'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /v2/campaigns/{id}/channel-subtype-config:
    delete:
      operationId: DeleteCampaignChannelSubtypeConfig
      description: |-
        Deletes the channel subtype config of a campaign. This API is idempotent.
      parameters:
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CampaignId'
      - name: channelSubtype
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/ChannelSubtype'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    post:
      operationId: UpdateCampaignChannelSubtypeConfig
      description: |-
        Updates the channel subtype config of a campaign. This API is idempotent.
      parameters:
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CampaignId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                channelSubtypeConfig:
                  $ref: '#/components/schemas/ChannelSubtypeConfig'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /v2/campaigns/{id}/communication-limits:
    delete:
      operationId: DeleteCampaignCommunicationLimits
      description: |-
        Deletes the communication limits config for a campaign. This API is idempotent.
      parameters:
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CampaignId'
      - name: config
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/CommunicationLimitsConfigType'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the campaign.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidCampaignStateException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    post:
      operationId: UpdateCampaignCommunicationLimits
      description: |-
        Updates the communication limits config for a campaign. This API is idempotent.
      parameters:
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CampaignId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                communicationLimitsOverride:
                  $ref: '#/components/schemas/CommunicationLimitsConfig'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the campaign.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidCampaignStateException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /v2/campaigns/{id}/communication-time:
    delete:
      operationId: DeleteCampaignCommunicationTime
      description: |-
        Deletes the communication time config for a campaign. This API is idempotent.
      parameters:
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CampaignId'
      - name: config
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/CommunicationTimeConfigType'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the campaign.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidCampaignStateException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    post:
      operationId: UpdateCampaignCommunicationTime
      description: |-
        Updates the communication time config for a campaign. This API is idempotent.
      parameters:
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CampaignId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                communicationTimeConfig:
                  $ref: '#/components/schemas/CommunicationTimeConfig'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the campaign.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidCampaignStateException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /v2/connect-instance/{connectInstanceId}/config:
    delete:
      operationId: DeleteConnectInstanceConfig
      description: |-
        Deletes a connect instance config from the specified AWS account.
      parameters:
      - name: connectInstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: campaignDeletionPolicy
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/CampaignDeletionPolicy'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidStateException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetConnectInstanceConfig
      description: |-
        Get the specific Connect instance config.
      parameters:
      - name: connectInstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /v2/connect-instance/{connectInstanceId}/integrations/delete:
    post:
      operationId: DeleteConnectInstanceIntegration
      description: |-
        Delete the integration for the specified Amazon Connect instance.
      parameters:
      - name: connectInstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                integrationIdentifier:
                  $ref: '#/components/schemas/IntegrationIdentifier'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /v2/connect-instance/{connectInstanceId}/onboarding:
    delete:
      operationId: DeleteInstanceOnboardingJob
      description: |-
        Delete the Connect Campaigns onboarding job for the specified Amazon Connect instance.
      parameters:
      - name: connectInstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidStateException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetInstanceOnboardingJobStatus
      description: |-
        Get the specific instance onboarding job status.
      parameters:
      - name: connectInstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    put:
      operationId: StartInstanceOnboardingJob
      description: |-
        Onboard the specific Amazon Connect instance to Connect Campaigns.
      parameters:
      - name: connectInstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                encryptionConfig:
                  $ref: '#/components/schemas/EncryptionConfig'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /v2/campaigns/{id}/state:
    get:
      operationId: GetCampaignState
      description: |-
        Get state of a campaign for the specified Amazon Connect account.
      parameters:
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CampaignId'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /v2/campaigns-state:
    post:
      operationId: GetCampaignStateBatch
      description: |-
        Get state of campaigns for the specified Amazon Connect account.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                campaignIds:
                  $ref: '#/components/schemas/CampaignIdList'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /v2/campaigns-summary:
    post:
      operationId: ListCampaigns
      description: |-
        Provides summary information about the campaigns under the specified Amazon Connect account.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                maxResults:
                  $ref: '#/components/schemas/MaxResults'
                nextToken:
                  $ref: '#/components/schemas/NextToken'
                filters:
                  $ref: '#/components/schemas/CampaignFilters'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /v2/connect-instance/{connectInstanceId}/integrations:
    get:
      operationId: ListConnectInstanceIntegrations
      description: |-
        Provides summary information about the integration under the specified Connect instance.
      parameters:
      - name: connectInstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    put:
      operationId: PutConnectInstanceIntegration
      description: |-
        Put or update the integration for the specified Amazon Connect instance.
      parameters:
      - name: connectInstanceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InstanceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                integrationConfig:
                  $ref: '#/components/schemas/IntegrationConfig'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /v2/tags/{arn}:
    get:
      operationId: ListTagsForResource
      description: |-
        List tags for a resource.
      parameters:
      - name: arn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    post:
      operationId: TagResource
      description: |-
        Tag a resource.
      parameters:
      - name: arn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    delete:
      operationId: UntagResource
      description: |-
        Untag a resource.
      parameters:
      - name: arn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      - name: tagKeys
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/TagKeyList'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /v2/campaigns/{id}/pause:
    post:
      operationId: PauseCampaign
      description: |-
        Pauses a campaign for the specified Amazon Connect account.
      parameters:
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CampaignId'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the campaign.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidCampaignStateException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /v2/campaigns/{id}/outbound-requests:
    put:
      operationId: PutOutboundRequestBatch
      description: |-
        Creates outbound requests for the specified campaign Amazon Connect account. This API is idempotent.
      parameters:
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CampaignId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                outboundRequests:
                  $ref: '#/components/schemas/OutboundRequestList'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the campaign.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidCampaignStateException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /v2/campaigns/{id}/profile-outbound-requests:
    put:
      operationId: PutProfileOutboundRequestBatch
      description: |-
        Takes in a list of profile outbound requests to be placed as part of an outbound campaign. This API is idempotent.
      parameters:
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CampaignId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                profileOutboundRequests:
                  $ref: '#/components/schemas/ProfileOutboundRequestList'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the campaign.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidCampaignStateException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /v2/campaigns/{id}/resume:
    post:
      operationId: ResumeCampaign
      description: |-
        Stops a campaign for the specified Amazon Connect account.
      parameters:
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CampaignId'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the campaign.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidCampaignStateException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /v2/campaigns/{id}/start:
    post:
      operationId: StartCampaign
      description: |-
        Starts a campaign for the specified Amazon Connect account.
      parameters:
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CampaignId'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the campaign.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidCampaignStateException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /v2/campaigns/{id}/stop:
    post:
      operationId: StopCampaign
      description: |-
        Stops a campaign for the specified Amazon Connect account.
      parameters:
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CampaignId'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the campaign.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidCampaignStateException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /v2/campaigns/{id}/flow:
    post:
      operationId: UpdateCampaignFlowAssociation
      description: |-
        Updates the campaign flow associated with a campaign. This API is idempotent.
      parameters:
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CampaignId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                connectCampaignFlowArn:
                  $ref: '#/components/schemas/Arn'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the campaign.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidCampaignStateException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /v2/campaigns/{id}/name:
    post:
      operationId: UpdateCampaignName
      description: |-
        Updates the name of a campaign. This API is idempotent.
      parameters:
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CampaignId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  $ref: '#/components/schemas/CampaignName'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /v2/campaigns/{id}/schedule:
    post:
      operationId: UpdateCampaignSchedule
      description: |-
        Updates the schedule for a campaign. This API is idempotent.
      parameters:
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CampaignId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                schedule:
                  $ref: '#/components/schemas/Schedule'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the campaign.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidCampaignStateException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /v2/campaigns/{id}/source:
    post:
      operationId: UpdateCampaignSource
      description: |-
        Updates the campaign source with a campaign. This API is idempotent.
      parameters:
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CampaignId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                source:
                  $ref: '#/components/schemas/Source'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the campaign.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidCampaignStateException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
components:
  schemas:
    AccessDeniedException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
        xAmzErrorType:
          $ref: '#/components/schemas/XAmazonErrorType'
      required:
      - message
      description: You do not have sufficient access to perform this action.
    AgentlessConfig:
      type: object
      properties: {}
      description: Agentless config
    AnswerMachineDetectionConfig:
      type: object
      properties:
        enableAnswerMachineDetection:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Enable or disable answering machine detection
        awaitAnswerMachinePrompt:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Enable or disable await answer machine prompt
      required:
      - enableAnswerMachineDetection
      description: Answering Machine Detection config
    Arn:
      type: string
      pattern: ^arn:[a-zA-Z0-9-]+:[a-zA-Z0-9-]+:[a-z]{2}-[a-z]+-\d{1,2}:[a-zA-Z0-9-]+:[^:]+(?:/[^:]+)*(?:/[^:]+)?(?:\:[^:]+)?$
      minLength: 20
      maxLength: 500
    AttributeName:
      type: string
      pattern: ^[a-zA-Z0-9\-_]+$
      minLength: 0
      maxLength: 32767
    AttributeValue:
      type: string
      pattern: ^.*$
      minLength: 0
      maxLength: 32767
    Attributes:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/AttributeValue'
      description: A custom key-value pair using an attribute map. The attributes
        are standard Amazon Connect attributes, and can be accessed in contact flows
        just like any other contact attributes.
    BandwidthAllocation:
      type: number
      format: double
      description: The bandwidth allocation of a queue resource.
      minimum: 0
      maximum: 1
    Campaign:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/CampaignId'
        arn:
          $ref: '#/components/schemas/CampaignArn'
        name:
          $ref: '#/components/schemas/CampaignName'
        connectInstanceId:
          $ref: '#/components/schemas/InstanceId'
        channelSubtypeConfig:
          $ref: '#/components/schemas/ChannelSubtypeConfig'
        source:
          $ref: '#/components/schemas/Source'
        connectCampaignFlowArn:
          $ref: '#/components/schemas/Arn'
        schedule:
          $ref: '#/components/schemas/Schedule'
        communicationTimeConfig:
          $ref: '#/components/schemas/CommunicationTimeConfig'
        communicationLimitsOverride:
          $ref: '#/components/schemas/CommunicationLimitsConfig'
        tags:
          $ref: '#/components/schemas/TagMap'
      required:
      - id
      - arn
      - name
      - connectInstanceId
      - channelSubtypeConfig
      description: An Amazon Connect campaign.
    CampaignArn:
      type: string
      minLength: 20
      maxLength: 500
    CampaignDeletionPolicy:
      type: string
      enum:
      - RETAIN_ALL
      - DELETE_ALL
    CampaignFilters:
      type: object
      properties:
        instanceIdFilter:
          $ref: '#/components/schemas/InstanceIdFilter'
      description: Filter model by type
    CampaignId:
      type: string
      pattern: ^[a-zA-Z0-9\-:/]*$
      minLength: 0
      maxLength: 256
    CampaignIdList:
      type: array
      items:
        $ref: '#/components/schemas/CampaignId'
      description: List of CampaignId
    CampaignName:
      type: string
      minLength: 1
      maxLength: 127
    CampaignState:
      type: string
      enum:
      - Initialized
      - Running
      - Paused
      - Stopped
      - Failed
      - Completed
    CampaignSummary:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/CampaignId'
        arn:
          $ref: '#/components/schemas/CampaignArn'
        name:
          $ref: '#/components/schemas/CampaignName'
        connectInstanceId:
          $ref: '#/components/schemas/InstanceId'
        channelSubtypes:
          $ref: '#/components/schemas/ChannelSubtypeList'
        schedule:
          $ref: '#/components/schemas/Schedule'
        connectCampaignFlowArn:
          $ref: '#/components/schemas/Arn'
      required:
      - id
      - arn
      - name
      - connectInstanceId
      - channelSubtypes
      description: An Amazon Connect campaign summary.
    CampaignSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/CampaignSummary'
      description: A list of Amazon Connect campaigns.
    Capacity:
      type: number
      format: double
      description: Allocates outbound capacity for the specific channel subtype of
        this campaign between multiple active campaigns
      minimum: 0.01
      maximum: 1
    ChannelSubtype:
      type: string
      enum:
      - TELEPHONY
      - SMS
      - EMAIL
    ChannelSubtypeConfig:
      type: object
      properties:
        telephony:
          $ref: '#/components/schemas/TelephonyChannelSubtypeConfig'
        sms:
          $ref: '#/components/schemas/SmsChannelSubtypeConfig'
        email:
          $ref: '#/components/schemas/EmailChannelSubtypeConfig'
      description: Campaign Channel Subtype config
    ChannelSubtypeList:
      type: array
      items:
        $ref: '#/components/schemas/ChannelSubtype'
      description: Channel subtype list
    ChannelSubtypeParameters:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/TelephonyChannelSubtypeParameters'
      - allOf:
        - $ref: '#/components/schemas/SmsChannelSubtypeParameters'
      - allOf:
        - $ref: '#/components/schemas/EmailChannelSubtypeParameters'
      description: |-
        ChannelSubtypeParameters for an outbound request
    ClientToken:
      type: string
      pattern: ^[a-zA-Z0-9_\-.]*$
      minLength: 0
      maxLength: 200
    CommunicationLimit:
      type: object
      properties:
        maxCountPerRecipient:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: Maximum number of contacts allowed for a given target within
            the given frequency.
        frequency:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of days to consider with regards to this limit.
        unit:
          $ref: '#/components/schemas/CommunicationLimitTimeUnit'
      required:
      - maxCountPerRecipient
      - frequency
      - unit
      description: Communication Limit
    CommunicationLimitList:
      type: array
      items:
        $ref: '#/components/schemas/CommunicationLimit'
      description: List of communication limit
    CommunicationLimitTimeUnit:
      type: string
      enum:
      - DAY
    CommunicationLimits:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/CommunicationLimitList'
      description: |-
        Communication limits
    CommunicationLimitsConfig:
      type: object
      properties:
        allChannelSubtypes:
          $ref: '#/components/schemas/CommunicationLimits'
      description: Communication limits config
    CommunicationLimitsConfigType:
      type: string
      enum:
      - ALL_CHANNEL_SUBTYPES
    CommunicationTimeConfig:
      type: object
      properties:
        localTimeZoneConfig:
          $ref: '#/components/schemas/LocalTimeZoneConfig'
        telephony:
          $ref: '#/components/schemas/TimeWindow'
        sms:
          $ref: '#/components/schemas/TimeWindow'
        email:
          $ref: '#/components/schemas/TimeWindow'
      required:
      - localTimeZoneConfig
      description: Campaign communication time config
    CommunicationTimeConfigType:
      type: string
      enum:
      - TELEPHONY
      - SMS
      - EMAIL
    ConflictException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
        xAmzErrorType:
          $ref: '#/components/schemas/XAmazonErrorType'
      required:
      - message
      description: The request could not be processed because of conflict in the current
        state of the resource.
    ContactFlowId:
      type: string
      maxLength: 500
    CreateCampaignRequest:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/CampaignName'
        connectInstanceId:
          $ref: '#/components/schemas/InstanceId'
        channelSubtypeConfig:
          $ref: '#/components/schemas/ChannelSubtypeConfig'
        source:
          $ref: '#/components/schemas/Source'
        connectCampaignFlowArn:
          $ref: '#/components/schemas/Arn'
        schedule:
          $ref: '#/components/schemas/Schedule'
        communicationTimeConfig:
          $ref: '#/components/schemas/CommunicationTimeConfig'
        communicationLimitsOverride:
          $ref: '#/components/schemas/CommunicationLimitsConfig'
        tags:
          $ref: '#/components/schemas/TagMap'
      required:
      - name
      - connectInstanceId
      - channelSubtypeConfig
      description: The request for CreateCampaign API.
    CreateCampaignResponse:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/CampaignId'
        arn:
          $ref: '#/components/schemas/CampaignArn'
        tags:
          $ref: '#/components/schemas/TagMap'
      description: The response for Create Campaign API
    CustomerProfilesIntegrationConfig:
      type: object
      properties:
        domainArn:
          $ref: '#/components/schemas/Arn'
        objectTypeNames:
          $ref: '#/components/schemas/ObjectTypeNamesMap'
      required:
      - domainArn
      - objectTypeNames
      description: Customer Profiles integration config
    CustomerProfilesIntegrationIdentifier:
      type: object
      properties:
        domainArn:
          $ref: '#/components/schemas/Arn'
      required:
      - domainArn
      description: Customer Profiles integration identifier
    CustomerProfilesIntegrationSummary:
      type: object
      properties:
        domainArn:
          $ref: '#/components/schemas/Arn'
        objectTypeNames:
          $ref: '#/components/schemas/ObjectTypeNamesMap'
      required:
      - domainArn
      - objectTypeNames
      description: Customer Profiles integration summary
    DailyHours:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/TimeRangeList'
      description: Daily Hours map
    DayOfWeek:
      type: string
      enum:
      - MONDAY
      - TUESDAY
      - WEDNESDAY
      - THURSDAY
      - FRIDAY
      - SATURDAY
      - SUNDAY
    DeleteCampaignChannelSubtypeConfigRequest:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/CampaignId'
        channelSubtype:
          $ref: '#/components/schemas/ChannelSubtype'
      required:
      - id
      - channelSubtype
      description: The request for DeleteCampaignChannelSubtypeConfig API.
    DeleteCampaignCommunicationLimitsRequest:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/CampaignId'
        config:
          $ref: '#/components/schemas/CommunicationLimitsConfigType'
      required:
      - id
      - config
      description: The request for DeleteCampaignCommunicationLimits API.
    DeleteCampaignCommunicationTimeRequest:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/CampaignId'
        config:
          $ref: '#/components/schemas/CommunicationTimeConfigType'
      required:
      - id
      - config
      description: The request for DeleteCampaignCommunicationTime API.
    DeleteCampaignRequest:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/CampaignId'
      required:
      - id
      description: The request for DeleteCampaign API.
    DeleteConnectInstanceConfigRequest:
      type: object
      properties:
        connectInstanceId:
          $ref: '#/components/schemas/InstanceId'
        campaignDeletionPolicy:
          $ref: '#/components/schemas/CampaignDeletionPolicy'
      required:
      - connectInstanceId
      description: The request for DeleteConnectInstanceConfig API.
    DeleteConnectInstanceIntegrationRequest:
      type: object
      properties:
        connectInstanceId:
          $ref: '#/components/schemas/InstanceId'
        integrationIdentifier:
          $ref: '#/components/schemas/IntegrationIdentifier'
      required:
      - connectInstanceId
      - integrationIdentifier
      description: The request for DeleteConnectInstanceIntegration API.
    DeleteInstanceOnboardingJobRequest:
      type: object
      properties:
        connectInstanceId:
          $ref: '#/components/schemas/InstanceId'
      required:
      - connectInstanceId
      description: The request for DeleteInstanceOnboardingJob API.
    DescribeCampaignRequest:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/CampaignId'
      required:
      - id
      description: The request for DescribeCampaign API.
    DescribeCampaignResponse:
      type: object
      properties:
        campaign:
          $ref: '#/components/schemas/Campaign'
      description: The response for DescribeCampaign API.
    DestinationPhoneNumber:
      type: string
      pattern: ^[\d\-+]*$
      minLength: 0
      maxLength: 20
    DialRequestId:
      type: string
      pattern: ^[a-zA-Z0-9_\-.]*$
      minLength: 0
      maxLength: 256
    EmailAddress:
      type: string
      pattern: '[^\s@]+@[^\s@]+\.[^\s@]+'
      minLength: 1
      maxLength: 255
    EmailChannelSubtypeConfig:
      type: object
      properties:
        capacity:
          $ref: '#/components/schemas/Capacity'
        outboundMode:
          $ref: '#/components/schemas/EmailOutboundMode'
        defaultOutboundConfig:
          $ref: '#/components/schemas/EmailOutboundConfig'
      required:
      - outboundMode
      - defaultOutboundConfig
      description: Email Channel Subtype config
    EmailChannelSubtypeParameters:
      type: object
      properties:
        destinationEmailAddress:
          $ref: '#/components/schemas/EmailAddress'
        connectSourceEmailAddress:
          $ref: '#/components/schemas/EmailAddress'
        templateArn:
          $ref: '#/components/schemas/Arn'
        templateParameters:
          $ref: '#/components/schemas/Attributes'
      required:
      - destinationEmailAddress
      - templateParameters
      description: Parameters for the Email Channel Subtype
    EmailDisplayName:
      type: string
      minLength: 0
      maxLength: 256
    EmailOutboundConfig:
      type: object
      properties:
        connectSourceEmailAddress:
          $ref: '#/components/schemas/EmailAddress'
        sourceEmailAddressDisplayName:
          $ref: '#/components/schemas/EmailDisplayName'
        wisdomTemplateArn:
          $ref: '#/components/schemas/Arn'
      required:
      - connectSourceEmailAddress
      - wisdomTemplateArn
      description: Default Email Outbound config
    EmailOutboundMode:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/AgentlessConfig'
      description: |-
        Email Outbound Mode
    Enabled:
      type: boolean
      default: false
      description: Boolean to indicate if custom encryption has been enabled.
    EncryptionConfig:
      type: object
      properties:
        enabled:
          $ref: '#/components/schemas/Enabled'
        encryptionType:
          $ref: '#/components/schemas/EncryptionType'
        keyArn:
          $ref: '#/components/schemas/EncryptionKey'
      required:
      - enabled
      description: Encryption config for Connect Instance. Note that sensitive data
        will always be encrypted. If disabled, service will perform encryption with
        its own key. If enabled, a KMS key id needs to be provided and KMS charges
        will apply. KMS is only type supported
    EncryptionKey:
      type: string
      maxLength: 500
    EncryptionType:
      type: string
      enum:
      - KMS
    EventTrigger:
      type: object
      properties:
        customerProfilesDomainArn:
          $ref: '#/components/schemas/Arn'
      description: Event trigger of the campaign
    EventType:
      type: string
      enum:
      - Campaign-Email
      - Campaign-SMS
      - Campaign-Telephony
      - Campaign-Orchestration
    FailedCampaignStateResponse:
      type: object
      properties:
        campaignId:
          $ref: '#/components/schemas/CampaignId'
        failureCode:
          $ref: '#/components/schemas/GetCampaignStateBatchFailureCode'
      description: Failed response of campaign state
    FailedCampaignStateResponseList:
      type: array
      items:
        $ref: '#/components/schemas/FailedCampaignStateResponse'
      description: List of failed requests of campaign state
    FailedProfileOutboundRequest:
      type: object
      properties:
        clientToken:
          $ref: '#/components/schemas/ClientToken'
        id:
          $ref: '#/components/schemas/ProfileOutboundRequestId'
        failureCode:
          $ref: '#/components/schemas/ProfileOutboundRequestFailureCode'
      description: Failure details for a profile outbound request
    FailedProfileOutboundRequestList:
      type: array
      items:
        $ref: '#/components/schemas/FailedProfileOutboundRequest'
      description: List of failed profile outbound requests
    FailedRequest:
      type: object
      properties:
        clientToken:
          $ref: '#/components/schemas/ClientToken'
        id:
          $ref: '#/components/schemas/DialRequestId'
        failureCode:
          $ref: '#/components/schemas/FailureCode'
      description: A failed request identified by the unique client token.
    FailedRequestList:
      type: array
      items:
        $ref: '#/components/schemas/FailedRequest'
      description: A list of failed requests.
    FailureCode:
      type: string
      enum:
      - InvalidInput
      - RequestThrottled
      - UnknownError
      - BufferLimitExceeded
    GetCampaignStateBatchFailureCode:
      type: string
      enum:
      - ResourceNotFound
      - UnknownError
    GetCampaignStateBatchRequest:
      type: object
      properties:
        campaignIds:
          $ref: '#/components/schemas/CampaignIdList'
      required:
      - campaignIds
      description: The request for GetCampaignStateBatch API.
    GetCampaignStateBatchResponse:
      type: object
      properties:
        successfulRequests:
          $ref: '#/components/schemas/SuccessfulCampaignStateResponseList'
        failedRequests:
          $ref: '#/components/schemas/FailedCampaignStateResponseList'
      description: The response for GetCampaignStateBatch API.
    GetCampaignStateRequest:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/CampaignId'
      required:
      - id
      description: The request for GetCampaignState API.
    GetCampaignStateResponse:
      type: object
      properties:
        state:
          $ref: '#/components/schemas/CampaignState'
      description: The response for GetCampaignState API.
    GetConnectInstanceConfigRequest:
      type: object
      properties:
        connectInstanceId:
          $ref: '#/components/schemas/InstanceId'
      required:
      - connectInstanceId
      description: The request for GetConnectInstanceConfig API.
    GetConnectInstanceConfigResponse:
      type: object
      properties:
        connectInstanceConfig:
          $ref: '#/components/schemas/InstanceConfig'
      description: The response for GetConnectInstanceConfig API.
    GetInstanceOnboardingJobStatusRequest:
      type: object
      properties:
        connectInstanceId:
          $ref: '#/components/schemas/InstanceId'
      required:
      - connectInstanceId
      description: The request for GetInstanceOnboardingJobStatus API.
    GetInstanceOnboardingJobStatusResponse:
      type: object
      properties:
        connectInstanceOnboardingJobStatus:
          $ref: '#/components/schemas/InstanceOnboardingJobStatus'
      description: The response for GetInstanceOnboardingJobStatus API.
    InstanceConfig:
      type: object
      properties:
        connectInstanceId:
          $ref: '#/components/schemas/InstanceId'
        serviceLinkedRoleArn:
          $ref: '#/components/schemas/ServiceLinkedRoleArn'
        encryptionConfig:
          $ref: '#/components/schemas/EncryptionConfig'
      required:
      - connectInstanceId
      - serviceLinkedRoleArn
      - encryptionConfig
      description: Instance config object
    InstanceId:
      type: string
      pattern: ^[a-zA-Z0-9_\-.]*$
      minLength: 0
      maxLength: 256
    InstanceIdFilter:
      type: object
      properties:
        value:
          $ref: '#/components/schemas/InstanceId'
        operator:
          $ref: '#/components/schemas/InstanceIdFilterOperator'
      required:
      - value
      - operator
      description: Connect instance identifier filter
    InstanceIdFilterOperator:
      type: string
      enum:
      - Eq
    InstanceOnboardingJobFailureCode:
      type: string
      enum:
      - EVENT_BRIDGE_ACCESS_DENIED
      - EVENT_BRIDGE_MANAGED_RULE_LIMIT_EXCEEDED
      - IAM_ACCESS_DENIED
      - KMS_ACCESS_DENIED
      - KMS_KEY_NOT_FOUND
      - INTERNAL_FAILURE
    InstanceOnboardingJobStatus:
      type: object
      properties:
        connectInstanceId:
          $ref: '#/components/schemas/InstanceId'
        status:
          $ref: '#/components/schemas/InstanceOnboardingJobStatusCode'
        failureCode:
          $ref: '#/components/schemas/InstanceOnboardingJobFailureCode'
      required:
      - connectInstanceId
      - status
      description: Instance onboarding job status object
    InstanceOnboardingJobStatusCode:
      type: string
      enum:
      - IN_PROGRESS
      - SUCCEEDED
      - FAILED
    IntegrationConfig:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/CustomerProfilesIntegrationConfig'
      - allOf:
        - $ref: '#/components/schemas/QConnectIntegrationConfig'
      description: |-
        Integration config for Connect Instance
    IntegrationIdentifier:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/CustomerProfilesIntegrationIdentifier'
      - allOf:
        - $ref: '#/components/schemas/QConnectIntegrationIdentifier'
      description: |-
        Integration identifier for Connect instance
    IntegrationSummary:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/CustomerProfilesIntegrationSummary'
      - allOf:
        - $ref: '#/components/schemas/QConnectIntegrationSummary'
      description: |-
        Integration summary for Connect instance.
    IntegrationSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/IntegrationSummary'
      description: A list of Amazon Connect Instance Integrations.
    InternalServerException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
        xAmzErrorType:
          $ref: '#/components/schemas/XAmazonErrorType'
      required:
      - message
      description: Request processing failed because of an error or failure with the
        service.
    InvalidCampaignStateException:
      type: object
      properties:
        state:
          $ref: '#/components/schemas/CampaignState'
        message:
          $ref: '#/components/schemas/String'
        xAmzErrorType:
          $ref: '#/components/schemas/XAmazonErrorType'
      required:
      - state
      - message
      description: The request could not be processed because of conflict in the current
        state of the campaign.
    InvalidStateException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
        xAmzErrorType:
          $ref: '#/components/schemas/XAmazonErrorType'
      required:
      - message
      description: The request could not be processed because of conflict in the current
        state.
    Iso8601Date:
      type: string
      pattern: ^\d{4}-\d{2}-\d{2}$
    Iso8601Duration:
      type: string
      pattern: ^P(?:([-+]?[0-9]+)D)?(T(?:([-+]?[0-9]+)H)?(?:([-+]?[0-9]+)M)?(?:([-+]?[0-9]+)(?:[.,]([0-9]{0,9}))?S)?)?$
      minLength: 0
      maxLength: 50
    Iso8601Time:
      type: string
      pattern: ^T\d{2}:\d{2}$
    ListCampaignsRequest:
      type: object
      properties:
        maxResults:
          $ref: '#/components/schemas/MaxResults'
        nextToken:
          $ref: '#/components/schemas/NextToken'
        filters:
          $ref: '#/components/schemas/CampaignFilters'
      description: The request for ListCampaigns API.
    ListCampaignsResponse:
      type: object
      properties:
        nextToken:
          $ref: '#/components/schemas/NextToken'
        campaignSummaryList:
          $ref: '#/components/schemas/CampaignSummaryList'
      description: The response for ListCampaigns API.
    ListConnectInstanceIntegrationsRequest:
      type: object
      properties:
        connectInstanceId:
          $ref: '#/components/schemas/InstanceId'
        maxResults:
          $ref: '#/components/schemas/MaxResults'
        nextToken:
          $ref: '#/components/schemas/NextToken'
      required:
      - connectInstanceId
      description: The request for ListConnectInstanceIntegrations API.
    ListConnectInstanceIntegrationsResponse:
      type: object
      properties:
        nextToken:
          $ref: '#/components/schemas/NextToken'
        integrationSummaryList:
          $ref: '#/components/schemas/IntegrationSummaryList'
      description: The response for ListConnectInstanceIntegrations API.
    ListTagsForResourceRequest:
      type: object
      properties:
        arn:
          $ref: '#/components/schemas/Arn'
      required:
      - arn
      description: The request for ListTagsForResource API.
    ListTagsForResourceResponse:
      type: object
      properties:
        tags:
          $ref: '#/components/schemas/TagMap'
      description: The request for ListTagsForResource API.
    LocalTimeZoneConfig:
      type: object
      properties:
        defaultTimeZone:
          $ref: '#/components/schemas/TimeZone'
        localTimeZoneDetection:
          $ref: '#/components/schemas/LocalTimeZoneDetection'
      description: Local time zone config
    LocalTimeZoneDetection:
      type: array
      items:
        $ref: '#/components/schemas/LocalTimeZoneDetectionType'
      description: Local TimeZone Detection method list
    LocalTimeZoneDetectionType:
      type: string
      enum:
      - ZIP_CODE
      - AREA_CODE
    MaxResults:
      type: integer
      minimum: 1
      maximum: 50
      description: The maximum number of results to return per page.
    NextToken:
      type: string
      maxLength: 1000
    ObjectTypeName:
      type: string
      minLength: 1
      maxLength: 255
    ObjectTypeNamesMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/ObjectTypeName'
      description: Object type names map.
    OpenHours:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/DailyHours'
      description: |-
        Open Hours config
    OutboundRequest:
      type: object
      properties:
        clientToken:
          $ref: '#/components/schemas/ClientToken'
        expirationTime:
          $ref: '#/components/schemas/TimeStamp'
        channelSubtypeParameters:
          $ref: '#/components/schemas/ChannelSubtypeParameters'
      required:
      - clientToken
      - expirationTime
      - channelSubtypeParameters
      description: An outbound request for a campaign.
    OutboundRequestList:
      type: array
      items:
        $ref: '#/components/schemas/OutboundRequest'
      description: A list of outbound requests.
    PauseCampaignRequest:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/CampaignId'
      required:
      - id
      description: The request for PauseCampaign API.
    PredictiveConfig:
      type: object
      properties:
        bandwidthAllocation:
          $ref: '#/components/schemas/BandwidthAllocation'
      required:
      - bandwidthAllocation
      description: Predictive config
    ProfileId:
      type: string
      pattern: ^[a-f0-9]{32}$
    ProfileOutboundRequest:
      type: object
      properties:
        clientToken:
          $ref: '#/components/schemas/ClientToken'
        profileId:
          $ref: '#/components/schemas/ProfileId'
        expirationTime:
          $ref: '#/components/schemas/TimeStamp'
      required:
      - clientToken
      - profileId
      description: Information about a profile outbound request
    ProfileOutboundRequestFailureCode:
      type: string
      enum:
      - UnknownError
      - ResourceNotFound
      - Conflict
      - RequestThrottled
      - InvalidInput
    ProfileOutboundRequestId:
      type: string
      pattern: ^[a-zA-Z0-9_\-.]*$
      minLength: 0
      maxLength: 256
    ProfileOutboundRequestList:
      type: array
      items:
        $ref: '#/components/schemas/ProfileOutboundRequest'
      description: List of profile outbound requests
    ProgressiveConfig:
      type: object
      properties:
        bandwidthAllocation:
          $ref: '#/components/schemas/BandwidthAllocation'
      required:
      - bandwidthAllocation
      description: Progressive config
    PutConnectInstanceIntegrationRequest:
      type: object
      properties:
        connectInstanceId:
          $ref: '#/components/schemas/InstanceId'
        integrationConfig:
          $ref: '#/components/schemas/IntegrationConfig'
      required:
      - connectInstanceId
      - integrationConfig
      description: The request for PutConnectInstanceIntegration API.
    PutOutboundRequestBatchRequest:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/CampaignId'
        outboundRequests:
          $ref: '#/components/schemas/OutboundRequestList'
      required:
      - id
      - outboundRequests
      description: The request for PutOutboundRequestBatch API.
    PutOutboundRequestBatchResponse:
      type: object
      properties:
        successfulRequests:
          $ref: '#/components/schemas/SuccessfulRequestList'
        failedRequests:
          $ref: '#/components/schemas/FailedRequestList'
      description: The response for PutOutboundRequestBatch API.
    PutProfileOutboundRequestBatchRequest:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/CampaignId'
        profileOutboundRequests:
          $ref: '#/components/schemas/ProfileOutboundRequestList'
      required:
      - id
      - profileOutboundRequests
      description: The request for PutProfileOutboundRequestBatch API
    PutProfileOutboundRequestBatchResponse:
      type: object
      properties:
        successfulRequests:
          $ref: '#/components/schemas/SuccessfulProfileOutboundRequestList'
        failedRequests:
          $ref: '#/components/schemas/FailedProfileOutboundRequestList'
      description: The response for PutProfileOutboundRequestBatch API
    QConnectIntegrationConfig:
      type: object
      properties:
        knowledgeBaseArn:
          $ref: '#/components/schemas/Arn'
      required:
      - knowledgeBaseArn
      description: Q Connect integration config
    QConnectIntegrationIdentifier:
      type: object
      properties:
        knowledgeBaseArn:
          $ref: '#/components/schemas/Arn'
      required:
      - knowledgeBaseArn
      description: Q Connect integration identifier
    QConnectIntegrationSummary:
      type: object
      properties:
        knowledgeBaseArn:
          $ref: '#/components/schemas/Arn'
      required:
      - knowledgeBaseArn
      description: Q Connect integration summary
    QueueId:
      type: string
      maxLength: 500
    ResourceNotFoundException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
        xAmzErrorType:
          $ref: '#/components/schemas/XAmazonErrorType'
      required:
      - message
      description: The specified resource was not found.
    RestrictedPeriod:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/RestrictedPeriodName'
        startDate:
          $ref: '#/components/schemas/Iso8601Date'
        endDate:
          $ref: '#/components/schemas/Iso8601Date'
      required:
      - startDate
      - endDate
      description: Restricted period
    RestrictedPeriodList:
      type: array
      items:
        $ref: '#/components/schemas/RestrictedPeriod'
      description: List of restricted period
    RestrictedPeriodName:
      type: string
      minLength: 1
      maxLength: 127
    RestrictedPeriods:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/RestrictedPeriodList'
      description: |-
        Restricted period config
    ResumeCampaignRequest:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/CampaignId'
      required:
      - id
      description: The request for ResumeCampaign API.
    Schedule:
      type: object
      properties:
        startTime:
          $ref: '#/components/schemas/TimeStamp'
        endTime:
          $ref: '#/components/schemas/TimeStamp'
        refreshFrequency:
          $ref: '#/components/schemas/Iso8601Duration'
      required:
      - startTime
      - endTime
      description: Campaign schedule
    ServiceLinkedRoleArn:
      type: string
      maxLength: 256
    ServiceQuotaExceededException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
        xAmzErrorType:
          $ref: '#/components/schemas/XAmazonErrorType'
      required:
      - message
      description: Request would cause a service quota to be exceeded.
    SmsChannelSubtypeConfig:
      type: object
      properties:
        capacity:
          $ref: '#/components/schemas/Capacity'
        outboundMode:
          $ref: '#/components/schemas/SmsOutboundMode'
        defaultOutboundConfig:
          $ref: '#/components/schemas/SmsOutboundConfig'
      required:
      - outboundMode
      - defaultOutboundConfig
      description: SMS Channel Subtype config
    SmsChannelSubtypeParameters:
      type: object
      properties:
        destinationPhoneNumber:
          $ref: '#/components/schemas/DestinationPhoneNumber'
        connectSourcePhoneNumberArn:
          $ref: '#/components/schemas/Arn'
        templateArn:
          $ref: '#/components/schemas/Arn'
        templateParameters:
          $ref: '#/components/schemas/Attributes'
      required:
      - destinationPhoneNumber
      - templateParameters
      description: Parameters for the SMS Channel Subtype
    SmsOutboundConfig:
      type: object
      properties:
        connectSourcePhoneNumberArn:
          $ref: '#/components/schemas/Arn'
        wisdomTemplateArn:
          $ref: '#/components/schemas/Arn'
      required:
      - connectSourcePhoneNumberArn
      - wisdomTemplateArn
      description: Default SMS Outbound config
    SmsOutboundMode:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/AgentlessConfig'
      description: |-
        SMS Outbound Mode
    Source:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/Arn'
      - allOf:
        - $ref: '#/components/schemas/EventTrigger'
      description: |-
        Source of the campaign
    SourcePhoneNumber:
      type: string
      maxLength: 100
    StartCampaignRequest:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/CampaignId'
      required:
      - id
      description: The request for StartCampaign API.
    StartInstanceOnboardingJobRequest:
      type: object
      properties:
        connectInstanceId:
          $ref: '#/components/schemas/InstanceId'
        encryptionConfig:
          $ref: '#/components/schemas/EncryptionConfig'
      required:
      - connectInstanceId
      - encryptionConfig
      description: The request for StartInstanceOnboardingJob API.
    StartInstanceOnboardingJobResponse:
      type: object
      properties:
        connectInstanceOnboardingJobStatus:
          $ref: '#/components/schemas/InstanceOnboardingJobStatus'
      description: The response for StartInstanceOnboardingJob API.
    StopCampaignRequest:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/CampaignId'
      required:
      - id
      description: The request for StopCampaign API.
    SuccessfulCampaignStateResponse:
      type: object
      properties:
        campaignId:
          $ref: '#/components/schemas/CampaignId'
        state:
          $ref: '#/components/schemas/CampaignState'
      description: Successful response of campaign state
    SuccessfulCampaignStateResponseList:
      type: array
      items:
        $ref: '#/components/schemas/SuccessfulCampaignStateResponse'
      description: List of successful response of campaign state
    SuccessfulProfileOutboundRequest:
      type: object
      properties:
        clientToken:
          $ref: '#/components/schemas/ClientToken'
        id:
          $ref: '#/components/schemas/ProfileOutboundRequestId'
      description: Success details for a profile outbound request
    SuccessfulProfileOutboundRequestList:
      type: array
      items:
        $ref: '#/components/schemas/SuccessfulProfileOutboundRequest'
      description: List of successful profile outbound requests
    SuccessfulRequest:
      type: object
      properties:
        clientToken:
          $ref: '#/components/schemas/ClientToken'
        id:
          $ref: '#/components/schemas/DialRequestId'
      description: A successful request identified by the unique client token.
    SuccessfulRequestList:
      type: array
      items:
        $ref: '#/components/schemas/SuccessfulRequest'
      description: A list of successful requests identified by the unique client token.
    TagKey:
      type: string
      pattern: ^(?!aws:)[a-zA-Z+-=._:/]+$
      minLength: 1
      maxLength: 128
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
      description: List of tag keys.
    TagMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
      description: Tag map with key and value.
    TagResourceRequest:
      type: object
      properties:
        arn:
          $ref: '#/components/schemas/Arn'
        tags:
          $ref: '#/components/schemas/TagMap'
      required:
      - arn
      - tags
      description: The request for TagResource API.
    TagValue:
      type: string
      minLength: 0
      maxLength: 256
    TelephonyChannelSubtypeConfig:
      type: object
      properties:
        capacity:
          $ref: '#/components/schemas/Capacity'
        connectQueueId:
          $ref: '#/components/schemas/QueueId'
        outboundMode:
          $ref: '#/components/schemas/TelephonyOutboundMode'
        defaultOutboundConfig:
          $ref: '#/components/schemas/TelephonyOutboundConfig'
      required:
      - outboundMode
      - defaultOutboundConfig
      description: Telephony Channel Subtype config
    TelephonyChannelSubtypeParameters:
      type: object
      properties:
        destinationPhoneNumber:
          $ref: '#/components/schemas/DestinationPhoneNumber'
        attributes:
          $ref: '#/components/schemas/Attributes'
        connectSourcePhoneNumber:
          $ref: '#/components/schemas/SourcePhoneNumber'
        answerMachineDetectionConfig:
          $ref: '#/components/schemas/AnswerMachineDetectionConfig'
      required:
      - destinationPhoneNumber
      - attributes
      description: Parameters for the Telephony Channel Subtype
    TelephonyOutboundConfig:
      type: object
      properties:
        connectContactFlowId:
          $ref: '#/components/schemas/ContactFlowId'
        connectSourcePhoneNumber:
          $ref: '#/components/schemas/SourcePhoneNumber'
        answerMachineDetectionConfig:
          $ref: '#/components/schemas/AnswerMachineDetectionConfig'
      required:
      - connectContactFlowId
      description: Default Telephony Outbound config
    TelephonyOutboundMode:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/ProgressiveConfig'
      - allOf:
        - $ref: '#/components/schemas/PredictiveConfig'
      - allOf:
        - $ref: '#/components/schemas/AgentlessConfig'
      description: |-
        Telephony Outbound Mode
    ThrottlingException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
        xAmzErrorType:
          $ref: '#/components/schemas/XAmazonErrorType'
      required:
      - message
      description: The request was denied due to request throttling.
    TimeRange:
      type: object
      properties:
        startTime:
          $ref: '#/components/schemas/Iso8601Time'
        endTime:
          $ref: '#/components/schemas/Iso8601Time'
      required:
      - startTime
      - endTime
      description: Time range in 24 hour format
    TimeRangeList:
      type: array
      items:
        $ref: '#/components/schemas/TimeRange'
      description: List of time range
    TimeStamp:
      type: string
      format: date-time
      description: Timestamp with no UTC offset or timezone
    TimeWindow:
      type: object
      properties:
        openHours:
          $ref: '#/components/schemas/OpenHours'
        restrictedPeriods:
          $ref: '#/components/schemas/RestrictedPeriods'
      required:
      - openHours
      description: Time window config
    TimeZone:
      type: string
      pattern: ^[a-zA-Z0-9_\-/]*$
      minLength: 0
      maxLength: 50
    UntagResourceRequest:
      type: object
      properties:
        arn:
          $ref: '#/components/schemas/Arn'
        tagKeys:
          $ref: '#/components/schemas/TagKeyList'
      required:
      - arn
      - tagKeys
      description: The request for UntagResource API.
    UpdateCampaignChannelSubtypeConfigRequest:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/CampaignId'
        channelSubtypeConfig:
          $ref: '#/components/schemas/ChannelSubtypeConfig'
      required:
      - id
      - channelSubtypeConfig
      description: The request for UpdateCampaignChannelSubtypeConfig API.
    UpdateCampaignCommunicationLimitsRequest:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/CampaignId'
        communicationLimitsOverride:
          $ref: '#/components/schemas/CommunicationLimitsConfig'
      required:
      - id
      - communicationLimitsOverride
      description: The request for UpdateCampaignCommunicationLimits API.
    UpdateCampaignCommunicationTimeRequest:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/CampaignId'
        communicationTimeConfig:
          $ref: '#/components/schemas/CommunicationTimeConfig'
      required:
      - id
      - communicationTimeConfig
      description: The request for UpdateCampaignCommunicationTime API.
    UpdateCampaignFlowAssociationRequest:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/CampaignId'
        connectCampaignFlowArn:
          $ref: '#/components/schemas/Arn'
      required:
      - id
      - connectCampaignFlowArn
      description: The request for UpdateCampaignFlowAssociation API.
    UpdateCampaignNameRequest:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/CampaignId'
        name:
          $ref: '#/components/schemas/CampaignName'
      required:
      - id
      - name
      description: The request for UpdateCampaignName API.
    UpdateCampaignScheduleRequest:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/CampaignId'
        schedule:
          $ref: '#/components/schemas/Schedule'
      required:
      - id
      - schedule
      description: The request for UpdateCampaignSchedule API.
    UpdateCampaignSourceRequest:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/CampaignId'
        source:
          $ref: '#/components/schemas/Source'
      required:
      - id
      - source
      description: The request for UpdateCampaignSource API.
    ValidationException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
        xAmzErrorType:
          $ref: '#/components/schemas/XAmazonErrorType'
      required:
      - message
      description: The input fails to satisfy the constraints specified by an AWS
        service.
    XAmazonErrorType:
      type: string
