openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: amplifyuibuilder
  x-aws-serviceName: amplifyuibuilder
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-07'
  version: '2021-08-11'
  title: AWS Amplify UI Builder
  description: |-
    The Amplify UI Builder API provides a programmatic interface for creating and configuring user interface (UI) component libraries and themes for use in your Amplify applications. You can then connect these UI components to an application's backend Amazon Web Services resources.

    You can also use the Amplify Studio visual designer to create UI components and model data for an app. For more information, see [Introduction](https://docs.amplify.aws/console/adminui/intro) in the _Amplify Docs_.

    The Amplify Framework is a comprehensive set of SDKs, libraries, tools, and documentation for client app development. For more information, see the [Amplify Framework](https://docs.amplify.aws/). For more information about deploying an Amplify application to Amazon Web Services, see the [Amplify User Guide](https://docs.aws.amazon.com/amplify/latest/userguide/welcome.html).
servers:
- description: The AWS Amplify UI Builder regional endpoint
  url: https://amplifyuibuilder.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths:
  /app/{appId}/environment/{environmentName}/components:
    post:
      operationId: CreateComponent
      description: |-
        Creates a new component for an Amplify app.
      parameters:
      - name: appId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: environmentName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: clientToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                componentToCreate:
                  $ref: '#/components/schemas/CreateComponentData'
      responses:
        '200': {}
        '500':
          description: |-
            An internal error has occurred. Please retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            An invalid or out-of-range value was supplied for the input parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '409':
          description: |-
            The resource specified in the request conflicts with an existing resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceConflictException'
        '402':
          description: |-
            You exceeded your service quota. Service quotas, also referred to as limits, are the maximum number of service resources or operations for your Amazon Web Services account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
    get:
      operationId: ListComponents
      description: |-
        Retrieves a list of components for a specified Amplify app and backend environment.
      parameters:
      - name: appId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: environmentName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ListEntityLimit'
      responses:
        '200': {}
        '500':
          description: |-
            An internal error has occurred. Please retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            An invalid or out-of-range value was supplied for the input parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
  /app/{appId}/environment/{environmentName}/forms:
    post:
      operationId: CreateForm
      description: |-
        Creates a new form for an Amplify app.
      parameters:
      - name: appId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: environmentName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: clientToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                formToCreate:
                  $ref: '#/components/schemas/CreateFormData'
      responses:
        '200': {}
        '500':
          description: |-
            An internal error has occurred. Please retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            An invalid or out-of-range value was supplied for the input parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '409':
          description: |-
            The resource specified in the request conflicts with an existing resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceConflictException'
        '402':
          description: |-
            You exceeded your service quota. Service quotas, also referred to as limits, are the maximum number of service resources or operations for your Amazon Web Services account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
    get:
      operationId: ListForms
      description: |-
        Retrieves a list of forms for a specified Amplify app and backend environment.
      parameters:
      - name: appId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: environmentName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ListEntityLimit'
      responses:
        '200': {}
        '500':
          description: |-
            An internal error has occurred. Please retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            An invalid or out-of-range value was supplied for the input parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
  /app/{appId}/environment/{environmentName}/themes:
    post:
      operationId: CreateTheme
      description: |-
        Creates a theme to apply to the components in an Amplify app.
      parameters:
      - name: appId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: environmentName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: clientToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                themeToCreate:
                  $ref: '#/components/schemas/CreateThemeData'
      responses:
        '200': {}
        '500':
          description: |-
            An internal error has occurred. Please retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            An invalid or out-of-range value was supplied for the input parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '409':
          description: |-
            The resource specified in the request conflicts with an existing resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceConflictException'
        '402':
          description: |-
            You exceeded your service quota. Service quotas, also referred to as limits, are the maximum number of service resources or operations for your Amazon Web Services account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
    get:
      operationId: ListThemes
      description: |-
        Retrieves a list of themes for a specified Amplify app and backend environment.
      parameters:
      - name: appId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: environmentName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ListEntityLimit'
      responses:
        '200': {}
        '500':
          description: |-
            An internal error has occurred. Please retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            An invalid or out-of-range value was supplied for the input parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
  /app/{appId}/environment/{environmentName}/components/{id}:
    delete:
      operationId: DeleteComponent
      description: |-
        Deletes a component from an Amplify app.
      parameters:
      - name: appId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: environmentName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Uuid'
      responses:
        '200': {}
        '500':
          description: |-
            An internal error has occurred. Please retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            An invalid or out-of-range value was supplied for the input parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '404':
          description: |-
            The requested resource does not exist, or access was denied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
    get:
      operationId: GetComponent
      description: |-
        Returns an existing component for an Amplify app.
      parameters:
      - name: appId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: environmentName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Uuid'
      responses:
        '200': {}
        '500':
          description: |-
            An internal error has occurred. Please retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            An invalid or out-of-range value was supplied for the input parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '404':
          description: |-
            The requested resource does not exist, or access was denied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
    patch:
      operationId: UpdateComponent
      description: |-
        Updates an existing component.
      parameters:
      - name: appId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: environmentName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Uuid'
      - name: clientToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                updatedComponent:
                  $ref: '#/components/schemas/UpdateComponentData'
      responses:
        '200': {}
        '500':
          description: |-
            An internal error has occurred. Please retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            An invalid or out-of-range value was supplied for the input parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '409':
          description: |-
            The resource specified in the request conflicts with an existing resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceConflictException'
  /app/{appId}/environment/{environmentName}/forms/{id}:
    delete:
      operationId: DeleteForm
      description: |-
        Deletes a form from an Amplify app.
      parameters:
      - name: appId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: environmentName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Uuid'
      responses:
        '200': {}
        '500':
          description: |-
            An internal error has occurred. Please retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            An invalid or out-of-range value was supplied for the input parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '404':
          description: |-
            The requested resource does not exist, or access was denied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
    get:
      operationId: GetForm
      description: |-
        Returns an existing form for an Amplify app.
      parameters:
      - name: appId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: environmentName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Uuid'
      responses:
        '200': {}
        '500':
          description: |-
            An internal error has occurred. Please retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            An invalid or out-of-range value was supplied for the input parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '404':
          description: |-
            The requested resource does not exist, or access was denied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
    patch:
      operationId: UpdateForm
      description: |-
        Updates an existing form.
      parameters:
      - name: appId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: environmentName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Uuid'
      - name: clientToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                updatedForm:
                  $ref: '#/components/schemas/UpdateFormData'
      responses:
        '200': {}
        '500':
          description: |-
            An internal error has occurred. Please retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            An invalid or out-of-range value was supplied for the input parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '409':
          description: |-
            The resource specified in the request conflicts with an existing resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceConflictException'
  /app/{appId}/environment/{environmentName}/themes/{id}:
    delete:
      operationId: DeleteTheme
      description: |-
        Deletes a theme from an Amplify app.
      parameters:
      - name: appId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: environmentName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Uuid'
      responses:
        '200': {}
        '500':
          description: |-
            An internal error has occurred. Please retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            An invalid or out-of-range value was supplied for the input parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '404':
          description: |-
            The requested resource does not exist, or access was denied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
    get:
      operationId: GetTheme
      description: |-
        Returns an existing theme for an Amplify app.
      parameters:
      - name: appId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: environmentName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Uuid'
      responses:
        '200': {}
        '500':
          description: |-
            An internal error has occurred. Please retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            An invalid or out-of-range value was supplied for the input parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '404':
          description: |-
            The requested resource does not exist, or access was denied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
    patch:
      operationId: UpdateTheme
      description: |-
        Updates an existing theme.
      parameters:
      - name: appId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: environmentName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Uuid'
      - name: clientToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                updatedTheme:
                  $ref: '#/components/schemas/UpdateThemeData'
      responses:
        '200': {}
        '500':
          description: |-
            An internal error has occurred. Please retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            An invalid or out-of-range value was supplied for the input parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '409':
          description: |-
            The resource specified in the request conflicts with an existing resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceConflictException'
  /tokens/{provider}:
    post:
      operationId: ExchangeCodeForToken
      description: |-
        This is for internal use.

        Amplify uses this action to exchange an access code for a token.
      parameters:
      - name: provider
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TokenProviders'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request:
                  $ref: '#/components/schemas/ExchangeCodeForTokenRequestBody'
      responses:
        '200': {}
        '400':
          description: |-
            An invalid or out-of-range value was supplied for the input parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
  /export/app/{appId}/environment/{environmentName}/components:
    get:
      operationId: ExportComponents
      description: |-
        Exports component configurations to code that is ready to integrate into an Amplify app.
      parameters:
      - name: appId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: environmentName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '500':
          description: |-
            An internal error has occurred. Please retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            An invalid or out-of-range value was supplied for the input parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
  /export/app/{appId}/environment/{environmentName}/forms:
    get:
      operationId: ExportForms
      description: |-
        Exports form configurations to code that is ready to integrate into an Amplify app.
      parameters:
      - name: appId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: environmentName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '500':
          description: |-
            An internal error has occurred. Please retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            An invalid or out-of-range value was supplied for the input parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
  /export/app/{appId}/environment/{environmentName}/themes:
    get:
      operationId: ExportThemes
      description: |-
        Exports theme configurations to code that is ready to integrate into an Amplify app.
      parameters:
      - name: appId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: environmentName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '500':
          description: |-
            An internal error has occurred. Please retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            An invalid or out-of-range value was supplied for the input parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
  /app/{appId}/environment/{environmentName}/codegen-jobs/{id}:
    get:
      operationId: GetCodegenJob
      description: |-
        Returns an existing code generation job.
      parameters:
      - name: appId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AppId'
      - name: environmentName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Uuid'
      responses:
        '200': {}
        '500':
          description: |-
            An internal error has occurred. Please retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            An invalid or out-of-range value was supplied for the input parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '404':
          description: |-
            The requested resource does not exist, or access was denied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /app/{appId}/environment/{environmentName}/metadata:
    get:
      operationId: GetMetadata
      description: |-
        Returns existing metadata for an Amplify app.
      parameters:
      - name: appId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: environmentName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '400':
          description: |-
            An invalid or out-of-range value was supplied for the input parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '401':
          description: |-
            You don't have permission to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /app/{appId}/environment/{environmentName}/codegen-jobs:
    get:
      operationId: ListCodegenJobs
      description: |-
        Retrieves a list of code generation jobs for a specified Amplify app and backend environment.
      parameters:
      - name: appId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AppId'
      - name: environmentName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ListCodegenJobsLimit'
      responses:
        '200': {}
        '500':
          description: |-
            An internal error has occurred. Please retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            An invalid or out-of-range value was supplied for the input parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    post:
      operationId: StartCodegenJob
      description: |-
        Starts a code generation job for a specified Amplify app and backend environment.
      parameters:
      - name: appId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AppId'
      - name: environmentName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: clientToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                codegenJobToCreate:
                  $ref: '#/components/schemas/StartCodegenJobData'
      responses:
        '200': {}
        '500':
          description: |-
            An internal error has occurred. Please retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            An invalid or out-of-range value was supplied for the input parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /tags/{resourceArn}:
    get:
      operationId: ListTagsForResource
      description: |-
        Returns a list of tags for a specified Amazon Resource Name (ARN).
      parameters:
      - name: resourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '500':
          description: |-
            An internal error has occurred. Please retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            An invalid or out-of-range value was supplied for the input parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '404':
          description: |-
            The requested resource does not exist, or access was denied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '401':
          description: |-
            You don't have permission to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
    post:
      operationId: TagResource
      description: |-
        Tags the resource with a tag key and value.
      parameters:
      - name: resourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tags:
                  $ref: '#/components/schemas/Tags'
      responses:
        '200': {}
        '500':
          description: |-
            An internal error has occurred. Please retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            An invalid or out-of-range value was supplied for the input parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '404':
          description: |-
            The requested resource does not exist, or access was denied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '401':
          description: |-
            You don't have permission to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
    delete:
      operationId: UntagResource
      description: |-
        Untags a resource with a specified Amazon Resource Name (ARN).
      parameters:
      - name: resourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: tagKeys
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/TagKeyList'
      responses:
        '200': {}
        '500':
          description: |-
            An internal error has occurred. Please retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            An invalid or out-of-range value was supplied for the input parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '404':
          description: |-
            The requested resource does not exist, or access was denied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '401':
          description: |-
            You don't have permission to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /app/{appId}/environment/{environmentName}/metadata/features/{featureName}:
    put:
      operationId: PutMetadataFlag
      description: |-
        Stores the metadata information about a feature on a form.
      parameters:
      - name: appId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: environmentName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: featureName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                body:
                  $ref: '#/components/schemas/PutMetadataFlagBody'
      responses:
        '200': {}
        '400':
          description: |-
            An invalid or out-of-range value was supplied for the input parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '401':
          description: |-
            You don't have permission to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /tokens/{provider}/refresh:
    post:
      operationId: RefreshToken
      description: |-
        This is for internal use.

        Amplify uses this action to refresh a previously issued access token that might have expired.
      parameters:
      - name: provider
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TokenProviders'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                refreshTokenBody:
                  $ref: '#/components/schemas/RefreshTokenRequestBody'
      responses:
        '200': {}
        '400':
          description: |-
            An invalid or out-of-range value was supplied for the input parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
components:
  schemas:
    ActionParameters:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/ComponentProperty'
          description: The type of navigation action. Valid values are `url` and `anchor`.
            This value is required for a navigation action.
        url:
          allOf:
          - $ref: '#/components/schemas/ComponentProperty'
          description: The URL to the location to open. Specify this value for a navigation
            action.
        anchor:
          allOf:
          - $ref: '#/components/schemas/ComponentProperty'
          description: The HTML anchor link to the location to open. Specify this
            value for a navigation action.
        target:
          allOf:
          - $ref: '#/components/schemas/ComponentProperty'
          description: The element within the same component to modify when the action
            occurs.
        global:
          allOf:
          - $ref: '#/components/schemas/ComponentProperty'
          description: Specifies whether the user should be signed out globally. Specify
            this value for an auth sign out action.
        model:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the data model. Use when the action performs an
            operation on an Amplify DataStore model.
        id:
          allOf:
          - $ref: '#/components/schemas/ComponentProperty'
          description: The unique ID of the component that the `ActionParameters`
            apply to.
        fields:
          allOf:
          - $ref: '#/components/schemas/ComponentProperties'
          description: A dictionary of key-value pairs mapping Amplify Studio properties
            to fields in a data model. Use when the action performs an operation on
            an Amplify DataStore model.
        state:
          allOf:
          - $ref: '#/components/schemas/MutationActionSetStateParameter'
          description: A key-value pair that specifies the state property name and
            its initial value.
      description: Represents the event action configuration for an element of a `Component`
        or `ComponentChild`. Use for the workflow feature in Amplify Studio that allows
        you to bind events and actions to components. `ActionParameters` defines the
        action that is performed when an event occurs on the component.
    ApiConfiguration:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/GraphQLRenderConfig'
        description: |-
          The configuration for an application using GraphQL APIs.
      - allOf:
        - $ref: '#/components/schemas/DataStoreRenderConfig'
        description: |-
          The configuration for an application using DataStore APIs.
      - allOf:
        - $ref: '#/components/schemas/NoApiRenderConfig'
        description: |-
          The configuration for an application with no API being used.
      description: |-
        Describes the API configuration for a code generation job.
    AppId:
      type: string
      pattern: ^d[a-z0-9]+$
      minLength: 1
      maxLength: 20
    AssociatedFieldsList:
      type: array
      items:
        type: string
    CodegenDependencies:
      type: array
      items:
        $ref: '#/components/schemas/CodegenDependency'
    CodegenDependency:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Name of the dependency package.
        supportedVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Indicates the version of the supported dependency package.
        isSemVer:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Determines if the dependency package is using Semantic versioning.
            If set to true, it indicates that the dependency package uses Semantic
            versioning.
        reason:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Indicates the reason to include the dependency package in your
            project code.
      description: Dependency package that may be required for the project code to
        run.
    CodegenFeatureFlags:
      type: object
      properties:
        isRelationshipSupported:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Specifes whether a code generation job supports data relationships.
        isNonModelSupported:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Specifies whether a code generation job supports non models.
      description: Describes the feature flags that you can specify for a code generation
        job.
    CodegenGenericDataEnum:
      type: object
      properties:
        values:
          allOf:
          - $ref: '#/components/schemas/CodegenGenericDataEnumValuesList'
          description: The list of enum values in the generic data schema.
      required:
      - values
      description: Describes the enums in a generic data schema.
    CodegenGenericDataEnumValuesList:
      type: array
      items:
        type: string
    CodegenGenericDataEnums:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/CodegenGenericDataEnum'
    CodegenGenericDataField:
      type: object
      properties:
        dataType:
          allOf:
          - $ref: '#/components/schemas/CodegenGenericDataFieldDataType'
          description: The data type for the generic data field.
        dataTypeValue:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The value of the data type for the generic data field.
        required:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Specifies whether the generic data field is required.
        readOnly:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Specifies whether the generic data field is read-only.
        isArray:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Specifies whether the generic data field is an array.
        relationship:
          allOf:
          - $ref: '#/components/schemas/CodegenGenericDataRelationshipType'
          description: The relationship of the generic data schema.
      required:
      - dataType
      - dataTypeValue
      - required
      - readOnly
      - isArray
      description: Describes a field in a generic data schema.
    CodegenGenericDataFieldDataType:
      type: string
      enum:
      - ID
      - String
      - Int
      - Float
      - AWSDate
      - AWSTime
      - AWSDateTime
      - AWSTimestamp
      - AWSEmail
      - AWSURL
      - AWSIPAddress
      - Boolean
      - AWSJSON
      - AWSPhone
      - Enum
      - Model
      - NonModel
    CodegenGenericDataFields:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/CodegenGenericDataField'
    CodegenGenericDataModel:
      type: object
      properties:
        fields:
          allOf:
          - $ref: '#/components/schemas/CodegenGenericDataFields'
          description: The fields in the generic data model.
        isJoinTable:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Specifies whether the generic data model is a join table.
        primaryKeys:
          allOf:
          - $ref: '#/components/schemas/CodegenPrimaryKeysList'
          description: The primary keys of the generic data model.
      required:
      - fields
      - primaryKeys
      description: Describes a model in a generic data schema.
    CodegenGenericDataModels:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/CodegenGenericDataModel'
    CodegenGenericDataNonModel:
      type: object
      properties:
        fields:
          allOf:
          - $ref: '#/components/schemas/CodegenGenericDataNonModelFields'
          description: The fields in a generic data schema non model.
      required:
      - fields
      description: Describes a non-model in a generic data schema.
    CodegenGenericDataNonModelFields:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/CodegenGenericDataField'
    CodegenGenericDataNonModels:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/CodegenGenericDataNonModel'
    CodegenGenericDataRelationshipType:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/GenericDataRelationshipType'
          description: The data relationship type.
        relatedModelName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the related model in the data relationship.
        relatedModelFields:
          allOf:
          - $ref: '#/components/schemas/RelatedModelFieldsList'
          description: The related model fields in the data relationship.
        canUnlinkAssociatedModel:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Specifies whether the relationship can unlink the associated
            model.
        relatedJoinFieldName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the related join field in the data relationship.
        relatedJoinTableName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the related join table in the data relationship.
        belongsToFieldOnRelatedModel:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The value of the `belongsTo` field on the related data model.
        associatedFields:
          allOf:
          - $ref: '#/components/schemas/AssociatedFieldsList'
          description: The associated fields of the data relationship.
        isHasManyIndex:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Specifies whether the `@index` directive is supported for a
            `hasMany` data relationship.
      required:
      - type
      - relatedModelName
      description: Describes the relationship between generic data models.
    CodegenJob:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The unique ID for the code generation job.
        appId:
          allOf:
          - $ref: '#/components/schemas/AppId'
          description: The ID of the Amplify app associated with the code generation
            job.
        environmentName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the backend environment associated with the code
            generation job.
        renderConfig:
          $ref: '#/components/schemas/CodegenJobRenderConfig'
        genericDataSchema:
          $ref: '#/components/schemas/CodegenJobGenericDataSchema'
        autoGenerateForms:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Specifies whether to autogenerate forms in the code generation
            job.
        features:
          $ref: '#/components/schemas/CodegenFeatureFlags'
        status:
          allOf:
          - $ref: '#/components/schemas/CodegenJobStatus'
          description: The status of the code generation job.
        statusMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The customized status message for the code generation job.
        asset:
          allOf:
          - $ref: '#/components/schemas/CodegenJobAsset'
          description: The `CodegenJobAsset` to use for the code generation job.
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: One or more key-value pairs to use when tagging the code generation
            job.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time that the code generation job was created.
        modifiedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time that the code generation job was modified.
        dependencies:
          allOf:
          - $ref: '#/components/schemas/CodegenDependencies'
          description: Lists the dependency packages that may be required for the
            project code to run.
      required:
      - id
      - appId
      - environmentName
      description: Describes the configuration for a code generation job that is associated
        with an Amplify app.
    CodegenJobAsset:
      type: object
      properties:
        downloadUrl:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The URL to use to access the asset.
      description: Describes an asset for a code generation job.
    CodegenJobGenericDataSchema:
      type: object
      properties:
        dataSourceType:
          allOf:
          - $ref: '#/components/schemas/CodegenJobGenericDataSourceType'
          description: The type of the data source for the schema. Currently, the
            only valid value is an Amplify `DataStore`.
        models:
          allOf:
          - $ref: '#/components/schemas/CodegenGenericDataModels'
          description: The name of a `CodegenGenericDataModel`.
        enums:
          allOf:
          - $ref: '#/components/schemas/CodegenGenericDataEnums'
          description: The name of a `CodegenGenericDataEnum`.
        nonModels:
          allOf:
          - $ref: '#/components/schemas/CodegenGenericDataNonModels'
          description: The name of a `CodegenGenericDataNonModel`.
      required:
      - dataSourceType
      - models
      - enums
      - nonModels
      description: Describes the data schema for a code generation job.
    CodegenJobGenericDataSourceType:
      type: string
      enum:
      - DataStore
    CodegenJobRenderConfig:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/ReactStartCodegenJobData'
        description: |-
          The name of the `ReactStartCodegenJobData` object.
      description: |-
        Describes the configuration information for rendering the UI component associated with the code generation job.
    CodegenJobStatus:
      type: string
      enum:
      - in_progress
      - failed
      - succeeded
    CodegenJobSummary:
      type: object
      properties:
        appId:
          allOf:
          - $ref: '#/components/schemas/AppId'
          description: The unique ID of the Amplify app associated with the code generation
            job.
        environmentName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the backend environment associated with the code
            generation job.
        id:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The unique ID for the code generation job summary.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time that the code generation job summary was created.
        modifiedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time that the code generation job summary was modified.
      required:
      - appId
      - environmentName
      - id
      description: A summary of the basic information about the code generation job.
    CodegenJobSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/CodegenJobSummary'
    CodegenPrimaryKeysList:
      type: array
      items:
        type: string
    Component:
      type: object
      properties:
        appId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique ID of the Amplify app associated with the component.
        environmentName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the backend environment that is a part of the Amplify
            app.
        sourceId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique ID of the component in its original source system,
            such as Figma.
        id:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The unique ID of the component.
        name:
          allOf:
          - $ref: '#/components/schemas/ComponentName'
          description: The name of the component.
        componentType:
          allOf:
          - $ref: '#/components/schemas/ComponentType'
          description: The type of the component. This can be an Amplify custom UI
            component or another custom component.
        properties:
          allOf:
          - $ref: '#/components/schemas/ComponentProperties'
          description: Describes the component's properties. You can't specify `tags`
            as a valid property for `properties`.
        children:
          allOf:
          - $ref: '#/components/schemas/ComponentChildList'
          description: A list of the component's `ComponentChild` instances.
        variants:
          allOf:
          - $ref: '#/components/schemas/ComponentVariants'
          description: A list of the component's variants. A variant is a unique style
            configuration of a main component.
        overrides:
          allOf:
          - $ref: '#/components/schemas/ComponentOverrides'
          description: Describes the component's properties that can be overriden
            in a customized instance of the component. You can't specify `tags` as
            a valid property for `overrides`.
        bindingProperties:
          allOf:
          - $ref: '#/components/schemas/ComponentBindingProperties'
          description: The information to connect a component's properties to data
            at runtime. You can't specify `tags` as a valid property for `bindingProperties`.
        collectionProperties:
          allOf:
          - $ref: '#/components/schemas/ComponentCollectionProperties'
          description: The data binding configuration for the component's properties.
            Use this for a collection component. You can't specify `tags` as a valid
            property for `collectionProperties`.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time that the component was created.
        modifiedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time that the component was modified.
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: One or more key-value pairs to use when tagging the component.
        events:
          allOf:
          - $ref: '#/components/schemas/ComponentEvents'
          description: Describes the events that can be raised on the component. Use
            for the workflow feature in Amplify Studio that allows you to bind events
            and actions to components.
        schemaVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The schema version of the component when it was imported.
      required:
      - appId
      - environmentName
      - id
      - name
      - componentType
      - properties
      - variants
      - overrides
      - bindingProperties
      - createdAt
      description: Contains the configuration settings for a user interface (UI) element
        for an Amplify app. A component is configured as a primary, stand-alone UI
        element. Use `ComponentChild` to configure an instance of a `Component`. A
        `ComponentChild` instance inherits the configuration of the main `Component`.
    ComponentBindingProperties:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/ComponentBindingPropertiesValue'
    ComponentBindingPropertiesValue:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The property type.
        bindingProperties:
          allOf:
          - $ref: '#/components/schemas/ComponentBindingPropertiesValueProperties'
          description: Describes the properties to customize with data at runtime.
        defaultValue:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The default value of the property.
      description: Represents the data binding configuration for a component at runtime.
        You can use `ComponentBindingPropertiesValue` to add exposed properties to
        a component to allow different values to be entered when a component is reused
        in different places in an app.
    ComponentBindingPropertiesValueProperties:
      type: object
      properties:
        model:
          allOf:
          - $ref: '#/components/schemas/String'
          description: An Amplify DataStore model.
        field:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The field to bind the data to.
        predicates:
          allOf:
          - $ref: '#/components/schemas/PredicateList'
          description: A list of predicates for binding a component's properties to
            data.
        userAttribute:
          allOf:
          - $ref: '#/components/schemas/String'
          description: An authenticated user attribute.
        bucket:
          allOf:
          - $ref: '#/components/schemas/String'
          description: An Amazon S3 bucket.
        key:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The storage key for an Amazon S3 bucket.
        defaultValue:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The default value to assign to the property.
        slotName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of a component slot.
      description: Represents the data binding configuration for a specific property
        using data stored in Amazon Web Services. For Amazon Web Services connected
        properties, you can bind a property to data stored in an Amazon S3 bucket,
        an Amplify DataStore model or an authenticated user attribute.
    ComponentChild:
      type: object
      properties:
        componentType:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The type of the child component.
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the child component.
        properties:
          allOf:
          - $ref: '#/components/schemas/ComponentProperties'
          description: Describes the properties of the child component. You can't
            specify `tags` as a valid property for `properties`.
        children:
          allOf:
          - $ref: '#/components/schemas/ComponentChildList'
          description: The list of `ComponentChild` instances for this component.
        events:
          allOf:
          - $ref: '#/components/schemas/ComponentEvents'
          description: Describes the events that can be raised on the child component.
            Use for the workflow feature in Amplify Studio that allows you to bind
            events and actions to components.
        sourceId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique ID of the child component in its original source
            system, such as Figma.
      required:
      - componentType
      - name
      - properties
      description: A nested UI configuration within a parent `Component`.
    ComponentChildList:
      type: array
      items:
        $ref: '#/components/schemas/ComponentChild'
    ComponentCollectionProperties:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/ComponentDataConfiguration'
    ComponentConditionProperty:
      type: object
      properties:
        property:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the conditional property.
        field:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of a field. Specify this when the property is a data
            model.
        operator:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The operator to use to perform the evaluation, such as `eq`
            to represent equals.
        operand:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The value of the property to evaluate.
        then:
          allOf:
          - $ref: '#/components/schemas/ComponentProperty'
          description: The value to assign to the property if the condition is met.
        else:
          allOf:
          - $ref: '#/components/schemas/ComponentProperty'
          description: The value to assign to the property if the condition is not
            met.
        operandType:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The type of the property to evaluate.
      description: Represents a conditional expression to set a component property.
        Use `ComponentConditionProperty` to set a property to different values conditionally,
        based on the value of another property.
    ComponentDataConfiguration:
      type: object
      properties:
        model:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the data model to use to bind data to a component.
        sort:
          allOf:
          - $ref: '#/components/schemas/SortPropertyList'
          description: Describes how to sort the component's properties.
        predicate:
          allOf:
          - $ref: '#/components/schemas/Predicate'
          description: Represents the conditional logic to use when binding data to
            a component. Use this property to retrieve only a subset of the data in
            a collection.
        identifiers:
          allOf:
          - $ref: '#/components/schemas/IdentifierList'
          description: A list of IDs to use to bind data to a component. Use this
            property to bind specifically chosen data, rather than data retrieved
            from a query.
      required:
      - model
      description: Describes the configuration for binding a component's properties
        to data.
    ComponentEvent:
      type: object
      properties:
        action:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The action to perform when a specific event is raised.
        parameters:
          allOf:
          - $ref: '#/components/schemas/ActionParameters'
          description: Describes information about the action.
        bindingEvent:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Binds an event to an action on a component. When you specify
            a `bindingEvent`, the event is called when the action is performed.
      description: Describes the configuration of an event. You can bind an event
        and a corresponding action to a `Component` or a `ComponentChild`. A button
        click is an example of an event.
    ComponentEvents:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/ComponentEvent'
    ComponentList:
      type: array
      items:
        $ref: '#/components/schemas/Component'
    ComponentName:
      type: string
      minLength: 1
      maxLength: 255
    ComponentOverrides:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/ComponentOverridesValue'
    ComponentOverridesValue:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/String'
    ComponentProperties:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/ComponentProperty'
    ComponentProperty:
      type: object
      properties:
        value:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The value to assign to the component property.
        bindingProperties:
          allOf:
          - $ref: '#/components/schemas/ComponentPropertyBindingProperties'
          description: The information to bind the component property to data at runtime.
        collectionBindingProperties:
          allOf:
          - $ref: '#/components/schemas/ComponentPropertyBindingProperties'
          description: The information to bind the component property to data at runtime.
            Use this for collection components.
        defaultValue:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The default value to assign to the component property.
        model:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The data model to use to assign a value to the component property.
        bindings:
          allOf:
          - $ref: '#/components/schemas/FormBindings'
          description: The information to bind the component property to form data.
        event:
          allOf:
          - $ref: '#/components/schemas/String'
          description: An event that occurs in your app. Use this for workflow data
            binding.
        userAttribute:
          allOf:
          - $ref: '#/components/schemas/String'
          description: An authenticated user attribute to use to assign a value to
            the component property.
        concat:
          allOf:
          - $ref: '#/components/schemas/ComponentPropertyList'
          description: A list of component properties to concatenate to create the
            value to assign to this component property.
        condition:
          allOf:
          - $ref: '#/components/schemas/ComponentConditionProperty'
          description: The conditional expression to use to assign a value to the
            component property.
        configured:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Specifies whether the user configured the property in Amplify
            Studio after importing it.
        type:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The component type.
        importedValue:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The default value assigned to the property when the component
            is imported into an app.
        componentName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the component that is affected by an event.
        property:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the component's property that is affected by an
            event.
      description: Describes the configuration for all of a component's properties.
        Use `ComponentProperty` to specify the values to render or bind by default.
    ComponentPropertyBindingProperties:
      type: object
      properties:
        property:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The component property to bind to the data field.
        field:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The data field to bind the property to.
      required:
      - property
      description: Associates a component property to a binding property. This enables
        exposed properties on the top level component to propagate data to the component's
        property values.
    ComponentPropertyList:
      type: array
      items:
        $ref: '#/components/schemas/ComponentProperty'
    ComponentSummary:
      type: object
      properties:
        appId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique ID of the Amplify app associated with the component.
        environmentName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the backend environment that is a part of the Amplify
            app.
        id:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The unique ID of the component.
        name:
          allOf:
          - $ref: '#/components/schemas/ComponentName'
          description: The name of the component.
        componentType:
          allOf:
          - $ref: '#/components/schemas/ComponentType'
          description: The component type.
      required:
      - appId
      - environmentName
      - id
      - name
      - componentType
      description: Contains a summary of a component. This is a read-only data type
        that is returned by `ListComponents`.
    ComponentSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/ComponentSummary'
    ComponentType:
      type: string
      minLength: 1
      maxLength: 255
    ComponentVariant:
      type: object
      properties:
        variantValues:
          allOf:
          - $ref: '#/components/schemas/ComponentVariantValues'
          description: The combination of variants that comprise this variant. You
            can't specify `tags` as a valid property for `variantValues`.
        overrides:
          allOf:
          - $ref: '#/components/schemas/ComponentOverrides'
          description: The properties of the component variant that can be overriden
            when customizing an instance of the component. You can't specify `tags`
            as a valid property for `overrides`.
      description: Describes the style configuration of a unique variation of a main
        component.
    ComponentVariantValues:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/String'
    ComponentVariants:
      type: array
      items:
        $ref: '#/components/schemas/ComponentVariant'
    CreateComponentData:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/ComponentName'
          description: The name of the component
        sourceId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique ID of the component in its original source system,
            such as Figma.
        componentType:
          allOf:
          - $ref: '#/components/schemas/ComponentType'
          description: The component type. This can be an Amplify custom UI component
            or another custom component.
        properties:
          allOf:
          - $ref: '#/components/schemas/ComponentProperties'
          description: Describes the component's properties.
        children:
          allOf:
          - $ref: '#/components/schemas/ComponentChildList'
          description: A list of child components that are instances of the main component.
        variants:
          allOf:
          - $ref: '#/components/schemas/ComponentVariants'
          description: A list of the unique variants of this component.
        overrides:
          allOf:
          - $ref: '#/components/schemas/ComponentOverrides'
          description: Describes the component properties that can be overriden to
            customize an instance of the component.
        bindingProperties:
          allOf:
          - $ref: '#/components/schemas/ComponentBindingProperties'
          description: The data binding information for the component's properties.
        collectionProperties:
          allOf:
          - $ref: '#/components/schemas/ComponentCollectionProperties'
          description: The data binding configuration for customizing a component's
            properties. Use this for a collection component.
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: One or more key-value pairs to use when tagging the component
            data.
        events:
          allOf:
          - $ref: '#/components/schemas/ComponentEvents'
          description: The event configuration for the component. Use for the workflow
            feature in Amplify Studio that allows you to bind events and actions to
            components.
        schemaVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The schema version of the component when it was imported.
      required:
      - name
      - componentType
      - properties
      - variants
      - overrides
      - bindingProperties
      description: Represents all of the information that is required to create a
        component.
    CreateComponentRequest:
      type: object
      properties:
        appId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique ID of the Amplify app to associate with the component.
        environmentName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the backend environment that is a part of the Amplify
            app.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique client token.
        componentToCreate:
          allOf:
          - $ref: '#/components/schemas/CreateComponentData'
          description: Represents the configuration of the component to create.
      required:
      - appId
      - environmentName
      - componentToCreate
    CreateComponentResponse:
      type: object
      properties:
        entity:
          allOf:
          - $ref: '#/components/schemas/Component'
          description: Describes the configuration of the new component.
    CreateFormData:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/FormName'
          description: The name of the form.
        dataType:
          allOf:
          - $ref: '#/components/schemas/FormDataTypeConfig'
          description: The type of data source to use to create the form.
        formActionType:
          allOf:
          - $ref: '#/components/schemas/FormActionType'
          description: Specifies whether to perform a create or update action on the
            form.
        fields:
          allOf:
          - $ref: '#/components/schemas/FieldsMap'
          description: The configuration information for the form's fields.
        style:
          allOf:
          - $ref: '#/components/schemas/FormStyle'
          description: The configuration for the form's style.
        sectionalElements:
          allOf:
          - $ref: '#/components/schemas/SectionalElementMap'
          description: The configuration information for the visual helper elements
            for the form. These elements are not associated with any data.
        schemaVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The schema version of the form.
        cta:
          allOf:
          - $ref: '#/components/schemas/FormCTA'
          description: The `FormCTA` object that stores the call to action configuration
            for the form.
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: One or more key-value pairs to use when tagging the form data.
        labelDecorator:
          allOf:
          - $ref: '#/components/schemas/LabelDecorator'
          description: Specifies an icon or decoration to display on the form.
      required:
      - name
      - dataType
      - formActionType
      - fields
      - style
      - sectionalElements
      - schemaVersion
      description: Represents all of the information that is required to create a
        form.
    CreateFormRequest:
      type: object
      properties:
        appId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique ID of the Amplify app to associate with the form.
        environmentName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the backend environment that is a part of the Amplify
            app.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique client token.
        formToCreate:
          allOf:
          - $ref: '#/components/schemas/CreateFormData'
          description: Represents the configuration of the form to create.
      required:
      - appId
      - environmentName
      - formToCreate
    CreateFormResponse:
      type: object
      properties:
        entity:
          allOf:
          - $ref: '#/components/schemas/Form'
          description: Describes the configuration of the new form.
    CreateThemeData:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/ThemeName'
          description: The name of the theme.
        values:
          allOf:
          - $ref: '#/components/schemas/ThemeValuesList'
          description: A list of key-value pairs that deﬁnes the properties of the
            theme.
        overrides:
          allOf:
          - $ref: '#/components/schemas/ThemeValuesList'
          description: Describes the properties that can be overriden to customize
            an instance of the theme.
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: One or more key-value pairs to use when tagging the theme data.
      required:
      - name
      - values
      description: Represents all of the information that is required to create a
        theme.
    CreateThemeRequest:
      type: object
      properties:
        appId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique ID of the Amplify app associated with the theme.
        environmentName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the backend environment that is a part of the Amplify
            app.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique client token.
        themeToCreate:
          allOf:
          - $ref: '#/components/schemas/CreateThemeData'
          description: Represents the configuration of the theme to create.
      required:
      - appId
      - environmentName
      - themeToCreate
    CreateThemeResponse:
      type: object
      properties:
        entity:
          allOf:
          - $ref: '#/components/schemas/Theme'
          description: Describes the configuration of the new theme.
    DataStoreRenderConfig:
      type: object
      properties: {}
      description: Describes the DataStore configuration for an API for a code generation
        job.
    DeleteComponentRequest:
      type: object
      properties:
        appId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique ID of the Amplify app associated with the component
            to delete.
        environmentName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the backend environment that is a part of the Amplify
            app.
        id:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The unique ID of the component to delete.
      required:
      - appId
      - environmentName
      - id
    DeleteFormRequest:
      type: object
      properties:
        appId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique ID of the Amplify app associated with the form to
            delete.
        environmentName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the backend environment that is a part of the Amplify
            app.
        id:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The unique ID of the form to delete.
      required:
      - appId
      - environmentName
      - id
    DeleteThemeRequest:
      type: object
      properties:
        appId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique ID of the Amplify app associated with the theme
            to delete.
        environmentName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the backend environment that is a part of the Amplify
            app.
        id:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The unique ID of the theme to delete.
      required:
      - appId
      - environmentName
      - id
    ExchangeCodeForTokenRequest:
      type: object
      properties:
        provider:
          allOf:
          - $ref: '#/components/schemas/TokenProviders'
          description: The third-party provider for the token. The only valid value
            is `figma`.
        request:
          allOf:
          - $ref: '#/components/schemas/ExchangeCodeForTokenRequestBody'
          description: Describes the configuration of the request.
      required:
      - provider
      - request
    ExchangeCodeForTokenRequestBody:
      type: object
      properties:
        code:
          allOf:
          - $ref: '#/components/schemas/SensitiveString'
          description: The access code to send in the request.
        redirectUri:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The location of the application that will receive the access
            code.
        clientId:
          allOf:
          - $ref: '#/components/schemas/SensitiveString'
          description: The ID of the client to request the token from.
      required:
      - code
      - redirectUri
      description: Describes the configuration of a request to exchange an access
        code for a token.
    ExchangeCodeForTokenResponse:
      type: object
      properties:
        accessToken:
          allOf:
          - $ref: '#/components/schemas/SensitiveString'
          description: The access token.
        expiresIn:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The date and time when the new access token expires.
        refreshToken:
          allOf:
          - $ref: '#/components/schemas/SensitiveString'
          description: The token to use to refresh a previously issued access token
            that might have expired.
      required:
      - accessToken
      - expiresIn
      - refreshToken
    ExportComponentsRequest:
      type: object
      properties:
        appId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique ID of the Amplify app to export components to.
        environmentName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the backend environment that is a part of the Amplify
            app.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The token to request the next page of results.
      required:
      - appId
      - environmentName
    ExportComponentsResponse:
      type: object
      properties:
        entities:
          allOf:
          - $ref: '#/components/schemas/ComponentList'
          description: Represents the configuration of the exported components.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The pagination token that's included if more results are available.
      required:
      - entities
    ExportFormsRequest:
      type: object
      properties:
        appId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique ID of the Amplify app to export forms to.
        environmentName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the backend environment that is a part of the Amplify
            app.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The token to request the next page of results.
      required:
      - appId
      - environmentName
    ExportFormsResponse:
      type: object
      properties:
        entities:
          allOf:
          - $ref: '#/components/schemas/FormList'
          description: Represents the configuration of the exported forms.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The pagination token that's included if more results are available.
      required:
      - entities
    ExportThemesRequest:
      type: object
      properties:
        appId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique ID of the Amplify app to export the themes to.
        environmentName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the backend environment that is part of the Amplify
            app.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The token to request the next page of results.
      required:
      - appId
      - environmentName
    ExportThemesResponse:
      type: object
      properties:
        entities:
          allOf:
          - $ref: '#/components/schemas/ThemeList'
          description: Represents the configuration of the exported themes.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The pagination token that's included if more results are available.
      required:
      - entities
    FeaturesMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/String'
    FieldConfig:
      type: object
      properties:
        label:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The label for the field.
        position:
          allOf:
          - $ref: '#/components/schemas/FieldPosition'
          description: Specifies the field position.
        excluded:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Specifies whether to hide a field.
        inputType:
          allOf:
          - $ref: '#/components/schemas/FieldInputConfig'
          description: Describes the configuration for the default input value to
            display for a field.
        validations:
          allOf:
          - $ref: '#/components/schemas/ValidationsList'
          description: The validations to perform on the value in the field.
      description: Describes the configuration information for a field in a table.
    FieldInputConfig:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The input type for the field.
        required:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Specifies a field that requires input.
        readOnly:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Specifies a read only field.
        placeholder:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The text to display as a placeholder for the field.
        defaultValue:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The default value for the field.
        descriptiveText:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The text to display to describe the field.
        defaultChecked:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Specifies whether a field has a default value.
        defaultCountryCode:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The default country code for a phone number.
        valueMappings:
          allOf:
          - $ref: '#/components/schemas/ValueMappings'
          description: The information to use to customize the input fields with data
            at runtime.
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the field.
        minValue:
          allOf:
          - $ref: '#/components/schemas/Float'
          description: The minimum value to display for the field.
        maxValue:
          allOf:
          - $ref: '#/components/schemas/Float'
          description: The maximum value to display for the field.
        step:
          allOf:
          - $ref: '#/components/schemas/Float'
          description: The stepping increment for a numeric value in a field.
        value:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The value for the field.
        isArray:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Specifies whether to render the field as an array. This property
            is ignored if the `dataSourceType` for the form is a Data Store.
        fileUploaderConfig:
          allOf:
          - $ref: '#/components/schemas/FileUploaderFieldConfig'
          description: The configuration for the file uploader field.
      required:
      - type
      description: Describes the configuration for the default input values to display
        for a field.
    FieldPosition:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/FixedPosition'
        description: |-
          The field position is fixed and doesn't change in relation to other fields.
      - allOf:
        - $ref: '#/components/schemas/String'
        description: |-
          The field position is to the right of the field specified by the string.
      - allOf:
        - $ref: '#/components/schemas/String'
        description: |-
          The field position is below the field specified by the string.
      description: |-
        Describes the field position.
    FieldValidationConfiguration:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The validation to perform on an object type.``
        strValues:
          allOf:
          - $ref: '#/components/schemas/StrValues'
          description: The validation to perform on a string value.
        numValues:
          allOf:
          - $ref: '#/components/schemas/NumValues'
          description: The validation to perform on a number value.
        validationMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The validation message to display.
      required:
      - type
      description: Describes the validation configuration for a field.
    FieldsMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/FieldConfig'
    FileUploaderFieldConfig:
      type: object
      properties:
        accessLevel:
          allOf:
          - $ref: '#/components/schemas/StorageAccessLevel'
          description: The access level to assign to the uploaded files in the Amazon
            S3 bucket where they are stored. The valid values for this property are
            `private`, `protected`, or `public`. For detailed information about the
            permissions associated with each access level, see [File access levels](https://docs.amplify.aws/lib/storage/configureaccess/q/platform/js/)
            in the _Amplify documentation_.
        acceptedFileTypes:
          allOf:
          - $ref: '#/components/schemas/StrValues'
          description: The file types that are allowed to be uploaded by the file
            uploader. Provide this information in an array of strings specifying the
            valid file extensions.
        showThumbnails:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Specifies whether to display or hide the image preview after
            selecting a file for upload. The default value is `true` to display the
            image preview.
        isResumable:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: 'Allows the file upload operation to be paused and resumed.
            The default value is `false`.


            When `isResumable` is set to `true`, the file uploader uses a multipart
            upload to break the files into chunks before upload. The progress of the
            upload isn''t continuous, because the file uploader uploads a chunk at
            a time.'
        maxFileCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: Specifies the maximum number of files that can be selected
            to upload. The default value is an unlimited number of files.
        maxSize:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The maximum file size in bytes that the file uploader will
            accept. The default value is an unlimited file size.
      required:
      - accessLevel
      - acceptedFileTypes
      description: Describes the configuration for the file uploader field.
    FixedPosition:
      type: string
      enum:
      - first
    Form:
      type: object
      properties:
        appId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique ID of the Amplify app associated with the form.
        environmentName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the backend environment that is a part of the Amplify
            app.
        id:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The unique ID of the form.
        name:
          allOf:
          - $ref: '#/components/schemas/FormName'
          description: The name of the form.
        formActionType:
          allOf:
          - $ref: '#/components/schemas/FormActionType'
          description: The operation to perform on the specified form.
        style:
          allOf:
          - $ref: '#/components/schemas/FormStyle'
          description: Stores the configuration for the form's style.
        dataType:
          allOf:
          - $ref: '#/components/schemas/FormDataTypeConfig'
          description: The type of data source to use to create the form.
        fields:
          allOf:
          - $ref: '#/components/schemas/FieldsMap'
          description: Stores the information about the form's fields.
        sectionalElements:
          allOf:
          - $ref: '#/components/schemas/SectionalElementMap'
          description: Stores the visual helper elements for the form that are not
            associated with any data.
        schemaVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The schema version of the form when it was imported.
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: One or more key-value pairs to use when tagging the form.
        cta:
          allOf:
          - $ref: '#/components/schemas/FormCTA'
          description: Stores the call to action configuration for the form.
        labelDecorator:
          allOf:
          - $ref: '#/components/schemas/LabelDecorator'
          description: Specifies an icon or decoration to display on the form.
      required:
      - appId
      - environmentName
      - id
      - name
      - formActionType
      - style
      - dataType
      - fields
      - sectionalElements
      - schemaVersion
      description: Contains the configuration settings for a `Form` user interface
        (UI) element for an Amplify app. A form is a component you can add to your
        project by specifying a data source as the default configuration for the form.
    FormActionType:
      type: string
      enum:
      - create
      - update
    FormBindingElement:
      type: object
      properties:
        element:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the component to retrieve a value from.
        property:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The property to retrieve a value from.
      required:
      - element
      - property
      description: Describes how to bind a component property to form data.
    FormBindings:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/FormBindingElement'
    FormButton:
      type: object
      properties:
        excluded:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Specifies whether the button is visible on the form.
        children:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Describes the button's properties.
        position:
          allOf:
          - $ref: '#/components/schemas/FieldPosition'
          description: The position of the button.
      description: Describes the configuration for a button UI element that is a part
        of a form.
    FormButtonsPosition:
      type: string
      enum:
      - top
      - bottom
      - top_and_bottom
    FormCTA:
      type: object
      properties:
        position:
          allOf:
          - $ref: '#/components/schemas/FormButtonsPosition'
          description: The position of the button.
        clear:
          allOf:
          - $ref: '#/components/schemas/FormButton'
          description: Displays a clear button.
        cancel:
          allOf:
          - $ref: '#/components/schemas/FormButton'
          description: Displays a cancel button.
        submit:
          allOf:
          - $ref: '#/components/schemas/FormButton'
          description: Displays a submit button.
      description: Describes the call to action button configuration for the form.
    FormDataSourceType:
      type: string
      enum:
      - DataStore
      - Custom
    FormDataTypeConfig:
      type: object
      properties:
        dataSourceType:
          allOf:
          - $ref: '#/components/schemas/FormDataSourceType'
          description: The data source type, either an Amplify DataStore model or
            a custom data type.
        dataTypeName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique name of the data type you are using as the data
            source for the form.
      required:
      - dataSourceType
      - dataTypeName
      description: Describes the data type configuration for the data source associated
        with a form.
    FormInputBindingProperties:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/FormInputBindingPropertiesValue'
    FormInputBindingPropertiesValue:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The property type.
        bindingProperties:
          allOf:
          - $ref: '#/components/schemas/FormInputBindingPropertiesValueProperties'
          description: Describes the properties to customize with data at runtime.
      description: Represents the data binding configuration for a form's input fields
        at runtime.You can use `FormInputBindingPropertiesValue` to add exposed properties
        to a form to allow different values to be entered when a form is reused in
        different places in an app.
    FormInputBindingPropertiesValueProperties:
      type: object
      properties:
        model:
          allOf:
          - $ref: '#/components/schemas/String'
          description: An Amplify DataStore model.
      description: Represents the data binding configuration for a specific property
        using data stored in Amazon Web Services. For Amazon Web Services connected
        properties, you can bind a property to data stored in an Amplify DataStore
        model.
    FormInputValueProperty:
      type: object
      properties:
        value:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The value to assign to the input field.
        bindingProperties:
          allOf:
          - $ref: '#/components/schemas/FormInputValuePropertyBindingProperties'
          description: The information to bind fields to data at runtime.
        concat:
          allOf:
          - $ref: '#/components/schemas/FormInputValuePropertyList'
          description: A list of form properties to concatenate to create the value
            to assign to this field property.
      description: Describes the configuration for an input field on a form. Use `FormInputValueProperty`
        to specify the values to render or bind by default.
    FormInputValuePropertyBindingProperties:
      type: object
      properties:
        property:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The form property to bind to the data field.
        field:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The data field to bind the property to.
      required:
      - property
      description: Associates a form property to a binding property. This enables
        exposed properties on the top level form to propagate data to the form's property
        values.
    FormInputValuePropertyList:
      type: array
      items:
        $ref: '#/components/schemas/FormInputValueProperty'
    FormList:
      type: array
      items:
        $ref: '#/components/schemas/Form'
    FormName:
      type: string
      minLength: 1
      maxLength: 255
    FormStyle:
      type: object
      properties:
        horizontalGap:
          allOf:
          - $ref: '#/components/schemas/FormStyleConfig'
          description: The spacing for the horizontal gap.
        verticalGap:
          allOf:
          - $ref: '#/components/schemas/FormStyleConfig'
          description: The spacing for the vertical gap.
        outerPadding:
          allOf:
          - $ref: '#/components/schemas/FormStyleConfig'
          description: The size of the outer padding for the form.
      description: Describes the configuration for the form's style.
    FormStyleConfig:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/String'
        description: |-
          A reference to a design token to use to bind the form's style properties to an existing theme.
      - allOf:
        - $ref: '#/components/schemas/String'
        description: |-
          The value of the style setting.
      description: |-
        Describes the configuration settings for the form's style properties.
    FormSummary:
      type: object
      properties:
        appId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique ID for the app associated with the form summary.
        dataType:
          allOf:
          - $ref: '#/components/schemas/FormDataTypeConfig'
          description: The form's data source type.
        environmentName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the backend environment that is part of the Amplify
            app.
        formActionType:
          allOf:
          - $ref: '#/components/schemas/FormActionType'
          description: The type of operation to perform on the form.
        id:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The ID of the form.
        name:
          allOf:
          - $ref: '#/components/schemas/FormName'
          description: The name of the form.
      required:
      - appId
      - dataType
      - environmentName
      - formActionType
      - id
      - name
      description: Describes the basic information about a form.
    FormSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/FormSummary'
    GenericDataRelationshipType:
      type: string
      enum:
      - HAS_MANY
      - HAS_ONE
      - BELONGS_TO
    GetCodegenJobRequest:
      type: object
      properties:
        appId:
          allOf:
          - $ref: '#/components/schemas/AppId'
          description: The unique ID of the Amplify app associated with the code generation
            job.
        environmentName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the backend environment that is a part of the Amplify
            app associated with the code generation job.
        id:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The unique ID of the code generation job.
      required:
      - appId
      - environmentName
      - id
    GetCodegenJobResponse:
      type: object
      properties:
        job:
          allOf:
          - $ref: '#/components/schemas/CodegenJob'
          description: The configuration settings for the code generation job.
    GetComponentRequest:
      type: object
      properties:
        appId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique ID of the Amplify app.
        environmentName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the backend environment that is part of the Amplify
            app.
        id:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The unique ID of the component.
      required:
      - appId
      - environmentName
      - id
    GetComponentResponse:
      type: object
      properties:
        component:
          allOf:
          - $ref: '#/components/schemas/Component'
          description: Represents the configuration settings for the component.
    GetFormRequest:
      type: object
      properties:
        appId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique ID of the Amplify app.
        environmentName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the backend environment that is part of the Amplify
            app.
        id:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The unique ID of the form.
      required:
      - appId
      - environmentName
      - id
    GetFormResponse:
      type: object
      properties:
        form:
          allOf:
          - $ref: '#/components/schemas/Form'
          description: Represents the configuration settings for the form.
    GetMetadataRequest:
      type: object
      properties:
        appId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique ID of the Amplify app.
        environmentName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the backend environment that is part of the Amplify
            app.
      required:
      - appId
      - environmentName
    GetMetadataResponse:
      type: object
      properties:
        features:
          allOf:
          - $ref: '#/components/schemas/FeaturesMap'
          description: Represents the configuration settings for the features metadata.
      required:
      - features
    GetThemeRequest:
      type: object
      properties:
        appId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique ID of the Amplify app.
        environmentName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the backend environment that is part of the Amplify
            app.
        id:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The unique ID for the theme.
      required:
      - appId
      - environmentName
      - id
    GetThemeResponse:
      type: object
      properties:
        theme:
          allOf:
          - $ref: '#/components/schemas/Theme'
          description: Represents the configuration settings for the theme.
    GraphQLRenderConfig:
      type: object
      properties:
        typesFilePath:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The path to the GraphQL types file, relative to the component
            output directory.
        queriesFilePath:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The path to the GraphQL queries file, relative to the component
            output directory.
        mutationsFilePath:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The path to the GraphQL mutations file, relative to the component
            output directory.
        subscriptionsFilePath:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The path to the GraphQL subscriptions file, relative to the
            component output directory.
        fragmentsFilePath:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The path to the GraphQL fragments file, relative to the component
            output directory.
      required:
      - typesFilePath
      - queriesFilePath
      - mutationsFilePath
      - subscriptionsFilePath
      - fragmentsFilePath
      description: Describes the GraphQL configuration for an API for a code generation
        job.
    IdentifierList:
      type: array
      items:
        type: string
    InternalServerException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      description: An internal error has occurred. Please retry your request.
    InvalidParameterException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      description: An invalid or out-of-range value was supplied for the input parameter.
    JSModule:
      type: string
      enum:
      - es2020
      - esnext
    JSScript:
      type: string
      enum:
      - jsx
      - tsx
      - js
    JSTarget:
      type: string
      enum:
      - es2015
      - es2020
    LabelDecorator:
      type: string
      enum:
      - required
      - optional
      - none
    ListCodegenJobsLimit:
      type: integer
      minimum: 1
      maximum: 100
    ListCodegenJobsRequest:
      type: object
      properties:
        appId:
          allOf:
          - $ref: '#/components/schemas/AppId'
          description: The unique ID for the Amplify app.
        environmentName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the backend environment that is a part of the Amplify
            app.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The token to request the next page of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/ListCodegenJobsLimit'
          description: The maximum number of jobs to retrieve.
      required:
      - appId
      - environmentName
    ListCodegenJobsResponse:
      type: object
      properties:
        entities:
          allOf:
          - $ref: '#/components/schemas/CodegenJobSummaryList'
          description: The list of code generation jobs for the Amplify app.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The pagination token that's included if more results are available.
      required:
      - entities
    ListComponentsRequest:
      type: object
      properties:
        appId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique ID for the Amplify app.
        environmentName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the backend environment that is a part of the Amplify
            app.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The token to request the next page of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/ListEntityLimit'
          description: The maximum number of components to retrieve.
      required:
      - appId
      - environmentName
    ListComponentsResponse:
      type: object
      properties:
        entities:
          allOf:
          - $ref: '#/components/schemas/ComponentSummaryList'
          description: The list of components for the Amplify app.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The pagination token that's included if more results are available.
      required:
      - entities
    ListEntityLimit:
      type: integer
      minimum: 1
      maximum: 100
    ListFormsRequest:
      type: object
      properties:
        appId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique ID for the Amplify app.
        environmentName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the backend environment that is a part of the Amplify
            app.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The token to request the next page of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/ListEntityLimit'
          description: The maximum number of forms to retrieve.
      required:
      - appId
      - environmentName
    ListFormsResponse:
      type: object
      properties:
        entities:
          allOf:
          - $ref: '#/components/schemas/FormSummaryList'
          description: The list of forms for the Amplify app.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The pagination token that's included if more results are available.
      required:
      - entities
    ListTagsForResourceRequest:
      type: object
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) to use to list tags.
      required:
      - resourceArn
    ListTagsForResourceResponse:
      type: object
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: A list of tag key value pairs for a specified Amazon Resource
            Name (ARN).
      required:
      - tags
    ListThemesRequest:
      type: object
      properties:
        appId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique ID for the Amplify app.
        environmentName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the backend environment that is a part of the Amplify
            app.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The token to request the next page of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/ListEntityLimit'
          description: The maximum number of theme results to return in the response.
      required:
      - appId
      - environmentName
    ListThemesResponse:
      type: object
      properties:
        entities:
          allOf:
          - $ref: '#/components/schemas/ThemeSummaryList'
          description: The list of themes for the Amplify app.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The pagination token that's returned if more results are available.
      required:
      - entities
    MutationActionSetStateParameter:
      type: object
      properties:
        componentName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the component that is being modified.
        property:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the component property to apply the state configuration
            to.
        set:
          allOf:
          - $ref: '#/components/schemas/ComponentProperty'
          description: The state configuration to assign to the property.
      required:
      - componentName
      - property
      - set
      description: Represents the state configuration when an action modifies a property
        of another element within the same component.
    NoApiRenderConfig:
      type: object
      properties: {}
      description: Describes the configuration for an application with no API being
        used.
    NumValues:
      type: array
      items:
        type: integer
    OperandType:
      type: string
      pattern: ^boolean|string|number$
    Predicate:
      type: object
      properties:
        or:
          allOf:
          - $ref: '#/components/schemas/PredicateList'
          description: A list of predicates to combine logically.
        and:
          allOf:
          - $ref: '#/components/schemas/PredicateList'
          description: A list of predicates to combine logically.
        field:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The field to query.
        operator:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The operator to use to perform the evaluation.
        operand:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The value to use when performing the evaluation.
        operandType:
          allOf:
          - $ref: '#/components/schemas/OperandType'
          description: The type of value to use when performing the evaluation.
      description: Stores information for generating Amplify DataStore queries. Use
        a `Predicate` to retrieve a subset of the data in a collection.
    PredicateList:
      type: array
      items:
        $ref: '#/components/schemas/Predicate'
    PutMetadataFlagBody:
      type: object
      properties:
        newValue:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The new information to store.
      required:
      - newValue
      description: Stores the metadata information about a feature on a form.
    PutMetadataFlagRequest:
      type: object
      properties:
        appId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique ID for the Amplify app.
        environmentName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the backend environment that is part of the Amplify
            app.
        featureName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the feature associated with the metadata.
        body:
          allOf:
          - $ref: '#/components/schemas/PutMetadataFlagBody'
          description: The metadata information to store.
      required:
      - appId
      - environmentName
      - featureName
      - body
    ReactCodegenDependencies:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/String'
      description: <p>Indicates the dependency version of the project code to be generated
        by Amazon Web Services Amplify. The version of the generated code output is
        determined by the version number contained in <code>aws-amplify</code>.</p>
    ReactStartCodegenJobData:
      type: object
      properties:
        module:
          allOf:
          - $ref: '#/components/schemas/JSModule'
          description: The JavaScript module type.
        target:
          allOf:
          - $ref: '#/components/schemas/JSTarget'
          description: The ECMAScript specification to use.
        script:
          allOf:
          - $ref: '#/components/schemas/JSScript'
          description: The file type to use for a JavaScript project.
        renderTypeDeclarations:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Specifies whether the code generation job should render type
            declaration files.
        inlineSourceMap:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Specifies whether the code generation job should render inline
            source maps.
        apiConfiguration:
          allOf:
          - $ref: '#/components/schemas/ApiConfiguration'
          description: The API configuration for the code generation job.
        dependencies:
          allOf:
          - $ref: '#/components/schemas/ReactCodegenDependencies'
          description: Lists the dependency packages that may be required for the
            project code to run.
      description: Describes the code generation job configuration for a React project.
    RefreshTokenRequest:
      type: object
      properties:
        provider:
          allOf:
          - $ref: '#/components/schemas/TokenProviders'
          description: The third-party provider for the token. The only valid value
            is `figma`.
        refreshTokenBody:
          allOf:
          - $ref: '#/components/schemas/RefreshTokenRequestBody'
          description: Information about the refresh token request.
      required:
      - provider
      - refreshTokenBody
    RefreshTokenRequestBody:
      type: object
      properties:
        token:
          allOf:
          - $ref: '#/components/schemas/SensitiveString'
          description: The token to use to refresh a previously issued access token
            that might have expired.
        clientId:
          allOf:
          - $ref: '#/components/schemas/SensitiveString'
          description: The ID of the client to request the token from.
      required:
      - token
      description: Describes a refresh token.
    RefreshTokenResponse:
      type: object
      properties:
        accessToken:
          allOf:
          - $ref: '#/components/schemas/SensitiveString'
          description: The access token.
        expiresIn:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The date and time when the new access token expires.
      required:
      - accessToken
      - expiresIn
    RelatedModelFieldsList:
      type: array
      items:
        type: string
    ResourceConflictException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      description: The resource specified in the request conflicts with an existing
        resource.
    ResourceNotFoundException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      description: The requested resource does not exist, or access was denied.
    SectionalElement:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The type of sectional element. Valid values are `Heading`,
            `Text`, and `Divider`.
        position:
          allOf:
          - $ref: '#/components/schemas/FieldPosition'
          description: Specifies the position of the text in a field for a `Text`
            sectional element.
        text:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The text for a `Text` sectional element.
        level:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: Specifies the size of the font for a `Heading` sectional element.
            Valid values are `1 | 2 | 3 | 4 | 5 | 6`.
        orientation:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Specifies the orientation for a `Divider` sectional element.
            Valid values are `horizontal` or `vertical`.
        excluded:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Excludes a sectional element that was generated by default
            for a specified data model.
      required:
      - type
      description: Stores the configuration information for a visual helper element
        for a form. A sectional element can be a header, a text block, or a divider.
        These elements are static and not associated with any data.
    SectionalElementMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/SectionalElement'
    SensitiveString:
      type: string
    ServiceQuotaExceededException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      description: You exceeded your service quota. Service quotas, also referred
        to as limits, are the maximum number of service resources or operations for
        your Amazon Web Services account.
    SortDirection:
      type: string
      enum:
      - ASC
      - DESC
    SortProperty:
      type: object
      properties:
        field:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The field to perform the sort on.
        direction:
          allOf:
          - $ref: '#/components/schemas/SortDirection'
          description: The direction of the sort, either ascending or descending.
      required:
      - field
      - direction
      description: Describes how to sort the data that you bind to a component.
    SortPropertyList:
      type: array
      items:
        $ref: '#/components/schemas/SortProperty'
    StartCodegenJobData:
      type: object
      properties:
        renderConfig:
          allOf:
          - $ref: '#/components/schemas/CodegenJobRenderConfig'
          description: The code generation configuration for the codegen job.
        genericDataSchema:
          allOf:
          - $ref: '#/components/schemas/CodegenJobGenericDataSchema'
          description: The data schema to use for a code generation job.
        autoGenerateForms:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Specifies whether to autogenerate forms in the code generation
            job.
        features:
          allOf:
          - $ref: '#/components/schemas/CodegenFeatureFlags'
          description: The feature flags for a code generation job.
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: One or more key-value pairs to use when tagging the code generation
            job data.
      required:
      - renderConfig
      description: The code generation job resource configuration.
    StartCodegenJobRequest:
      type: object
      properties:
        appId:
          allOf:
          - $ref: '#/components/schemas/AppId'
          description: The unique ID for the Amplify app.
        environmentName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the backend environment that is a part of the Amplify
            app.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The idempotency token used to ensure that the code generation
            job request completes only once.
        codegenJobToCreate:
          allOf:
          - $ref: '#/components/schemas/StartCodegenJobData'
          description: The code generation job resource configuration.
      required:
      - appId
      - environmentName
      - codegenJobToCreate
    StartCodegenJobResponse:
      type: object
      properties:
        entity:
          allOf:
          - $ref: '#/components/schemas/CodegenJob'
          description: The code generation job for a UI component that is associated
            with an Amplify app.
    StorageAccessLevel:
      type: string
      enum:
      - public
      - protected
      - private
    StrValues:
      type: array
      items:
        type: string
    TagKey:
      type: string
      pattern: ^(?!aws:)[a-zA-Z+-=._:/]+$
      minLength: 1
      maxLength: 128
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
    TagResourceRequest:
      type: object
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) to use to tag a resource.
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: A list of tag key value pairs for a specified Amazon Resource
            Name (ARN).
      required:
      - resourceArn
      - tags
    TagResourceResponse:
      type: object
      properties: {}
    TagValue:
      type: string
      minLength: 1
      maxLength: 256
    Tags:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
    Theme:
      type: object
      properties:
        appId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique ID for the Amplify app associated with the theme.
        environmentName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the backend environment that is a part of the Amplify
            app.
        id:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The ID for the theme.
        name:
          allOf:
          - $ref: '#/components/schemas/ThemeName'
          description: The name of the theme.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time that the theme was created.
        modifiedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time that the theme was modified.
        values:
          allOf:
          - $ref: '#/components/schemas/ThemeValuesList'
          description: A list of key-value pairs that defines the properties of the
            theme.
        overrides:
          allOf:
          - $ref: '#/components/schemas/ThemeValuesList'
          description: Describes the properties that can be overriden to customize
            a theme.
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: One or more key-value pairs to use when tagging the theme.
      required:
      - appId
      - environmentName
      - id
      - name
      - createdAt
      - values
      description: A theme is a collection of style settings that apply globally to
        the components associated with an Amplify application.
    ThemeList:
      type: array
      items:
        $ref: '#/components/schemas/Theme'
    ThemeName:
      type: string
      minLength: 1
      maxLength: 255
    ThemeSummary:
      type: object
      properties:
        appId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique ID for the app associated with the theme summary.
        environmentName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the backend environment that is part of the Amplify
            app.
        id:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The ID of the theme.
        name:
          allOf:
          - $ref: '#/components/schemas/ThemeName'
          description: The name of the theme.
      required:
      - appId
      - environmentName
      - id
      - name
      description: Describes the basic information about a theme.
    ThemeSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/ThemeSummary'
    ThemeValue:
      type: object
      properties:
        value:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The value of a theme property.
        children:
          allOf:
          - $ref: '#/components/schemas/ThemeValuesList'
          description: A list of key-value pairs that define the theme's properties.
      description: Describes the configuration of a theme's properties.
    ThemeValues:
      type: object
      properties:
        key:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the property.
        value:
          allOf:
          - $ref: '#/components/schemas/ThemeValue'
          description: The value of the property.
      description: A key-value pair that defines a property of a theme.
    ThemeValuesList:
      type: array
      items:
        $ref: '#/components/schemas/ThemeValues'
    ThrottlingException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      description: The request was denied due to request throttling.
    TokenProviders:
      type: string
      enum:
      - figma
    UnauthorizedException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      description: You don't have permission to perform this operation.
    UntagResourceRequest:
      type: object
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) to use to untag a resource.
        tagKeys:
          allOf:
          - $ref: '#/components/schemas/TagKeyList'
          description: The tag keys to use to untag a resource.
      required:
      - resourceArn
      - tagKeys
    UntagResourceResponse:
      type: object
      properties: {}
    UpdateComponentData:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The unique ID of the component to update.
        name:
          allOf:
          - $ref: '#/components/schemas/ComponentName'
          description: The name of the component to update.
        sourceId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique ID of the component in its original source system,
            such as Figma.
        componentType:
          allOf:
          - $ref: '#/components/schemas/ComponentType'
          description: The type of the component. This can be an Amplify custom UI
            component or another custom component.
        properties:
          allOf:
          - $ref: '#/components/schemas/ComponentProperties'
          description: Describes the component's properties.
        children:
          allOf:
          - $ref: '#/components/schemas/ComponentChildList'
          description: The components that are instances of the main component.
        variants:
          allOf:
          - $ref: '#/components/schemas/ComponentVariants'
          description: A list of the unique variants of the main component being updated.
        overrides:
          allOf:
          - $ref: '#/components/schemas/ComponentOverrides'
          description: Describes the properties that can be overriden to customize
            the component.
        bindingProperties:
          allOf:
          - $ref: '#/components/schemas/ComponentBindingProperties'
          description: The data binding information for the component's properties.
        collectionProperties:
          allOf:
          - $ref: '#/components/schemas/ComponentCollectionProperties'
          description: The configuration for binding a component's properties to a
            data model. Use this for a collection component.
        events:
          allOf:
          - $ref: '#/components/schemas/ComponentEvents'
          description: The event configuration for the component. Use for the workflow
            feature in Amplify Studio that allows you to bind events and actions to
            components.
        schemaVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The schema version of the component when it was imported.
      description: Updates and saves all of the information about a component, based
        on component ID.
    UpdateComponentRequest:
      type: object
      properties:
        appId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique ID for the Amplify app.
        environmentName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the backend environment that is part of the Amplify
            app.
        id:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The unique ID for the component.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique client token.
        updatedComponent:
          allOf:
          - $ref: '#/components/schemas/UpdateComponentData'
          description: The configuration of the updated component.
      required:
      - appId
      - environmentName
      - id
      - updatedComponent
    UpdateComponentResponse:
      type: object
      properties:
        entity:
          allOf:
          - $ref: '#/components/schemas/Component'
          description: Describes the configuration of the updated component.
    UpdateFormData:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/FormName'
          description: The name of the form.
        dataType:
          allOf:
          - $ref: '#/components/schemas/FormDataTypeConfig'
          description: The type of data source to use to create the form.
        formActionType:
          allOf:
          - $ref: '#/components/schemas/FormActionType'
          description: Specifies whether to perform a create or update action on the
            form.
        fields:
          allOf:
          - $ref: '#/components/schemas/FieldsMap'
          description: The configuration information for the form's fields.
        style:
          allOf:
          - $ref: '#/components/schemas/FormStyle'
          description: The configuration for the form's style.
        sectionalElements:
          allOf:
          - $ref: '#/components/schemas/SectionalElementMap'
          description: The configuration information for the visual helper elements
            for the form. These elements are not associated with any data.
        schemaVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The schema version of the form.
        cta:
          allOf:
          - $ref: '#/components/schemas/FormCTA'
          description: The `FormCTA` object that stores the call to action configuration
            for the form.
        labelDecorator:
          allOf:
          - $ref: '#/components/schemas/LabelDecorator'
          description: Specifies an icon or decoration to display on the form.
      description: Updates and saves all of the information about a form, based on
        form ID.
    UpdateFormRequest:
      type: object
      properties:
        appId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique ID for the Amplify app.
        environmentName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the backend environment that is part of the Amplify
            app.
        id:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The unique ID for the form.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique client token.
        updatedForm:
          allOf:
          - $ref: '#/components/schemas/UpdateFormData'
          description: The request accepts the following data in JSON format.
      required:
      - appId
      - environmentName
      - id
      - updatedForm
    UpdateFormResponse:
      type: object
      properties:
        entity:
          allOf:
          - $ref: '#/components/schemas/Form'
          description: Describes the configuration of the updated form.
    UpdateThemeData:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The unique ID of the theme to update.
        name:
          allOf:
          - $ref: '#/components/schemas/ThemeName'
          description: The name of the theme to update.
        values:
          allOf:
          - $ref: '#/components/schemas/ThemeValuesList'
          description: A list of key-value pairs that define the theme's properties.
        overrides:
          allOf:
          - $ref: '#/components/schemas/ThemeValuesList'
          description: Describes the properties that can be overriden to customize
            the theme.
      required:
      - values
      description: Saves the data binding information for a theme.
    UpdateThemeRequest:
      type: object
      properties:
        appId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique ID for the Amplify app.
        environmentName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the backend environment that is part of the Amplify
            app.
        id:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The unique ID for the theme.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique client token.
        updatedTheme:
          allOf:
          - $ref: '#/components/schemas/UpdateThemeData'
          description: The configuration of the updated theme.
      required:
      - appId
      - environmentName
      - id
      - updatedTheme
    UpdateThemeResponse:
      type: object
      properties:
        entity:
          allOf:
          - $ref: '#/components/schemas/Theme'
          description: Describes the configuration of the updated theme.
    Uuid:
      type: string
    ValidationsList:
      type: array
      items:
        $ref: '#/components/schemas/FieldValidationConfiguration'
    ValueMapping:
      type: object
      properties:
        displayValue:
          allOf:
          - $ref: '#/components/schemas/FormInputValueProperty'
          description: The value to display for the complex object.
        value:
          allOf:
          - $ref: '#/components/schemas/FormInputValueProperty'
          description: The complex object.
      required:
      - value
      description: Associates a complex object with a display value. Use `ValueMapping`
        to store how to represent complex objects when they are displayed.
    ValueMappingList:
      type: array
      items:
        $ref: '#/components/schemas/ValueMapping'
    ValueMappings:
      type: object
      properties:
        values:
          allOf:
          - $ref: '#/components/schemas/ValueMappingList'
          description: The value and display value pairs.
        bindingProperties:
          allOf:
          - $ref: '#/components/schemas/FormInputBindingProperties'
          description: The information to bind fields to data at runtime.
      required:
      - values
      description: Represents the data binding configuration for a value map.
