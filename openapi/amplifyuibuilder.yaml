openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: amplifyuibuilder
  x-aws-serviceName: amplifyuibuilder
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-05'
  version: '2021-08-11'
  title: AWS Amplify UI Builder
  description: |-
    The Amplify UI Builder API provides a programmatic interface for creating and configuring user interface (UI) component libraries and themes for use in your Amplify applications. You can then connect these UI components to an application's backend Amazon Web Services resources.

    You can also use the Amplify Studio visual designer to create UI components and model data for an app. For more information, see [Introduction](https://docs.amplify.aws/console/adminui/intro) in the _Amplify Docs_.

    The Amplify Framework is a comprehensive set of SDKs, libraries, tools, and documentation for client app development. For more information, see the [Amplify Framework](https://docs.amplify.aws/). For more information about deploying an Amplify application to Amazon Web Services, see the [Amplify User Guide](https://docs.aws.amazon.com/amplify/latest/userguide/welcome.html).
servers:
- description: The AWS Amplify UI Builder regional endpoint
  url: https://amplifyuibuilder.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths: {}
components:
  schemas:
    ApiConfiguration:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/GraphQLRenderConfig'
        description: |-
          The configuration for an application using GraphQL APIs.
      - allOf:
        - $ref: '#/components/schemas/DataStoreRenderConfig'
        description: |-
          The configuration for an application using DataStore APIs.
      - allOf:
        - $ref: '#/components/schemas/NoApiRenderConfig'
        description: |-
          The configuration for an application with no API being used.
      description: |-
        Describes the API configuration for a code generation job.
    AppId:
      type: string
      pattern: ^d[a-z0-9]+$
      minLength: 1
      maxLength: 20
    AssociatedFieldsList:
      type: array
      items:
        type: string
    CodegenDependencies:
      type: array
      items:
        $ref: '#/components/schemas/CodegenDependency'
    CodegenGenericDataEnumValuesList:
      type: array
      items:
        type: string
    CodegenGenericDataEnums:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/CodegenGenericDataEnum'
    CodegenGenericDataFieldDataType:
      type: string
      enum:
      - ID
      - String
      - Int
      - Float
      - AWSDate
      - AWSTime
      - AWSDateTime
      - AWSTimestamp
      - AWSEmail
      - AWSURL
      - AWSIPAddress
      - Boolean
      - AWSJSON
      - AWSPhone
      - Enum
      - Model
      - NonModel
    CodegenGenericDataFields:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/CodegenGenericDataField'
    CodegenGenericDataModels:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/CodegenGenericDataModel'
    CodegenGenericDataNonModelFields:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/CodegenGenericDataField'
    CodegenGenericDataNonModels:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/CodegenGenericDataNonModel'
    CodegenJobGenericDataSourceType:
      type: string
      enum:
      - DataStore
    CodegenJobRenderConfig:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/ReactStartCodegenJobData'
        description: |-
          The name of the `ReactStartCodegenJobData` object.
      description: |-
        Describes the configuration information for rendering the UI component associated with the code generation job.
    CodegenJobStatus:
      type: string
      enum:
      - in_progress
      - failed
      - succeeded
    CodegenJobSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/CodegenJobSummary'
    CodegenPrimaryKeysList:
      type: array
      items:
        type: string
    ComponentBindingProperties:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/ComponentBindingPropertiesValue'
    ComponentChildList:
      type: array
      items:
        $ref: '#/components/schemas/ComponentChild'
    ComponentCollectionProperties:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/ComponentDataConfiguration'
    ComponentEvents:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/ComponentEvent'
    ComponentList:
      type: array
      items:
        $ref: '#/components/schemas/Component'
    ComponentName:
      type: string
      minLength: 1
      maxLength: 255
    ComponentOverrides:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/ComponentOverridesValue'
    ComponentOverridesValue:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/String'
    ComponentProperties:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/ComponentProperty'
    ComponentPropertyList:
      type: array
      items:
        $ref: '#/components/schemas/ComponentProperty'
    ComponentSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/ComponentSummary'
    ComponentType:
      type: string
      minLength: 1
      maxLength: 255
    ComponentVariantValues:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/String'
    ComponentVariants:
      type: array
      items:
        $ref: '#/components/schemas/ComponentVariant'
    FeaturesMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/String'
    FieldPosition:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/FixedPosition'
        description: |-
          The field position is fixed and doesn't change in relation to other fields.
      - allOf:
        - $ref: '#/components/schemas/String'
        description: |-
          The field position is to the right of the field specified by the string.
      - allOf:
        - $ref: '#/components/schemas/String'
        description: |-
          The field position is below the field specified by the string.
      description: |-
        Describes the field position.
    FieldsMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/FieldConfig'
    FixedPosition:
      type: string
      enum:
      - first
    FormActionType:
      type: string
      enum:
      - create
      - update
    FormBindings:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/FormBindingElement'
    FormButtonsPosition:
      type: string
      enum:
      - top
      - bottom
      - top_and_bottom
    FormDataSourceType:
      type: string
      enum:
      - DataStore
      - Custom
    FormInputBindingProperties:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/FormInputBindingPropertiesValue'
    FormInputValuePropertyList:
      type: array
      items:
        $ref: '#/components/schemas/FormInputValueProperty'
    FormList:
      type: array
      items:
        $ref: '#/components/schemas/Form'
    FormName:
      type: string
      minLength: 1
      maxLength: 255
    FormStyleConfig:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/String'
        description: |-
          A reference to a design token to use to bind the form's style properties to an existing theme.
      - allOf:
        - $ref: '#/components/schemas/String'
        description: |-
          The value of the style setting.
      description: |-
        Describes the configuration settings for the form's style properties.
    FormSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/FormSummary'
    GenericDataRelationshipType:
      type: string
      enum:
      - HAS_MANY
      - HAS_ONE
      - BELONGS_TO
    IdentifierList:
      type: array
      items:
        type: string
    JSModule:
      type: string
      enum:
      - es2020
      - esnext
    JSScript:
      type: string
      enum:
      - jsx
      - tsx
      - js
    JSTarget:
      type: string
      enum:
      - es2015
      - es2020
    LabelDecorator:
      type: string
      enum:
      - required
      - optional
      - none
    ListCodegenJobsLimit:
      type: integer
      minimum: 1
      maximum: 100
    ListEntityLimit:
      type: integer
      minimum: 1
      maximum: 100
    NumValues:
      type: array
      items:
        type: integer
    OperandType:
      type: string
      pattern: ^boolean|string|number$
    PredicateList:
      type: array
      items:
        $ref: '#/components/schemas/Predicate'
    ReactCodegenDependencies:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/String'
      description: <p>Indicates the dependency version of the project code to be generated
        by Amazon Web Services Amplify. The version of the generated code output is
        determined by the version number contained in <code>aws-amplify</code>.</p>
    RelatedModelFieldsList:
      type: array
      items:
        type: string
    SectionalElementMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/SectionalElement'
    SensitiveString:
      type: string
    SortDirection:
      type: string
      enum:
      - ASC
      - DESC
    SortPropertyList:
      type: array
      items:
        $ref: '#/components/schemas/SortProperty'
    StorageAccessLevel:
      type: string
      enum:
      - public
      - protected
      - private
    StrValues:
      type: array
      items:
        type: string
    TagKey:
      type: string
      pattern: ^(?!aws:)[a-zA-Z+-=._:/]+$
      minLength: 1
      maxLength: 128
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
    TagValue:
      type: string
      minLength: 1
      maxLength: 256
    Tags:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
    ThemeList:
      type: array
      items:
        $ref: '#/components/schemas/Theme'
    ThemeName:
      type: string
      minLength: 1
      maxLength: 255
    ThemeSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/ThemeSummary'
    ThemeValuesList:
      type: array
      items:
        $ref: '#/components/schemas/ThemeValues'
    TokenProviders:
      type: string
      enum:
      - figma
    Uuid:
      type: string
    ValidationsList:
      type: array
      items:
        $ref: '#/components/schemas/FieldValidationConfiguration'
    ValueMappingList:
      type: array
      items:
        $ref: '#/components/schemas/ValueMapping'
