openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: cleanrooms
  x-aws-serviceName: cleanrooms
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-07'
  version: '2022-02-17'
  title: AWS Clean Rooms Service
  description: |-
    Welcome to the _Clean Rooms API Reference_.

    Clean Rooms is an Amazon Web Services service that helps multiple parties to join their data together in a secure collaboration workspace. In the collaboration, members who can run queries and jobs and receive results can get insights into the collective datasets without either party getting access to the other party's raw data.

    To learn more about Clean Rooms concepts, procedures, and best practices, see the [Clean Rooms User Guide](https://docs.aws.amazon.com/clean-rooms/latest/userguide/what-is.html).

    To learn more about SQL commands, functions, and conditions supported in Clean Rooms, see the [Clean Rooms SQL Reference](https://docs.aws.amazon.com/clean-rooms/latest/sql-reference/sql-reference.html).
servers:
- description: The AWS Clean Rooms Service regional endpoint
  url: https://cleanrooms.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths:
  /collaborations/{collaborationIdentifier}/batch-analysistemplates:
    post:
      operationId: BatchGetCollaborationAnalysisTemplate
      description: |-
        Retrieves multiple analysis templates within a collaboration by their Amazon Resource Names (ARNs).
      parameters:
      - name: collaborationIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CollaborationIdentifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                analysisTemplateArns:
                  $ref: '#/components/schemas/AnalysisTemplateArnList'
      responses:
        '200': {}
        '403':
          description: |-
            Caller does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Unexpected error during processing of request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /collaborations/{collaborationIdentifier}/batch-schema:
    post:
      operationId: BatchGetSchema
      description: |-
        Retrieves multiple schemas by their identifiers.
      parameters:
      - name: collaborationIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CollaborationIdentifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                names:
                  $ref: '#/components/schemas/TableAliasList'
      responses:
        '200': {}
        '403':
          description: |-
            Caller does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Unexpected error during processing of request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /collaborations/{collaborationIdentifier}/batch-schema-analysis-rule:
    post:
      operationId: BatchGetSchemaAnalysisRule
      description: |-
        Retrieves multiple analysis rule schemas.
      parameters:
      - name: collaborationIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CollaborationIdentifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                schemaAnalysisRuleRequests:
                  $ref: '#/components/schemas/SchemaAnalysisRuleRequestList'
      responses:
        '200': {}
        '403':
          description: |-
            Caller does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Unexpected error during processing of request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /memberships/{membershipIdentifier}/analysistemplates:
    post:
      operationId: CreateAnalysisTemplate
      description: |-
        Creates a new analysis template.
      parameters:
      - name: membershipIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MembershipIdentifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  $ref: '#/components/schemas/ResourceDescription'
                name:
                  $ref: '#/components/schemas/TableAlias'
                format:
                  $ref: '#/components/schemas/AnalysisFormat'
                source:
                  $ref: '#/components/schemas/AnalysisSource'
                tags:
                  $ref: '#/components/schemas/TagMap'
                analysisParameters:
                  $ref: '#/components/schemas/AnalysisParameterList'
                schema:
                  $ref: '#/components/schemas/AnalysisSchema'
      responses:
        '200': {}
        '403':
          description: |-
            Caller does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Updating or deleting a resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Unexpected error during processing of request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            Request denied because service quota has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: ListAnalysisTemplates
      description: |-
        Lists analysis templates that the caller owns.
      parameters:
      - name: membershipIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MembershipIdentifier'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PaginationToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            Caller does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Unexpected error during processing of request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /collaborations:
    post:
      operationId: CreateCollaboration
      description: |-
        Creates a new collaboration.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                members:
                  $ref: '#/components/schemas/MemberList'
                name:
                  $ref: '#/components/schemas/CollaborationName'
                description:
                  $ref: '#/components/schemas/CollaborationDescription'
                creatorMemberAbilities:
                  $ref: '#/components/schemas/MemberAbilities'
                creatorMLMemberAbilities:
                  $ref: '#/components/schemas/MLMemberAbilities'
                creatorDisplayName:
                  $ref: '#/components/schemas/DisplayName'
                dataEncryptionMetadata:
                  $ref: '#/components/schemas/DataEncryptionMetadata'
                queryLogStatus:
                  $ref: '#/components/schemas/CollaborationQueryLogStatus'
                jobLogStatus:
                  $ref: '#/components/schemas/CollaborationJobLogStatus'
                tags:
                  $ref: '#/components/schemas/TagMap'
                creatorPaymentConfiguration:
                  $ref: '#/components/schemas/PaymentConfiguration'
                analyticsEngine:
                  $ref: '#/components/schemas/AnalyticsEngine'
      responses:
        '200': {}
        '403':
          description: |-
            Caller does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Unexpected error during processing of request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '402':
          description: |-
            Request denied because service quota has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: ListCollaborations
      description: |-
        Lists collaborations the caller owns, is active in, or has been invited to.
      parameters:
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PaginationToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: memberStatus
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/FilterableMemberStatus'
      responses:
        '200': {}
        '403':
          description: |-
            Caller does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Unexpected error during processing of request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /memberships/{membershipIdentifier}/configuredaudiencemodelassociations:
    post:
      operationId: CreateConfiguredAudienceModelAssociation
      description: |-
        Provides the details necessary to create a configured audience model association.
      parameters:
      - name: membershipIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MembershipIdentifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                configuredAudienceModelArn:
                  $ref: '#/components/schemas/ConfiguredAudienceModelArn'
                configuredAudienceModelAssociationName:
                  $ref: '#/components/schemas/ConfiguredAudienceModelAssociationName'
                manageResourcePolicies:
                  $ref: '#/components/schemas/Boolean'
                tags:
                  $ref: '#/components/schemas/TagMap'
                description:
                  $ref: '#/components/schemas/ResourceDescription'
      responses:
        '200': {}
        '403':
          description: |-
            Caller does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Updating or deleting a resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Unexpected error during processing of request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            Request denied because service quota has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: ListConfiguredAudienceModelAssociations
      description: |-
        Lists information about requested configured audience model associations.
      parameters:
      - name: membershipIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MembershipIdentifier'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PaginationToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            Caller does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Unexpected error during processing of request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /configuredTables:
    post:
      operationId: CreateConfiguredTable
      description: |-
        Creates a new configured table resource.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  $ref: '#/components/schemas/DisplayName'
                description:
                  $ref: '#/components/schemas/TableDescription'
                tableReference:
                  $ref: '#/components/schemas/TableReference'
                allowedColumns:
                  $ref: '#/components/schemas/AllowedColumnList'
                analysisMethod:
                  $ref: '#/components/schemas/AnalysisMethod'
                selectedAnalysisMethods:
                  $ref: '#/components/schemas/SelectedAnalysisMethods'
                tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '200': {}
        '403':
          description: |-
            Caller does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Updating or deleting a resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Unexpected error during processing of request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            Request denied because service quota has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: ListConfiguredTables
      description: |-
        Lists configured tables.
      parameters:
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PaginationToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            Caller does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Unexpected error during processing of request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /configuredTables/{configuredTableIdentifier}/analysisRule:
    post:
      operationId: CreateConfiguredTableAnalysisRule
      description: |-
        Creates a new analysis rule for a configured table. Currently, only one analysis rule can be created for a given configured table.
      parameters:
      - name: configuredTableIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ConfiguredTableIdentifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                analysisRuleType:
                  $ref: '#/components/schemas/ConfiguredTableAnalysisRuleType'
                analysisRulePolicy:
                  $ref: '#/components/schemas/ConfiguredTableAnalysisRulePolicy'
      responses:
        '200': {}
        '403':
          description: |-
            Caller does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Updating or deleting a resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Unexpected error during processing of request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            Request denied because service quota has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /memberships/{membershipIdentifier}/configuredTableAssociations:
    post:
      operationId: CreateConfiguredTableAssociation
      description: |-
        Creates a configured table association. A configured table association links a configured table with a collaboration.
      parameters:
      - name: membershipIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MembershipIdentifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  $ref: '#/components/schemas/TableAlias'
                description:
                  $ref: '#/components/schemas/TableDescription'
                configuredTableIdentifier:
                  $ref: '#/components/schemas/ConfiguredTableIdentifier'
                roleArn:
                  $ref: '#/components/schemas/RoleArn'
                tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '200': {}
        '403':
          description: |-
            Caller does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Updating or deleting a resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Unexpected error during processing of request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            Request denied because service quota has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: ListConfiguredTableAssociations
      description: |-
        Lists configured table associations for a membership.
      parameters:
      - name: membershipIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MembershipIdentifier'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PaginationToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            Caller does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Unexpected error during processing of request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /memberships/{membershipIdentifier}/configuredTableAssociations/{configuredTableAssociationIdentifier}/analysisRule:
    post:
      operationId: CreateConfiguredTableAssociationAnalysisRule
      description: |-
        Creates a new analysis rule for an associated configured table.
      parameters:
      - name: membershipIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MembershipIdentifier'
      - name: configuredTableAssociationIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ConfiguredTableAssociationIdentifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                analysisRuleType:
                  $ref: '#/components/schemas/ConfiguredTableAssociationAnalysisRuleType'
                analysisRulePolicy:
                  $ref: '#/components/schemas/ConfiguredTableAssociationAnalysisRulePolicy'
      responses:
        '200': {}
        '403':
          description: |-
            Caller does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Updating or deleting a resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Unexpected error during processing of request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /memberships/{membershipIdentifier}/idmappingtables:
    post:
      operationId: CreateIdMappingTable
      description: |-
        Creates an ID mapping table.
      parameters:
      - name: membershipIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MembershipIdentifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  $ref: '#/components/schemas/ResourceAlias'
                description:
                  $ref: '#/components/schemas/ResourceDescription'
                inputReferenceConfig:
                  $ref: '#/components/schemas/IdMappingTableInputReferenceConfig'
                tags:
                  $ref: '#/components/schemas/TagMap'
                kmsKeyArn:
                  $ref: '#/components/schemas/KMSKeyArn'
      responses:
        '200': {}
        '403':
          description: |-
            Caller does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Updating or deleting a resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Unexpected error during processing of request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            Request denied because service quota has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: ListIdMappingTables
      description: |-
        Returns a list of ID mapping tables.
      parameters:
      - name: membershipIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MembershipIdentifier'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PaginationToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            Caller does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Unexpected error during processing of request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /memberships/{membershipIdentifier}/idnamespaceassociations:
    post:
      operationId: CreateIdNamespaceAssociation
      description: |-
        Creates an ID namespace association.
      parameters:
      - name: membershipIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MembershipIdentifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                inputReferenceConfig:
                  $ref: '#/components/schemas/IdNamespaceAssociationInputReferenceConfig'
                tags:
                  $ref: '#/components/schemas/TagMap'
                name:
                  $ref: '#/components/schemas/GenericResourceName'
                description:
                  $ref: '#/components/schemas/ResourceDescription'
                idMappingConfig:
                  $ref: '#/components/schemas/IdMappingConfig'
      responses:
        '200': {}
        '403':
          description: |-
            Caller does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Updating or deleting a resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Unexpected error during processing of request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            Request denied because service quota has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: ListIdNamespaceAssociations
      description: |-
        Returns a list of ID namespace associations.
      parameters:
      - name: membershipIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MembershipIdentifier'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PaginationToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            Caller does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Unexpected error during processing of request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /memberships:
    post:
      operationId: CreateMembership
      description: |-
        Creates a membership for a specific collaboration identifier and joins the collaboration.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                collaborationIdentifier:
                  $ref: '#/components/schemas/CollaborationIdentifier'
                queryLogStatus:
                  $ref: '#/components/schemas/MembershipQueryLogStatus'
                jobLogStatus:
                  $ref: '#/components/schemas/MembershipJobLogStatus'
                tags:
                  $ref: '#/components/schemas/TagMap'
                defaultResultConfiguration:
                  $ref: '#/components/schemas/MembershipProtectedQueryResultConfiguration'
                defaultJobResultConfiguration:
                  $ref: '#/components/schemas/MembershipProtectedJobResultConfiguration'
                paymentConfiguration:
                  $ref: '#/components/schemas/MembershipPaymentConfiguration'
      responses:
        '200': {}
        '403':
          description: |-
            Caller does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Updating or deleting a resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Unexpected error during processing of request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            Request denied because service quota has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: ListMemberships
      description: |-
        Lists all memberships resources within the caller's account.
      parameters:
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PaginationToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: status
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MembershipStatus'
      responses:
        '200': {}
        '403':
          description: |-
            Caller does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Unexpected error during processing of request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /memberships/{membershipIdentifier}/privacybudgettemplates:
    post:
      operationId: CreatePrivacyBudgetTemplate
      description: |-
        Creates a privacy budget template for a specified membership. Each membership can have only one privacy budget template, but it can be deleted and recreated. If you need to change the privacy budget template for a membership, use the UpdatePrivacyBudgetTemplate operation.
      parameters:
      - name: membershipIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MembershipIdentifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                autoRefresh:
                  $ref: '#/components/schemas/PrivacyBudgetTemplateAutoRefresh'
                privacyBudgetType:
                  $ref: '#/components/schemas/PrivacyBudgetType'
                parameters:
                  $ref: '#/components/schemas/PrivacyBudgetTemplateParametersInput'
                tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '200': {}
        '403':
          description: |-
            Caller does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Updating or deleting a resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Unexpected error during processing of request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: ListPrivacyBudgetTemplates
      description: |-
        Returns detailed information about the privacy budget templates in a specified membership.
      parameters:
      - name: membershipIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MembershipIdentifier'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PaginationToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            Caller does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Unexpected error during processing of request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /memberships/{membershipIdentifier}/analysistemplates/{analysisTemplateIdentifier}:
    delete:
      operationId: DeleteAnalysisTemplate
      description: |-
        Deletes an analysis template.
      parameters:
      - name: membershipIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MembershipIdentifier'
      - name: analysisTemplateIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AnalysisTemplateIdentifier'
      responses:
        '204': {}
        '403':
          description: |-
            Caller does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Unexpected error during processing of request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetAnalysisTemplate
      description: |-
        Retrieves an analysis template.
      parameters:
      - name: membershipIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MembershipIdentifier'
      - name: analysisTemplateIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AnalysisTemplateIdentifier'
      responses:
        '200': {}
        '403':
          description: |-
            Caller does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Unexpected error during processing of request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    patch:
      operationId: UpdateAnalysisTemplate
      description: |-
        Updates the analysis template metadata.
      parameters:
      - name: membershipIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MembershipIdentifier'
      - name: analysisTemplateIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AnalysisTemplateIdentifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  $ref: '#/components/schemas/ResourceDescription'
      responses:
        '200': {}
        '403':
          description: |-
            Caller does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Unexpected error during processing of request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /collaborations/{collaborationIdentifier}:
    delete:
      operationId: DeleteCollaboration
      description: |-
        Deletes a collaboration. It can only be called by the collaboration owner.
      parameters:
      - name: collaborationIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CollaborationIdentifier'
      responses:
        '204': {}
        '403':
          description: |-
            Caller does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Unexpected error during processing of request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetCollaboration
      description: |-
        Returns metadata about a collaboration.
      parameters:
      - name: collaborationIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CollaborationIdentifier'
      responses:
        '200': {}
        '403':
          description: |-
            Caller does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Unexpected error during processing of request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    patch:
      operationId: UpdateCollaboration
      description: |-
        Updates collaboration metadata and can only be called by the collaboration owner.
      parameters:
      - name: collaborationIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CollaborationIdentifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  $ref: '#/components/schemas/CollaborationName'
                description:
                  $ref: '#/components/schemas/CollaborationDescription'
                analyticsEngine:
                  $ref: '#/components/schemas/AnalyticsEngine'
      responses:
        '200': {}
        '403':
          description: |-
            Caller does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Unexpected error during processing of request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /memberships/{membershipIdentifier}/configuredaudiencemodelassociations/{configuredAudienceModelAssociationIdentifier}:
    delete:
      operationId: DeleteConfiguredAudienceModelAssociation
      description: |-
        Provides the information necessary to delete a configured audience model association.
      parameters:
      - name: configuredAudienceModelAssociationIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ConfiguredAudienceModelAssociationIdentifier'
      - name: membershipIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MembershipIdentifier'
      responses:
        '204': {}
        '403':
          description: |-
            Caller does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Unexpected error during processing of request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetConfiguredAudienceModelAssociation
      description: |-
        Returns information about a configured audience model association.
      parameters:
      - name: configuredAudienceModelAssociationIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ConfiguredAudienceModelAssociationIdentifier'
      - name: membershipIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MembershipIdentifier'
      responses:
        '200': {}
        '403':
          description: |-
            Caller does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Unexpected error during processing of request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    patch:
      operationId: UpdateConfiguredAudienceModelAssociation
      description: |-
        Provides the details necessary to update a configured audience model association.
      parameters:
      - name: configuredAudienceModelAssociationIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ConfiguredAudienceModelAssociationIdentifier'
      - name: membershipIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MembershipIdentifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  $ref: '#/components/schemas/ResourceDescription'
                name:
                  $ref: '#/components/schemas/ConfiguredAudienceModelAssociationName'
      responses:
        '200': {}
        '403':
          description: |-
            Caller does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Unexpected error during processing of request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /configuredTables/{configuredTableIdentifier}:
    delete:
      operationId: DeleteConfiguredTable
      description: |-
        Deletes a configured table.
      parameters:
      - name: configuredTableIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ConfiguredTableIdentifier'
      responses:
        '204': {}
        '403':
          description: |-
            Caller does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Updating or deleting a resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Unexpected error during processing of request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetConfiguredTable
      description: |-
        Retrieves a configured table.
      parameters:
      - name: configuredTableIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ConfiguredTableIdentifier'
      responses:
        '200': {}
        '403':
          description: |-
            Caller does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Unexpected error during processing of request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    patch:
      operationId: UpdateConfiguredTable
      description: |-
        Updates a configured table.
      parameters:
      - name: configuredTableIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ConfiguredTableIdentifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  $ref: '#/components/schemas/DisplayName'
                description:
                  $ref: '#/components/schemas/TableDescription'
                analysisMethod:
                  $ref: '#/components/schemas/AnalysisMethod'
                selectedAnalysisMethods:
                  $ref: '#/components/schemas/SelectedAnalysisMethods'
      responses:
        '200': {}
        '403':
          description: |-
            Caller does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Updating or deleting a resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Unexpected error during processing of request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /configuredTables/{configuredTableIdentifier}/analysisRule/{analysisRuleType}:
    delete:
      operationId: DeleteConfiguredTableAnalysisRule
      description: |-
        Deletes a configured table analysis rule.
      parameters:
      - name: configuredTableIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ConfiguredTableIdentifier'
      - name: analysisRuleType
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ConfiguredTableAnalysisRuleType'
      responses:
        '204': {}
        '403':
          description: |-
            Caller does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Updating or deleting a resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Unexpected error during processing of request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetConfiguredTableAnalysisRule
      description: |-
        Retrieves a configured table analysis rule.
      parameters:
      - name: configuredTableIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ConfiguredTableIdentifier'
      - name: analysisRuleType
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ConfiguredTableAnalysisRuleType'
      responses:
        '200': {}
        '403':
          description: |-
            Caller does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Unexpected error during processing of request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    patch:
      operationId: UpdateConfiguredTableAnalysisRule
      description: |-
        Updates a configured table analysis rule.
      parameters:
      - name: configuredTableIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ConfiguredTableIdentifier'
      - name: analysisRuleType
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ConfiguredTableAnalysisRuleType'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                analysisRulePolicy:
                  $ref: '#/components/schemas/ConfiguredTableAnalysisRulePolicy'
      responses:
        '200': {}
        '403':
          description: |-
            Caller does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Updating or deleting a resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Unexpected error during processing of request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /memberships/{membershipIdentifier}/configuredTableAssociations/{configuredTableAssociationIdentifier}:
    delete:
      operationId: DeleteConfiguredTableAssociation
      description: |-
        Deletes a configured table association.
      parameters:
      - name: configuredTableAssociationIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ConfiguredTableAssociationIdentifier'
      - name: membershipIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MembershipIdentifier'
      responses:
        '204': {}
        '403':
          description: |-
            Caller does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Updating or deleting a resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Unexpected error during processing of request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetConfiguredTableAssociation
      description: |-
        Retrieves a configured table association.
      parameters:
      - name: configuredTableAssociationIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ConfiguredTableAssociationIdentifier'
      - name: membershipIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MembershipIdentifier'
      responses:
        '200': {}
        '403':
          description: |-
            Caller does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Unexpected error during processing of request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    patch:
      operationId: UpdateConfiguredTableAssociation
      description: |-
        Updates a configured table association.
      parameters:
      - name: configuredTableAssociationIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ConfiguredTableAssociationIdentifier'
      - name: membershipIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MembershipIdentifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  $ref: '#/components/schemas/TableDescription'
                roleArn:
                  $ref: '#/components/schemas/RoleArn'
      responses:
        '200': {}
        '403':
          description: |-
            Caller does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Updating or deleting a resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Unexpected error during processing of request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  ? /memberships/{membershipIdentifier}/configuredTableAssociations/{configuredTableAssociationIdentifier}/analysisRule/{analysisRuleType}
  : delete:
      operationId: DeleteConfiguredTableAssociationAnalysisRule
      description: |-
        Deletes an analysis rule for a configured table association.
      parameters:
      - name: membershipIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MembershipIdentifier'
      - name: configuredTableAssociationIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ConfiguredTableAssociationIdentifier'
      - name: analysisRuleType
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ConfiguredTableAssociationAnalysisRuleType'
      responses:
        '204': {}
        '403':
          description: |-
            Caller does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Updating or deleting a resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Unexpected error during processing of request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetConfiguredTableAssociationAnalysisRule
      description: |-
        Retrieves the analysis rule for a configured table association.
      parameters:
      - name: membershipIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MembershipIdentifier'
      - name: configuredTableAssociationIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ConfiguredTableAssociationIdentifier'
      - name: analysisRuleType
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ConfiguredTableAssociationAnalysisRuleType'
      responses:
        '200': {}
        '403':
          description: |-
            Caller does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Unexpected error during processing of request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    patch:
      operationId: UpdateConfiguredTableAssociationAnalysisRule
      description: |-
        Updates the analysis rule for a configured table association.
      parameters:
      - name: membershipIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MembershipIdentifier'
      - name: configuredTableAssociationIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ConfiguredTableAssociationIdentifier'
      - name: analysisRuleType
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ConfiguredTableAssociationAnalysisRuleType'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                analysisRulePolicy:
                  $ref: '#/components/schemas/ConfiguredTableAssociationAnalysisRulePolicy'
      responses:
        '200': {}
        '403':
          description: |-
            Caller does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Updating or deleting a resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Unexpected error during processing of request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /memberships/{membershipIdentifier}/idmappingtables/{idMappingTableIdentifier}:
    delete:
      operationId: DeleteIdMappingTable
      description: |-
        Deletes an ID mapping table.
      parameters:
      - name: idMappingTableIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: membershipIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MembershipIdentifier'
      responses:
        '204': {}
        '403':
          description: |-
            Caller does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Unexpected error during processing of request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetIdMappingTable
      description: |-
        Retrieves an ID mapping table.
      parameters:
      - name: idMappingTableIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: membershipIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MembershipIdentifier'
      responses:
        '200': {}
        '403':
          description: |-
            Caller does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Unexpected error during processing of request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    patch:
      operationId: UpdateIdMappingTable
      description: |-
        Provides the details that are necessary to update an ID mapping table.
      parameters:
      - name: idMappingTableIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: membershipIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MembershipIdentifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  $ref: '#/components/schemas/ResourceDescription'
                kmsKeyArn:
                  $ref: '#/components/schemas/KMSKeyArn'
      responses:
        '200': {}
        '403':
          description: |-
            Caller does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Unexpected error during processing of request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /memberships/{membershipIdentifier}/idnamespaceassociations/{idNamespaceAssociationIdentifier}:
    delete:
      operationId: DeleteIdNamespaceAssociation
      description: |-
        Deletes an ID namespace association.
      parameters:
      - name: idNamespaceAssociationIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/IdNamespaceAssociationIdentifier'
      - name: membershipIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MembershipIdentifier'
      responses:
        '204': {}
        '403':
          description: |-
            Caller does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Unexpected error during processing of request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetIdNamespaceAssociation
      description: |-
        Retrieves an ID namespace association.
      parameters:
      - name: idNamespaceAssociationIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/IdNamespaceAssociationIdentifier'
      - name: membershipIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MembershipIdentifier'
      responses:
        '200': {}
        '403':
          description: |-
            Caller does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Unexpected error during processing of request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    patch:
      operationId: UpdateIdNamespaceAssociation
      description: |-
        Provides the details that are necessary to update an ID namespace association.
      parameters:
      - name: idNamespaceAssociationIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/IdNamespaceAssociationIdentifier'
      - name: membershipIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MembershipIdentifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  $ref: '#/components/schemas/GenericResourceName'
                description:
                  $ref: '#/components/schemas/ResourceDescription'
                idMappingConfig:
                  $ref: '#/components/schemas/IdMappingConfig'
      responses:
        '200': {}
        '403':
          description: |-
            Caller does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Unexpected error during processing of request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /collaborations/{collaborationIdentifier}/member/{accountId}:
    delete:
      operationId: DeleteMember
      description: |-
        Removes the specified member from a collaboration. The removed member is placed in the Removed status and can't interact with the collaboration. The removed member's data is inaccessible to active members of the collaboration.
      parameters:
      - name: collaborationIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CollaborationIdentifier'
      - name: accountId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AccountId'
      responses:
        '204': {}
        '403':
          description: |-
            Caller does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Updating or deleting a resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Unexpected error during processing of request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /memberships/{membershipIdentifier}:
    delete:
      operationId: DeleteMembership
      description: |-
        Deletes a specified membership. All resources under a membership must be deleted.
      parameters:
      - name: membershipIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MembershipIdentifier'
      responses:
        '204': {}
        '403':
          description: |-
            Caller does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Updating or deleting a resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Unexpected error during processing of request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetMembership
      description: |-
        Retrieves a specified membership for an identifier.
      parameters:
      - name: membershipIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MembershipIdentifier'
      responses:
        '200': {}
        '403':
          description: |-
            Caller does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Unexpected error during processing of request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    patch:
      operationId: UpdateMembership
      description: |-
        Updates a membership.
      parameters:
      - name: membershipIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MembershipIdentifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                queryLogStatus:
                  $ref: '#/components/schemas/MembershipQueryLogStatus'
                jobLogStatus:
                  $ref: '#/components/schemas/MembershipJobLogStatus'
                defaultResultConfiguration:
                  $ref: '#/components/schemas/MembershipProtectedQueryResultConfiguration'
                defaultJobResultConfiguration:
                  $ref: '#/components/schemas/MembershipProtectedJobResultConfiguration'
      responses:
        '200': {}
        '403':
          description: |-
            Caller does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Updating or deleting a resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Unexpected error during processing of request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /memberships/{membershipIdentifier}/privacybudgettemplates/{privacyBudgetTemplateIdentifier}:
    delete:
      operationId: DeletePrivacyBudgetTemplate
      description: |-
        Deletes a privacy budget template for a specified membership.
      parameters:
      - name: membershipIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MembershipIdentifier'
      - name: privacyBudgetTemplateIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PrivacyBudgetTemplateIdentifier'
      responses:
        '204': {}
        '403':
          description: |-
            Caller does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Unexpected error during processing of request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetPrivacyBudgetTemplate
      description: |-
        Returns details for a specified privacy budget template.
      parameters:
      - name: membershipIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MembershipIdentifier'
      - name: privacyBudgetTemplateIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PrivacyBudgetTemplateIdentifier'
      responses:
        '200': {}
        '403':
          description: |-
            Caller does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Unexpected error during processing of request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    patch:
      operationId: UpdatePrivacyBudgetTemplate
      description: |-
        Updates the privacy budget template for the specified membership.
      parameters:
      - name: membershipIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MembershipIdentifier'
      - name: privacyBudgetTemplateIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PrivacyBudgetTemplateIdentifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                privacyBudgetType:
                  $ref: '#/components/schemas/PrivacyBudgetType'
                parameters:
                  $ref: '#/components/schemas/PrivacyBudgetTemplateUpdateParameters'
      responses:
        '200': {}
        '403':
          description: |-
            Caller does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Updating or deleting a resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Unexpected error during processing of request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /collaborations/{collaborationIdentifier}/analysistemplates/{analysisTemplateArn}:
    get:
      operationId: GetCollaborationAnalysisTemplate
      description: |-
        Retrieves an analysis template within a collaboration.
      parameters:
      - name: collaborationIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CollaborationIdentifier'
      - name: analysisTemplateArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AnalysisTemplateArn'
      responses:
        '200': {}
        '403':
          description: |-
            Caller does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Unexpected error during processing of request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  ? /collaborations/{collaborationIdentifier}/configuredaudiencemodelassociations/{configuredAudienceModelAssociationIdentifier}
  : get:
      operationId: GetCollaborationConfiguredAudienceModelAssociation
      description: |-
        Retrieves a configured audience model association within a collaboration.
      parameters:
      - name: collaborationIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CollaborationIdentifier'
      - name: configuredAudienceModelAssociationIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ConfiguredAudienceModelAssociationIdentifier'
      responses:
        '200': {}
        '403':
          description: |-
            Caller does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Unexpected error during processing of request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /collaborations/{collaborationIdentifier}/idnamespaceassociations/{idNamespaceAssociationIdentifier}:
    get:
      operationId: GetCollaborationIdNamespaceAssociation
      description: |-
        Retrieves an ID namespace association from a specific collaboration.
      parameters:
      - name: collaborationIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CollaborationIdentifier'
      - name: idNamespaceAssociationIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/IdNamespaceAssociationIdentifier'
      responses:
        '200': {}
        '403':
          description: |-
            Caller does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Unexpected error during processing of request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /collaborations/{collaborationIdentifier}/privacybudgettemplates/{privacyBudgetTemplateIdentifier}:
    get:
      operationId: GetCollaborationPrivacyBudgetTemplate
      description: |-
        Returns details about a specified privacy budget template.
      parameters:
      - name: collaborationIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CollaborationIdentifier'
      - name: privacyBudgetTemplateIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PrivacyBudgetTemplateIdentifier'
      responses:
        '200': {}
        '403':
          description: |-
            Caller does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Unexpected error during processing of request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /memberships/{membershipIdentifier}/protectedJobs/{protectedJobIdentifier}:
    get:
      operationId: GetProtectedJob
      description: |-
        Returns job processing metadata.
      parameters:
      - name: membershipIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MembershipIdentifier'
      - name: protectedJobIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ProtectedJobIdentifier'
      responses:
        '200': {}
        '403':
          description: |-
            Caller does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Unexpected error during processing of request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    patch:
      operationId: UpdateProtectedJob
      description: |-
        Updates the processing of a currently running job.
      parameters:
      - name: membershipIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MembershipIdentifier'
      - name: protectedJobIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ProtectedJobIdentifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                targetStatus:
                  $ref: '#/components/schemas/TargetProtectedJobStatus'
      responses:
        '200': {}
        '403':
          description: |-
            Caller does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Updating or deleting a resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Unexpected error during processing of request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /memberships/{membershipIdentifier}/protectedQueries/{protectedQueryIdentifier}:
    get:
      operationId: GetProtectedQuery
      description: |-
        Returns query processing metadata.
      parameters:
      - name: membershipIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MembershipIdentifier'
      - name: protectedQueryIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ProtectedQueryIdentifier'
      responses:
        '200': {}
        '403':
          description: |-
            Caller does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Unexpected error during processing of request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    patch:
      operationId: UpdateProtectedQuery
      description: |-
        Updates the processing of a currently running query.
      parameters:
      - name: membershipIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MembershipIdentifier'
      - name: protectedQueryIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ProtectedQueryIdentifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                targetStatus:
                  $ref: '#/components/schemas/TargetProtectedQueryStatus'
      responses:
        '200': {}
        '403':
          description: |-
            Caller does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Updating or deleting a resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Unexpected error during processing of request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /collaborations/{collaborationIdentifier}/schemas/{name}:
    get:
      operationId: GetSchema
      description: |-
        Retrieves the schema for a relation within a collaboration.
      parameters:
      - name: collaborationIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CollaborationIdentifier'
      - name: name
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TableAlias'
      responses:
        '200': {}
        '403':
          description: |-
            Caller does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Unexpected error during processing of request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /collaborations/{collaborationIdentifier}/schemas/{name}/analysisRule/{type}:
    get:
      operationId: GetSchemaAnalysisRule
      description: |-
        Retrieves a schema analysis rule.
      parameters:
      - name: collaborationIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CollaborationIdentifier'
      - name: name
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TableAlias'
      - name: type
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AnalysisRuleType'
      responses:
        '200': {}
        '403':
          description: |-
            Caller does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Unexpected error during processing of request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /collaborations/{collaborationIdentifier}/analysistemplates:
    get:
      operationId: ListCollaborationAnalysisTemplates
      description: |-
        Lists analysis templates within a collaboration.
      parameters:
      - name: collaborationIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CollaborationIdentifier'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PaginationToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            Caller does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Unexpected error during processing of request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /collaborations/{collaborationIdentifier}/configuredaudiencemodelassociations:
    get:
      operationId: ListCollaborationConfiguredAudienceModelAssociations
      description: |-
        Lists configured audience model associations within a collaboration.
      parameters:
      - name: collaborationIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CollaborationIdentifier'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PaginationToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            Caller does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Unexpected error during processing of request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /collaborations/{collaborationIdentifier}/idnamespaceassociations:
    get:
      operationId: ListCollaborationIdNamespaceAssociations
      description: |-
        Returns a list of the ID namespace associations in a collaboration.
      parameters:
      - name: collaborationIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CollaborationIdentifier'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PaginationToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            Caller does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Unexpected error during processing of request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /collaborations/{collaborationIdentifier}/privacybudgettemplates:
    get:
      operationId: ListCollaborationPrivacyBudgetTemplates
      description: |-
        Returns an array that summarizes each privacy budget template in a specified collaboration.
      parameters:
      - name: collaborationIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CollaborationIdentifier'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PaginationToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            Caller does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Unexpected error during processing of request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /collaborations/{collaborationIdentifier}/privacybudgets:
    get:
      operationId: ListCollaborationPrivacyBudgets
      description: |-
        Returns an array that summarizes each privacy budget in a specified collaboration. The summary includes the collaboration ARN, creation time, creating account, and privacy budget details.
      parameters:
      - name: collaborationIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CollaborationIdentifier'
      - name: privacyBudgetType
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/PrivacyBudgetType'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PaginationToken'
      responses:
        '200': {}
        '403':
          description: |-
            Caller does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Unexpected error during processing of request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /collaborations/{collaborationIdentifier}/members:
    get:
      operationId: ListMembers
      description: |-
        Lists all members within a collaboration.
      parameters:
      - name: collaborationIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CollaborationIdentifier'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PaginationToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            Caller does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Unexpected error during processing of request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /memberships/{membershipIdentifier}/privacybudgets:
    get:
      operationId: ListPrivacyBudgets
      description: |-
        Returns detailed information about the privacy budgets in a specified membership.
      parameters:
      - name: membershipIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MembershipIdentifier'
      - name: privacyBudgetType
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/PrivacyBudgetType'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PaginationToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            Caller does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Unexpected error during processing of request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /memberships/{membershipIdentifier}/protectedJobs:
    get:
      operationId: ListProtectedJobs
      description: |-
        Lists protected jobs, sorted by most recent job.
      parameters:
      - name: membershipIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MembershipIdentifier'
      - name: status
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ProtectedJobStatus'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PaginationToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            Caller does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Unexpected error during processing of request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    post:
      operationId: StartProtectedJob
      description: |-
        Creates a protected job that is started by Clean Rooms.
      parameters:
      - name: membershipIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MembershipIdentifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  $ref: '#/components/schemas/ProtectedJobType'
                jobParameters:
                  $ref: '#/components/schemas/ProtectedJobParameters'
                resultConfiguration:
                  $ref: '#/components/schemas/ProtectedJobResultConfigurationInput'
      responses:
        '200': {}
        '403':
          description: |-
            Caller does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Unexpected error during processing of request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            Request denied because service quota has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /memberships/{membershipIdentifier}/protectedQueries:
    get:
      operationId: ListProtectedQueries
      description: |-
        Lists protected queries, sorted by the most recent query.
      parameters:
      - name: membershipIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MembershipIdentifier'
      - name: status
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ProtectedQueryStatus'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PaginationToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            Caller does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Unexpected error during processing of request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    post:
      operationId: StartProtectedQuery
      description: |-
        Creates a protected query that is started by Clean Rooms.
      parameters:
      - name: membershipIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MembershipIdentifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  $ref: '#/components/schemas/ProtectedQueryType'
                sqlParameters:
                  $ref: '#/components/schemas/ProtectedQuerySQLParameters'
                resultConfiguration:
                  $ref: '#/components/schemas/ProtectedQueryResultConfiguration'
                computeConfiguration:
                  $ref: '#/components/schemas/ComputeConfiguration'
      responses:
        '200': {}
        '403':
          description: |-
            Caller does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Unexpected error during processing of request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            Request denied because service quota has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /collaborations/{collaborationIdentifier}/schemas:
    get:
      operationId: ListSchemas
      description: |-
        Lists the schemas for relations within a collaboration.
      parameters:
      - name: collaborationIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CollaborationIdentifier'
      - name: schemaType
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/SchemaType'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PaginationToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            Caller does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Unexpected error during processing of request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /tags/{resourceArn}:
    get:
      operationId: ListTagsForResource
      description: |-
        Lists all of the tags that have been added to a resource.
      parameters:
      - name: resourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CleanroomsArn'
      responses:
        '200': {}
        '404':
          description: |-
            Request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    post:
      operationId: TagResource
      description: |-
        Tags a resource.
      parameters:
      - name: resourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CleanroomsArn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '200': {}
        '404':
          description: |-
            Request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    delete:
      operationId: UntagResource
      description: |-
        Removes a tag or list of tags from a resource.
      parameters:
      - name: resourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CleanroomsArn'
      - name: tagKeys
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/TagKeys'
      responses:
        '200': {}
        '404':
          description: |-
            Request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /memberships/{membershipIdentifier}/idmappingtables/{idMappingTableIdentifier}/populate:
    post:
      operationId: PopulateIdMappingTable
      description: |-
        Defines the information that's necessary to populate an ID mapping table.
      parameters:
      - name: idMappingTableIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: membershipIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MembershipIdentifier'
      responses:
        '200': {}
        '403':
          description: |-
            Caller does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Updating or deleting a resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Unexpected error during processing of request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            Request denied because service quota has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /memberships/{membershipIdentifier}/previewprivacyimpact:
    post:
      operationId: PreviewPrivacyImpact
      description: |-
        An estimate of the number of aggregation functions that the member who can query can run given epsilon and noise parameters.
      parameters:
      - name: membershipIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MembershipIdentifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                parameters:
                  $ref: '#/components/schemas/PreviewPrivacyImpactParametersInput'
      responses:
        '200': {}
        '403':
          description: |-
            Caller does not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Unexpected error during processing of request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the specified constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
components:
  schemas:
    AccessDeniedException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
        reason:
          allOf:
          - $ref: '#/components/schemas/AccessDeniedExceptionReason'
          description: A reason code for the exception.
      description: Caller does not have sufficient access to perform this action.
    AccessDeniedExceptionReason:
      type: string
      enum:
      - INSUFFICIENT_PERMISSIONS
    AccountId:
      type: string
      pattern: ^\d+$
      minLength: 12
      maxLength: 12
    AdditionalAnalyses:
      type: string
      enum:
      - ALLOWED
      - REQUIRED
      - NOT_ALLOWED
    AdditionalAnalysesResourceArn:
      type: string
      pattern: ^arn:aws:cleanrooms:[\w]{2}-[\w]{4,9}-[\d]:([\d]{12}|\*):membership\/[\*\d\w-]+\/configuredaudiencemodelassociation\/[\*\d\w-]+$|^arn:aws[-a-z]*:cleanrooms-ml:[-a-z0-9]+:([0-9]{12}|\*):membership\/[\*\d\w-]+\/configured-model-algorithm-association\/([-a-zA-Z0-9_\/.]+|\*)$
      maxLength: 256
    AggregateColumn:
      type: object
      properties:
        columnNames:
          allOf:
          - $ref: '#/components/schemas/AnalysisRuleColumnNameList'
          description: Column names in configured table of aggregate columns.
        function:
          allOf:
          - $ref: '#/components/schemas/AggregateFunctionName'
          description: Aggregation function that can be applied to aggregate column
            in query.
      required:
      - columnNames
      - function
      description: Column in configured table that can be used in aggregate function
        in query.
    AggregateColumnList:
      type: array
      items:
        $ref: '#/components/schemas/AggregateColumn'
    AggregateFunctionName:
      type: string
      enum:
      - SUM
      - SUM_DISTINCT
      - COUNT
      - COUNT_DISTINCT
      - AVG
    AggregationConstraint:
      type: object
      properties:
        columnName:
          allOf:
          - $ref: '#/components/schemas/AnalysisRuleColumnName'
          description: Column in aggregation constraint for which there must be a
            minimum number of distinct values in an output row for it to be in the
            query output.
        minimum:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The minimum number of distinct values that an output row must
            be an aggregation of. Minimum threshold of distinct values for a specified
            column that must exist in an output row for it to be in the query output.
        type:
          allOf:
          - $ref: '#/components/schemas/AggregationType'
          description: The type of aggregation the constraint allows. The only valid
            value is currently `COUNT_DISTINCT`.
      required:
      - columnName
      - minimum
      - type
      description: Constraint on query output removing output rows that do not meet
        a minimum number of distinct values of a specified column.
    AggregationConstraints:
      type: array
      items:
        $ref: '#/components/schemas/AggregationConstraint'
    AggregationType:
      type: string
      enum:
      - COUNT_DISTINCT
    AllowedAdditionalAnalyses:
      type: array
      items:
        $ref: '#/components/schemas/AdditionalAnalysesResourceArn'
    AllowedAnalysesList:
      type: array
      items:
        $ref: '#/components/schemas/AnalysisTemplateArnOrQueryWildcard'
    AllowedAnalysisProviderList:
      type: array
      items:
        $ref: '#/components/schemas/AccountId'
    AllowedColumnList:
      type: array
      items:
        $ref: '#/components/schemas/ColumnName'
    AllowedResultReceivers:
      type: array
      items:
        $ref: '#/components/schemas/AccountId'
    AnalysisFormat:
      type: string
      enum:
      - SQL
      - PYSPARK_1_0
    AnalysisMethod:
      type: string
      enum:
      - DIRECT_QUERY
      - DIRECT_JOB
      - MULTIPLE
    AnalysisParameter:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/ParameterName'
          description: The name of the parameter. The name must use only alphanumeric,
            underscore (_), or hyphen (-) characters but cannot start or end with
            a hyphen.
        type:
          allOf:
          - $ref: '#/components/schemas/ParameterType'
          description: The type of parameter.
        defaultValue:
          allOf:
          - $ref: '#/components/schemas/ParameterValue'
          description: Optional. The default value that is applied in the analysis
            template. The member who can query can override this value in the query
            editor.
      required:
      - name
      - type
      description: Optional. The member who can query can provide this placeholder
        for a literal data value in an analysis template.
    AnalysisParameterList:
      type: array
      items:
        $ref: '#/components/schemas/AnalysisParameter'
    AnalysisRule:
      type: object
      properties:
        collaborationId:
          allOf:
          - $ref: '#/components/schemas/CollaborationIdentifier'
          description: The unique ID for the associated collaboration.
        type:
          allOf:
          - $ref: '#/components/schemas/AnalysisRuleType'
          description: The type of analysis rule.
        name:
          allOf:
          - $ref: '#/components/schemas/TableAlias'
          description: The name for the analysis rule.
        createTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time the analysis rule was created.
        updateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time the analysis rule was last updated.
        policy:
          allOf:
          - $ref: '#/components/schemas/AnalysisRulePolicy'
          description: A policy that describes the associated data usage limitations.
        collaborationPolicy:
          $ref: '#/components/schemas/ConfiguredTableAssociationAnalysisRulePolicy'
        consolidatedPolicy:
          allOf:
          - $ref: '#/components/schemas/ConsolidatedPolicy'
          description: The consolidated policy for the analysis rule.
      required:
      - collaborationId
      - type
      - name
      - createTime
      - updateTime
      - policy
      description: A specification about how data from the configured table can be
        used in a query.
    AnalysisRuleAggregation:
      type: object
      properties:
        aggregateColumns:
          allOf:
          - $ref: '#/components/schemas/AggregateColumnList'
          description: The columns that query runners are allowed to use in aggregation
            queries.
        joinColumns:
          allOf:
          - $ref: '#/components/schemas/AnalysisRuleColumnList'
          description: Columns in configured table that can be used in join statements
            and/or as aggregate columns. They can never be outputted directly.
        joinRequired:
          allOf:
          - $ref: '#/components/schemas/JoinRequiredOption'
          description: Control that requires member who runs query to do a join with
            their configured table and/or other configured table in query.
        allowedJoinOperators:
          allOf:
          - $ref: '#/components/schemas/JoinOperatorsList'
          description: Which logical operators (if any) are to be used in an INNER
            JOIN match condition. Default is `AND`.
        dimensionColumns:
          allOf:
          - $ref: '#/components/schemas/AnalysisRuleColumnList'
          description: The columns that query runners are allowed to select, group
            by, or filter by.
        scalarFunctions:
          allOf:
          - $ref: '#/components/schemas/ScalarFunctionsList'
          description: Set of scalar functions that are allowed to be used on dimension
            columns and the output of aggregation of metrics.
        outputConstraints:
          allOf:
          - $ref: '#/components/schemas/AggregationConstraints'
          description: Columns that must meet a specific threshold value (after an
            aggregation function is applied to it) for each output row to be returned.
        additionalAnalyses:
          allOf:
          - $ref: '#/components/schemas/AdditionalAnalyses'
          description: 'An indicator as to whether additional analyses (such as Clean
            Rooms ML) can be applied to the output of the direct query.


            The `additionalAnalyses` parameter is currently supported for the list
            analysis rule (`AnalysisRuleList`) and the custom analysis rule (`AnalysisRuleCustom`).'
      required:
      - aggregateColumns
      - joinColumns
      - dimensionColumns
      - scalarFunctions
      - outputConstraints
      description: A type of analysis rule that enables query structure and specified
        queries that produce aggregate statistics.
    AnalysisRuleColumnList:
      type: array
      items:
        $ref: '#/components/schemas/AnalysisRuleColumnName'
    AnalysisRuleColumnName:
      type: string
      pattern: ^[a-z0-9_](([a-z0-9_ ]+-)*([a-z0-9_ ]+))?$
      minLength: 1
      maxLength: 127
    AnalysisRuleColumnNameList:
      type: array
      items:
        $ref: '#/components/schemas/AnalysisRuleColumnName'
    AnalysisRuleCustom:
      type: object
      properties:
        allowedAnalyses:
          allOf:
          - $ref: '#/components/schemas/AllowedAnalysesList'
          description: The ARN of the analysis templates that are allowed by the custom
            analysis rule.
        allowedAnalysisProviders:
          allOf:
          - $ref: '#/components/schemas/AllowedAnalysisProviderList'
          description: The IDs of the Amazon Web Services accounts that are allowed
            to query by the custom analysis rule. Required when `allowedAnalyses`
            is `ANY_QUERY`.
        additionalAnalyses:
          allOf:
          - $ref: '#/components/schemas/AdditionalAnalyses'
          description: An indicator as to whether additional analyses (such as Clean
            Rooms ML) can be applied to the output of the direct query.
        disallowedOutputColumns:
          allOf:
          - $ref: '#/components/schemas/AnalysisRuleColumnList'
          description: A list of columns that aren't allowed to be shown in the query
            output.
        differentialPrivacy:
          allOf:
          - $ref: '#/components/schemas/DifferentialPrivacyConfiguration'
          description: The differential privacy configuration.
      required:
      - allowedAnalyses
      description: A type of analysis rule that enables the table owner to approve
        custom SQL queries on their configured tables. It supports differential privacy.
    AnalysisRuleIdMappingTable:
      type: object
      properties:
        joinColumns:
          allOf:
          - $ref: '#/components/schemas/AnalysisRuleColumnList'
          description: The columns that query runners are allowed to use in an INNER
            JOIN statement.
        queryConstraints:
          allOf:
          - $ref: '#/components/schemas/QueryConstraintList'
          description: The query constraints of the analysis rule ID mapping table.
        dimensionColumns:
          allOf:
          - $ref: '#/components/schemas/AnalysisRuleColumnList'
          description: The columns that query runners are allowed to select, group
            by, or filter by.
      required:
      - joinColumns
      - queryConstraints
      description: Defines details for the analysis rule ID mapping table.
    AnalysisRuleList:
      type: object
      properties:
        joinColumns:
          allOf:
          - $ref: '#/components/schemas/AnalysisRuleColumnList'
          description: Columns that can be used to join a configured table with the
            table of the member who can query and other members' configured tables.
        allowedJoinOperators:
          allOf:
          - $ref: '#/components/schemas/JoinOperatorsList'
          description: The logical operators (if any) that are to be used in an INNER
            JOIN match condition. Default is `AND`.
        listColumns:
          allOf:
          - $ref: '#/components/schemas/AnalysisRuleColumnList'
          description: Columns that can be listed in the output.
        additionalAnalyses:
          allOf:
          - $ref: '#/components/schemas/AdditionalAnalyses'
          description: An indicator as to whether additional analyses (such as Clean
            Rooms ML) can be applied to the output of the direct query.
      required:
      - joinColumns
      - listColumns
      description: A type of analysis rule that enables row-level analysis.
    AnalysisRulePolicy:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/AnalysisRulePolicyV1'
        description: |-
          Controls on the query specifications that can be run on configured table.
      description: |-
        Controls on the query specifications that can be run on configured table.
    AnalysisRulePolicyV1:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/AnalysisRuleList'
        description: |-
          Analysis rule type that enables only list queries on a configured table.
      - allOf:
        - $ref: '#/components/schemas/AnalysisRuleAggregation'
        description: |-
          Analysis rule type that enables only aggregation queries on a configured table.
      - allOf:
        - $ref: '#/components/schemas/AnalysisRuleCustom'
        description: |-
          Analysis rule type that enables custom SQL queries on a configured table.
      - allOf:
        - $ref: '#/components/schemas/AnalysisRuleIdMappingTable'
        description: |-
          The ID mapping table.
      description: |-
        Controls on the query specifications that can be run on configured table.
    AnalysisRuleType:
      type: string
      enum:
      - AGGREGATION
      - LIST
      - CUSTOM
      - ID_MAPPING_TABLE
    AnalysisRuleTypeList:
      type: array
      items:
        $ref: '#/components/schemas/AnalysisRuleType'
    AnalysisSchema:
      type: object
      properties:
        referencedTables:
          allOf:
          - $ref: '#/components/schemas/QueryTables'
          description: The tables referenced in the analysis schema.
      description: A relation within an analysis.
    AnalysisSource:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/AnalysisTemplateText'
        description: |-
          The query text.
      - allOf:
        - $ref: '#/components/schemas/AnalysisTemplateArtifacts'
        description: |-
          The artifacts of the analysis source.
      description: |-
        The structure that defines the body of the analysis template.
    AnalysisSourceMetadata:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/AnalysisTemplateArtifactMetadata'
        description: |-
          The artifacts of the analysis source metadata.
      description: |-
        The analysis source metadata.
    AnalysisTemplate:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/AnalysisTemplateIdentifier'
          description: The identifier for the analysis template.
        arn:
          allOf:
          - $ref: '#/components/schemas/AnalysisTemplateArn'
          description: The Amazon Resource Name (ARN) of the analysis template.
        collaborationId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique ID for the associated collaboration of the analysis
            template.
        collaborationArn:
          allOf:
          - $ref: '#/components/schemas/CollaborationArn'
          description: The unique ARN for the analysis template’s associated collaboration.
        membershipId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The identifier of a member who created the analysis template.
        membershipArn:
          allOf:
          - $ref: '#/components/schemas/MembershipArn'
          description: The Amazon Resource Name (ARN) of the member who created the
            analysis template.
        description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          description: The description of the analysis template.
        name:
          allOf:
          - $ref: '#/components/schemas/ResourceAlias'
          description: The name of the analysis template.
        createTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time that the analysis template was created.
        updateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time that the analysis template was last updated.
        schema:
          allOf:
          - $ref: '#/components/schemas/AnalysisSchema'
          description: The entire schema object.
        format:
          allOf:
          - $ref: '#/components/schemas/AnalysisFormat'
          description: The format of the analysis template.
        source:
          allOf:
          - $ref: '#/components/schemas/AnalysisSource'
          description: The source of the analysis template.
        sourceMetadata:
          allOf:
          - $ref: '#/components/schemas/AnalysisSourceMetadata'
          description: The source metadata for the analysis template.
        analysisParameters:
          allOf:
          - $ref: '#/components/schemas/AnalysisParameterList'
          description: The parameters of the analysis template.
        validations:
          allOf:
          - $ref: '#/components/schemas/AnalysisTemplateValidationStatusDetailList'
          description: Information about the validations performed on the analysis
            template.
      required:
      - id
      - arn
      - collaborationId
      - collaborationArn
      - membershipId
      - membershipArn
      - name
      - createTime
      - updateTime
      - schema
      - format
      - source
      description: The analysis template.
    AnalysisTemplateArn:
      type: string
      pattern: ^arn:aws:cleanrooms:[\w]{2}-[\w]{4,9}-[\d]:[\d]{12}:membership/[\d\w-]+/analysistemplate/[\d\w-]+$
      maxLength: 200
    AnalysisTemplateArnList:
      type: array
      items:
        $ref: '#/components/schemas/AnalysisTemplateArn'
    AnalysisTemplateArnOrQueryWildcard:
      type: string
      pattern: ^(ANY_QUERY|ANY_JOB|arn:aws:cleanrooms:[\w]{2}-[\w]{4,9}-[\d]:[\d]{12}:membership/[\d\w-]+/analysistemplate/[\d\w-]+)$
      maxLength: 200
    AnalysisTemplateArtifact:
      type: object
      properties:
        location:
          allOf:
          - $ref: '#/components/schemas/S3Location'
          description: The artifact location.
      required:
      - location
      description: The analysis template artifact.
    AnalysisTemplateArtifactList:
      type: array
      items:
        $ref: '#/components/schemas/AnalysisTemplateArtifact'
    AnalysisTemplateArtifactMetadata:
      type: object
      properties:
        entryPointHash:
          allOf:
          - $ref: '#/components/schemas/Hash'
          description: The hash of the entry point for the analysis template artifact
            metadata.
        additionalArtifactHashes:
          allOf:
          - $ref: '#/components/schemas/HashList'
          description: Additional artifact hashes for the analysis template.
      required:
      - entryPointHash
      description: The analysis template artifact metadata.
    AnalysisTemplateArtifacts:
      type: object
      properties:
        entryPoint:
          allOf:
          - $ref: '#/components/schemas/AnalysisTemplateArtifact'
          description: The entry point for the analysis template artifacts.
        additionalArtifacts:
          allOf:
          - $ref: '#/components/schemas/AnalysisTemplateArtifactList'
          description: Additional artifacts for the analysis template.
        roleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          description: The role ARN for the analysis template artifacts.
      required:
      - entryPoint
      - roleArn
      description: The analysis template artifacts.
    AnalysisTemplateIdentifier:
      type: string
      pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
      minLength: 36
      maxLength: 36
    AnalysisTemplateSummary:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/AnalysisTemplateArn'
          description: The Amazon Resource Name (ARN) of the analysis template.
        createTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time that the analysis template summary was created.
        id:
          allOf:
          - $ref: '#/components/schemas/AnalysisTemplateIdentifier'
          description: The identifier of the analysis template.
        name:
          allOf:
          - $ref: '#/components/schemas/ResourceAlias'
          description: The name of the analysis template.
        updateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time that the analysis template summary was last updated.
        membershipArn:
          allOf:
          - $ref: '#/components/schemas/MembershipArn'
          description: The Amazon Resource Name (ARN) of the member who created the
            analysis template.
        membershipId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The identifier for a membership resource.
        collaborationArn:
          allOf:
          - $ref: '#/components/schemas/CollaborationArn'
          description: The unique ARN for the analysis template summary’s associated
            collaboration.
        collaborationId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: A unique identifier for the collaboration that the analysis
            template summary belongs to. Currently accepts collaboration ID.
        description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          description: The description of the analysis template.
      required:
      - arn
      - createTime
      - id
      - name
      - updateTime
      - membershipArn
      - membershipId
      - collaborationArn
      - collaborationId
      description: The metadata of the analysis template.
    AnalysisTemplateSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/AnalysisTemplateSummary'
    AnalysisTemplateText:
      type: string
      minLength: 0
      maxLength: 90000
    AnalysisTemplateValidationStatus:
      type: string
      enum:
      - VALID
      - INVALID
      - UNABLE_TO_VALIDATE
    AnalysisTemplateValidationStatusDetail:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/AnalysisTemplateValidationType'
          description: The type of validation that was performed.
        status:
          allOf:
          - $ref: '#/components/schemas/AnalysisTemplateValidationStatus'
          description: The status of the validation.
        reasons:
          allOf:
          - $ref: '#/components/schemas/AnalysisTemplateValidationStatusReasonList'
          description: The reasons for the validation results.
      required:
      - type
      - status
      description: 'The status details of the analysis template validation. Clean
        Rooms Differential Privacy uses a general-purpose query structure to support
        complex SQL queries and validates whether an analysis template fits that general-purpose
        query structure. Validation is performed when analysis templates are created
        and fetched. Because analysis templates are immutable by design, we recommend
        that you create analysis templates after you associate the configured tables
        with their analysis rule to your collaboration.


        For more information, see <https://docs.aws.amazon.com/clean-rooms/latest/userguide/analysis-rules-custom.html#custom-diff-privacy>.'
    AnalysisTemplateValidationStatusDetailList:
      type: array
      items:
        $ref: '#/components/schemas/AnalysisTemplateValidationStatusDetail'
    AnalysisTemplateValidationStatusReason:
      type: object
      properties:
        message:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The validation message.
      required:
      - message
      description: The reasons for the validation results.
    AnalysisTemplateValidationStatusReasonList:
      type: array
      items:
        $ref: '#/components/schemas/AnalysisTemplateValidationStatusReason'
    AnalysisTemplateValidationType:
      type: string
      enum:
      - DIFFERENTIAL_PRIVACY
    AnalysisType:
      type: string
      enum:
      - DIRECT_ANALYSIS
      - ADDITIONAL_ANALYSIS
    AnalyticsEngine:
      type: string
      enum:
      - SPARK
      - CLEAN_ROOMS_SQL
    AthenaDatabaseName:
      type: string
      pattern: ^[a-zA-Z0-9_](([a-zA-Z0-9_]+-)*([a-zA-Z0-9_]+))?$
      maxLength: 128
    AthenaOutputLocation:
      type: string
      pattern: ^s3://[a-z0-9.-]{3,63}(.*)$
      minLength: 8
      maxLength: 1024
    AthenaTableName:
      type: string
      pattern: ^[a-zA-Z0-9_](([a-zA-Z0-9_]+)*([a-zA-Z0-9_]+))?$
      maxLength: 128
    AthenaTableReference:
      type: object
      properties:
        workGroup:
          allOf:
          - $ref: '#/components/schemas/AthenaWorkGroup'
          description: The workgroup of the Athena table reference.
        outputLocation:
          allOf:
          - $ref: '#/components/schemas/AthenaOutputLocation'
          description: The output location for the Athena table.
        databaseName:
          allOf:
          - $ref: '#/components/schemas/AthenaDatabaseName'
          description: The database name.
        tableName:
          allOf:
          - $ref: '#/components/schemas/AthenaTableName'
          description: The table reference.
      required:
      - workGroup
      - databaseName
      - tableName
      description: A reference to a table within Athena.
    AthenaWorkGroup:
      type: string
      pattern: ^([a-zA-Z0-9._-])*$
      minLength: 1
      maxLength: 128
    BatchGetCollaborationAnalysisTemplateError:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/AnalysisTemplateArn'
          description: The Amazon Resource Name (ARN) of the analysis template.
        code:
          allOf:
          - $ref: '#/components/schemas/String'
          description: An error code for the error.
        message:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A description of why the call failed.
      required:
      - arn
      - code
      - message
      description: Details of errors thrown by the call to retrieve multiple analysis
        templates within a collaboration by their identifiers.
    BatchGetCollaborationAnalysisTemplateErrorList:
      type: array
      items:
        $ref: '#/components/schemas/BatchGetCollaborationAnalysisTemplateError'
    BatchGetCollaborationAnalysisTemplateInput:
      type: object
      properties:
        collaborationIdentifier:
          allOf:
          - $ref: '#/components/schemas/CollaborationIdentifier'
          description: A unique identifier for the collaboration that the analysis
            templates belong to. Currently accepts collaboration ID.
        analysisTemplateArns:
          allOf:
          - $ref: '#/components/schemas/AnalysisTemplateArnList'
          description: The Amazon Resource Name (ARN) associated with the analysis
            template within a collaboration.
      required:
      - collaborationIdentifier
      - analysisTemplateArns
    BatchGetCollaborationAnalysisTemplateOutput:
      type: object
      properties:
        collaborationAnalysisTemplates:
          allOf:
          - $ref: '#/components/schemas/CollaborationAnalysisTemplateList'
          description: The retrieved list of analysis templates within a collaboration.
        errors:
          allOf:
          - $ref: '#/components/schemas/BatchGetCollaborationAnalysisTemplateErrorList'
          description: Error reasons for collaboration analysis templates that could
            not be retrieved. One error is returned for every collaboration analysis
            template that could not be retrieved.
      required:
      - collaborationAnalysisTemplates
      - errors
    BatchGetSchemaAnalysisRuleError:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/TableAlias'
          description: An error name for the error.
        type:
          allOf:
          - $ref: '#/components/schemas/AnalysisRuleType'
          description: The analysis rule type.
        code:
          allOf:
          - $ref: '#/components/schemas/String'
          description: An error code for the error.
        message:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A description of why the call failed.
      required:
      - name
      - type
      - code
      - message
      description: An error that describes why a schema could not be fetched.
    BatchGetSchemaAnalysisRuleErrorList:
      type: array
      items:
        $ref: '#/components/schemas/BatchGetSchemaAnalysisRuleError'
    BatchGetSchemaAnalysisRuleInput:
      type: object
      properties:
        collaborationIdentifier:
          allOf:
          - $ref: '#/components/schemas/CollaborationIdentifier'
          description: The unique identifier of the collaboration that contains the
            schema analysis rule.
        schemaAnalysisRuleRequests:
          allOf:
          - $ref: '#/components/schemas/SchemaAnalysisRuleRequestList'
          description: The information that's necessary to retrieve a schema analysis
            rule.
      required:
      - collaborationIdentifier
      - schemaAnalysisRuleRequests
    BatchGetSchemaAnalysisRuleOutput:
      type: object
      properties:
        analysisRules:
          allOf:
          - $ref: '#/components/schemas/SchemaAnalysisRuleList'
          description: The retrieved list of analysis rules.
        errors:
          allOf:
          - $ref: '#/components/schemas/BatchGetSchemaAnalysisRuleErrorList'
          description: Error reasons for schemas that could not be retrieved. One
            error is returned for every schema that could not be retrieved.
      required:
      - analysisRules
      - errors
    BatchGetSchemaError:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/TableAlias'
          description: An error name for the error.
        code:
          allOf:
          - $ref: '#/components/schemas/String'
          description: An error code for the error.
        message:
          allOf:
          - $ref: '#/components/schemas/String'
          description: An error message for the error.
      required:
      - name
      - code
      - message
      description: An error describing why a schema could not be fetched.
    BatchGetSchemaErrorList:
      type: array
      items:
        $ref: '#/components/schemas/BatchGetSchemaError'
    BatchGetSchemaInput:
      type: object
      properties:
        collaborationIdentifier:
          allOf:
          - $ref: '#/components/schemas/CollaborationIdentifier'
          description: A unique identifier for the collaboration that the schemas
            belong to. Currently accepts collaboration ID.
        names:
          allOf:
          - $ref: '#/components/schemas/TableAliasList'
          description: The names for the schema objects to retrieve.
      required:
      - collaborationIdentifier
      - names
    BatchGetSchemaOutput:
      type: object
      properties:
        schemas:
          allOf:
          - $ref: '#/components/schemas/SchemaList'
          description: The retrieved list of schemas.
        errors:
          allOf:
          - $ref: '#/components/schemas/BatchGetSchemaErrorList'
          description: Error reasons for schemas that could not be retrieved. One
            error is returned for every schema that could not be retrieved.
      required:
      - schemas
      - errors
    BilledJobResourceUtilization:
      type: object
      properties:
        units:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: The number of Clean Rooms Processing Unit (CRPU) hours that
            have been billed.
      required:
      - units
      description: Information related to the utilization of resources that have been
        billed or charged for in a given context, such as a protected job.
    BilledResourceUtilization:
      type: object
      properties:
        units:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: The number of Clean Rooms Processing Unit (CRPU) hours that
            have been billed.
      required:
      - units
      description: Information related to the utilization of resources that have been
        billed or charged for in a given context, such as a protected query.
    CleanroomsArn:
      type: string
      pattern: ^arn:aws:cleanrooms:[\w]{2}-[\w]{4,9}-[\d]:[\d]{12}:[\d\w/-]+$
      maxLength: 100
    Collaboration:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique ID for the collaboration.
        arn:
          allOf:
          - $ref: '#/components/schemas/CollaborationArn'
          description: The unique ARN for the collaboration.
        name:
          allOf:
          - $ref: '#/components/schemas/CollaborationName'
          description: A human-readable identifier provided by the collaboration owner.
            Display names are not unique.
        description:
          allOf:
          - $ref: '#/components/schemas/CollaborationDescription'
          description: A description of the collaboration provided by the collaboration
            owner.
        creatorAccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The identifier used to reference members of the collaboration.
            Currently only supports Amazon Web Services account ID.
        creatorDisplayName:
          allOf:
          - $ref: '#/components/schemas/DisplayName'
          description: A display name of the collaboration creator.
        createTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time when the collaboration was created.
        updateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time the collaboration metadata was last updated.
        memberStatus:
          allOf:
          - $ref: '#/components/schemas/MemberStatus'
          description: The status of a member in a collaboration.
        membershipId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique ID for your membership within the collaboration.
        membershipArn:
          allOf:
          - $ref: '#/components/schemas/MembershipArn'
          description: The unique ARN for your membership within the collaboration.
        dataEncryptionMetadata:
          allOf:
          - $ref: '#/components/schemas/DataEncryptionMetadata'
          description: The settings for client-side encryption for cryptographic computing.
        queryLogStatus:
          allOf:
          - $ref: '#/components/schemas/CollaborationQueryLogStatus'
          description: 'An indicator as to whether query logging has been enabled
            or disabled for the collaboration.


            When `ENABLED`, Clean Rooms logs details about queries run within this
            collaboration and those logs can be viewed in Amazon CloudWatch Logs.
            The default value is `DISABLED`.'
        jobLogStatus:
          allOf:
          - $ref: '#/components/schemas/CollaborationJobLogStatus'
          description: 'An indicator as to whether job logging has been enabled or
            disabled for the collaboration.


            When `ENABLED`, Clean Rooms logs details about jobs run within this collaboration
            and those logs can be viewed in Amazon CloudWatch Logs. The default value
            is `DISABLED`.'
        analyticsEngine:
          allOf:
          - $ref: '#/components/schemas/AnalyticsEngine'
          description: The analytics engine for the collaboration.
      required:
      - id
      - arn
      - name
      - creatorAccountId
      - creatorDisplayName
      - createTime
      - updateTime
      - memberStatus
      - queryLogStatus
      description: The multi-party data share environment. The collaboration contains
        metadata about its purpose and participants.
    CollaborationAnalysisTemplate:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/AnalysisTemplateIdentifier'
          description: The identifier of the analysis template.
        arn:
          allOf:
          - $ref: '#/components/schemas/AnalysisTemplateArn'
          description: The Amazon Resource Name (ARN) of the analysis template.
        collaborationId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: A unique identifier for the collaboration that the analysis
            templates belong to. Currently accepts collaboration ID.
        collaborationArn:
          allOf:
          - $ref: '#/components/schemas/CollaborationArn'
          description: The unique ARN for the analysis template’s associated collaboration.
        description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          description: The description of the analysis template.
        creatorAccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The identifier used to reference members of the collaboration.
            Currently only supports Amazon Web Services account ID.
        name:
          allOf:
          - $ref: '#/components/schemas/ResourceAlias'
          description: The name of the analysis template.
        createTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time that the analysis template within a collaboration
            was created.
        updateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time that the analysis template in the collaboration was
            last updated.
        schema:
          allOf:
          - $ref: '#/components/schemas/AnalysisSchema'
          description: The entire schema object.
        format:
          allOf:
          - $ref: '#/components/schemas/AnalysisFormat'
          description: The format of the analysis template in the collaboration.
        source:
          allOf:
          - $ref: '#/components/schemas/AnalysisSource'
          description: The source of the analysis template within a collaboration.
        sourceMetadata:
          allOf:
          - $ref: '#/components/schemas/AnalysisSourceMetadata'
          description: The source metadata for the collaboration analysis template.
        analysisParameters:
          allOf:
          - $ref: '#/components/schemas/AnalysisParameterList'
          description: The analysis parameters that have been specified in the analysis
            template.
        validations:
          allOf:
          - $ref: '#/components/schemas/AnalysisTemplateValidationStatusDetailList'
          description: The validations that were performed.
      required:
      - id
      - arn
      - collaborationId
      - collaborationArn
      - creatorAccountId
      - name
      - createTime
      - updateTime
      - schema
      - format
      description: The analysis template within a collaboration.
    CollaborationAnalysisTemplateList:
      type: array
      items:
        $ref: '#/components/schemas/CollaborationAnalysisTemplate'
    CollaborationAnalysisTemplateSummary:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/AnalysisTemplateArn'
          description: The Amazon Resource Name (ARN) of the analysis template.
        createTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time that the summary of the analysis template in a collaboration
            was created.
        id:
          allOf:
          - $ref: '#/components/schemas/AnalysisTemplateIdentifier'
          description: The identifier of the analysis template.
        name:
          allOf:
          - $ref: '#/components/schemas/ResourceAlias'
          description: The name of the analysis template.
        updateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time that the summary of the analysis template in the collaboration
            was last updated.
        collaborationArn:
          allOf:
          - $ref: '#/components/schemas/CollaborationArn'
          description: The unique ARN for the analysis template’s associated collaboration.
        collaborationId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: A unique identifier for the collaboration that the analysis
            templates belong to. Currently accepts collaboration ID.
        creatorAccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The identifier used to reference members of the collaboration.
            Currently only supports Amazon Web Services account ID.
        description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          description: The description of the analysis template.
      required:
      - arn
      - createTime
      - id
      - name
      - updateTime
      - collaborationArn
      - collaborationId
      - creatorAccountId
      description: The metadata of the analysis template within a collaboration.
    CollaborationAnalysisTemplateSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/CollaborationAnalysisTemplateSummary'
    CollaborationArn:
      type: string
      pattern: ^arn:aws:[\w]+:[\w]{2}-[\w]{4,9}-[\d]:[\d]{12}:collaboration/[\d\w-]+$
      maxLength: 100
    CollaborationConfiguredAudienceModelAssociation:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/ConfiguredAudienceModelAssociationIdentifier'
          description: The identifier of the configured audience model association.
        arn:
          allOf:
          - $ref: '#/components/schemas/ConfiguredAudienceModelAssociationArn'
          description: The Amazon Resource Name (ARN) of the configured audience model
            association.
        collaborationId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: A unique identifier for the collaboration that the configured
            audience model associations belong to. Accepts collaboration ID.
        collaborationArn:
          allOf:
          - $ref: '#/components/schemas/CollaborationArn'
          description: The unique ARN for the configured audience model's associated
            collaboration.
        configuredAudienceModelArn:
          allOf:
          - $ref: '#/components/schemas/ConfiguredAudienceModelArn'
          description: The Amazon Resource Name (ARN) of the configure audience model.
        name:
          allOf:
          - $ref: '#/components/schemas/ConfiguredAudienceModelAssociationName'
          description: The name of the configured audience model association.
        description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          description: The description of the configured audience model association.
        creatorAccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The identifier used to reference members of the collaboration.
            Only supports Amazon Web Services account ID.
        createTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the configured audience model association
            was created.
        updateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The most recent time at which the configured audience model
            association was updated.
      required:
      - id
      - arn
      - collaborationId
      - collaborationArn
      - configuredAudienceModelArn
      - name
      - creatorAccountId
      - createTime
      - updateTime
      description: The configured audience model association within a collaboration.
    CollaborationConfiguredAudienceModelAssociationSummary:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/ConfiguredAudienceModelAssociationArn'
          description: The Amazon Resource Name (ARN) of the configured audience model
            association.
        createTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the configured audience model association
            was created.
        id:
          allOf:
          - $ref: '#/components/schemas/ConfiguredAudienceModelAssociationIdentifier'
          description: The identifier of the configured audience model association.
        name:
          allOf:
          - $ref: '#/components/schemas/ConfiguredAudienceModelAssociationName'
          description: The name of the configured audience model association.
        updateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The most recent time at which the configured audience model
            association was updated.
        collaborationArn:
          allOf:
          - $ref: '#/components/schemas/CollaborationArn'
          description: The unique ARN for the configured audience model's associated
            collaboration.
        collaborationId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: A unique identifier for the collaboration that the configured
            audience model associations belong to. Accepts collaboration ID.
        creatorAccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The identifier used to reference members of the collaboration.
            Only supports Amazon Web Services account ID.
        description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          description: The description of the configured audience model association.
      required:
      - arn
      - createTime
      - id
      - name
      - updateTime
      - collaborationArn
      - collaborationId
      - creatorAccountId
      description: A summary of the configured audience model association in the collaboration.
    CollaborationConfiguredAudienceModelAssociationSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/CollaborationConfiguredAudienceModelAssociationSummary'
    CollaborationDescription:
      type: string
      pattern: ^(?!\s*$)[\u0020-\uD7FF\uE000-\uFFFD\uD800\uDBFF-\uDC00\uDFFF\t\r\n]*$
      minLength: 1
      maxLength: 255
    CollaborationIdNamespaceAssociation:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/IdNamespaceAssociationIdentifier'
          description: The unique identifier of the collaboration ID namespace association.
        arn:
          allOf:
          - $ref: '#/components/schemas/IdNamespaceAssociationArn'
          description: The Amazon Resource Name (ARN) of the collaboration ID namespace
            association.
        collaborationId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier of the collaboration that contains the
            collaboration ID namespace association.
        collaborationArn:
          allOf:
          - $ref: '#/components/schemas/CollaborationArn'
          description: The Amazon Resource Name (ARN) of the collaboration that contains
            the collaboration ID namespace association.
        name:
          allOf:
          - $ref: '#/components/schemas/GenericResourceName'
          description: The name of the collaboration ID namespace association.
        description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          description: The description of the collaboration ID namespace association.
        creatorAccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The unique identifier of the Amazon Web Services account that
            created the collaboration ID namespace association.
        createTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the collaboration ID namespace association
            was created.
        updateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The most recent time at which the collaboration ID namespace
            was updated.
        inputReferenceConfig:
          allOf:
          - $ref: '#/components/schemas/IdNamespaceAssociationInputReferenceConfig'
          description: The input reference configuration that's necessary to create
            the collaboration ID namespace association.
        inputReferenceProperties:
          allOf:
          - $ref: '#/components/schemas/IdNamespaceAssociationInputReferenceProperties'
          description: The input reference properties that are needed to create the
            collaboration ID namespace association.
        idMappingConfig:
          $ref: '#/components/schemas/IdMappingConfig'
      required:
      - id
      - arn
      - collaborationId
      - collaborationArn
      - name
      - creatorAccountId
      - createTime
      - updateTime
      - inputReferenceConfig
      - inputReferenceProperties
      description: Defines details for the collaboration ID namespace association.
    CollaborationIdNamespaceAssociationSummary:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/IdNamespaceAssociationArn'
          description: The Amazon Resource Name (ARN) of the collaboration ID namespace
            association.
        createTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the collaboration ID namespace association
            was created.
        id:
          allOf:
          - $ref: '#/components/schemas/IdNamespaceAssociationIdentifier'
          description: The unique identifier of the collaboration ID namespace association.
        updateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The most recent time at which the collaboration ID namespace
            association was updated.
        collaborationArn:
          allOf:
          - $ref: '#/components/schemas/CollaborationArn'
          description: The Amazon Resource Name (ARN) of the collaboration that contains
            this collaboration ID namespace association.
        collaborationId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier of the collaboration that contains this
            collaboration ID namespace association.
        creatorAccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The Amazon Web Services account that created this collaboration
            ID namespace association.
        inputReferenceConfig:
          allOf:
          - $ref: '#/components/schemas/IdNamespaceAssociationInputReferenceConfig'
          description: The input reference configuration that's used to create the
            collaboration ID namespace association.
        name:
          allOf:
          - $ref: '#/components/schemas/GenericResourceName'
          description: The name of the collaboration ID namespace association.
        description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          description: The description of the collaboration ID namepsace association.
        inputReferenceProperties:
          allOf:
          - $ref: '#/components/schemas/IdNamespaceAssociationInputReferencePropertiesSummary'
          description: The input reference properties that are used to create the
            collaboration ID namespace association.
      required:
      - arn
      - createTime
      - id
      - updateTime
      - collaborationArn
      - collaborationId
      - creatorAccountId
      - inputReferenceConfig
      - name
      - inputReferenceProperties
      description: Provides summary information about the collaboration ID namespace
        association.
    CollaborationIdNamespaceAssociationSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/CollaborationIdNamespaceAssociationSummary'
    CollaborationIdentifier:
      type: string
      pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
      minLength: 36
      maxLength: 36
    CollaborationJobLogStatus:
      type: string
      enum:
      - ENABLED
      - DISABLED
    CollaborationName:
      type: string
      pattern: ^(?!\s*$)[\u0020-\uD7FF\uE000-\uFFFD\uD800\uDBFF-\uDC00\uDFFF\t]*$
      minLength: 1
      maxLength: 100
    CollaborationPrivacyBudgetSummary:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier of the collaboration privacy budget.
        privacyBudgetTemplateId:
          allOf:
          - $ref: '#/components/schemas/PrivacyBudgetTemplateIdentifier'
          description: The unique identifier of the collaboration privacy budget template.
        privacyBudgetTemplateArn:
          allOf:
          - $ref: '#/components/schemas/PrivacyBudgetTemplateArn'
          description: The ARN of the collaboration privacy budget template.
        collaborationId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier of the collaboration that includes this
            privacy budget.
        collaborationArn:
          allOf:
          - $ref: '#/components/schemas/CollaborationArn'
          description: The ARN of the collaboration that includes this privacy budget.
        creatorAccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The unique identifier of the account that created this privacy
            budget.
        type:
          allOf:
          - $ref: '#/components/schemas/PrivacyBudgetType'
          description: The type of privacy budget template.
        createTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the privacy budget was created.
        updateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The most recent time at which the privacy budget was updated.
        budget:
          allOf:
          - $ref: '#/components/schemas/PrivacyBudget'
          description: The includes epsilon provided and utility in terms of aggregations.
      required:
      - id
      - privacyBudgetTemplateId
      - privacyBudgetTemplateArn
      - collaborationId
      - collaborationArn
      - creatorAccountId
      - type
      - createTime
      - updateTime
      - budget
      description: A summary of the collaboration privacy budgets. This summary includes
        the collaboration information, creation information, epsilon provided, and
        utility in terms of aggregations.
    CollaborationPrivacyBudgetSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/CollaborationPrivacyBudgetSummary'
    CollaborationPrivacyBudgetTemplate:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/PrivacyBudgetTemplateIdentifier'
          description: The unique identifier of the collaboration privacy budget template.
        arn:
          allOf:
          - $ref: '#/components/schemas/PrivacyBudgetTemplateArn'
          description: The ARN of the collaboration privacy budget template.
        collaborationId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier of the collaboration that includes this
            collaboration privacy budget template.
        collaborationArn:
          allOf:
          - $ref: '#/components/schemas/CollaborationArn'
          description: The ARN of the collaboration that includes this collaboration
            privacy budget template.
        creatorAccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The unique identifier of the account that created this collaboration
            privacy budget template.
        createTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the collaboration privacy budget template
            was created.
        updateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The most recent time at which the collaboration privacy budget
            template was updated.
        privacyBudgetType:
          allOf:
          - $ref: '#/components/schemas/PrivacyBudgetType'
          description: The type of privacy budget template.
        autoRefresh:
          allOf:
          - $ref: '#/components/schemas/PrivacyBudgetTemplateAutoRefresh'
          description: 'How often the privacy budget refreshes.


            If you plan to regularly bring new data into the collaboration, use `CALENDAR_MONTH`
            to automatically get a new privacy budget for the collaboration every
            calendar month. Choosing this option allows arbitrary amounts of information
            to be revealed about rows of the data when repeatedly queried across refreshes.
            Avoid choosing this if the same rows will be repeatedly queried between
            privacy budget refreshes.'
        parameters:
          allOf:
          - $ref: '#/components/schemas/PrivacyBudgetTemplateParametersOutput'
          description: Specifies the epsilon and noise parameters for the privacy
            budget template.
      required:
      - id
      - arn
      - collaborationId
      - collaborationArn
      - creatorAccountId
      - createTime
      - updateTime
      - privacyBudgetType
      - autoRefresh
      - parameters
      description: An array that specifies the information for a collaboration's privacy
        budget template.
    CollaborationPrivacyBudgetTemplateSummary:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/PrivacyBudgetTemplateIdentifier'
          description: The unique identifier of the collaboration privacy budget template.
        arn:
          allOf:
          - $ref: '#/components/schemas/PrivacyBudgetTemplateArn'
          description: The ARN of the collaboration privacy budget template.
        collaborationId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier of the collaboration that contains this
            collaboration privacy budget template.
        collaborationArn:
          allOf:
          - $ref: '#/components/schemas/CollaborationArn'
          description: The ARN of the collaboration that contains this collaboration
            privacy budget template.
        creatorAccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The unique identifier of the account that created this collaboration
            privacy budget template.
        privacyBudgetType:
          allOf:
          - $ref: '#/components/schemas/PrivacyBudgetType'
          description: The type of the privacy budget template.
        createTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the collaboration privacy budget template
            was created.
        updateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The most recent time at which the collaboration privacy budget
            template was updated.
      required:
      - id
      - arn
      - collaborationId
      - collaborationArn
      - creatorAccountId
      - privacyBudgetType
      - createTime
      - updateTime
      description: A summary of the collaboration's privacy budget template. This
        summary includes information about who created the privacy budget template
        and what collaborations it belongs to.
    CollaborationPrivacyBudgetTemplateSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/CollaborationPrivacyBudgetTemplateSummary'
    CollaborationQueryLogStatus:
      type: string
      enum:
      - ENABLED
      - DISABLED
    CollaborationSummary:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The identifier for the collaboration.
        arn:
          allOf:
          - $ref: '#/components/schemas/CollaborationArn'
          description: The ARN of the collaboration.
        name:
          allOf:
          - $ref: '#/components/schemas/CollaborationName'
          description: A human-readable identifier provided by the collaboration owner.
            Display names are not unique.
        creatorAccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The identifier used to reference members of the collaboration.
            Currently only supports Amazon Web Services account ID.
        creatorDisplayName:
          allOf:
          - $ref: '#/components/schemas/DisplayName'
          description: The display name of the collaboration creator.
        createTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time when the collaboration was created.
        updateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time the collaboration metadata was last updated.
        memberStatus:
          allOf:
          - $ref: '#/components/schemas/MemberStatus'
          description: The status of a member in a collaboration.
        membershipId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The identifier of a member in a collaboration.
        membershipArn:
          allOf:
          - $ref: '#/components/schemas/MembershipArn'
          description: The ARN of a member in a collaboration.
        analyticsEngine:
          allOf:
          - $ref: '#/components/schemas/AnalyticsEngine'
          description: The analytics engine.
      required:
      - id
      - arn
      - name
      - creatorAccountId
      - creatorDisplayName
      - createTime
      - updateTime
      - memberStatus
      description: The metadata of the collaboration.
    CollaborationSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/CollaborationSummary'
    Column:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/ColumnName'
          description: The name of the column.
        type:
          allOf:
          - $ref: '#/components/schemas/ColumnTypeString'
          description: The type of the column.
      required:
      - name
      - type
      description: A column within a schema relation, derived from the underlying
        table.
    ColumnList:
      type: array
      items:
        $ref: '#/components/schemas/Column'
    ColumnName:
      type: string
      pattern: ^[a-z0-9_](([a-z0-9_ ]+-)*([a-z0-9_ ]+))?$
      maxLength: 128
    ColumnTypeString:
      type: string
      pattern: ^[\u0020-\uD7FF\uE000-\uFFFD\uD800\uDBFF-\uDC00\uDFFF\t]*$
      maxLength: 255
    ComputeConfiguration:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/WorkerComputeConfiguration'
        description: |-
          The worker configuration for the compute environment.
      description: |-
        The configuration of the compute resources for an analysis with the Spark analytics engine.
    ConfigurationDetails:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/DirectAnalysisConfigurationDetails'
        description: |-
          The direct analysis configuration details.
      description: |-
        The configuration details.
    ConfiguredAudienceModelArn:
      type: string
      pattern: ^arn:aws[-a-z]*:cleanrooms-ml:[-a-z0-9]+:[0-9]{12}:configured-audience-model/[-a-zA-Z0-9_/.]+$
      minLength: 20
      maxLength: 2048
    ConfiguredAudienceModelAssociation:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/ConfiguredAudienceModelAssociationIdentifier'
          description: A unique identifier of the configured audience model association.
        arn:
          allOf:
          - $ref: '#/components/schemas/ConfiguredAudienceModelAssociationArn'
          description: The Amazon Resource Name (ARN) of the configured audience model
            association.
        configuredAudienceModelArn:
          allOf:
          - $ref: '#/components/schemas/ConfiguredAudienceModelArn'
          description: The Amazon Resource Name (ARN) of the configured audience model
            that was used for this configured audience model association.
        membershipId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: A unique identifier for the membership that contains this configured
            audience model association.
        membershipArn:
          allOf:
          - $ref: '#/components/schemas/MembershipArn'
          description: The Amazon Resource Name (ARN) of the membership that contains
            this configured audience model association.
        collaborationId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: A unique identifier of the collaboration that contains this
            configured audience model association.
        collaborationArn:
          allOf:
          - $ref: '#/components/schemas/CollaborationArn'
          description: The Amazon Resource Name (ARN) of the collaboration that contains
            this configured audience model association.
        name:
          allOf:
          - $ref: '#/components/schemas/ConfiguredAudienceModelAssociationName'
          description: The name of the configured audience model association.
        manageResourcePolicies:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: When `TRUE`, indicates that the resource policy for the configured
            audience model resource being associated is configured for Clean Rooms
            to manage permissions related to the given collaboration. When `FALSE`,
            indicates that the configured audience model resource owner will manage
            permissions related to the given collaboration.
        description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          description: The description of the configured audience model association.
        createTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the configured audience model association
            was created.
        updateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The most recent time at which the configured audience model
            association was updated.
      required:
      - id
      - arn
      - configuredAudienceModelArn
      - membershipId
      - membershipArn
      - collaborationId
      - collaborationArn
      - name
      - manageResourcePolicies
      - createTime
      - updateTime
      description: Details about the configured audience model association.
    ConfiguredAudienceModelAssociationArn:
      type: string
      pattern: ^arn:aws:cleanrooms:[\w]{2}-[\w]{4,9}-[\d]:[\d]{12}:membership/[\d\w-]+/configuredaudiencemodelassociation/[\d\w-]+$
      maxLength: 256
    ConfiguredAudienceModelAssociationIdentifier:
      type: string
      pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
      minLength: 36
      maxLength: 36
    ConfiguredAudienceModelAssociationName:
      type: string
      pattern: ^(?!\s*$)[\u0020-\uD7FF\uE000-\uFFFD\uD800\uDBFF-\uDC00\uDFFF\t]*$
      minLength: 1
      maxLength: 100
    ConfiguredAudienceModelAssociationSummary:
      type: object
      properties:
        membershipId:
          allOf:
          - $ref: '#/components/schemas/MembershipIdentifier'
          description: A unique identifier of the membership that contains the configured
            audience model association.
        membershipArn:
          allOf:
          - $ref: '#/components/schemas/MembershipArn'
          description: The Amazon Resource Name (ARN) of the membership that contains
            the configured audience model association.
        collaborationArn:
          allOf:
          - $ref: '#/components/schemas/CollaborationArn'
          description: The Amazon Resource Name (ARN) of the collaboration that contains
            the configured audience model association.
        collaborationId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: A unique identifier of the collaboration that configured audience
            model is associated with.
        createTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the configured audience model association
            was created.
        updateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The most recent time at which the configured audience model
            association was updated.
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: A unique identifier of the configured audience model association.
        arn:
          allOf:
          - $ref: '#/components/schemas/ConfiguredAudienceModelAssociationArn'
          description: The Amazon Resource Name (ARN) of the configured audience model
            association.
        name:
          allOf:
          - $ref: '#/components/schemas/ConfiguredAudienceModelAssociationName'
          description: The name of the configured audience model association.
        configuredAudienceModelArn:
          allOf:
          - $ref: '#/components/schemas/ConfiguredAudienceModelArn'
          description: The Amazon Resource Name (ARN) of the configured audience model
            that was used for this configured audience model association.
        description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          description: The description of the configured audience model association.
      required:
      - membershipId
      - membershipArn
      - collaborationArn
      - collaborationId
      - createTime
      - updateTime
      - id
      - arn
      - name
      - configuredAudienceModelArn
      description: A summary of the configured audience model association.
    ConfiguredAudienceModelAssociationSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/ConfiguredAudienceModelAssociationSummary'
    ConfiguredTable:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique ID for the configured table.
        arn:
          allOf:
          - $ref: '#/components/schemas/ConfiguredTableArn'
          description: The unique ARN for the configured table.
        name:
          allOf:
          - $ref: '#/components/schemas/DisplayName'
          description: A name for the configured table.
        description:
          allOf:
          - $ref: '#/components/schemas/TableDescription'
          description: A description for the configured table.
        tableReference:
          allOf:
          - $ref: '#/components/schemas/TableReference'
          description: The table that this configured table represents.
        createTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time the configured table was created.
        updateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time the configured table was last updated
        analysisRuleTypes:
          allOf:
          - $ref: '#/components/schemas/ConfiguredTableAnalysisRuleTypeList'
          description: The types of analysis rules associated with this configured
            table. Currently, only one analysis rule may be associated with a configured
            table.
        analysisMethod:
          allOf:
          - $ref: '#/components/schemas/AnalysisMethod'
          description: 'The analysis method for the configured table.


            `DIRECT_QUERY` allows SQL queries to be run directly on this table.


            `DIRECT_JOB` allows PySpark jobs to be run directly on this table.


            `MULTIPLE` allows both SQL queries and PySpark jobs to be run directly
            on this table.'
        allowedColumns:
          allOf:
          - $ref: '#/components/schemas/AllowedColumnList'
          description: The columns within the underlying Glue table that can be utilized
            within collaborations.
        selectedAnalysisMethods:
          allOf:
          - $ref: '#/components/schemas/SelectedAnalysisMethods'
          description: The selected analysis methods for the configured table.
      required:
      - id
      - arn
      - name
      - tableReference
      - createTime
      - updateTime
      - analysisRuleTypes
      - analysisMethod
      - allowedColumns
      description: A table that has been configured for use in a collaboration.
    ConfiguredTableAnalysisRule:
      type: object
      properties:
        configuredTableId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique ID for the configured table.
        configuredTableArn:
          allOf:
          - $ref: '#/components/schemas/ConfiguredTableArn'
          description: The unique ARN for the configured table.
        policy:
          allOf:
          - $ref: '#/components/schemas/ConfiguredTableAnalysisRulePolicy'
          description: The policy that controls SQL query rules.
        type:
          allOf:
          - $ref: '#/components/schemas/ConfiguredTableAnalysisRuleType'
          description: The type of configured table analysis rule.
        createTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time the configured table analysis rule was created.
        updateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time the configured table analysis rule was last updated.
      required:
      - configuredTableId
      - configuredTableArn
      - policy
      - type
      - createTime
      - updateTime
      description: A configured table analysis rule, which limits how data for this
        table can be used.
    ConfiguredTableAnalysisRulePolicy:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/ConfiguredTableAnalysisRulePolicyV1'
        description: |-
          Controls on the query specifications that can be run on a configured table.
      description: |-
        Controls on the query specifications that can be run on a configured table.
    ConfiguredTableAnalysisRulePolicyV1:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/AnalysisRuleList'
        description: |-
          Analysis rule type that enables only list queries on a configured table.
      - allOf:
        - $ref: '#/components/schemas/AnalysisRuleAggregation'
        description: |-
          Analysis rule type that enables only aggregation queries on a configured table.
      - allOf:
        - $ref: '#/components/schemas/AnalysisRuleCustom'
      description: |-
        Controls on the query specifications that can be run on a configured table.
    ConfiguredTableAnalysisRuleType:
      type: string
      enum:
      - AGGREGATION
      - LIST
      - CUSTOM
    ConfiguredTableAnalysisRuleTypeList:
      type: array
      items:
        $ref: '#/components/schemas/ConfiguredTableAnalysisRuleType'
    ConfiguredTableArn:
      type: string
      pattern: ^arn:aws:[\w]+:[\w]{2}-[\w]{4,9}-[\d]:[\d]{12}:configuredtable/[\d\w-]+$
      maxLength: 100
    ConfiguredTableAssociation:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/ConfiguredTableAssociationArn'
          description: The unique ARN for the configured table association.
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique ID for the configured table association.
        configuredTableId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique ID for the configured table that the association
            refers to.
        configuredTableArn:
          allOf:
          - $ref: '#/components/schemas/ConfiguredTableArn'
          description: The unique ARN for the configured table that the association
            refers to.
        membershipId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique ID for the membership this configured table association
            belongs to.
        membershipArn:
          allOf:
          - $ref: '#/components/schemas/MembershipArn'
          description: The unique ARN for the membership this configured table association
            belongs to.
        roleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          description: The service will assume this role to access catalog metadata
            and query the table.
        name:
          allOf:
          - $ref: '#/components/schemas/TableAlias'
          description: The name of the configured table association, in lowercase.
            The table is identified by this name when running protected queries against
            the underlying data.
        description:
          allOf:
          - $ref: '#/components/schemas/TableDescription'
          description: A description of the configured table association.
        analysisRuleTypes:
          allOf:
          - $ref: '#/components/schemas/ConfiguredTableAssociationAnalysisRuleTypeList'
          description: The analysis rule types for the configured table association.
        createTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time the configured table association was created.
        updateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time the configured table association was last updated.
      required:
      - arn
      - id
      - configuredTableId
      - configuredTableArn
      - membershipId
      - membershipArn
      - roleArn
      - name
      - createTime
      - updateTime
      description: A configured table association links a configured table to a collaboration.
    ConfiguredTableAssociationAnalysisRule:
      type: object
      properties:
        membershipIdentifier:
          allOf:
          - $ref: '#/components/schemas/MembershipIdentifier'
          description: The membership identifier for the configured table association
            analysis rule.
        configuredTableAssociationId:
          allOf:
          - $ref: '#/components/schemas/ConfiguredTableAssociationIdentifier'
          description: The unique identifier for the configured table association.
        configuredTableAssociationArn:
          allOf:
          - $ref: '#/components/schemas/ConfiguredTableAssociationArn'
          description: The Amazon Resource Name (ARN) of the configured table association.
        policy:
          allOf:
          - $ref: '#/components/schemas/ConfiguredTableAssociationAnalysisRulePolicy'
          description: The policy of the configured table association analysis rule.
        type:
          allOf:
          - $ref: '#/components/schemas/ConfiguredTableAssociationAnalysisRuleType'
          description: The type of the configured table association analysis rule.
        createTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The creation time of the configured table association analysis
            rule.
        updateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The update time of the configured table association analysis
            rule.
      required:
      - membershipIdentifier
      - configuredTableAssociationId
      - configuredTableAssociationArn
      - policy
      - type
      - createTime
      - updateTime
      description: An analysis rule for a configured table association. This analysis
        rule specifies how data from the table can be used within its associated collaboration.
        In the console, the `ConfiguredTableAssociationAnalysisRule` is referred to
        as the _collaboration analysis rule_.
    ConfiguredTableAssociationAnalysisRuleAggregation:
      type: object
      properties:
        allowedResultReceivers:
          allOf:
          - $ref: '#/components/schemas/AllowedResultReceivers'
          description: The list of collaboration members who are allowed to receive
            results of queries run with this configured table.
        allowedAdditionalAnalyses:
          allOf:
          - $ref: '#/components/schemas/AllowedAdditionalAnalyses'
          description: 'The list of resources or wildcards (ARNs) that are allowed
            to perform additional analysis on query output.


            The `allowedAdditionalAnalyses` parameter is currently supported for the
            list analysis rule (`AnalysisRuleList`) and the custom analysis rule (`AnalysisRuleCustom`).'
      description: The configured table association analysis rule applied to a configured
        table with the aggregation analysis rule.
    ConfiguredTableAssociationAnalysisRuleCustom:
      type: object
      properties:
        allowedResultReceivers:
          allOf:
          - $ref: '#/components/schemas/AllowedResultReceivers'
          description: The list of collaboration members who are allowed to receive
            results of queries run with this configured table.
        allowedAdditionalAnalyses:
          allOf:
          - $ref: '#/components/schemas/AllowedAdditionalAnalyses'
          description: The list of resources or wildcards (ARNs) that are allowed
            to perform additional analysis on query output.
      description: The configured table association analysis rule applied to a configured
        table with the custom analysis rule.
    ConfiguredTableAssociationAnalysisRuleList:
      type: object
      properties:
        allowedResultReceivers:
          allOf:
          - $ref: '#/components/schemas/AllowedResultReceivers'
          description: The list of collaboration members who are allowed to receive
            results of queries run with this configured table.
        allowedAdditionalAnalyses:
          allOf:
          - $ref: '#/components/schemas/AllowedAdditionalAnalyses'
          description: The list of resources or wildcards (ARNs) that are allowed
            to perform additional analysis on query output.
      description: The configured table association analysis rule applied to a configured
        table with the list analysis rule.
    ConfiguredTableAssociationAnalysisRulePolicy:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/ConfiguredTableAssociationAnalysisRulePolicyV1'
        description: |-
          The policy for the configured table association analysis rule.
      description: |-
        Controls on the query specifications that can be run on an associated configured table.
    ConfiguredTableAssociationAnalysisRulePolicyV1:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/ConfiguredTableAssociationAnalysisRuleList'
        description: |-
          Analysis rule type that enables only list queries on a configured table.
      - allOf:
        - $ref: '#/components/schemas/ConfiguredTableAssociationAnalysisRuleAggregation'
        description: |-
          Analysis rule type that enables only aggregation queries on a configured table.
      - allOf:
        - $ref: '#/components/schemas/ConfiguredTableAssociationAnalysisRuleCustom'
        description: |-
          Analysis rule type that enables the table owner to approve custom SQL queries on their configured tables. It supports differential privacy.
      description: |-
        Controls on the query specifications that can be run on an associated configured table.
    ConfiguredTableAssociationAnalysisRuleType:
      type: string
      enum:
      - AGGREGATION
      - LIST
      - CUSTOM
    ConfiguredTableAssociationAnalysisRuleTypeList:
      type: array
      items:
        $ref: '#/components/schemas/ConfiguredTableAssociationAnalysisRuleType'
    ConfiguredTableAssociationArn:
      type: string
      pattern: ^arn:aws:[\w]+:[\w]{2}-[\w]{4,9}-[\d]:[\d]{12}:configuredtableassociation/[\d\w-]+/[\d\w-]+$
      maxLength: 100
    ConfiguredTableAssociationIdentifier:
      type: string
      pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
      minLength: 36
      maxLength: 36
    ConfiguredTableAssociationSummary:
      type: object
      properties:
        configuredTableId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique configured table ID that this configured table association
            refers to.
        membershipId:
          allOf:
          - $ref: '#/components/schemas/MembershipIdentifier'
          description: The unique ID for the membership that the configured table
            association belongs to.
        membershipArn:
          allOf:
          - $ref: '#/components/schemas/MembershipArn'
          description: The unique ARN for the membership that the configured table
            association belongs to.
        name:
          allOf:
          - $ref: '#/components/schemas/TableAlias'
          description: The name of the configured table association. The table is
            identified by this name when running Protected Queries against the underlying
            data.
        createTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time the configured table association was created.
        updateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time the configured table association was last updated.
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique ID for the configured table association.
        arn:
          allOf:
          - $ref: '#/components/schemas/ConfiguredTableAssociationArn'
          description: The unique ARN for the configured table association.
        analysisRuleTypes:
          allOf:
          - $ref: '#/components/schemas/ConfiguredTableAssociationAnalysisRuleTypeList'
          description: The analysis rule types that are associated with the configured
            table associations in this summary.
      required:
      - configuredTableId
      - membershipId
      - membershipArn
      - name
      - createTime
      - updateTime
      - id
      - arn
      description: The configured table association summary for the objects listed
        by the request.
    ConfiguredTableAssociationSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/ConfiguredTableAssociationSummary'
    ConfiguredTableIdentifier:
      type: string
      pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
      minLength: 36
      maxLength: 36
    ConfiguredTableSummary:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/ConfiguredTableIdentifier'
          description: The unique ID of the configured table.
        arn:
          allOf:
          - $ref: '#/components/schemas/ConfiguredTableArn'
          description: The unique ARN of the configured table.
        name:
          allOf:
          - $ref: '#/components/schemas/DisplayName'
          description: The name of the configured table.
        createTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time the configured table was created.
        updateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time the configured table was last updated.
        analysisRuleTypes:
          allOf:
          - $ref: '#/components/schemas/ConfiguredTableAnalysisRuleTypeList'
          description: The types of analysis rules associated with this configured
            table.
        analysisMethod:
          allOf:
          - $ref: '#/components/schemas/AnalysisMethod'
          description: 'The analysis method for the configured tables.


            `DIRECT_QUERY` allows SQL queries to be run directly on this table.


            `DIRECT_JOB` allows PySpark jobs to be run directly on this table.


            `MULTIPLE` allows both SQL queries and PySpark jobs to be run directly
            on this table.'
        selectedAnalysisMethods:
          allOf:
          - $ref: '#/components/schemas/SelectedAnalysisMethods'
          description: The selected analysis methods for the configured table summary.
      required:
      - id
      - arn
      - name
      - createTime
      - updateTime
      - analysisRuleTypes
      - analysisMethod
      description: The configured table summary for the objects listed by the request.
    ConfiguredTableSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/ConfiguredTableSummary'
    ConflictException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
        resourceId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the conflicting resource.
        resourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          description: The type of the conflicting resource.
        reason:
          allOf:
          - $ref: '#/components/schemas/ConflictExceptionReason'
          description: A reason code for the exception.
      description: Updating or deleting a resource can cause an inconsistent state.
    ConflictExceptionReason:
      type: string
      enum:
      - ALREADY_EXISTS
      - SUBRESOURCES_EXIST
      - INVALID_STATE
    ConsolidatedPolicy:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/ConsolidatedPolicyV1'
        description: |-
          The consolidated policy version 1.
      description: |-
        Controls on the analysis specifications that can be run on a configured table.
    ConsolidatedPolicyAggregation:
      type: object
      properties:
        aggregateColumns:
          allOf:
          - $ref: '#/components/schemas/AggregateColumnList'
          description: Aggregate columns in consolidated policy aggregation.
        joinColumns:
          allOf:
          - $ref: '#/components/schemas/AnalysisRuleColumnList'
          description: The columns to join on.
        joinRequired:
          allOf:
          - $ref: '#/components/schemas/JoinRequiredOption'
          description: Join required
        allowedJoinOperators:
          allOf:
          - $ref: '#/components/schemas/JoinOperatorsList'
          description: The allowed join operators.
        dimensionColumns:
          allOf:
          - $ref: '#/components/schemas/AnalysisRuleColumnList'
          description: The dimension columns of the consolidated policy aggregation.
        scalarFunctions:
          allOf:
          - $ref: '#/components/schemas/ScalarFunctionsList'
          description: The scalar functions.
        outputConstraints:
          allOf:
          - $ref: '#/components/schemas/AggregationConstraints'
          description: The output constraints of the consolidated policy aggregation.
        additionalAnalyses:
          allOf:
          - $ref: '#/components/schemas/AdditionalAnalyses'
          description: Additional analyses for the consolidated policy aggregation.
        allowedResultReceivers:
          allOf:
          - $ref: '#/components/schemas/AllowedResultReceivers'
          description: The allowed result receivers.
        allowedAdditionalAnalyses:
          allOf:
          - $ref: '#/components/schemas/AllowedAdditionalAnalyses'
          description: The additional analyses allowed by the consolidated policy
            aggregation.
      required:
      - aggregateColumns
      - joinColumns
      - dimensionColumns
      - scalarFunctions
      - outputConstraints
      description: Controls on the analysis specifications that can be run on a configured
        table.
    ConsolidatedPolicyCustom:
      type: object
      properties:
        allowedAnalyses:
          allOf:
          - $ref: '#/components/schemas/AllowedAnalysesList'
          description: The allowed analyses.
        allowedAnalysisProviders:
          allOf:
          - $ref: '#/components/schemas/AllowedAnalysisProviderList'
          description: The allowed analysis providers.
        additionalAnalyses:
          allOf:
          - $ref: '#/components/schemas/AdditionalAnalyses'
          description: Additional analyses for the consolidated policy.
        disallowedOutputColumns:
          allOf:
          - $ref: '#/components/schemas/AnalysisRuleColumnList'
          description: Disallowed output columns
        differentialPrivacy:
          $ref: '#/components/schemas/DifferentialPrivacyConfiguration'
        allowedResultReceivers:
          allOf:
          - $ref: '#/components/schemas/AllowedResultReceivers'
          description: The allowed result receivers.
        allowedAdditionalAnalyses:
          allOf:
          - $ref: '#/components/schemas/AllowedAdditionalAnalyses'
          description: The additional analyses allowed by the consolidated policy.
      required:
      - allowedAnalyses
      description: Controls on the analysis specifications that can be run on a configured
        table.
    ConsolidatedPolicyList:
      type: object
      properties:
        joinColumns:
          allOf:
          - $ref: '#/components/schemas/AnalysisRuleColumnList'
          description: The columns to join on.
        allowedJoinOperators:
          allOf:
          - $ref: '#/components/schemas/JoinOperatorsList'
          description: The allowed join operators in the consolidated policy list.
        listColumns:
          allOf:
          - $ref: '#/components/schemas/AnalysisRuleColumnList'
          description: The columns in the consolidated policy list.
        additionalAnalyses:
          allOf:
          - $ref: '#/components/schemas/AdditionalAnalyses'
          description: Additional analyses for the consolidated policy list.
        allowedResultReceivers:
          allOf:
          - $ref: '#/components/schemas/AllowedResultReceivers'
          description: The allowed result receivers.
        allowedAdditionalAnalyses:
          allOf:
          - $ref: '#/components/schemas/AllowedAdditionalAnalyses'
          description: The additional analyses allowed by the consolidated policy
            list.
      required:
      - joinColumns
      - listColumns
      description: Controls on the analysis specifications that can be run on a configured
        table.
    ConsolidatedPolicyV1:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/ConsolidatedPolicyList'
        description: |-
          The list of consolidated policies.
      - allOf:
        - $ref: '#/components/schemas/ConsolidatedPolicyAggregation'
        description: |-
          The aggregation setting for the consolidated policy.
      - allOf:
        - $ref: '#/components/schemas/ConsolidatedPolicyCustom'
        description: |-
          Custom policy
      description: |-
        Controls on the analysis specifications that can be run on a configured table.
    CreateAnalysisTemplateInput:
      type: object
      properties:
        description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          description: The description of the analysis template.
        membershipIdentifier:
          allOf:
          - $ref: '#/components/schemas/MembershipIdentifier'
          description: The identifier for a membership resource.
        name:
          allOf:
          - $ref: '#/components/schemas/TableAlias'
          description: The name of the analysis template.
        format:
          allOf:
          - $ref: '#/components/schemas/AnalysisFormat'
          description: The format of the analysis template.
        source:
          allOf:
          - $ref: '#/components/schemas/AnalysisSource'
          description: The information in the analysis template. Currently supports
            `text`, the query text for the analysis template.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: An optional label that you can assign to a resource when you
            create it. Each tag consists of a key and an optional value, both of which
            you define. When you use tagging, you can also use tag-based access control
            in IAM policies to control access to this resource.
        analysisParameters:
          allOf:
          - $ref: '#/components/schemas/AnalysisParameterList'
          description: The parameters of the analysis template.
        schema:
          $ref: '#/components/schemas/AnalysisSchema'
      required:
      - membershipIdentifier
      - name
      - format
      - source
    CreateAnalysisTemplateOutput:
      type: object
      properties:
        analysisTemplate:
          allOf:
          - $ref: '#/components/schemas/AnalysisTemplate'
          description: The analysis template.
      required:
      - analysisTemplate
    CreateCollaborationInput:
      type: object
      properties:
        members:
          allOf:
          - $ref: '#/components/schemas/MemberList'
          description: A list of initial members, not including the creator. This
            list is immutable.
        name:
          allOf:
          - $ref: '#/components/schemas/CollaborationName'
          description: The display name for a collaboration.
        description:
          allOf:
          - $ref: '#/components/schemas/CollaborationDescription'
          description: A description of the collaboration provided by the collaboration
            owner.
        creatorMemberAbilities:
          allOf:
          - $ref: '#/components/schemas/MemberAbilities'
          description: The abilities granted to the collaboration creator.
        creatorMLMemberAbilities:
          allOf:
          - $ref: '#/components/schemas/MLMemberAbilities'
          description: The ML abilities granted to the collaboration creator.
        creatorDisplayName:
          allOf:
          - $ref: '#/components/schemas/DisplayName'
          description: The display name of the collaboration creator.
        dataEncryptionMetadata:
          allOf:
          - $ref: '#/components/schemas/DataEncryptionMetadata'
          description: The settings for client-side encryption with Cryptographic
            Computing for Clean Rooms.
        queryLogStatus:
          allOf:
          - $ref: '#/components/schemas/CollaborationQueryLogStatus'
          description: 'An indicator as to whether query logging has been enabled
            or disabled for the collaboration.


            When `ENABLED`, Clean Rooms logs details about queries run within this
            collaboration and those logs can be viewed in Amazon CloudWatch Logs.
            The default value is `DISABLED`.'
        jobLogStatus:
          allOf:
          - $ref: '#/components/schemas/CollaborationJobLogStatus'
          description: 'Specifies whether job logs are enabled for this collaboration.


            When `ENABLED`, Clean Rooms logs details about jobs run within this collaboration;
            those logs can be viewed in Amazon CloudWatch Logs. The default value
            is `DISABLED`.'
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: An optional label that you can assign to a resource when you
            create it. Each tag consists of a key and an optional value, both of which
            you define. When you use tagging, you can also use tag-based access control
            in IAM policies to control access to this resource.
        creatorPaymentConfiguration:
          allOf:
          - $ref: '#/components/schemas/PaymentConfiguration'
          description: 'The collaboration creator''s payment responsibilities set
            by the collaboration creator.


            If the collaboration creator hasn''t specified anyone as the member paying
            for query compute costs, then the member who can query is the default
            payer.'
        analyticsEngine:
          allOf:
          - $ref: '#/components/schemas/AnalyticsEngine'
          description: The analytics engine.
      required:
      - members
      - name
      - description
      - creatorMemberAbilities
      - creatorDisplayName
      - queryLogStatus
    CreateCollaborationOutput:
      type: object
      properties:
        collaboration:
          allOf:
          - $ref: '#/components/schemas/Collaboration'
          description: The collaboration.
      required:
      - collaboration
    CreateConfiguredAudienceModelAssociationInput:
      type: object
      properties:
        membershipIdentifier:
          allOf:
          - $ref: '#/components/schemas/MembershipIdentifier'
          description: A unique identifier for one of your memberships for a collaboration.
            The configured audience model is associated to the collaboration that
            this membership belongs to. Accepts a membership ID.
        configuredAudienceModelArn:
          allOf:
          - $ref: '#/components/schemas/ConfiguredAudienceModelArn'
          description: A unique identifier for the configured audience model that
            you want to associate.
        configuredAudienceModelAssociationName:
          allOf:
          - $ref: '#/components/schemas/ConfiguredAudienceModelAssociationName'
          description: The name of the configured audience model association.
        manageResourcePolicies:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: 'When `TRUE`, indicates that the resource policy for the configured
            audience model resource being associated is configured for Clean Rooms
            to manage permissions related to the given collaboration. When `FALSE`,
            indicates that the configured audience model resource owner will manage
            permissions related to the given collaboration.


            Setting this to `TRUE` requires you to have permissions to create, update,
            and delete the resource policy for the `cleanrooms-ml` resource when you
            call the DeleteConfiguredAudienceModelAssociation resource. In addition,
            if you are the collaboration creator and specify `TRUE`, you must have
            the same permissions when you call the DeleteMember and DeleteCollaboration
            APIs.'
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: An optional label that you can assign to a resource when you
            create it. Each tag consists of a key and an optional value, both of which
            you define. When you use tagging, you can also use tag-based access control
            in IAM policies to control access to this resource.
        description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          description: A description of the configured audience model association.
      required:
      - membershipIdentifier
      - configuredAudienceModelArn
      - configuredAudienceModelAssociationName
      - manageResourcePolicies
    CreateConfiguredAudienceModelAssociationOutput:
      type: object
      properties:
        configuredAudienceModelAssociation:
          allOf:
          - $ref: '#/components/schemas/ConfiguredAudienceModelAssociation'
          description: Information about the configured audience model association.
      required:
      - configuredAudienceModelAssociation
    CreateConfiguredTableAnalysisRuleInput:
      type: object
      properties:
        configuredTableIdentifier:
          allOf:
          - $ref: '#/components/schemas/ConfiguredTableIdentifier'
          description: The identifier for the configured table to create the analysis
            rule for. Currently accepts the configured table ID.
        analysisRuleType:
          allOf:
          - $ref: '#/components/schemas/ConfiguredTableAnalysisRuleType'
          description: The type of analysis rule.
        analysisRulePolicy:
          allOf:
          - $ref: '#/components/schemas/ConfiguredTableAnalysisRulePolicy'
          description: The analysis rule policy that was created for the configured
            table.
      required:
      - configuredTableIdentifier
      - analysisRuleType
      - analysisRulePolicy
    CreateConfiguredTableAnalysisRuleOutput:
      type: object
      properties:
        analysisRule:
          allOf:
          - $ref: '#/components/schemas/ConfiguredTableAnalysisRule'
          description: The analysis rule that was created for the configured table.
      required:
      - analysisRule
    CreateConfiguredTableAssociationAnalysisRuleInput:
      type: object
      properties:
        membershipIdentifier:
          allOf:
          - $ref: '#/components/schemas/MembershipIdentifier'
          description: A unique identifier for the membership that the configured
            table association belongs to. Currently accepts the membership ID.
        configuredTableAssociationIdentifier:
          allOf:
          - $ref: '#/components/schemas/ConfiguredTableAssociationIdentifier'
          description: The unique ID for the configured table association. Currently
            accepts the configured table association ID.
        analysisRuleType:
          allOf:
          - $ref: '#/components/schemas/ConfiguredTableAssociationAnalysisRuleType'
          description: The type of analysis rule.
        analysisRulePolicy:
          allOf:
          - $ref: '#/components/schemas/ConfiguredTableAssociationAnalysisRulePolicy'
          description: The analysis rule policy that was created for the configured
            table association.
      required:
      - membershipIdentifier
      - configuredTableAssociationIdentifier
      - analysisRuleType
      - analysisRulePolicy
    CreateConfiguredTableAssociationAnalysisRuleOutput:
      type: object
      properties:
        analysisRule:
          allOf:
          - $ref: '#/components/schemas/ConfiguredTableAssociationAnalysisRule'
          description: The analysis rule for the conﬁgured table association. In the
            console, the `ConfiguredTableAssociationAnalysisRule` is referred to as
            the _collaboration analysis rule_.
      required:
      - analysisRule
    CreateConfiguredTableAssociationInput:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/TableAlias'
          description: The name of the configured table association. This name is
            used to query the underlying configured table.
        description:
          allOf:
          - $ref: '#/components/schemas/TableDescription'
          description: A description for the configured table association.
        membershipIdentifier:
          allOf:
          - $ref: '#/components/schemas/MembershipIdentifier'
          description: A unique identifier for one of your memberships for a collaboration.
            The configured table is associated to the collaboration that this membership
            belongs to. Currently accepts a membership ID.
        configuredTableIdentifier:
          allOf:
          - $ref: '#/components/schemas/ConfiguredTableIdentifier'
          description: A unique identifier for the configured table to be associated
            to. Currently accepts a configured table ID.
        roleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          description: The service will assume this role to access catalog metadata
            and query the table.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: An optional label that you can assign to a resource when you
            create it. Each tag consists of a key and an optional value, both of which
            you define. When you use tagging, you can also use tag-based access control
            in IAM policies to control access to this resource.
      required:
      - name
      - membershipIdentifier
      - configuredTableIdentifier
      - roleArn
    CreateConfiguredTableAssociationOutput:
      type: object
      properties:
        configuredTableAssociation:
          allOf:
          - $ref: '#/components/schemas/ConfiguredTableAssociation'
          description: The configured table association.
      required:
      - configuredTableAssociation
    CreateConfiguredTableInput:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/DisplayName'
          description: The name of the configured table.
        description:
          allOf:
          - $ref: '#/components/schemas/TableDescription'
          description: A description for the configured table.
        tableReference:
          allOf:
          - $ref: '#/components/schemas/TableReference'
          description: A reference to the table being configured.
        allowedColumns:
          allOf:
          - $ref: '#/components/schemas/AllowedColumnList'
          description: The columns of the underlying table that can be used by collaborations
            or analysis rules.
        analysisMethod:
          allOf:
          - $ref: '#/components/schemas/AnalysisMethod'
          description: 'The analysis method allowed for the configured tables.


            `DIRECT_QUERY` allows SQL queries to be run directly on this table.


            `DIRECT_JOB` allows PySpark jobs to be run directly on this table.


            `MULTIPLE` allows both SQL queries and PySpark jobs to be run directly
            on this table.'
        selectedAnalysisMethods:
          allOf:
          - $ref: '#/components/schemas/SelectedAnalysisMethods'
          description: The analysis methods to enable for the configured table. When
            configured, you must specify at least two analysis methods.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: An optional label that you can assign to a resource when you
            create it. Each tag consists of a key and an optional value, both of which
            you define. When you use tagging, you can also use tag-based access control
            in IAM policies to control access to this resource.
      required:
      - name
      - tableReference
      - allowedColumns
      - analysisMethod
    CreateConfiguredTableOutput:
      type: object
      properties:
        configuredTable:
          allOf:
          - $ref: '#/components/schemas/ConfiguredTable'
          description: The created configured table.
      required:
      - configuredTable
    CreateIdMappingTableInput:
      type: object
      properties:
        membershipIdentifier:
          allOf:
          - $ref: '#/components/schemas/MembershipIdentifier'
          description: The unique identifier of the membership that contains the ID
            mapping table.
        name:
          allOf:
          - $ref: '#/components/schemas/ResourceAlias'
          description: A name for the ID mapping table.
        description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          description: A description of the ID mapping table.
        inputReferenceConfig:
          allOf:
          - $ref: '#/components/schemas/IdMappingTableInputReferenceConfig'
          description: The input reference configuration needed to create the ID mapping
            table.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: An optional label that you can assign to a resource when you
            create it. Each tag consists of a key and an optional value, both of which
            you define. When you use tagging, you can also use tag-based access control
            in IAM policies to control access to this resource.
        kmsKeyArn:
          allOf:
          - $ref: '#/components/schemas/KMSKeyArn'
          description: The Amazon Resource Name (ARN) of the Amazon Web Services KMS
            key. This value is used to encrypt the mapping table data that is stored
            by Clean Rooms.
      required:
      - membershipIdentifier
      - name
      - inputReferenceConfig
    CreateIdMappingTableOutput:
      type: object
      properties:
        idMappingTable:
          allOf:
          - $ref: '#/components/schemas/IdMappingTable'
          description: The ID mapping table that was created.
      required:
      - idMappingTable
    CreateIdNamespaceAssociationInput:
      type: object
      properties:
        membershipIdentifier:
          allOf:
          - $ref: '#/components/schemas/MembershipIdentifier'
          description: The unique identifier of the membership that contains the ID
            namespace association.
        inputReferenceConfig:
          allOf:
          - $ref: '#/components/schemas/IdNamespaceAssociationInputReferenceConfig'
          description: The input reference configuration needed to create the ID namespace
            association.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: An optional label that you can assign to a resource when you
            create it. Each tag consists of a key and an optional value, both of which
            you define. When you use tagging, you can also use tag-based access control
            in IAM policies to control access to this resource.
        name:
          allOf:
          - $ref: '#/components/schemas/GenericResourceName'
          description: The name for the ID namespace association.
        description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          description: The description of the ID namespace association.
        idMappingConfig:
          allOf:
          - $ref: '#/components/schemas/IdMappingConfig'
          description: The configuration settings for the ID mapping table.
      required:
      - membershipIdentifier
      - inputReferenceConfig
      - name
    CreateIdNamespaceAssociationOutput:
      type: object
      properties:
        idNamespaceAssociation:
          allOf:
          - $ref: '#/components/schemas/IdNamespaceAssociation'
          description: The ID namespace association that was created.
      required:
      - idNamespaceAssociation
    CreateMembershipInput:
      type: object
      properties:
        collaborationIdentifier:
          allOf:
          - $ref: '#/components/schemas/CollaborationIdentifier'
          description: The unique ID for the associated collaboration.
        queryLogStatus:
          allOf:
          - $ref: '#/components/schemas/MembershipQueryLogStatus'
          description: 'An indicator as to whether query logging has been enabled
            or disabled for the membership.


            When `ENABLED`, Clean Rooms logs details about queries run within this
            collaboration and those logs can be viewed in Amazon CloudWatch Logs.
            The default value is `DISABLED`.'
        jobLogStatus:
          allOf:
          - $ref: '#/components/schemas/MembershipJobLogStatus'
          description: 'An indicator as to whether job logging has been enabled or
            disabled for the collaboration.


            When `ENABLED`, Clean Rooms logs details about jobs run within this collaboration
            and those logs can be viewed in Amazon CloudWatch Logs. The default value
            is `DISABLED`.'
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: An optional label that you can assign to a resource when you
            create it. Each tag consists of a key and an optional value, both of which
            you define. When you use tagging, you can also use tag-based access control
            in IAM policies to control access to this resource.
        defaultResultConfiguration:
          allOf:
          - $ref: '#/components/schemas/MembershipProtectedQueryResultConfiguration'
          description: The default protected query result configuration as specified
            by the member who can receive results.
        defaultJobResultConfiguration:
          allOf:
          - $ref: '#/components/schemas/MembershipProtectedJobResultConfiguration'
          description: The default job result configuration that determines how job
            results are protected and managed within this membership. This configuration
            applies to all jobs.
        paymentConfiguration:
          allOf:
          - $ref: '#/components/schemas/MembershipPaymentConfiguration'
          description: 'The payment responsibilities accepted by the collaboration
            member.


            Not required if the collaboration member has the member ability to run
            queries.


            Required if the collaboration member doesn''t have the member ability
            to run queries but is configured as a payer by the collaboration creator.'
      required:
      - collaborationIdentifier
      - queryLogStatus
    CreateMembershipOutput:
      type: object
      properties:
        membership:
          allOf:
          - $ref: '#/components/schemas/Membership'
          description: The membership that was created.
      required:
      - membership
    CreatePrivacyBudgetTemplateInput:
      type: object
      properties:
        membershipIdentifier:
          allOf:
          - $ref: '#/components/schemas/MembershipIdentifier'
          description: A unique identifier for one of your memberships for a collaboration.
            The privacy budget template is created in the collaboration that this
            membership belongs to. Accepts a membership ID.
        autoRefresh:
          allOf:
          - $ref: '#/components/schemas/PrivacyBudgetTemplateAutoRefresh'
          description: 'How often the privacy budget refreshes.


            If you plan to regularly bring new data into the collaboration, you can
            use `CALENDAR_MONTH` to automatically get a new privacy budget for the
            collaboration every calendar month. Choosing this option allows arbitrary
            amounts of information to be revealed about rows of the data when repeatedly
            queries across refreshes. Avoid choosing this if the same rows will be
            repeatedly queried between privacy budget refreshes.'
        privacyBudgetType:
          allOf:
          - $ref: '#/components/schemas/PrivacyBudgetType'
          description: Specifies the type of the privacy budget template.
        parameters:
          allOf:
          - $ref: '#/components/schemas/PrivacyBudgetTemplateParametersInput'
          description: Specifies your parameters for the privacy budget template.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: An optional label that you can assign to a resource when you
            create it. Each tag consists of a key and an optional value, both of which
            you define. When you use tagging, you can also use tag-based access control
            in IAM policies to control access to this resource.
      required:
      - membershipIdentifier
      - autoRefresh
      - privacyBudgetType
      - parameters
    CreatePrivacyBudgetTemplateOutput:
      type: object
      properties:
        privacyBudgetTemplate:
          allOf:
          - $ref: '#/components/schemas/PrivacyBudgetTemplate'
          description: A summary of the elements in the privacy budget template.
      required:
      - privacyBudgetTemplate
    CustomMLMemberAbilities:
      type: array
      items:
        $ref: '#/components/schemas/CustomMLMemberAbility'
    CustomMLMemberAbility:
      type: string
      enum:
      - CAN_RECEIVE_MODEL_OUTPUT
      - CAN_RECEIVE_INFERENCE_OUTPUT
    DataEncryptionMetadata:
      type: object
      properties:
        allowCleartext:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether encrypted tables can contain cleartext data
            (`TRUE`) or are to cryptographically process every column (`FALSE`).
        allowDuplicates:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether Fingerprint columns can contain duplicate
            entries (`TRUE`) or are to contain only non-repeated values (`FALSE`).
        allowJoinsOnColumnsWithDifferentNames:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether Fingerprint columns can be joined on any
            other Fingerprint column with a different name (`TRUE`) or can only be
            joined on Fingerprint columns of the same name (`FALSE`).
        preserveNulls:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether NULL values are to be copied as NULL to encrypted
            tables (`TRUE`) or cryptographically processed (`FALSE`).
      required:
      - allowCleartext
      - allowDuplicates
      - allowJoinsOnColumnsWithDifferentNames
      - preserveNulls
      description: The settings for client-side encryption for cryptographic computing.
    DeleteAnalysisTemplateInput:
      type: object
      properties:
        membershipIdentifier:
          allOf:
          - $ref: '#/components/schemas/MembershipIdentifier'
          description: The identifier for a membership resource.
        analysisTemplateIdentifier:
          allOf:
          - $ref: '#/components/schemas/AnalysisTemplateIdentifier'
          description: The identifier for the analysis template resource.
      required:
      - membershipIdentifier
      - analysisTemplateIdentifier
    DeleteAnalysisTemplateOutput:
      type: object
      properties: {}
    DeleteCollaborationInput:
      type: object
      properties:
        collaborationIdentifier:
          allOf:
          - $ref: '#/components/schemas/CollaborationIdentifier'
          description: The identifier for the collaboration.
      required:
      - collaborationIdentifier
    DeleteCollaborationOutput:
      type: object
      properties: {}
    DeleteConfiguredAudienceModelAssociationInput:
      type: object
      properties:
        configuredAudienceModelAssociationIdentifier:
          allOf:
          - $ref: '#/components/schemas/ConfiguredAudienceModelAssociationIdentifier'
          description: A unique identifier of the configured audience model association
            that you want to delete.
        membershipIdentifier:
          allOf:
          - $ref: '#/components/schemas/MembershipIdentifier'
          description: A unique identifier of the membership that contains the audience
            model association that you want to delete.
      required:
      - configuredAudienceModelAssociationIdentifier
      - membershipIdentifier
    DeleteConfiguredAudienceModelAssociationOutput:
      type: object
      properties: {}
    DeleteConfiguredTableAnalysisRuleInput:
      type: object
      properties:
        configuredTableIdentifier:
          allOf:
          - $ref: '#/components/schemas/ConfiguredTableIdentifier'
          description: The unique identifier for the configured table that the analysis
            rule applies to. Currently accepts the configured table ID.
        analysisRuleType:
          allOf:
          - $ref: '#/components/schemas/ConfiguredTableAnalysisRuleType'
          description: The analysis rule type to be deleted. Configured table analysis
            rules are uniquely identified by their configured table identifier and
            analysis rule type.
      required:
      - configuredTableIdentifier
      - analysisRuleType
    DeleteConfiguredTableAnalysisRuleOutput:
      type: object
      properties: {}
      description: An empty response that indicates a successful delete.
    DeleteConfiguredTableAssociationAnalysisRuleInput:
      type: object
      properties:
        membershipIdentifier:
          allOf:
          - $ref: '#/components/schemas/MembershipIdentifier'
          description: A unique identifier for the membership that the configured
            table association belongs to. Currently accepts the membership ID.
        configuredTableAssociationIdentifier:
          allOf:
          - $ref: '#/components/schemas/ConfiguredTableAssociationIdentifier'
          description: The identiﬁer for the conﬁgured table association that's related
            to the analysis rule that you want to delete.
        analysisRuleType:
          allOf:
          - $ref: '#/components/schemas/ConfiguredTableAssociationAnalysisRuleType'
          description: The type of the analysis rule that you want to delete.
      required:
      - membershipIdentifier
      - configuredTableAssociationIdentifier
      - analysisRuleType
    DeleteConfiguredTableAssociationAnalysisRuleOutput:
      type: object
      properties: {}
    DeleteConfiguredTableAssociationInput:
      type: object
      properties:
        configuredTableAssociationIdentifier:
          allOf:
          - $ref: '#/components/schemas/ConfiguredTableAssociationIdentifier'
          description: The unique ID for the configured table association to be deleted.
            Currently accepts the configured table ID.
        membershipIdentifier:
          allOf:
          - $ref: '#/components/schemas/MembershipIdentifier'
          description: A unique identifier for the membership that the configured
            table association belongs to. Currently accepts the membership ID.
      required:
      - configuredTableAssociationIdentifier
      - membershipIdentifier
    DeleteConfiguredTableAssociationOutput:
      type: object
      properties: {}
    DeleteConfiguredTableInput:
      type: object
      properties:
        configuredTableIdentifier:
          allOf:
          - $ref: '#/components/schemas/ConfiguredTableIdentifier'
          description: The unique ID for the configured table to delete.
      required:
      - configuredTableIdentifier
    DeleteConfiguredTableOutput:
      type: object
      properties: {}
      description: The empty output for a successful deletion.
    DeleteIdMappingTableInput:
      type: object
      properties:
        idMappingTableIdentifier:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier of the ID mapping table that you want
            to delete.
        membershipIdentifier:
          allOf:
          - $ref: '#/components/schemas/MembershipIdentifier'
          description: The unique identifier of the membership that contains the ID
            mapping table that you want to delete.
      required:
      - idMappingTableIdentifier
      - membershipIdentifier
    DeleteIdMappingTableOutput:
      type: object
      properties: {}
    DeleteIdNamespaceAssociationInput:
      type: object
      properties:
        idNamespaceAssociationIdentifier:
          allOf:
          - $ref: '#/components/schemas/IdNamespaceAssociationIdentifier'
          description: The unique identifier of the ID namespace association that
            you want to delete.
        membershipIdentifier:
          allOf:
          - $ref: '#/components/schemas/MembershipIdentifier'
          description: The unique identifier of the membership that contains the ID
            namespace association that you want to delete.
      required:
      - idNamespaceAssociationIdentifier
      - membershipIdentifier
    DeleteIdNamespaceAssociationOutput:
      type: object
      properties: {}
    DeleteMemberInput:
      type: object
      properties:
        collaborationIdentifier:
          allOf:
          - $ref: '#/components/schemas/CollaborationIdentifier'
          description: The unique identifier for the associated collaboration.
        accountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The account ID of the member to remove.
      required:
      - collaborationIdentifier
      - accountId
    DeleteMemberOutput:
      type: object
      properties: {}
    DeleteMembershipInput:
      type: object
      properties:
        membershipIdentifier:
          allOf:
          - $ref: '#/components/schemas/MembershipIdentifier'
          description: The identifier for a membership resource.
      required:
      - membershipIdentifier
    DeleteMembershipOutput:
      type: object
      properties: {}
    DeletePrivacyBudgetTemplateInput:
      type: object
      properties:
        membershipIdentifier:
          allOf:
          - $ref: '#/components/schemas/MembershipIdentifier'
          description: A unique identifier for one of your memberships for a collaboration.
            The privacy budget template is deleted from the collaboration that this
            membership belongs to. Accepts a membership ID.
        privacyBudgetTemplateIdentifier:
          allOf:
          - $ref: '#/components/schemas/PrivacyBudgetTemplateIdentifier'
          description: A unique identifier for your privacy budget template.
      required:
      - membershipIdentifier
      - privacyBudgetTemplateIdentifier
    DeletePrivacyBudgetTemplateOutput:
      type: object
      properties: {}
    DifferentialPrivacyAggregationExpression:
      type: string
      minLength: 1
    DifferentialPrivacyAggregationType:
      type: string
      enum:
      - AVG
      - COUNT
      - COUNT_DISTINCT
      - SUM
      - STDDEV
    DifferentialPrivacyColumn:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the column, such as user_id, that contains the
            unique identifier of your users, whose privacy you want to protect. If
            you want to turn on differential privacy for two or more tables in a collaboration,
            you must configure the same column as the user identifier column in both
            analysis rules.
      required:
      - name
      description: Specifies the name of the column that contains the unique identifier
        of your users, whose privacy you want to protect.
    DifferentialPrivacyColumnList:
      type: array
      items:
        $ref: '#/components/schemas/DifferentialPrivacyColumn'
    DifferentialPrivacyConfiguration:
      type: object
      properties:
        columns:
          allOf:
          - $ref: '#/components/schemas/DifferentialPrivacyColumnList'
          description: The name of the column (such as user_id) that contains the
            unique identifier of your users whose privacy you want to protect. If
            you want to turn on diﬀerential privacy for two or more tables in a collaboration,
            you must conﬁgure the same column as the user identiﬁer column in both
            analysis rules.
      required:
      - columns
      description: Specifies the unique identifier for your users.
    DifferentialPrivacyParameters:
      type: object
      properties:
        sensitivityParameters:
          allOf:
          - $ref: '#/components/schemas/DifferentialPrivacySensitivityParametersList'
          description: Provides the sensitivity parameters that you can use to better
            understand the total amount of noise in query results.
      required:
      - sensitivityParameters
      description: An array that contains the sensitivity parameters.
    DifferentialPrivacyPreviewAggregation:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/DifferentialPrivacyAggregationType'
          description: The type of aggregation function.
        maxCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The maximum number of aggregations that the member who can
            query can run given the epsilon and noise parameters.
      required:
      - type
      - maxCount
      description: Provides an estimate of the number of aggregation functions that
        the member who can query can run given the epsilon and noise parameters.
    DifferentialPrivacyPreviewAggregationList:
      type: array
      items:
        $ref: '#/components/schemas/DifferentialPrivacyPreviewAggregation'
    DifferentialPrivacyPreviewParametersInput:
      type: object
      properties:
        epsilon:
          allOf:
          - $ref: '#/components/schemas/Epsilon'
          description: The epsilon value that you want to preview.
        usersNoisePerQuery:
          allOf:
          - $ref: '#/components/schemas/UsersNoisePerQuery'
          description: Noise added per query is measured in terms of the number of
            users whose contributions you want to obscure. This value governs the
            rate at which the privacy budget is depleted.
      required:
      - epsilon
      - usersNoisePerQuery
      description: The epsilon and noise parameters that you want to preview.
    DifferentialPrivacyPrivacyBudget:
      type: object
      properties:
        aggregations:
          allOf:
          - $ref: '#/components/schemas/DifferentialPrivacyPrivacyBudgetAggregationList'
          description: This information includes the configured epsilon value and
            the utility in terms of total aggregations, as well as the remaining aggregations.
        epsilon:
          allOf:
          - $ref: '#/components/schemas/Epsilon'
          description: The epsilon value that you configured.
      required:
      - aggregations
      - epsilon
      description: Specifies the configured epsilon value and the utility in terms
        of total aggregations, as well as the remaining aggregations available.
    DifferentialPrivacyPrivacyBudgetAggregation:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/DifferentialPrivacyAggregationType'
          description: The different types of aggregation functions that you can perform.
        maxCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The maximum number of aggregation functions that you can perform
            with the given privacy budget.
        remainingCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The remaining number of aggregation functions that can be run
            with the available privacy budget.
      required:
      - type
      - maxCount
      - remainingCount
      description: Information about the total number of aggregations, as well as
        the remaining aggregations.
    DifferentialPrivacyPrivacyBudgetAggregationList:
      type: array
      items:
        $ref: '#/components/schemas/DifferentialPrivacyPrivacyBudgetAggregation'
    DifferentialPrivacyPrivacyImpact:
      type: object
      properties:
        aggregations:
          allOf:
          - $ref: '#/components/schemas/DifferentialPrivacyPreviewAggregationList'
          description: The number of aggregation functions that you can perform.
      required:
      - aggregations
      description: Information about the number of aggregation functions that the
        member who can query can run given the epsilon and noise parameters.
    DifferentialPrivacySensitivityParameters:
      type: object
      properties:
        aggregationType:
          allOf:
          - $ref: '#/components/schemas/DifferentialPrivacyAggregationType'
          description: The type of aggregation function that was run.
        aggregationExpression:
          allOf:
          - $ref: '#/components/schemas/DifferentialPrivacyAggregationExpression'
          description: The aggregation expression that was run.
        userContributionLimit:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The maximum number of rows contributed by a user in a SQL query.
        minColumnValue:
          allOf:
          - $ref: '#/components/schemas/Float'
          description: The lower bound of the aggregation expression.
        maxColumnValue:
          allOf:
          - $ref: '#/components/schemas/Float'
          description: The upper bound of the aggregation expression.
      required:
      - aggregationType
      - aggregationExpression
      - userContributionLimit
      description: Provides the sensitivity parameters.
    DifferentialPrivacySensitivityParametersList:
      type: array
      items:
        $ref: '#/components/schemas/DifferentialPrivacySensitivityParameters'
    DifferentialPrivacyTemplateParametersInput:
      type: object
      properties:
        epsilon:
          allOf:
          - $ref: '#/components/schemas/Epsilon'
          description: The epsilon value that you want to use.
        usersNoisePerQuery:
          allOf:
          - $ref: '#/components/schemas/UsersNoisePerQuery'
          description: Noise added per query is measured in terms of the number of
            users whose contributions you want to obscure. This value governs the
            rate at which the privacy budget is depleted.
      required:
      - epsilon
      - usersNoisePerQuery
      description: The epsilon and noise parameter values that you want to use for
        the differential privacy template.
    DifferentialPrivacyTemplateParametersOutput:
      type: object
      properties:
        epsilon:
          allOf:
          - $ref: '#/components/schemas/Epsilon'
          description: The epsilon value that you specified.
        usersNoisePerQuery:
          allOf:
          - $ref: '#/components/schemas/UsersNoisePerQuery'
          description: Noise added per query is measured in terms of the number of
            users whose contributions you want to obscure. This value governs the
            rate at which the privacy budget is depleted.
      required:
      - epsilon
      - usersNoisePerQuery
      description: The epsilon and noise parameter values that were used for the differential
        privacy template.
    DifferentialPrivacyTemplateUpdateParameters:
      type: object
      properties:
        epsilon:
          allOf:
          - $ref: '#/components/schemas/Epsilon'
          description: The updated epsilon value that you want to use.
        usersNoisePerQuery:
          allOf:
          - $ref: '#/components/schemas/UsersNoisePerQuery'
          description: The updated value of noise added per query. It is measured
            in terms of the number of users whose contributions you want to obscure.
            This value governs the rate at which the privacy budget is depleted.
      description: The epsilon and noise parameter values that you want to update
        in the differential privacy template.
    DirectAnalysisConfigurationDetails:
      type: object
      properties:
        receiverAccountIds:
          allOf:
          - $ref: '#/components/schemas/ReceiverAccountIds'
          description: The account IDs for the member who received the results of
            a protected query.
      description: The direct analysis configuration details.
    DisplayName:
      type: string
      pattern: ^(?!\s*$)[\u0020-\uD7FF\uE000-\uFFFD\uD800\uDBFF-\uDC00\uDFFF\t]*$
      minLength: 1
      maxLength: 100
    Epsilon:
      type: integer
      minimum: 1
      maximum: 20
    FilterableMemberStatus:
      type: string
      enum:
      - INVITED
      - ACTIVE
    GenericResourceName:
      type: string
      pattern: ^(?!\s*$)[\u0020-\uD7FF\uE000-\uFFFD\uD800\uDBFF-\uDC00\uDFFF\t]*$
      minLength: 1
      maxLength: 100
    GetAnalysisTemplateInput:
      type: object
      properties:
        membershipIdentifier:
          allOf:
          - $ref: '#/components/schemas/MembershipIdentifier'
          description: The identifier for a membership resource.
        analysisTemplateIdentifier:
          allOf:
          - $ref: '#/components/schemas/AnalysisTemplateIdentifier'
          description: The identifier for the analysis template resource.
      required:
      - membershipIdentifier
      - analysisTemplateIdentifier
    GetAnalysisTemplateOutput:
      type: object
      properties:
        analysisTemplate:
          allOf:
          - $ref: '#/components/schemas/AnalysisTemplate'
          description: The analysis template.
      required:
      - analysisTemplate
    GetCollaborationAnalysisTemplateInput:
      type: object
      properties:
        collaborationIdentifier:
          allOf:
          - $ref: '#/components/schemas/CollaborationIdentifier'
          description: A unique identifier for the collaboration that the analysis
            templates belong to. Currently accepts collaboration ID.
        analysisTemplateArn:
          allOf:
          - $ref: '#/components/schemas/AnalysisTemplateArn'
          description: The Amazon Resource Name (ARN) associated with the analysis
            template within a collaboration.
      required:
      - collaborationIdentifier
      - analysisTemplateArn
    GetCollaborationAnalysisTemplateOutput:
      type: object
      properties:
        collaborationAnalysisTemplate:
          allOf:
          - $ref: '#/components/schemas/CollaborationAnalysisTemplate'
          description: The analysis template within a collaboration.
      required:
      - collaborationAnalysisTemplate
    GetCollaborationConfiguredAudienceModelAssociationInput:
      type: object
      properties:
        collaborationIdentifier:
          allOf:
          - $ref: '#/components/schemas/CollaborationIdentifier'
          description: A unique identifier for the collaboration that the configured
            audience model association belongs to. Accepts a collaboration ID.
        configuredAudienceModelAssociationIdentifier:
          allOf:
          - $ref: '#/components/schemas/ConfiguredAudienceModelAssociationIdentifier'
          description: A unique identifier for the configured audience model association
            that you want to retrieve.
      required:
      - collaborationIdentifier
      - configuredAudienceModelAssociationIdentifier
    GetCollaborationConfiguredAudienceModelAssociationOutput:
      type: object
      properties:
        collaborationConfiguredAudienceModelAssociation:
          allOf:
          - $ref: '#/components/schemas/CollaborationConfiguredAudienceModelAssociation'
          description: The metadata of the configured audience model association.
      required:
      - collaborationConfiguredAudienceModelAssociation
    GetCollaborationIdNamespaceAssociationInput:
      type: object
      properties:
        collaborationIdentifier:
          allOf:
          - $ref: '#/components/schemas/CollaborationIdentifier'
          description: The unique identifier of the collaboration that contains the
            ID namespace association that you want to retrieve.
        idNamespaceAssociationIdentifier:
          allOf:
          - $ref: '#/components/schemas/IdNamespaceAssociationIdentifier'
          description: The unique identifier of the ID namespace association that
            you want to retrieve.
      required:
      - collaborationIdentifier
      - idNamespaceAssociationIdentifier
    GetCollaborationIdNamespaceAssociationOutput:
      type: object
      properties:
        collaborationIdNamespaceAssociation:
          allOf:
          - $ref: '#/components/schemas/CollaborationIdNamespaceAssociation'
          description: The ID namespace association that you requested.
      required:
      - collaborationIdNamespaceAssociation
    GetCollaborationInput:
      type: object
      properties:
        collaborationIdentifier:
          allOf:
          - $ref: '#/components/schemas/CollaborationIdentifier'
          description: The identifier for the collaboration.
      required:
      - collaborationIdentifier
    GetCollaborationOutput:
      type: object
      properties:
        collaboration:
          allOf:
          - $ref: '#/components/schemas/Collaboration'
          description: The entire collaboration for this identifier.
      required:
      - collaboration
    GetCollaborationPrivacyBudgetTemplateInput:
      type: object
      properties:
        collaborationIdentifier:
          allOf:
          - $ref: '#/components/schemas/CollaborationIdentifier'
          description: A unique identifier for one of your collaborations.
        privacyBudgetTemplateIdentifier:
          allOf:
          - $ref: '#/components/schemas/PrivacyBudgetTemplateIdentifier'
          description: A unique identifier for one of your privacy budget templates.
      required:
      - collaborationIdentifier
      - privacyBudgetTemplateIdentifier
    GetCollaborationPrivacyBudgetTemplateOutput:
      type: object
      properties:
        collaborationPrivacyBudgetTemplate:
          allOf:
          - $ref: '#/components/schemas/CollaborationPrivacyBudgetTemplate'
          description: Returns the details of the privacy budget template that you
            requested.
      required:
      - collaborationPrivacyBudgetTemplate
    GetConfiguredAudienceModelAssociationInput:
      type: object
      properties:
        configuredAudienceModelAssociationIdentifier:
          allOf:
          - $ref: '#/components/schemas/ConfiguredAudienceModelAssociationIdentifier'
          description: A unique identifier for the configured audience model association
            that you want to retrieve.
        membershipIdentifier:
          allOf:
          - $ref: '#/components/schemas/MembershipIdentifier'
          description: A unique identifier for the membership that contains the configured
            audience model association that you want to retrieve.
      required:
      - configuredAudienceModelAssociationIdentifier
      - membershipIdentifier
    GetConfiguredAudienceModelAssociationOutput:
      type: object
      properties:
        configuredAudienceModelAssociation:
          allOf:
          - $ref: '#/components/schemas/ConfiguredAudienceModelAssociation'
          description: Information about the configured audience model association
            that you requested.
      required:
      - configuredAudienceModelAssociation
    GetConfiguredTableAnalysisRuleInput:
      type: object
      properties:
        configuredTableIdentifier:
          allOf:
          - $ref: '#/components/schemas/ConfiguredTableIdentifier'
          description: The unique identifier for the configured table to retrieve.
            Currently accepts the configured table ID.
        analysisRuleType:
          allOf:
          - $ref: '#/components/schemas/ConfiguredTableAnalysisRuleType'
          description: The analysis rule to be retrieved. Configured table analysis
            rules are uniquely identified by their configured table identifier and
            analysis rule type.
      required:
      - configuredTableIdentifier
      - analysisRuleType
    GetConfiguredTableAnalysisRuleOutput:
      type: object
      properties:
        analysisRule:
          allOf:
          - $ref: '#/components/schemas/ConfiguredTableAnalysisRule'
          description: The entire analysis rule output.
      required:
      - analysisRule
    GetConfiguredTableAssociationAnalysisRuleInput:
      type: object
      properties:
        membershipIdentifier:
          allOf:
          - $ref: '#/components/schemas/MembershipIdentifier'
          description: A unique identifier for the membership that the configured
            table association belongs to. Currently accepts the membership ID.
        configuredTableAssociationIdentifier:
          allOf:
          - $ref: '#/components/schemas/ConfiguredTableAssociationIdentifier'
          description: The identiﬁer for the conﬁgured table association that's related
            to the analysis rule.
        analysisRuleType:
          allOf:
          - $ref: '#/components/schemas/ConfiguredTableAssociationAnalysisRuleType'
          description: The type of analysis rule that you want to retrieve.
      required:
      - membershipIdentifier
      - configuredTableAssociationIdentifier
      - analysisRuleType
    GetConfiguredTableAssociationAnalysisRuleOutput:
      type: object
      properties:
        analysisRule:
          allOf:
          - $ref: '#/components/schemas/ConfiguredTableAssociationAnalysisRule'
          description: The analysis rule for the conﬁgured table association. In the
            console, the `ConfiguredTableAssociationAnalysisRule` is referred to as
            the _collaboration analysis rule_.
      required:
      - analysisRule
    GetConfiguredTableAssociationInput:
      type: object
      properties:
        configuredTableAssociationIdentifier:
          allOf:
          - $ref: '#/components/schemas/ConfiguredTableAssociationIdentifier'
          description: The unique ID for the configured table association to retrieve.
            Currently accepts the configured table ID.
        membershipIdentifier:
          allOf:
          - $ref: '#/components/schemas/MembershipIdentifier'
          description: A unique identifier for the membership that the configured
            table association belongs to. Currently accepts the membership ID.
      required:
      - configuredTableAssociationIdentifier
      - membershipIdentifier
    GetConfiguredTableAssociationOutput:
      type: object
      properties:
        configuredTableAssociation:
          allOf:
          - $ref: '#/components/schemas/ConfiguredTableAssociation'
          description: The entire configured table association object.
      required:
      - configuredTableAssociation
    GetConfiguredTableInput:
      type: object
      properties:
        configuredTableIdentifier:
          allOf:
          - $ref: '#/components/schemas/ConfiguredTableIdentifier'
          description: The unique ID for the configured table to retrieve.
      required:
      - configuredTableIdentifier
    GetConfiguredTableOutput:
      type: object
      properties:
        configuredTable:
          allOf:
          - $ref: '#/components/schemas/ConfiguredTable'
          description: The retrieved configured table.
      required:
      - configuredTable
    GetIdMappingTableInput:
      type: object
      properties:
        idMappingTableIdentifier:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier of the ID mapping table identifier that
            you want to retrieve.
        membershipIdentifier:
          allOf:
          - $ref: '#/components/schemas/MembershipIdentifier'
          description: The unique identifier of the membership that contains the ID
            mapping table that you want to retrieve.
      required:
      - idMappingTableIdentifier
      - membershipIdentifier
    GetIdMappingTableOutput:
      type: object
      properties:
        idMappingTable:
          allOf:
          - $ref: '#/components/schemas/IdMappingTable'
          description: The ID mapping table that you requested.
      required:
      - idMappingTable
    GetIdNamespaceAssociationInput:
      type: object
      properties:
        idNamespaceAssociationIdentifier:
          allOf:
          - $ref: '#/components/schemas/IdNamespaceAssociationIdentifier'
          description: The unique identifier of the ID namespace association that
            you want to retrieve.
        membershipIdentifier:
          allOf:
          - $ref: '#/components/schemas/MembershipIdentifier'
          description: The unique identifier of the membership that contains the ID
            namespace association that you want to retrieve.
      required:
      - idNamespaceAssociationIdentifier
      - membershipIdentifier
    GetIdNamespaceAssociationOutput:
      type: object
      properties:
        idNamespaceAssociation:
          allOf:
          - $ref: '#/components/schemas/IdNamespaceAssociation'
          description: The ID namespace association that you requested.
      required:
      - idNamespaceAssociation
    GetMembershipInput:
      type: object
      properties:
        membershipIdentifier:
          allOf:
          - $ref: '#/components/schemas/MembershipIdentifier'
          description: The identifier for a membership resource.
      required:
      - membershipIdentifier
    GetMembershipOutput:
      type: object
      properties:
        membership:
          allOf:
          - $ref: '#/components/schemas/Membership'
          description: The membership retrieved for the provided identifier.
      required:
      - membership
    GetPrivacyBudgetTemplateInput:
      type: object
      properties:
        membershipIdentifier:
          allOf:
          - $ref: '#/components/schemas/MembershipIdentifier'
          description: A unique identifier for one of your memberships for a collaboration.
            The privacy budget template is retrieved from the collaboration that this
            membership belongs to. Accepts a membership ID.
        privacyBudgetTemplateIdentifier:
          allOf:
          - $ref: '#/components/schemas/PrivacyBudgetTemplateIdentifier'
          description: A unique identifier for your privacy budget template.
      required:
      - membershipIdentifier
      - privacyBudgetTemplateIdentifier
    GetPrivacyBudgetTemplateOutput:
      type: object
      properties:
        privacyBudgetTemplate:
          allOf:
          - $ref: '#/components/schemas/PrivacyBudgetTemplate'
          description: Returns the details of the privacy budget template that you
            requested.
      required:
      - privacyBudgetTemplate
    GetProtectedJobInput:
      type: object
      properties:
        membershipIdentifier:
          allOf:
          - $ref: '#/components/schemas/MembershipIdentifier'
          description: The identifier for a membership in a protected job instance.
        protectedJobIdentifier:
          allOf:
          - $ref: '#/components/schemas/ProtectedJobIdentifier'
          description: The identifier for the protected job instance.
      required:
      - membershipIdentifier
      - protectedJobIdentifier
    GetProtectedJobOutput:
      type: object
      properties:
        protectedJob:
          allOf:
          - $ref: '#/components/schemas/ProtectedJob'
          description: The protected job metadata.
      required:
      - protectedJob
    GetProtectedQueryInput:
      type: object
      properties:
        membershipIdentifier:
          allOf:
          - $ref: '#/components/schemas/MembershipIdentifier'
          description: The identifier for a membership in a protected query instance.
        protectedQueryIdentifier:
          allOf:
          - $ref: '#/components/schemas/ProtectedQueryIdentifier'
          description: The identifier for a protected query instance.
      required:
      - membershipIdentifier
      - protectedQueryIdentifier
    GetProtectedQueryOutput:
      type: object
      properties:
        protectedQuery:
          allOf:
          - $ref: '#/components/schemas/ProtectedQuery'
          description: The query processing metadata.
      required:
      - protectedQuery
    GetSchemaAnalysisRuleInput:
      type: object
      properties:
        collaborationIdentifier:
          allOf:
          - $ref: '#/components/schemas/CollaborationIdentifier'
          description: A unique identifier for the collaboration that the schema belongs
            to. Currently accepts a collaboration ID.
        name:
          allOf:
          - $ref: '#/components/schemas/TableAlias'
          description: The name of the schema to retrieve the analysis rule for.
        type:
          allOf:
          - $ref: '#/components/schemas/AnalysisRuleType'
          description: The type of the schema analysis rule to retrieve. Schema analysis
            rules are uniquely identified by a combination of the collaboration, the
            schema name, and their type.
      required:
      - collaborationIdentifier
      - name
      - type
    GetSchemaAnalysisRuleOutput:
      type: object
      properties:
        analysisRule:
          allOf:
          - $ref: '#/components/schemas/AnalysisRule'
          description: A specification about how data from the configured table can
            be used.
      required:
      - analysisRule
    GetSchemaInput:
      type: object
      properties:
        collaborationIdentifier:
          allOf:
          - $ref: '#/components/schemas/CollaborationIdentifier'
          description: A unique identifier for the collaboration that the schema belongs
            to. Currently accepts a collaboration ID.
        name:
          allOf:
          - $ref: '#/components/schemas/TableAlias'
          description: The name of the relation to retrieve the schema for.
      required:
      - collaborationIdentifier
      - name
    GetSchemaOutput:
      type: object
      properties:
        schema:
          allOf:
          - $ref: '#/components/schemas/Schema'
          description: The entire schema object.
      required:
      - schema
    GlueDatabaseName:
      type: string
      pattern: ^[a-zA-Z0-9_](([a-zA-Z0-9_]+-)*([a-zA-Z0-9_]+))?$
      maxLength: 128
    GlueTableName:
      type: string
      pattern: ^[a-zA-Z0-9_](([a-zA-Z0-9_ ]+-)*([a-zA-Z0-9_ ]+))?$
      maxLength: 128
    GlueTableReference:
      type: object
      properties:
        tableName:
          allOf:
          - $ref: '#/components/schemas/GlueTableName'
          description: The name of the Glue table.
        databaseName:
          allOf:
          - $ref: '#/components/schemas/GlueDatabaseName'
          description: The name of the database the Glue table belongs to.
      required:
      - tableName
      - databaseName
      description: A reference to a table within an Glue data catalog.
    Hash:
      type: object
      properties:
        sha256:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The SHA-256 hash value.
      description: Hash
    HashList:
      type: array
      items:
        $ref: '#/components/schemas/Hash'
    IdMappingConfig:
      type: object
      properties:
        allowUseAsDimensionColumn:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: 'An indicator as to whether you can use your column as a dimension
            column in the ID mapping table (`TRUE`) or not (`FALSE`).


            Default is `FALSE`.'
      required:
      - allowUseAsDimensionColumn
      description: The configuration settings for the ID mapping table.
    IdMappingTable:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier of the ID mapping table.
        arn:
          allOf:
          - $ref: '#/components/schemas/IdMappingTableArn'
          description: The Amazon Resource Name (ARN) of the ID mapping table.
        inputReferenceConfig:
          allOf:
          - $ref: '#/components/schemas/IdMappingTableInputReferenceConfig'
          description: The input reference configuration for the ID mapping table.
        membershipId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier of the membership resource for the ID
            mapping table.
        membershipArn:
          allOf:
          - $ref: '#/components/schemas/MembershipArn'
          description: The Amazon Resource Name (ARN) of the membership resource for
            the ID mapping table.
        collaborationId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier of the collaboration that contains this
            ID mapping table.
        collaborationArn:
          allOf:
          - $ref: '#/components/schemas/CollaborationArn'
          description: The Amazon Resource Name (ARN) of the collaboration that contains
            this ID mapping table.
        description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          description: The description of the ID mapping table.
        name:
          allOf:
          - $ref: '#/components/schemas/ResourceAlias'
          description: The name of the ID mapping table.
        createTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the ID mapping table was created.
        updateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The most recent time at which the ID mapping table was updated.
        inputReferenceProperties:
          allOf:
          - $ref: '#/components/schemas/IdMappingTableInputReferenceProperties'
          description: The input reference properties for the ID mapping table.
        kmsKeyArn:
          allOf:
          - $ref: '#/components/schemas/KMSKeyArn'
          description: The Amazon Resource Name (ARN) of the Amazon Web Services KMS
            key.
      required:
      - id
      - arn
      - inputReferenceConfig
      - membershipId
      - membershipArn
      - collaborationId
      - collaborationArn
      - name
      - createTime
      - updateTime
      - inputReferenceProperties
      description: Describes information about the ID mapping table.
    IdMappingTableArn:
      type: string
      pattern: ^arn:aws:cleanrooms:[\w]{2}-[\w]{4,9}-[\d]:[\d]{12}:membership/[\d\w-]+/idmappingtable/[\d\w-]+$
      maxLength: 200
    IdMappingTableInputReferenceArn:
      type: string
      pattern: ^arn:(aws|aws-us-gov|aws-cn):entityresolution:.*:[0-9]+:(idmappingworkflow/.*)$
      minLength: 20
      maxLength: 2048
    IdMappingTableInputReferenceConfig:
      type: object
      properties:
        inputReferenceArn:
          allOf:
          - $ref: '#/components/schemas/IdMappingTableInputReferenceArn'
          description: The Amazon Resource Name (ARN) of the referenced resource in
            Entity Resolution. Valid values are ID mapping workflow ARNs.
        manageResourcePolicies:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: 'When `TRUE`, Clean Rooms manages permissions for the ID mapping
            table resource.


            When `FALSE`, the resource owner manages permissions for the ID mapping
            table resource.'
      required:
      - inputReferenceArn
      - manageResourcePolicies
      description: Provides the input reference configuration for the ID mapping table.
    IdMappingTableInputReferenceProperties:
      type: object
      properties:
        idMappingTableInputSource:
          allOf:
          - $ref: '#/components/schemas/IdMappingTableInputSourceList'
          description: The input source of the ID mapping table.
      required:
      - idMappingTableInputSource
      description: The input reference properties for the ID mapping table.
    IdMappingTableInputSource:
      type: object
      properties:
        idNamespaceAssociationId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique identifier of the ID namespace association.
        type:
          allOf:
          - $ref: '#/components/schemas/IdNamespaceType'
          description: The type of the input source of the ID mapping table.
      required:
      - idNamespaceAssociationId
      - type
      description: The input source of the ID mapping table.
    IdMappingTableInputSourceList:
      type: array
      items:
        $ref: '#/components/schemas/IdMappingTableInputSource'
    IdMappingTableSchemaTypeProperties:
      type: object
      properties:
        idMappingTableInputSource:
          allOf:
          - $ref: '#/components/schemas/IdMappingTableInputSourceList'
          description: Defines which ID namespace associations are used to create
            the ID mapping table.
      required:
      - idMappingTableInputSource
      description: Additional properties that are specific to the type of the associated
        schema.
    IdMappingTableSummary:
      type: object
      properties:
        collaborationArn:
          allOf:
          - $ref: '#/components/schemas/CollaborationArn'
          description: The Amazon Resource Name (ARN) of the collaboration that contains
            this ID mapping table.
        collaborationId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier of the collaboration that contains this
            ID mapping table.
        membershipId:
          allOf:
          - $ref: '#/components/schemas/MembershipIdentifier'
          description: The unique identifier of the membership resource for this ID
            mapping table.
        membershipArn:
          allOf:
          - $ref: '#/components/schemas/MembershipArn'
          description: The Amazon Resource Name (ARN) of the membership resource for
            this ID mapping table.
        createTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which this ID mapping table was created.
        updateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The most recent time at which this ID mapping table was updated.
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier of this ID mapping table.
        arn:
          allOf:
          - $ref: '#/components/schemas/IdMappingTableArn'
          description: The Amazon Resource Name (ARN) of this ID mapping table.
        description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          description: The description of this ID mapping table.
        inputReferenceConfig:
          allOf:
          - $ref: '#/components/schemas/IdMappingTableInputReferenceConfig'
          description: The input reference configuration for the ID mapping table.
        name:
          allOf:
          - $ref: '#/components/schemas/ResourceAlias'
          description: The name of this ID mapping table.
      required:
      - collaborationArn
      - collaborationId
      - membershipId
      - membershipArn
      - createTime
      - updateTime
      - id
      - arn
      - inputReferenceConfig
      - name
      description: Detailed information about the ID mapping table.
    IdMappingTableSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/IdMappingTableSummary'
    IdMappingWorkflowsSupported:
      type: array
      items:
        type: object
    IdNamespaceAssociation:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/IdNamespaceAssociationIdentifier'
          description: The unique identifier for this ID namespace association.
        arn:
          allOf:
          - $ref: '#/components/schemas/IdNamespaceAssociationArn'
          description: The Amazon Resource Name (ARN) of the ID namespace association.
        membershipId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier of the membership resource for this ID
            namespace association.
        membershipArn:
          allOf:
          - $ref: '#/components/schemas/MembershipArn'
          description: The Amazon Resource Name (ARN) of the membership resource for
            this ID namespace association.
        collaborationId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier of the collaboration that contains this
            ID namespace association.
        collaborationArn:
          allOf:
          - $ref: '#/components/schemas/CollaborationArn'
          description: The Amazon Resource Name (ARN) of the collaboration that contains
            this ID namespace association.
        name:
          allOf:
          - $ref: '#/components/schemas/GenericResourceName'
          description: The name of this ID namespace association.
        description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          description: The description of the ID namespace association.
        createTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the ID namespace association was created.
        updateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The most recent time at which the ID namespace association
            was updated.
        inputReferenceConfig:
          allOf:
          - $ref: '#/components/schemas/IdNamespaceAssociationInputReferenceConfig'
          description: The input reference configuration for the ID namespace association.
        inputReferenceProperties:
          allOf:
          - $ref: '#/components/schemas/IdNamespaceAssociationInputReferenceProperties'
          description: The input reference properties for the ID namespace association.
        idMappingConfig:
          allOf:
          - $ref: '#/components/schemas/IdMappingConfig'
          description: The configuration settings for the ID mapping table.
      required:
      - id
      - arn
      - membershipId
      - membershipArn
      - collaborationId
      - collaborationArn
      - name
      - createTime
      - updateTime
      - inputReferenceConfig
      - inputReferenceProperties
      description: Provides information to create the ID namespace association.
    IdNamespaceAssociationArn:
      type: string
      pattern: ^arn:aws:cleanrooms:[\w]{2}-[\w]{4,9}-[\d]:[\d]{12}:membership/[\d\w-]+/idnamespaceassociation/[\d\w-]+$
      maxLength: 256
    IdNamespaceAssociationIdentifier:
      type: string
      pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
      minLength: 36
      maxLength: 36
    IdNamespaceAssociationInputReferenceArn:
      type: string
      pattern: ^arn:aws:entityresolution:[\w]{2}-[\w]{4,9}-[\d]:[\d]{12}:idnamespace/[\d\w-]+$
      maxLength: 256
    IdNamespaceAssociationInputReferenceConfig:
      type: object
      properties:
        inputReferenceArn:
          allOf:
          - $ref: '#/components/schemas/IdNamespaceAssociationInputReferenceArn'
          description: The Amazon Resource Name (ARN) of the Entity Resolution resource
            that is being associated to the collaboration. Valid resource ARNs are
            from the ID namespaces that you own.
        manageResourcePolicies:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: 'When `TRUE`, Clean Rooms manages permissions for the ID namespace
            association resource.


            When `FALSE`, the resource owner manages permissions for the ID namespace
            association resource.'
      required:
      - inputReferenceArn
      - manageResourcePolicies
      description: Provides the information for the ID namespace association input
        reference configuration.
    IdNamespaceAssociationInputReferenceProperties:
      type: object
      properties:
        idNamespaceType:
          allOf:
          - $ref: '#/components/schemas/IdNamespaceType'
          description: The ID namespace type for this ID namespace association.
        idMappingWorkflowsSupported:
          allOf:
          - $ref: '#/components/schemas/IdMappingWorkflowsSupported'
          description: Defines how ID mapping workflows are supported for this ID
            namespace association.
      required:
      - idNamespaceType
      - idMappingWorkflowsSupported
      description: Provides the information for the ID namespace association input
        reference properties.
    IdNamespaceAssociationInputReferencePropertiesSummary:
      type: object
      properties:
        idNamespaceType:
          allOf:
          - $ref: '#/components/schemas/IdNamespaceType'
          description: The ID namespace type for this ID namespace association.
      required:
      - idNamespaceType
      description: Detailed information about the ID namespace association input reference
        properties.
    IdNamespaceAssociationSummary:
      type: object
      properties:
        membershipId:
          allOf:
          - $ref: '#/components/schemas/MembershipIdentifier'
          description: The unique identifier of the membership resource for this ID
            namespace association.
        membershipArn:
          allOf:
          - $ref: '#/components/schemas/MembershipArn'
          description: The Amazon Resource Name (ARN) of the membership resource for
            this ID namespace association.
        collaborationArn:
          allOf:
          - $ref: '#/components/schemas/CollaborationArn'
          description: The Amazon Resource Name (ARN) of the collaboration that contains
            this ID namespace association.
        collaborationId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier of the collaboration that contains this
            ID namespace association.
        createTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which this ID namespace association was created.
        updateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The most recent time at which this ID namespace association
            has been updated.
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier of this ID namespace association.
        arn:
          allOf:
          - $ref: '#/components/schemas/IdNamespaceAssociationArn'
          description: The Amazon Resource Name (ARN) of this ID namespace association.
        inputReferenceConfig:
          allOf:
          - $ref: '#/components/schemas/IdNamespaceAssociationInputReferenceConfig'
          description: The input reference configuration details for this ID namespace
            association.
        name:
          allOf:
          - $ref: '#/components/schemas/GenericResourceName'
          description: The name of the ID namespace association.
        description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          description: The description of the ID namespace association.
        inputReferenceProperties:
          allOf:
          - $ref: '#/components/schemas/IdNamespaceAssociationInputReferencePropertiesSummary'
          description: The input reference properties for this ID namespace association.
      required:
      - membershipId
      - membershipArn
      - collaborationArn
      - collaborationId
      - createTime
      - updateTime
      - id
      - arn
      - inputReferenceConfig
      - name
      - inputReferenceProperties
      description: Detailed information about the ID namespace association.
    IdNamespaceAssociationSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/IdNamespaceAssociationSummary'
    IdNamespaceType:
      type: string
      enum:
      - SOURCE
      - TARGET
    InternalServerException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      description: Unexpected error during processing of request.
    JobComputePaymentConfig:
      type: object
      properties:
        isResponsible:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: 'Indicates whether the collaboration creator has configured
            the collaboration member to pay for query and job compute costs (`TRUE`)
            or has not configured the collaboration member to pay for query and job
            compute costs (`FALSE`).


            Exactly one member can be configured to pay for query and job compute
            costs. An error is returned if the collaboration creator sets a `TRUE`
            value for more than one member in the collaboration.


            An error is returned if the collaboration creator sets a `FALSE` value
            for the member who can run queries and jobs.'
      required:
      - isResponsible
      description: An object representing the collaboration member's payment responsibilities
        set by the collaboration creator for query and job compute costs.
    JoinOperator:
      type: string
      enum:
      - OR
      - AND
    JoinOperatorsList:
      type: array
      items:
        $ref: '#/components/schemas/JoinOperator'
    JoinRequiredOption:
      type: string
      enum:
      - QUERY_RUNNER
    KMSKeyArn:
      type: string
      pattern: ^arn:aws:kms:[\w]{2}-[\w]{4,9}-[\d]:[\d]{12}:key/[a-zA-Z0-9-]+$
      minLength: 20
      maxLength: 2048
    KeyPrefix:
      type: string
      pattern: ^[\w!.=*/-]*$
      minLength: 0
      maxLength: 512
    ListAnalysisTemplatesInput:
      type: object
      properties:
        membershipIdentifier:
          allOf:
          - $ref: '#/components/schemas/MembershipIdentifier'
          description: The identifier for a membership resource.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: The pagination token that's used to fetch the next set of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results that are returned for an API
            request call. The service chooses a default number if you don't set one.
            The service might return a `nextToken` even if the `maxResults` value
            has not been met.
      required:
      - membershipIdentifier
    ListAnalysisTemplatesOutput:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: The pagination token that's used to fetch the next set of results.
        analysisTemplateSummaries:
          allOf:
          - $ref: '#/components/schemas/AnalysisTemplateSummaryList'
          description: Lists analysis template metadata.
      required:
      - analysisTemplateSummaries
    ListCollaborationAnalysisTemplatesInput:
      type: object
      properties:
        collaborationIdentifier:
          allOf:
          - $ref: '#/components/schemas/CollaborationIdentifier'
          description: A unique identifier for the collaboration that the analysis
            templates belong to. Currently accepts collaboration ID.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: The pagination token that's used to fetch the next set of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results that are returned for an API
            request call. The service chooses a default number if you don't set one.
            The service might return a `nextToken` even if the `maxResults` value
            has not been met.
      required:
      - collaborationIdentifier
    ListCollaborationAnalysisTemplatesOutput:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: The pagination token that's used to fetch the next set of results.
        collaborationAnalysisTemplateSummaries:
          allOf:
          - $ref: '#/components/schemas/CollaborationAnalysisTemplateSummaryList'
          description: The metadata of the analysis template within a collaboration.
      required:
      - collaborationAnalysisTemplateSummaries
    ListCollaborationConfiguredAudienceModelAssociationsInput:
      type: object
      properties:
        collaborationIdentifier:
          allOf:
          - $ref: '#/components/schemas/CollaborationIdentifier'
          description: A unique identifier for the collaboration that the configured
            audience model association belongs to. Accepts a collaboration ID.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: The pagination token that's used to fetch the next set of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results that are returned for an API
            request call. The service chooses a default number if you don't set one.
            The service might return a `nextToken` even if the `maxResults` value
            has not been met.
      required:
      - collaborationIdentifier
    ListCollaborationConfiguredAudienceModelAssociationsOutput:
      type: object
      properties:
        collaborationConfiguredAudienceModelAssociationSummaries:
          allOf:
          - $ref: '#/components/schemas/CollaborationConfiguredAudienceModelAssociationSummaryList'
          description: The metadata of the configured audience model association within
            a collaboration.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: The pagination token that's used to fetch the next set of results.
      required:
      - collaborationConfiguredAudienceModelAssociationSummaries
    ListCollaborationIdNamespaceAssociationsInput:
      type: object
      properties:
        collaborationIdentifier:
          allOf:
          - $ref: '#/components/schemas/CollaborationIdentifier'
          description: The unique identifier of the collaboration that contains the
            ID namespace associations that you want to retrieve.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: The pagination token that's used to fetch the next set of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum size of the results that is returned per call.
            Service chooses a default if it has not been set. Service may return a
            nextToken even if the maximum results has not been met.>
      required:
      - collaborationIdentifier
    ListCollaborationIdNamespaceAssociationsOutput:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: The token value provided to access the next page of results.
        collaborationIdNamespaceAssociationSummaries:
          allOf:
          - $ref: '#/components/schemas/CollaborationIdNamespaceAssociationSummaryList'
          description: The summary information of the collaboration ID namespace associations
            that you requested.
      required:
      - collaborationIdNamespaceAssociationSummaries
    ListCollaborationPrivacyBudgetTemplatesInput:
      type: object
      properties:
        collaborationIdentifier:
          allOf:
          - $ref: '#/components/schemas/CollaborationIdentifier'
          description: A unique identifier for one of your collaborations.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: The pagination token that's used to fetch the next set of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results that are returned for an API
            request call. The service chooses a default number if you don't set one.
            The service might return a `nextToken` even if the `maxResults` value
            has not been met.
      required:
      - collaborationIdentifier
    ListCollaborationPrivacyBudgetTemplatesOutput:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: The pagination token that's used to fetch the next set of results.
        collaborationPrivacyBudgetTemplateSummaries:
          allOf:
          - $ref: '#/components/schemas/CollaborationPrivacyBudgetTemplateSummaryList'
          description: An array that summarizes the collaboration privacy budget templates.
            The summary includes collaboration information, creation information,
            the privacy budget type.
      required:
      - collaborationPrivacyBudgetTemplateSummaries
    ListCollaborationPrivacyBudgetsInput:
      type: object
      properties:
        collaborationIdentifier:
          allOf:
          - $ref: '#/components/schemas/CollaborationIdentifier'
          description: A unique identifier for one of your collaborations.
        privacyBudgetType:
          allOf:
          - $ref: '#/components/schemas/PrivacyBudgetType'
          description: Specifies the type of the privacy budget.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results that are returned for an API
            request call. The service chooses a default number if you don't set one.
            The service might return a `nextToken` even if the `maxResults` value
            has not been met.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: The pagination token that's used to fetch the next set of results.
      required:
      - collaborationIdentifier
      - privacyBudgetType
    ListCollaborationPrivacyBudgetsOutput:
      type: object
      properties:
        collaborationPrivacyBudgetSummaries:
          allOf:
          - $ref: '#/components/schemas/CollaborationPrivacyBudgetSummaryList'
          description: Summaries of the collaboration privacy budgets.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: The pagination token that's used to fetch the next set of results.
      required:
      - collaborationPrivacyBudgetSummaries
    ListCollaborationsInput:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: The pagination token that's used to fetch the next set of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results that are returned for an API
            request call. The service chooses a default number if you don't set one.
            The service might return a `nextToken` even if the `maxResults` value
            has not been met.
        memberStatus:
          allOf:
          - $ref: '#/components/schemas/FilterableMemberStatus'
          description: The caller's status in a collaboration.
    ListCollaborationsOutput:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: The pagination token that's used to fetch the next set of results.
        collaborationList:
          allOf:
          - $ref: '#/components/schemas/CollaborationSummaryList'
          description: The list of collaborations.
      required:
      - collaborationList
    ListConfiguredAudienceModelAssociationsInput:
      type: object
      properties:
        membershipIdentifier:
          allOf:
          - $ref: '#/components/schemas/MembershipIdentifier'
          description: A unique identifier for a membership that contains the configured
            audience model associations that you want to retrieve.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: The pagination token that's used to fetch the next set of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results that are returned for an API
            request call. The service chooses a default number if you don't set one.
            The service might return a `nextToken` even if the `maxResults` value
            has not been met.
      required:
      - membershipIdentifier
    ListConfiguredAudienceModelAssociationsOutput:
      type: object
      properties:
        configuredAudienceModelAssociationSummaries:
          allOf:
          - $ref: '#/components/schemas/ConfiguredAudienceModelAssociationSummaryList'
          description: Summaries of the configured audience model associations that
            you requested.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: The token value provided to access the next page of results.
      required:
      - configuredAudienceModelAssociationSummaries
    ListConfiguredTableAssociationsInput:
      type: object
      properties:
        membershipIdentifier:
          allOf:
          - $ref: '#/components/schemas/MembershipIdentifier'
          description: A unique identifier for the membership to list configured table
            associations for. Currently accepts the membership ID.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: The pagination token that's used to fetch the next set of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results that are returned for an API
            request call. The service chooses a default number if you don't set one.
            The service might return a `nextToken` even if the `maxResults` value
            has not been met.
      required:
      - membershipIdentifier
    ListConfiguredTableAssociationsOutput:
      type: object
      properties:
        configuredTableAssociationSummaries:
          allOf:
          - $ref: '#/components/schemas/ConfiguredTableAssociationSummaryList'
          description: The retrieved list of configured table associations.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: The pagination token that's used to fetch the next set of results.
      required:
      - configuredTableAssociationSummaries
    ListConfiguredTablesInput:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: The pagination token that's used to fetch the next set of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results that are returned for an API
            request call. The service chooses a default number if you don't set one.
            The service might return a `nextToken` even if the `maxResults` value
            has not been met.
    ListConfiguredTablesOutput:
      type: object
      properties:
        configuredTableSummaries:
          allOf:
          - $ref: '#/components/schemas/ConfiguredTableSummaryList'
          description: The configured tables listed by the request.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: The pagination token that's used to fetch the next set of results.
      required:
      - configuredTableSummaries
    ListIdMappingTablesInput:
      type: object
      properties:
        membershipIdentifier:
          allOf:
          - $ref: '#/components/schemas/MembershipIdentifier'
          description: The unique identifier of the membership that contains the ID
            mapping tables that you want to view.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: The pagination token that's used to fetch the next set of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum size of the results that is returned per call.
            Service chooses a default if it has not been set. Service may return a
            nextToken even if the maximum results has not been met.
      required:
      - membershipIdentifier
    ListIdMappingTablesOutput:
      type: object
      properties:
        idMappingTableSummaries:
          allOf:
          - $ref: '#/components/schemas/IdMappingTableSummaryList'
          description: The summary information of the ID mapping tables that you requested.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: The token value provided to access the next page of results.
      required:
      - idMappingTableSummaries
    ListIdNamespaceAssociationsInput:
      type: object
      properties:
        membershipIdentifier:
          allOf:
          - $ref: '#/components/schemas/MembershipIdentifier'
          description: The unique identifier of the membership that contains the ID
            namespace association that you want to view.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: The pagination token that's used to fetch the next set of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum size of the results that is returned per call.
            Service chooses a default if it has not been set. Service may return a
            nextToken even if the maximum results has not been met.
      required:
      - membershipIdentifier
    ListIdNamespaceAssociationsOutput:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: The token value provided to access the next page of results.
        idNamespaceAssociationSummaries:
          allOf:
          - $ref: '#/components/schemas/IdNamespaceAssociationSummaryList'
          description: The summary information of the ID namespace associations that
            you requested.
      required:
      - idNamespaceAssociationSummaries
    ListMembersInput:
      type: object
      properties:
        collaborationIdentifier:
          allOf:
          - $ref: '#/components/schemas/CollaborationIdentifier'
          description: The identifier of the collaboration in which the members are
            listed.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: The pagination token that's used to fetch the next set of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results that are returned for an API
            request call. The service chooses a default number if you don't set one.
            The service might return a `nextToken` even if the `maxResults` value
            has not been met.
      required:
      - collaborationIdentifier
    ListMembersOutput:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: The pagination token that's used to fetch the next set of results.
        memberSummaries:
          allOf:
          - $ref: '#/components/schemas/MemberSummaryList'
          description: The list of members returned by the ListMembers operation.
      required:
      - memberSummaries
    ListMembershipsInput:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: The pagination token that's used to fetch the next set of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results that are returned for an API
            request call. The service chooses a default number if you don't set one.
            The service might return a `nextToken` even if the `maxResults` value
            has not been met.
        status:
          allOf:
          - $ref: '#/components/schemas/MembershipStatus'
          description: A filter which will return only memberships in the specified
            status.
    ListMembershipsOutput:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: The pagination token that's used to fetch the next set of results.
        membershipSummaries:
          allOf:
          - $ref: '#/components/schemas/MembershipSummaryList'
          description: The list of memberships returned from the ListMemberships operation.
      required:
      - membershipSummaries
    ListPrivacyBudgetTemplatesInput:
      type: object
      properties:
        membershipIdentifier:
          allOf:
          - $ref: '#/components/schemas/MembershipIdentifier'
          description: A unique identifier for one of your memberships for a collaboration.
            The privacy budget templates are retrieved from the collaboration that
            this membership belongs to. Accepts a membership ID.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: The pagination token that's used to fetch the next set of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results that are returned for an API
            request call. The service chooses a default number if you don't set one.
            The service might return a `nextToken` even if the `maxResults` value
            has not been met.
      required:
      - membershipIdentifier
    ListPrivacyBudgetTemplatesOutput:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: The pagination token that's used to fetch the next set of results.
        privacyBudgetTemplateSummaries:
          allOf:
          - $ref: '#/components/schemas/PrivacyBudgetTemplateSummaryList'
          description: An array that summarizes the privacy budget templates. The
            summary includes collaboration information, creation information, and
            privacy budget type.
      required:
      - privacyBudgetTemplateSummaries
    ListPrivacyBudgetsInput:
      type: object
      properties:
        membershipIdentifier:
          allOf:
          - $ref: '#/components/schemas/MembershipIdentifier'
          description: A unique identifier for one of your memberships for a collaboration.
            The privacy budget is retrieved from the collaboration that this membership
            belongs to. Accepts a membership ID.
        privacyBudgetType:
          allOf:
          - $ref: '#/components/schemas/PrivacyBudgetType'
          description: The privacy budget type.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: The pagination token that's used to fetch the next set of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results that are returned for an API
            request call. The service chooses a default number if you don't set one.
            The service might return a `nextToken` even if the `maxResults` value
            has not been met.
      required:
      - membershipIdentifier
      - privacyBudgetType
    ListPrivacyBudgetsOutput:
      type: object
      properties:
        privacyBudgetSummaries:
          allOf:
          - $ref: '#/components/schemas/PrivacyBudgetSummaryList'
          description: An array that summarizes the privacy budgets. The summary includes
            collaboration information, membership information, privacy budget template
            information, and privacy budget details.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: The pagination token that's used to fetch the next set of results.
      required:
      - privacyBudgetSummaries
    ListProtectedJobsInput:
      type: object
      properties:
        membershipIdentifier:
          allOf:
          - $ref: '#/components/schemas/MembershipIdentifier'
          description: The identifier for the membership in the collaboration.
        status:
          allOf:
          - $ref: '#/components/schemas/ProtectedJobStatus'
          description: A filter on the status of the protected job.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: The pagination token that's used to fetch the next set of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results that are returned for an API
            request call. The service chooses a default number if you don't set one.
            The service might return a `nextToken` even if the `maxResults` value
            has not been met.
      required:
      - membershipIdentifier
    ListProtectedJobsOutput:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: The pagination token that's used to fetch the next set of results.
        protectedJobs:
          allOf:
          - $ref: '#/components/schemas/ProtectedJobSummaryList'
          description: A list of protected job summaries.
      required:
      - protectedJobs
    ListProtectedQueriesInput:
      type: object
      properties:
        membershipIdentifier:
          allOf:
          - $ref: '#/components/schemas/MembershipIdentifier'
          description: The identifier for the membership in the collaboration.
        status:
          allOf:
          - $ref: '#/components/schemas/ProtectedQueryStatus'
          description: A filter on the status of the protected query.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: The pagination token that's used to fetch the next set of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results that are returned for an API
            request call. The service chooses a default number if you don't set one.
            The service might return a `nextToken` even if the `maxResults` value
            has not been met.
      required:
      - membershipIdentifier
    ListProtectedQueriesOutput:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: The pagination token that's used to fetch the next set of results.
        protectedQueries:
          allOf:
          - $ref: '#/components/schemas/ProtectedQuerySummaryList'
          description: A list of protected queries.
      required:
      - protectedQueries
    ListSchemasInput:
      type: object
      properties:
        collaborationIdentifier:
          allOf:
          - $ref: '#/components/schemas/CollaborationIdentifier'
          description: A unique identifier for the collaboration that the schema belongs
            to. Currently accepts a collaboration ID.
        schemaType:
          allOf:
          - $ref: '#/components/schemas/SchemaType'
          description: If present, filter schemas by schema type.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: The pagination token that's used to fetch the next set of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results that are returned for an API
            request call. The service chooses a default number if you don't set one.
            The service might return a `nextToken` even if the `maxResults` value
            has not been met.
      required:
      - collaborationIdentifier
    ListSchemasOutput:
      type: object
      properties:
        schemaSummaries:
          allOf:
          - $ref: '#/components/schemas/SchemaSummaryList'
          description: The retrieved list of schemas.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: The pagination token that's used to fetch the next set of results.
      required:
      - schemaSummaries
    ListTagsForResourceInput:
      type: object
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/CleanroomsArn'
          description: The Amazon Resource Name (ARN) associated with the resource
            you want to list tags on.
      required:
      - resourceArn
    ListTagsForResourceOutput:
      type: object
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: A map of objects specifying each key name and value.
      required:
      - tags
    MLMemberAbilities:
      type: object
      properties:
        customMLMemberAbilities:
          allOf:
          - $ref: '#/components/schemas/CustomMLMemberAbilities'
          description: The custom ML member abilities for a collaboration member.
      required:
      - customMLMemberAbilities
      description: The ML member abilities for a collaboration member.
    MLPaymentConfig:
      type: object
      properties:
        modelTraining:
          allOf:
          - $ref: '#/components/schemas/ModelTrainingPaymentConfig'
          description: The payment responsibilities accepted by the member for model
            training.
        modelInference:
          allOf:
          - $ref: '#/components/schemas/ModelInferencePaymentConfig'
          description: The payment responsibilities accepted by the member for model
            inference.
      description: An object representing the collaboration member's machine learning
        payment responsibilities set by the collaboration creator.
    MaxResults:
      type: integer
      minimum: 1
      maximum: 100
    MemberAbilities:
      type: array
      items:
        $ref: '#/components/schemas/MemberAbility'
    MemberAbility:
      type: string
      enum:
      - CAN_QUERY
      - CAN_RECEIVE_RESULTS
      - CAN_RUN_JOB
    MemberList:
      type: array
      items:
        $ref: '#/components/schemas/MemberSpecification'
    MemberSpecification:
      type: object
      properties:
        accountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The identifier used to reference members of the collaboration.
            Currently only supports Amazon Web Services account ID.
        memberAbilities:
          allOf:
          - $ref: '#/components/schemas/MemberAbilities'
          description: The abilities granted to the collaboration member.
        mlMemberAbilities:
          allOf:
          - $ref: '#/components/schemas/MLMemberAbilities'
          description: The ML abilities granted to the collaboration member.
        displayName:
          allOf:
          - $ref: '#/components/schemas/DisplayName'
          description: The member's display name.
        paymentConfiguration:
          allOf:
          - $ref: '#/components/schemas/PaymentConfiguration'
          description: 'The collaboration member''s payment responsibilities set by
            the collaboration creator.


            If the collaboration creator hasn''t speciﬁed anyone as the member paying
            for query compute costs, then the member who can query is the default
            payer.'
      required:
      - accountId
      - memberAbilities
      - displayName
      description: Basic metadata used to construct a new member.
    MemberStatus:
      type: string
      enum:
      - INVITED
      - ACTIVE
      - LEFT
      - REMOVED
    MemberSummary:
      type: object
      properties:
        accountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The identifier used to reference members of the collaboration.
            Currently only supports Amazon Web Services account ID.
        status:
          allOf:
          - $ref: '#/components/schemas/MemberStatus'
          description: The status of the member.
        displayName:
          allOf:
          - $ref: '#/components/schemas/DisplayName'
          description: The member's display name.
        abilities:
          allOf:
          - $ref: '#/components/schemas/MemberAbilities'
          description: The abilities granted to the collaboration member.
        mlAbilities:
          allOf:
          - $ref: '#/components/schemas/MLMemberAbilities'
          description: Provides a summary of the ML abilities for the collaboration
            member.
        createTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time when the member was created.
        updateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time the member metadata was last updated.
        membershipId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique ID for the member's associated membership, if present.
        membershipArn:
          allOf:
          - $ref: '#/components/schemas/MembershipArn'
          description: The unique ARN for the member's associated membership, if present.
        paymentConfiguration:
          allOf:
          - $ref: '#/components/schemas/PaymentConfiguration'
          description: The collaboration member's payment responsibilities set by
            the collaboration creator.
      required:
      - accountId
      - status
      - displayName
      - abilities
      - createTime
      - updateTime
      - paymentConfiguration
      description: The member object listed by the request.
    MemberSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/MemberSummary'
    Membership:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique ID of the membership.
        arn:
          allOf:
          - $ref: '#/components/schemas/MembershipArn'
          description: The unique ARN for the membership.
        collaborationArn:
          allOf:
          - $ref: '#/components/schemas/CollaborationArn'
          description: The unique ARN for the membership's associated collaboration.
        collaborationId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique ID for the membership's collaboration.
        collaborationCreatorAccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The identifier used to reference members of the collaboration.
            Currently only supports Amazon Web Services account ID.
        collaborationCreatorDisplayName:
          allOf:
          - $ref: '#/components/schemas/DisplayName'
          description: The display name of the collaboration creator.
        collaborationName:
          allOf:
          - $ref: '#/components/schemas/CollaborationName'
          description: The name of the membership's collaboration.
        createTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time when the membership was created.
        updateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time the membership metadata was last updated.
        status:
          allOf:
          - $ref: '#/components/schemas/MembershipStatus'
          description: The status of the membership.
        memberAbilities:
          allOf:
          - $ref: '#/components/schemas/MemberAbilities'
          description: The abilities granted to the collaboration member.
        mlMemberAbilities:
          allOf:
          - $ref: '#/components/schemas/MLMemberAbilities'
          description: Specifies the ML member abilities that are granted to a collaboration
            member.
        queryLogStatus:
          allOf:
          - $ref: '#/components/schemas/MembershipQueryLogStatus'
          description: 'An indicator as to whether query logging has been enabled
            or disabled for the membership.


            When `ENABLED`, Clean Rooms logs details about queries run within this
            collaboration and those logs can be viewed in Amazon CloudWatch Logs.
            The default value is `DISABLED`.'
        jobLogStatus:
          allOf:
          - $ref: '#/components/schemas/MembershipJobLogStatus'
          description: 'An indicator as to whether job logging has been enabled or
            disabled for the collaboration.


            When `ENABLED`, Clean Rooms logs details about jobs run within this collaboration
            and those logs can be viewed in Amazon CloudWatch Logs. The default value
            is `DISABLED`.'
        defaultResultConfiguration:
          allOf:
          - $ref: '#/components/schemas/MembershipProtectedQueryResultConfiguration'
          description: The default protected query result configuration as specified
            by the member who can receive results.
        defaultJobResultConfiguration:
          allOf:
          - $ref: '#/components/schemas/MembershipProtectedJobResultConfiguration'
          description: The default job result configuration for the membership.
        paymentConfiguration:
          allOf:
          - $ref: '#/components/schemas/MembershipPaymentConfiguration'
          description: The payment responsibilities accepted by the collaboration
            member.
      required:
      - id
      - arn
      - collaborationArn
      - collaborationId
      - collaborationCreatorAccountId
      - collaborationCreatorDisplayName
      - collaborationName
      - createTime
      - updateTime
      - status
      - memberAbilities
      - queryLogStatus
      - paymentConfiguration
      description: The membership object.
    MembershipArn:
      type: string
      pattern: ^arn:aws:[\w]+:[\w]{2}-[\w]{4,9}-[\d]:[\d]{12}:membership/[\d\w-]+$
      maxLength: 100
    MembershipIdentifier:
      type: string
      pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
      minLength: 36
      maxLength: 36
    MembershipJobComputePaymentConfig:
      type: object
      properties:
        isResponsible:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: "Indicates whether the collaboration member has accepted to\
            \ pay for job compute costs (`TRUE`) or has not accepted to pay for query\
            \ and job compute costs (`FALSE`).\n\nThere is only one member who pays\
            \ for queries and jobs.\n\nAn error message is returned for the following\
            \ reasons:\n\n  * If you set the value to `FALSE` but you are responsible\
            \ to pay for query and job compute costs. \n\n  * If you set the value\
            \ to `TRUE` but you are not responsible to pay for query and job compute\
            \ costs."
      required:
      - isResponsible
      description: An object representing the payment responsibilities accepted by
        the collaboration member for query and job compute costs.
    MembershipJobLogStatus:
      type: string
      enum:
      - ENABLED
      - DISABLED
    MembershipMLPaymentConfig:
      type: object
      properties:
        modelTraining:
          allOf:
          - $ref: '#/components/schemas/MembershipModelTrainingPaymentConfig'
          description: The payment responsibilities accepted by the member for model
            training.
        modelInference:
          allOf:
          - $ref: '#/components/schemas/MembershipModelInferencePaymentConfig'
          description: The payment responsibilities accepted by the member for model
            inference.
      description: An object representing the collaboration member's machine learning
        payment responsibilities set by the collaboration creator.
    MembershipModelInferencePaymentConfig:
      type: object
      properties:
        isResponsible:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: "Indicates whether the collaboration member has accepted to\
            \ pay for model inference costs (`TRUE`) or has not accepted to pay for\
            \ model inference costs (`FALSE`).\n\nIf the collaboration creator has\
            \ not specified anyone to pay for model inference costs, then the member\
            \ who can query is the default payer.\n\nAn error message is returned\
            \ for the following reasons:\n\n  * If you set the value to `FALSE` but\
            \ you are responsible to pay for model inference costs. \n\n  * If you\
            \ set the value to `TRUE` but you are not responsible to pay for model\
            \ inference costs."
      required:
      - isResponsible
      description: An object representing the collaboration member's model inference
        payment responsibilities set by the collaboration creator.
    MembershipModelTrainingPaymentConfig:
      type: object
      properties:
        isResponsible:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: "Indicates whether the collaboration member has accepted to\
            \ pay for model training costs (`TRUE`) or has not accepted to pay for\
            \ model training costs (`FALSE`).\n\nIf the collaboration creator has\
            \ not specified anyone to pay for model training costs, then the member\
            \ who can query is the default payer.\n\nAn error message is returned\
            \ for the following reasons:\n\n  * If you set the value to `FALSE` but\
            \ you are responsible to pay for model training costs. \n\n  * If you\
            \ set the value to `TRUE` but you are not responsible to pay for model\
            \ training costs."
      required:
      - isResponsible
      description: An object representing the collaboration member's model training
        payment responsibilities set by the collaboration creator.
    MembershipPaymentConfiguration:
      type: object
      properties:
        queryCompute:
          allOf:
          - $ref: '#/components/schemas/MembershipQueryComputePaymentConfig'
          description: The payment responsibilities accepted by the collaboration
            member for query compute costs.
        machineLearning:
          allOf:
          - $ref: '#/components/schemas/MembershipMLPaymentConfig'
          description: The payment responsibilities accepted by the collaboration
            member for machine learning costs.
        jobCompute:
          allOf:
          - $ref: '#/components/schemas/MembershipJobComputePaymentConfig'
          description: The payment responsibilities accepted by the collaboration
            member for job compute costs.
      required:
      - queryCompute
      description: An object representing the payment responsibilities accepted by
        the collaboration member.
    MembershipProtectedJobOutputConfiguration:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/ProtectedJobS3OutputConfigurationInput'
        description: |-
          Contains the configuration to write the job results to S3.
      description: |-
        Contains configurations for protected job results.
    MembershipProtectedJobResultConfiguration:
      type: object
      properties:
        outputConfiguration:
          allOf:
          - $ref: '#/components/schemas/MembershipProtectedJobOutputConfiguration'
          description: The output configuration for a protected job result.
        roleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          description: The unique ARN for an IAM role that is used by Clean Rooms
            to write protected job results to the result location, given by the member
            who can receive results.
      required:
      - outputConfiguration
      - roleArn
      description: Contains configurations for protected job results.
    MembershipProtectedQueryOutputConfiguration:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/ProtectedQueryS3OutputConfiguration'
      description: |-
        Contains configurations for protected query results.
    MembershipProtectedQueryResultConfiguration:
      type: object
      properties:
        outputConfiguration:
          allOf:
          - $ref: '#/components/schemas/MembershipProtectedQueryOutputConfiguration'
          description: Configuration for protected query results.
        roleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          description: The unique ARN for an IAM role that is used by Clean Rooms
            to write protected query results to the result location, given by the
            member who can receive results.
      required:
      - outputConfiguration
      description: Contains configurations for protected query results.
    MembershipQueryComputePaymentConfig:
      type: object
      properties:
        isResponsible:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: "Indicates whether the collaboration member has accepted to\
            \ pay for query compute costs (`TRUE`) or has not accepted to pay for\
            \ query compute costs (`FALSE`).\n\nIf the collaboration creator has not\
            \ specified anyone to pay for query compute costs, then the member who\
            \ can query is the default payer.\n\nAn error message is returned for\
            \ the following reasons:\n\n  * If you set the value to `FALSE` but you\
            \ are responsible to pay for query compute costs. \n\n  * If you set the\
            \ value to `TRUE` but you are not responsible to pay for query compute\
            \ costs."
      required:
      - isResponsible
      description: An object representing the payment responsibilities accepted by
        the collaboration member for query compute costs.
    MembershipQueryLogStatus:
      type: string
      enum:
      - ENABLED
      - DISABLED
    MembershipStatus:
      type: string
      enum:
      - ACTIVE
      - REMOVED
      - COLLABORATION_DELETED
    MembershipSummary:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique ID for the membership's collaboration.
        arn:
          allOf:
          - $ref: '#/components/schemas/MembershipArn'
          description: The unique ARN for the membership.
        collaborationArn:
          allOf:
          - $ref: '#/components/schemas/CollaborationArn'
          description: The unique ARN for the membership's associated collaboration.
        collaborationId:
          allOf:
          - $ref: '#/components/schemas/CollaborationIdentifier'
          description: The unique ID for the membership's collaboration.
        collaborationCreatorAccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The identifier of the Amazon Web Services principal that created
            the collaboration. Currently only supports Amazon Web Services account
            ID.
        collaborationCreatorDisplayName:
          allOf:
          - $ref: '#/components/schemas/DisplayName'
          description: The display name of the collaboration creator.
        collaborationName:
          allOf:
          - $ref: '#/components/schemas/CollaborationName'
          description: The name for the membership's collaboration.
        createTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time when the membership was created.
        updateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time the membership metadata was last updated.
        status:
          allOf:
          - $ref: '#/components/schemas/MembershipStatus'
          description: The status of the membership.
        memberAbilities:
          allOf:
          - $ref: '#/components/schemas/MemberAbilities'
          description: The abilities granted to the collaboration member.
        mlMemberAbilities:
          allOf:
          - $ref: '#/components/schemas/MLMemberAbilities'
          description: Provides a summary of the ML abilities for the collaboration
            member.
        paymentConfiguration:
          allOf:
          - $ref: '#/components/schemas/MembershipPaymentConfiguration'
          description: The payment responsibilities accepted by the collaboration
            member.
      required:
      - id
      - arn
      - collaborationArn
      - collaborationId
      - collaborationCreatorAccountId
      - collaborationCreatorDisplayName
      - collaborationName
      - createTime
      - updateTime
      - status
      - memberAbilities
      - paymentConfiguration
      description: The membership object listed by the request.
    MembershipSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/MembershipSummary'
    ModelInferencePaymentConfig:
      type: object
      properties:
        isResponsible:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: 'Indicates whether the collaboration creator has configured
            the collaboration member to pay for model inference costs (`TRUE`) or
            has not configured the collaboration member to pay for model inference
            costs (`FALSE`).


            Exactly one member can be configured to pay for model inference costs.
            An error is returned if the collaboration creator sets a `TRUE` value
            for more than one member in the collaboration.


            If the collaboration creator hasn''t specified anyone as the member paying
            for model inference costs, then the member who can query is the default
            payer. An error is returned if the collaboration creator sets a `FALSE`
            value for the member who can query.'
      required:
      - isResponsible
      description: An object representing the collaboration member's model inference
        payment responsibilities set by the collaboration creator.
    ModelTrainingPaymentConfig:
      type: object
      properties:
        isResponsible:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: 'Indicates whether the collaboration creator has configured
            the collaboration member to pay for model training costs (`TRUE`) or has
            not configured the collaboration member to pay for model training costs
            (`FALSE`).


            Exactly one member can be configured to pay for model training costs.
            An error is returned if the collaboration creator sets a `TRUE` value
            for more than one member in the collaboration.


            If the collaboration creator hasn''t specified anyone as the member paying
            for model training costs, then the member who can query is the default
            payer. An error is returned if the collaboration creator sets a `FALSE`
            value for the member who can query.'
      required:
      - isResponsible
      description: An object representing the collaboration member's model training
        payment responsibilities set by the collaboration creator.
    PaginationToken:
      type: string
      maxLength: 10240
    ParameterMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/ParameterValue'
    ParameterName:
      type: string
      pattern: ^[0-9a-zA-Z_]+$
      minLength: 1
      maxLength: 100
    ParameterType:
      type: string
      enum:
      - SMALLINT
      - INTEGER
      - BIGINT
      - DECIMAL
      - REAL
      - DOUBLE_PRECISION
      - BOOLEAN
      - CHAR
      - VARCHAR
      - DATE
      - TIMESTAMP
      - TIMESTAMPTZ
      - TIME
      - TIMETZ
      - VARBYTE
      - BINARY
      - BYTE
      - CHARACTER
      - DOUBLE
      - FLOAT
      - INT
      - LONG
      - NUMERIC
      - SHORT
      - STRING
      - TIMESTAMP_LTZ
      - TIMESTAMP_NTZ
      - TINYINT
    ParameterValue:
      type: string
      minLength: 0
      maxLength: 250
    PaymentConfiguration:
      type: object
      properties:
        queryCompute:
          allOf:
          - $ref: '#/components/schemas/QueryComputePaymentConfig'
          description: The collaboration member's payment responsibilities set by
            the collaboration creator for query compute costs.
        machineLearning:
          allOf:
          - $ref: '#/components/schemas/MLPaymentConfig'
          description: An object representing the collaboration member's machine learning
            payment responsibilities set by the collaboration creator.
        jobCompute:
          allOf:
          - $ref: '#/components/schemas/JobComputePaymentConfig'
          description: The compute configuration for the job.
      required:
      - queryCompute
      description: An object representing the collaboration member's payment responsibilities
        set by the collaboration creator.
    PopulateIdMappingTableInput:
      type: object
      properties:
        idMappingTableIdentifier:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier of the ID mapping table that you want
            to populate.
        membershipIdentifier:
          allOf:
          - $ref: '#/components/schemas/MembershipIdentifier'
          description: The unique identifier of the membership that contains the ID
            mapping table that you want to populate.
      required:
      - idMappingTableIdentifier
      - membershipIdentifier
    PopulateIdMappingTableOutput:
      type: object
      properties:
        idMappingJobId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier of the mapping job that will populate
            the ID mapping table.
      required:
      - idMappingJobId
    PreviewPrivacyImpactInput:
      type: object
      properties:
        membershipIdentifier:
          allOf:
          - $ref: '#/components/schemas/MembershipIdentifier'
          description: A unique identifier for one of your memberships for a collaboration.
            Accepts a membership ID.
        parameters:
          allOf:
          - $ref: '#/components/schemas/PreviewPrivacyImpactParametersInput'
          description: Specifies the desired epsilon and noise parameters to preview.
      required:
      - membershipIdentifier
      - parameters
    PreviewPrivacyImpactOutput:
      type: object
      properties:
        privacyImpact:
          allOf:
          - $ref: '#/components/schemas/PrivacyImpact'
          description: An estimate of the number of aggregation functions that the
            member who can query can run given the epsilon and noise parameters. This
            does not change the privacy budget.
      required:
      - privacyImpact
    PreviewPrivacyImpactParametersInput:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/DifferentialPrivacyPreviewParametersInput'
        description: |-
          An array that specifies the epsilon and noise parameters.
      description: |-
        Specifies the updated epsilon and noise parameters to preview. The preview allows you to see how the maximum number of each type of aggregation function would change with the new parameters.
    PrivacyBudget:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/DifferentialPrivacyPrivacyBudget'
        description: |-
          An object that specifies the epsilon parameter and the utility in terms of total aggregations, as well as the remaining aggregations available.
      description: |-
        The epsilon parameter value and number of each aggregation function that you can perform.
    PrivacyBudgetSummary:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier of the privacy budget.
        privacyBudgetTemplateId:
          allOf:
          - $ref: '#/components/schemas/PrivacyBudgetTemplateIdentifier'
          description: The unique identifier of the privacy budget template.
        privacyBudgetTemplateArn:
          allOf:
          - $ref: '#/components/schemas/PrivacyBudgetTemplateArn'
          description: The ARN of the privacy budget template.
        membershipId:
          allOf:
          - $ref: '#/components/schemas/MembershipIdentifier'
          description: The identifier for a membership resource.
        membershipArn:
          allOf:
          - $ref: '#/components/schemas/MembershipArn'
          description: The Amazon Resource Name (ARN) of the member who created the
            privacy budget summary.
        collaborationId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier of the collaboration that contains this
            privacy budget.
        collaborationArn:
          allOf:
          - $ref: '#/components/schemas/CollaborationArn'
          description: The ARN of the collaboration that contains this privacy budget.
        type:
          allOf:
          - $ref: '#/components/schemas/PrivacyBudgetType'
          description: Specifies the type of the privacy budget.
        createTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the privacy budget was created.
        updateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The most recent time at which the privacy budget was updated.
        budget:
          allOf:
          - $ref: '#/components/schemas/PrivacyBudget'
          description: The provided privacy budget.
      required:
      - id
      - privacyBudgetTemplateId
      - privacyBudgetTemplateArn
      - membershipId
      - membershipArn
      - collaborationId
      - collaborationArn
      - type
      - createTime
      - updateTime
      - budget
      description: An array that summaries the specified privacy budget. This summary
        includes collaboration information, creation information, membership information,
        and privacy budget information.
    PrivacyBudgetSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/PrivacyBudgetSummary'
    PrivacyBudgetTemplate:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/PrivacyBudgetTemplateIdentifier'
          description: The unique identifier of the privacy budget template.
        arn:
          allOf:
          - $ref: '#/components/schemas/PrivacyBudgetTemplateArn'
          description: The ARN of the privacy budget template.
        membershipId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The identifier for a membership resource.
        membershipArn:
          allOf:
          - $ref: '#/components/schemas/MembershipArn'
          description: The Amazon Resource Name (ARN) of the member who created the
            privacy budget template.
        collaborationId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique ID of the collaboration that contains this privacy
            budget template.
        collaborationArn:
          allOf:
          - $ref: '#/components/schemas/CollaborationArn'
          description: The ARN of the collaboration that contains this privacy budget
            template.
        createTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the privacy budget template was created.
        updateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The most recent time at which the privacy budget template was
            updated.
        privacyBudgetType:
          allOf:
          - $ref: '#/components/schemas/PrivacyBudgetType'
          description: Specifies the type of the privacy budget template.
        autoRefresh:
          allOf:
          - $ref: '#/components/schemas/PrivacyBudgetTemplateAutoRefresh'
          description: 'How often the privacy budget refreshes.


            If you plan to regularly bring new data into the collaboration, use `CALENDAR_MONTH`
            to automatically get a new privacy budget for the collaboration every
            calendar month. Choosing this option allows arbitrary amounts of information
            to be revealed about rows of the data when repeatedly queried across refreshes.
            Avoid choosing this if the same rows will be repeatedly queried between
            privacy budget refreshes.'
        parameters:
          allOf:
          - $ref: '#/components/schemas/PrivacyBudgetTemplateParametersOutput'
          description: Specifies the epsilon and noise parameters for the privacy
            budget template.
      required:
      - id
      - arn
      - membershipId
      - membershipArn
      - collaborationId
      - collaborationArn
      - createTime
      - updateTime
      - privacyBudgetType
      - autoRefresh
      - parameters
      description: An object that defines the privacy budget template.
    PrivacyBudgetTemplateArn:
      type: string
      pattern: ^arn:aws:[\w]+:[\w]{2}-[\w]{4,9}-[\d]:[\d]{12}:privacybudgettemplate/[\d\w-]+$
      maxLength: 100
    PrivacyBudgetTemplateAutoRefresh:
      type: string
      enum:
      - CALENDAR_MONTH
      - NONE
    PrivacyBudgetTemplateIdentifier:
      type: string
      pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
      minLength: 36
      maxLength: 36
    PrivacyBudgetTemplateParametersInput:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/DifferentialPrivacyTemplateParametersInput'
        description: |-
          An object that specifies the epsilon and noise parameters.
      description: |-
        The epsilon and noise parameters that you want to use for the privacy budget template.
    PrivacyBudgetTemplateParametersOutput:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/DifferentialPrivacyTemplateParametersOutput'
        description: |-
          The epsilon and noise parameters.
      description: |-
        The epsilon and noise parameters that were used in the privacy budget template.
    PrivacyBudgetTemplateSummary:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/PrivacyBudgetTemplateIdentifier'
          description: The unique identifier of the privacy budget template.
        arn:
          allOf:
          - $ref: '#/components/schemas/PrivacyBudgetTemplateArn'
          description: The ARN of the privacy budget template.
        membershipId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The identifier for a membership resource.
        membershipArn:
          allOf:
          - $ref: '#/components/schemas/MembershipArn'
          description: The Amazon Resource Name (ARN) of the member who created the
            privacy budget template.
        collaborationId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique ID of the collaboration that contains this privacy
            budget template.
        collaborationArn:
          allOf:
          - $ref: '#/components/schemas/CollaborationArn'
          description: The ARN of the collaboration that contains this privacy budget
            template.
        privacyBudgetType:
          allOf:
          - $ref: '#/components/schemas/PrivacyBudgetType'
          description: The type of the privacy budget template.
        createTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the privacy budget template was created.
        updateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The most recent time at which the privacy budget template was
            updated.
      required:
      - id
      - arn
      - membershipId
      - membershipArn
      - collaborationId
      - collaborationArn
      - privacyBudgetType
      - createTime
      - updateTime
      description: A summary of the privacy budget template. The summary includes
        membership information, collaboration information, and creation information.
    PrivacyBudgetTemplateSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/PrivacyBudgetTemplateSummary'
    PrivacyBudgetTemplateUpdateParameters:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/DifferentialPrivacyTemplateUpdateParameters'
        description: |-
          An object that specifies the new values for the epsilon and noise parameters.
      description: |-
        The epsilon and noise parameters that you want to update in the privacy budget template.
    PrivacyBudgetType:
      type: string
      enum:
      - DIFFERENTIAL_PRIVACY
    PrivacyImpact:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/DifferentialPrivacyPrivacyImpact'
        description: |-
          An object that lists the number and type of aggregation functions you can perform.
      description: |-
        Provides an estimate of the number of aggregation functions that the member who can query can run given the epsilon and noise parameters.
    ProtectedJob:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/ProtectedJobIdentifier'
          description: The identifier for a protected job instance.
        membershipId:
          allOf:
          - $ref: '#/components/schemas/MembershipIdentifier'
          description: he identifier for the membership.
        membershipArn:
          allOf:
          - $ref: '#/components/schemas/MembershipArn'
          description: The ARN of the membership.
        createTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The creation time of the protected job.
        jobParameters:
          allOf:
          - $ref: '#/components/schemas/ProtectedJobParameters'
          description: The job parameters for the protected job.
        status:
          allOf:
          - $ref: '#/components/schemas/ProtectedJobStatus'
          description: The status of the protected job.
        resultConfiguration:
          allOf:
          - $ref: '#/components/schemas/ProtectedJobResultConfigurationOutput'
          description: Contains any details needed to write the job results.
        statistics:
          allOf:
          - $ref: '#/components/schemas/ProtectedJobStatistics'
          description: The statistics of the protected job.
        result:
          allOf:
          - $ref: '#/components/schemas/ProtectedJobResult'
          description: The result of the protected job.
        error:
          allOf:
          - $ref: '#/components/schemas/ProtectedJobError'
          description: The error from the protected job.
      required:
      - id
      - membershipId
      - membershipArn
      - createTime
      - status
      description: The parameters for an Clean Rooms protected job.
    ProtectedJobAnalysisType:
      type: string
      enum:
      - DIRECT_ANALYSIS
    ProtectedJobConfigurationDetails:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/ProtectedJobDirectAnalysisConfigurationDetails'
        description: |-
          The details needed to configure the direct analysis.
      description: |-
        The protected job configuration details.
    ProtectedJobDirectAnalysisConfigurationDetails:
      type: object
      properties:
        receiverAccountIds:
          allOf:
          - $ref: '#/components/schemas/ProtectedJobReceiverAccountIds'
          description: The receiver account IDs.
      description: The protected job direct analysis configuration details.
    ProtectedJobError:
      type: object
      properties:
        message:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The message for the protected job error.
        code:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The error code for the protected job.
      required:
      - message
      - code
      description: The protected job error.
    ProtectedJobIdentifier:
      type: string
      pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
      minLength: 36
      maxLength: 36
    ProtectedJobMemberOutputConfigurationInput:
      type: object
      properties:
        accountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The account ID.
      required:
      - accountId
      description: The protected job member output configuration input.
    ProtectedJobMemberOutputConfigurationOutput:
      type: object
      properties:
        accountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The account ID.
      required:
      - accountId
      description: The protected job member output configuration output.
    ProtectedJobMemberOutputList:
      type: array
      items:
        $ref: '#/components/schemas/ProtectedJobSingleMemberOutput'
    ProtectedJobOutput:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/ProtectedJobS3Output'
        description: |-
          If present, the output for a protected job with an `S3` output type.
      - allOf:
        - $ref: '#/components/schemas/ProtectedJobMemberOutputList'
        description: |-
          The list of member Amazon Web Services account(s) that received the results of the job.
      description: |-
        Contains details about the protected job output.
    ProtectedJobOutputConfigurationInput:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/ProtectedJobMemberOutputConfigurationInput'
        description: |-
          The member of the protected job output configuration input.
      description: |-
        The protected job output configuration input.
    ProtectedJobOutputConfigurationOutput:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/ProtectedJobS3OutputConfigurationOutput'
        description: |-
          If present, the output for a protected job with an `S3` output type.
      - allOf:
        - $ref: '#/components/schemas/ProtectedJobMemberOutputConfigurationOutput'
        description: |-
          The member output configuration for a protected job.
      description: |-
        The protected job output configuration output.
    ProtectedJobParameters:
      type: object
      properties:
        analysisTemplateArn:
          allOf:
          - $ref: '#/components/schemas/AnalysisTemplateArn'
          description: The ARN of the analysis template.
      description: The parameters for the protected job.
    ProtectedJobReceiverAccountIds:
      type: array
      items:
        $ref: '#/components/schemas/AccountId'
    ProtectedJobReceiverConfiguration:
      type: object
      properties:
        analysisType:
          allOf:
          - $ref: '#/components/schemas/ProtectedJobAnalysisType'
          description: The analysis type for the protected job receiver configuration.
        configurationDetails:
          allOf:
          - $ref: '#/components/schemas/ProtectedJobConfigurationDetails'
          description: The configuration details for the protected job receiver.
      required:
      - analysisType
      description: The protected job receiver configuration.
    ProtectedJobReceiverConfigurations:
      type: array
      items:
        $ref: '#/components/schemas/ProtectedJobReceiverConfiguration'
    ProtectedJobResult:
      type: object
      properties:
        output:
          allOf:
          - $ref: '#/components/schemas/ProtectedJobOutput'
          description: The output of the protected job.
      required:
      - output
      description: Details about the job results.
    ProtectedJobResultConfigurationInput:
      type: object
      properties:
        outputConfiguration:
          allOf:
          - $ref: '#/components/schemas/ProtectedJobOutputConfigurationInput'
          description: The output configuration for a protected job result.
      required:
      - outputConfiguration
      description: The protected job result configuration input.
    ProtectedJobResultConfigurationOutput:
      type: object
      properties:
        outputConfiguration:
          allOf:
          - $ref: '#/components/schemas/ProtectedJobOutputConfigurationOutput'
          description: The output configuration.
      required:
      - outputConfiguration
      description: The output configuration for a protected job result.
    ProtectedJobS3Output:
      type: object
      properties:
        location:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The S3 location for the protected job output.
      required:
      - location
      description: Contains output information for protected jobs with an S3 output
        type.
    ProtectedJobS3OutputConfigurationInput:
      type: object
      properties:
        bucket:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The S3 bucket for job output.
        keyPrefix:
          allOf:
          - $ref: '#/components/schemas/KeyPrefix'
          description: The S3 prefix to unload the protected job results.
      required:
      - bucket
      description: Contains input information for protected jobs with an S3 output
        type.
    ProtectedJobS3OutputConfigurationOutput:
      type: object
      properties:
        bucket:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The S3 bucket for job output.
        keyPrefix:
          allOf:
          - $ref: '#/components/schemas/KeyPrefix'
          description: The S3 prefix to unload the protected job results.
      required:
      - bucket
      description: The output configuration for a protected job's S3 output.
    ProtectedJobSingleMemberOutput:
      type: object
      properties:
        accountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The Amazon Web Services account ID of the member in the collaboration
            who can receive results from analyses.
      required:
      - accountId
      description: Details about the member who received the job result.
    ProtectedJobStatistics:
      type: object
      properties:
        totalDurationInMillis:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: The duration of the protected job, from creation until job
            completion, in milliseconds.
        billedResourceUtilization:
          allOf:
          - $ref: '#/components/schemas/BilledJobResourceUtilization'
          description: The billed resource utilization for the protected job.
      description: Contains statistics about the execution of the protected job.
    ProtectedJobStatus:
      type: string
      enum:
      - SUBMITTED
      - STARTED
      - CANCELLED
      - CANCELLING
      - FAILED
      - SUCCESS
    ProtectedJobSummary:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The ID of the protected job.
        membershipId:
          allOf:
          - $ref: '#/components/schemas/MembershipIdentifier'
          description: The unique ID for the membership that initiated the protected
            job.
        membershipArn:
          allOf:
          - $ref: '#/components/schemas/MembershipArn'
          description: The unique ARN for the membership that initiated the protected
            job.
        createTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time the protected job was created.
        status:
          allOf:
          - $ref: '#/components/schemas/ProtectedJobStatus'
          description: The status of the protected job.
        receiverConfigurations:
          allOf:
          - $ref: '#/components/schemas/ProtectedJobReceiverConfigurations'
          description: The receiver configurations for the protected job.
      required:
      - id
      - membershipId
      - membershipArn
      - createTime
      - status
      - receiverConfigurations
      description: The protected job summary for the objects listed by the request.
    ProtectedJobSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/ProtectedJobSummary'
    ProtectedJobType:
      type: string
      enum:
      - PYSPARK
    ProtectedQuery:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The identifier for a protected query instance.
        membershipId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The identifier for the membership.
        membershipArn:
          allOf:
          - $ref: '#/components/schemas/MembershipArn'
          description: The ARN of the membership.
        createTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the protected query was created.
        sqlParameters:
          allOf:
          - $ref: '#/components/schemas/ProtectedQuerySQLParameters'
          description: The protected query SQL parameters.
        status:
          allOf:
          - $ref: '#/components/schemas/ProtectedQueryStatus'
          description: The status of the query.
        resultConfiguration:
          allOf:
          - $ref: '#/components/schemas/ProtectedQueryResultConfiguration'
          description: Contains any details needed to write the query results.
        statistics:
          allOf:
          - $ref: '#/components/schemas/ProtectedQueryStatistics'
          description: Statistics about protected query execution.
        result:
          allOf:
          - $ref: '#/components/schemas/ProtectedQueryResult'
          description: The result of the protected query.
        error:
          allOf:
          - $ref: '#/components/schemas/ProtectedQueryError'
          description: An error thrown by the protected query.
        differentialPrivacy:
          allOf:
          - $ref: '#/components/schemas/DifferentialPrivacyParameters'
          description: The sensitivity parameters of the differential privacy results
            of the protected query.
        computeConfiguration:
          allOf:
          - $ref: '#/components/schemas/ComputeConfiguration'
          description: The compute configuration for the protected query.
      required:
      - id
      - membershipId
      - membershipArn
      - createTime
      - status
      description: The parameters for an Clean Rooms protected query.
    ProtectedQueryError:
      type: object
      properties:
        message:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A description of why the query failed.
        code:
          allOf:
          - $ref: '#/components/schemas/String'
          description: An error code for the error.
      required:
      - message
      - code
      description: Details of errors thrown by the protected query.
    ProtectedQueryIdentifier:
      type: string
      pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
      minLength: 36
      maxLength: 36
    ProtectedQueryMemberOutputConfiguration:
      type: object
      properties:
        accountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The unique identifier for the account.
      required:
      - accountId
      description: Contains configuration details for the protected query member output.
    ProtectedQueryMemberOutputList:
      type: array
      items:
        $ref: '#/components/schemas/ProtectedQuerySingleMemberOutput'
    ProtectedQueryOutput:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/ProtectedQueryS3Output'
        description: |-
          If present, the output for a protected query with an `S3` output type.
      - allOf:
        - $ref: '#/components/schemas/ProtectedQueryMemberOutputList'
        description: |-
          The list of member Amazon Web Services account(s) that received the results of the query.
      description: |-
        Contains details about the protected query output.
    ProtectedQueryOutputConfiguration:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/ProtectedQueryS3OutputConfiguration'
        description: |-
          Required configuration for a protected query with an `s3` output type.
      - allOf:
        - $ref: '#/components/schemas/ProtectedQueryMemberOutputConfiguration'
        description: |-
          Required configuration for a protected query with a `member` output type.
      description: |-
        Contains configuration details for protected query output.
    ProtectedQueryResult:
      type: object
      properties:
        output:
          allOf:
          - $ref: '#/components/schemas/ProtectedQueryOutput'
          description: The output of the protected query.
      required:
      - output
      description: Details about the query results.
    ProtectedQueryResultConfiguration:
      type: object
      properties:
        outputConfiguration:
          allOf:
          - $ref: '#/components/schemas/ProtectedQueryOutputConfiguration'
          description: Configuration for protected query results.
      required:
      - outputConfiguration
      description: Contains configurations for protected query results.
    ProtectedQueryS3Output:
      type: object
      properties:
        location:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The S3 location of the result.
      required:
      - location
      description: Contains output information for protected queries with an S3 output
        type.
    ProtectedQueryS3OutputConfiguration:
      type: object
      properties:
        resultFormat:
          allOf:
          - $ref: '#/components/schemas/ResultFormat'
          description: Intended file format of the result.
        bucket:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The S3 bucket to unload the protected query results.
        keyPrefix:
          allOf:
          - $ref: '#/components/schemas/KeyPrefix'
          description: The S3 prefix to unload the protected query results.
        singleFileOutput:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether files should be output as a single file (`TRUE`)
            or output as multiple files (`FALSE`). This parameter is only supported
            for analyses with the Spark analytics engine.
      required:
      - resultFormat
      - bucket
      description: Contains the configuration to write the query results to S3.
    ProtectedQuerySQLParameters:
      type: object
      properties:
        queryString:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The query string to be submitted.
        analysisTemplateArn:
          allOf:
          - $ref: '#/components/schemas/AnalysisTemplateArn'
          description: The Amazon Resource Name (ARN) associated with the analysis
            template within a collaboration.
        parameters:
          allOf:
          - $ref: '#/components/schemas/ParameterMap'
          description: The protected query SQL parameters.
      description: The parameters for the SQL type Protected Query.
    ProtectedQuerySingleMemberOutput:
      type: object
      properties:
        accountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The Amazon Web Services account ID of the member in the collaboration
            who can receive results for the query.
      required:
      - accountId
      description: Details about the member who received the query result.
    ProtectedQueryStatistics:
      type: object
      properties:
        totalDurationInMillis:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: The duration of the protected query, from creation until query
            completion, in milliseconds.
        billedResourceUtilization:
          allOf:
          - $ref: '#/components/schemas/BilledResourceUtilization'
          description: The billed resource utilization.
      description: Contains statistics about the execution of the protected query.
    ProtectedQueryStatus:
      type: string
      enum:
      - SUBMITTED
      - STARTED
      - CANCELLED
      - CANCELLING
      - FAILED
      - SUCCESS
      - TIMED_OUT
    ProtectedQuerySummary:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique ID of the protected query.
        membershipId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique ID for the membership that initiated the protected
            query.
        membershipArn:
          allOf:
          - $ref: '#/components/schemas/MembershipArn'
          description: The unique ARN for the membership that initiated the protected
            query.
        createTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time the protected query was created.
        status:
          allOf:
          - $ref: '#/components/schemas/ProtectedQueryStatus'
          description: The status of the protected query.
        receiverConfigurations:
          allOf:
          - $ref: '#/components/schemas/ReceiverConfigurationsList'
          description: The receiver configuration.
      required:
      - id
      - membershipId
      - membershipArn
      - createTime
      - status
      - receiverConfigurations
      description: The protected query summary for the objects listed by the request.
    ProtectedQuerySummaryList:
      type: array
      items:
        $ref: '#/components/schemas/ProtectedQuerySummary'
    ProtectedQueryType:
      type: string
      enum:
      - SQL
    QueryComputePaymentConfig:
      type: object
      properties:
        isResponsible:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: 'Indicates whether the collaboration creator has configured
            the collaboration member to pay for query compute costs (`TRUE`) or has
            not configured the collaboration member to pay for query compute costs
            (`FALSE`).


            Exactly one member can be configured to pay for query compute costs. An
            error is returned if the collaboration creator sets a `TRUE` value for
            more than one member in the collaboration.


            If the collaboration creator hasn''t specified anyone as the member paying
            for query compute costs, then the member who can query is the default
            payer. An error is returned if the collaboration creator sets a `FALSE`
            value for the member who can query.'
      required:
      - isResponsible
      description: An object representing the collaboration member's payment responsibilities
        set by the collaboration creator for query compute costs.
    QueryConstraint:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/QueryConstraintRequireOverlap'
        description: |-
          An array of column names that specifies which columns are required in the JOIN statement.
      description: |-
        Provides any necessary query constraint information.
    QueryConstraintList:
      type: array
      items:
        $ref: '#/components/schemas/QueryConstraint'
    QueryConstraintRequireOverlap:
      type: object
      properties:
        columns:
          allOf:
          - $ref: '#/components/schemas/AnalysisRuleColumnList'
          description: The columns that are required to overlap.
      description: Provides the name of the columns that are required to overlap.
    QueryTables:
      type: array
      items:
        $ref: '#/components/schemas/TableAlias'
    ReceiverAccountIds:
      type: array
      items:
        $ref: '#/components/schemas/AccountId'
    ReceiverConfiguration:
      type: object
      properties:
        analysisType:
          allOf:
          - $ref: '#/components/schemas/AnalysisType'
          description: The type of analysis for the protected query. The results of
            the query can be analyzed directly (`DIRECT_ANALYSIS`) or used as input
            into additional analyses (`ADDITIONAL_ANALYSIS`), such as a query that
            is a seed for a lookalike ML model.
        configurationDetails:
          allOf:
          - $ref: '#/components/schemas/ConfigurationDetails'
          description: The configuration details of the receiver configuration.
      required:
      - analysisType
      description: The receiver configuration for a protected query.
    ReceiverConfigurationsList:
      type: array
      items:
        $ref: '#/components/schemas/ReceiverConfiguration'
    ResourceAlias:
      type: string
      pattern: ^[a-zA-Z0-9_](([a-zA-Z0-9_ ]+-)*([a-zA-Z0-9_ ]+))?$
      maxLength: 128
    ResourceDescription:
      type: string
      pattern: ^[\u0020-\uD7FF\uE000-\uFFFD\uD800\uDBFF-\uDC00\uDFFF\t\r\n]*$
      maxLength: 255
    ResourceNotFoundException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
        resourceId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Id of the missing resource.
        resourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          description: The type of the missing resource.
      required:
      - message
      - resourceId
      - resourceType
      description: Request references a resource which does not exist.
    ResourceType:
      type: string
      enum:
      - CONFIGURED_TABLE
      - COLLABORATION
      - MEMBERSHIP
      - CONFIGURED_TABLE_ASSOCIATION
    ResultFormat:
      type: string
      enum:
      - CSV
      - PARQUET
    RoleArn:
      type: string
      pattern: ^arn:aws:iam::[\w]+:role/[\w+=./@-]+$
      minLength: 32
      maxLength: 512
    S3Location:
      type: object
      properties:
        bucket:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The bucket name.
        key:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The object key.
      required:
      - bucket
      - key
      description: The S3 location.
    ScalarFunctions:
      type: string
      enum:
      - ABS
      - CAST
      - CEILING
      - COALESCE
      - CONVERT
      - CURRENT_DATE
      - DATEADD
      - EXTRACT
      - FLOOR
      - GETDATE
      - LN
      - LOG
      - LOWER
      - ROUND
      - RTRIM
      - SQRT
      - SUBSTRING
      - TO_CHAR
      - TO_DATE
      - TO_NUMBER
      - TO_TIMESTAMP
      - TRIM
      - TRUNC
      - UPPER
    ScalarFunctionsList:
      type: array
      items:
        $ref: '#/components/schemas/ScalarFunctions'
    Schema:
      type: object
      properties:
        columns:
          allOf:
          - $ref: '#/components/schemas/ColumnList'
          description: The columns for the relation that this schema represents.
        partitionKeys:
          allOf:
          - $ref: '#/components/schemas/ColumnList'
          description: The partition keys for the dataset underlying this schema.
        analysisRuleTypes:
          allOf:
          - $ref: '#/components/schemas/AnalysisRuleTypeList'
          description: The analysis rule types that are associated with the schema.
            Currently, only one entry is present.
        analysisMethod:
          allOf:
          - $ref: '#/components/schemas/AnalysisMethod'
          description: 'The analysis method for the schema.


            `DIRECT_QUERY` allows SQL queries to be run directly on this table.


            `DIRECT_JOB` allows PySpark jobs to be run directly on this table.


            `MULTIPLE` allows both SQL queries and PySpark jobs to be run directly
            on this table.'
        selectedAnalysisMethods:
          allOf:
          - $ref: '#/components/schemas/SelectedAnalysisMethods'
          description: The selected analysis methods for the schema.
        creatorAccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The unique account ID for the Amazon Web Services account that
            owns the schema.
        name:
          allOf:
          - $ref: '#/components/schemas/TableAlias'
          description: A name for the schema. The schema relation is referred to by
            this name when queried by a protected query.
        collaborationId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique ID for the collaboration that the schema belongs
            to.
        collaborationArn:
          allOf:
          - $ref: '#/components/schemas/CollaborationArn'
          description: The unique Amazon Resource Name (ARN) for the collaboration
            that the schema belongs to.
        description:
          allOf:
          - $ref: '#/components/schemas/TableDescription'
          description: A description for the schema.
        createTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the schema was created.
        updateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The most recent time at which the schema was updated.
        type:
          allOf:
          - $ref: '#/components/schemas/SchemaType'
          description: The type of schema.
        schemaStatusDetails:
          allOf:
          - $ref: '#/components/schemas/SchemaStatusDetailList'
          description: Details about the status of the schema. Currently, only one
            entry is present.
        schemaTypeProperties:
          allOf:
          - $ref: '#/components/schemas/SchemaTypeProperties'
          description: The schema type properties.
      required:
      - columns
      - partitionKeys
      - analysisRuleTypes
      - creatorAccountId
      - name
      - collaborationId
      - collaborationArn
      - description
      - createTime
      - updateTime
      - type
      - schemaStatusDetails
      description: A schema is a relation within a collaboration.
    SchemaAnalysisRuleList:
      type: array
      items:
        $ref: '#/components/schemas/AnalysisRule'
    SchemaAnalysisRuleRequest:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/TableAlias'
          description: The name of the analysis rule schema that you are requesting.
        type:
          allOf:
          - $ref: '#/components/schemas/AnalysisRuleType'
          description: The type of analysis rule schema that you are requesting.
      required:
      - name
      - type
      description: Defines the information that's necessary to retrieve an analysis
        rule schema. Schema analysis rules are uniquely identiﬁed by a combination
        of the schema name and the analysis rule type for a given collaboration.
    SchemaAnalysisRuleRequestList:
      type: array
      items:
        $ref: '#/components/schemas/SchemaAnalysisRuleRequest'
    SchemaConfiguration:
      type: string
      enum:
      - DIFFERENTIAL_PRIVACY
    SchemaConfigurationList:
      type: array
      items:
        $ref: '#/components/schemas/SchemaConfiguration'
    SchemaList:
      type: array
      items:
        $ref: '#/components/schemas/Schema'
    SchemaStatus:
      type: string
      enum:
      - READY
      - NOT_READY
    SchemaStatusDetail:
      type: object
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/SchemaStatus'
          description: The status of the schema, indicating if it is ready to query.
        reasons:
          allOf:
          - $ref: '#/components/schemas/SchemaStatusReasonList'
          description: The reasons why the schema status is set to its current state.
        analysisRuleType:
          allOf:
          - $ref: '#/components/schemas/AnalysisRuleType'
          description: The analysis rule type for which the schema status has been
            evaluated.
        configurations:
          allOf:
          - $ref: '#/components/schemas/SchemaConfigurationList'
          description: The configuration details of the schema analysis rule for the
            given type.
        analysisType:
          allOf:
          - $ref: '#/components/schemas/AnalysisType'
          description: 'The type of analysis that can be performed on the schema.


            A schema can have an `analysisType` of `DIRECT_ANALYSIS`, `ADDITIONAL_ANALYSIS_FOR_AUDIENCE_GENERATION`,
            or both.'
      required:
      - status
      - analysisType
      description: 'Information about the schema status.


        A status of `READY` means that based on the schema analysis rule, queries
        of the given analysis rule type are properly configured to run queries on
        this schema.'
    SchemaStatusDetailList:
      type: array
      items:
        $ref: '#/components/schemas/SchemaStatusDetail'
    SchemaStatusReason:
      type: object
      properties:
        code:
          allOf:
          - $ref: '#/components/schemas/SchemaStatusReasonCode'
          description: The schema status reason code.
        message:
          allOf:
          - $ref: '#/components/schemas/String'
          description: An explanation of the schema status reason code.
      required:
      - code
      - message
      description: A reason why the schema status is set to its current value.
    SchemaStatusReasonCode:
      type: string
      enum:
      - ANALYSIS_RULE_MISSING
      - ANALYSIS_TEMPLATES_NOT_CONFIGURED
      - ANALYSIS_PROVIDERS_NOT_CONFIGURED
      - DIFFERENTIAL_PRIVACY_POLICY_NOT_CONFIGURED
      - ID_MAPPING_TABLE_NOT_POPULATED
      - COLLABORATION_ANALYSIS_RULE_NOT_CONFIGURED
      - ADDITIONAL_ANALYSES_NOT_CONFIGURED
      - RESULT_RECEIVERS_NOT_CONFIGURED
      - ADDITIONAL_ANALYSES_NOT_ALLOWED
      - RESULT_RECEIVERS_NOT_ALLOWED
      - ANALYSIS_RULE_TYPES_NOT_COMPATIBLE
    SchemaStatusReasonList:
      type: array
      items:
        $ref: '#/components/schemas/SchemaStatusReason'
    SchemaSummary:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/TableAlias'
          description: The name for the schema object.
        type:
          allOf:
          - $ref: '#/components/schemas/SchemaType'
          description: The type of schema object.
        creatorAccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The unique account ID for the Amazon Web Services account that
            owns the schema.
        createTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time the schema object was created.
        updateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time the schema object was last updated.
        collaborationId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique ID for the collaboration that the schema belongs
            to.
        collaborationArn:
          allOf:
          - $ref: '#/components/schemas/CollaborationArn'
          description: The unique ARN for the collaboration that the schema belongs
            to.
        analysisRuleTypes:
          allOf:
          - $ref: '#/components/schemas/AnalysisRuleTypeList'
          description: The types of analysis rules that are associated with this schema
            object.
        analysisMethod:
          allOf:
          - $ref: '#/components/schemas/AnalysisMethod'
          description: 'The analysis method for the associated schema.


            `DIRECT_QUERY` allows SQL queries to be run directly on this table.


            `DIRECT_JOB` allows PySpark jobs to be run directly on this table.


            `MULTIPLE` allows both SQL queries and PySpark jobs to be run directly
            on this table.'
        selectedAnalysisMethods:
          allOf:
          - $ref: '#/components/schemas/SelectedAnalysisMethods'
          description: The selected analysis methods for the schema.
      required:
      - name
      - type
      - creatorAccountId
      - createTime
      - updateTime
      - collaborationId
      - collaborationArn
      - analysisRuleTypes
      description: The schema summary for the objects listed by the request.
    SchemaSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/SchemaSummary'
    SchemaType:
      type: string
      enum:
      - TABLE
      - ID_MAPPING_TABLE
    SchemaTypeProperties:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/IdMappingTableSchemaTypeProperties'
        description: |-
          The ID mapping table for the schema type properties.
      description: |-
        Information about the schema type properties.
    SecretsManagerArn:
      type: string
      pattern: ^arn:aws:secretsmanager:[a-z]{2}-[a-z]+-[0-9]:\d{12}:secret:.*$
      maxLength: 256
    SelectedAnalysisMethod:
      type: string
      enum:
      - DIRECT_QUERY
      - DIRECT_JOB
    SelectedAnalysisMethods:
      type: array
      items:
        $ref: '#/components/schemas/SelectedAnalysisMethod'
    ServiceQuotaExceededException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
        quotaName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the quota.
        quotaValue:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: The value of the quota.
      required:
      - message
      - quotaName
      - quotaValue
      description: Request denied because service quota has been exceeded.
    SnowflakeAccountIdentifier:
      type: string
      pattern: ^[\p{L}\p{M}\p{N}\p{Pc}\p{Pd}\p{Zs}.]+$
      minLength: 3
      maxLength: 256
    SnowflakeDatabaseName:
      type: string
      pattern: ^[\p{L}\p{M}\p{N}\p{Pc}\p{Pd}\p{Zs}]+$
      minLength: 1
      maxLength: 256
    SnowflakeSchemaName:
      type: string
      pattern: ^[\p{L}\p{M}\p{N}\p{Pc}\p{Pd}\p{Zs}]+$
      minLength: 1
      maxLength: 256
    SnowflakeTableName:
      type: string
      pattern: ^[\p{L}\p{M}\p{N}\p{Pc}\p{Pd}\p{Zs}]+$
      minLength: 1
      maxLength: 256
    SnowflakeTableReference:
      type: object
      properties:
        secretArn:
          allOf:
          - $ref: '#/components/schemas/SecretsManagerArn'
          description: The secret ARN of the Snowflake table reference.
        accountIdentifier:
          allOf:
          - $ref: '#/components/schemas/SnowflakeAccountIdentifier'
          description: The account identifier for the Snowflake table reference.
        databaseName:
          allOf:
          - $ref: '#/components/schemas/SnowflakeDatabaseName'
          description: The name of the database the Snowflake table belongs to.
        tableName:
          allOf:
          - $ref: '#/components/schemas/SnowflakeTableName'
          description: The name of the Snowflake table.
        schemaName:
          allOf:
          - $ref: '#/components/schemas/SnowflakeSchemaName'
          description: The schema name of the Snowflake table reference.
        tableSchema:
          allOf:
          - $ref: '#/components/schemas/SnowflakeTableSchema'
          description: The schema of the Snowflake table.
      required:
      - secretArn
      - accountIdentifier
      - databaseName
      - tableName
      - schemaName
      - tableSchema
      description: A reference to a table within Snowflake.
    SnowflakeTableSchema:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/SnowflakeTableSchemaList'
        description: |-
          The schema of a Snowflake table.
      description: |-
        The schema of a Snowflake table.
    SnowflakeTableSchemaList:
      type: array
      items:
        $ref: '#/components/schemas/SnowflakeTableSchemaV1'
    SnowflakeTableSchemaV1:
      type: object
      properties:
        columnName:
          allOf:
          - $ref: '#/components/schemas/ColumnName'
          description: The column name.
        columnType:
          allOf:
          - $ref: '#/components/schemas/ColumnTypeString'
          description: 'The column''s data type. Supported data types: `ARRAY`, `BIGINT`,
            `BOOLEAN`, `CHAR`, `DATE`, `DECIMAL`, `DOUBLE`, `DOUBLE PRECISION`, `FLOAT`,
            `FLOAT4`, `INT`, `INTEGER`, `MAP`, `NUMERIC`, `NUMBER`, `REAL`, `SMALLINT`,
            `STRING`, `TIMESTAMP`, `TIMESTAMP_LTZ`, `TIMESTAMP_NTZ`, `DATETIME`, `TINYINT`,
            `VARCHAR`, `TEXT`, `CHARACTER`.'
      required:
      - columnName
      - columnType
      description: The Snowflake table schema.
    StartProtectedJobInput:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/ProtectedJobType'
          description: The type of protected job to start.
        membershipIdentifier:
          allOf:
          - $ref: '#/components/schemas/MembershipIdentifier'
          description: A unique identifier for the membership to run this job against.
            Currently accepts a membership ID.
        jobParameters:
          allOf:
          - $ref: '#/components/schemas/ProtectedJobParameters'
          description: The job parameters.
        resultConfiguration:
          allOf:
          - $ref: '#/components/schemas/ProtectedJobResultConfigurationInput'
          description: The details needed to write the job results.
      required:
      - type
      - membershipIdentifier
      - jobParameters
    StartProtectedJobOutput:
      type: object
      properties:
        protectedJob:
          allOf:
          - $ref: '#/components/schemas/ProtectedJob'
          description: The protected job.
      required:
      - protectedJob
    StartProtectedQueryInput:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/ProtectedQueryType'
          description: The type of the protected query to be started.
        membershipIdentifier:
          allOf:
          - $ref: '#/components/schemas/MembershipIdentifier'
          description: A unique identifier for the membership to run this query against.
            Currently accepts a membership ID.
        sqlParameters:
          allOf:
          - $ref: '#/components/schemas/ProtectedQuerySQLParameters'
          description: The protected SQL query parameters.
        resultConfiguration:
          allOf:
          - $ref: '#/components/schemas/ProtectedQueryResultConfiguration'
          description: The details needed to write the query results.
        computeConfiguration:
          allOf:
          - $ref: '#/components/schemas/ComputeConfiguration'
          description: The compute configuration for the protected query.
      required:
      - type
      - membershipIdentifier
      - sqlParameters
    StartProtectedQueryOutput:
      type: object
      properties:
        protectedQuery:
          allOf:
          - $ref: '#/components/schemas/ProtectedQuery'
          description: The protected query.
      required:
      - protectedQuery
    TableAlias:
      type: string
      pattern: ^[a-zA-Z0-9_](([a-zA-Z0-9_ ]+-)*([a-zA-Z0-9_ ]+))?$
      maxLength: 128
    TableAliasList:
      type: array
      items:
        $ref: '#/components/schemas/TableAlias'
    TableDescription:
      type: string
      pattern: ^[\u0020-\uD7FF\uE000-\uFFFD\uD800\uDBFF-\uDC00\uDFFF\t\r\n]*$
      maxLength: 255
    TableReference:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/GlueTableReference'
        description: |-
          If present, a reference to the Glue table referred to by this table reference.
      - allOf:
        - $ref: '#/components/schemas/SnowflakeTableReference'
        description: |-
          If present, a reference to the Snowflake table referred to by this table reference.
      - allOf:
        - $ref: '#/components/schemas/AthenaTableReference'
        description: |-
          If present, a reference to the Athena table referred to by this table reference.
      description: |-
        A pointer to the dataset that underlies this table.
    TagKey:
      type: string
      minLength: 1
      maxLength: 128
    TagKeys:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
    TagMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
      description: Map of tags assigned to a resource
    TagResourceInput:
      type: object
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/CleanroomsArn'
          description: The Amazon Resource Name (ARN) associated with the resource
            you want to tag.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: A map of objects specifying each key name and value.
      required:
      - resourceArn
      - tags
    TagResourceOutput:
      type: object
      properties: {}
    TagValue:
      type: string
      minLength: 0
      maxLength: 256
    TargetProtectedJobStatus:
      type: string
      enum:
      - CANCELLED
    TargetProtectedQueryStatus:
      type: string
      enum:
      - CANCELLED
    ThrottlingException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      description: Request was denied due to request throttling.
    UUID:
      type: string
      pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
      minLength: 36
      maxLength: 36
    UntagResourceInput:
      type: object
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/CleanroomsArn'
          description: The Amazon Resource Name (ARN) associated with the resource
            you want to remove the tag from.
        tagKeys:
          allOf:
          - $ref: '#/components/schemas/TagKeys'
          description: A list of key names of tags to be removed.
      required:
      - resourceArn
      - tagKeys
    UntagResourceOutput:
      type: object
      properties: {}
    UpdateAnalysisTemplateInput:
      type: object
      properties:
        membershipIdentifier:
          allOf:
          - $ref: '#/components/schemas/MembershipIdentifier'
          description: The identifier for a membership resource.
        analysisTemplateIdentifier:
          allOf:
          - $ref: '#/components/schemas/AnalysisTemplateIdentifier'
          description: The identifier for the analysis template resource.
        description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          description: A new description for the analysis template.
      required:
      - membershipIdentifier
      - analysisTemplateIdentifier
    UpdateAnalysisTemplateOutput:
      type: object
      properties:
        analysisTemplate:
          allOf:
          - $ref: '#/components/schemas/AnalysisTemplate'
          description: The analysis template.
      required:
      - analysisTemplate
    UpdateCollaborationInput:
      type: object
      properties:
        collaborationIdentifier:
          allOf:
          - $ref: '#/components/schemas/CollaborationIdentifier'
          description: The identifier for the collaboration.
        name:
          allOf:
          - $ref: '#/components/schemas/CollaborationName'
          description: A human-readable identifier provided by the collaboration owner.
            Display names are not unique.
        description:
          allOf:
          - $ref: '#/components/schemas/CollaborationDescription'
          description: A description of the collaboration.
        analyticsEngine:
          allOf:
          - $ref: '#/components/schemas/AnalyticsEngine'
          description: The analytics engine.
      required:
      - collaborationIdentifier
    UpdateCollaborationOutput:
      type: object
      properties:
        collaboration:
          allOf:
          - $ref: '#/components/schemas/Collaboration'
          description: The entire collaboration that has been updated.
      required:
      - collaboration
    UpdateConfiguredAudienceModelAssociationInput:
      type: object
      properties:
        configuredAudienceModelAssociationIdentifier:
          allOf:
          - $ref: '#/components/schemas/ConfiguredAudienceModelAssociationIdentifier'
          description: A unique identifier for the configured audience model association
            that you want to update.
        membershipIdentifier:
          allOf:
          - $ref: '#/components/schemas/MembershipIdentifier'
          description: A unique identifier of the membership that contains the configured
            audience model association that you want to update.
        description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          description: A new description for the configured audience model association.
        name:
          allOf:
          - $ref: '#/components/schemas/ConfiguredAudienceModelAssociationName'
          description: A new name for the configured audience model association.
      required:
      - configuredAudienceModelAssociationIdentifier
      - membershipIdentifier
    UpdateConfiguredAudienceModelAssociationOutput:
      type: object
      properties:
        configuredAudienceModelAssociation:
          allOf:
          - $ref: '#/components/schemas/ConfiguredAudienceModelAssociation'
          description: Details about the configured audience model association that
            you updated.
      required:
      - configuredAudienceModelAssociation
    UpdateConfiguredTableAnalysisRuleInput:
      type: object
      properties:
        configuredTableIdentifier:
          allOf:
          - $ref: '#/components/schemas/ConfiguredTableIdentifier'
          description: The unique identifier for the configured table that the analysis
            rule applies to. Currently accepts the configured table ID.
        analysisRuleType:
          allOf:
          - $ref: '#/components/schemas/ConfiguredTableAnalysisRuleType'
          description: The analysis rule type to be updated. Configured table analysis
            rules are uniquely identified by their configured table identifier and
            analysis rule type.
        analysisRulePolicy:
          allOf:
          - $ref: '#/components/schemas/ConfiguredTableAnalysisRulePolicy'
          description: The new analysis rule policy for the configured table analysis
            rule.
      required:
      - configuredTableIdentifier
      - analysisRuleType
      - analysisRulePolicy
    UpdateConfiguredTableAnalysisRuleOutput:
      type: object
      properties:
        analysisRule:
          allOf:
          - $ref: '#/components/schemas/ConfiguredTableAnalysisRule'
          description: The entire updated analysis rule.
      required:
      - analysisRule
    UpdateConfiguredTableAssociationAnalysisRuleInput:
      type: object
      properties:
        membershipIdentifier:
          allOf:
          - $ref: '#/components/schemas/MembershipIdentifier'
          description: A unique identifier for the membership that the configured
            table association belongs to. Currently accepts the membership ID.
        configuredTableAssociationIdentifier:
          allOf:
          - $ref: '#/components/schemas/ConfiguredTableAssociationIdentifier'
          description: The identifier for the configured table association to update.
        analysisRuleType:
          allOf:
          - $ref: '#/components/schemas/ConfiguredTableAssociationAnalysisRuleType'
          description: The analysis rule type that you want to update.
        analysisRulePolicy:
          allOf:
          - $ref: '#/components/schemas/ConfiguredTableAssociationAnalysisRulePolicy'
          description: The updated analysis rule policy for the conﬁgured table association.
      required:
      - membershipIdentifier
      - configuredTableAssociationIdentifier
      - analysisRuleType
      - analysisRulePolicy
    UpdateConfiguredTableAssociationAnalysisRuleOutput:
      type: object
      properties:
        analysisRule:
          allOf:
          - $ref: '#/components/schemas/ConfiguredTableAssociationAnalysisRule'
          description: The updated analysis rule for the conﬁgured table association.
            In the console, the `ConfiguredTableAssociationAnalysisRule` is referred
            to as the _collaboration analysis rule_.
      required:
      - analysisRule
    UpdateConfiguredTableAssociationInput:
      type: object
      properties:
        configuredTableAssociationIdentifier:
          allOf:
          - $ref: '#/components/schemas/ConfiguredTableAssociationIdentifier'
          description: The unique identifier for the configured table association
            to update. Currently accepts the configured table association ID.
        membershipIdentifier:
          allOf:
          - $ref: '#/components/schemas/MembershipIdentifier'
          description: The unique ID for the membership that the configured table
            association belongs to.
        description:
          allOf:
          - $ref: '#/components/schemas/TableDescription'
          description: A new description for the configured table association.
        roleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          description: The service will assume this role to access catalog metadata
            and query the table.
      required:
      - configuredTableAssociationIdentifier
      - membershipIdentifier
    UpdateConfiguredTableAssociationOutput:
      type: object
      properties:
        configuredTableAssociation:
          allOf:
          - $ref: '#/components/schemas/ConfiguredTableAssociation'
          description: The entire updated configured table association.
      required:
      - configuredTableAssociation
    UpdateConfiguredTableInput:
      type: object
      properties:
        configuredTableIdentifier:
          allOf:
          - $ref: '#/components/schemas/ConfiguredTableIdentifier'
          description: The identifier for the configured table to update. Currently
            accepts the configured table ID.
        name:
          allOf:
          - $ref: '#/components/schemas/DisplayName'
          description: A new name for the configured table.
        description:
          allOf:
          - $ref: '#/components/schemas/TableDescription'
          description: A new description for the configured table.
        analysisMethod:
          allOf:
          - $ref: '#/components/schemas/AnalysisMethod'
          description: 'The analysis method for the configured table.


            `DIRECT_QUERY` allows SQL queries to be run directly on this table.


            `DIRECT_JOB` allows PySpark jobs to be run directly on this table.


            `MULTIPLE` allows both SQL queries and PySpark jobs to be run directly
            on this table.'
        selectedAnalysisMethods:
          allOf:
          - $ref: '#/components/schemas/SelectedAnalysisMethods'
          description: The selected analysis methods for the table configuration update.
      required:
      - configuredTableIdentifier
    UpdateConfiguredTableOutput:
      type: object
      properties:
        configuredTable:
          allOf:
          - $ref: '#/components/schemas/ConfiguredTable'
          description: The updated configured table.
      required:
      - configuredTable
    UpdateIdMappingTableInput:
      type: object
      properties:
        idMappingTableIdentifier:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique identifier of the ID mapping table that you want
            to update.
        membershipIdentifier:
          allOf:
          - $ref: '#/components/schemas/MembershipIdentifier'
          description: The unique identifier of the membership that contains the ID
            mapping table that you want to update.
        description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          description: A new description for the ID mapping table.
        kmsKeyArn:
          allOf:
          - $ref: '#/components/schemas/KMSKeyArn'
          description: The Amazon Resource Name (ARN) of the Amazon Web Services KMS
            key.
      required:
      - idMappingTableIdentifier
      - membershipIdentifier
    UpdateIdMappingTableOutput:
      type: object
      properties:
        idMappingTable:
          allOf:
          - $ref: '#/components/schemas/IdMappingTable'
          description: The updated ID mapping table.
      required:
      - idMappingTable
    UpdateIdNamespaceAssociationInput:
      type: object
      properties:
        idNamespaceAssociationIdentifier:
          allOf:
          - $ref: '#/components/schemas/IdNamespaceAssociationIdentifier'
          description: The unique identifier of the ID namespace association that
            you want to update.
        membershipIdentifier:
          allOf:
          - $ref: '#/components/schemas/MembershipIdentifier'
          description: The unique identifier of the membership that contains the ID
            namespace association that you want to update.
        name:
          allOf:
          - $ref: '#/components/schemas/GenericResourceName'
          description: A new name for the ID namespace association.
        description:
          allOf:
          - $ref: '#/components/schemas/ResourceDescription'
          description: A new description for the ID namespace association.
        idMappingConfig:
          allOf:
          - $ref: '#/components/schemas/IdMappingConfig'
          description: The configuration settings for the ID mapping table.
      required:
      - idNamespaceAssociationIdentifier
      - membershipIdentifier
    UpdateIdNamespaceAssociationOutput:
      type: object
      properties:
        idNamespaceAssociation:
          allOf:
          - $ref: '#/components/schemas/IdNamespaceAssociation'
          description: The updated ID namespace association.
      required:
      - idNamespaceAssociation
    UpdateMembershipInput:
      type: object
      properties:
        membershipIdentifier:
          allOf:
          - $ref: '#/components/schemas/MembershipIdentifier'
          description: The unique identifier of the membership.
        queryLogStatus:
          allOf:
          - $ref: '#/components/schemas/MembershipQueryLogStatus'
          description: 'An indicator as to whether query logging has been enabled
            or disabled for the membership.


            When `ENABLED`, Clean Rooms logs details about queries run within this
            collaboration and those logs can be viewed in Amazon CloudWatch Logs.
            The default value is `DISABLED`.'
        jobLogStatus:
          allOf:
          - $ref: '#/components/schemas/MembershipJobLogStatus'
          description: 'An indicator as to whether job logging has been enabled or
            disabled for the collaboration.


            When `ENABLED`, Clean Rooms logs details about jobs run within this collaboration
            and those logs can be viewed in Amazon CloudWatch Logs. The default value
            is `DISABLED`.'
        defaultResultConfiguration:
          allOf:
          - $ref: '#/components/schemas/MembershipProtectedQueryResultConfiguration'
          description: The default protected query result configuration as specified
            by the member who can receive results.
        defaultJobResultConfiguration:
          allOf:
          - $ref: '#/components/schemas/MembershipProtectedJobResultConfiguration'
          description: The default job result configuration.
      required:
      - membershipIdentifier
    UpdateMembershipOutput:
      type: object
      properties:
        membership:
          $ref: '#/components/schemas/Membership'
      required:
      - membership
    UpdatePrivacyBudgetTemplateInput:
      type: object
      properties:
        membershipIdentifier:
          allOf:
          - $ref: '#/components/schemas/MembershipIdentifier'
          description: A unique identifier for one of your memberships for a collaboration.
            The privacy budget template is updated in the collaboration that this
            membership belongs to. Accepts a membership ID.
        privacyBudgetTemplateIdentifier:
          allOf:
          - $ref: '#/components/schemas/PrivacyBudgetTemplateIdentifier'
          description: A unique identifier for your privacy budget template that you
            want to update.
        privacyBudgetType:
          allOf:
          - $ref: '#/components/schemas/PrivacyBudgetType'
          description: Specifies the type of the privacy budget template.
        parameters:
          allOf:
          - $ref: '#/components/schemas/PrivacyBudgetTemplateUpdateParameters'
          description: Specifies the epsilon and noise parameters for the privacy
            budget template.
      required:
      - membershipIdentifier
      - privacyBudgetTemplateIdentifier
      - privacyBudgetType
    UpdatePrivacyBudgetTemplateOutput:
      type: object
      properties:
        privacyBudgetTemplate:
          allOf:
          - $ref: '#/components/schemas/PrivacyBudgetTemplate'
          description: Summary of the privacy budget template.
      required:
      - privacyBudgetTemplate
    UpdateProtectedJobInput:
      type: object
      properties:
        membershipIdentifier:
          allOf:
          - $ref: '#/components/schemas/MembershipIdentifier'
          description: The identifier for a member of a protected job instance.
        protectedJobIdentifier:
          allOf:
          - $ref: '#/components/schemas/ProtectedJobIdentifier'
          description: The identifier of the protected job to update.
        targetStatus:
          allOf:
          - $ref: '#/components/schemas/TargetProtectedJobStatus'
          description: The target status of a protected job. Used to update the execution
            status of a currently running job.
      required:
      - membershipIdentifier
      - protectedJobIdentifier
      - targetStatus
    UpdateProtectedJobOutput:
      type: object
      properties:
        protectedJob:
          allOf:
          - $ref: '#/components/schemas/ProtectedJob'
          description: The protected job output.
      required:
      - protectedJob
    UpdateProtectedQueryInput:
      type: object
      properties:
        membershipIdentifier:
          allOf:
          - $ref: '#/components/schemas/MembershipIdentifier'
          description: The identifier for a member of a protected query instance.
        protectedQueryIdentifier:
          allOf:
          - $ref: '#/components/schemas/ProtectedQueryIdentifier'
          description: The identifier for a protected query instance.
        targetStatus:
          allOf:
          - $ref: '#/components/schemas/TargetProtectedQueryStatus'
          description: The target status of a query. Used to update the execution
            status of a currently running query.
      required:
      - membershipIdentifier
      - protectedQueryIdentifier
      - targetStatus
    UpdateProtectedQueryOutput:
      type: object
      properties:
        protectedQuery:
          allOf:
          - $ref: '#/components/schemas/ProtectedQuery'
          description: The protected query output.
      required:
      - protectedQuery
    UsersNoisePerQuery:
      type: integer
      minimum: 10
      maximum: 100
    ValidationException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
        reason:
          allOf:
          - $ref: '#/components/schemas/ValidationExceptionReason'
          description: A reason code for the exception.
        fieldList:
          allOf:
          - $ref: '#/components/schemas/ValidationExceptionFieldList'
          description: Validation errors for specific input parameters.
      description: The input fails to satisfy the specified constraints.
    ValidationExceptionField:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the input parameter.
        message:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A message for the input validation error.
      required:
      - name
      - message
      description: Describes validation errors for specific input parameters.
    ValidationExceptionFieldList:
      type: array
      items:
        $ref: '#/components/schemas/ValidationExceptionField'
    ValidationExceptionReason:
      type: string
      enum:
      - FIELD_VALIDATION_FAILED
      - INVALID_CONFIGURATION
      - INVALID_QUERY
      - IAM_SYNCHRONIZATION_DELAY
    WorkerComputeConfiguration:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/WorkerComputeType'
          description: The worker compute configuration type.
        number:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of workers.
      description: The configuration of the compute resources for workers running
        an analysis with the Clean Rooms SQL analytics engine.
    WorkerComputeType:
      type: string
      enum:
      - CR.1X
      - CR.4X
