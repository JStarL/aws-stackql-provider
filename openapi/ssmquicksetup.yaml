openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: ssm_quicksetup
  x-aws-serviceName: ssmquicksetup
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-07'
  version: '2018-05-10'
  title: AWS Systems Manager QuickSetup
  description: |-
    Quick Setup helps you quickly configure frequently used services and features with recommended best practices. Quick Setup simplifies setting up services, including Systems Manager, by automating common or recommended tasks.
servers:
- description: The AWS Systems Manager QuickSetup regional endpoint
  url: https://ssm-quicksetup.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths:
  /configurationManager:
    post:
      operationId: CreateConfigurationManager
      description: |-
        Creates a Quick Setup configuration manager resource. This object is a collection of desired state configurations for multiple configuration definitions and summaries describing the deployments of those definitions.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  $ref: '#/components/schemas/String'
                Description:
                  $ref: '#/components/schemas/String'
                ConfigurationDefinitions:
                  $ref: '#/components/schemas/ConfigurationDefinitionsInputList'
                Tags:
                  $ref: '#/components/schemas/TagsMap'
      responses:
        '200': {}
        '403':
          description: |-
            The requester has insufficient permissions to perform the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Another request is being processed. Wait a few minutes and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An error occurred on the server side.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request or operation exceeds the maximum allowed request rate per Amazon Web Services account and Amazon Web Services Region.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request is invalid. Verify the values provided for the request parameters are accurate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /configurationManager/{ManagerArn}:
    delete:
      operationId: DeleteConfigurationManager
      description: |-
        Deletes a configuration manager.
      parameters:
      - name: ManagerArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '403':
          description: |-
            The requester has insufficient permissions to perform the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Another request is being processed. Wait a few minutes and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An error occurred on the server side.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource couldn't be found. Check the ID or name and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request or operation exceeds the maximum allowed request rate per Amazon Web Services account and Amazon Web Services Region.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request is invalid. Verify the values provided for the request parameters are accurate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetConfigurationManager
      description: |-
        Returns a configuration manager.
      parameters:
      - name: ManagerArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '403':
          description: |-
            The requester has insufficient permissions to perform the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Another request is being processed. Wait a few minutes and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An error occurred on the server side.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource couldn't be found. Check the ID or name and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request or operation exceeds the maximum allowed request rate per Amazon Web Services account and Amazon Web Services Region.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request is invalid. Verify the values provided for the request parameters are accurate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    put:
      operationId: UpdateConfigurationManager
      description: |-
        Updates a Quick Setup configuration manager.
      parameters:
      - name: ManagerArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  $ref: '#/components/schemas/String'
                Description:
                  $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '403':
          description: |-
            The requester has insufficient permissions to perform the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Another request is being processed. Wait a few minutes and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An error occurred on the server side.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource couldn't be found. Check the ID or name and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request or operation exceeds the maximum allowed request rate per Amazon Web Services account and Amazon Web Services Region.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request is invalid. Verify the values provided for the request parameters are accurate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /getConfiguration/{ConfigurationId}:
    get:
      operationId: GetConfiguration
      description: |-
        Returns details about the specified configuration.
      parameters:
      - name: ConfigurationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '403':
          description: |-
            The requester has insufficient permissions to perform the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Another request is being processed. Wait a few minutes and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An error occurred on the server side.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource couldn't be found. Check the ID or name and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request or operation exceeds the maximum allowed request rate per Amazon Web Services account and Amazon Web Services Region.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request is invalid. Verify the values provided for the request parameters are accurate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /serviceSettings:
    get:
      operationId: GetServiceSettings
      description: |-
        Returns settings configured for Quick Setup in the requesting Amazon Web Services account and Amazon Web Services Region.
      responses:
        '200': {}
        '403':
          description: |-
            The requester has insufficient permissions to perform the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Another request is being processed. Wait a few minutes and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An error occurred on the server side.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request or operation exceeds the maximum allowed request rate per Amazon Web Services account and Amazon Web Services Region.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    put:
      operationId: UpdateServiceSettings
      description: |-
        Updates settings configured for Quick Setup.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ExplorerEnablingRoleArn:
                  $ref: '#/components/schemas/IAMRoleArn'
      responses:
        '200': {}
        '403':
          description: |-
            The requester has insufficient permissions to perform the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Another request is being processed. Wait a few minutes and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An error occurred on the server side.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request or operation exceeds the maximum allowed request rate per Amazon Web Services account and Amazon Web Services Region.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request is invalid. Verify the values provided for the request parameters are accurate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /listConfigurationManagers:
    post:
      operationId: ListConfigurationManagers
      description: |-
        Returns Quick Setup configuration managers.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                StartingToken:
                  $ref: '#/components/schemas/String'
                MaxItems:
                  $ref: '#/components/schemas/Integer'
                Filters:
                  $ref: '#/components/schemas/FiltersList'
      responses:
        '200': {}
        '403':
          description: |-
            The requester has insufficient permissions to perform the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Another request is being processed. Wait a few minutes and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An error occurred on the server side.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request or operation exceeds the maximum allowed request rate per Amazon Web Services account and Amazon Web Services Region.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request is invalid. Verify the values provided for the request parameters are accurate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /listConfigurations:
    post:
      operationId: ListConfigurations
      description: |-
        Returns configurations deployed by Quick Setup in the requesting Amazon Web Services account and Amazon Web Services Region.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                StartingToken:
                  $ref: '#/components/schemas/String'
                MaxItems:
                  $ref: '#/components/schemas/Integer'
                Filters:
                  $ref: '#/components/schemas/FiltersList'
                ManagerArn:
                  $ref: '#/components/schemas/String'
                ConfigurationDefinitionId:
                  $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '403':
          description: |-
            The requester has insufficient permissions to perform the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An error occurred on the server side.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource couldn't be found. Check the ID or name and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request or operation exceeds the maximum allowed request rate per Amazon Web Services account and Amazon Web Services Region.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request is invalid. Verify the values provided for the request parameters are accurate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /listQuickSetupTypes:
    get:
      operationId: ListQuickSetupTypes
      description: |-
        Returns the available Quick Setup types.
      responses:
        '200': {}
        '403':
          description: |-
            The requester has insufficient permissions to perform the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Another request is being processed. Wait a few minutes and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An error occurred on the server side.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request or operation exceeds the maximum allowed request rate per Amazon Web Services account and Amazon Web Services Region.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /tags/{ResourceArn}:
    get:
      operationId: ListTagsForResource
      description: |-
        Returns tags assigned to the resource.
      parameters:
      - name: ResourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '403':
          description: |-
            The requester has insufficient permissions to perform the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Another request is being processed. Wait a few minutes and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An error occurred on the server side.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource couldn't be found. Check the ID or name and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request or operation exceeds the maximum allowed request rate per Amazon Web Services account and Amazon Web Services Region.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request is invalid. Verify the values provided for the request parameters are accurate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    put:
      operationId: TagResource
      description: |-
        Assigns key-value pairs of metadata to Amazon Web Services resources.
      parameters:
      - name: ResourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Tags:
                  $ref: '#/components/schemas/TagsMap'
      responses:
        '200': {}
        '403':
          description: |-
            The requester has insufficient permissions to perform the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Another request is being processed. Wait a few minutes and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An error occurred on the server side.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource couldn't be found. Check the ID or name and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request or operation exceeds the maximum allowed request rate per Amazon Web Services account and Amazon Web Services Region.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request is invalid. Verify the values provided for the request parameters are accurate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    delete:
      operationId: UntagResource
      description: |-
        Removes tags from the specified resource.
      parameters:
      - name: ResourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: tagKeys
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/TagKeys'
      responses:
        '200': {}
        '403':
          description: |-
            The requester has insufficient permissions to perform the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Another request is being processed. Wait a few minutes and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An error occurred on the server side.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource couldn't be found. Check the ID or name and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request or operation exceeds the maximum allowed request rate per Amazon Web Services account and Amazon Web Services Region.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request is invalid. Verify the values provided for the request parameters are accurate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /configurationDefinition/{ManagerArn}/{Id}:
    put:
      operationId: UpdateConfigurationDefinition
      description: |-
        Updates a Quick Setup configuration definition.
      parameters:
      - name: ManagerArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: Id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                TypeVersion:
                  $ref: '#/components/schemas/String'
                Parameters:
                  $ref: '#/components/schemas/ConfigurationParametersMap'
                LocalDeploymentExecutionRoleName:
                  $ref: '#/components/schemas/String'
                LocalDeploymentAdministrationRoleArn:
                  $ref: '#/components/schemas/IAMRoleArn'
      responses:
        '200': {}
        '403':
          description: |-
            The requester has insufficient permissions to perform the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Another request is being processed. Wait a few minutes and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An error occurred on the server side.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource couldn't be found. Check the ID or name and try again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request or operation exceeds the maximum allowed request rate per Amazon Web Services account and Amazon Web Services Region.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request is invalid. Verify the values provided for the request parameters are accurate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
components:
  schemas:
    AccessDeniedException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
      description: The requester has insufficient permissions to perform the operation.
    ConfigurationDefinition:
      type: object
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The type of the Quick Setup configuration.
        Parameters:
          allOf:
          - $ref: '#/components/schemas/ConfigurationParametersMap'
          description: A list of key-value pairs containing the required parameters
            for the configuration type.
        TypeVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The version of the Quick Setup type used.
        LocalDeploymentExecutionRoleName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the IAM role used to deploy local configurations.
        LocalDeploymentAdministrationRoleArn:
          allOf:
          - $ref: '#/components/schemas/IAMRoleArn'
          description: The ARN of the IAM role used to administrate local configuration
            deployments.
        Id:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the configuration definition.
      required:
      - Type
      - Parameters
      description: The definition of a Quick Setup configuration.
    ConfigurationDefinitionInput:
      type: object
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The type of the Quick Setup configuration.
        Parameters:
          allOf:
          - $ref: '#/components/schemas/ConfigurationParametersMap'
          description: "The parameters for the configuration definition type. Parameters\
            \ for configuration definitions vary based the configuration type. The\
            \ following tables outline the parameters for each configuration type.\n\
            \nOpsCenter (Type: Amazon Web ServicesQuickSetupType-SSMOpsCenter)\n\n\
            \    \n\n  * `DelegatedAccountId`\n\n    * Description: (Required) The\
            \ ID of the delegated administrator account.\n\n  * `TargetOrganizationalUnits`\n\
            \n    * Description: (Required) A comma separated list of organizational\
            \ units (OUs) you want to deploy the configuration to.\n\n  * `TargetRegions`\n\
            \n    * Description: (Required) A comma separated list of Amazon Web Services\
            \ Regions you want to deploy the configuration to.\n\nResource Scheduler\
            \ (Type: Amazon Web ServicesQuickSetupType-Scheduler)\n\n    \n\n  * `TargetTagKey`\n\
            \n    * Description: (Required) The tag key assigned to the instances\
            \ you want to target.\n\n  * `TargetTagValue`\n\n    * Description: (Required)\
            \ The value of the tag key assigned to the instances you want to target.\n\
            \n  * `ICalendarString`\n\n    * Description: (Required) An iCalendar\
            \ formatted string containing the schedule you want Change Manager to\
            \ use.\n\n  * `TargetAccounts`\n\n    * Description: (Optional) The ID\
            \ of the Amazon Web Services account initiating the configuration deployment.\
            \ You only need to provide a value for this parameter if you want to deploy\
            \ the configuration locally. A value must be provided for either `TargetAccounts`\
            \ or `TargetOrganizationalUnits`.\n\n  * `TargetOrganizationalUnits`\n\
            \n    * Description: (Optional) A comma separated list of organizational\
            \ units (OUs) you want to deploy the configuration to.\n\n  * `TargetRegions`\n\
            \n    * Description: (Required) A comma separated list of Amazon Web Services\
            \ Regions you want to deploy the configuration to.\n\nDefault Host Management\
            \ Configuration (Type: Amazon Web ServicesQuickSetupType-DHMC)\n\n   \
            \ \n\n  * `UpdateSSMAgent`\n\n    * Description: (Optional) A boolean\
            \ value that determines whether the SSM Agent is updated on the target\
            \ instances every 2 weeks. The default value is \"`true`\".\n\n  * `TargetOrganizationalUnits`\n\
            \n    * Description: (Required) A comma separated list of organizational\
            \ units (OUs) you want to deploy the configuration to.\n\n  * `TargetRegions`\n\
            \n    * Description: (Required) A comma separated list of Amazon Web Services\
            \ Regions you want to deploy the configuration to.\n\nResource Explorer\
            \ (Type: Amazon Web ServicesQuickSetupType-ResourceExplorer)\n\n    \n\
            \n  * `SelectedAggregatorRegion`\n\n    * Description: (Required) The\
            \ Amazon Web Services Region where you want to create the aggregator index.\n\
            \n  * `ReplaceExistingAggregator`\n\n    * Description: (Required) A boolean\
            \ value that determines whether to demote an existing aggregator if it\
            \ is in a Region that differs from the value you specify for the `SelectedAggregatorRegion`.\n\
            \n  * `TargetOrganizationalUnits`\n\n    * Description: (Required) A comma\
            \ separated list of organizational units (OUs) you want to deploy the\
            \ configuration to.\n\n  * `TargetRegions`\n\n    * Description: (Required)\
            \ A comma separated list of Amazon Web Services Regions you want to deploy\
            \ the configuration to.\n\nChange Manager (Type: Amazon Web ServicesQuickSetupType-SSMChangeMgr)\n\
            \n    \n\n  * `DelegatedAccountId`\n\n    * Description: (Required) The\
            \ ID of the delegated administrator account.\n\n  * `JobFunction`\n\n\
            \    * Description: (Required) The name for the Change Manager job function.\n\
            \n  * `PermissionType`\n\n    * Description: (Optional) Specifies whether\
            \ you want to use default administrator permissions for the job function\
            \ role, or provide a custom IAM policy. The valid values are `CustomPermissions`\
            \ and `AdminPermissions`. The default value for the parameter is `CustomerPermissions`.\n\
            \n  * `CustomPermissions`\n\n    * Description: (Optional) A JSON string\
            \ containing the IAM policy you want your job function to use. You must\
            \ provide a value for this parameter if you specify `CustomPermissions`\
            \ for the `PermissionType` parameter.\n\n  * `TargetOrganizationalUnits`\n\
            \n    * Description: (Required) A comma separated list of organizational\
            \ units (OUs) you want to deploy the configuration to.\n\n  * `TargetRegions`\n\
            \n    * Description: (Required) A comma separated list of Amazon Web Services\
            \ Regions you want to deploy the configuration to.\n\nDevOps Guru (Type:\
            \ Amazon Web ServicesQuickSetupType-DevOpsGuru)\n\n    \n\n  * `AnalyseAllResources`\n\
            \n    * Description: (Optional) A boolean value that determines whether\
            \ DevOps Guru analyzes all CloudFormation stacks in the account. The default\
            \ value is \"`false`\".\n\n  * `EnableSnsNotifications`\n\n    * Description:\
            \ (Optional) A boolean value that determines whether DevOps Guru sends\
            \ notifications when an insight is created. The default value is \"`true`\"\
            .\n\n  * `EnableSsmOpsItems`\n\n    * Description: (Optional) A boolean\
            \ value that determines whether DevOps Guru creates an OpsCenter OpsItem\
            \ when an insight is created. The default value is \"`true`\".\n\n  *\
            \ `EnableDriftRemediation`\n\n    * Description: (Optional) A boolean\
            \ value that determines whether a drift remediation schedule is used.\
            \ The default value is \"`false`\".\n\n  * `RemediationSchedule`\n\n \
            \   * Description: (Optional) A rate expression that defines the schedule\
            \ for drift remediation. The valid values are `rate(30 days)`, `rate(14\
            \ days)`, `rate(1 days)`, and `none`. The default value is \"`none`\"\
            .\n\n  * `TargetAccounts`\n\n    * Description: (Optional) The ID of the\
            \ Amazon Web Services account initiating the configuration deployment.\
            \ You only need to provide a value for this parameter if you want to deploy\
            \ the configuration locally. A value must be provided for either `TargetAccounts`\
            \ or `TargetOrganizationalUnits`.\n\n  * `TargetOrganizationalUnits`\n\
            \n    * Description: (Optional) A comma separated list of organizational\
            \ units (OUs) you want to deploy the configuration to.\n\n  * `TargetRegions`\n\
            \n    * Description: (Required) A comma separated list of Amazon Web Services\
            \ Regions you want to deploy the configuration to.\n\nConformance Packs\
            \ (Type: Amazon Web ServicesQuickSetupType-CFGCPacks)\n\n    \n\n  * `DelegatedAccountId`\n\
            \n    * Description: (Optional) The ID of the delegated administrator\
            \ account. This parameter is required for Organization deployments.\n\n\
            \  * `RemediationSchedule`\n\n    * Description: (Optional) A rate expression\
            \ that defines the schedule for drift remediation. The valid values are\
            \ `rate(30 days)`, `rate(14 days)`, `rate(2 days)`, and `none`. The default\
            \ value is \"`none`\".\n\n  * `CPackNames`\n\n    * Description: (Required)\
            \ A comma separated list of Config conformance packs.\n\n  * `TargetAccounts`\n\
            \n    * Description: (Optional) The ID of the Amazon Web Services account\
            \ initiating the configuration deployment. You only need to provide a\
            \ value for this parameter if you want to deploy the configuration locally.\
            \ A value must be provided for either `TargetAccounts` or `TargetOrganizationalUnits`.\n\
            \n  * `TargetOrganizationalUnits`\n\n    * Description: (Optional) The\
            \ ID of the root of your Organization. This configuration type doesn't\
            \ currently support choosing specific OUs. The configuration will be deployed\
            \ to all the OUs in the Organization.\n\n  * `TargetRegions`\n\n    *\
            \ Description: (Required) A comma separated list of Amazon Web Services\
            \ Regions you want to deploy the configuration to.\n\nConfig Recording\
            \ (Type: Amazon Web ServicesQuickSetupType-CFGRecording)\n\n    \n\n \
            \ * `RecordAllResources`\n\n    * Description: (Optional) A boolean value\
            \ that determines whether all supported resources are recorded. The default\
            \ value is \"`true`\".\n\n  * `ResourceTypesToRecord`\n\n    * Description:\
            \ (Optional) A comma separated list of resource types you want to record.\n\
            \n  * `RecordGlobalResourceTypes`\n\n    * Description: (Optional) A boolean\
            \ value that determines whether global resources are recorded with all\
            \ resource configurations. The default value is \"`false`\".\n\n  * `GlobalResourceTypesRegion`\n\
            \n    * Description: (Optional) Determines the Amazon Web Services Region\
            \ where global resources are recorded.\n\n  * `UseCustomBucket`\n\n  \
            \  * Description: (Optional) A boolean value that determines whether a\
            \ custom Amazon S3 bucket is used for delivery. The default value is \"\
            `false`\".\n\n  * `DeliveryBucketName`\n\n    * Description: (Optional)\
            \ The name of the Amazon S3 bucket you want Config to deliver configuration\
            \ snapshots and configuration history files to.\n\n  * `DeliveryBucketPrefix`\n\
            \n    * Description: (Optional) The key prefix you want to use in the\
            \ custom Amazon S3 bucket.\n\n  * `NotificationOptions`\n\n    * Description:\
            \ (Optional) Determines the notification configuration for the recorder.\
            \ The valid values are `NoStreaming`, `UseExistingTopic`, and `CreateTopic`.\
            \ The default value is `NoStreaming`.\n\n  * `CustomDeliveryTopicAccountId`\n\
            \n    * Description: (Optional) The ID of the Amazon Web Services account\
            \ where the Amazon SNS topic you want to use for notifications resides.\
            \ You must specify a value for this parameter if you use the `UseExistingTopic`\
            \ notification option.\n\n  * `CustomDeliveryTopicName`\n\n    * Description:\
            \ (Optional) The name of the Amazon SNS topic you want to use for notifications.\
            \ You must specify a value for this parameter if you use the `UseExistingTopic`\
            \ notification option.\n\n  * `RemediationSchedule`\n\n    * Description:\
            \ (Optional) A rate expression that defines the schedule for drift remediation.\
            \ The valid values are `rate(30 days)`, `rate(7 days)`, `rate(1 days)`,\
            \ and `none`. The default value is \"`none`\".\n\n  * `TargetAccounts`\n\
            \n    * Description: (Optional) The ID of the Amazon Web Services account\
            \ initiating the configuration deployment. You only need to provide a\
            \ value for this parameter if you want to deploy the configuration locally.\
            \ A value must be provided for either `TargetAccounts` or `TargetOrganizationalUnits`.\n\
            \n  * `TargetOrganizationalUnits`\n\n    * Description: (Optional) The\
            \ ID of the root of your Organization. This configuration type doesn't\
            \ currently support choosing specific OUs. The configuration will be deployed\
            \ to all the OUs in the Organization.\n\n  * `TargetRegions`\n\n    *\
            \ Description: (Required) A comma separated list of Amazon Web Services\
            \ Regions you want to deploy the configuration to.\n\nHost Management\
            \ (Type: Amazon Web ServicesQuickSetupType-SSMHostMgmt)\n\n    \n\n  *\
            \ `UpdateSSMAgent`\n\n    * Description: (Optional) A boolean value that\
            \ determines whether the SSM Agent is updated on the target instances\
            \ every 2 weeks. The default value is \"`true`\".\n\n  * `UpdateEc2LaunchAgent`\n\
            \n    * Description: (Optional) A boolean value that determines whether\
            \ the EC2 Launch agent is updated on the target instances every month.\
            \ The default value is \"`false`\".\n\n  * `CollectInventory`\n\n    *\
            \ Description: (Optional) A boolean value that determines whether the\
            \ EC2 Launch agent is updated on the target instances every month. The\
            \ default value is \"`true`\".\n\n  * `ScanInstances`\n\n    * Description:\
            \ (Optional) A boolean value that determines whether the target instances\
            \ are scanned daily for available patches. The default value is \"`true`\"\
            .\n\n  * `InstallCloudWatchAgent`\n\n    * Description: (Optional) A boolean\
            \ value that determines whether the Amazon CloudWatch agent is installed\
            \ on the target instances. The default value is \"`false`\".\n\n  * `UpdateCloudWatchAgent`\n\
            \n    * Description: (Optional) A boolean value that determines whether\
            \ the Amazon CloudWatch agent is updated on the target instances every\
            \ month. The default value is \"`false`\".\n\n  * `IsPolicyAttachAllowed`\n\
            \n    * Description: (Optional) A boolean value that determines whether\
            \ Quick Setup attaches policies to instances profiles already associated\
            \ with the target instances. The default value is \"`false`\".\n\n  *\
            \ `TargetType`\n\n    * Description: (Optional) Determines how instances\
            \ are targeted for local account deployments. Don't specify a value for\
            \ this parameter if you're deploying to OUs. The valid values are `*`,\
            \ `InstanceIds`, `ResourceGroups`, and `Tags`. Use `*` to target all instances\
            \ in the account.\n\n  * `TargetInstances`\n\n    * Description: (Optional)\
            \ A comma separated list of instance IDs. You must provide a value for\
            \ this parameter if you specify `InstanceIds` for the `TargetType` parameter.\n\
            \n  * `TargetTagKey`\n\n    * Description: (Optional) The tag key assigned\
            \ to the instances you want to target. You must provide a value for this\
            \ parameter if you specify `Tags` for the `TargetType` parameter.\n\n\
            \  * `TargetTagValue`\n\n    * Description: (Optional) The value of the\
            \ tag key assigned to the instances you want to target. You must provide\
            \ a value for this parameter if you specify `Tags` for the `TargetType`\
            \ parameter.\n\n  * `ResourceGroupName`\n\n    * Description: (Optional)\
            \ The name of the resource group associated with the instances you want\
            \ to target. You must provide a value for this parameter if you specify\
            \ `ResourceGroups` for the `TargetType` parameter.\n\n  * `TargetAccounts`\n\
            \n    * Description: (Optional) The ID of the Amazon Web Services account\
            \ initiating the configuration deployment. You only need to provide a\
            \ value for this parameter if you want to deploy the configuration locally.\
            \ A value must be provided for either `TargetAccounts` or `TargetOrganizationalUnits`.\n\
            \n  * `TargetOrganizationalUnits`\n\n    * Description: (Optional) A comma\
            \ separated list of organizational units (OUs) you want to deploy the\
            \ configuration to.\n\n  * `TargetRegions`\n\n    * Description: (Required)\
            \ A comma separated list of Amazon Web Services Regions you want to deploy\
            \ the configuration to.\n\nDistributor (Type: Amazon Web ServicesQuickSetupType-Distributor)\n\
            \n    \n\n  * `PackagesToInstall`\n\n    * Description: (Required) A comma\
            \ separated list of packages you want to install on the target instances.\
            \ The valid values are `AWSEFSTools`, `AWSCWAgent`, and `AWSEC2LaunchAgent`.\n\
            \n  * `RemediationSchedule`\n\n    * Description: (Optional) A rate expression\
            \ that defines the schedule for drift remediation. The valid values are\
            \ `rate(30 days)`, `rate(14 days)`, `rate(2 days)`, and `none`. The default\
            \ value is \"`rate(30 days)`\".\n\n  * `IsPolicyAttachAllowed`\n\n   \
            \ * Description: (Optional) A boolean value that determines whether Quick\
            \ Setup attaches policies to instances profiles already associated with\
            \ the target instances. The default value is \"`false`\".\n\n  * `TargetType`\n\
            \n    * Description: (Optional) Determines how instances are targeted\
            \ for local account deployments. Don't specify a value for this parameter\
            \ if you're deploying to OUs. The valid values are `*`, `InstanceIds`,\
            \ `ResourceGroups`, and `Tags`. Use `*` to target all instances in the\
            \ account.\n\n  * `TargetInstances`\n\n    * Description: (Optional) A\
            \ comma separated list of instance IDs. You must provide a value for this\
            \ parameter if you specify `InstanceIds` for the `TargetType` parameter.\n\
            \n  * `TargetTagKey`\n\n    * Description: (Required) The tag key assigned\
            \ to the instances you want to target. You must provide a value for this\
            \ parameter if you specify `Tags` for the `TargetType` parameter.\n\n\
            \  * `TargetTagValue`\n\n    * Description: (Required) The value of the\
            \ tag key assigned to the instances you want to target. You must provide\
            \ a value for this parameter if you specify `Tags` for the `TargetType`\
            \ parameter.\n\n  * `ResourceGroupName`\n\n    * Description: (Required)\
            \ The name of the resource group associated with the instances you want\
            \ to target. You must provide a value for this parameter if you specify\
            \ `ResourceGroups` for the `TargetType` parameter.\n\n  * `TargetAccounts`\n\
            \n    * Description: (Optional) The ID of the Amazon Web Services account\
            \ initiating the configuration deployment. You only need to provide a\
            \ value for this parameter if you want to deploy the configuration locally.\
            \ A value must be provided for either `TargetAccounts` or `TargetOrganizationalUnits`.\n\
            \n  * `TargetOrganizationalUnits`\n\n    * Description: (Optional) A comma\
            \ separated list of organizational units (OUs) you want to deploy the\
            \ configuration to.\n\n  * `TargetRegions`\n\n    * Description: (Required)\
            \ A comma separated list of Amazon Web Services Regions you want to deploy\
            \ the configuration to.\n\nPatch Policy (Type: Amazon Web ServicesQuickSetupType-PatchPolicy)\n\
            \n    \n\n  * `PatchPolicyName`\n\n    * Description: (Required) A name\
            \ for the patch policy. The value you provide is applied to target Amazon\
            \ EC2 instances as a tag.\n\n  * `SelectedPatchBaselines`\n\n    * Description:\
            \ (Required) An array of JSON objects containing the information for the\
            \ patch baselines to include in your patch policy.\n\n  * `PatchBaselineUseDefault`\n\
            \n    * Description: (Optional) A boolean value that determines whether\
            \ the selected patch baselines are all Amazon Web Services provided.\n\
            \n  * `ConfigurationOptionsPatchOperation`\n\n    * Description: (Optional)\
            \ Determines whether target instances scan for available patches, or scan\
            \ and install available patches. The valid values are `Scan` and `ScanAndInstall`.\
            \ The default value for the parameter is `Scan`.\n\n  * `ConfigurationOptionsScanValue`\n\
            \n    * Description: (Optional) A cron expression that is used as the\
            \ schedule for when instances scan for available patches.\n\n  * `ConfigurationOptionsInstallValue`\n\
            \n    * Description: (Optional) A cron expression that is used as the\
            \ schedule for when instances install available patches.\n\n  * `ConfigurationOptionsScanNextInterval`\n\
            \n    * Description: (Optional) A boolean value that determines whether\
            \ instances should scan for available patches at the next cron interval.\
            \ The default value is \"`false`\".\n\n  * `ConfigurationOptionsInstallNextInterval`\n\
            \n    * Description: (Optional) A boolean value that determines whether\
            \ instances should scan for available patches at the next cron interval.\
            \ The default value is \"`false`\".\n\n  * `RebootOption`\n\n    * Description:\
            \ (Optional) Determines whether instances are rebooted after patches are\
            \ installed. Valid values are `RebootIfNeeded` and `NoReboot`.\n\n  *\
            \ `IsPolicyAttachAllowed`\n\n    * Description: (Optional) A boolean value\
            \ that determines whether Quick Setup attaches policies to instances profiles\
            \ already associated with the target instances. The default value is \"\
            `false`\".\n\n  * `OutputLogEnableS3`\n\n    * Description: (Optional)\
            \ A boolean value that determines whether command output logs are sent\
            \ to Amazon S3.\n\n  * `OutputS3Location`\n\n    * Description: (Optional)\
            \ A JSON string containing information about the Amazon S3 bucket where\
            \ you want to store the output details of the request.\n\n      * `OutputS3BucketRegion`\n\
            \n        * Description: (Optional) The Amazon Web Services Region where\
            \ the Amazon S3 bucket you want Config to deliver command output to is\
            \ located.\n\n      * `OutputS3BucketName`\n\n        * Description: (Optional)\
            \ The name of the Amazon S3 bucket you want Config to deliver command\
            \ output to.\n\n      * `OutputS3KeyPrefix`\n\n        * Description:\
            \ (Optional) The key prefix you want to use in the custom Amazon S3 bucket.\n\
            \n  * `TargetType`\n\n    * Description: (Optional) Determines how instances\
            \ are targeted for local account deployments. Don't specify a value for\
            \ this parameter if you're deploying to OUs. The valid values are `*`,\
            \ `InstanceIds`, `ResourceGroups`, and `Tags`. Use `*` to target all instances\
            \ in the account.\n\n  * `TargetInstances`\n\n    * Description: (Optional)\
            \ A comma separated list of instance IDs. You must provide a value for\
            \ this parameter if you specify `InstanceIds` for the `TargetType` parameter.\n\
            \n  * `TargetTagKey`\n\n    * Description: (Required) The tag key assigned\
            \ to the instances you want to target. You must provide a value for this\
            \ parameter if you specify `Tags` for the `TargetType` parameter.\n\n\
            \  * `TargetTagValue`\n\n    * Description: (Required) The value of the\
            \ tag key assigned to the instances you want to target. You must provide\
            \ a value for this parameter if you specify `Tags` for the `TargetType`\
            \ parameter.\n\n  * `ResourceGroupName`\n\n    * Description: (Required)\
            \ The name of the resource group associated with the instances you want\
            \ to target. You must provide a value for this parameter if you specify\
            \ `ResourceGroups` for the `TargetType` parameter.\n\n  * `TargetAccounts`\n\
            \n    * Description: (Optional) The ID of the Amazon Web Services account\
            \ initiating the configuration deployment. You only need to provide a\
            \ value for this parameter if you want to deploy the configuration locally.\
            \ A value must be provided for either `TargetAccounts` or `TargetOrganizationalUnits`.\n\
            \n  * `TargetOrganizationalUnits`\n\n    * Description: (Optional) A comma\
            \ separated list of organizational units (OUs) you want to deploy the\
            \ configuration to.\n\n  * `TargetRegions`\n\n    * Description: (Required)\
            \ A comma separated list of Amazon Web Services Regions you want to deploy\
            \ the configuration to."
        TypeVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The version of the Quick Setup type to use.
        LocalDeploymentExecutionRoleName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the IAM role used to deploy local configurations.
        LocalDeploymentAdministrationRoleArn:
          allOf:
          - $ref: '#/components/schemas/IAMRoleArn'
          description: The ARN of the IAM role used to administrate local configuration
            deployments.
      required:
      - Type
      - Parameters
      description: Defines the preferences and options for a configuration definition.
    ConfigurationDefinitionSummariesList:
      type: array
      items:
        $ref: '#/components/schemas/ConfigurationDefinitionSummary'
    ConfigurationDefinitionSummary:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the configuration definition.
        Type:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The type of the Quick Setup configuration used by the configuration
            definition.
        TypeVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The version of the Quick Setup type used by the configuration
            definition.
        FirstClassParameters:
          allOf:
          - $ref: '#/components/schemas/ConfigurationParametersMap'
          description: The common parameters and values for the configuration definition.
      description: A summarized definition of a Quick Setup configuration definition.
    ConfigurationDefinitionsInputList:
      type: array
      items:
        $ref: '#/components/schemas/ConfigurationDefinitionInput'
    ConfigurationDefinitionsList:
      type: array
      items:
        $ref: '#/components/schemas/ConfigurationDefinition'
    ConfigurationManagerList:
      type: array
      items:
        $ref: '#/components/schemas/ConfigurationManagerSummary'
    ConfigurationManagerSummary:
      type: object
      properties:
        ManagerArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ARN of the Quick Setup configuration.
        Description:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The description of the configuration.
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the configuration
        StatusSummaries:
          allOf:
          - $ref: '#/components/schemas/StatusSummariesList'
          description: Summaries of the state of the configuration manager. These
            summaries include an aggregate of the statuses from the configuration
            definition associated with the configuration manager. This includes deployment
            statuses, association statuses, drift statuses, health checks, and more.
        ConfigurationDefinitionSummaries:
          allOf:
          - $ref: '#/components/schemas/ConfigurationDefinitionSummariesList'
          description: A summary of the Quick Setup configuration definition.
      required:
      - ManagerArn
      description: A summary of a Quick Setup configuration manager.
    ConfigurationParametersMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/String'
    ConfigurationSummary:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A service generated identifier for the configuration.
        ManagerArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ARN of the configuration manager.
        ConfigurationDefinitionId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the configuration definition.
        Type:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The type of the Quick Setup configuration.
        TypeVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The version of the Quick Setup type used.
        Region:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Web Services Region where the configuration was
            deployed.
        Account:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the Amazon Web Services account where the configuration
            was deployed.
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The datetime stamp when the configuration was created.
        FirstClassParameters:
          allOf:
          - $ref: '#/components/schemas/ConfigurationParametersMap'
          description: The common parameters and values for the configuration definition.
        StatusSummaries:
          allOf:
          - $ref: '#/components/schemas/StatusSummariesList'
          description: A summary of the state of the configuration manager. This includes
            deployment statuses, association statuses, drift statuses, health checks,
            and more.
      description: Details for a Quick Setup configuration.
    ConfigurationsList:
      type: array
      items:
        $ref: '#/components/schemas/ConfigurationSummary'
    ConflictException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
      description: Another request is being processed. Wait a few minutes and try
        again.
    CreateConfigurationManagerInput:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A name for the configuration manager.
        Description:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A description of the configuration manager.
        ConfigurationDefinitions:
          allOf:
          - $ref: '#/components/schemas/ConfigurationDefinitionsInputList'
          description: The definition of the Quick Setup configuration that the configuration
            manager deploys.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagsMap'
          description: Key-value pairs of metadata to assign to the configuration
            manager.
      required:
      - ConfigurationDefinitions
    CreateConfigurationManagerOutput:
      type: object
      properties:
        ManagerArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ARN for the newly created configuration manager.
      required:
      - ManagerArn
    DeleteConfigurationManagerInput:
      type: object
      properties:
        ManagerArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the configuration manager.
      required:
      - ManagerArn
    Filter:
      type: object
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The key for the filter.
        Values:
          allOf:
          - $ref: '#/components/schemas/FilterValues'
          description: The values for the filter keys.
      required:
      - Key
      - Values
      description: A key-value pair to filter results.
    FilterValues:
      type: array
      items:
        type: string
    FiltersList:
      type: array
      items:
        $ref: '#/components/schemas/Filter'
    GetConfigurationInput:
      type: object
      properties:
        ConfigurationId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A service generated identifier for the configuration.
      required:
      - ConfigurationId
    GetConfigurationManagerInput:
      type: object
      properties:
        ManagerArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ARN of the configuration manager.
      required:
      - ManagerArn
    GetConfigurationManagerOutput:
      type: object
      properties:
        ManagerArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ARN of the configuration manager.
        Description:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The description of the configuration manager.
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the configuration manager.
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The datetime stamp when the configuration manager was created.
        LastModifiedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The datetime stamp when the configuration manager was last
            updated.
        StatusSummaries:
          allOf:
          - $ref: '#/components/schemas/StatusSummariesList'
          description: A summary of the state of the configuration manager. This includes
            deployment statuses, association statuses, drift statuses, health checks,
            and more.
        ConfigurationDefinitions:
          allOf:
          - $ref: '#/components/schemas/ConfigurationDefinitionsList'
          description: The configuration definitions association with the configuration
            manager.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagsMap'
          description: Key-value pairs of metadata to assign to the configuration
            manager.
      required:
      - ManagerArn
    GetConfigurationOutput:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A service generated identifier for the configuration.
        ManagerArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ARN of the configuration manager.
        ConfigurationDefinitionId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the configuration definition.
        Type:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The type of the Quick Setup configuration.
        TypeVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The version of the Quick Setup type used.
        Account:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the Amazon Web Services account where the configuration
            was deployed.
        Region:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Web Services Region where the configuration was
            deployed.
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The datetime stamp when the configuration manager was created.
        LastModifiedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The datetime stamp when the configuration manager was last
            updated.
        StatusSummaries:
          allOf:
          - $ref: '#/components/schemas/StatusSummariesList'
          description: A summary of the state of the configuration manager. This includes
            deployment statuses, association statuses, drift statuses, health checks,
            and more.
        Parameters:
          allOf:
          - $ref: '#/components/schemas/ConfigurationParametersMap'
          description: The parameters for the configuration definition type.
    GetServiceSettingsOutput:
      type: object
      properties:
        ServiceSettings:
          allOf:
          - $ref: '#/components/schemas/ServiceSettings'
          description: Returns details about the settings for Quick Setup in the requesting
            Amazon Web Services account and Amazon Web Services Region.
    IAMRoleArn:
      type: string
    InternalServerException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
      description: An error occurred on the server side.
    ListConfigurationManagersInput:
      type: object
      properties:
        StartingToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The token to use when requesting a specific set of items from
            a list.
        MaxItems:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: Specifies the maximum number of configuration managers that
            are returned by the request.
        Filters:
          allOf:
          - $ref: '#/components/schemas/FiltersList'
          description: Filters the results returned by the request.
    ListConfigurationManagersOutput:
      type: object
      properties:
        ConfigurationManagersList:
          allOf:
          - $ref: '#/components/schemas/ConfigurationManagerList'
          description: The configuration managers returned by the request.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The token to use when requesting the next set of configuration
            managers. If there are no additional operations to return, the string
            is empty.
    ListConfigurationsInput:
      type: object
      properties:
        StartingToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The token to use when requesting a specific set of items from
            a list.
        MaxItems:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: Specifies the maximum number of configurations that are returned
            by the request.
        Filters:
          allOf:
          - $ref: '#/components/schemas/FiltersList'
          description: Filters the results returned by the request.
        ManagerArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ARN of the configuration manager.
        ConfigurationDefinitionId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the configuration definition.
    ListConfigurationsOutput:
      type: object
      properties:
        ConfigurationsList:
          allOf:
          - $ref: '#/components/schemas/ConfigurationsList'
          description: An array of configurations.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The token to use when requesting the next set of items. If
            there are no additional items to return, the string is empty.
    ListQuickSetupTypesOutput:
      type: object
      properties:
        QuickSetupTypeList:
          allOf:
          - $ref: '#/components/schemas/QuickSetupTypeList'
          description: An array of Quick Setup types.
    ListTagsForResourceRequest:
      type: object
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ARN of the resource the tag is assigned to.
      required:
      - ResourceArn
    ListTagsForResourceResponse:
      type: object
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: Key-value pairs of metadata assigned to the resource.
    QuickSetupTypeList:
      type: array
      items:
        $ref: '#/components/schemas/QuickSetupTypeOutput'
    QuickSetupTypeOutput:
      type: object
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The type of the Quick Setup configuration.
        LatestVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The latest version number of the configuration.
      description: Information about the Quick Setup type.
    ResourceNotFoundException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
      description: The resource couldn't be found. Check the ID or name and try again.
    ServiceSettings:
      type: object
      properties:
        ExplorerEnablingRoleArn:
          allOf:
          - $ref: '#/components/schemas/IAMRoleArn'
          description: The IAM role used to enable Explorer.
      description: Settings configured for Quick Setup.
    Status:
      type: string
      enum:
      - INITIALIZING
      - DEPLOYING
      - SUCCEEDED
      - DELETING
      - STOPPING
      - FAILED
      - STOPPED
      - DELETE_FAILED
      - STOP_FAILED
      - NONE
    StatusDetails:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/String'
    StatusSummariesList:
      type: array
      items:
        $ref: '#/components/schemas/StatusSummary'
    StatusSummary:
      type: object
      properties:
        StatusType:
          allOf:
          - $ref: '#/components/schemas/StatusType'
          description: The type of a status summary.
        Status:
          allOf:
          - $ref: '#/components/schemas/Status'
          description: The current status.
        StatusMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          description: When applicable, returns an informational message relevant
            to the current status and status type of the status summary object. We
            don't recommend implementing parsing logic around this value since the
            messages returned can vary in format.
        LastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The datetime stamp when the status was last updated.
        StatusDetails:
          allOf:
          - $ref: '#/components/schemas/StatusDetails'
          description: Details about the status.
      required:
      - StatusType
      - LastUpdatedAt
      description: A summarized description of the status.
    StatusType:
      type: string
      enum:
      - Deployment
      - AsyncExecutions
    TagEntry:
      type: object
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The key for the tag.
        Value:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The value for the tag.
      description: Key-value pairs of metadata.
    TagKeys:
      type: array
      items:
        type: string
    TagResourceInput:
      type: object
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ARN of the resource to tag.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagsMap'
          description: Key-value pairs of metadata to assign to the resource.
      required:
      - ResourceArn
      - Tags
    Tags:
      type: array
      items:
        $ref: '#/components/schemas/TagEntry'
      x-sensitive: true
    TagsMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/String'
    ThrottlingException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
      required:
      - Message
      description: The request or operation exceeds the maximum allowed request rate
        per Amazon Web Services account and Amazon Web Services Region.
    UntagResourceInput:
      type: object
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ARN of the resource to remove tags from.
        TagKeys:
          allOf:
          - $ref: '#/components/schemas/TagKeys'
          description: The keys of the tags to remove from the resource.
      required:
      - ResourceArn
      - TagKeys
    UpdateConfigurationDefinitionInput:
      type: object
      properties:
        ManagerArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ARN of the configuration manager associated with the definition
            to update.
        Id:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the configuration definition you want to update.
        TypeVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The version of the Quick Setup type to use.
        Parameters:
          allOf:
          - $ref: '#/components/schemas/ConfigurationParametersMap'
          description: The parameters for the configuration definition type.
        LocalDeploymentExecutionRoleName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the IAM role used to deploy local configurations.
        LocalDeploymentAdministrationRoleArn:
          allOf:
          - $ref: '#/components/schemas/IAMRoleArn'
          description: The ARN of the IAM role used to administrate local configuration
            deployments.
      required:
      - ManagerArn
      - Id
    UpdateConfigurationManagerInput:
      type: object
      properties:
        ManagerArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ARN of the configuration manager.
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A name for the configuration manager.
        Description:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A description of the configuration manager.
      required:
      - ManagerArn
    UpdateServiceSettingsInput:
      type: object
      properties:
        ExplorerEnablingRoleArn:
          allOf:
          - $ref: '#/components/schemas/IAMRoleArn'
          description: The IAM role used to enable Explorer.
    ValidationException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
      description: The request is invalid. Verify the values provided for the request
        parameters are accurate.
