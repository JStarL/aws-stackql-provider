openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: opensearch
  x-aws-serviceName: opensearch
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-07'
  version: '2021-01-01'
  title: Amazon OpenSearch Service
  description: |-
    Use the Amazon OpenSearch Service configuration API to create, configure, and manage OpenSearch Service domains. The endpoint for configuration service requests is Region specific: es._region_.amazonaws.com. For example, es.us-east-1.amazonaws.com. For a current list of supported Regions and endpoints, see [Amazon Web Services service endpoints](https://docs.aws.amazon.com/general/latest/gr/rande.html#service-regions).
servers:
- description: The Amazon OpenSearch Service regional endpoint
  url: https://es.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths:
  /2021-01-01/opensearch/cc/inboundConnection/{ConnectionId}/accept:
    put:
      operationId: AcceptInboundConnection
      description: |-
        Allows the destination Amazon OpenSearch Service domain owner to accept an inbound cross-cluster search connection request. For more information, see [Cross-cluster search for Amazon OpenSearch Service](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/cross-cluster-search.html).
      parameters:
      - name: ConnectionId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ConnectionId'
      responses:
        '200': {}
        '409':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /2021-01-01/opensearch/domain/{DomainName}/dataSource:
    post:
      operationId: AddDataSource
      description: |-
        Creates a new direct-query data source to the specified domain. For more information, see [Creating Amazon OpenSearch Service data source integrations with Amazon S3](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/direct-query-s3-creating.html).
      parameters:
      - name: DomainName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DomainName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  $ref: '#/components/schemas/DataSourceName'
                DataSourceType:
                  $ref: '#/components/schemas/DataSourceType'
                Description:
                  $ref: '#/components/schemas/DataSourceDescription'
      responses:
        '200': {}
        '400':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '424':
          description: |-
            An exception for when a failure in one of the dependencies results in the service being unable to fetch details about the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DependencyFailureException'
        '409':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '500':
          description: |-
            Request processing failed because of an unknown error, exception, or internal failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
    get:
      operationId: ListDataSources
      description: |-
        Lists direct-query data sources for a specific domain. For more information, see For more information, see [Working with Amazon OpenSearch Service direct queries with Amazon S3](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/direct-query-s3.html).
      parameters:
      - name: DomainName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DomainName'
      responses:
        '200': {}
        '400':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '424':
          description: |-
            An exception for when a failure in one of the dependencies results in the service being unable to fetch details about the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DependencyFailureException'
        '409':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '500':
          description: |-
            Request processing failed because of an unknown error, exception, or internal failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
  /2021-01-01/opensearch/directQueryDataSource:
    post:
      operationId: AddDirectQueryDataSource
      description: |-
        Adds a new data source in Amazon OpenSearch Service so that you can perform direct queries on external data.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                DataSourceName:
                  $ref: '#/components/schemas/DirectQueryDataSourceName'
                DataSourceType:
                  $ref: '#/components/schemas/DirectQueryDataSourceType'
                Description:
                  $ref: '#/components/schemas/DirectQueryDataSourceDescription'
                OpenSearchArns:
                  $ref: '#/components/schemas/DirectQueryOpenSearchARNList'
                TagList:
                  $ref: '#/components/schemas/TagList'
      responses:
        '200': {}
        '400':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '409':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '500':
          description: |-
            Request processing failed because of an unknown error, exception, or internal failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
    get:
      operationId: ListDirectQueryDataSources
      description: |-
        Lists an inventory of all the direct query data sources that you have configured within Amazon OpenSearch Service.
      parameters:
      - name: nexttoken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '400':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '409':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '500':
          description: |-
            Request processing failed because of an unknown error, exception, or internal failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
  /2021-01-01/tags:
    post:
      operationId: AddTags
      description: |-
        Attaches tags to an existing Amazon OpenSearch Service domain, data source, or application.

        Tags are a set of case-sensitive key-value pairs. A domain, data source, or application can have up to 10 tags. For more information, see [Tagging Amazon OpenSearch Service resources](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/managedomains-awsresourcetagging.html).
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ARN:
                  $ref: '#/components/schemas/ARN'
                TagList:
                  $ref: '#/components/schemas/TagList'
      responses:
        '200': {}
        '400':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            Request processing failed because of an unknown error, exception, or internal failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '409':
          description: |-
            An exception for trying to create more than the allowed number of resources or sub-resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
    get:
      operationId: ListTags
      description: |-
        Returns all resource tags for an Amazon OpenSearch Service domain, data source, or application. For more information, see [Tagging Amazon OpenSearch Service resources](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/managedomains-awsresourcetagging.html).
      parameters:
      - name: arn
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/ARN'
      responses:
        '200': {}
        '400':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            Request processing failed because of an unknown error, exception, or internal failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '409':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /2021-01-01/packages/associate/{PackageID}/{DomainName}:
    post:
      operationId: AssociatePackage
      description: |-
        Associates a package with an Amazon OpenSearch Service domain. For more information, see [Custom packages for Amazon OpenSearch Service](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/custom-packages.html).
      parameters:
      - name: PackageID
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PackageID'
      - name: DomainName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DomainName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                PrerequisitePackageIDList:
                  $ref: '#/components/schemas/PackageIDList'
                AssociationConfiguration:
                  $ref: '#/components/schemas/PackageAssociationConfiguration'
      responses:
        '200': {}
        '403':
          description: |-
            An error occurred because you don't have permissions to access the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '409':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '500':
          description: |-
            Request processing failed because of an unknown error, exception, or internal failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
  /2021-01-01/packages/associateMultiple:
    post:
      operationId: AssociatePackages
      description: |-
        Operation in the Amazon OpenSearch Service API for associating multiple packages with a domain simultaneously.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                PackageList:
                  $ref: '#/components/schemas/PackageDetailsForAssociationList'
                DomainName:
                  $ref: '#/components/schemas/DomainName'
      responses:
        '200': {}
        '400':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '409':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '500':
          description: |-
            Request processing failed because of an unknown error, exception, or internal failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
  /2021-01-01/opensearch/domain/{DomainName}/authorizeVpcEndpointAccess:
    post:
      operationId: AuthorizeVpcEndpointAccess
      description: |-
        Provides access to an Amazon OpenSearch Service domain through the use of an interface VPC endpoint.
      parameters:
      - name: DomainName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DomainName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Account:
                  $ref: '#/components/schemas/AWSAccount'
                Service:
                  $ref: '#/components/schemas/AWSServicePrincipal'
      responses:
        '200': {}
        '400':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '409':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '500':
          description: |-
            Request processing failed because of an unknown error, exception, or internal failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
  /2021-01-01/opensearch/domain/{DomainName}/config/cancel:
    post:
      operationId: CancelDomainConfigChange
      description: |-
        Cancels a pending configuration change on an Amazon OpenSearch Service domain.
      parameters:
      - name: DomainName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DomainName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                DryRun:
                  $ref: '#/components/schemas/DryRun'
      responses:
        '200': {}
        '400':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '409':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '500':
          description: |-
            Request processing failed because of an unknown error, exception, or internal failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
  /2021-01-01/opensearch/serviceSoftwareUpdate/cancel:
    post:
      operationId: CancelServiceSoftwareUpdate
      description: |-
        Cancels a scheduled service software update for an Amazon OpenSearch Service domain. You can only perform this operation before the `AutomatedUpdateDate` and when the domain's `UpdateStatus` is `PENDING_UPDATE`. For more information, see [Service software updates in Amazon OpenSearch Service](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/service-software.html).
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                DomainName:
                  $ref: '#/components/schemas/DomainName'
      responses:
        '200': {}
        '400':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            Request processing failed because of an unknown error, exception, or internal failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '409':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /2021-01-01/opensearch/application:
    post:
      operationId: CreateApplication
      description: |-
        Creates an OpenSearch UI application. For more information, see [Using the OpenSearch user interface in Amazon OpenSearch Service](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/application.html).
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
                name:
                  $ref: '#/components/schemas/ApplicationName'
                dataSources:
                  $ref: '#/components/schemas/DataSources'
                iamIdentityCenterOptions:
                  $ref: '#/components/schemas/IamIdentityCenterOptionsInput'
                appConfigs:
                  $ref: '#/components/schemas/AppConfigs'
                tagList:
                  $ref: '#/components/schemas/TagList'
      responses:
        '200': {}
        '403':
          description: |-
            An error occurred because you don't have permissions to access the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '409':
          description: |-
            An error occured because the client wanted to access an unsupported operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisabledOperationException'
        '500':
          description: |-
            Request processing failed because of an unknown error, exception, or internal failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
  /2021-01-01/opensearch/domain:
    post:
      operationId: CreateDomain
      description: |-
        Creates an Amazon OpenSearch Service domain. For more information, see [Creating and managing Amazon OpenSearch Service domains](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html).
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                DomainName:
                  $ref: '#/components/schemas/DomainName'
                EngineVersion:
                  $ref: '#/components/schemas/VersionString'
                ClusterConfig:
                  $ref: '#/components/schemas/ClusterConfig'
                EBSOptions:
                  $ref: '#/components/schemas/EBSOptions'
                AccessPolicies:
                  $ref: '#/components/schemas/PolicyDocument'
                IPAddressType:
                  $ref: '#/components/schemas/IPAddressType'
                SnapshotOptions:
                  $ref: '#/components/schemas/SnapshotOptions'
                VPCOptions:
                  $ref: '#/components/schemas/VPCOptions'
                CognitoOptions:
                  $ref: '#/components/schemas/CognitoOptions'
                EncryptionAtRestOptions:
                  $ref: '#/components/schemas/EncryptionAtRestOptions'
                NodeToNodeEncryptionOptions:
                  $ref: '#/components/schemas/NodeToNodeEncryptionOptions'
                AdvancedOptions:
                  $ref: '#/components/schemas/AdvancedOptions'
                LogPublishingOptions:
                  $ref: '#/components/schemas/LogPublishingOptions'
                DomainEndpointOptions:
                  $ref: '#/components/schemas/DomainEndpointOptions'
                AdvancedSecurityOptions:
                  $ref: '#/components/schemas/AdvancedSecurityOptionsInput'
                IdentityCenterOptions:
                  $ref: '#/components/schemas/IdentityCenterOptionsInput'
                TagList:
                  $ref: '#/components/schemas/TagList'
                AutoTuneOptions:
                  $ref: '#/components/schemas/AutoTuneOptionsInput'
                OffPeakWindowOptions:
                  $ref: '#/components/schemas/OffPeakWindowOptions'
                SoftwareUpdateOptions:
                  $ref: '#/components/schemas/SoftwareUpdateOptions'
                AIMLOptions:
                  $ref: '#/components/schemas/AIMLOptionsInput'
      responses:
        '200': {}
        '400':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '409':
          description: |-
            An exception for creating a resource that already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '500':
          description: |-
            Request processing failed because of an unknown error, exception, or internal failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
  /2021-01-01/opensearch/cc/outboundConnection:
    post:
      operationId: CreateOutboundConnection
      description: |-
        Creates a new cross-cluster search connection from a source Amazon OpenSearch Service domain to a destination domain. For more information, see [Cross-cluster search for Amazon OpenSearch Service](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/cross-cluster-search.html).
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                LocalDomainInfo:
                  $ref: '#/components/schemas/DomainInformationContainer'
                RemoteDomainInfo:
                  $ref: '#/components/schemas/DomainInformationContainer'
                ConnectionAlias:
                  $ref: '#/components/schemas/ConnectionAlias'
                ConnectionMode:
                  $ref: '#/components/schemas/ConnectionMode'
                ConnectionProperties:
                  $ref: '#/components/schemas/ConnectionProperties'
      responses:
        '200': {}
        '409':
          description: |-
            An exception for creating a resource that already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '500':
          description: |-
            Request processing failed because of an unknown error, exception, or internal failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
  /2021-01-01/packages:
    post:
      operationId: CreatePackage
      description: |-
        Creates a package for use with Amazon OpenSearch Service domains. For more information, see [Custom packages for Amazon OpenSearch Service](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/custom-packages.html).
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                PackageName:
                  $ref: '#/components/schemas/PackageName'
                PackageType:
                  $ref: '#/components/schemas/PackageType'
                PackageDescription:
                  $ref: '#/components/schemas/PackageDescription'
                PackageSource:
                  $ref: '#/components/schemas/PackageSource'
                PackageConfiguration:
                  $ref: '#/components/schemas/PackageConfiguration'
                EngineVersion:
                  $ref: '#/components/schemas/EngineVersion'
                PackageVendingOptions:
                  $ref: '#/components/schemas/PackageVendingOptions'
                PackageEncryptionOptions:
                  $ref: '#/components/schemas/PackageEncryptionOptions'
      responses:
        '200': {}
        '403':
          description: |-
            An error occurred because you don't have permissions to access the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            Request processing failed because of an unknown error, exception, or internal failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '409':
          description: |-
            An exception for creating a resource that already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
  /2021-01-01/opensearch/vpcEndpoints:
    post:
      operationId: CreateVpcEndpoint
      description: |-
        Creates an Amazon OpenSearch Service-managed VPC endpoint.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                DomainArn:
                  $ref: '#/components/schemas/DomainArn'
                VpcOptions:
                  $ref: '#/components/schemas/VPCOptions'
                ClientToken:
                  $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '400':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '409':
          description: |-
            An exception for trying to create more than the allowed number of resources or sub-resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '500':
          description: |-
            Request processing failed because of an unknown error, exception, or internal failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
    get:
      operationId: ListVpcEndpoints
      description: |-
        Retrieves all Amazon OpenSearch Service-managed VPC endpoints in the current Amazon Web Services account and Region.
      parameters:
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '400':
          description: |-
            An error occurred while processing the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
        '409':
          description: |-
            An error occured because the client wanted to access an unsupported operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisabledOperationException'
        '500':
          description: |-
            Request processing failed because of an unknown error, exception, or internal failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
  /2021-01-01/opensearch/application/{id}:
    delete:
      operationId: DeleteApplication
      description: |-
        Deletes a specified OpenSearch application.
      parameters:
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Id'
      responses:
        '200': {}
        '403':
          description: |-
            An error occurred because you don't have permissions to access the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '409':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '500':
          description: |-
            Request processing failed because of an unknown error, exception, or internal failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
    get:
      operationId: GetApplication
      description: |-
        Retrieves the configuration and status of an existing OpenSearch application.
      parameters:
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Id'
      responses:
        '200': {}
        '403':
          description: |-
            An error occurred because you don't have permissions to access the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '409':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '500':
          description: |-
            Request processing failed because of an unknown error, exception, or internal failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
    put:
      operationId: UpdateApplication
      description: |-
        Updates the configuration and settings of an existing OpenSearch application.
      parameters:
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                dataSources:
                  $ref: '#/components/schemas/DataSources'
                appConfigs:
                  $ref: '#/components/schemas/AppConfigs'
      responses:
        '200': {}
        '403':
          description: |-
            An error occurred because you don't have permissions to access the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '409':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '500':
          description: |-
            Request processing failed because of an unknown error, exception, or internal failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
  /2021-01-01/opensearch/domain/{DomainName}/dataSource/{Name}:
    delete:
      operationId: DeleteDataSource
      description: |-
        Deletes a direct-query data source. For more information, see [Deleting an Amazon OpenSearch Service data source with Amazon S3](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/direct-query-s3-delete.html).
      parameters:
      - name: DomainName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DomainName'
      - name: Name
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DataSourceName'
      responses:
        '200': {}
        '400':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '424':
          description: |-
            An exception for when a failure in one of the dependencies results in the service being unable to fetch details about the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DependencyFailureException'
        '409':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '500':
          description: |-
            Request processing failed because of an unknown error, exception, or internal failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
    get:
      operationId: GetDataSource
      description: |-
        Retrieves information about a direct query data source.
      parameters:
      - name: DomainName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DomainName'
      - name: Name
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DataSourceName'
      responses:
        '200': {}
        '400':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '424':
          description: |-
            An exception for when a failure in one of the dependencies results in the service being unable to fetch details about the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DependencyFailureException'
        '409':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '500':
          description: |-
            Request processing failed because of an unknown error, exception, or internal failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
    put:
      operationId: UpdateDataSource
      description: |-
        Updates a direct-query data source. For more information, see [Working with Amazon OpenSearch Service data source integrations with Amazon S3](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/direct-query-s3-creating.html).
      parameters:
      - name: DomainName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DomainName'
      - name: Name
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DataSourceName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                DataSourceType:
                  $ref: '#/components/schemas/DataSourceType'
                Description:
                  $ref: '#/components/schemas/DataSourceDescription'
                Status:
                  $ref: '#/components/schemas/DataSourceStatus'
      responses:
        '200': {}
        '400':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '424':
          description: |-
            An exception for when a failure in one of the dependencies results in the service being unable to fetch details about the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DependencyFailureException'
        '409':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '500':
          description: |-
            Request processing failed because of an unknown error, exception, or internal failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
  /2021-01-01/opensearch/directQueryDataSource/{DataSourceName}:
    delete:
      operationId: DeleteDirectQueryDataSource
      description: |-
        Deletes a previously configured direct query data source from Amazon OpenSearch Service.
      parameters:
      - name: DataSourceName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DirectQueryDataSourceName'
      responses:
        '200': {}
        '400':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '409':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '500':
          description: |-
            Request processing failed because of an unknown error, exception, or internal failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
    get:
      operationId: GetDirectQueryDataSource
      description: |-
        Returns detailed configuration information for a specific direct query data source in Amazon OpenSearch Service.
      parameters:
      - name: DataSourceName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DirectQueryDataSourceName'
      responses:
        '200': {}
        '400':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '409':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '500':
          description: |-
            Request processing failed because of an unknown error, exception, or internal failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
    put:
      operationId: UpdateDirectQueryDataSource
      description: |-
        Updates the configuration or properties of an existing direct query data source in Amazon OpenSearch Service.
      parameters:
      - name: DataSourceName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DirectQueryDataSourceName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                DataSourceType:
                  $ref: '#/components/schemas/DirectQueryDataSourceType'
                Description:
                  $ref: '#/components/schemas/DirectQueryDataSourceDescription'
                OpenSearchArns:
                  $ref: '#/components/schemas/DirectQueryOpenSearchARNList'
      responses:
        '200': {}
        '400':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '409':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '500':
          description: |-
            Request processing failed because of an unknown error, exception, or internal failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
  /2021-01-01/opensearch/domain/{DomainName}:
    delete:
      operationId: DeleteDomain
      description: |-
        Deletes an Amazon OpenSearch Service domain and all of its data. You can't recover a domain after you delete it.
      parameters:
      - name: DomainName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DomainName'
      responses:
        '200': {}
        '400':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            Request processing failed because of an unknown error, exception, or internal failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '409':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
    get:
      operationId: DescribeDomain
      description: |-
        Describes the domain configuration for the specified Amazon OpenSearch Service domain, including the domain ID, domain service endpoint, and domain ARN.
      parameters:
      - name: DomainName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DomainName'
      responses:
        '200': {}
        '400':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            Request processing failed because of an unknown error, exception, or internal failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '409':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /2021-01-01/opensearch/cc/inboundConnection/{ConnectionId}:
    delete:
      operationId: DeleteInboundConnection
      description: |-
        Allows the destination Amazon OpenSearch Service domain owner to delete an existing inbound cross-cluster search connection. For more information, see [Cross-cluster search for Amazon OpenSearch Service](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/cross-cluster-search.html).
      parameters:
      - name: ConnectionId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ConnectionId'
      responses:
        '200': {}
        '409':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /2021-01-01/opensearch/cc/outboundConnection/{ConnectionId}:
    delete:
      operationId: DeleteOutboundConnection
      description: |-
        Allows the source Amazon OpenSearch Service domain owner to delete an existing outbound cross-cluster search connection. For more information, see [Cross-cluster search for Amazon OpenSearch Service](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/cross-cluster-search.html).
      parameters:
      - name: ConnectionId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ConnectionId'
      responses:
        '200': {}
        '409':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /2021-01-01/packages/{PackageID}:
    delete:
      operationId: DeletePackage
      description: |-
        Deletes an Amazon OpenSearch Service package. For more information, see [Custom packages for Amazon OpenSearch Service](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/custom-packages.html).
      parameters:
      - name: PackageID
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PackageID'
      responses:
        '200': {}
        '403':
          description: |-
            An error occurred because you don't have permissions to access the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '409':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '500':
          description: |-
            Request processing failed because of an unknown error, exception, or internal failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
  /2021-01-01/opensearch/vpcEndpoints/{VpcEndpointId}:
    delete:
      operationId: DeleteVpcEndpoint
      description: |-
        Deletes an Amazon OpenSearch Service-managed interface VPC endpoint.
      parameters:
      - name: VpcEndpointId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/VpcEndpointId'
      responses:
        '200': {}
        '400':
          description: |-
            An error occurred while processing the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
        '409':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '500':
          description: |-
            Request processing failed because of an unknown error, exception, or internal failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
  /2021-01-01/opensearch/domain/{DomainName}/autoTunes:
    get:
      operationId: DescribeDomainAutoTunes
      description: |-
        Returns the list of optimizations that Auto-Tune has made to an Amazon OpenSearch Service domain. For more information, see [Auto-Tune for Amazon OpenSearch Service](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/auto-tune.html).
      parameters:
      - name: DomainName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DomainName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                MaxResults:
                  $ref: '#/components/schemas/MaxResults'
                NextToken:
                  $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '400':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            Request processing failed because of an unknown error, exception, or internal failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '409':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /2021-01-01/opensearch/domain/{DomainName}/progress:
    get:
      operationId: DescribeDomainChangeProgress
      description: |-
        Returns information about the current blue/green deployment happening on an Amazon OpenSearch Service domain. For more information, see [Making configuration changes in Amazon OpenSearch Service](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/managedomains-configuration-changes.html).
      parameters:
      - name: DomainName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DomainName'
      - name: changeid
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/GUID'
      responses:
        '200': {}
        '400':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            Request processing failed because of an unknown error, exception, or internal failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '409':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /2021-01-01/opensearch/domain/{DomainName}/config:
    get:
      operationId: DescribeDomainConfig
      description: |-
        Returns the configuration of an Amazon OpenSearch Service domain.
      parameters:
      - name: DomainName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DomainName'
      responses:
        '200': {}
        '400':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            Request processing failed because of an unknown error, exception, or internal failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '409':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
    post:
      operationId: UpdateDomainConfig
      description: |-
        Modifies the cluster configuration of the specified Amazon OpenSearch Service domain.
      parameters:
      - name: DomainName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DomainName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ClusterConfig:
                  $ref: '#/components/schemas/ClusterConfig'
                EBSOptions:
                  $ref: '#/components/schemas/EBSOptions'
                SnapshotOptions:
                  $ref: '#/components/schemas/SnapshotOptions'
                VPCOptions:
                  $ref: '#/components/schemas/VPCOptions'
                CognitoOptions:
                  $ref: '#/components/schemas/CognitoOptions'
                AdvancedOptions:
                  $ref: '#/components/schemas/AdvancedOptions'
                AccessPolicies:
                  $ref: '#/components/schemas/PolicyDocument'
                IPAddressType:
                  $ref: '#/components/schemas/IPAddressType'
                LogPublishingOptions:
                  $ref: '#/components/schemas/LogPublishingOptions'
                EncryptionAtRestOptions:
                  $ref: '#/components/schemas/EncryptionAtRestOptions'
                DomainEndpointOptions:
                  $ref: '#/components/schemas/DomainEndpointOptions'
                NodeToNodeEncryptionOptions:
                  $ref: '#/components/schemas/NodeToNodeEncryptionOptions'
                AdvancedSecurityOptions:
                  $ref: '#/components/schemas/AdvancedSecurityOptionsInput'
                IdentityCenterOptions:
                  $ref: '#/components/schemas/IdentityCenterOptionsInput'
                AutoTuneOptions:
                  $ref: '#/components/schemas/AutoTuneOptions'
                DryRun:
                  $ref: '#/components/schemas/DryRun'
                DryRunMode:
                  $ref: '#/components/schemas/DryRunMode'
                OffPeakWindowOptions:
                  $ref: '#/components/schemas/OffPeakWindowOptions'
                SoftwareUpdateOptions:
                  $ref: '#/components/schemas/SoftwareUpdateOptions'
                AIMLOptions:
                  $ref: '#/components/schemas/AIMLOptionsInput'
      responses:
        '200': {}
        '400':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            Request processing failed because of an unknown error, exception, or internal failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '409':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /2021-01-01/opensearch/domain/{DomainName}/health:
    get:
      operationId: DescribeDomainHealth
      description: |-
        Returns information about domain and node health, the standby Availability Zone, number of nodes per Availability Zone, and shard count per node.
      parameters:
      - name: DomainName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DomainName'
      responses:
        '200': {}
        '400':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '409':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '500':
          description: |-
            Request processing failed because of an unknown error, exception, or internal failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
  /2021-01-01/opensearch/domain/{DomainName}/nodes:
    get:
      operationId: DescribeDomainNodes
      description: |-
        Returns information about domain and nodes, including data nodes, master nodes, ultrawarm nodes, Availability Zone(s), standby nodes, node configurations, and node states.
      parameters:
      - name: DomainName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DomainName'
      responses:
        '200': {}
        '400':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '424':
          description: |-
            An exception for when a failure in one of the dependencies results in the service being unable to fetch details about the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DependencyFailureException'
        '409':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '500':
          description: |-
            Request processing failed because of an unknown error, exception, or internal failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
  /2021-01-01/opensearch/domain-info:
    post:
      operationId: DescribeDomains
      description: |-
        Returns domain configuration information about the specified Amazon OpenSearch Service domains.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                DomainNames:
                  $ref: '#/components/schemas/DomainNameList'
      responses:
        '200': {}
        '400':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            Request processing failed because of an unknown error, exception, or internal failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
  /2021-01-01/opensearch/domain/{DomainName}/dryRun:
    get:
      operationId: DescribeDryRunProgress
      description: |-
        Describes the progress of a pre-update dry run analysis on an Amazon OpenSearch Service domain. For more information, see [Determining whether a change will cause a blue/green deployment](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/managedomains-configuration-changes#dryrun).
      parameters:
      - name: DomainName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DomainName'
      - name: dryRunId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/GUID'
      - name: loadDryRunConfig
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Boolean'
      responses:
        '200': {}
        '400':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '409':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '500':
          description: |-
            Request processing failed because of an unknown error, exception, or internal failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
  /2021-01-01/opensearch/cc/inboundConnection/search:
    post:
      operationId: DescribeInboundConnections
      description: |-
        Lists all the inbound cross-cluster search connections for a destination (remote) Amazon OpenSearch Service domain. For more information, see [Cross-cluster search for Amazon OpenSearch Service](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/cross-cluster-search.html).
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Filters:
                  $ref: '#/components/schemas/FilterList'
                MaxResults:
                  $ref: '#/components/schemas/MaxResults'
                NextToken:
                  $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '409':
          description: |-
            An error occured because the client wanted to access an unsupported operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisabledOperationException'
        '400':
          description: |-
            Request processing failed because you provided an invalid pagination token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidPaginationTokenException'
  /2021-01-01/opensearch/instanceTypeLimits/{EngineVersion}/{InstanceType}:
    get:
      operationId: DescribeInstanceTypeLimits
      description: |-
        Describes the instance count, storage, and master node limits for a given OpenSearch or Elasticsearch version and instance type.
      parameters:
      - name: domainName
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/DomainName'
      - name: InstanceType
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/OpenSearchPartitionInstanceType'
      - name: EngineVersion
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/VersionString'
      responses:
        '200': {}
        '400':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            Request processing failed because of an unknown error, exception, or internal failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '409':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /2021-01-01/opensearch/cc/outboundConnection/search:
    post:
      operationId: DescribeOutboundConnections
      description: |-
        Lists all the outbound cross-cluster connections for a local (source) Amazon OpenSearch Service domain. For more information, see [Cross-cluster search for Amazon OpenSearch Service](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/cross-cluster-search.html).
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Filters:
                  $ref: '#/components/schemas/FilterList'
                MaxResults:
                  $ref: '#/components/schemas/MaxResults'
                NextToken:
                  $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '409':
          description: |-
            An error occured because the client wanted to access an unsupported operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisabledOperationException'
        '400':
          description: |-
            Request processing failed because you provided an invalid pagination token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidPaginationTokenException'
  /2021-01-01/packages/describe:
    post:
      operationId: DescribePackages
      description: |-
        Describes all packages available to OpenSearch Service. For more information, see [Custom packages for Amazon OpenSearch Service](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/custom-packages.html).
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Filters:
                  $ref: '#/components/schemas/DescribePackagesFilterList'
                MaxResults:
                  $ref: '#/components/schemas/MaxResults'
                NextToken:
                  $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '403':
          description: |-
            An error occurred because you don't have permissions to access the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            Request processing failed because of an unknown error, exception, or internal failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '409':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /2021-01-01/opensearch/reservedInstanceOfferings:
    get:
      operationId: DescribeReservedInstanceOfferings
      description: |-
        Describes the available Amazon OpenSearch Service Reserved Instance offerings for a given Region. For more information, see [Reserved Instances in Amazon OpenSearch Service](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/ri.html).
      parameters:
      - name: offeringId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/GUID'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '409':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '500':
          description: |-
            Request processing failed because of an unknown error, exception, or internal failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '400':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /2021-01-01/opensearch/reservedInstances:
    get:
      operationId: DescribeReservedInstances
      description: |-
        Describes the Amazon OpenSearch Service instances that you have reserved in a given Region. For more information, see [Reserved Instances in Amazon OpenSearch Service](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/ri.html).
      parameters:
      - name: reservationId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/GUID'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '409':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '500':
          description: |-
            Request processing failed because of an unknown error, exception, or internal failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '400':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /2021-01-01/opensearch/vpcEndpoints/describe:
    post:
      operationId: DescribeVpcEndpoints
      description: |-
        Describes one or more Amazon OpenSearch Service-managed VPC endpoints.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                VpcEndpointIds:
                  $ref: '#/components/schemas/VpcEndpointIdList'
      responses:
        '200': {}
        '400':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '409':
          description: |-
            An error occured because the client wanted to access an unsupported operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisabledOperationException'
        '500':
          description: |-
            Request processing failed because of an unknown error, exception, or internal failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
  /2021-01-01/packages/dissociate/{PackageID}/{DomainName}:
    post:
      operationId: DissociatePackage
      description: |-
        Removes a package from the specified Amazon OpenSearch Service domain. The package can't be in use with any OpenSearch index for the dissociation to succeed. The package is still available in OpenSearch Service for association later. For more information, see [Custom packages for Amazon OpenSearch Service](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/custom-packages.html).
      parameters:
      - name: PackageID
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PackageID'
      - name: DomainName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DomainName'
      responses:
        '200': {}
        '403':
          description: |-
            An error occurred because you don't have permissions to access the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '409':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '500':
          description: |-
            Request processing failed because of an unknown error, exception, or internal failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
  /2021-01-01/packages/dissociateMultiple:
    post:
      operationId: DissociatePackages
      description: |-
        Dissociates multiple packages from a domain simulatneously.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                PackageList:
                  $ref: '#/components/schemas/PackageIDList'
                DomainName:
                  $ref: '#/components/schemas/DomainName'
      responses:
        '200': {}
        '400':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '409':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '500':
          description: |-
            Request processing failed because of an unknown error, exception, or internal failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
  /2021-01-01/opensearch/compatibleVersions:
    get:
      operationId: GetCompatibleVersions
      description: |-
        Returns a map of OpenSearch or Elasticsearch versions and the versions you can upgrade them to.
      parameters:
      - name: domainName
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/DomainName'
      responses:
        '200': {}
        '400':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '409':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '500':
          description: |-
            Request processing failed because of an unknown error, exception, or internal failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
  /2021-01-01/opensearch/domain/{DomainName}/domainMaintenance:
    get:
      operationId: GetDomainMaintenanceStatus
      description: |-
        The status of the maintenance action.
      parameters:
      - name: DomainName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DomainName'
      - name: maintenanceId
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/RequestId'
      responses:
        '200': {}
        '400':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '409':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '500':
          description: |-
            Request processing failed because of an unknown error, exception, or internal failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
    post:
      operationId: StartDomainMaintenance
      description: |-
        Starts the node maintenance process on the data node. These processes can include a node reboot, an Opensearch or Elasticsearch process restart, or a Dashboard or Kibana restart.
      parameters:
      - name: DomainName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DomainName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Action:
                  $ref: '#/components/schemas/MaintenanceType'
                NodeId:
                  $ref: '#/components/schemas/NodeId'
      responses:
        '200': {}
        '400':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '409':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '500':
          description: |-
            Request processing failed because of an unknown error, exception, or internal failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
  /2021-01-01/packages/{PackageID}/history:
    get:
      operationId: GetPackageVersionHistory
      description: |-
        Returns a list of Amazon OpenSearch Service package versions, along with their creation time, commit message, and plugin properties (if the package is a zip plugin package). For more information, see [Custom packages for Amazon OpenSearch Service](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/custom-packages.html).
      parameters:
      - name: PackageID
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PackageID'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '403':
          description: |-
            An error occurred because you don't have permissions to access the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            Request processing failed because of an unknown error, exception, or internal failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '409':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /2021-01-01/opensearch/upgradeDomain/{DomainName}/history:
    get:
      operationId: GetUpgradeHistory
      description: |-
        Retrieves the complete history of the last 10 upgrades performed on an Amazon OpenSearch Service domain.
      parameters:
      - name: DomainName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DomainName'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '400':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '409':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '500':
          description: |-
            Request processing failed because of an unknown error, exception, or internal failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
  /2021-01-01/opensearch/upgradeDomain/{DomainName}/status:
    get:
      operationId: GetUpgradeStatus
      description: |-
        Returns the most recent status of the last upgrade or upgrade eligibility check performed on an Amazon OpenSearch Service domain.
      parameters:
      - name: DomainName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DomainName'
      responses:
        '200': {}
        '400':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '409':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '500':
          description: |-
            Request processing failed because of an unknown error, exception, or internal failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
  /2021-01-01/opensearch/list-applications:
    get:
      operationId: ListApplications
      description: |-
        Lists all OpenSearch applications under your account.
      parameters:
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: statuses
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ApplicationStatuses'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            An error occurred because you don't have permissions to access the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '409':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '500':
          description: |-
            Request processing failed because of an unknown error, exception, or internal failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
  /2021-01-01/opensearch/domain/{DomainName}/domainMaintenances:
    get:
      operationId: ListDomainMaintenances
      description: |-
        A list of maintenance actions for the domain.
      parameters:
      - name: DomainName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DomainName'
      - name: action
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaintenanceType'
      - name: status
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaintenanceStatus'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '400':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '409':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '500':
          description: |-
            Request processing failed because of an unknown error, exception, or internal failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
  /2021-01-01/domain:
    get:
      operationId: ListDomainNames
      description: |-
        Returns the names of all Amazon OpenSearch Service domains owned by the current user in the active Region.
      parameters:
      - name: engineType
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/EngineType'
      responses:
        '200': {}
        '400':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /2021-01-01/packages/{PackageID}/domains:
    get:
      operationId: ListDomainsForPackage
      description: |-
        Lists all Amazon OpenSearch Service domains associated with a given package. For more information, see [Custom packages for Amazon OpenSearch Service](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/custom-packages.html).
      parameters:
      - name: PackageID
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PackageID'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '403':
          description: |-
            An error occurred because you don't have permissions to access the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            Request processing failed because of an unknown error, exception, or internal failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '409':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /2021-01-01/opensearch/instanceTypeDetails/{EngineVersion}:
    get:
      operationId: ListInstanceTypeDetails
      description: |-
        Lists all instance types and available features for a given OpenSearch or Elasticsearch version.
      parameters:
      - name: EngineVersion
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/VersionString'
      - name: domainName
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/DomainName'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: retrieveAZs
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Boolean'
      - name: instanceType
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/InstanceTypeString'
      responses:
        '200': {}
        '400':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            Request processing failed because of an unknown error, exception, or internal failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '409':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /2021-01-01/domain/{DomainName}/packages:
    get:
      operationId: ListPackagesForDomain
      description: |-
        Lists all packages associated with an Amazon OpenSearch Service domain. For more information, see [Custom packages for Amazon OpenSearch Service](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/custom-packages.html).
      parameters:
      - name: DomainName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DomainName'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '403':
          description: |-
            An error occurred because you don't have permissions to access the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            Request processing failed because of an unknown error, exception, or internal failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '409':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /2021-01-01/opensearch/domain/{DomainName}/scheduledActions:
    get:
      operationId: ListScheduledActions
      description: |-
        Retrieves a list of configuration changes that are scheduled for a domain. These changes can be [service software updates](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/service-software.html) or [blue/green Auto-Tune enhancements](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/auto-tune.html#auto-tune-types).
      parameters:
      - name: DomainName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DomainName'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '400':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            Request processing failed because of an unknown error, exception, or internal failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '409':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /2021-01-01/opensearch/versions:
    get:
      operationId: ListVersions
      description: |-
        Lists all versions of OpenSearch and Elasticsearch that Amazon OpenSearch Service supports.
      parameters:
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '400':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            Request processing failed because of an unknown error, exception, or internal failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '409':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /2021-01-01/opensearch/domain/{DomainName}/listVpcEndpointAccess:
    get:
      operationId: ListVpcEndpointAccess
      description: |-
        Retrieves information about each Amazon Web Services principal that is allowed to access a given Amazon OpenSearch Service domain through the use of an interface VPC endpoint.
      parameters:
      - name: DomainName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DomainName'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '400':
          description: |-
            An error occurred while processing the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
        '409':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '500':
          description: |-
            Request processing failed because of an unknown error, exception, or internal failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
  /2021-01-01/opensearch/domain/{DomainName}/vpcEndpoints:
    get:
      operationId: ListVpcEndpointsForDomain
      description: |-
        Retrieves all Amazon OpenSearch Service-managed VPC endpoints associated with a particular domain.
      parameters:
      - name: DomainName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DomainName'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '400':
          description: |-
            An error occurred while processing the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseException'
        '409':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '500':
          description: |-
            Request processing failed because of an unknown error, exception, or internal failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
  /2021-01-01/opensearch/purchaseReservedInstanceOffering:
    post:
      operationId: PurchaseReservedInstanceOffering
      description: |-
        Allows you to purchase Amazon OpenSearch Service Reserved Instances.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ReservedInstanceOfferingId:
                  $ref: '#/components/schemas/GUID'
                ReservationName:
                  $ref: '#/components/schemas/ReservationToken'
                InstanceCount:
                  $ref: '#/components/schemas/InstanceCount'
      responses:
        '200': {}
        '409':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '500':
          description: |-
            Request processing failed because of an unknown error, exception, or internal failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '400':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /2021-01-01/opensearch/cc/inboundConnection/{ConnectionId}/reject:
    put:
      operationId: RejectInboundConnection
      description: |-
        Allows the remote Amazon OpenSearch Service domain owner to reject an inbound cross-cluster connection request.
      parameters:
      - name: ConnectionId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ConnectionId'
      responses:
        '200': {}
        '409':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /2021-01-01/tags-removal:
    post:
      operationId: RemoveTags
      description: |-
        Removes the specified set of tags from an Amazon OpenSearch Service domain, data source, or application. For more information, see [ Tagging Amazon OpenSearch Service resources](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/managedomains.html#managedomains-awsresorcetagging).
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ARN:
                  $ref: '#/components/schemas/ARN'
                TagKeys:
                  $ref: '#/components/schemas/StringList'
      responses:
        '200': {}
        '400':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            Request processing failed because of an unknown error, exception, or internal failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
  /2021-01-01/opensearch/domain/{DomainName}/revokeVpcEndpointAccess:
    post:
      operationId: RevokeVpcEndpointAccess
      description: |-
        Revokes access to an Amazon OpenSearch Service domain that was provided through an interface VPC endpoint.
      parameters:
      - name: DomainName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DomainName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Account:
                  $ref: '#/components/schemas/AWSAccount'
                Service:
                  $ref: '#/components/schemas/AWSServicePrincipal'
      responses:
        '200': {}
        '400':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '409':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '500':
          description: |-
            Request processing failed because of an unknown error, exception, or internal failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
  /2021-01-01/opensearch/serviceSoftwareUpdate/start:
    post:
      operationId: StartServiceSoftwareUpdate
      description: |-
        Schedules a service software update for an Amazon OpenSearch Service domain. For more information, see [Service software updates in Amazon OpenSearch Service](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/service-software.html).
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                DomainName:
                  $ref: '#/components/schemas/DomainName'
                ScheduleAt:
                  $ref: '#/components/schemas/ScheduleAt'
                DesiredStartTime:
                  $ref: '#/components/schemas/Long'
      responses:
        '200': {}
        '400':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            Request processing failed because of an unknown error, exception, or internal failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '409':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /2021-01-01/packages/update:
    post:
      operationId: UpdatePackage
      description: |-
        Updates a package for use with Amazon OpenSearch Service domains. For more information, see [Custom packages for Amazon OpenSearch Service](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/custom-packages.html).
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                PackageID:
                  $ref: '#/components/schemas/PackageID'
                PackageSource:
                  $ref: '#/components/schemas/PackageSource'
                PackageDescription:
                  $ref: '#/components/schemas/PackageDescription'
                CommitMessage:
                  $ref: '#/components/schemas/CommitMessage'
                PackageConfiguration:
                  $ref: '#/components/schemas/PackageConfiguration'
                PackageEncryptionOptions:
                  $ref: '#/components/schemas/PackageEncryptionOptions'
      responses:
        '200': {}
        '403':
          description: |-
            An error occurred because you don't have permissions to access the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            Request processing failed because of an unknown error, exception, or internal failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '409':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /2021-01-01/packages/updateScope:
    post:
      operationId: UpdatePackageScope
      description: |-
        Updates the scope of a package. Scope of the package defines users who can view and associate a package.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                PackageID:
                  $ref: '#/components/schemas/PackageID'
                Operation:
                  $ref: '#/components/schemas/PackageScopeOperationEnum'
                PackageUserList:
                  $ref: '#/components/schemas/PackageUserList'
      responses:
        '200': {}
        '400':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '409':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '500':
          description: |-
            Request processing failed because of an unknown error, exception, or internal failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
  /2021-01-01/opensearch/domain/{DomainName}/scheduledAction/update:
    put:
      operationId: UpdateScheduledAction
      description: |-
        Reschedules a planned domain configuration change for a later time. This change can be a scheduled [service software update](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/service-software.html) or a [blue/green Auto-Tune enhancement](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/auto-tune.html#auto-tune-types).
      parameters:
      - name: DomainName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DomainName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ActionID:
                  $ref: '#/components/schemas/String'
                ActionType:
                  $ref: '#/components/schemas/ActionType'
                ScheduleAt:
                  $ref: '#/components/schemas/ScheduleAt'
                DesiredStartTime:
                  $ref: '#/components/schemas/Long'
      responses:
        '200': {}
        '400':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '409':
          description: |-
            An exception for attempting to schedule a domain action during an unavailable time slot.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SlotNotAvailableException'
        '500':
          description: |-
            Request processing failed because of an unknown error, exception, or internal failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
  /2021-01-01/opensearch/vpcEndpoints/update:
    post:
      operationId: UpdateVpcEndpoint
      description: |-
        Modifies an Amazon OpenSearch Service-managed interface VPC endpoint.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                VpcEndpointId:
                  $ref: '#/components/schemas/VpcEndpointId'
                VpcOptions:
                  $ref: '#/components/schemas/VPCOptions'
      responses:
        '200': {}
        '400':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '409':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '500':
          description: |-
            Request processing failed because of an unknown error, exception, or internal failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
  /2021-01-01/opensearch/upgradeDomain:
    post:
      operationId: UpgradeDomain
      description: |-
        Allows you to either upgrade your Amazon OpenSearch Service domain or perform an upgrade eligibility check to a compatible version of OpenSearch or Elasticsearch.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                DomainName:
                  $ref: '#/components/schemas/DomainName'
                TargetVersion:
                  $ref: '#/components/schemas/VersionString'
                PerformCheckOnly:
                  $ref: '#/components/schemas/Boolean'
                AdvancedOptions:
                  $ref: '#/components/schemas/AdvancedOptions'
      responses:
        '200': {}
        '400':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '409':
          description: |-
            An exception for accessing or deleting a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '500':
          description: |-
            Request processing failed because of an unknown error, exception, or internal failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
components:
  schemas:
    AIMLOptionsInput:
      type: object
      properties:
        NaturalLanguageQueryGenerationOptions:
          allOf:
          - $ref: '#/components/schemas/NaturalLanguageQueryGenerationOptionsInput'
          description: Container for parameters required for natural language query
            generation on the specified domain.
      description: Container for parameters required to enable all machine learning
        features.
    AIMLOptionsOutput:
      type: object
      properties:
        NaturalLanguageQueryGenerationOptions:
          allOf:
          - $ref: '#/components/schemas/NaturalLanguageQueryGenerationOptionsOutput'
          description: Container for parameters required for natural language query
            generation on the specified domain.
      description: Container for parameters representing the state of machine learning
        features on the specified domain.
    AIMLOptionsStatus:
      type: object
      properties:
        Options:
          allOf:
          - $ref: '#/components/schemas/AIMLOptionsOutput'
          description: Machine learning options on the specified domain.
        Status:
          $ref: '#/components/schemas/OptionStatus'
      description: The status of machine learning options on the specified domain.
    ARN:
      type: string
      pattern: .*
      minLength: 20
      maxLength: 2048
    AWSAccount:
      type: string
      pattern: ^[0-9]+$
    AWSDomainInformation:
      type: object
      properties:
        OwnerId:
          allOf:
          - $ref: '#/components/schemas/OwnerId'
          description: The Amazon Web Services account ID of the domain owner.
        DomainName:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          description: Name of the domain.
        Region:
          allOf:
          - $ref: '#/components/schemas/Region'
          description: The Amazon Web Services Region in which the domain is located.
      required:
      - DomainName
      description: Information about an Amazon OpenSearch Service domain.
    AWSServicePrincipal:
      type: string
      enum:
      - application.opensearchservice.amazonaws.com
    AcceptInboundConnectionRequest:
      type: object
      properties:
        ConnectionId:
          allOf:
          - $ref: '#/components/schemas/ConnectionId'
          description: The ID of the inbound connection to accept.
      required:
      - ConnectionId
      description: Container for the parameters to the `AcceptInboundConnection` operation.
    AcceptInboundConnectionResponse:
      type: object
      properties:
        Connection:
          allOf:
          - $ref: '#/components/schemas/InboundConnection'
          description: Information about the accepted inbound connection.
      description: Contains details about the accepted inbound connection.
    AccessDeniedException:
      type: object
      properties:
        message:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage'
          description: A description of the error.
      description: An error occurred because you don't have permissions to access
        the resource.
    AccessPoliciesStatus:
      type: object
      properties:
        Options:
          allOf:
          - $ref: '#/components/schemas/PolicyDocument'
          description: The access policy configured for the domain. Access policies
            can be resource-based, IP-based, or IAM-based. For more information, see
            [Configuring access policies](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html#createdomain-configure-access-policies).
        Status:
          allOf:
          - $ref: '#/components/schemas/OptionStatus'
          description: The status of the access policy for the domain.
      required:
      - Options
      - Status
      description: The configured access rules for the domain's search endpoint, and
        the current status of those rules.
    ActionSeverity:
      type: string
      enum:
      - HIGH
      - MEDIUM
      - LOW
    ActionStatus:
      type: string
      enum:
      - PENDING_UPDATE
      - IN_PROGRESS
      - FAILED
      - COMPLETED
      - NOT_ELIGIBLE
      - ELIGIBLE
    ActionType:
      type: string
      enum:
      - SERVICE_SOFTWARE_UPDATE
      - JVM_HEAP_SIZE_TUNING
      - JVM_YOUNG_GEN_TUNING
    AddDataSourceRequest:
      type: object
      properties:
        DomainName:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          description: The name of the domain to add the data source to.
        Name:
          allOf:
          - $ref: '#/components/schemas/DataSourceName'
          description: A name for the data source.
        DataSourceType:
          allOf:
          - $ref: '#/components/schemas/DataSourceType'
          description: The type of data source.
        Description:
          allOf:
          - $ref: '#/components/schemas/DataSourceDescription'
          description: A description of the data source.
      required:
      - DomainName
      - Name
      - DataSourceType
      description: Container for the parameters to the `AddDataSource` operation.
    AddDataSourceResponse:
      type: object
      properties:
        Message:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A message associated with creation of the data source.
      description: The result of an `AddDataSource` operation.
    AddDirectQueryDataSourceRequest:
      type: object
      properties:
        DataSourceName:
          allOf:
          - $ref: '#/components/schemas/DirectQueryDataSourceName'
          description: A unique, user-defined label to identify the data source within
            your OpenSearch Service environment.
        DataSourceType:
          allOf:
          - $ref: '#/components/schemas/DirectQueryDataSourceType'
          description: The supported Amazon Web Services service that you want to
            use as the source for direct queries in OpenSearch Service.
        Description:
          allOf:
          - $ref: '#/components/schemas/DirectQueryDataSourceDescription'
          description: An optional text field for providing additional context and
            details about the data source.
        OpenSearchArns:
          allOf:
          - $ref: '#/components/schemas/DirectQueryOpenSearchARNList'
          description: A list of Amazon Resource Names (ARNs) for the OpenSearch collections
            that are associated with the direct query data source.
        TagList:
          $ref: '#/components/schemas/TagList'
      required:
      - DataSourceName
      - DataSourceType
      - OpenSearchArns
    AddDirectQueryDataSourceResponse:
      type: object
      properties:
        DataSourceArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique, system-generated identifier that represents the
            data source.
    AddTagsRequest:
      type: object
      properties:
        ARN:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: Amazon Resource Name (ARN) for the OpenSearch Service domain,
            data source, or application to which you want to attach resource tags.
        TagList:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: List of resource tags.
      required:
      - ARN
      - TagList
      description: Container for the parameters to the `AddTags` operation. Specifies
        the tags to attach to the domain, data source, or application.
    AdditionalLimit:
      type: object
      properties:
        LimitName:
          allOf:
          - $ref: '#/components/schemas/LimitName'
          description: "* `MaximumNumberOfDataNodesSupported` \\- This attribute only\
            \ applies to master nodes and specifies the maximum number of data nodes\
            \ of a given instance type a master node can support.\n\n  * `MaximumNumberOfDataNodesWithoutMasterNode`\
            \ \\- This attribute only applies to data nodes and specifies the maximum\
            \ number of data nodes of a given instance type can exist without a master\
            \ node governing them."
        LimitValues:
          allOf:
          - $ref: '#/components/schemas/LimitValueList'
          description: The values of the additional instance type limits.
      description: List of limits that are specific to a given instance type.
    AdditionalLimitList:
      type: array
      items:
        $ref: '#/components/schemas/AdditionalLimit'
    AdvancedOptions:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/String'
      description: "<p>Exposes native OpenSearch configuration values from <code>opensearch.yml</code>.\
        \ The\n   following advanced options are available: </p>\n         <ul>\n\
        \            <li>\n               <p>Allows references to indexes in an HTTP\
        \ request body. Must be <code>false</code> when\n     configuring access to\
        \ individual sub-resources. Default is <code>true</code>.</p>\n          \
        \  </li>\n            <li>\n               <p>Specifies the percentage of\
        \ heap space allocated to field data. Default is\n     unbounded.</p>\n  \
        \          </li>\n         </ul>\n         <p>For more information, see <a\
        \ href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html#createdomain-configure-advanced-options\"\
        >Advanced cluster parameters</a>.</p>"
    AdvancedOptionsStatus:
      type: object
      properties:
        Options:
          allOf:
          - $ref: '#/components/schemas/AdvancedOptions'
          description: The status of advanced options for the specified domain.
        Status:
          allOf:
          - $ref: '#/components/schemas/OptionStatus'
          description: The status of advanced options for the specified domain.
      required:
      - Options
      - Status
      description: "Status of the advanced options for the specified domain. The following\
        \ options are available:\n\n  * `\"rest.action.multi.allow_explicit_index\"\
        : \"true\" | \"false\"` \\- Note the use of a string rather than a boolean.\
        \ Specifies whether explicit references to indexes are allowed inside the\
        \ body of HTTP requests. If you want to configure access policies for domain\
        \ sub-resources, such as specific indexes and domain APIs, you must disable\
        \ this property. Default is true.\n\n  * `\"indices.fielddata.cache.size\"\
        : \"80\" ` \\- Note the use of a string rather than a boolean. Specifies the\
        \ percentage of heap space allocated to field data. Default is unbounded.\n\
        \n  * `\"indices.query.bool.max_clause_count\": \"1024\"` \\- Note the use\
        \ of a string rather than a boolean. Specifies the maximum number of clauses\
        \ allowed in a Lucene boolean query. Default is 1,024. Queries with more than\
        \ the permitted number of clauses result in a `TooManyClauses` error.\n\n\
        \  * `\"override_main_response_version\": \"true\" | \"false\"` \\- Note the\
        \ use of a string rather than a boolean. Specifies whether the domain reports\
        \ its version as 7.10 to allow Elasticsearch OSS clients and plugins to continue\
        \ working with it. Default is false when creating a domain and true when upgrading\
        \ a domain.\n\nFor more information, see [Advanced cluster parameters](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html#createdomain-configure-advanced-options)."
    AdvancedSecurityOptions:
      type: object
      properties:
        Enabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: True if fine-grained access control is enabled.
        InternalUserDatabaseEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: True if the internal user database is enabled.
        SAMLOptions:
          allOf:
          - $ref: '#/components/schemas/SAMLOptionsOutput'
          description: Container for information about the SAML configuration for
            OpenSearch Dashboards.
        JWTOptions:
          allOf:
          - $ref: '#/components/schemas/JWTOptionsOutput'
          description: Container for information about the JWT configuration of the
            Amazon OpenSearch Service.
        AnonymousAuthDisableDate:
          allOf:
          - $ref: '#/components/schemas/DisableTimestamp'
          description: Date and time when the migration period will be disabled. Only
            necessary when [enabling fine-grained access control on an existing domain](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/fgac.html#fgac-enabling-existing).
        AnonymousAuthEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: True if a 30-day migration period is enabled, during which
            administrators can create role mappings. Only necessary when [enabling
            fine-grained access control on an existing domain](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/fgac.html#fgac-enabling-existing).
      description: Container for fine-grained access control settings.
    AdvancedSecurityOptionsInput:
      type: object
      properties:
        Enabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: True to enable fine-grained access control.
        InternalUserDatabaseEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: True to enable the internal user database.
        MasterUserOptions:
          allOf:
          - $ref: '#/components/schemas/MasterUserOptions'
          description: Container for information about the master user.
        SAMLOptions:
          allOf:
          - $ref: '#/components/schemas/SAMLOptionsInput'
          description: Container for information about the SAML configuration for
            OpenSearch Dashboards.
        JWTOptions:
          allOf:
          - $ref: '#/components/schemas/JWTOptionsInput'
          description: Container for information about the JWT configuration of the
            Amazon OpenSearch Service.
        AnonymousAuthEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: True to enable a 30-day migration period during which administrators
            can create role mappings. Only necessary when [enabling fine-grained access
            control on an existing domain](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/fgac.html#fgac-enabling-existing).
      description: Options for enabling and configuring fine-grained access control.
        For more information, see [Fine-grained access control in Amazon OpenSearch
        Service](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/fgac.html).
    AdvancedSecurityOptionsStatus:
      type: object
      properties:
        Options:
          allOf:
          - $ref: '#/components/schemas/AdvancedSecurityOptions'
          description: Container for fine-grained access control settings.
        Status:
          allOf:
          - $ref: '#/components/schemas/OptionStatus'
          description: Status of the fine-grained access control settings for a domain.
      required:
      - Options
      - Status
      description: The status of fine-grained access control settings for a domain.
    AppConfig:
      type: object
      properties:
        key:
          allOf:
          - $ref: '#/components/schemas/AppConfigType'
          description: The configuration item to set, such as the admin role for the
            OpenSearch application.
        value:
          allOf:
          - $ref: '#/components/schemas/AppConfigValue'
          description: The value assigned to the configuration key, such as an IAM
            user ARN.
      description: Configuration settings for an OpenSearch application. For more
        information, see see [Using the OpenSearch user interface in Amazon OpenSearch
        Service](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/application.html).
    AppConfigType:
      type: string
      enum:
      - opensearchDashboards.dashboardAdmin.users
      - opensearchDashboards.dashboardAdmin.groups
    AppConfigValue:
      type: string
      minLength: 1
      maxLength: 4096
    AppConfigs:
      type: array
      items:
        $ref: '#/components/schemas/AppConfig'
    ApplicationName:
      type: string
      pattern: ^[a-z][a-z0-9\-]+$
      minLength: 3
      maxLength: 30
    ApplicationStatus:
      type: string
      enum:
      - CREATING
      - UPDATING
      - DELETING
      - ACTIVE
      - FAILED
    ApplicationStatuses:
      type: array
      items:
        $ref: '#/components/schemas/ApplicationStatus'
    ApplicationSummaries:
      type: array
      items:
        $ref: '#/components/schemas/ApplicationSummary'
    ApplicationSummary:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/Id'
          description: The unique identifier of an OpenSearch application.
        arn:
          $ref: '#/components/schemas/ARN'
        name:
          allOf:
          - $ref: '#/components/schemas/ApplicationName'
          description: The name of an OpenSearch application.
        endpoint:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The endpoint URL of an OpenSearch application.
        status:
          allOf:
          - $ref: '#/components/schemas/ApplicationStatus'
          description: 'The current status of an OpenSearch application. Possible
            values: `CREATING`, `UPDATING`, `DELETING`, `FAILED`, `ACTIVE`, and `DELETED`.'
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp when an OpenSearch application was created.
        lastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp of the last update to an OpenSearch application.
      description: Basic details of an OpenSearch application.
    AssociatePackageRequest:
      type: object
      properties:
        PackageID:
          allOf:
          - $ref: '#/components/schemas/PackageID'
          description: Internal ID of the package to associate with a domain. Use
            `DescribePackages` to find this value.
        DomainName:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          description: Name of the domain to associate the package with.
        PrerequisitePackageIDList:
          allOf:
          - $ref: '#/components/schemas/PackageIDList'
          description: A list of package IDs that must be associated with the domain
            before the package specified in the request can be associated.
        AssociationConfiguration:
          allOf:
          - $ref: '#/components/schemas/PackageAssociationConfiguration'
          description: The configuration for associating a package with an Amazon
            OpenSearch Service domain.
      required:
      - PackageID
      - DomainName
      description: Container for the request parameters to the `AssociatePackage`
        operation.
    AssociatePackageResponse:
      type: object
      properties:
        DomainPackageDetails:
          allOf:
          - $ref: '#/components/schemas/DomainPackageDetails'
          description: Information about a package that is associated with a domain.
      description: Container for the response returned by the `AssociatePackage` operation.
    AssociatePackagesRequest:
      type: object
      properties:
        PackageList:
          allOf:
          - $ref: '#/components/schemas/PackageDetailsForAssociationList'
          description: A list of packages and their prerequisites to be associated
            with a domain.
        DomainName:
          $ref: '#/components/schemas/DomainName'
      required:
      - PackageList
      - DomainName
    AssociatePackagesResponse:
      type: object
      properties:
        DomainPackageDetailsList:
          allOf:
          - $ref: '#/components/schemas/DomainPackageDetailsList'
          description: List of information about packages that are associated with
            a domain.
    AuthorizeVpcEndpointAccessRequest:
      type: object
      properties:
        DomainName:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          description: The name of the OpenSearch Service domain to provide access
            to.
        Account:
          allOf:
          - $ref: '#/components/schemas/AWSAccount'
          description: The Amazon Web Services account ID to grant access to.
        Service:
          allOf:
          - $ref: '#/components/schemas/AWSServicePrincipal'
          description: The Amazon Web Services service SP to grant access to.
      required:
      - DomainName
    AuthorizeVpcEndpointAccessResponse:
      type: object
      properties:
        AuthorizedPrincipal:
          allOf:
          - $ref: '#/components/schemas/AuthorizedPrincipal'
          description: Information about the Amazon Web Services account or service
            that was provided access to the domain.
      required:
      - AuthorizedPrincipal
    AuthorizedPrincipal:
      type: object
      properties:
        PrincipalType:
          allOf:
          - $ref: '#/components/schemas/PrincipalType'
          description: The type of principal.
        Principal:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The [IAM principal](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_principal.html)
            that is allowed access to the domain.
      description: Information about an Amazon Web Services account or service that
        has access to an Amazon OpenSearch Service domain through the use of an interface
        VPC endpoint.
    AuthorizedPrincipalList:
      type: array
      items:
        $ref: '#/components/schemas/AuthorizedPrincipal'
    AutoTune:
      type: object
      properties:
        AutoTuneType:
          allOf:
          - $ref: '#/components/schemas/AutoTuneType'
          description: The type of Auto-Tune action.
        AutoTuneDetails:
          allOf:
          - $ref: '#/components/schemas/AutoTuneDetails'
          description: Details about an Auto-Tune action.
      description: Information about an Auto-Tune action. For more information, see
        [Auto-Tune for Amazon OpenSearch Service](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/auto-tune.html).
    AutoTuneDate:
      type: string
      format: date-time
      description: <p>The timestamp of the Auto-Tune action scheduled for the domain.</p>
    AutoTuneDesiredState:
      type: string
      enum:
      - ENABLED
      - DISABLED
      description: <p>The Auto-Tune desired state. Valid values are ENABLED and DISABLED.</p>
    AutoTuneDetails:
      type: object
      properties:
        ScheduledAutoTuneDetails:
          allOf:
          - $ref: '#/components/schemas/ScheduledAutoTuneDetails'
          description: Container for details about a scheduled Auto-Tune action.
      description: Specifies details about a scheduled Auto-Tune action. For more
        information, see [Auto-Tune for Amazon OpenSearch Service](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/auto-tune.html).
    AutoTuneList:
      type: array
      items:
        $ref: '#/components/schemas/AutoTune'
    AutoTuneMaintenanceSchedule:
      type: object
      properties:
        StartAt:
          allOf:
          - $ref: '#/components/schemas/StartAt'
          description: The Epoch timestamp at which the Auto-Tune maintenance schedule
            starts.
        Duration:
          allOf:
          - $ref: '#/components/schemas/Duration'
          description: 'The duration of the maintenance schedule. For example, `"Duration":
            {"Value": 2, "Unit": "HOURS"}`.'
        CronExpressionForRecurrence:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A cron expression for a recurring maintenance schedule during
            which Auto-Tune can deploy changes.
      description: 'This object is deprecated. Use the domain''s [off-peak window](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/off-peak.html)
        to schedule Auto-Tune optimizations. For migration instructions, see [Migrating
        from Auto-Tune maintenance windows](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/off-peak.html#off-peak-migrate).


        The Auto-Tune maintenance schedule. For more information, see [Auto-Tune for
        Amazon OpenSearch Service](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/auto-tune.html).'
    AutoTuneMaintenanceScheduleList:
      type: array
      items:
        $ref: '#/components/schemas/AutoTuneMaintenanceSchedule'
    AutoTuneOptions:
      type: object
      properties:
        DesiredState:
          allOf:
          - $ref: '#/components/schemas/AutoTuneDesiredState'
          description: Whether Auto-Tune is enabled or disabled.
        RollbackOnDisable:
          allOf:
          - $ref: '#/components/schemas/RollbackOnDisable'
          description: When disabling Auto-Tune, specify `NO_ROLLBACK` to retain all
            prior Auto-Tune settings or `DEFAULT_ROLLBACK` to revert to the OpenSearch
            Service defaults. If you specify `DEFAULT_ROLLBACK`, you must include
            a `MaintenanceSchedule` in the request. Otherwise, OpenSearch Service
            is unable to perform the rollback.
        MaintenanceSchedules:
          allOf:
          - $ref: '#/components/schemas/AutoTuneMaintenanceScheduleList'
          description: 'DEPRECATED. Use [off-peak window](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/off-peak.html)
            instead.


            A list of maintenance schedules during which Auto-Tune can deploy changes.'
        UseOffPeakWindow:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether to use the domain's [off-peak window](https://docs.aws.amazon.com/opensearch-service/latest/APIReference/API_OffPeakWindow.html)
            to deploy configuration changes on the domain rather than a maintenance
            schedule.
      description: Auto-Tune settings when updating a domain. For more information,
        see [Auto-Tune for Amazon OpenSearch Service](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/auto-tune.html).
    AutoTuneOptionsInput:
      type: object
      properties:
        DesiredState:
          allOf:
          - $ref: '#/components/schemas/AutoTuneDesiredState'
          description: Whether Auto-Tune is enabled or disabled.
        MaintenanceSchedules:
          allOf:
          - $ref: '#/components/schemas/AutoTuneMaintenanceScheduleList'
          description: A list of maintenance schedules during which Auto-Tune can
            deploy changes. Maintenance windows are deprecated and have been replaced
            with [off-peak windows](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/off-peak.html).
        UseOffPeakWindow:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether to schedule Auto-Tune optimizations that require blue/green
            deployments during the domain's configured daily off-peak window.
      description: Options for configuring Auto-Tune. For more information, see [Auto-Tune
        for Amazon OpenSearch Service](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/auto-tune.html)
    AutoTuneOptionsOutput:
      type: object
      properties:
        State:
          allOf:
          - $ref: '#/components/schemas/AutoTuneState'
          description: The current state of Auto-Tune on the domain.
        ErrorMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Any errors that occurred while enabling or disabling Auto-Tune.
        UseOffPeakWindow:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether the domain's off-peak window will be used to deploy
            Auto-Tune changes rather than a maintenance schedule.
      description: The Auto-Tune settings for a domain, displayed when enabling or
        disabling Auto-Tune.
    AutoTuneOptionsStatus:
      type: object
      properties:
        Options:
          allOf:
          - $ref: '#/components/schemas/AutoTuneOptions'
          description: Auto-Tune settings for updating a domain.
        Status:
          allOf:
          - $ref: '#/components/schemas/AutoTuneStatus'
          description: The current status of Auto-Tune for a domain.
      description: The Auto-Tune status for the domain.
    AutoTuneState:
      type: string
      enum:
      - ENABLED
      - DISABLED
      - ENABLE_IN_PROGRESS
      - DISABLE_IN_PROGRESS
      - DISABLED_AND_ROLLBACK_SCHEDULED
      - DISABLED_AND_ROLLBACK_IN_PROGRESS
      - DISABLED_AND_ROLLBACK_COMPLETE
      - DISABLED_AND_ROLLBACK_ERROR
      - ERROR
      description: "<p>The Auto-Tune state for the domain. For valid states see <a\
        \ href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/auto-tune.html\"\
        >Auto-Tune for Amazon OpenSearch Service</a>.\n  </p>"
    AutoTuneStatus:
      type: object
      properties:
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/UpdateTimestamp'
          description: Date and time when Auto-Tune was enabled for the domain.
        UpdateDate:
          allOf:
          - $ref: '#/components/schemas/UpdateTimestamp'
          description: Date and time when the Auto-Tune options were last updated
            for the domain.
        UpdateVersion:
          allOf:
          - $ref: '#/components/schemas/UIntValue'
          description: The latest version of the Auto-Tune options.
        State:
          allOf:
          - $ref: '#/components/schemas/AutoTuneState'
          description: The current state of Auto-Tune on the domain.
        ErrorMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Any errors that occurred while enabling or disabling Auto-Tune.
        PendingDeletion:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether the domain is being deleted.
      required:
      - CreationDate
      - UpdateDate
      - State
      description: The current status of Auto-Tune for the domain. For more information,
        see [Auto-Tune for Amazon OpenSearch Service](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/auto-tune.html).
    AutoTuneType:
      type: string
      enum:
      - SCHEDULED_ACTION
      description: <p>Specifies the Auto-Tune type. Valid value is SCHEDULED_ACTION.</p>
    AvailabilityZone:
      type: string
      minLength: 1
      maxLength: 15
    AvailabilityZoneInfo:
      type: object
      properties:
        AvailabilityZoneName:
          allOf:
          - $ref: '#/components/schemas/AvailabilityZone'
          description: The name of the Availability Zone.
        ZoneStatus:
          allOf:
          - $ref: '#/components/schemas/ZoneStatus'
          description: "The current state of the Availability Zone. Current options\
            \ are `Active` and `StandBy`.\n\n  * `Active` \\- Data nodes in the Availability\
            \ Zone are in use.\n\n  * `StandBy` \\- Data nodes in the Availability\
            \ Zone are in a standby state.\n\n  * `NotAvailable` \\- Unable to retrieve\
            \ information."
        ConfiguredDataNodeCount:
          allOf:
          - $ref: '#/components/schemas/NumberOfNodes'
          description: The total number of data nodes configured in the Availability
            Zone.
        AvailableDataNodeCount:
          allOf:
          - $ref: '#/components/schemas/NumberOfNodes'
          description: The number of data nodes active in the Availability Zone.
        TotalShards:
          allOf:
          - $ref: '#/components/schemas/NumberOfShards'
          description: The total number of primary and replica shards in the Availability
            Zone.
        TotalUnAssignedShards:
          allOf:
          - $ref: '#/components/schemas/NumberOfShards'
          description: The total number of primary and replica shards that aren't
            allocated to any of the nodes in the Availability Zone.
      description: Information about an Availability Zone on a domain.
    AvailabilityZoneInfoList:
      type: array
      items:
        $ref: '#/components/schemas/AvailabilityZoneInfo'
    AvailabilityZoneList:
      type: array
      items:
        $ref: '#/components/schemas/AvailabilityZone'
    BackendRole:
      type: string
      minLength: 1
      maxLength: 256
    BaseException:
      type: object
      properties:
        message:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage'
          description: A description of the error.
      description: An error occurred while processing the request.
    Boolean:
      type: boolean
    CancelDomainConfigChangeRequest:
      type: object
      properties:
        DomainName:
          $ref: '#/components/schemas/DomainName'
        DryRun:
          allOf:
          - $ref: '#/components/schemas/DryRun'
          description: When set to `True`, returns the list of change IDs and properties
            that will be cancelled without actually cancelling the change.
      required:
      - DomainName
    CancelDomainConfigChangeResponse:
      type: object
      properties:
        CancelledChangeIds:
          allOf:
          - $ref: '#/components/schemas/GUIDList'
          description: The unique identifiers of the changes that were cancelled.
        CancelledChangeProperties:
          allOf:
          - $ref: '#/components/schemas/CancelledChangePropertyList'
          description: The domain change properties that were cancelled.
        DryRun:
          allOf:
          - $ref: '#/components/schemas/DryRun'
          description: Whether or not the request was a dry run. If `True`, the changes
            were not actually cancelled.
    CancelServiceSoftwareUpdateRequest:
      type: object
      properties:
        DomainName:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          description: Name of the OpenSearch Service domain that you want to cancel
            the service software update on.
      required:
      - DomainName
      description: Container for the request parameters to cancel a service software
        update.
    CancelServiceSoftwareUpdateResponse:
      type: object
      properties:
        ServiceSoftwareOptions:
          allOf:
          - $ref: '#/components/schemas/ServiceSoftwareOptions'
          description: Container for the state of your domain relative to the latest
            service software.
      description: Container for the response to a `CancelServiceSoftwareUpdate` operation.
        Contains the status of the update.
    CancelledChangeProperty:
      type: object
      properties:
        PropertyName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the property whose change was cancelled.
        CancelledValue:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The pending value of the property that was cancelled. This
            would have been the eventual value of the property if the chance had not
            been cancelled.
        ActiveValue:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The current value of the property, after the change was cancelled.
      description: A property change that was cancelled for an Amazon OpenSearch Service
        domain.
    CancelledChangePropertyList:
      type: array
      items:
        $ref: '#/components/schemas/CancelledChangeProperty'
    ChangeProgressDetails:
      type: object
      properties:
        ChangeId:
          allOf:
          - $ref: '#/components/schemas/GUID'
          description: The ID of the configuration change.
        Message:
          allOf:
          - $ref: '#/components/schemas/Message'
          description: A message corresponding to the status of the configuration
            change.
        ConfigChangeStatus:
          allOf:
          - $ref: '#/components/schemas/ConfigChangeStatus'
          description: The current status of the configuration change.
        InitiatedBy:
          allOf:
          - $ref: '#/components/schemas/InitiatedBy'
          description: The IAM principal who initiated the configuration change.
        StartTime:
          allOf:
          - $ref: '#/components/schemas/UpdateTimestamp'
          description: The time that the configuration change was initiated, in Universal
            Coordinated Time (UTC).
        LastUpdatedTime:
          allOf:
          - $ref: '#/components/schemas/UpdateTimestamp'
          description: The last time that the configuration change was updated.
      description: Container for information about a configuration change happening
        on a domain.
    ChangeProgressStage:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/ChangeProgressStageName'
          description: The name of the stage.
        Status:
          allOf:
          - $ref: '#/components/schemas/ChangeProgressStageStatus'
          description: The status of the stage.
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: The description of the stage.
        LastUpdated:
          allOf:
          - $ref: '#/components/schemas/LastUpdated'
          description: The most recent updated timestamp of the stage.
      description: Progress details for each stage of a domain update.
    ChangeProgressStageList:
      type: array
      items:
        $ref: '#/components/schemas/ChangeProgressStage'
      description: <p>The list of progress stages of a specific domain configuration
        change.</p>
    ChangeProgressStageName:
      type: string
      minLength: 1
      maxLength: 64
    ChangeProgressStageStatus:
      type: string
      minLength: 1
      maxLength: 256
    ChangeProgressStatusDetails:
      type: object
      properties:
        ChangeId:
          allOf:
          - $ref: '#/components/schemas/GUID'
          description: The unique change identifier associated with a specific domain
            configuration change.
        StartTime:
          allOf:
          - $ref: '#/components/schemas/UpdateTimestamp'
          description: The time at which the configuration change is made on the domain.
        Status:
          allOf:
          - $ref: '#/components/schemas/OverallChangeStatus'
          description: The overall status of the domain configuration change.
        PendingProperties:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: The list of properties in the domain configuration change that
            are still pending.
        CompletedProperties:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: The list of properties in the domain configuration change that
            have completed.
        TotalNumberOfStages:
          allOf:
          - $ref: '#/components/schemas/TotalNumberOfStages'
          description: The total number of stages required for the configuration change.
        ChangeProgressStages:
          allOf:
          - $ref: '#/components/schemas/ChangeProgressStageList'
          description: The specific stages that the domain is going through to perform
            the configuration change.
        LastUpdatedTime:
          allOf:
          - $ref: '#/components/schemas/UpdateTimestamp'
          description: The last time that the status of the configuration change was
            updated.
        ConfigChangeStatus:
          allOf:
          - $ref: '#/components/schemas/ConfigChangeStatus'
          description: The current status of the configuration change.
        InitiatedBy:
          allOf:
          - $ref: '#/components/schemas/InitiatedBy'
          description: The IAM principal who initiated the configuration change.
      description: The progress details of a specific domain configuration change.
    ClientToken:
      type: string
      minLength: 1
      maxLength: 64
    CloudWatchDirectQueryDataSource:
      type: object
      properties:
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/DirectQueryDataSourceRoleArn'
          description: The unique identifier of the IAM role that grants OpenSearch
            Service permission to access the specified data source.
      required:
      - RoleArn
      description: Configuration details for a CloudWatch Logs data source that can
        be used for direct queries.
    CloudWatchLogsLogGroupArn:
      type: string
      pattern: .*
      minLength: 20
      maxLength: 2048
    ClusterConfig:
      type: object
      properties:
        InstanceType:
          allOf:
          - $ref: '#/components/schemas/OpenSearchPartitionInstanceType'
          description: Instance type of data nodes in the cluster.
        InstanceCount:
          allOf:
          - $ref: '#/components/schemas/IntegerClass'
          description: Number of data nodes in the cluster. This number must be greater
            than 1, otherwise you receive a validation exception.
        DedicatedMasterEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether dedicated master nodes are enabled for the
            cluster.`True` if the cluster will use a dedicated master node.`False`
            if the cluster will not.
        ZoneAwarenessEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether multiple Availability Zones are enabled.
            For more information, see [Configuring a multi-AZ domain in Amazon OpenSearch
            Service](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/managedomains-multiaz.html).
        ZoneAwarenessConfig:
          allOf:
          - $ref: '#/components/schemas/ZoneAwarenessConfig'
          description: Container for zone awareness configuration options. Only required
            if `ZoneAwarenessEnabled` is `true`.
        DedicatedMasterType:
          allOf:
          - $ref: '#/components/schemas/OpenSearchPartitionInstanceType'
          description: OpenSearch Service instance type of the dedicated master nodes
            in the cluster.
        DedicatedMasterCount:
          allOf:
          - $ref: '#/components/schemas/IntegerClass'
          description: Number of dedicated master nodes in the cluster. This number
            must be greater than 2 and not 4, otherwise you receive a validation exception.
        WarmEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether to enable warm storage for the cluster.
        WarmType:
          allOf:
          - $ref: '#/components/schemas/OpenSearchWarmPartitionInstanceType'
          description: The instance type for the cluster's warm nodes.
        WarmCount:
          allOf:
          - $ref: '#/components/schemas/IntegerClass'
          description: The number of warm nodes in the cluster.
        ColdStorageOptions:
          allOf:
          - $ref: '#/components/schemas/ColdStorageOptions'
          description: Container for cold storage configuration options.
        MultiAZWithStandbyEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: A boolean that indicates whether a multi-AZ domain is turned
            on with a standby AZ. For more information, see [Configuring a multi-AZ
            domain in Amazon OpenSearch Service](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/managedomains-multiaz.html).
        NodeOptions:
          allOf:
          - $ref: '#/components/schemas/NodeOptionsList'
          description: List of node options for the domain.
      description: Container for the cluster configuration of an OpenSearch Service
        domain. For more information, see [Creating and managing Amazon OpenSearch
        Service domains](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html).
    ClusterConfigStatus:
      type: object
      properties:
        Options:
          allOf:
          - $ref: '#/components/schemas/ClusterConfig'
          description: Cluster configuration options for the specified domain.
        Status:
          allOf:
          - $ref: '#/components/schemas/OptionStatus'
          description: The status of cluster configuration options for the specified
            domain.
      required:
      - Options
      - Status
      description: The cluster configuration status for a domain.
    CognitoOptions:
      type: object
      properties:
        Enabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether to enable or disable Amazon Cognito authentication
            for OpenSearch Dashboards.
        UserPoolId:
          allOf:
          - $ref: '#/components/schemas/UserPoolId'
          description: The Amazon Cognito user pool ID that you want OpenSearch Service
            to use for OpenSearch Dashboards authentication.
        IdentityPoolId:
          allOf:
          - $ref: '#/components/schemas/IdentityPoolId'
          description: The Amazon Cognito identity pool ID that you want OpenSearch
            Service to use for OpenSearch Dashboards authentication.
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          description: The `AmazonOpenSearchServiceCognitoAccess` role that allows
            OpenSearch Service to configure your user pool and identity pool.
      description: Container for the parameters required to enable Cognito authentication
        for an OpenSearch Service domain. For more information, see [Configuring Amazon
        Cognito authentication for OpenSearch Dashboards](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/cognito-auth.html).
    CognitoOptionsStatus:
      type: object
      properties:
        Options:
          allOf:
          - $ref: '#/components/schemas/CognitoOptions'
          description: Cognito options for the specified domain.
        Status:
          allOf:
          - $ref: '#/components/schemas/OptionStatus'
          description: The status of the Cognito options for the specified domain.
      required:
      - Options
      - Status
      description: The status of the Cognito options for the specified domain.
    ColdStorageOptions:
      type: object
      properties:
        Enabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether to enable or disable cold storage on the domain. You
            must enable UltraWarm storage to enable cold storage.
      required:
      - Enabled
      description: Container for the parameters required to enable cold storage for
        an OpenSearch Service domain. For more information, see [Cold storage for
        Amazon OpenSearch Service](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/cold-storage.html).
    CommitMessage:
      type: string
      minLength: 0
      maxLength: 160
    CompatibleVersionsList:
      type: array
      items:
        $ref: '#/components/schemas/CompatibleVersionsMap'
    CompatibleVersionsMap:
      type: object
      properties:
        SourceVersion:
          allOf:
          - $ref: '#/components/schemas/VersionString'
          description: The current version that the OpenSearch Service domain is running.
        TargetVersions:
          allOf:
          - $ref: '#/components/schemas/VersionList'
          description: The possible versions that you can upgrade the domain to.
      description: A map of OpenSearch or Elasticsearch versions and the versions
        you can upgrade them to.
    ConfigChangeStatus:
      type: string
      enum:
      - Pending
      - Initializing
      - Validating
      - ValidationFailed
      - ApplyingChanges
      - Completed
      - PendingUserInput
      - Cancelled
    ConflictException:
      type: object
      properties:
        message:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage'
          description: A description of the error.
      description: An error occurred because the client attempts to remove a resource
        that is currently in use.
    ConnectionAlias:
      type: string
      pattern: ^[a-zA-Z][a-zA-Z0-9\-\_]+$
      minLength: 2
      maxLength: 100
    ConnectionId:
      type: string
      pattern: ^[a-z][a-z0-9\-]+$
      minLength: 10
      maxLength: 256
    ConnectionMode:
      type: string
      enum:
      - DIRECT
      - VPC_ENDPOINT
      description: "<p>The connection mode for the cross-cluster connection.</p>\n\
        \         <ul>\n            <li>\n               <p>\n                  <b>DIRECT</b>\
        \ - Used for cross-cluster search or cross-cluster replication.</p>\n    \
        \        </li>\n            <li>\n               <p>\n                  <b>VPC_ENDPOINT</b>\
        \ - Used for remote reindex\n     between Amazon OpenSearch Service VPC domains.</p>\n\
        \            </li>\n         </ul>"
    ConnectionProperties:
      type: object
      properties:
        Endpoint:
          allOf:
          - $ref: '#/components/schemas/Endpoint'
          description: 'The Endpoint attribute cannot be modified.


            The endpoint of the remote domain. Applicable for VPC_ENDPOINT connection
            mode.'
        CrossClusterSearch:
          allOf:
          - $ref: '#/components/schemas/CrossClusterSearchConnectionProperties'
          description: The connection properties for cross cluster search.
      description: The connection properties of an outbound connection.
    ConnectionStatusMessage:
      type: string
    CreateApplicationRequest:
      type: object
      properties:
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: Unique, case-sensitive identifier to ensure idempotency of
            the request.
        name:
          allOf:
          - $ref: '#/components/schemas/ApplicationName'
          description: The unique name of the OpenSearch application. Names must be
            unique within an Amazon Web Services Region for each account.
        dataSources:
          allOf:
          - $ref: '#/components/schemas/DataSources'
          description: The data sources to link to the OpenSearch application.
        iamIdentityCenterOptions:
          allOf:
          - $ref: '#/components/schemas/IamIdentityCenterOptionsInput'
          description: Configuration settings for integrating Amazon Web Services
            IAM Identity Center with the OpenSearch application.
        appConfigs:
          allOf:
          - $ref: '#/components/schemas/AppConfigs'
          description: Configuration settings for the OpenSearch application, including
            administrative options.
        tagList:
          $ref: '#/components/schemas/TagList'
      required:
      - name
    CreateApplicationResponse:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/Id'
          description: The unique identifier assigned to the OpenSearch application.
        name:
          allOf:
          - $ref: '#/components/schemas/ApplicationName'
          description: The name of the OpenSearch application.
        arn:
          $ref: '#/components/schemas/ARN'
        dataSources:
          allOf:
          - $ref: '#/components/schemas/DataSources'
          description: The data sources linked to the OpenSearch application.
        iamIdentityCenterOptions:
          allOf:
          - $ref: '#/components/schemas/IamIdentityCenterOptions'
          description: The IAM Identity Center settings configured for the OpenSearch
            application.
        appConfigs:
          allOf:
          - $ref: '#/components/schemas/AppConfigs'
          description: Configuration settings for the OpenSearch application, including
            administrative options.
        tagList:
          $ref: '#/components/schemas/TagList'
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp indicating when the OpenSearch application was
            created.
    CreateDomainRequest:
      type: object
      properties:
        DomainName:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          description: Name of the OpenSearch Service domain to create. Domain names
            are unique across the domains owned by an account within an Amazon Web
            Services Region.
        EngineVersion:
          allOf:
          - $ref: '#/components/schemas/VersionString'
          description: String of format Elasticsearch_X.Y or OpenSearch_X.Y to specify
            the engine version for the OpenSearch Service domain. For example, `OpenSearch_1.0`
            or `Elasticsearch_7.9`. For more information, see [Creating and managing
            Amazon OpenSearch Service domains](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html#createdomains).
        ClusterConfig:
          allOf:
          - $ref: '#/components/schemas/ClusterConfig'
          description: Container for the cluster configuration of a domain.
        EBSOptions:
          allOf:
          - $ref: '#/components/schemas/EBSOptions'
          description: Container for the parameters required to enable EBS-based storage
            for an OpenSearch Service domain.
        AccessPolicies:
          allOf:
          - $ref: '#/components/schemas/PolicyDocument'
          description: Identity and Access Management (IAM) policy document specifying
            the access policies for the new domain.
        IPAddressType:
          allOf:
          - $ref: '#/components/schemas/IPAddressType'
          description: Specify either dual stack or IPv4 as your IP address type.
            Dual stack allows you to share domain resources across IPv4 and IPv6 address
            types, and is the recommended option. If you set your IP address type
            to dual stack, you can't change your address type later.
        SnapshotOptions:
          allOf:
          - $ref: '#/components/schemas/SnapshotOptions'
          description: DEPRECATED. Container for the parameters required to configure
            automated snapshots of domain indexes.
        VPCOptions:
          allOf:
          - $ref: '#/components/schemas/VPCOptions'
          description: Container for the values required to configure VPC access domains.
            If you don't specify these values, OpenSearch Service creates the domain
            with a public endpoint. For more information, see [Launching your Amazon
            OpenSearch Service domains using a VPC](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/vpc.html).
        CognitoOptions:
          allOf:
          - $ref: '#/components/schemas/CognitoOptions'
          description: Key-value pairs to configure Amazon Cognito authentication.
            For more information, see [Configuring Amazon Cognito authentication for
            OpenSearch Dashboards](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/cognito-auth.html).
        EncryptionAtRestOptions:
          allOf:
          - $ref: '#/components/schemas/EncryptionAtRestOptions'
          description: Key-value pairs to enable encryption at rest.
        NodeToNodeEncryptionOptions:
          allOf:
          - $ref: '#/components/schemas/NodeToNodeEncryptionOptions'
          description: Enables node-to-node encryption.
        AdvancedOptions:
          allOf:
          - $ref: '#/components/schemas/AdvancedOptions'
          description: "Key-value pairs to specify advanced configuration options.\
            \ The following key-value pairs are supported:\n\n  * `\"rest.action.multi.allow_explicit_index\"\
            : \"true\" | \"false\"` \\- Note the use of a string rather than a boolean.\
            \ Specifies whether explicit references to indexes are allowed inside\
            \ the body of HTTP requests. If you want to configure access policies\
            \ for domain sub-resources, such as specific indexes and domain APIs,\
            \ you must disable this property. Default is true.\n\n  * `\"indices.fielddata.cache.size\"\
            : \"80\" ` \\- Note the use of a string rather than a boolean. Specifies\
            \ the percentage of heap space allocated to field data. Default is unbounded.\n\
            \n  * `\"indices.query.bool.max_clause_count\": \"1024\"` \\- Note the\
            \ use of a string rather than a boolean. Specifies the maximum number\
            \ of clauses allowed in a Lucene boolean query. Default is 1,024. Queries\
            \ with more than the permitted number of clauses result in a `TooManyClauses`\
            \ error.\n\n  * `\"override_main_response_version\": \"true\" | \"false\"\
            ` \\- Note the use of a string rather than a boolean. Specifies whether\
            \ the domain reports its version as 7.10 to allow Elasticsearch OSS clients\
            \ and plugins to continue working with it. Default is false when creating\
            \ a domain and true when upgrading a domain.\n\nFor more information,\
            \ see [Advanced cluster parameters](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html#createdomain-configure-advanced-options)."
        LogPublishingOptions:
          allOf:
          - $ref: '#/components/schemas/LogPublishingOptions'
          description: Key-value pairs to configure log publishing.
        DomainEndpointOptions:
          allOf:
          - $ref: '#/components/schemas/DomainEndpointOptions'
          description: Additional options for the domain endpoint, such as whether
            to require HTTPS for all traffic.
        AdvancedSecurityOptions:
          allOf:
          - $ref: '#/components/schemas/AdvancedSecurityOptionsInput'
          description: Options for fine-grained access control.
        IdentityCenterOptions:
          allOf:
          - $ref: '#/components/schemas/IdentityCenterOptionsInput'
          description: Configuration options for enabling and managing IAM Identity
            Center integration within a domain.
        TagList:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: List of tags to add to the domain upon creation.
        AutoTuneOptions:
          allOf:
          - $ref: '#/components/schemas/AutoTuneOptionsInput'
          description: Options for Auto-Tune.
        OffPeakWindowOptions:
          allOf:
          - $ref: '#/components/schemas/OffPeakWindowOptions'
          description: Specifies a daily 10-hour time block during which OpenSearch
            Service can perform configuration changes on the domain, including service
            software updates and Auto-Tune enhancements that require a blue/green
            deployment. If no options are specified, the default start time of 10:00
            P.M. local time (for the Region that the domain is created in) is used.
        SoftwareUpdateOptions:
          allOf:
          - $ref: '#/components/schemas/SoftwareUpdateOptions'
          description: Software update options for the domain.
        AIMLOptions:
          allOf:
          - $ref: '#/components/schemas/AIMLOptionsInput'
          description: Options for all machine learning features for the specified
            domain.
      required:
      - DomainName
    CreateDomainResponse:
      type: object
      properties:
        DomainStatus:
          allOf:
          - $ref: '#/components/schemas/DomainStatus'
          description: The status of the newly created domain.
      description: The result of a `CreateDomain` operation. Contains the status of
        the newly created domain.
    CreateOutboundConnectionRequest:
      type: object
      properties:
        LocalDomainInfo:
          allOf:
          - $ref: '#/components/schemas/DomainInformationContainer'
          description: Name and Region of the source (local) domain.
        RemoteDomainInfo:
          allOf:
          - $ref: '#/components/schemas/DomainInformationContainer'
          description: Name and Region of the destination (remote) domain.
        ConnectionAlias:
          allOf:
          - $ref: '#/components/schemas/ConnectionAlias'
          description: Name of the connection.
        ConnectionMode:
          allOf:
          - $ref: '#/components/schemas/ConnectionMode'
          description: The connection mode.
        ConnectionProperties:
          allOf:
          - $ref: '#/components/schemas/ConnectionProperties'
          description: The `ConnectionProperties` for the outbound connection.
      required:
      - LocalDomainInfo
      - RemoteDomainInfo
      - ConnectionAlias
      description: Container for the parameters to the `CreateOutboundConnection`
        operation.
    CreateOutboundConnectionResponse:
      type: object
      properties:
        LocalDomainInfo:
          allOf:
          - $ref: '#/components/schemas/DomainInformationContainer'
          description: Information about the source (local) domain.
        RemoteDomainInfo:
          allOf:
          - $ref: '#/components/schemas/DomainInformationContainer'
          description: Information about the destination (remote) domain.
        ConnectionAlias:
          allOf:
          - $ref: '#/components/schemas/ConnectionAlias'
          description: Name of the connection.
        ConnectionStatus:
          allOf:
          - $ref: '#/components/schemas/OutboundConnectionStatus'
          description: The status of the connection.
        ConnectionId:
          allOf:
          - $ref: '#/components/schemas/ConnectionId'
          description: The unique identifier for the created outbound connection,
            which is used for subsequent operations on the connection.
        ConnectionMode:
          allOf:
          - $ref: '#/components/schemas/ConnectionMode'
          description: The connection mode.
        ConnectionProperties:
          allOf:
          - $ref: '#/components/schemas/ConnectionProperties'
          description: The `ConnectionProperties` for the newly created connection.
      description: The result of a `CreateOutboundConnection` request. Contains details
        about the newly created cross-cluster connection.
    CreatePackageRequest:
      type: object
      properties:
        PackageName:
          allOf:
          - $ref: '#/components/schemas/PackageName'
          description: Unique name for the package.
        PackageType:
          allOf:
          - $ref: '#/components/schemas/PackageType'
          description: The type of package.
        PackageDescription:
          allOf:
          - $ref: '#/components/schemas/PackageDescription'
          description: Description of the package.
        PackageSource:
          allOf:
          - $ref: '#/components/schemas/PackageSource'
          description: The Amazon S3 location from which to import the package.
        PackageConfiguration:
          allOf:
          - $ref: '#/components/schemas/PackageConfiguration'
          description: The configuration parameters for the package being created.
        EngineVersion:
          allOf:
          - $ref: '#/components/schemas/EngineVersion'
          description: The version of the Amazon OpenSearch Service engine for which
            is compatible with the package. This can only be specified for package
            type `ZIP-PLUGIN`
        PackageVendingOptions:
          allOf:
          - $ref: '#/components/schemas/PackageVendingOptions'
          description: The vending options for the package being created. They determine
            if the package can be vended to other users.
        PackageEncryptionOptions:
          allOf:
          - $ref: '#/components/schemas/PackageEncryptionOptions'
          description: The encryption parameters for the package being created.
      required:
      - PackageName
      - PackageType
      - PackageSource
      description: Container for request parameters to the `CreatePackage` operation.
    CreatePackageResponse:
      type: object
      properties:
        PackageDetails:
          allOf:
          - $ref: '#/components/schemas/PackageDetails'
          description: Basic information about an OpenSearch Service package.
      description: Container for the response returned by the `CreatePackage` operation.
    CreateVpcEndpointRequest:
      type: object
      properties:
        DomainArn:
          allOf:
          - $ref: '#/components/schemas/DomainArn'
          description: The Amazon Resource Name (ARN) of the domain to create the
            endpoint for.
        VpcOptions:
          allOf:
          - $ref: '#/components/schemas/VPCOptions'
          description: Options to specify the subnets and security groups for the
            endpoint.
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: Unique, case-sensitive identifier to ensure idempotency of
            the request.
      required:
      - DomainArn
      - VpcOptions
    CreateVpcEndpointResponse:
      type: object
      properties:
        VpcEndpoint:
          allOf:
          - $ref: '#/components/schemas/VpcEndpoint'
          description: Information about the newly created VPC endpoint.
      required:
      - VpcEndpoint
    CreatedAt:
      type: string
      format: date-time
    CrossClusterSearchConnectionProperties:
      type: object
      properties:
        SkipUnavailable:
          allOf:
          - $ref: '#/components/schemas/SkipUnavailableStatus'
          description: The status of the `SkipUnavailable` setting for the outbound
            connection. This feature allows you to specify some clusters as optional
            and ensure that your cross-cluster queries return partial results despite
            failures on one or more remote clusters.
      description: Cross-cluster search specific connection properties.
    DataSource:
      type: object
      properties:
        dataSourceArn:
          $ref: '#/components/schemas/ARN'
        dataSourceDescription:
          allOf:
          - $ref: '#/components/schemas/DataSourceDescription'
          description: Detailed description of a data source.
      description: Data sources that are associated with an OpenSearch Application.
    DataSourceDescription:
      type: string
      pattern: ^([a-zA-Z0-9_])*[\\a-zA-Z0-9_@#%*+=:?./!\s-]*$
      minLength: 0
      maxLength: 1000
    DataSourceDetails:
      type: object
      properties:
        DataSourceType:
          allOf:
          - $ref: '#/components/schemas/DataSourceType'
          description: The type of data source.
        Name:
          allOf:
          - $ref: '#/components/schemas/DataSourceName'
          description: The name of the data source.
        Description:
          allOf:
          - $ref: '#/components/schemas/DataSourceDescription'
          description: A description of the data source.
        Status:
          allOf:
          - $ref: '#/components/schemas/DataSourceStatus'
          description: The status of the data source.
      description: Details about a direct-query data source.
    DataSourceList:
      type: array
      items:
        $ref: '#/components/schemas/DataSourceDetails'
    DataSourceName:
      type: string
      pattern: ^[a-z][a-z0-9_]+$
      minLength: 3
      maxLength: 80
    DataSourceStatus:
      type: string
      enum:
      - ACTIVE
      - DISABLED
    DataSourceType:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/S3GlueDataCatalog'
        description: |-
          An Amazon S3 data source.
      description: |-
        The type of data source.
    DataSources:
      type: array
      items:
        $ref: '#/components/schemas/DataSource'
    DeleteApplicationRequest:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/Id'
          description: The unique identifier of the OpenSearch application to delete.
      required:
      - id
    DeleteApplicationResponse:
      type: object
      properties: {}
    DeleteDataSourceRequest:
      type: object
      properties:
        DomainName:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          description: The name of the domain.
        Name:
          allOf:
          - $ref: '#/components/schemas/DataSourceName'
          description: The name of the data source to delete.
      required:
      - DomainName
      - Name
      description: Container for the parameters to the `DeleteDataSource` operation.
    DeleteDataSourceResponse:
      type: object
      properties:
        Message:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A message associated with deletion of the data source.
      description: The result of a `GetDataSource` operation.
    DeleteDirectQueryDataSourceRequest:
      type: object
      properties:
        DataSourceName:
          allOf:
          - $ref: '#/components/schemas/DirectQueryDataSourceName'
          description: A unique, user-defined label to identify the data source within
            your OpenSearch Service environment.
      required:
      - DataSourceName
    DeleteDomainRequest:
      type: object
      properties:
        DomainName:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          description: The name of the domain you want to permanently delete.
      required:
      - DomainName
      description: Container for the parameters to the `DeleteDomain` operation.
    DeleteDomainResponse:
      type: object
      properties:
        DomainStatus:
          allOf:
          - $ref: '#/components/schemas/DomainStatus'
          description: The status of the domain being deleted.
      description: The results of a `DeleteDomain` request. Contains the status of
        the pending deletion, or a "domain not found" error if the domain and all
        of its resources have been deleted.
    DeleteInboundConnectionRequest:
      type: object
      properties:
        ConnectionId:
          allOf:
          - $ref: '#/components/schemas/ConnectionId'
          description: The ID of the inbound connection to permanently delete.
      required:
      - ConnectionId
      description: Container for the parameters to the `DeleteInboundConnection` operation.
    DeleteInboundConnectionResponse:
      type: object
      properties:
        Connection:
          allOf:
          - $ref: '#/components/schemas/InboundConnection'
          description: The deleted inbound connection.
      description: The results of a `DeleteInboundConnection` operation. Contains
        details about the deleted inbound connection.
    DeleteOutboundConnectionRequest:
      type: object
      properties:
        ConnectionId:
          allOf:
          - $ref: '#/components/schemas/ConnectionId'
          description: The ID of the outbound connection you want to permanently delete.
      required:
      - ConnectionId
      description: Container for the parameters to the `DeleteOutboundConnection`
        operation.
    DeleteOutboundConnectionResponse:
      type: object
      properties:
        Connection:
          allOf:
          - $ref: '#/components/schemas/OutboundConnection'
          description: The deleted inbound connection.
      description: Details about the deleted outbound connection.
    DeletePackageRequest:
      type: object
      properties:
        PackageID:
          allOf:
          - $ref: '#/components/schemas/PackageID'
          description: The internal ID of the package you want to delete. Use `DescribePackages`
            to find this value.
      required:
      - PackageID
      description: Deletes a package from OpenSearch Service. The package can't be
        associated with any OpenSearch Service domain.
    DeletePackageResponse:
      type: object
      properties:
        PackageDetails:
          allOf:
          - $ref: '#/components/schemas/PackageDetails'
          description: Information about the deleted package.
      description: Container for the response parameters to the `DeletePackage` operation.
    DeleteVpcEndpointRequest:
      type: object
      properties:
        VpcEndpointId:
          allOf:
          - $ref: '#/components/schemas/VpcEndpointId'
          description: The unique identifier of the endpoint.
      required:
      - VpcEndpointId
    DeleteVpcEndpointResponse:
      type: object
      properties:
        VpcEndpointSummary:
          allOf:
          - $ref: '#/components/schemas/VpcEndpointSummary'
          description: Information about the deleted endpoint, including its current
            status (`DELETING` or `DELETE_FAILED`).
      required:
      - VpcEndpointSummary
    DependencyFailureException:
      type: object
      properties:
        message:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage'
          description: A description of the error.
      description: An exception for when a failure in one of the dependencies results
        in the service being unable to fetch details about the resource.
    DeploymentCloseDateTimeStamp:
      type: string
      format: date-time
    DeploymentStatus:
      type: string
      enum:
      - PENDING_UPDATE
      - IN_PROGRESS
      - COMPLETED
      - NOT_ELIGIBLE
      - ELIGIBLE
    DeploymentType:
      type: string
      minLength: 2
      maxLength: 128
    DescribeDomainAutoTunesRequest:
      type: object
      properties:
        DomainName:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          description: Name of the domain that you want Auto-Tune details about.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: An optional parameter that specifies the maximum number of
            results to return. You can use `nextToken` to get the next page of results.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If your initial `DescribeDomainAutoTunes` operation returns
            a `nextToken`, you can include the returned `nextToken` in subsequent
            `DescribeDomainAutoTunes` operations, which returns results in the next
            page.
      required:
      - DomainName
      description: Container for the parameters to the `DescribeDomainAutoTunes` operation.
    DescribeDomainAutoTunesResponse:
      type: object
      properties:
        AutoTunes:
          allOf:
          - $ref: '#/components/schemas/AutoTuneList'
          description: The list of setting adjustments that Auto-Tune has made to
            the domain.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: When `nextToken` is returned, there are more results available.
            The value of `nextToken` is a unique pagination token for each page. Send
            the request again using the returned token to retrieve the next page.
      description: The result of a `DescribeDomainAutoTunes` request.
    DescribeDomainChangeProgressRequest:
      type: object
      properties:
        DomainName:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          description: The name of the domain to get progress information for.
        ChangeId:
          allOf:
          - $ref: '#/components/schemas/GUID'
          description: The specific change ID for which you want to get progress information.
            If omitted, the request returns information about the most recent configuration
            change.
      required:
      - DomainName
      description: Container for the parameters to the `DescribeDomainChangeProgress`
        operation.
    DescribeDomainChangeProgressResponse:
      type: object
      properties:
        ChangeProgressStatus:
          allOf:
          - $ref: '#/components/schemas/ChangeProgressStatusDetails'
          description: Container for information about the stages of a configuration
            change happening on a domain.
      description: The result of a `DescribeDomainChangeProgress` request. Contains
        progress information for the requested domain change.
    DescribeDomainConfigRequest:
      type: object
      properties:
        DomainName:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          description: Name of the OpenSearch Service domain configuration that you
            want to describe.
      required:
      - DomainName
      description: Container for the parameters to the `DescribeDomainConfig` operation.
    DescribeDomainConfigResponse:
      type: object
      properties:
        DomainConfig:
          allOf:
          - $ref: '#/components/schemas/DomainConfig'
          description: Container for the configuration of the OpenSearch Service domain.
      required:
      - DomainConfig
      description: Contains the configuration information of the requested domain.
    DescribeDomainHealthRequest:
      type: object
      properties:
        DomainName:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          description: The name of the domain.
      required:
      - DomainName
      description: Container for the parameters to the `DescribeDomainHealth` operation.
    DescribeDomainHealthResponse:
      type: object
      properties:
        DomainState:
          allOf:
          - $ref: '#/components/schemas/DomainState'
          description: "The current state of the domain.\n\n  * `Processing` \\- The\
            \ domain has updates in progress.\n\n  * `Active` \\- Requested changes\
            \ have been processed and deployed to the domain."
        AvailabilityZoneCount:
          allOf:
          - $ref: '#/components/schemas/NumberOfAZs'
          description: The number of Availability Zones configured for the domain.
            If the service is unable to fetch this information, it will return `NotAvailable`.
        ActiveAvailabilityZoneCount:
          allOf:
          - $ref: '#/components/schemas/NumberOfAZs'
          description: The number of active Availability Zones configured for the
            domain. If the service is unable to fetch this information, it will return
            `NotAvailable`.
        StandByAvailabilityZoneCount:
          allOf:
          - $ref: '#/components/schemas/NumberOfAZs'
          description: The number of standby Availability Zones configured for the
            domain. If the service is unable to fetch this information, it will return
            `NotAvailable`.
        DataNodeCount:
          allOf:
          - $ref: '#/components/schemas/NumberOfNodes'
          description: The number of data nodes configured for the domain. If the
            service is unable to fetch this information, it will return `NotAvailable`.
        DedicatedMaster:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: A boolean that indicates if dedicated master nodes are activated
            for the domain.
        MasterEligibleNodeCount:
          allOf:
          - $ref: '#/components/schemas/NumberOfNodes'
          description: The number of nodes that can be elected as a master node. If
            dedicated master nodes is turned on, this value is the number of dedicated
            master nodes configured for the domain. If the service is unable to fetch
            this information, it will return `NotAvailable`.
        WarmNodeCount:
          allOf:
          - $ref: '#/components/schemas/NumberOfNodes'
          description: The number of warm nodes configured for the domain.
        MasterNode:
          allOf:
          - $ref: '#/components/schemas/MasterNodeStatus'
          description: "Indicates whether the domain has an elected master node.\n\
            \n  * **Available** \\- The domain has an elected master node.\n\n  *\
            \ **UnAvailable** \\- The master node hasn't yet been elected, and a quorum\
            \ to elect a new master node hasn't been reached."
        ClusterHealth:
          allOf:
          - $ref: '#/components/schemas/DomainHealth'
          description: "The current health status of your cluster.\n\n  * `Red` \\\
            - At least one primary shard is not allocated to any node.\n\n  * `Yellow`\
            \ \\- All primary shards are allocated to nodes, but some replicas aren’t.\n\
            \n  * `Green` \\- All primary shards and their replicas are allocated\
            \ to nodes.\n\n  * `NotAvailable` \\- Unable to retrieve cluster health."
        TotalShards:
          allOf:
          - $ref: '#/components/schemas/NumberOfShards'
          description: The total number of primary and replica shards for the domain.
        TotalUnAssignedShards:
          allOf:
          - $ref: '#/components/schemas/NumberOfShards'
          description: The total number of primary and replica shards not allocated
            to any of the nodes for the cluster.
        EnvironmentInformation:
          allOf:
          - $ref: '#/components/schemas/EnvironmentInfoList'
          description: A list of `EnvironmentInfo` for the domain.
      description: The result of a `DescribeDomainHealth` request. Contains health
        information for the requested domain.
    DescribeDomainNodesRequest:
      type: object
      properties:
        DomainName:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          description: The name of the domain.
      required:
      - DomainName
      description: Container for the parameters to the `DescribeDomainNodes` operation.
    DescribeDomainNodesResponse:
      type: object
      properties:
        DomainNodesStatusList:
          allOf:
          - $ref: '#/components/schemas/DomainNodesStatusList'
          description: Contains nodes information list `DomainNodesStatusList` with
            details about the all nodes on the requested domain.
      description: The result of a `DescribeDomainNodes` request. Contains information
        about the nodes on the requested domain.
    DescribeDomainRequest:
      type: object
      properties:
        DomainName:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          description: The name of the domain that you want information about.
      required:
      - DomainName
      description: Container for the parameters to the `DescribeDomain` operation.
    DescribeDomainResponse:
      type: object
      properties:
        DomainStatus:
          allOf:
          - $ref: '#/components/schemas/DomainStatus'
          description: List that contains the status of each specified OpenSearch
            Service domain.
      required:
      - DomainStatus
      description: Contains the status of the domain specified in the request.
    DescribeDomainsRequest:
      type: object
      properties:
        DomainNames:
          allOf:
          - $ref: '#/components/schemas/DomainNameList'
          description: Array of OpenSearch Service domain names that you want information
            about. You must specify at least one domain name.
      required:
      - DomainNames
      description: Container for the parameters to the `DescribeDomains` operation.
    DescribeDomainsResponse:
      type: object
      properties:
        DomainStatusList:
          allOf:
          - $ref: '#/components/schemas/DomainStatusList'
          description: The status of the requested domains.
      required:
      - DomainStatusList
      description: Contains the status of the specified domains or all domains owned
        by the account.
    DescribeDryRunProgressRequest:
      type: object
      properties:
        DomainName:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          description: The name of the domain.
        DryRunId:
          allOf:
          - $ref: '#/components/schemas/GUID'
          description: The unique identifier of the dry run.
        LoadDryRunConfig:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether to include the configuration of the dry run in the
            response. The configuration specifies the updates that you're planning
            to make on the domain.
      required:
      - DomainName
    DescribeDryRunProgressResponse:
      type: object
      properties:
        DryRunProgressStatus:
          allOf:
          - $ref: '#/components/schemas/DryRunProgressStatus'
          description: The current status of the dry run, including any validation
            errors.
        DryRunConfig:
          allOf:
          - $ref: '#/components/schemas/DomainStatus'
          description: Details about the changes you're planning to make on the domain.
        DryRunResults:
          allOf:
          - $ref: '#/components/schemas/DryRunResults'
          description: The results of the dry run.
    DescribeInboundConnectionsRequest:
      type: object
      properties:
        Filters:
          allOf:
          - $ref: '#/components/schemas/FilterList'
          description: A list of filters used to match properties for inbound cross-cluster
            connections.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: An optional parameter that specifies the maximum number of
            results to return. You can use `nextToken` to get the next page of results.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If your initial `DescribeInboundConnections` operation returns
            a `nextToken`, you can include the returned `nextToken` in subsequent
            `DescribeInboundConnections` operations, which returns results in the
            next page.
      description: Container for the parameters to the `DescribeInboundConnections`
        operation.
    DescribeInboundConnectionsResponse:
      type: object
      properties:
        Connections:
          allOf:
          - $ref: '#/components/schemas/InboundConnections'
          description: List of inbound connections.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: When `nextToken` is returned, there are more results available.
            The value of `nextToken` is a unique pagination token for each page. Send
            the request again using the returned token to retrieve the next page.
      description: Contains a list of connections matching the filter criteria.
    DescribeInstanceTypeLimitsRequest:
      type: object
      properties:
        DomainName:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          description: The name of the domain. Only specify if you need the limits
            for an existing domain.
        InstanceType:
          allOf:
          - $ref: '#/components/schemas/OpenSearchPartitionInstanceType'
          description: The OpenSearch Service instance type for which you need limit
            information.
        EngineVersion:
          allOf:
          - $ref: '#/components/schemas/VersionString'
          description: Version of OpenSearch or Elasticsearch, in the format Elasticsearch_X.Y
            or OpenSearch_X.Y. Defaults to the latest version of OpenSearch.
      required:
      - InstanceType
      - EngineVersion
      description: Container for the parameters to the `DescribeInstanceTypeLimits`
        operation.
    DescribeInstanceTypeLimitsResponse:
      type: object
      properties:
        LimitsByRole:
          allOf:
          - $ref: '#/components/schemas/LimitsByRole'
          description: Map that contains all applicable instance type limits.`data`
            refers to data nodes.`master` refers to dedicated master nodes.
      description: Container for the parameters received from the `DescribeInstanceTypeLimits`
        operation.
    DescribeOutboundConnectionsRequest:
      type: object
      properties:
        Filters:
          allOf:
          - $ref: '#/components/schemas/FilterList'
          description: List of filter names and values that you can use for requests.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: An optional parameter that specifies the maximum number of
            results to return. You can use `nextToken` to get the next page of results.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If your initial `DescribeOutboundConnections` operation returns
            a `nextToken`, you can include the returned `nextToken` in subsequent
            `DescribeOutboundConnections` operations, which returns results in the
            next page.
      description: Container for the parameters to the `DescribeOutboundConnections`
        operation.
    DescribeOutboundConnectionsResponse:
      type: object
      properties:
        Connections:
          allOf:
          - $ref: '#/components/schemas/OutboundConnections'
          description: List of outbound connections that match the filter criteria.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: When `nextToken` is returned, there are more results available.
            The value of `nextToken` is a unique pagination token for each page. Send
            the request again using the returned token to retrieve the next page.
      description: Contains a list of connections matching the filter criteria.
    DescribePackagesFilter:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/DescribePackagesFilterName'
          description: Any field from `PackageDetails`.
        Value:
          allOf:
          - $ref: '#/components/schemas/DescribePackagesFilterValues'
          description: A non-empty list of values for the specified filter field.
      description: A filter to apply to the `DescribePackage` response.
    DescribePackagesFilterList:
      type: array
      items:
        $ref: '#/components/schemas/DescribePackagesFilter'
      description: "<p>A list of <code>DescribePackagesFilter</code> to filter the\
        \ packages included in a <code>DescribePackages</code>\n   response.</p>"
    DescribePackagesFilterName:
      type: string
      enum:
      - PackageID
      - PackageName
      - PackageStatus
      - PackageType
      - EngineVersion
      - PackageOwner
    DescribePackagesFilterValue:
      type: string
      pattern: ^[0-9a-zA-Z\*\.\_\\\/\?-]+$
    DescribePackagesFilterValues:
      type: array
      items:
        $ref: '#/components/schemas/DescribePackagesFilterValue'
    DescribePackagesRequest:
      type: object
      properties:
        Filters:
          allOf:
          - $ref: '#/components/schemas/DescribePackagesFilterList'
          description: Only returns packages that match the `DescribePackagesFilterList`
            values.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: An optional parameter that specifies the maximum number of
            results to return. You can use `nextToken` to get the next page of results.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If your initial `DescribePackageFilters` operation returns
            a `nextToken`, you can include the returned `nextToken` in subsequent
            `DescribePackageFilters` operations, which returns results in the next
            page.
      description: Container for the request parameters to the `DescribePackage` operation.
    DescribePackagesResponse:
      type: object
      properties:
        PackageDetailsList:
          allOf:
          - $ref: '#/components/schemas/PackageDetailsList'
          description: Basic information about a package.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: When `nextToken` is returned, there are more results available.
            The value of `nextToken` is a unique pagination token for each page. Send
            the request again using the returned token to retrieve the next page.
      description: Container for the response returned by the `DescribePackages` operation.
    DescribeReservedInstanceOfferingsRequest:
      type: object
      properties:
        ReservedInstanceOfferingId:
          allOf:
          - $ref: '#/components/schemas/GUID'
          description: The Reserved Instance identifier filter value. Use this parameter
            to show only the available instance types that match the specified reservation
            identifier.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: An optional parameter that specifies the maximum number of
            results to return. You can use `nextToken` to get the next page of results.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If your initial `DescribeReservedInstanceOfferings` operation
            returns a `nextToken`, you can include the returned `nextToken` in subsequent
            `DescribeReservedInstanceOfferings` operations, which returns results
            in the next page.
      description: Container for the request parameters to a `DescribeReservedInstanceOfferings`
        operation.
    DescribeReservedInstanceOfferingsResponse:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: When `nextToken` is returned, there are more results available.
            The value of `nextToken` is a unique pagination token for each page. Send
            the request again using the returned token to retrieve the next page.
        ReservedInstanceOfferings:
          allOf:
          - $ref: '#/components/schemas/ReservedInstanceOfferingList'
          description: List of Reserved Instance offerings.
      description: Container for results of a `DescribeReservedInstanceOfferings`
        request.
    DescribeReservedInstancesRequest:
      type: object
      properties:
        ReservedInstanceId:
          allOf:
          - $ref: '#/components/schemas/GUID'
          description: The reserved instance identifier filter value. Use this parameter
            to show only the reservation that matches the specified reserved OpenSearch
            instance ID.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: An optional parameter that specifies the maximum number of
            results to return. You can use `nextToken` to get the next page of results.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If your initial `DescribeReservedInstances` operation returns
            a `nextToken`, you can include the returned `nextToken` in subsequent
            `DescribeReservedInstances` operations, which returns results in the next
            page.
      description: Container for the request parameters to the `DescribeReservedInstances`
        operation.
    DescribeReservedInstancesResponse:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: When `nextToken` is returned, there are more results available.
            The value of `nextToken` is a unique pagination token for each page. Send
            the request again using the returned token to retrieve the next page.
        ReservedInstances:
          allOf:
          - $ref: '#/components/schemas/ReservedInstanceList'
          description: List of Reserved Instances in the current Region.
      description: Container for results from `DescribeReservedInstances`
    DescribeVpcEndpointsRequest:
      type: object
      properties:
        VpcEndpointIds:
          allOf:
          - $ref: '#/components/schemas/VpcEndpointIdList'
          description: The unique identifiers of the endpoints to get information
            about.
      required:
      - VpcEndpointIds
    DescribeVpcEndpointsResponse:
      type: object
      properties:
        VpcEndpoints:
          allOf:
          - $ref: '#/components/schemas/VpcEndpoints'
          description: Information about each requested VPC endpoint.
        VpcEndpointErrors:
          allOf:
          - $ref: '#/components/schemas/VpcEndpointErrorList'
          description: Any errors associated with the request.
      required:
      - VpcEndpoints
      - VpcEndpointErrors
    Description:
      type: string
    DirectQueryDataSource:
      type: object
      properties:
        DataSourceName:
          allOf:
          - $ref: '#/components/schemas/DirectQueryDataSourceName'
          description: A unique, user-defined label to identify the data source within
            your OpenSearch Service environment.
        DataSourceType:
          allOf:
          - $ref: '#/components/schemas/DirectQueryDataSourceType'
          description: The supported Amazon Web Services service that is used as the
            source for direct queries in OpenSearch Service.
        Description:
          allOf:
          - $ref: '#/components/schemas/DirectQueryDataSourceDescription'
          description: A description that provides additional context and details
            about the data source.
        OpenSearchArns:
          allOf:
          - $ref: '#/components/schemas/DirectQueryOpenSearchARNList'
          description: A list of Amazon Resource Names (ARNs) for the OpenSearch collections
            that are associated with the direct query data source.
        DataSourceArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique, system-generated identifier that represents the
            data source.
        TagList:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: A list of tags attached to a direct query data source.
      description: The configuration details for a data source that can be directly
        queried.
    DirectQueryDataSourceDescription:
      type: string
      pattern: ^([a-zA-Z0-9_])*[\\a-zA-Z0-9_@#%*+=:?./!\s-]*$
      minLength: 0
      maxLength: 1000
    DirectQueryDataSourceList:
      type: array
      items:
        $ref: '#/components/schemas/DirectQueryDataSource'
    DirectQueryDataSourceName:
      type: string
      pattern: ^[a-z][a-z0-9_]+$
      minLength: 3
      maxLength: 80
    DirectQueryDataSourceRoleArn:
      type: string
      pattern: ^arn:aws[a-zA-Z-]*:iam::\d{12}:role(\/service-role)?\/[A-Za-z0-9+=,.@\-_]{1,64}$
      minLength: 32
      maxLength: 200
    DirectQueryDataSourceType:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/CloudWatchDirectQueryDataSource'
        description: |-
          Specifies CloudWatch Logs as a type of data source for direct queries.
      - allOf:
        - $ref: '#/components/schemas/SecurityLakeDirectQueryDataSource'
        description: |-
          Specifies Security Lake as a type of data source for direct queries.
      description: |-
        The type of data source that is used for direct queries. This is a supported Amazon Web Services service, such as CloudWatch Logs or Security Lake.
    DirectQueryOpenSearchARNList:
      type: array
      items:
        $ref: '#/components/schemas/ARN'
    DisableTimestamp:
      type: string
      format: date-time
    DisabledOperationException:
      type: object
      properties:
        message:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage'
          description: A description of the error.
      description: An error occured because the client wanted to access an unsupported
        operation.
    DissociatePackageRequest:
      type: object
      properties:
        PackageID:
          allOf:
          - $ref: '#/components/schemas/PackageID'
          description: Internal ID of the package to dissociate from the domain. Use
            `ListPackagesForDomain` to find this value.
        DomainName:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          description: Name of the domain to dissociate the package from.
      required:
      - PackageID
      - DomainName
      description: Container for the request parameters to the `DissociatePackage`
        operation.
    DissociatePackageResponse:
      type: object
      properties:
        DomainPackageDetails:
          allOf:
          - $ref: '#/components/schemas/DomainPackageDetails'
          description: Information about a package that has been dissociated from
            the domain.
      description: Container for the response returned by an `DissociatePackage` operation.
    DissociatePackagesRequest:
      type: object
      properties:
        PackageList:
          allOf:
          - $ref: '#/components/schemas/PackageIDList'
          description: A list of package IDs to be dissociated from a domain.
        DomainName:
          $ref: '#/components/schemas/DomainName'
      required:
      - PackageList
      - DomainName
    DissociatePackagesResponse:
      type: object
      properties:
        DomainPackageDetailsList:
          allOf:
          - $ref: '#/components/schemas/DomainPackageDetailsList'
          description: A list of package details for the packages that were dissociated
            from the domain.
    DomainArn:
      type: string
      pattern: ^arn:aws[a-z\-]*:[a-z]+:[a-z0-9\-]+:[0-9]+:domain\/[a-z0-9\-]+$
      minLength: 1
      maxLength: 512
    DomainConfig:
      type: object
      properties:
        EngineVersion:
          allOf:
          - $ref: '#/components/schemas/VersionStatus'
          description: The OpenSearch or Elasticsearch version that the domain is
            running.
        ClusterConfig:
          allOf:
          - $ref: '#/components/schemas/ClusterConfigStatus'
          description: Container for the cluster configuration of a the domain.
        EBSOptions:
          allOf:
          - $ref: '#/components/schemas/EBSOptionsStatus'
          description: Container for EBS options configured for the domain.
        AccessPolicies:
          allOf:
          - $ref: '#/components/schemas/AccessPoliciesStatus'
          description: Specifies the access policies for the domain.
        IPAddressType:
          allOf:
          - $ref: '#/components/schemas/IPAddressTypeStatus'
          description: Choose either dual stack or IPv4 as your IP address type. Dual
            stack allows you to share domain resources across IPv4 and IPv6 address
            types, and is the recommended option. If you set your IP address type
            to dual stack, you can't change your address type later.
        SnapshotOptions:
          allOf:
          - $ref: '#/components/schemas/SnapshotOptionsStatus'
          description: DEPRECATED. Container for parameters required to configure
            automated snapshots of domain indexes.
        VPCOptions:
          allOf:
          - $ref: '#/components/schemas/VPCDerivedInfoStatus'
          description: The current VPC options for the domain and the status of any
            updates to their configuration.
        CognitoOptions:
          allOf:
          - $ref: '#/components/schemas/CognitoOptionsStatus'
          description: Container for Amazon Cognito options for the domain.
        EncryptionAtRestOptions:
          allOf:
          - $ref: '#/components/schemas/EncryptionAtRestOptionsStatus'
          description: Key-value pairs to enable encryption at rest.
        NodeToNodeEncryptionOptions:
          allOf:
          - $ref: '#/components/schemas/NodeToNodeEncryptionOptionsStatus'
          description: Whether node-to-node encryption is enabled or disabled.
        AdvancedOptions:
          allOf:
          - $ref: '#/components/schemas/AdvancedOptionsStatus'
          description: Key-value pairs to specify advanced configuration options.
            For more information, see [Advanced options](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html#createdomain-configure-advanced-options).
        LogPublishingOptions:
          allOf:
          - $ref: '#/components/schemas/LogPublishingOptionsStatus'
          description: Key-value pairs to configure log publishing.
        DomainEndpointOptions:
          allOf:
          - $ref: '#/components/schemas/DomainEndpointOptionsStatus'
          description: Additional options for the domain endpoint, such as whether
            to require HTTPS for all traffic.
        AdvancedSecurityOptions:
          allOf:
          - $ref: '#/components/schemas/AdvancedSecurityOptionsStatus'
          description: Container for fine-grained access control settings for the
            domain.
        IdentityCenterOptions:
          allOf:
          - $ref: '#/components/schemas/IdentityCenterOptionsStatus'
          description: Configuration options for enabling and managing IAM Identity
            Center integration within a domain.
        AutoTuneOptions:
          allOf:
          - $ref: '#/components/schemas/AutoTuneOptionsStatus'
          description: Container for Auto-Tune settings for the domain.
        ChangeProgressDetails:
          allOf:
          - $ref: '#/components/schemas/ChangeProgressDetails'
          description: Container for information about the progress of an existing
            configuration change.
        OffPeakWindowOptions:
          allOf:
          - $ref: '#/components/schemas/OffPeakWindowOptionsStatus'
          description: Container for off-peak window options for the domain.
        SoftwareUpdateOptions:
          allOf:
          - $ref: '#/components/schemas/SoftwareUpdateOptionsStatus'
          description: Software update options for the domain.
        ModifyingProperties:
          allOf:
          - $ref: '#/components/schemas/ModifyingPropertiesList'
          description: Information about the domain properties that are currently
            being modified.
        AIMLOptions:
          allOf:
          - $ref: '#/components/schemas/AIMLOptionsStatus'
          description: Container for parameters required to enable all machine learning
            features.
      description: Container for the configuration of an OpenSearch Service domain.
    DomainEndpointOptions:
      type: object
      properties:
        EnforceHTTPS:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: True to require that all traffic to the domain arrive over
            HTTPS.
        TLSSecurityPolicy:
          allOf:
          - $ref: '#/components/schemas/TLSSecurityPolicy'
          description: "Specify the TLS security policy to apply to the HTTPS endpoint\
            \ of the domain. The policy can be one of the following values:\n\n  *\
            \ **Policy-Min-TLS-1-0-2019-07:** TLS security policy that supports TLS\
            \ version 1.0 to TLS version 1.2\n\n  * **Policy-Min-TLS-1-2-2019-07:**\
            \ TLS security policy that supports only TLS version 1.2\n\n  * **Policy-Min-TLS-1-2-PFS-2023-10:**\
            \ TLS security policy that supports TLS version 1.2 to TLS version 1.3\
            \ with perfect forward secrecy cipher suites"
        CustomEndpointEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether to enable a custom endpoint for the domain.
        CustomEndpoint:
          allOf:
          - $ref: '#/components/schemas/DomainNameFqdn'
          description: The fully qualified URL for the custom endpoint.
        CustomEndpointCertificateArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN for your security certificate, managed in Amazon Web
            Services Certificate Manager (ACM).
      description: Options to configure a custom endpoint for an OpenSearch Service
        domain.
    DomainEndpointOptionsStatus:
      type: object
      properties:
        Options:
          allOf:
          - $ref: '#/components/schemas/DomainEndpointOptions'
          description: Options to configure the endpoint for a domain.
        Status:
          allOf:
          - $ref: '#/components/schemas/OptionStatus'
          description: The status of the endpoint options for a domain.
      required:
      - Options
      - Status
      description: The configured endpoint options for a domain and their current
        status.
    DomainHealth:
      type: string
      enum:
      - Red
      - Yellow
      - Green
      - NotAvailable
    DomainId:
      type: string
      minLength: 1
      maxLength: 64
    DomainInfo:
      type: object
      properties:
        DomainName:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          description: Name of the domain.
        EngineType:
          allOf:
          - $ref: '#/components/schemas/EngineType'
          description: The type of search engine that the domain is running.`OpenSearch`
            for an OpenSearch engine, or `Elasticsearch` for a legacy Elasticsearch
            OSS engine.
      description: Information about an OpenSearch Service domain.
    DomainInfoList:
      type: array
      items:
        $ref: '#/components/schemas/DomainInfo'
      description: <p>Contains a list of information about a domain.</p>
    DomainInformationContainer:
      type: object
      properties:
        AWSDomainInformation:
          allOf:
          - $ref: '#/components/schemas/AWSDomainInformation'
          description: Information about an Amazon OpenSearch Service domain.
      description: Container for information about an OpenSearch Service domain.
    DomainMaintenanceDetails:
      type: object
      properties:
        MaintenanceId:
          allOf:
          - $ref: '#/components/schemas/RequestId'
          description: The ID of the requested action.
        DomainName:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          description: The name of the domain.
        Action:
          allOf:
          - $ref: '#/components/schemas/MaintenanceType'
          description: The name of the action.
        NodeId:
          allOf:
          - $ref: '#/components/schemas/NodeId'
          description: The ID of the data node.
        Status:
          allOf:
          - $ref: '#/components/schemas/MaintenanceStatus'
          description: The status of the action.
        StatusMessage:
          allOf:
          - $ref: '#/components/schemas/MaintenanceStatusMessage'
          description: The status message for the action.
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/UpdateTimestamp'
          description: The time at which the action was created.
        UpdatedAt:
          allOf:
          - $ref: '#/components/schemas/UpdateTimestamp'
          description: The time at which the action was updated.
      description: Container for the domain maintenance details.
    DomainMaintenanceList:
      type: array
      items:
        $ref: '#/components/schemas/DomainMaintenanceDetails'
    DomainName:
      type: string
      pattern: ^[a-z][a-z0-9\-]+$
      minLength: 3
      maxLength: 28
    DomainNameFqdn:
      type: string
      pattern: ^(((?!-)[A-Za-z0-9-]{0,62}[A-Za-z0-9])\.)+((?!-)[A-Za-z0-9-]{1,62}[A-Za-z0-9])$
      minLength: 1
      maxLength: 255
    DomainNameList:
      type: array
      items:
        $ref: '#/components/schemas/DomainName'
      description: <p>A list of OpenSearch Service domain names.</p>
    DomainNodesStatus:
      type: object
      properties:
        NodeId:
          allOf:
          - $ref: '#/components/schemas/NodeId'
          description: The ID of the node.
        NodeType:
          allOf:
          - $ref: '#/components/schemas/NodeType'
          description: Indicates whether the nodes is a data, master, or UltraWarm
            node.
        AvailabilityZone:
          allOf:
          - $ref: '#/components/schemas/AvailabilityZone'
          description: The Availability Zone of the node.
        InstanceType:
          allOf:
          - $ref: '#/components/schemas/OpenSearchPartitionInstanceType'
          description: The instance type information of the node.
        NodeStatus:
          allOf:
          - $ref: '#/components/schemas/NodeStatus'
          description: Indicates if the node is active or in standby.
        StorageType:
          allOf:
          - $ref: '#/components/schemas/StorageTypeName'
          description: Indicates if the node has EBS or instance storage.
        StorageVolumeType:
          allOf:
          - $ref: '#/components/schemas/VolumeType'
          description: If the nodes has EBS storage, indicates if the volume type
            is gp2 or gp3. Only applicable for data nodes.
        StorageSize:
          allOf:
          - $ref: '#/components/schemas/VolumeSize'
          description: The storage size of the node, in GiB.
      description: Container for information about nodes on the domain.
    DomainNodesStatusList:
      type: array
      items:
        $ref: '#/components/schemas/DomainNodesStatus'
      description: "<p>List of <code>DomainNodesStatus</code> with details about nodes\
        \ on\n   the requested domain.</p>"
    DomainPackageDetails:
      type: object
      properties:
        PackageID:
          allOf:
          - $ref: '#/components/schemas/PackageID'
          description: Internal ID of the package.
        PackageName:
          allOf:
          - $ref: '#/components/schemas/PackageName'
          description: User-specified name of the package.
        PackageType:
          allOf:
          - $ref: '#/components/schemas/PackageType'
          description: The type of package.
        LastUpdated:
          allOf:
          - $ref: '#/components/schemas/LastUpdated'
          description: Timestamp of the most recent update to the package association
            status.
        DomainName:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          description: Name of the domain that the package is associated with.
        DomainPackageStatus:
          allOf:
          - $ref: '#/components/schemas/DomainPackageStatus'
          description: State of the association.
        PackageVersion:
          allOf:
          - $ref: '#/components/schemas/PackageVersion'
          description: The current version of the package.
        PrerequisitePackageIDList:
          allOf:
          - $ref: '#/components/schemas/PackageIDList'
          description: A list of package IDs that must be associated with the domain
            before or with the package can be associated.
        ReferencePath:
          allOf:
          - $ref: '#/components/schemas/ReferencePath'
          description: The relative path of the package on the OpenSearch Service
            cluster nodes. This is `synonym_path` when the package is for synonym
            files.
        ErrorDetails:
          allOf:
          - $ref: '#/components/schemas/ErrorDetails'
          description: Additional information if the package is in an error state.
            Null otherwise.
        AssociationConfiguration:
          allOf:
          - $ref: '#/components/schemas/PackageAssociationConfiguration'
          description: The configuration for associating a package with an Amazon
            OpenSearch Service domain.
      description: Information about a package that is associated with a domain. For
        more information, see [Custom packages for Amazon OpenSearch Service](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/custom-packages.html).
    DomainPackageDetailsList:
      type: array
      items:
        $ref: '#/components/schemas/DomainPackageDetails'
    DomainPackageStatus:
      type: string
      enum:
      - ASSOCIATING
      - ASSOCIATION_FAILED
      - ACTIVE
      - DISSOCIATING
      - DISSOCIATION_FAILED
    DomainProcessingStatusType:
      type: string
      enum:
      - Creating
      - Active
      - Modifying
      - UpgradingEngineVersion
      - UpdatingServiceSoftware
      - Isolated
      - Deleting
    DomainState:
      type: string
      enum:
      - Active
      - Processing
      - NotAvailable
    DomainStatus:
      type: object
      properties:
        DomainId:
          allOf:
          - $ref: '#/components/schemas/DomainId'
          description: Unique identifier for the domain.
        DomainName:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          description: Name of the domain. Domain names are unique across all domains
            owned by the same account within an Amazon Web Services Region.
        ARN:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the domain. For more information,
            see [IAM identifiers ](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html)
            in the _AWS Identity and Access Management User Guide_.
        Created:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Creation status of an OpenSearch Service domain. True if domain
            creation is complete. False if domain creation is still in progress.
        Deleted:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Deletion status of an OpenSearch Service domain. True if domain
            deletion is complete. False if domain deletion is still in progress. Once
            deletion is complete, the status of the domain is no longer returned.
        Endpoint:
          allOf:
          - $ref: '#/components/schemas/ServiceUrl'
          description: Domain-specific endpoint used to submit index, search, and
            data upload requests to the domain.
        EndpointV2:
          allOf:
          - $ref: '#/components/schemas/ServiceUrl'
          description: If `IPAddressType` to set to `dualstack`, a version 2 domain
            endpoint is provisioned. This endpoint functions like a normal endpoint,
            except that it works with both IPv4 and IPv6 IP addresses. Normal endpoints
            work only with IPv4 IP addresses.
        Endpoints:
          allOf:
          - $ref: '#/components/schemas/EndpointsMap'
          description: "The key-value pair that exists if the OpenSearch Service domain\
            \ uses VPC endpoints. For example:\n\n  * **IPv4 IP addresses** \\- `'vpc','vpc-endpoint-h2dsd34efgyghrtguk5gt6j2foh4.us-east-1.es.amazonaws.com'`\n\
            \n  * **Dual stack IP addresses** \\- `'vpcv2':'vpc-endpoint-h2dsd34efgyghrtguk5gt6j2foh4.aos.us-east-1.on.aws'`"
        DomainEndpointV2HostedZoneId:
          allOf:
          - $ref: '#/components/schemas/HostedZoneId'
          description: The dual stack hosted zone ID for the domain.
        Processing:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: The status of the domain configuration. True if OpenSearch
            Service is processing configuration changes. False if the configuration
            is active.
        UpgradeProcessing:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: The status of a domain version upgrade to a new version of
            OpenSearch or Elasticsearch. True if OpenSearch Service is in the process
            of a version upgrade. False if the configuration is active.
        EngineVersion:
          allOf:
          - $ref: '#/components/schemas/VersionString'
          description: Version of OpenSearch or Elasticsearch that the domain is running,
            in the format `Elasticsearch_X.Y` or `OpenSearch_X.Y`.
        ClusterConfig:
          allOf:
          - $ref: '#/components/schemas/ClusterConfig'
          description: Container for the cluster configuration of the domain.
        EBSOptions:
          allOf:
          - $ref: '#/components/schemas/EBSOptions'
          description: Container for EBS-based storage settings for the domain.
        AccessPolicies:
          allOf:
          - $ref: '#/components/schemas/PolicyDocument'
          description: Identity and Access Management (IAM) policy document specifying
            the access policies for the domain.
        IPAddressType:
          allOf:
          - $ref: '#/components/schemas/IPAddressType'
          description: The type of IP addresses supported by the endpoint for the
            domain.
        SnapshotOptions:
          allOf:
          - $ref: '#/components/schemas/SnapshotOptions'
          description: DEPRECATED. Container for parameters required to configure
            automated snapshots of domain indexes.
        VPCOptions:
          allOf:
          - $ref: '#/components/schemas/VPCDerivedInfo'
          description: The VPC configuration for the domain.
        CognitoOptions:
          allOf:
          - $ref: '#/components/schemas/CognitoOptions'
          description: Key-value pairs to configure Amazon Cognito authentication
            for OpenSearch Dashboards.
        EncryptionAtRestOptions:
          allOf:
          - $ref: '#/components/schemas/EncryptionAtRestOptions'
          description: Encryption at rest settings for the domain.
        NodeToNodeEncryptionOptions:
          allOf:
          - $ref: '#/components/schemas/NodeToNodeEncryptionOptions'
          description: Whether node-to-node encryption is enabled or disabled.
        AdvancedOptions:
          allOf:
          - $ref: '#/components/schemas/AdvancedOptions'
          description: Key-value pairs that specify advanced configuration options.
        LogPublishingOptions:
          allOf:
          - $ref: '#/components/schemas/LogPublishingOptions'
          description: Log publishing options for the domain.
        ServiceSoftwareOptions:
          allOf:
          - $ref: '#/components/schemas/ServiceSoftwareOptions'
          description: The current status of the domain's service software.
        DomainEndpointOptions:
          allOf:
          - $ref: '#/components/schemas/DomainEndpointOptions'
          description: Additional options for the domain endpoint, such as whether
            to require HTTPS for all traffic.
        AdvancedSecurityOptions:
          allOf:
          - $ref: '#/components/schemas/AdvancedSecurityOptions'
          description: Settings for fine-grained access control.
        IdentityCenterOptions:
          allOf:
          - $ref: '#/components/schemas/IdentityCenterOptions'
          description: Configuration options for controlling IAM Identity Center integration
            within a domain.
        AutoTuneOptions:
          allOf:
          - $ref: '#/components/schemas/AutoTuneOptionsOutput'
          description: Auto-Tune settings for the domain.
        ChangeProgressDetails:
          allOf:
          - $ref: '#/components/schemas/ChangeProgressDetails'
          description: Information about a configuration change happening on the domain.
        OffPeakWindowOptions:
          allOf:
          - $ref: '#/components/schemas/OffPeakWindowOptions'
          description: Options that specify a custom 10-hour window during which OpenSearch
            Service can perform configuration changes on the domain.
        SoftwareUpdateOptions:
          allOf:
          - $ref: '#/components/schemas/SoftwareUpdateOptions'
          description: Service software update options for the domain.
        DomainProcessingStatus:
          allOf:
          - $ref: '#/components/schemas/DomainProcessingStatusType'
          description: The status of any changes that are currently in progress for
            the domain.
        ModifyingProperties:
          allOf:
          - $ref: '#/components/schemas/ModifyingPropertiesList'
          description: Information about the domain properties that are currently
            being modified.
        AIMLOptions:
          allOf:
          - $ref: '#/components/schemas/AIMLOptionsOutput'
          description: Container for parameters required to enable all machine learning
            features.
      required:
      - DomainId
      - DomainName
      - ARN
      - ClusterConfig
      description: The current status of an OpenSearch Service domain.
    DomainStatusList:
      type: array
      items:
        $ref: '#/components/schemas/DomainStatus'
      description: <p>List that contains the status of each specified OpenSearch Service
        domain.</p>
    Double:
      type: number
      format: double
    DryRun:
      type: boolean
    DryRunMode:
      type: string
      enum:
      - Basic
      - Verbose
    DryRunProgressStatus:
      type: object
      properties:
        DryRunId:
          allOf:
          - $ref: '#/components/schemas/GUID'
          description: The unique identifier of the dry run.
        DryRunStatus:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The current status of the dry run.
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The timestamp when the dry run was initiated.
        UpdateDate:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The timestamp when the dry run was last updated.
        ValidationFailures:
          allOf:
          - $ref: '#/components/schemas/ValidationFailures'
          description: Any validation failures that occurred as a result of the dry
            run.
      required:
      - DryRunId
      - DryRunStatus
      - CreationDate
      - UpdateDate
      description: Information about the progress of a pre-upgrade dry run analysis.
    DryRunResults:
      type: object
      properties:
        DeploymentType:
          allOf:
          - $ref: '#/components/schemas/DeploymentType'
          description: "Specifies the way in which OpenSearch Service will apply an\
            \ update. Possible values are:\n\n  * **Blue/Green** \\- The update requires\
            \ a blue/green deployment.\n\n  * **DynamicUpdate** \\- No blue/green\
            \ deployment required\n\n  * **Undetermined** \\- The domain is in the\
            \ middle of an update and can't predict the deployment type. Try again\
            \ after the update is complete.\n\n  * **None** \\- The request doesn't\
            \ include any configuration changes."
        Message:
          allOf:
          - $ref: '#/components/schemas/Message'
          description: A message corresponding to the deployment type.
      description: Results of a dry run performed in an update domain request.
    Duration:
      type: object
      properties:
        Value:
          allOf:
          - $ref: '#/components/schemas/DurationValue'
          description: Integer to specify the value of a maintenance schedule duration.
        Unit:
          allOf:
          - $ref: '#/components/schemas/TimeUnit'
          description: The unit of measurement for the duration of a maintenance schedule.
      description: The duration of a maintenance schedule. For more information, see
        [Auto-Tune for Amazon OpenSearch Service](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/auto-tune.html).
    DurationValue:
      type: integer
      format: int64
      description: <p>Integer that specifies the value of a maintenance schedule duration.</p>
      minimum: 1
      maximum: 24
    EBSOptions:
      type: object
      properties:
        EBSEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether EBS volumes are attached to data nodes in
            an OpenSearch Service domain.
        VolumeType:
          allOf:
          - $ref: '#/components/schemas/VolumeType'
          description: Specifies the type of EBS volumes attached to data nodes.
        VolumeSize:
          allOf:
          - $ref: '#/components/schemas/IntegerClass'
          description: Specifies the size (in GiB) of EBS volumes attached to data
            nodes.
        Iops:
          allOf:
          - $ref: '#/components/schemas/IntegerClass'
          description: Specifies the baseline input/output (I/O) performance of EBS
            volumes attached to data nodes. Applicable only for the `gp3` and provisioned
            IOPS EBS volume types.
        Throughput:
          allOf:
          - $ref: '#/components/schemas/IntegerClass'
          description: Specifies the throughput (in MiB/s) of the EBS volumes attached
            to data nodes. Applicable only for the `gp3` volume type.
      description: Container for the parameters required to enable EBS-based storage
        for an OpenSearch Service domain.
    EBSOptionsStatus:
      type: object
      properties:
        Options:
          allOf:
          - $ref: '#/components/schemas/EBSOptions'
          description: The configured EBS options for the specified domain.
        Status:
          allOf:
          - $ref: '#/components/schemas/OptionStatus'
          description: The status of the EBS options for the specified domain.
      required:
      - Options
      - Status
      description: The status of the EBS options for the specified OpenSearch Service
        domain.
    EncryptionAtRestOptions:
      type: object
      properties:
        Enabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: True to enable encryption at rest.
        KmsKeyId:
          allOf:
          - $ref: '#/components/schemas/KmsKeyId'
          description: The KMS key ID. Takes the form `1a2a3a4-1a2a-3a4a-5a6a-1a2a3a4a5a6a`.
      description: Specifies whether the domain should encrypt data at rest, and if
        so, the Key Management Service (KMS) key to use. Can only be used when creating
        a new domain or enabling encryption at rest for the first time on an existing
        domain. You can't modify this parameter after it's already been specified.
    EncryptionAtRestOptionsStatus:
      type: object
      properties:
        Options:
          allOf:
          - $ref: '#/components/schemas/EncryptionAtRestOptions'
          description: Encryption at rest options for the specified domain.
        Status:
          allOf:
          - $ref: '#/components/schemas/OptionStatus'
          description: The status of the encryption at rest options for the specified
            domain.
      required:
      - Options
      - Status
      description: Status of the encryption at rest options for the specified OpenSearch
        Service domain.
    Endpoint:
      type: string
      pattern: ^[A-Za-z0-9\-\.]+$
    EndpointsMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/ServiceUrl'
    EngineType:
      type: string
      enum:
      - OpenSearch
      - Elasticsearch
    EngineVersion:
      type: string
      pattern: ^Elasticsearch_[0-9]{1}\.[0-9]{1,2}$|^OpenSearch_[0-9]{1,2}\.[0-9]{1,2}$
    EnvironmentInfo:
      type: object
      properties:
        AvailabilityZoneInformation:
          allOf:
          - $ref: '#/components/schemas/AvailabilityZoneInfoList'
          description: A list of `AvailabilityZoneInfo` for the domain.
      description: Information about the active domain environment.
    EnvironmentInfoList:
      type: array
      items:
        $ref: '#/components/schemas/EnvironmentInfo'
    ErrorDetails:
      type: object
      properties:
        ErrorType:
          allOf:
          - $ref: '#/components/schemas/ErrorType'
          description: The type of error that occurred.
        ErrorMessage:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage'
          description: A message describing the error.
      description: Additional information if the package is in an error state. Null
        otherwise.
    ErrorMessage:
      type: string
    ErrorType:
      type: string
    Filter:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the filter.
        Values:
          allOf:
          - $ref: '#/components/schemas/ValueStringList'
          description: One or more values for the filter.
      description: A filter used to limit results when describing inbound or outbound
        cross-cluster connections. You can specify multiple values per filter. A cross-cluster
        connection must match at least one of the specified values for it to be returned
        from an operation.
    FilterList:
      type: array
      items:
        $ref: '#/components/schemas/Filter'
    GUID:
      type: string
      pattern: ^\p{XDigit}{8}-\p{XDigit}{4}-\p{XDigit}{4}-\p{XDigit}{4}-\p{XDigit}{12}$
      minLength: 36
      maxLength: 36
    GUIDList:
      type: array
      items:
        $ref: '#/components/schemas/GUID'
    GetApplicationRequest:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/Id'
          description: The unique identifier of the OpenSearch application to retrieve.
      required:
      - id
    GetApplicationResponse:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/Id'
          description: The unique identifier of the OpenSearch application.
        arn:
          $ref: '#/components/schemas/ARN'
        name:
          allOf:
          - $ref: '#/components/schemas/ApplicationName'
          description: The name of the OpenSearch application.
        endpoint:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The endpoint URL of the OpenSearch application.
        status:
          allOf:
          - $ref: '#/components/schemas/ApplicationStatus'
          description: 'The current status of the OpenSearch application. Possible
            values: `CREATING`, `UPDATING`, `DELETING`, `FAILED`, `ACTIVE`, and `DELETED`.'
        iamIdentityCenterOptions:
          allOf:
          - $ref: '#/components/schemas/IamIdentityCenterOptions'
          description: The IAM Identity Center settings configured for the OpenSearch
            application.
        dataSources:
          allOf:
          - $ref: '#/components/schemas/DataSources'
          description: The data sources associated with the OpenSearch application.
        appConfigs:
          allOf:
          - $ref: '#/components/schemas/AppConfigs'
          description: The configuration settings of the OpenSearch application.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp when the OpenSearch application was created.
        lastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp of the last update to the OpenSearch application.
    GetCompatibleVersionsRequest:
      type: object
      properties:
        DomainName:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          description: The name of an existing domain. Provide this parameter to limit
            the results to a single domain.
      description: Container for the request parameters to `GetCompatibleVersions`
        operation.
    GetCompatibleVersionsResponse:
      type: object
      properties:
        CompatibleVersions:
          allOf:
          - $ref: '#/components/schemas/CompatibleVersionsList'
          description: A map of OpenSearch or Elasticsearch versions and the versions
            you can upgrade them to.
      description: Container for the response returned by the `GetCompatibleVersions`
        operation.
    GetDataSourceRequest:
      type: object
      properties:
        DomainName:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          description: The name of the domain.
        Name:
          allOf:
          - $ref: '#/components/schemas/DataSourceName'
          description: The name of the data source to get information about.
      required:
      - DomainName
      - Name
      description: Container for the parameters to the `GetDataSource` operation.
    GetDataSourceResponse:
      type: object
      properties:
        DataSourceType:
          allOf:
          - $ref: '#/components/schemas/DataSourceType'
          description: The type of data source.
        Name:
          allOf:
          - $ref: '#/components/schemas/DataSourceName'
          description: The name of the data source.
        Description:
          allOf:
          - $ref: '#/components/schemas/DataSourceDescription'
          description: A description of the data source.
        Status:
          allOf:
          - $ref: '#/components/schemas/DataSourceStatus'
          description: The status of the data source.
      description: The result of a `GetDataSource` operation.
    GetDirectQueryDataSourceRequest:
      type: object
      properties:
        DataSourceName:
          allOf:
          - $ref: '#/components/schemas/DirectQueryDataSourceName'
          description: A unique, user-defined label that identifies the data source
            within your OpenSearch Service environment.
      required:
      - DataSourceName
    GetDirectQueryDataSourceResponse:
      type: object
      properties:
        DataSourceName:
          allOf:
          - $ref: '#/components/schemas/DirectQueryDataSourceName'
          description: A unique, user-defined label to identify the data source within
            your OpenSearch Service environment.
        DataSourceType:
          allOf:
          - $ref: '#/components/schemas/DirectQueryDataSourceType'
          description: The supported Amazon Web Services service that is used as the
            source for direct queries in OpenSearch Service.
        Description:
          allOf:
          - $ref: '#/components/schemas/DirectQueryDataSourceDescription'
          description: A description that provides additional context and details
            about the data source.
        OpenSearchArns:
          allOf:
          - $ref: '#/components/schemas/DirectQueryOpenSearchARNList'
          description: A list of Amazon Resource Names (ARNs) for the OpenSearch collections
            that are associated with the direct query data source.
        DataSourceArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique, system-generated identifier that represents the
            data source.
    GetDomainMaintenanceStatusRequest:
      type: object
      properties:
        DomainName:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          description: The name of the domain.
        MaintenanceId:
          allOf:
          - $ref: '#/components/schemas/RequestId'
          description: The request ID of the maintenance action.
      required:
      - DomainName
      - MaintenanceId
      description: Container for the parameters to the `GetDomainMaintenanceStatus`
        operation.
    GetDomainMaintenanceStatusResponse:
      type: object
      properties:
        Status:
          allOf:
          - $ref: '#/components/schemas/MaintenanceStatus'
          description: The status of the maintenance action.
        StatusMessage:
          allOf:
          - $ref: '#/components/schemas/MaintenanceStatusMessage'
          description: The status message of the maintenance action.
        NodeId:
          allOf:
          - $ref: '#/components/schemas/NodeId'
          description: The node ID of the maintenance action.
        Action:
          allOf:
          - $ref: '#/components/schemas/MaintenanceType'
          description: The action name.
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/UpdateTimestamp'
          description: The time at which the action was created.
        UpdatedAt:
          allOf:
          - $ref: '#/components/schemas/UpdateTimestamp'
          description: The time at which the action was updated.
      description: The result of a `GetDomainMaintenanceStatus` request that information
        about the requested action.
    GetPackageVersionHistoryRequest:
      type: object
      properties:
        PackageID:
          allOf:
          - $ref: '#/components/schemas/PackageID'
          description: The unique identifier of the package.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: An optional parameter that specifies the maximum number of
            results to return. You can use `nextToken` to get the next page of results.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If your initial `GetPackageVersionHistory` operation returns
            a `nextToken`, you can include the returned `nextToken` in subsequent
            `GetPackageVersionHistory` operations, which returns results in the next
            page.
      required:
      - PackageID
      description: Container for the request parameters to the `GetPackageVersionHistory`
        operation.
    GetPackageVersionHistoryResponse:
      type: object
      properties:
        PackageID:
          allOf:
          - $ref: '#/components/schemas/PackageID'
          description: The unique identifier of the package.
        PackageVersionHistoryList:
          allOf:
          - $ref: '#/components/schemas/PackageVersionHistoryList'
          description: A list of package versions, along with their creation time
            and commit message.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: When `nextToken` is returned, there are more results available.
            The value of `nextToken` is a unique pagination token for each page. Send
            the request again using the returned token to retrieve the next page.
      description: Container for response returned by `GetPackageVersionHistory` operation.
    GetUpgradeHistoryRequest:
      type: object
      properties:
        DomainName:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          description: The name of an existing domain.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: An optional parameter that specifies the maximum number of
            results to return. You can use `nextToken` to get the next page of results.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If your initial `GetUpgradeHistory` operation returns a `nextToken`,
            you can include the returned `nextToken` in subsequent `GetUpgradeHistory`
            operations, which returns results in the next page.
      required:
      - DomainName
      description: Container for the request parameters to the `GetUpgradeHistory`
        operation.
    GetUpgradeHistoryResponse:
      type: object
      properties:
        UpgradeHistories:
          allOf:
          - $ref: '#/components/schemas/UpgradeHistoryList'
          description: A list of objects corresponding to each upgrade or upgrade
            eligibility check performed on a domain.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: When `nextToken` is returned, there are more results available.
            The value of `nextToken` is a unique pagination token for each page. Send
            the request again using the returned token to retrieve the next page.
      description: Container for the response returned by the `GetUpgradeHistory`
        operation.
    GetUpgradeStatusRequest:
      type: object
      properties:
        DomainName:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          description: The domain of the domain to get upgrade status information
            for.
      required:
      - DomainName
      description: Container for the request parameters to the `GetUpgradeStatus`
        operation.
    GetUpgradeStatusResponse:
      type: object
      properties:
        UpgradeStep:
          allOf:
          - $ref: '#/components/schemas/UpgradeStep'
          description: One of three steps that an upgrade or upgrade eligibility check
            goes through.
        StepStatus:
          allOf:
          - $ref: '#/components/schemas/UpgradeStatus'
          description: The status of the current step that an upgrade is on.
        UpgradeName:
          allOf:
          - $ref: '#/components/schemas/UpgradeName'
          description: A string that describes the update.
      description: Container for the response returned by the `GetUpgradeStatus` operation.
    HostedZoneId:
      type: string
    IPAddressType:
      type: string
      enum:
      - ipv4
      - dualstack
    IPAddressTypeStatus:
      type: object
      properties:
        Options:
          allOf:
          - $ref: '#/components/schemas/IPAddressType'
          description: The IP address options for the domain.
        Status:
          $ref: '#/components/schemas/OptionStatus'
      required:
      - Options
      - Status
      description: The IP address type status for the domain.
    IamIdentityCenterOptions:
      type: object
      properties:
        enabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether IAM Identity Center is enabled for the OpenSearch
            Application.
        iamIdentityCenterInstanceArn:
          $ref: '#/components/schemas/ARN'
        iamRoleForIdentityCenterApplicationArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          description: The Amazon Resource Name (ARN) of the IAM role assigned to
            the IAM Identity Center application for the OpenSearch Application.
        iamIdentityCenterApplicationArn:
          $ref: '#/components/schemas/ARN'
      description: Configuration settings for IAM Identity Center in an OpenSearch
        Application.
    IamIdentityCenterOptionsInput:
      type: object
      properties:
        enabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Specifies whether IAM Identity Center is enabled or disabled.
        iamIdentityCenterInstanceArn:
          $ref: '#/components/schemas/ARN'
        iamRoleForIdentityCenterApplicationArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          description: The ARN of the IAM role associated with the IAM Identity Center
            application.
      description: Configuration settings for enabling and managing IAM Identity Center.
    Id:
      type: string
      pattern: ^[a-z0-9]{3,30}$
    IdentityCenterApplicationARN:
      type: string
      pattern: ^arn:aws[a-z\\-]*:[a-z]+:[a-z0-9\\-]*:[0-9]*:[a-z0-9\\-]+\/[a-z0-9\\-]+\/[a-z0-9\\-]+$
      minLength: 20
      maxLength: 2048
    IdentityCenterInstanceARN:
      type: string
      pattern: ^arn:aws[a-z\\-]*:[a-z]+:[a-z0-9\\-]*:[0-9]*:[a-z0-9\\-]+\/[a-z0-9\\-]+$
      minLength: 20
      maxLength: 2048
    IdentityCenterOptions:
      type: object
      properties:
        EnabledAPIAccess:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether IAM Identity Center is enabled for the application.
        IdentityCenterInstanceARN:
          allOf:
          - $ref: '#/components/schemas/IdentityCenterInstanceARN'
          description: The Amazon Resource Name (ARN) of the IAM Identity Center instance.
        SubjectKey:
          allOf:
          - $ref: '#/components/schemas/SubjectKeyIdCOption'
          description: Specifies the attribute that contains the subject identifier
            (such as username, user ID, or email) in IAM Identity Center.
        RolesKey:
          allOf:
          - $ref: '#/components/schemas/RolesKeyIdCOption'
          description: Specifies the attribute that contains the backend role identifier
            (such as group name or group ID) in IAM Identity Center.
        IdentityCenterApplicationARN:
          allOf:
          - $ref: '#/components/schemas/IdentityCenterApplicationARN'
          description: The ARN of the IAM Identity Center application that integrates
            with Amazon OpenSearch Service.
        IdentityStoreId:
          allOf:
          - $ref: '#/components/schemas/IdentityStoreId'
          description: The identifier of the IAM Identity Store.
      description: Settings container for integrating IAM Identity Center with OpenSearch
        UI applications, which enables enabling secure user authentication and access
        control across multiple data sources. This setup supports single sign-on (SSO)
        through IAM Identity Center, allowing centralized user management.
    IdentityCenterOptionsInput:
      type: object
      properties:
        EnabledAPIAccess:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether IAM Identity Center is enabled for API access
            in Amazon OpenSearch Service.
        IdentityCenterInstanceARN:
          allOf:
          - $ref: '#/components/schemas/IdentityCenterInstanceARN'
          description: The ARN of the IAM Identity Center instance used to create
            an OpenSearch UI application that uses IAM Identity Center for authentication.
        SubjectKey:
          allOf:
          - $ref: '#/components/schemas/SubjectKeyIdCOption'
          description: Specifies the attribute that contains the subject identifier
            (such as username, user ID, or email) in IAM Identity Center.
        RolesKey:
          allOf:
          - $ref: '#/components/schemas/RolesKeyIdCOption'
          description: Specifies the attribute that contains the backend role identifier
            (such as group name or group ID) in IAM Identity Center.
      description: Configuration settings for enabling and managing IAM Identity Center.
    IdentityCenterOptionsStatus:
      type: object
      properties:
        Options:
          allOf:
          - $ref: '#/components/schemas/IdentityCenterOptions'
          description: Configuration settings for IAM Identity Center integration.
        Status:
          allOf:
          - $ref: '#/components/schemas/OptionStatus'
          description: The status of IAM Identity Center configuration settings for
            a domain.
      required:
      - Options
      - Status
      description: The status of IAM Identity Center configuration settings for a
        domain.
    IdentityPoolId:
      type: string
      pattern: ^[\w-]+:[0-9a-f-]+$
      minLength: 1
      maxLength: 55
    IdentityStoreId:
      type: string
      pattern: ^d-[0-9a-f]{10}$|^[0-9a-f]{8}\\b-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-\\b[0-9a-f]{12}$
      minLength: 1
      maxLength: 64
    InboundConnection:
      type: object
      properties:
        LocalDomainInfo:
          allOf:
          - $ref: '#/components/schemas/DomainInformationContainer'
          description: Information about the source (local) domain.
        RemoteDomainInfo:
          allOf:
          - $ref: '#/components/schemas/DomainInformationContainer'
          description: Information about the destination (remote) domain.
        ConnectionId:
          allOf:
          - $ref: '#/components/schemas/ConnectionId'
          description: The unique identifier of the connection.
        ConnectionStatus:
          allOf:
          - $ref: '#/components/schemas/InboundConnectionStatus'
          description: The current status of the connection.
        ConnectionMode:
          allOf:
          - $ref: '#/components/schemas/ConnectionMode'
          description: The connection mode.
      description: Describes an inbound cross-cluster connection for Amazon OpenSearch
        Service. For more information, see [Cross-cluster search for Amazon OpenSearch
        Service](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/cross-cluster-search.html).
    InboundConnectionStatus:
      type: object
      properties:
        StatusCode:
          allOf:
          - $ref: '#/components/schemas/InboundConnectionStatusCode'
          description: "The status code for the connection. Can be one of the following:\n\
            \n  * **PENDING_ACCEPTANCE** \\- Inbound connection is not yet accepted\
            \ by the remote domain owner.\n\n  * **APPROVED** : Inbound connection\
            \ is pending acceptance by the remote domain owner.\n\n  * **PROVISIONING**\
            \ : Inbound connection is being provisioned.\n\n  * **ACTIVE** : Inbound\
            \ connection is active and ready to use.\n\n  * **REJECTING** : Inbound\
            \ connection rejection is in process.\n\n  * **REJECTED** : Inbound connection\
            \ is rejected.\n\n  * **DELETING** : Inbound connection deletion is in\
            \ progress.\n\n  * **DELETED** : Inbound connection is deleted and can\
            \ no longer be used."
        Message:
          allOf:
          - $ref: '#/components/schemas/ConnectionStatusMessage'
          description: Information about the connection.
      description: The status of an inbound cross-cluster connection for OpenSearch
        Service.
    InboundConnectionStatusCode:
      type: string
      enum:
      - PENDING_ACCEPTANCE
      - APPROVED
      - PROVISIONING
      - ACTIVE
      - REJECTING
      - REJECTED
      - DELETING
      - DELETED
    InboundConnections:
      type: array
      items:
        $ref: '#/components/schemas/InboundConnection'
    InitiatedBy:
      type: string
      enum:
      - CUSTOMER
      - SERVICE
    InstanceCount:
      type: integer
      minimum: 1
      description: <p>Number of instances in an OpenSearch Service cluster.</p>
    InstanceCountLimits:
      type: object
      properties:
        MinimumInstanceCount:
          allOf:
          - $ref: '#/components/schemas/MinimumInstanceCount'
          description: The maximum allowed number of instances.
        MaximumInstanceCount:
          allOf:
          - $ref: '#/components/schemas/MaximumInstanceCount'
          description: The minimum allowed number of instances.
      description: Limits on the number of instances that can be created in OpenSearch
        Service for a given instance type.
    InstanceLimits:
      type: object
      properties:
        InstanceCountLimits:
          allOf:
          - $ref: '#/components/schemas/InstanceCountLimits'
          description: Limits on the number of instances that can be created for a
            given instance type.
      description: Instance-related attributes that are available for a given instance
        type.
    InstanceRole:
      type: string
    InstanceRoleList:
      type: array
      items:
        $ref: '#/components/schemas/InstanceRole'
    InstanceTypeDetails:
      type: object
      properties:
        InstanceType:
          allOf:
          - $ref: '#/components/schemas/OpenSearchPartitionInstanceType'
          description: The instance type.
        EncryptionEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether encryption at rest and node-to-node encryption are
            supported for the instance type.
        CognitoEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether Amazon Cognito access is supported for the instance
            type.
        AppLogsEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether logging is supported for the instance type.
        AdvancedSecurityEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether fine-grained access control is supported for the instance
            type.
        WarmEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether UltraWarm is supported for the instance type.
        InstanceRole:
          allOf:
          - $ref: '#/components/schemas/InstanceRoleList'
          description: Whether the instance acts as a data node, a dedicated master
            node, or an UltraWarm node.
        AvailabilityZones:
          allOf:
          - $ref: '#/components/schemas/AvailabilityZoneList'
          description: The supported Availability Zones for the instance type.
      description: Lists all instance types and available features for a given OpenSearch
        or Elasticsearch version.
    InstanceTypeDetailsList:
      type: array
      items:
        $ref: '#/components/schemas/InstanceTypeDetails'
    InstanceTypeString:
      type: string
      pattern: ^.*\..*\.search$
      minLength: 10
      maxLength: 40
    Integer:
      type: integer
      default: 0
    IntegerClass:
      type: integer
    InternalException:
      type: object
      properties:
        message:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage'
          description: A description of the error.
      description: Request processing failed because of an unknown error, exception,
        or internal failure.
    InvalidPaginationTokenException:
      type: object
      properties:
        message:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage'
          description: A description of the error.
      description: Request processing failed because you provided an invalid pagination
        token.
    InvalidTypeException:
      type: object
      properties:
        message:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage'
          description: A description of the error.
      description: An exception for trying to create or access a sub-resource that's
        either invalid or not supported.
    Issue:
      type: string
    Issues:
      type: array
      items:
        $ref: '#/components/schemas/Issue'
    JWTOptionsInput:
      type: object
      properties:
        Enabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: True to enable JWT authentication and authorization for a domain.
        SubjectKey:
          allOf:
          - $ref: '#/components/schemas/SubjectKey'
          description: Element of the JWT assertion to use for the user name.
        RolesKey:
          allOf:
          - $ref: '#/components/schemas/RolesKey'
          description: Element of the JWT assertion to use for roles.
        PublicKey:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Element of the JWT assertion used by the cluster to verify
            JWT signatures.
      description: The JWT authentication and authorization configuration for an Amazon
        OpenSearch Service domain.
    JWTOptionsOutput:
      type: object
      properties:
        Enabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: True if JWT use is enabled.
        SubjectKey:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The key used for matching the JWT subject attribute.
        RolesKey:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The key used for matching the JWT roles attribute.
        PublicKey:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The key used to verify the signature of incoming JWT requests.
      description: Describes the JWT options configured for the domain.
    KeyStoreAccessOption:
      type: object
      properties:
        KeyAccessRoleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          description: Role ARN to access the KeyStore Key
        KeyStoreAccessEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: This indicates whether Key Store access is enabled
      required:
      - KeyStoreAccessEnabled
      description: The configuration parameters to enable access to the key store
        required by the package.
    KmsKeyId:
      type: string
      pattern: .*
      minLength: 1
      maxLength: 500
    LastUpdated:
      type: string
      format: date-time
    LicenseFilepath:
      type: string
      pattern: ^(?!.*\/\.{2,})(?!.*\.\.)[a-zA-Z0-9_.-]+(?:\/[a-zA-Z0-9_.-]+)*$
      minLength: 0
      maxLength: 256
    LimitExceededException:
      type: object
      properties:
        message:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage'
          description: A description of the error.
      description: An exception for trying to create more than the allowed number
        of resources or sub-resources.
    LimitName:
      type: string
    LimitValue:
      type: string
    LimitValueList:
      type: array
      items:
        $ref: '#/components/schemas/LimitValue'
    Limits:
      type: object
      properties:
        StorageTypes:
          allOf:
          - $ref: '#/components/schemas/StorageTypeList'
          description: Storage-related attributes that are available for a given instance
            type.
        InstanceLimits:
          allOf:
          - $ref: '#/components/schemas/InstanceLimits'
          description: The limits for a given instance type.
        AdditionalLimits:
          allOf:
          - $ref: '#/components/schemas/AdditionalLimitList'
          description: List of additional limits that are specific to a given instance
            type for each of its instance roles.
      description: Limits for a given instance type and for each of its roles.
    LimitsByRole:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Limits'
      description: "<p> The role of a given instance and all applicable limits. The\
        \ role performed by a given OpenSearch instance can\n   be one of the following:\
        \ </p>\n         <ul>\n            <li>\n               <p>\n            \
        \      <b>data</b> - A data node.</p>\n            </li>\n            <li>\n\
        \               <p>\n                  <b>master</b> - A dedicated master\
        \ node.</p>\n            </li>\n            <li>\n               <p>\n   \
        \               <b>ultra_warm</b> - An UltraWarm node.</p>\n            </li>\n\
        \         </ul>"
    ListApplicationsRequest:
      type: object
      properties:
        nextToken:
          $ref: '#/components/schemas/NextToken'
        statuses:
          allOf:
          - $ref: '#/components/schemas/ApplicationStatuses'
          description: 'Filters the list of OpenSearch applications by status. Possible
            values: `CREATING`, `UPDATING`, `DELETING`, `FAILED`, `ACTIVE`, and `DELETED`.'
        maxResults:
          $ref: '#/components/schemas/MaxResults'
    ListApplicationsResponse:
      type: object
      properties:
        ApplicationSummaries:
          allOf:
          - $ref: '#/components/schemas/ApplicationSummaries'
          description: Summarizes OpenSearch applications, including ID, ARN, name,
            endpoint, status, creation time, and last update time.
        nextToken:
          $ref: '#/components/schemas/NextToken'
    ListDataSourcesRequest:
      type: object
      properties:
        DomainName:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          description: The name of the domain.
      required:
      - DomainName
      description: Container for the parameters to the `ListDataSources` operation.
    ListDataSourcesResponse:
      type: object
      properties:
        DataSources:
          allOf:
          - $ref: '#/components/schemas/DataSourceList'
          description: A list of data sources associated with specified domain.
      description: The result of a `ListDataSources` operation.
    ListDirectQueryDataSourcesRequest:
      type: object
      properties:
        NextToken:
          $ref: '#/components/schemas/NextToken'
    ListDirectQueryDataSourcesResponse:
      type: object
      properties:
        NextToken:
          $ref: '#/components/schemas/NextToken'
        DirectQueryDataSources:
          allOf:
          - $ref: '#/components/schemas/DirectQueryDataSourceList'
          description: A list of the direct query data sources that are returned by
            the `ListDirectQueryDataSources` API operation.
    ListDomainMaintenancesRequest:
      type: object
      properties:
        DomainName:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          description: The name of the domain.
        Action:
          allOf:
          - $ref: '#/components/schemas/MaintenanceType'
          description: The name of the action.
        Status:
          allOf:
          - $ref: '#/components/schemas/MaintenanceStatus'
          description: The status of the action.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: An optional parameter that specifies the maximum number of
            results to return. You can use `nextToken` to get the next page of results.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If your initial `ListDomainMaintenances` operation returns
            a `nextToken`, include the returned `nextToken` in subsequent `ListDomainMaintenances`
            operations, which returns results in the next page.
      required:
      - DomainName
      description: Container for the parameters to the `ListDomainMaintenances` operation.
    ListDomainMaintenancesResponse:
      type: object
      properties:
        DomainMaintenances:
          allOf:
          - $ref: '#/components/schemas/DomainMaintenanceList'
          description: A list of the submitted maintenance actions.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: When `nextToken` is returned, there are more results available.
            The value of `nextToken` is a unique pagination token for each page. Send
            the request again using the returned token to retrieve the next page.
      description: The result of a `ListDomainMaintenances` request that contains
        information about the requested actions.
    ListDomainNamesRequest:
      type: object
      properties:
        EngineType:
          allOf:
          - $ref: '#/components/schemas/EngineType'
          description: Filters the output by domain engine type.
      description: Container for the parameters to the `ListDomainNames` operation.
    ListDomainNamesResponse:
      type: object
      properties:
        DomainNames:
          allOf:
          - $ref: '#/components/schemas/DomainInfoList'
          description: The names of all OpenSearch Service domains owned by the current
            user and their respective engine types.
      description: The results of a `ListDomainNames` operation. Contains the names
        of all domains owned by this account and their respective engine types.
    ListDomainsForPackageRequest:
      type: object
      properties:
        PackageID:
          allOf:
          - $ref: '#/components/schemas/PackageID'
          description: The unique identifier of the package for which to list associated
            domains.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: An optional parameter that specifies the maximum number of
            results to return. You can use `nextToken` to get the next page of results.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If your initial `ListDomainsForPackage` operation returns a
            `nextToken`, you can include the returned `nextToken` in subsequent `ListDomainsForPackage`
            operations, which returns results in the next page.
      required:
      - PackageID
      description: Container for the request parameters to the `ListDomainsForPackage`
        operation.
    ListDomainsForPackageResponse:
      type: object
      properties:
        DomainPackageDetailsList:
          allOf:
          - $ref: '#/components/schemas/DomainPackageDetailsList'
          description: Information about all domains associated with a package.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: When `nextToken` is returned, there are more results available.
            The value of `nextToken` is a unique pagination token for each page. Send
            the request again using the returned token to retrieve the next page.
      description: Container for the response parameters to the `ListDomainsForPackage`
        operation.
    ListInstanceTypeDetailsRequest:
      type: object
      properties:
        EngineVersion:
          allOf:
          - $ref: '#/components/schemas/VersionString'
          description: The version of OpenSearch or Elasticsearch, in the format Elasticsearch_X.Y
            or OpenSearch_X.Y. Defaults to the latest version of OpenSearch.
        DomainName:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          description: The name of the domain.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: An optional parameter that specifies the maximum number of
            results to return. You can use `nextToken` to get the next page of results.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If your initial `ListInstanceTypeDetails` operation returns
            a `nextToken`, you can include the returned `nextToken` in subsequent
            `ListInstanceTypeDetails` operations, which returns results in the next
            page.
        RetrieveAZs:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: An optional parameter that specifies the Availability Zones
            for the domain.
        InstanceType:
          allOf:
          - $ref: '#/components/schemas/InstanceTypeString'
          description: An optional parameter that lists information for a given instance
            type.
      required:
      - EngineVersion
    ListInstanceTypeDetailsResponse:
      type: object
      properties:
        InstanceTypeDetails:
          allOf:
          - $ref: '#/components/schemas/InstanceTypeDetailsList'
          description: Lists all supported instance types and features for the given
            OpenSearch or Elasticsearch version.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: When `nextToken` is returned, there are more results available.
            The value of `nextToken` is a unique pagination token for each page. Send
            the request again using the returned token to retrieve the next page.
    ListPackagesForDomainRequest:
      type: object
      properties:
        DomainName:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          description: The name of the domain for which you want to list associated
            packages.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: An optional parameter that specifies the maximum number of
            results to return. You can use `nextToken` to get the next page of results.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If your initial `ListPackagesForDomain` operation returns a
            `nextToken`, you can include the returned `nextToken` in subsequent `ListPackagesForDomain`
            operations, which returns results in the next page.
      required:
      - DomainName
      description: Container for the request parameters to the `ListPackagesForDomain`
        operation.
    ListPackagesForDomainResponse:
      type: object
      properties:
        DomainPackageDetailsList:
          allOf:
          - $ref: '#/components/schemas/DomainPackageDetailsList'
          description: List of all packages associated with a domain.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: When `nextToken` is returned, there are more results available.
            The value of `nextToken` is a unique pagination token for each page. Send
            the request again using the returned token to retrieve the next page.
      description: Container for the response parameters to the `ListPackagesForDomain`
        operation.
    ListScheduledActionsRequest:
      type: object
      properties:
        DomainName:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          description: The name of the domain.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: An optional parameter that specifies the maximum number of
            results to return. You can use `nextToken` to get the next page of results.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If your initial `ListScheduledActions` operation returns a
            `nextToken`, you can include the returned `nextToken` in subsequent `ListScheduledActions`
            operations, which returns results in the next page.
      required:
      - DomainName
    ListScheduledActionsResponse:
      type: object
      properties:
        ScheduledActions:
          allOf:
          - $ref: '#/components/schemas/ScheduledActionsList'
          description: A list of actions that are scheduled for the domain.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: When `nextToken` is returned, there are more results available.
            The value of `nextToken` is a unique pagination token for each page. Send
            the request again using the returned token to retrieve the next page.
    ListTagsRequest:
      type: object
      properties:
        ARN:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: Amazon Resource Name (ARN) for the domain, data source, or
            application to view tags for.
      required:
      - ARN
      description: Container for the parameters to the `ListTags` operation.
    ListTagsResponse:
      type: object
      properties:
        TagList:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: List of resource tags associated with the specified domain,
            data source, or application.
      description: The results of a `ListTags` operation.
    ListVersionsRequest:
      type: object
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: An optional parameter that specifies the maximum number of
            results to return. You can use `nextToken` to get the next page of results.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If your initial `ListVersions` operation returns a `nextToken`,
            you can include the returned `nextToken` in subsequent `ListVersions`
            operations, which returns results in the next page.
      description: Container for the request parameters to the `ListVersions` operation.
    ListVersionsResponse:
      type: object
      properties:
        Versions:
          allOf:
          - $ref: '#/components/schemas/VersionList'
          description: A list of all versions of OpenSearch and Elasticsearch that
            Amazon OpenSearch Service supports.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: When `nextToken` is returned, there are more results available.
            The value of `nextToken` is a unique pagination token for each page. Send
            the request again using the returned token to retrieve the next page.
      description: Container for the parameters for response received from the `ListVersions`
        operation.
    ListVpcEndpointAccessRequest:
      type: object
      properties:
        DomainName:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          description: The name of the OpenSearch Service domain to retrieve access
            information for.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If your initial `ListVpcEndpointAccess` operation returns a
            `nextToken`, you can include the returned `nextToken` in subsequent `ListVpcEndpointAccess`
            operations, which returns results in the next page.
      required:
      - DomainName
    ListVpcEndpointAccessResponse:
      type: object
      properties:
        AuthorizedPrincipalList:
          allOf:
          - $ref: '#/components/schemas/AuthorizedPrincipalList'
          description: A list of [IAM principals](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_principal.html)
            that can currently access the domain.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: When `nextToken` is returned, there are more results available.
            The value of `nextToken` is a unique pagination token for each page. Send
            the request again using the returned token to retrieve the next page.
      required:
      - AuthorizedPrincipalList
      - NextToken
    ListVpcEndpointsForDomainRequest:
      type: object
      properties:
        DomainName:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          description: The name of the domain to list associated VPC endpoints for.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If your initial `ListEndpointsForDomain` operation returns
            a `nextToken`, you can include the returned `nextToken` in subsequent
            `ListEndpointsForDomain` operations, which returns results in the next
            page.
      required:
      - DomainName
    ListVpcEndpointsForDomainResponse:
      type: object
      properties:
        VpcEndpointSummaryList:
          allOf:
          - $ref: '#/components/schemas/VpcEndpointSummaryList'
          description: Information about each endpoint associated with the domain.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: When `nextToken` is returned, there are more results available.
            The value of `nextToken` is a unique pagination token for each page. Send
            the request again using the returned token to retrieve the next page.
      required:
      - VpcEndpointSummaryList
      - NextToken
    ListVpcEndpointsRequest:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If your initial `ListVpcEndpoints` operation returns a `nextToken`,
            you can include the returned `nextToken` in subsequent `ListVpcEndpoints`
            operations, which returns results in the next page.
    ListVpcEndpointsResponse:
      type: object
      properties:
        VpcEndpointSummaryList:
          allOf:
          - $ref: '#/components/schemas/VpcEndpointSummaryList'
          description: Information about each endpoint.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: When `nextToken` is returned, there are more results available.
            The value of `nextToken` is a unique pagination token for each page. Send
            the request again using the returned token to retrieve the next page.
      required:
      - VpcEndpointSummaryList
      - NextToken
    LogPublishingOption:
      type: object
      properties:
        CloudWatchLogsLogGroupArn:
          allOf:
          - $ref: '#/components/schemas/CloudWatchLogsLogGroupArn'
          description: The Amazon Resource Name (ARN) of the CloudWatch Logs group
            to publish logs to.
        Enabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether the log should be published.
      description: 'Specifies whether the Amazon OpenSearch Service domain publishes
        the OpenSearch application and slow logs to Amazon CloudWatch. For more information,
        see [Monitoring OpenSearch logs with Amazon CloudWatch Logs](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/createdomain-configure-slow-logs.html).


        After you enable log publishing, you still have to enable the collection of
        slow logs using the OpenSearch REST API.'
    LogPublishingOptions:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/LogPublishingOption'
    LogPublishingOptionsStatus:
      type: object
      properties:
        Options:
          allOf:
          - $ref: '#/components/schemas/LogPublishingOptions'
          description: The log publishing options configured for the domain.
        Status:
          allOf:
          - $ref: '#/components/schemas/OptionStatus'
          description: The status of the log publishing options for the domain.
      description: The configured log publishing options for the domain and their
        current status.
    LogType:
      type: string
      enum:
      - INDEX_SLOW_LOGS
      - SEARCH_SLOW_LOGS
      - ES_APPLICATION_LOGS
      - AUDIT_LOGS
      description: "<p>The type of log file. Can be one of the following:</p>\n  \
        \       <ul>\n            <li>\n               <p>\n                  <b>INDEX_SLOW_LOGS</b>\
        \ - Index slow logs contain insert requests\n     that took more time than\
        \ the configured index query log threshold to execute.</p>\n            </li>\n\
        \            <li>\n               <p>\n                  <b>SEARCH_SLOW_LOGS</b>\
        \ - Search slow logs contain search\n     queries that took more time than\
        \ the configured search query log threshold to execute.</p>\n            </li>\n\
        \            <li>\n               <p>\n                  <b>ES_APPLICATION_LOGS</b>\
        \ - OpenSearch application logs contain\n     information about errors and\
        \ warnings raised during the operation of the service and can be\n     useful\
        \ for troubleshooting.</p>\n            </li>\n            <li>\n        \
        \       <p>\n                  <b>AUDIT_LOGS</b> - Audit logs contain records\
        \ of user requests\n     for access to the domain.</p>\n            </li>\n\
        \         </ul>"
    Long:
      type: integer
      format: int64
    MaintenanceStatus:
      type: string
      enum:
      - PENDING
      - IN_PROGRESS
      - COMPLETED
      - FAILED
      - TIMED_OUT
    MaintenanceStatusMessage:
      type: string
      pattern: ^([\s\S]*)$
      minLength: 0
      maxLength: 1000
    MaintenanceType:
      type: string
      enum:
      - REBOOT_NODE
      - RESTART_SEARCH_PROCESS
      - RESTART_DASHBOARD
    MasterNodeStatus:
      type: string
      enum:
      - Available
      - UnAvailable
    MasterUserOptions:
      type: object
      properties:
        MasterUserARN:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: Amazon Resource Name (ARN) for the master user. Only specify
            if `InternalUserDatabaseEnabled` is `false`.
        MasterUserName:
          allOf:
          - $ref: '#/components/schemas/Username'
          description: User name for the master user. Only specify if `InternalUserDatabaseEnabled`
            is `true`.
        MasterUserPassword:
          allOf:
          - $ref: '#/components/schemas/Password'
          description: Password for the master user. Only specify if `InternalUserDatabaseEnabled`
            is `true`.
      description: Credentials for the master user for a domain.
    MaxResults:
      type: integer
      default: 0
      maximum: 100
      description: "<p>An optional parameter that specifies the maximum number of\
        \ results to return for a given\n   request.</p>"
    MaximumInstanceCount:
      type: integer
      default: 0
      description: <p>Maximum number of instances that can be instantiated for a given
        instance type.</p>
    Message:
      type: string
      minLength: 0
      maxLength: 1024
    MinimumInstanceCount:
      type: integer
      default: 0
      description: <p> Minimum number of instances that can be instantiated for a
        given instance type.</p>
    ModifyingProperties:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the property that is currently being modified.
        ActiveValue:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The current value of the domain property that is being modified.
        PendingValue:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The value that the property that is currently being modified
            will eventually have.
        ValueType:
          allOf:
          - $ref: '#/components/schemas/PropertyValueType'
          description: "The type of value that is currently being modified. Properties\
            \ can have two types:\n\n  * `PLAIN_TEXT`: Contain direct values such\
            \ as \"1\", \"True\", or \"c5.large.search\".\n\n  * `STRINGIFIED_JSON`:\
            \ Contain content in JSON format, such as {\"Enabled\":\"True\"}\"."
      description: Information about the domain properties that are currently being
        modified.
    ModifyingPropertiesList:
      type: array
      items:
        $ref: '#/components/schemas/ModifyingProperties'
    NaturalLanguageQueryGenerationCurrentState:
      type: string
      enum:
      - NOT_ENABLED
      - ENABLE_COMPLETE
      - ENABLE_IN_PROGRESS
      - ENABLE_FAILED
      - DISABLE_COMPLETE
      - DISABLE_IN_PROGRESS
      - DISABLE_FAILED
    NaturalLanguageQueryGenerationDesiredState:
      type: string
      enum:
      - ENABLED
      - DISABLED
    NaturalLanguageQueryGenerationOptionsInput:
      type: object
      properties:
        DesiredState:
          allOf:
          - $ref: '#/components/schemas/NaturalLanguageQueryGenerationDesiredState'
          description: The desired state of the natural language query generation
            feature. Valid values are ENABLED and DISABLED.
      description: Container for parameters required to enable the natural language
        query generation feature.
    NaturalLanguageQueryGenerationOptionsOutput:
      type: object
      properties:
        DesiredState:
          allOf:
          - $ref: '#/components/schemas/NaturalLanguageQueryGenerationDesiredState'
          description: The desired state of the natural language query generation
            feature. Valid values are ENABLED and DISABLED.
        CurrentState:
          allOf:
          - $ref: '#/components/schemas/NaturalLanguageQueryGenerationCurrentState'
          description: The current state of the natural language query generation
            feature, indicating completion, in progress, or failure.
      description: Container for parameters representing the state of the natural
        language query generation feature on the specified domain.
    NextToken:
      type: string
    NodeConfig:
      type: object
      properties:
        Enabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: A boolean value indicating whether a specific node type is
            active or inactive.
        Type:
          allOf:
          - $ref: '#/components/schemas/OpenSearchPartitionInstanceType'
          description: The instance type of a particular node within the cluster.
        Count:
          allOf:
          - $ref: '#/components/schemas/IntegerClass'
          description: The number of nodes of a specific type within the cluster.
      description: Configuration options for defining the setup of any node type within
        the cluster.
    NodeId:
      type: string
      minLength: 10
      maxLength: 40
    NodeOption:
      type: object
      properties:
        NodeType:
          allOf:
          - $ref: '#/components/schemas/NodeOptionsNodeType'
          description: Defines the type of node, such as coordinating nodes.
        NodeConfig:
          allOf:
          - $ref: '#/components/schemas/NodeConfig'
          description: Configuration options for defining the setup of any node type.
      description: Configuration settings for defining the node type within a cluster.
    NodeOptionsList:
      type: array
      items:
        $ref: '#/components/schemas/NodeOption'
    NodeOptionsNodeType:
      type: string
      enum:
      - coordinator
    NodeStatus:
      type: string
      enum:
      - Active
      - StandBy
      - NotAvailable
    NodeToNodeEncryptionOptions:
      type: object
      properties:
        Enabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: True to enable node-to-node encryption.
      description: Enables or disables node-to-node encryption. For more information,
        see [Node-to-node encryption for Amazon OpenSearch Service](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/ntn.html).
    NodeToNodeEncryptionOptionsStatus:
      type: object
      properties:
        Options:
          allOf:
          - $ref: '#/components/schemas/NodeToNodeEncryptionOptions'
          description: The node-to-node encryption options for the specified domain.
        Status:
          allOf:
          - $ref: '#/components/schemas/OptionStatus'
          description: The status of the node-to-node encryption options for the specified
            domain.
      required:
      - Options
      - Status
      description: Status of the node-to-node encryption options for the specified
        domain.
    NodeType:
      type: string
      enum:
      - Data
      - Ultrawarm
      - Master
    NonEmptyString:
      type: string
      pattern: ^[a-zA-Z0-9\-\_\.]+$
      minLength: 1
      maxLength: 100
    NumberOfAZs:
      type: string
      pattern: ^((\d+)|(NotAvailable))$
    NumberOfNodes:
      type: string
      pattern: ^((\d+)|(NotAvailable))$
    NumberOfShards:
      type: string
      pattern: ^((\d+)|(NotAvailable))$
    OffPeakWindow:
      type: object
      properties:
        WindowStartTime:
          allOf:
          - $ref: '#/components/schemas/WindowStartTime'
          description: A custom start time for the off-peak window, in Coordinated
            Universal Time (UTC). The window length will always be 10 hours, so you
            can't specify an end time. For example, if you specify 11:00 P.M. UTC
            as a start time, the end time will automatically be set to 9:00 A.M.
      description: 'A custom 10-hour, low-traffic window during which OpenSearch Service
        can perform mandatory configuration changes on the domain. These actions can
        include scheduled service software updates and blue/green Auto-Tune enhancements.
        OpenSearch Service will schedule these actions during the window that you
        specify.


        If you don''t specify a window start time, it defaults to 10:00 P.M. local
        time.


        For more information, see [Defining off-peak maintenance windows for Amazon
        OpenSearch Service](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/off-peak.html).'
    OffPeakWindowOptions:
      type: object
      properties:
        Enabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: 'Whether to enable an off-peak window.


            This option is only available when modifying a domain created prior to
            February 16, 2023, not when creating a new domain. All domains created
            after this date have the off-peak window enabled by default. You can''t
            disable the off-peak window after it''s enabled for a domain.'
        OffPeakWindow:
          allOf:
          - $ref: '#/components/schemas/OffPeakWindow'
          description: Off-peak window settings for the domain.
      description: Options for a domain's [off-peak window](https://docs.aws.amazon.com/opensearch-service/latest/APIReference/API_OffPeakWindow.html),
        during which OpenSearch Service can perform mandatory configuration changes
        on the domain.
    OffPeakWindowOptionsStatus:
      type: object
      properties:
        Options:
          allOf:
          - $ref: '#/components/schemas/OffPeakWindowOptions'
          description: The domain's off-peak window configuration.
        Status:
          allOf:
          - $ref: '#/components/schemas/OptionStatus'
          description: The current status of off-peak window options.
      description: The status of [off-peak window](https://docs.aws.amazon.com/opensearch-service/latest/APIReference/API_OffPeakWindow.html)
        options for a domain.
    OpenSearchPartitionInstanceType:
      type: string
      enum:
      - m3.medium.search
      - m3.large.search
      - m3.xlarge.search
      - m3.2xlarge.search
      - m4.large.search
      - m4.xlarge.search
      - m4.2xlarge.search
      - m4.4xlarge.search
      - m4.10xlarge.search
      - m5.large.search
      - m5.xlarge.search
      - m5.2xlarge.search
      - m5.4xlarge.search
      - m5.12xlarge.search
      - m5.24xlarge.search
      - r5.large.search
      - r5.xlarge.search
      - r5.2xlarge.search
      - r5.4xlarge.search
      - r5.12xlarge.search
      - r5.24xlarge.search
      - c5.large.search
      - c5.xlarge.search
      - c5.2xlarge.search
      - c5.4xlarge.search
      - c5.9xlarge.search
      - c5.18xlarge.search
      - t3.nano.search
      - t3.micro.search
      - t3.small.search
      - t3.medium.search
      - t3.large.search
      - t3.xlarge.search
      - t3.2xlarge.search
      - or1.medium.search
      - or1.large.search
      - or1.xlarge.search
      - or1.2xlarge.search
      - or1.4xlarge.search
      - or1.8xlarge.search
      - or1.12xlarge.search
      - or1.16xlarge.search
      - ultrawarm1.medium.search
      - ultrawarm1.large.search
      - ultrawarm1.xlarge.search
      - t2.micro.search
      - t2.small.search
      - t2.medium.search
      - r3.large.search
      - r3.xlarge.search
      - r3.2xlarge.search
      - r3.4xlarge.search
      - r3.8xlarge.search
      - i2.xlarge.search
      - i2.2xlarge.search
      - d2.xlarge.search
      - d2.2xlarge.search
      - d2.4xlarge.search
      - d2.8xlarge.search
      - c4.large.search
      - c4.xlarge.search
      - c4.2xlarge.search
      - c4.4xlarge.search
      - c4.8xlarge.search
      - r4.large.search
      - r4.xlarge.search
      - r4.2xlarge.search
      - r4.4xlarge.search
      - r4.8xlarge.search
      - r4.16xlarge.search
      - i3.large.search
      - i3.xlarge.search
      - i3.2xlarge.search
      - i3.4xlarge.search
      - i3.8xlarge.search
      - i3.16xlarge.search
      - r6g.large.search
      - r6g.xlarge.search
      - r6g.2xlarge.search
      - r6g.4xlarge.search
      - r6g.8xlarge.search
      - r6g.12xlarge.search
      - m6g.large.search
      - m6g.xlarge.search
      - m6g.2xlarge.search
      - m6g.4xlarge.search
      - m6g.8xlarge.search
      - m6g.12xlarge.search
      - c6g.large.search
      - c6g.xlarge.search
      - c6g.2xlarge.search
      - c6g.4xlarge.search
      - c6g.8xlarge.search
      - c6g.12xlarge.search
      - r6gd.large.search
      - r6gd.xlarge.search
      - r6gd.2xlarge.search
      - r6gd.4xlarge.search
      - r6gd.8xlarge.search
      - r6gd.12xlarge.search
      - r6gd.16xlarge.search
      - t4g.small.search
      - t4g.medium.search
    OpenSearchWarmPartitionInstanceType:
      type: string
      enum:
      - ultrawarm1.medium.search
      - ultrawarm1.large.search
      - ultrawarm1.xlarge.search
    OptionState:
      type: string
      enum:
      - RequiresIndexDocuments
      - Processing
      - Active
      description: "<p>The state of a requested domain configuration change. Can be\
        \ one of the following:</p>\n         <ul>\n            <li>\n           \
        \    <p>\n                  <b>Processing</b> - The requested change is still\
        \ in\n     progress.</p>\n            </li>\n            <li>\n          \
        \     <p>\n                  <b>Active</b> - The requested change is processed\
        \ and deployed\n     to the domain.</p>\n            </li>\n         </ul>"
    OptionStatus:
      type: object
      properties:
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/UpdateTimestamp'
          description: The timestamp when the entity was created.
        UpdateDate:
          allOf:
          - $ref: '#/components/schemas/UpdateTimestamp'
          description: The timestamp of the last time the entity was updated.
        UpdateVersion:
          allOf:
          - $ref: '#/components/schemas/UIntValue'
          description: The latest version of the entity.
        State:
          allOf:
          - $ref: '#/components/schemas/OptionState'
          description: The state of the entity.
        PendingDeletion:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether the entity is being deleted.
      required:
      - CreationDate
      - UpdateDate
      - State
      description: Provides the current status of an entity.
    OutboundConnection:
      type: object
      properties:
        LocalDomainInfo:
          allOf:
          - $ref: '#/components/schemas/DomainInformationContainer'
          description: Information about the source (local) domain.
        RemoteDomainInfo:
          allOf:
          - $ref: '#/components/schemas/DomainInformationContainer'
          description: Information about the destination (remote) domain.
        ConnectionId:
          allOf:
          - $ref: '#/components/schemas/ConnectionId'
          description: Unique identifier of the connection.
        ConnectionAlias:
          allOf:
          - $ref: '#/components/schemas/ConnectionAlias'
          description: Name of the connection.
        ConnectionStatus:
          allOf:
          - $ref: '#/components/schemas/OutboundConnectionStatus'
          description: Status of the connection.
        ConnectionMode:
          allOf:
          - $ref: '#/components/schemas/ConnectionMode'
          description: The connection mode.
        ConnectionProperties:
          allOf:
          - $ref: '#/components/schemas/ConnectionProperties'
          description: Properties for the outbound connection.
      description: Specifies details about an outbound cross-cluster connection.
    OutboundConnectionStatus:
      type: object
      properties:
        StatusCode:
          allOf:
          - $ref: '#/components/schemas/OutboundConnectionStatusCode'
          description: "The status code for the outbound connection. Can be one of\
            \ the following:\n\n  * **VALIDATING** \\- The outbound connection request\
            \ is being validated.\n\n  * **VALIDATION_FAILED** \\- Validation failed\
            \ for the connection request.\n\n  * **PENDING_ACCEPTANCE** : Outbound\
            \ connection request is validated and is not yet accepted by the remote\
            \ domain owner.\n\n  * **APPROVED** \\- Outbound connection has been approved\
            \ by the remote domain owner for getting provisioned.\n\n  * **PROVISIONING**\
            \ \\- Outbound connection request is in process.\n\n  * **ACTIVE** \\\
            - Outbound connection is active and ready to use.\n\n  * **REJECTING**\
            \ \\- Outbound connection rejection by remote domain owner is in progress.\n\
            \n  * **REJECTED** \\- Outbound connection request is rejected by remote\
            \ domain owner.\n\n  * **DELETING** \\- Outbound connection deletion is\
            \ in progress.\n\n  * **DELETED** \\- Outbound connection is deleted and\
            \ can no longer be used."
        Message:
          allOf:
          - $ref: '#/components/schemas/ConnectionStatusMessage'
          description: Verbose information for the outbound connection.
      description: The status of an outbound cross-cluster connection.
    OutboundConnectionStatusCode:
      type: string
      enum:
      - VALIDATING
      - VALIDATION_FAILED
      - PENDING_ACCEPTANCE
      - APPROVED
      - PROVISIONING
      - ACTIVE
      - REJECTING
      - REJECTED
      - DELETING
      - DELETED
    OutboundConnections:
      type: array
      items:
        $ref: '#/components/schemas/OutboundConnection'
    OverallChangeStatus:
      type: string
      enum:
      - PENDING
      - PROCESSING
      - COMPLETED
      - FAILED
      description: <p>The overall status value of the domain configuration change.</p>
    OwnerId:
      type: string
      pattern: ^[0-9]+$
      minLength: 12
      maxLength: 12
    PackageAssociationConfiguration:
      type: object
      properties:
        KeyStoreAccessOption:
          allOf:
          - $ref: '#/components/schemas/KeyStoreAccessOption'
          description: The configuration parameters to enable accessing the key store
            required by the package.
      description: The configuration for associating a package with a domain.
    PackageConfiguration:
      type: object
      properties:
        LicenseRequirement:
          allOf:
          - $ref: '#/components/schemas/RequirementLevel'
          description: The license requirements for the package.
        LicenseFilepath:
          allOf:
          - $ref: '#/components/schemas/LicenseFilepath'
          description: The relative file path for the license associated with the
            package.
        ConfigurationRequirement:
          allOf:
          - $ref: '#/components/schemas/RequirementLevel'
          description: The configuration requirements for the package.
        RequiresRestartForConfigurationUpdate:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: This indicates whether a B/G deployment is required for updating
            the configuration that the plugin is prerequisite for.
      required:
      - LicenseRequirement
      - ConfigurationRequirement
      description: The configuration parameters for a package.
    PackageDescription:
      type: string
      minLength: 0
      maxLength: 1024
    PackageDetails:
      type: object
      properties:
        PackageID:
          allOf:
          - $ref: '#/components/schemas/PackageID'
          description: The unique identifier of the package.
        PackageName:
          allOf:
          - $ref: '#/components/schemas/PackageName'
          description: The user-specified name of the package.
        PackageType:
          allOf:
          - $ref: '#/components/schemas/PackageType'
          description: The type of package.
        PackageDescription:
          allOf:
          - $ref: '#/components/schemas/PackageDescription'
          description: User-specified description of the package.
        PackageStatus:
          allOf:
          - $ref: '#/components/schemas/PackageStatus'
          description: The current status of the package. The available options are
            `AVAILABLE`, `COPYING`, `COPY_FAILED`, `VALIDATNG`, `VALIDATION_FAILED`,
            `DELETING`, and `DELETE_FAILED`.
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/CreatedAt'
          description: The timestamp when the package was created.
        LastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/LastUpdated'
          description: Date and time when the package was last updated.
        AvailablePackageVersion:
          allOf:
          - $ref: '#/components/schemas/PackageVersion'
          description: The package version.
        ErrorDetails:
          allOf:
          - $ref: '#/components/schemas/ErrorDetails'
          description: Additional information if the package is in an error state.
            Null otherwise.
        EngineVersion:
          allOf:
          - $ref: '#/components/schemas/EngineVersion'
          description: Version of OpenSearch or Elasticsearch, in the format Elasticsearch_X.Y
            or OpenSearch_X.Y. Defaults to the latest version of OpenSearch.
        AvailablePluginProperties:
          allOf:
          - $ref: '#/components/schemas/PluginProperties'
          description: If the package is a `ZIP-PLUGIN` package, additional information
            about plugin properties.
        AvailablePackageConfiguration:
          allOf:
          - $ref: '#/components/schemas/PackageConfiguration'
          description: This represents the available configuration parameters for
            the package.
        AllowListedUserList:
          allOf:
          - $ref: '#/components/schemas/PackageUserList'
          description: A list of users who are allowed to view and associate the package.
            This field is only visible to the owner of a package.
        PackageOwner:
          allOf:
          - $ref: '#/components/schemas/PackageOwner'
          description: The owner of the package who is allowed to create and update
            a package and add users to the package scope.
        PackageVendingOptions:
          allOf:
          - $ref: '#/components/schemas/PackageVendingOptions'
          description: Package Vending Options for a package.
        PackageEncryptionOptions:
          allOf:
          - $ref: '#/components/schemas/PackageEncryptionOptions'
          description: Encryption options for a package.
      description: Basic information about a package.
    PackageDetailsForAssociation:
      type: object
      properties:
        PackageID:
          allOf:
          - $ref: '#/components/schemas/PackageID'
          description: Internal ID of the package that you want to associate with
            a domain.
        PrerequisitePackageIDList:
          allOf:
          - $ref: '#/components/schemas/PackageIDList'
          description: List of package IDs that must be linked to the domain before
            or simultaneously with the package association.
        AssociationConfiguration:
          allOf:
          - $ref: '#/components/schemas/PackageAssociationConfiguration'
          description: The configuration parameters for associating the package with
            a domain.
      required:
      - PackageID
      description: Details of a package that is associated with a domain.
    PackageDetailsForAssociationList:
      type: array
      items:
        $ref: '#/components/schemas/PackageDetailsForAssociation'
    PackageDetailsList:
      type: array
      items:
        $ref: '#/components/schemas/PackageDetails'
    PackageEncryptionOptions:
      type: object
      properties:
        KmsKeyIdentifier:
          allOf:
          - $ref: '#/components/schemas/KmsKeyId'
          description: KMS key ID for encrypting the package.
        EncryptionEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether encryption is enabled for the package.
      required:
      - EncryptionEnabled
      description: Encryption options for a package.
    PackageID:
      type: string
      pattern: ^([FG][0-9]+)$|^(pkg-[a-f0-9]+)$
    PackageIDList:
      type: array
      items:
        $ref: '#/components/schemas/PackageID'
    PackageName:
      type: string
      pattern: ^[a-z][a-z0-9\-]+$
      minLength: 3
      maxLength: 256
    PackageOwner:
      type: string
      minLength: 0
      maxLength: 1024
    PackageScopeOperationEnum:
      type: string
      enum:
      - ADD
      - OVERRIDE
      - REMOVE
    PackageSource:
      type: object
      properties:
        S3BucketName:
          allOf:
          - $ref: '#/components/schemas/S3BucketName'
          description: The name of the Amazon S3 bucket containing the package.
        S3Key:
          allOf:
          - $ref: '#/components/schemas/S3Key'
          description: Key (file name) of the package.
      description: The Amazon S3 location to import the package from.
    PackageStatus:
      type: string
      enum:
      - COPYING
      - COPY_FAILED
      - VALIDATING
      - VALIDATION_FAILED
      - AVAILABLE
      - DELETING
      - DELETED
      - DELETE_FAILED
    PackageType:
      type: string
      enum:
      - TXT-DICTIONARY
      - ZIP-PLUGIN
      - PACKAGE-LICENSE
      - PACKAGE-CONFIG
    PackageUser:
      type: string
      pattern: ^[0-9]{12}$|^GLOBAL$
      minLength: 6
      maxLength: 12
    PackageUserList:
      type: array
      items:
        $ref: '#/components/schemas/PackageUser'
    PackageVendingOptions:
      type: object
      properties:
        VendingEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether the package vending feature is enabled, allowing
            the package to be used by other users.
      required:
      - VendingEnabled
      description: Configuration options for determining whether a package can be
        made available for use by other users.
    PackageVersion:
      type: string
    PackageVersionHistory:
      type: object
      properties:
        PackageVersion:
          allOf:
          - $ref: '#/components/schemas/PackageVersion'
          description: The package version.
        CommitMessage:
          allOf:
          - $ref: '#/components/schemas/CommitMessage'
          description: A message associated with the package version when it was uploaded.
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/CreatedAt'
          description: The date and time when the package was created.
        PluginProperties:
          allOf:
          - $ref: '#/components/schemas/PluginProperties'
          description: Additional information about plugin properties if the package
            is a `ZIP-PLUGIN` package.
        PackageConfiguration:
          allOf:
          - $ref: '#/components/schemas/PackageConfiguration'
          description: The configuration details for a specific version of a package.
      description: Details about a package version.
    PackageVersionHistoryList:
      type: array
      items:
        $ref: '#/components/schemas/PackageVersionHistory'
    Password:
      type: string
      pattern: .*
      minLength: 8
      maxLength: 128
    PluginClassName:
      type: string
      minLength: 0
      maxLength: 1024
    PluginDescription:
      type: string
      minLength: 0
      maxLength: 1024
    PluginName:
      type: string
      minLength: 0
      maxLength: 1024
    PluginProperties:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/PluginName'
          description: The name of the plugin.
        Description:
          allOf:
          - $ref: '#/components/schemas/PluginDescription'
          description: The description of the plugin.
        Version:
          allOf:
          - $ref: '#/components/schemas/PluginVersion'
          description: The version of the plugin.
        ClassName:
          allOf:
          - $ref: '#/components/schemas/PluginClassName'
          description: The name of the class to load.
        UncompressedSizeInBytes:
          allOf:
          - $ref: '#/components/schemas/UncompressedPluginSizeInBytes'
          description: The uncompressed size of the plugin.
      description: Basic information about the plugin.
    PluginVersion:
      type: string
      minLength: 0
      maxLength: 1024
    PolicyDocument:
      type: string
      pattern: .*
      minLength: 0
      maxLength: 102400
    PrincipalType:
      type: string
      enum:
      - AWS_ACCOUNT
      - AWS_SERVICE
    PropertyValueType:
      type: string
      enum:
      - PLAIN_TEXT
      - STRINGIFIED_JSON
    PurchaseReservedInstanceOfferingRequest:
      type: object
      properties:
        ReservedInstanceOfferingId:
          allOf:
          - $ref: '#/components/schemas/GUID'
          description: The ID of the Reserved Instance offering to purchase.
        ReservationName:
          allOf:
          - $ref: '#/components/schemas/ReservationToken'
          description: A customer-specified identifier to track this reservation.
        InstanceCount:
          allOf:
          - $ref: '#/components/schemas/InstanceCount'
          description: The number of OpenSearch instances to reserve.
      required:
      - ReservedInstanceOfferingId
      - ReservationName
      description: Container for request parameters to the `PurchaseReservedInstanceOffering`
        operation.
    PurchaseReservedInstanceOfferingResponse:
      type: object
      properties:
        ReservedInstanceId:
          allOf:
          - $ref: '#/components/schemas/GUID'
          description: The ID of the Reserved Instance offering that was purchased.
        ReservationName:
          allOf:
          - $ref: '#/components/schemas/ReservationToken'
          description: The customer-specified identifier used to track this reservation.
      description: Represents the output of a `PurchaseReservedInstanceOffering` operation.
    RecurringCharge:
      type: object
      properties:
        RecurringChargeAmount:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: The monetary amount of the recurring charge.
        RecurringChargeFrequency:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The frequency of the recurring charge.
      description: Contains the specific price and frequency of a recurring charges
        for an OpenSearch Reserved Instance, or for a Reserved Instance offering.
    RecurringChargeList:
      type: array
      items:
        $ref: '#/components/schemas/RecurringCharge'
    ReferencePath:
      type: string
    Region:
      type: string
      pattern: ^[a-z][a-z0-9\-]+$
      minLength: 5
      maxLength: 30
    RejectInboundConnectionRequest:
      type: object
      properties:
        ConnectionId:
          allOf:
          - $ref: '#/components/schemas/ConnectionId'
          description: The unique identifier of the inbound connection to reject.
      required:
      - ConnectionId
      description: Container for the request parameters to the `RejectInboundConnection`
        operation.
    RejectInboundConnectionResponse:
      type: object
      properties:
        Connection:
          allOf:
          - $ref: '#/components/schemas/InboundConnection'
          description: Contains details about the rejected inbound connection.
      description: Represents the output of a `RejectInboundConnection` operation.
    RemoveTagsRequest:
      type: object
      properties:
        ARN:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the domain, data source,
            or application from which you want to delete the specified tags.
        TagKeys:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: The list of tag keys to remove from the domain, data source,
            or application.
      required:
      - ARN
      - TagKeys
      description: Container for the request parameters to the `RemoveTags` operation.
    RequestId:
      type: string
      pattern: ^([\s\S]*)$
      minLength: 1
      maxLength: 100
    RequirementLevel:
      type: string
      enum:
      - REQUIRED
      - OPTIONAL
      - NONE
    ReservationToken:
      type: string
      pattern: .*
      minLength: 5
      maxLength: 64
    ReservedInstance:
      type: object
      properties:
        ReservationName:
          allOf:
          - $ref: '#/components/schemas/ReservationToken'
          description: The customer-specified identifier to track this reservation.
        ReservedInstanceId:
          allOf:
          - $ref: '#/components/schemas/GUID'
          description: The unique identifier for the reservation.
        BillingSubscriptionId:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: The unique identifier of the billing subscription.
        ReservedInstanceOfferingId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique identifier of the Reserved Instance offering.
        InstanceType:
          allOf:
          - $ref: '#/components/schemas/OpenSearchPartitionInstanceType'
          description: The OpenSearch instance type offered by theReserved Instance
            offering.
        StartTime:
          allOf:
          - $ref: '#/components/schemas/UpdateTimestamp'
          description: The date and time when the reservation was purchased.
        Duration:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The duration, in seconds, for which the OpenSearch instance
            is reserved.
        FixedPrice:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: The upfront fixed charge you will paid to purchase the specific
            Reserved Instance offering.
        UsagePrice:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: The hourly rate at which you're charged for the domain using
            this Reserved Instance.
        CurrencyCode:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The currency code for the offering.
        InstanceCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of OpenSearch instances that have been reserved.
        State:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The state of the Reserved Instance.
        PaymentOption:
          allOf:
          - $ref: '#/components/schemas/ReservedInstancePaymentOption'
          description: The payment option as defined in the Reserved Instance offering.
        RecurringCharges:
          allOf:
          - $ref: '#/components/schemas/RecurringChargeList'
          description: The recurring charge to your account, regardless of whether
            you create any domains using the Reserved Instance offering.
      description: Details of an OpenSearch Reserved Instance.
    ReservedInstanceList:
      type: array
      items:
        $ref: '#/components/schemas/ReservedInstance'
    ReservedInstanceOffering:
      type: object
      properties:
        ReservedInstanceOfferingId:
          allOf:
          - $ref: '#/components/schemas/GUID'
          description: The unique identifier of the Reserved Instance offering.
        InstanceType:
          allOf:
          - $ref: '#/components/schemas/OpenSearchPartitionInstanceType'
          description: The OpenSearch instance type offered by the Reserved Instance
            offering.
        Duration:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The duration, in seconds, for which the offering will reserve
            the OpenSearch instance.
        FixedPrice:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: The upfront fixed charge you will pay to purchase the specific
            Reserved Instance offering.
        UsagePrice:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: The hourly rate at which you're charged for the domain using
            this Reserved Instance.
        CurrencyCode:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The currency code for the Reserved Instance offering.
        PaymentOption:
          allOf:
          - $ref: '#/components/schemas/ReservedInstancePaymentOption'
          description: Payment option for the Reserved Instance offering
        RecurringCharges:
          allOf:
          - $ref: '#/components/schemas/RecurringChargeList'
          description: The recurring charge to your account, regardless of whether
            you creates any domains using the offering.
      description: Details of an OpenSearch Reserved Instance offering.
    ReservedInstanceOfferingList:
      type: array
      items:
        $ref: '#/components/schemas/ReservedInstanceOffering'
    ReservedInstancePaymentOption:
      type: string
      enum:
      - ALL_UPFRONT
      - PARTIAL_UPFRONT
      - NO_UPFRONT
    ResourceAlreadyExistsException:
      type: object
      properties:
        message:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage'
          description: A description of the error.
      description: An exception for creating a resource that already exists.
    ResourceNotFoundException:
      type: object
      properties:
        message:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage'
          description: A description of the error.
      description: An exception for accessing or deleting a resource that doesn't
        exist.
    RevokeVpcEndpointAccessRequest:
      type: object
      properties:
        DomainName:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          description: The name of the OpenSearch Service domain.
        Account:
          allOf:
          - $ref: '#/components/schemas/AWSAccount'
          description: The account ID to revoke access from.
        Service:
          allOf:
          - $ref: '#/components/schemas/AWSServicePrincipal'
          description: The service SP to revoke access from.
      required:
      - DomainName
    RevokeVpcEndpointAccessResponse:
      type: object
      properties: {}
    RoleArn:
      type: string
      pattern: ^arn:(aws|aws\-cn|aws\-us\-gov|aws\-iso|aws\-iso\-b):iam::[0-9]+:role\/
      minLength: 20
      maxLength: 2048
    RolesKey:
      type: string
      minLength: 1
      maxLength: 64
    RolesKeyIdCOption:
      type: string
      enum:
      - GroupName
      - GroupId
    RollbackOnDisable:
      type: string
      enum:
      - NO_ROLLBACK
      - DEFAULT_ROLLBACK
      description: <p>The rollback state while disabling Auto-Tune for the domain.</p>
    S3BucketName:
      type: string
      minLength: 3
      maxLength: 63
    S3GlueDataCatalog:
      type: object
      properties:
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          description: '>The Amazon Resource Name (ARN) for the S3 Glue Data Catalog.'
      description: Information about the Amazon S3 Glue Data Catalog.
    S3Key:
      type: string
      minLength: 1
      maxLength: 1024
    SAMLEntityId:
      type: string
      minLength: 8
      maxLength: 512
    SAMLIdp:
      type: object
      properties:
        MetadataContent:
          allOf:
          - $ref: '#/components/schemas/SAMLMetadata'
          description: The metadata of the SAML application, in XML format.
        EntityId:
          allOf:
          - $ref: '#/components/schemas/SAMLEntityId'
          description: The unique entity ID of the application in the SAML identity
            provider.
      required:
      - MetadataContent
      - EntityId
      description: The SAML identity povider information.
    SAMLMetadata:
      type: string
      minLength: 1
      maxLength: 1048576
    SAMLOptionsInput:
      type: object
      properties:
        Enabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: True to enable SAML authentication for a domain.
        Idp:
          allOf:
          - $ref: '#/components/schemas/SAMLIdp'
          description: The SAML Identity Provider's information.
        MasterUserName:
          allOf:
          - $ref: '#/components/schemas/Username'
          description: The SAML master user name, which is stored in the domain's
            internal user database.
        MasterBackendRole:
          allOf:
          - $ref: '#/components/schemas/BackendRole'
          description: The backend role that the SAML master user is mapped to.
        SubjectKey:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Element of the SAML assertion to use for the user name. Default
            is `NameID`.
        RolesKey:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Element of the SAML assertion to use for backend roles. Default
            is `roles`.
        SessionTimeoutMinutes:
          allOf:
          - $ref: '#/components/schemas/IntegerClass'
          description: The duration, in minutes, after which a user session becomes
            inactive. Acceptable values are between 1 and 1440, and the default value
            is 60.
      description: The SAML authentication configuration for an Amazon OpenSearch
        Service domain.
    SAMLOptionsOutput:
      type: object
      properties:
        Enabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: True if SAML is enabled.
        Idp:
          allOf:
          - $ref: '#/components/schemas/SAMLIdp'
          description: Describes the SAML identity provider's information.
        SubjectKey:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The key used for matching the SAML subject attribute.
        RolesKey:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The key used for matching the SAML roles attribute.
        SessionTimeoutMinutes:
          allOf:
          - $ref: '#/components/schemas/IntegerClass'
          description: The duration, in minutes, after which a user session becomes
            inactive.
      description: Describes the SAML application configured for the domain.
    ScheduleAt:
      type: string
      enum:
      - NOW
      - TIMESTAMP
      - OFF_PEAK_WINDOW
    ScheduledAction:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique identifier of the scheduled action.
        Type:
          allOf:
          - $ref: '#/components/schemas/ActionType'
          description: The type of action that will be taken on the domain.
        Severity:
          allOf:
          - $ref: '#/components/schemas/ActionSeverity'
          description: The severity of the action.
        ScheduledTime:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: The time when the change is scheduled to happen.
        Description:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A description of the action to be taken.
        ScheduledBy:
          allOf:
          - $ref: '#/components/schemas/ScheduledBy'
          description: Whether the action was scheduled manually (`CUSTOMER`, or by
            OpenSearch Service automatically (`SYSTEM`).
        Status:
          allOf:
          - $ref: '#/components/schemas/ActionStatus'
          description: The current status of the scheduled action.
        Mandatory:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether the action is required or optional.
        Cancellable:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether or not the scheduled action is cancellable.
      required:
      - Id
      - Type
      - Severity
      - ScheduledTime
      description: Information about a scheduled configuration change for an OpenSearch
        Service domain. This actions can be a [service software update](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/service-software.html)
        or a [blue/green Auto-Tune enhancement](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/auto-tune.html#auto-tune-types).
    ScheduledActionsList:
      type: array
      items:
        $ref: '#/components/schemas/ScheduledAction'
    ScheduledAutoTuneActionType:
      type: string
      enum:
      - JVM_HEAP_SIZE_TUNING
      - JVM_YOUNG_GEN_TUNING
      description: <p>The Auto-Tune action type.</p>
    ScheduledAutoTuneDescription:
      type: string
    ScheduledAutoTuneDetails:
      type: object
      properties:
        Date:
          allOf:
          - $ref: '#/components/schemas/AutoTuneDate'
          description: The date and time when the Auto-Tune action is scheduled for
            the domain.
        ActionType:
          allOf:
          - $ref: '#/components/schemas/ScheduledAutoTuneActionType'
          description: The type of Auto-Tune action.
        Action:
          allOf:
          - $ref: '#/components/schemas/ScheduledAutoTuneDescription'
          description: A description of the Auto-Tune action.
        Severity:
          allOf:
          - $ref: '#/components/schemas/ScheduledAutoTuneSeverityType'
          description: The severity of the Auto-Tune action. Valid values are `LOW`,
            `MEDIUM`, and `HIGH`.
      description: Specifies details about a scheduled Auto-Tune action. For more
        information, see [Auto-Tune for Amazon OpenSearch Service](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/auto-tune.html).
    ScheduledAutoTuneSeverityType:
      type: string
      enum:
      - LOW
      - MEDIUM
      - HIGH
      description: <p>The Auto-Tune action severity.</p>
    ScheduledBy:
      type: string
      enum:
      - CUSTOMER
      - SYSTEM
    SecurityLakeDirectQueryDataSource:
      type: object
      properties:
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/DirectQueryDataSourceRoleArn'
          description: The unique identifier of the IAM role that grants OpenSearch
            Service permission to access the specified data source.
      required:
      - RoleArn
      description: Configuration details for a Security Lake data source that can
        be used for direct queries.
    ServiceSoftwareOptions:
      type: object
      properties:
        CurrentVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The current service software version present on the domain.
        NewVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The new service software version, if one is available.
        UpdateAvailable:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: True if you're able to update your service software version.
            False if you can't update your service software version.
        Cancellable:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: True if you're able to cancel your service software version
            update. False if you can't cancel your service software update.
        UpdateStatus:
          allOf:
          - $ref: '#/components/schemas/DeploymentStatus'
          description: The status of your service software update.
        Description:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A description of the service software update status.
        AutomatedUpdateDate:
          allOf:
          - $ref: '#/components/schemas/DeploymentCloseDateTimeStamp'
          description: The timestamp, in Epoch time, until which you can manually
            request a service software update. After this date, we automatically update
            your service software.
        OptionalDeployment:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: True if a service software is never automatically updated.
            False if a service software is automatically updated after the automated
            update date.
      description: The current status of the service software for an Amazon OpenSearch
        Service domain. For more information, see [Service software updates in Amazon
        OpenSearch Service](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/service-software.html).
    ServiceUrl:
      type: string
    SkipUnavailableStatus:
      type: string
      enum:
      - ENABLED
      - DISABLED
      description: "<p>The status of <code>SkipUnavailable</code> setting for the\
        \ outbound connection.</p>\n         <ul>\n            <li>\n            \
        \   <p>\n                  <b>ENABLED</b> - The <code>SkipUnavailable</code>\
        \ setting is enabled\n     for the connection.</p>\n            </li>\n  \
        \          <li>\n               <p>\n                  <b>DISABLED</b> - The\
        \ <code>SkipUnavailable</code> setting is disabled\n     for the connection.</p>\n\
        \            </li>\n         </ul>"
    SlotList:
      type: array
      items:
        $ref: '#/components/schemas/Long'
    SlotNotAvailableException:
      type: object
      properties:
        SlotSuggestions:
          allOf:
          - $ref: '#/components/schemas/SlotList'
          description: Alternate time slots during which OpenSearch Service has available
            capacity to schedule a domain action.
        message:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage'
          description: A description of the error.
      description: An exception for attempting to schedule a domain action during
        an unavailable time slot.
    SnapshotOptions:
      type: object
      properties:
        AutomatedSnapshotStartHour:
          allOf:
          - $ref: '#/components/schemas/IntegerClass'
          description: The time, in UTC format, when OpenSearch Service takes a daily
            automated snapshot of the specified domain. Default is `0` hours.
      description: The time, in UTC format, when OpenSearch Service takes a daily
        automated snapshot of the specified domain. Default is `0` hours.
    SnapshotOptionsStatus:
      type: object
      properties:
        Options:
          allOf:
          - $ref: '#/components/schemas/SnapshotOptions'
          description: The daily snapshot options specified for the domain.
        Status:
          allOf:
          - $ref: '#/components/schemas/OptionStatus'
          description: The status of a daily automated snapshot.
      required:
      - Options
      - Status
      description: Container for information about a daily automated snapshot for
        an OpenSearch Service domain.
    SoftwareUpdateOptions:
      type: object
      properties:
        AutoSoftwareUpdateEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether automatic service software updates are enabled for
            the domain.
      description: Options for configuring service software updates for a domain.
    SoftwareUpdateOptionsStatus:
      type: object
      properties:
        Options:
          allOf:
          - $ref: '#/components/schemas/SoftwareUpdateOptions'
          description: The service software update options for a domain.
        Status:
          allOf:
          - $ref: '#/components/schemas/OptionStatus'
          description: The status of service software update options, including creation
            date and last updated date.
      description: The status of the service software options for a domain.
    StartAt:
      type: string
      format: date-time
    StartDomainMaintenanceRequest:
      type: object
      properties:
        DomainName:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          description: The name of the domain.
        Action:
          allOf:
          - $ref: '#/components/schemas/MaintenanceType'
          description: The name of the action.
        NodeId:
          allOf:
          - $ref: '#/components/schemas/NodeId'
          description: The ID of the data node.
      required:
      - DomainName
      - Action
      description: Container for the parameters to the `StartDomainMaintenance` operation.
    StartDomainMaintenanceResponse:
      type: object
      properties:
        MaintenanceId:
          allOf:
          - $ref: '#/components/schemas/RequestId'
          description: The request ID of requested action.
      description: The result of a `StartDomainMaintenance` request that information
        about the requested action.
    StartServiceSoftwareUpdateRequest:
      type: object
      properties:
        DomainName:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          description: The name of the domain that you want to update to the latest
            service software.
        ScheduleAt:
          allOf:
          - $ref: '#/components/schemas/ScheduleAt'
          description: "When to start the service software update.\n\n  * `NOW` \\\
            - Immediately schedules the update to happen in the current hour if there's\
            \ capacity available.\n\n  * `TIMESTAMP` \\- Lets you specify a custom\
            \ date and time to apply the update. If you specify this value, you must\
            \ also provide a value for `DesiredStartTime`.\n\n  * `OFF_PEAK_WINDOW`\
            \ \\- Marks the update to be picked up during an upcoming off-peak window.\
            \ There's no guarantee that the update will happen during the next immediate\
            \ window. Depending on capacity, it might happen in subsequent days.\n\
            \nDefault: `NOW` if you don't specify a value for `DesiredStartTime`,\
            \ and `TIMESTAMP` if you do."
        DesiredStartTime:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: The Epoch timestamp when you want the service software update
            to start. You only need to specify this parameter if you set `ScheduleAt`
            to `TIMESTAMP`.
      required:
      - DomainName
      description: Container for the request parameters to the `StartServiceSoftwareUpdate`
        operation.
    StartServiceSoftwareUpdateResponse:
      type: object
      properties:
        ServiceSoftwareOptions:
          allOf:
          - $ref: '#/components/schemas/ServiceSoftwareOptions'
          description: The current status of the OpenSearch Service software update.
      description: Represents the output of a `StartServiceSoftwareUpdate` operation.
        Contains the status of the update.
    StartTimeHours:
      type: integer
      format: int64
      default: 0
      minimum: 0
      maximum: 23
    StartTimeMinutes:
      type: integer
      format: int64
      default: 0
      minimum: 0
      maximum: 59
    StartTimestamp:
      type: string
      format: date-time
    StorageSubTypeName:
      type: string
    StorageType:
      type: object
      properties:
        StorageTypeName:
          allOf:
          - $ref: '#/components/schemas/StorageTypeName'
          description: The name of the storage type.
        StorageSubTypeName:
          allOf:
          - $ref: '#/components/schemas/StorageSubTypeName'
          description: The storage sub-type, such as `gp3` or `io1`.
        StorageTypeLimits:
          allOf:
          - $ref: '#/components/schemas/StorageTypeLimitList'
          description: Limits that are applicable for the given storage type.
      description: A list of storage types for an Amazon OpenSearch Service domain
        that are available for a given intance type.
    StorageTypeLimit:
      type: object
      properties:
        LimitName:
          allOf:
          - $ref: '#/components/schemas/LimitName'
          description: "Name of storage limits that are applicable for the given storage\
            \ type. If `StorageType` is `ebs`, the following options are available:\n\
            \n  * **MinimumVolumeSize** \\- Minimum volume size that is available\
            \ for the given storage type. Can be empty if not applicable.\n\n  * **MaximumVolumeSize**\
            \ \\- Maximum volume size that is available for the given storage type.\
            \ Can be empty if not applicable.\n\n  * **MaximumIops** \\- Maximum amount\
            \ of IOPS that is available for the given the storage type. Can be empty\
            \ if not applicable.\n\n  * **MinimumIops** \\- Minimum amount of IOPS\
            \ that is available for the given the storage type. Can be empty if not\
            \ applicable.\n\n  * **MaximumThroughput** \\- Maximum amount of throughput\
            \ that is available for the given the storage type. Can be empty if not\
            \ applicable.\n\n  * **MinimumThroughput** \\- Minimum amount of throughput\
            \ that is available for the given the storage type. Can be empty if not\
            \ applicable."
        LimitValues:
          allOf:
          - $ref: '#/components/schemas/LimitValueList'
          description: The limit values.
      description: Limits that are applicable for the given Amazon OpenSearch Service
        storage type.
    StorageTypeLimitList:
      type: array
      items:
        $ref: '#/components/schemas/StorageTypeLimit'
    StorageTypeList:
      type: array
      items:
        $ref: '#/components/schemas/StorageType'
    StorageTypeName:
      type: string
    String:
      type: string
    StringList:
      type: array
      items:
        $ref: '#/components/schemas/String'
    SubjectKey:
      type: string
      minLength: 1
      maxLength: 64
    SubjectKeyIdCOption:
      type: string
      enum:
      - UserName
      - UserId
      - Email
    TLSSecurityPolicy:
      type: string
      enum:
      - Policy-Min-TLS-1-0-2019-07
      - Policy-Min-TLS-1-2-2019-07
      - Policy-Min-TLS-1-2-PFS-2023-10
    Tag:
      type: object
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/TagKey'
          description: The tag key. Tag keys must be unique for the domain to which
            they are attached.
        Value:
          allOf:
          - $ref: '#/components/schemas/TagValue'
          description: 'The value assigned to the corresponding tag key. Tag values
            can be null and don''t have to be unique in a tag set. For example, you
            can have a key value pair in a tag set of `project : Trinity` and `cost-center
            : Trinity`'
      required:
      - Key
      - Value
      description: A tag (key-value pair) for an Amazon OpenSearch Service resource.
    TagKey:
      type: string
      pattern: .*
      minLength: 1
      maxLength: 128
    TagList:
      type: array
      items:
        $ref: '#/components/schemas/Tag'
      description: <p>A list of tags attached to a domain.</p>
    TagValue:
      type: string
      pattern: .*
      minLength: 0
      maxLength: 256
    TimeUnit:
      type: string
      enum:
      - HOURS
      description: <p>The unit of a maintenance schedule duration. Valid value is
        <code>HOUR</code>.</p>
    Timestamp:
      type: string
      format: date-time
    TotalNumberOfStages:
      type: integer
      default: 0
    UIntValue:
      type: integer
      default: 0
      minimum: 0
    UncompressedPluginSizeInBytes:
      type: integer
      format: int64
    UpdateApplicationRequest:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/Id'
          description: The unique identifier for the OpenSearch application to be
            updated.
        dataSources:
          allOf:
          - $ref: '#/components/schemas/DataSources'
          description: The data sources to associate with the OpenSearch application.
        appConfigs:
          allOf:
          - $ref: '#/components/schemas/AppConfigs'
          description: The configuration settings to modify for the OpenSearch application.
      required:
      - id
    UpdateApplicationResponse:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/Id'
          description: The unique identifier of the updated OpenSearch application.
        name:
          allOf:
          - $ref: '#/components/schemas/ApplicationName'
          description: The name of the updated OpenSearch application.
        arn:
          $ref: '#/components/schemas/ARN'
        dataSources:
          allOf:
          - $ref: '#/components/schemas/DataSources'
          description: The data sources associated with the updated OpenSearch application.
        iamIdentityCenterOptions:
          allOf:
          - $ref: '#/components/schemas/IamIdentityCenterOptions'
          description: The IAM Identity Center configuration for the updated OpenSearch
            application.
        appConfigs:
          allOf:
          - $ref: '#/components/schemas/AppConfigs'
          description: The configuration settings for the updated OpenSearch application.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp when the OpenSearch application was originally
            created.
        lastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp when the OpenSearch application was last updated.
    UpdateDataSourceRequest:
      type: object
      properties:
        DomainName:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          description: The name of the domain.
        Name:
          allOf:
          - $ref: '#/components/schemas/DataSourceName'
          description: The name of the data source to modify.
        DataSourceType:
          allOf:
          - $ref: '#/components/schemas/DataSourceType'
          description: The type of data source.
        Description:
          allOf:
          - $ref: '#/components/schemas/DataSourceDescription'
          description: A new description of the data source.
        Status:
          allOf:
          - $ref: '#/components/schemas/DataSourceStatus'
          description: The status of the data source update.
      required:
      - DomainName
      - Name
      - DataSourceType
      description: Container for the parameters to the `UpdateDataSource` operation.
    UpdateDataSourceResponse:
      type: object
      properties:
        Message:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A message associated with the updated data source.
      description: The result of an `UpdateDataSource` operation.
    UpdateDirectQueryDataSourceRequest:
      type: object
      properties:
        DataSourceName:
          allOf:
          - $ref: '#/components/schemas/DirectQueryDataSourceName'
          description: A unique, user-defined label to identify the data source within
            your OpenSearch Service environment.
        DataSourceType:
          allOf:
          - $ref: '#/components/schemas/DirectQueryDataSourceType'
          description: The supported Amazon Web Services service that you want to
            use as the source for direct queries in OpenSearch Service.
        Description:
          allOf:
          - $ref: '#/components/schemas/DirectQueryDataSourceDescription'
          description: An optional text field for providing additional context and
            details about the data source.
        OpenSearchArns:
          allOf:
          - $ref: '#/components/schemas/DirectQueryOpenSearchARNList'
          description: A list of Amazon Resource Names (ARNs) for the OpenSearch collections
            that are associated with the direct query data source.
      required:
      - DataSourceName
      - DataSourceType
      - OpenSearchArns
    UpdateDirectQueryDataSourceResponse:
      type: object
      properties:
        DataSourceArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique, system-generated identifier that represents the
            data source.
    UpdateDomainConfigRequest:
      type: object
      properties:
        DomainName:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          description: The name of the domain that you're updating.
        ClusterConfig:
          allOf:
          - $ref: '#/components/schemas/ClusterConfig'
          description: Changes that you want to make to the cluster configuration,
            such as the instance type and number of EC2 instances.
        EBSOptions:
          allOf:
          - $ref: '#/components/schemas/EBSOptions'
          description: The type and size of the EBS volume to attach to instances
            in the domain.
        SnapshotOptions:
          allOf:
          - $ref: '#/components/schemas/SnapshotOptions'
          description: Option to set the time, in UTC format, for the daily automated
            snapshot. Default value is `0` hours.
        VPCOptions:
          allOf:
          - $ref: '#/components/schemas/VPCOptions'
          description: Options to specify the subnets and security groups for a VPC
            endpoint. For more information, see [Launching your Amazon OpenSearch
            Service domains using a VPC](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/vpc.html).
        CognitoOptions:
          allOf:
          - $ref: '#/components/schemas/CognitoOptions'
          description: Key-value pairs to configure Amazon Cognito authentication
            for OpenSearch Dashboards.
        AdvancedOptions:
          allOf:
          - $ref: '#/components/schemas/AdvancedOptions'
          description: "Key-value pairs to specify advanced configuration options.\
            \ The following key-value pairs are supported:\n\n  * `\"rest.action.multi.allow_explicit_index\"\
            : \"true\" | \"false\"` \\- Note the use of a string rather than a boolean.\
            \ Specifies whether explicit references to indexes are allowed inside\
            \ the body of HTTP requests. If you want to configure access policies\
            \ for domain sub-resources, such as specific indexes and domain APIs,\
            \ you must disable this property. Default is true.\n\n  * `\"indices.fielddata.cache.size\"\
            : \"80\" ` \\- Note the use of a string rather than a boolean. Specifies\
            \ the percentage of heap space allocated to field data. Default is unbounded.\n\
            \n  * `\"indices.query.bool.max_clause_count\": \"1024\"` \\- Note the\
            \ use of a string rather than a boolean. Specifies the maximum number\
            \ of clauses allowed in a Lucene boolean query. Default is 1,024. Queries\
            \ with more than the permitted number of clauses result in a `TooManyClauses`\
            \ error.\n\nFor more information, see [Advanced cluster parameters](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html#createdomain-configure-advanced-options)."
        AccessPolicies:
          allOf:
          - $ref: '#/components/schemas/PolicyDocument'
          description: Identity and Access Management (IAM) access policy as a JSON-formatted
            string.
        IPAddressType:
          allOf:
          - $ref: '#/components/schemas/IPAddressType'
          description: Specify either dual stack or IPv4 as your IP address type.
            Dual stack allows you to share domain resources across IPv4 and IPv6 address
            types, and is the recommended option. If your IP address type is currently
            set to dual stack, you can't change it.
        LogPublishingOptions:
          allOf:
          - $ref: '#/components/schemas/LogPublishingOptions'
          description: Options to publish OpenSearch logs to Amazon CloudWatch Logs.
        EncryptionAtRestOptions:
          allOf:
          - $ref: '#/components/schemas/EncryptionAtRestOptions'
          description: Encryption at rest options for the domain.
        DomainEndpointOptions:
          allOf:
          - $ref: '#/components/schemas/DomainEndpointOptions'
          description: Additional options for the domain endpoint, such as whether
            to require HTTPS for all traffic.
        NodeToNodeEncryptionOptions:
          allOf:
          - $ref: '#/components/schemas/NodeToNodeEncryptionOptions'
          description: Node-to-node encryption options for the domain.
        AdvancedSecurityOptions:
          allOf:
          - $ref: '#/components/schemas/AdvancedSecurityOptionsInput'
          description: Options for fine-grained access control.
        IdentityCenterOptions:
          $ref: '#/components/schemas/IdentityCenterOptionsInput'
        AutoTuneOptions:
          allOf:
          - $ref: '#/components/schemas/AutoTuneOptions'
          description: Options for Auto-Tune.
        DryRun:
          allOf:
          - $ref: '#/components/schemas/DryRun'
          description: This flag, when set to True, specifies whether the `UpdateDomain`
            request should return the results of a dry run analysis without actually
            applying the change. A dry run determines what type of deployment the
            update will cause.
        DryRunMode:
          allOf:
          - $ref: '#/components/schemas/DryRunMode'
          description: "The type of dry run to perform.\n\n  * `Basic` only returns\
            \ the type of deployment (blue/green or dynamic) that the update will\
            \ cause.\n\n  * `Verbose` runs an additional check to validate the changes\
            \ you're making. For more information, see [Validating a domain update](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/managedomains-configuration-changes#validation-check)."
        OffPeakWindowOptions:
          allOf:
          - $ref: '#/components/schemas/OffPeakWindowOptions'
          description: Off-peak window options for the domain.
        SoftwareUpdateOptions:
          allOf:
          - $ref: '#/components/schemas/SoftwareUpdateOptions'
          description: Service software update options for the domain.
        AIMLOptions:
          allOf:
          - $ref: '#/components/schemas/AIMLOptionsInput'
          description: Options for all machine learning features for the specified
            domain.
      required:
      - DomainName
      description: Container for the request parameters to the `UpdateDomain` operation.
    UpdateDomainConfigResponse:
      type: object
      properties:
        DomainConfig:
          allOf:
          - $ref: '#/components/schemas/DomainConfig'
          description: The status of the updated domain.
        DryRunResults:
          allOf:
          - $ref: '#/components/schemas/DryRunResults'
          description: Results of the dry run performed in the update domain request.
        DryRunProgressStatus:
          allOf:
          - $ref: '#/components/schemas/DryRunProgressStatus'
          description: The status of the dry run being performed on the domain, if
            any.
      required:
      - DomainConfig
      description: The results of an `UpdateDomain` request. Contains the status of
        the domain being updated.
    UpdatePackageRequest:
      type: object
      properties:
        PackageID:
          allOf:
          - $ref: '#/components/schemas/PackageID'
          description: The unique identifier for the package.
        PackageSource:
          allOf:
          - $ref: '#/components/schemas/PackageSource'
          description: Amazon S3 bucket and key for the package.
        PackageDescription:
          allOf:
          - $ref: '#/components/schemas/PackageDescription'
          description: A new description of the package.
        CommitMessage:
          allOf:
          - $ref: '#/components/schemas/CommitMessage'
          description: Commit message for the updated file, which is shown as part
            of `GetPackageVersionHistoryResponse`.
        PackageConfiguration:
          allOf:
          - $ref: '#/components/schemas/PackageConfiguration'
          description: The updated configuration details for a package.
        PackageEncryptionOptions:
          allOf:
          - $ref: '#/components/schemas/PackageEncryptionOptions'
          description: Encryption options for a package.
      required:
      - PackageID
      - PackageSource
      description: Container for request parameters to the `UpdatePackage` operation.
    UpdatePackageResponse:
      type: object
      properties:
        PackageDetails:
          allOf:
          - $ref: '#/components/schemas/PackageDetails'
          description: Information about a package.
      description: Container for the response returned by the `UpdatePackage` operation.
    UpdatePackageScopeRequest:
      type: object
      properties:
        PackageID:
          allOf:
          - $ref: '#/components/schemas/PackageID'
          description: ID of the package whose scope is being updated.
        Operation:
          allOf:
          - $ref: '#/components/schemas/PackageScopeOperationEnum'
          description: The operation to perform on the package scope (e.g., add/remove/override
            users).
        PackageUserList:
          allOf:
          - $ref: '#/components/schemas/PackageUserList'
          description: List of users to be added or removed from the package scope.
      required:
      - PackageID
      - Operation
      - PackageUserList
    UpdatePackageScopeResponse:
      type: object
      properties:
        PackageID:
          allOf:
          - $ref: '#/components/schemas/PackageID'
          description: ID of the package whose scope was updated.
        Operation:
          allOf:
          - $ref: '#/components/schemas/PackageScopeOperationEnum'
          description: The operation that was performed on the package scope.
        PackageUserList:
          allOf:
          - $ref: '#/components/schemas/PackageUserList'
          description: List of users who have access to the package after the scope
            update.
    UpdateScheduledActionRequest:
      type: object
      properties:
        DomainName:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          description: The name of the domain to reschedule an action for.
        ActionID:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique identifier of the action to reschedule. To retrieve
            this ID, send a [ListScheduledActions](https://docs.aws.amazon.com/opensearch-service/latest/APIReference/API_ListScheduledActions.html)
            request.
        ActionType:
          allOf:
          - $ref: '#/components/schemas/ActionType'
          description: The type of action to reschedule. Can be one of `SERVICE_SOFTWARE_UPDATE`,
            `JVM_HEAP_SIZE_TUNING`, or `JVM_YOUNG_GEN_TUNING`. To retrieve this value,
            send a [ListScheduledActions](https://docs.aws.amazon.com/opensearch-service/latest/APIReference/API_ListScheduledActions.html)
            request.
        ScheduleAt:
          allOf:
          - $ref: '#/components/schemas/ScheduleAt'
          description: "When to schedule the action.\n\n  * `NOW` \\- Immediately\
            \ schedules the update to happen in the current hour if there's capacity\
            \ available.\n\n  * `TIMESTAMP` \\- Lets you specify a custom date and\
            \ time to apply the update. If you specify this value, you must also provide\
            \ a value for `DesiredStartTime`.\n\n  * `OFF_PEAK_WINDOW` \\- Marks the\
            \ action to be picked up during an upcoming off-peak window. There's no\
            \ guarantee that the change will be implemented during the next immediate\
            \ window. Depending on capacity, it might happen in subsequent days."
        DesiredStartTime:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: The time to implement the change, in Coordinated Universal
            Time (UTC). Only specify this parameter if you set `ScheduleAt` to `TIMESTAMP`.
      required:
      - DomainName
      - ActionID
      - ActionType
      - ScheduleAt
    UpdateScheduledActionResponse:
      type: object
      properties:
        ScheduledAction:
          allOf:
          - $ref: '#/components/schemas/ScheduledAction'
          description: Information about the rescheduled action.
    UpdateTimestamp:
      type: string
      format: date-time
    UpdateVpcEndpointRequest:
      type: object
      properties:
        VpcEndpointId:
          allOf:
          - $ref: '#/components/schemas/VpcEndpointId'
          description: The unique identifier of the endpoint.
        VpcOptions:
          allOf:
          - $ref: '#/components/schemas/VPCOptions'
          description: The security groups and/or subnets to add, remove, or modify.
      required:
      - VpcEndpointId
      - VpcOptions
    UpdateVpcEndpointResponse:
      type: object
      properties:
        VpcEndpoint:
          allOf:
          - $ref: '#/components/schemas/VpcEndpoint'
          description: The endpoint to be updated.
      required:
      - VpcEndpoint
    UpgradeDomainRequest:
      type: object
      properties:
        DomainName:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          description: Name of the OpenSearch Service domain that you want to upgrade.
        TargetVersion:
          allOf:
          - $ref: '#/components/schemas/VersionString'
          description: OpenSearch or Elasticsearch version to which you want to upgrade,
            in the format Opensearch_X.Y or Elasticsearch_X.Y.
        PerformCheckOnly:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: When true, indicates that an upgrade eligibility check needs
            to be performed. Does not actually perform the upgrade.
        AdvancedOptions:
          allOf:
          - $ref: '#/components/schemas/AdvancedOptions'
          description: Only supports the `override_main_response_version` parameter
            and not other advanced options. You can only include this option when
            upgrading to an OpenSearch version. Specifies whether the domain reports
            its version as 7.10 so that it continues to work with Elasticsearch OSS
            clients and plugins.
      required:
      - DomainName
      - TargetVersion
      description: Container for the request parameters to the `UpgradeDomain` operation.
    UpgradeDomainResponse:
      type: object
      properties:
        UpgradeId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique identifier of the domain upgrade.
        DomainName:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          description: The name of the domain that was upgraded.
        TargetVersion:
          allOf:
          - $ref: '#/components/schemas/VersionString'
          description: OpenSearch or Elasticsearch version that the domain was upgraded
            to.
        PerformCheckOnly:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: When true, indicates that an upgrade eligibility check was
            performed.
        AdvancedOptions:
          allOf:
          - $ref: '#/components/schemas/AdvancedOptions'
          description: The advanced options configuration for the domain.
        ChangeProgressDetails:
          allOf:
          - $ref: '#/components/schemas/ChangeProgressDetails'
          description: Container for information about a configuration change happening
            on a domain.
      description: Container for the response returned by `UpgradeDomain` operation.
    UpgradeHistory:
      type: object
      properties:
        UpgradeName:
          allOf:
          - $ref: '#/components/schemas/UpgradeName'
          description: A string that describes the upgrade.
        StartTimestamp:
          allOf:
          - $ref: '#/components/schemas/StartTimestamp'
          description: UTC timestamp at which the upgrade API call was made, in the
            format `yyyy-MM-ddTHH:mm:ssZ`.
        UpgradeStatus:
          allOf:
          - $ref: '#/components/schemas/UpgradeStatus'
          description: "The current status of the upgrade. The status can take one\
            \ of the following values:\n\n  * In Progress\n\n  * Succeeded\n\n  *\
            \ Succeeded with Issues\n\n  * Failed"
        StepsList:
          allOf:
          - $ref: '#/components/schemas/UpgradeStepsList'
          description: A list of each step performed as part of a specific upgrade
            or upgrade eligibility check.
      description: History of the last 10 upgrades and upgrade eligibility checks
        for an Amazon OpenSearch Service domain.
    UpgradeHistoryList:
      type: array
      items:
        $ref: '#/components/schemas/UpgradeHistory'
    UpgradeName:
      type: string
    UpgradeStatus:
      type: string
      enum:
      - IN_PROGRESS
      - SUCCEEDED
      - SUCCEEDED_WITH_ISSUES
      - FAILED
    UpgradeStep:
      type: string
      enum:
      - PRE_UPGRADE_CHECK
      - SNAPSHOT
      - UPGRADE
    UpgradeStepItem:
      type: object
      properties:
        UpgradeStep:
          allOf:
          - $ref: '#/components/schemas/UpgradeStep'
          description: "One of three steps that an upgrade or upgrade eligibility\
            \ check goes through:\n\n  * PreUpgradeCheck\n\n  * Snapshot\n\n  * Upgrade"
        UpgradeStepStatus:
          allOf:
          - $ref: '#/components/schemas/UpgradeStatus'
          description: "The current status of the upgrade. The status can take one\
            \ of the following values:\n\n  * In Progress\n\n  * Succeeded\n\n  *\
            \ Succeeded with Issues\n\n  * Failed"
        Issues:
          allOf:
          - $ref: '#/components/schemas/Issues'
          description: A list of strings containing detailed information about the
            errors encountered in a particular step.
        ProgressPercent:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: The floating point value representing the progress percentage
            of a particular step.
      description: Represents a single step of an upgrade or upgrade eligibility check
        workflow.
    UpgradeStepsList:
      type: array
      items:
        $ref: '#/components/schemas/UpgradeStepItem'
    UserPoolId:
      type: string
      pattern: ^[\w-]+_[0-9a-zA-Z]+$
      minLength: 1
      maxLength: 55
    Username:
      type: string
      pattern: .*
      minLength: 1
      maxLength: 64
    VPCDerivedInfo:
      type: object
      properties:
        VPCId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID for your VPC. Amazon VPC generates this value when you
            create a VPC.
        SubnetIds:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: A list of subnet IDs associated with the VPC endpoints for
            the domain.
        AvailabilityZones:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: The list of Availability Zones associated with the VPC subnets.
        SecurityGroupIds:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: The list of security group IDs associated with the VPC endpoints
            for the domain.
      description: Information about the subnets and security groups for an Amazon
        OpenSearch Service domain provisioned within a virtual private cloud (VPC).
        For more information, see [Launching your Amazon OpenSearch Service domains
        using a VPC](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/vpc.html).
        This information only exists if the domain was created with `VPCOptions`.
    VPCDerivedInfoStatus:
      type: object
      properties:
        Options:
          allOf:
          - $ref: '#/components/schemas/VPCDerivedInfo'
          description: The VPC options for the specified domain.
        Status:
          allOf:
          - $ref: '#/components/schemas/OptionStatus'
          description: The status of the VPC options for the specified domain.
      required:
      - Options
      - Status
      description: Status of the VPC options for a specified domain.
    VPCOptions:
      type: object
      properties:
        SubnetIds:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: A list of subnet IDs associated with the VPC endpoints for
            the domain. If your domain uses multiple Availability Zones, you need
            to provide two subnet IDs, one per zone. Otherwise, provide only one.
        SecurityGroupIds:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: The list of security group IDs associated with the VPC endpoints
            for the domain. If you do not provide a security group ID, OpenSearch
            Service uses the default security group for the VPC.
      description: Options to specify the subnets and security groups for an Amazon
        OpenSearch Service VPC endpoint. For more information, see [Launching your
        Amazon OpenSearch Service domains using a VPC](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/vpc.html).
    ValidationException:
      type: object
      properties:
        message:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage'
          description: A description of the error.
      description: An exception for accessing or deleting a resource that doesn't
        exist.
    ValidationFailure:
      type: object
      properties:
        Code:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The error code of the failure.
        Message:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A message corresponding to the failure.
      description: A validation failure that occurred as the result of a pre-update
        validation check (verbose dry run) on a domain.
    ValidationFailures:
      type: array
      items:
        $ref: '#/components/schemas/ValidationFailure'
    ValueStringList:
      type: array
      items:
        $ref: '#/components/schemas/NonEmptyString'
    VersionList:
      type: array
      items:
        $ref: '#/components/schemas/VersionString'
      description: <p>List of supported OpenSearch versions.</p>
    VersionStatus:
      type: object
      properties:
        Options:
          allOf:
          - $ref: '#/components/schemas/VersionString'
          description: The OpenSearch or Elasticsearch version for the specified domain.
        Status:
          allOf:
          - $ref: '#/components/schemas/OptionStatus'
          description: The status of the version options for the specified domain.
      required:
      - Options
      - Status
      description: The status of the the OpenSearch or Elasticsearch version options
        for the specified Amazon OpenSearch Service domain.
    VersionString:
      type: string
      pattern: ^Elasticsearch_[0-9]{1}\.[0-9]{1,2}$|^OpenSearch_[0-9]{1,2}\.[0-9]{1,2}$
      minLength: 14
      maxLength: 18
    VolumeSize:
      type: string
    VolumeType:
      type: string
      enum:
      - standard
      - gp2
      - io1
      - gp3
      description: <p>The type of EBS volume that a domain uses. For more information,
        see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/opensearch-createupdatedomains.html#opensearch-createdomain-configure-ebs">Configuring
        EBS-based storage</a>.</p>
    VpcEndpoint:
      type: object
      properties:
        VpcEndpointId:
          allOf:
          - $ref: '#/components/schemas/VpcEndpointId'
          description: The unique identifier of the endpoint.
        VpcEndpointOwner:
          allOf:
          - $ref: '#/components/schemas/AWSAccount'
          description: The creator of the endpoint.
        DomainArn:
          allOf:
          - $ref: '#/components/schemas/DomainArn'
          description: The Amazon Resource Name (ARN) of the domain associated with
            the endpoint.
        VpcOptions:
          allOf:
          - $ref: '#/components/schemas/VPCDerivedInfo'
          description: Options to specify the subnets and security groups for an Amazon
            OpenSearch Service VPC endpoint.
        Status:
          allOf:
          - $ref: '#/components/schemas/VpcEndpointStatus'
          description: The current status of the endpoint.
        Endpoint:
          allOf:
          - $ref: '#/components/schemas/Endpoint'
          description: The connection endpoint ID for connecting to the domain.
      description: The connection endpoint for connecting to an Amazon OpenSearch
        Service domain through a proxy.
    VpcEndpointError:
      type: object
      properties:
        VpcEndpointId:
          allOf:
          - $ref: '#/components/schemas/VpcEndpointId'
          description: The unique identifier of the endpoint.
        ErrorCode:
          allOf:
          - $ref: '#/components/schemas/VpcEndpointErrorCode'
          description: The code associated with the error.
        ErrorMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A message describing the error.
      description: Error information when attempting to describe an Amazon OpenSearch
        Service-managed VPC endpoint.
    VpcEndpointErrorCode:
      type: string
      enum:
      - ENDPOINT_NOT_FOUND
      - SERVER_ERROR
    VpcEndpointErrorList:
      type: array
      items:
        $ref: '#/components/schemas/VpcEndpointError'
    VpcEndpointId:
      type: string
      pattern: ^aos-[a-zA-Z0-9]*$
      minLength: 5
      maxLength: 256
    VpcEndpointIdList:
      type: array
      items:
        $ref: '#/components/schemas/VpcEndpointId'
    VpcEndpointStatus:
      type: string
      enum:
      - CREATING
      - CREATE_FAILED
      - ACTIVE
      - UPDATING
      - UPDATE_FAILED
      - DELETING
      - DELETE_FAILED
    VpcEndpointSummary:
      type: object
      properties:
        VpcEndpointId:
          allOf:
          - $ref: '#/components/schemas/VpcEndpointId'
          description: The unique identifier of the endpoint.
        VpcEndpointOwner:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The creator of the endpoint.
        DomainArn:
          allOf:
          - $ref: '#/components/schemas/DomainArn'
          description: The Amazon Resource Name (ARN) of the domain associated with
            the endpoint.
        Status:
          allOf:
          - $ref: '#/components/schemas/VpcEndpointStatus'
          description: The current status of the endpoint.
      description: Summary information for an Amazon OpenSearch Service-managed VPC
        endpoint.
    VpcEndpointSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/VpcEndpointSummary'
    VpcEndpoints:
      type: array
      items:
        $ref: '#/components/schemas/VpcEndpoint'
    WindowStartTime:
      type: object
      properties:
        Hours:
          allOf:
          - $ref: '#/components/schemas/StartTimeHours'
          description: The start hour of the window in Coordinated Universal Time
            (UTC), using 24-hour time. For example, `17` refers to 5:00 P.M. UTC.
        Minutes:
          allOf:
          - $ref: '#/components/schemas/StartTimeMinutes'
          description: The start minute of the window, in UTC.
      required:
      - Hours
      - Minutes
      description: The desired start time for an [off-peak maintenance window](https://docs.aws.amazon.com/opensearch-service/latest/APIReference/API_OffPeakWindow.html).
    ZoneAwarenessConfig:
      type: object
      properties:
        AvailabilityZoneCount:
          allOf:
          - $ref: '#/components/schemas/IntegerClass'
          description: If you enabled multiple Availability Zones, this value is the
            number of zones that you want the domain to use. Valid values are `2`
            and `3`. If your domain is provisioned within a VPC, this value be equal
            to number of subnets.
      description: The zone awareness configuration for an Amazon OpenSearch Service
        domain.
    ZoneStatus:
      type: string
      enum:
      - Active
      - StandBy
      - NotAvailable
