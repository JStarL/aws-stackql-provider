openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: personalize_events
  x-aws-serviceName: personalizeevents
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-07'
  version: '2018-03-22'
  title: Amazon Personalize Events
  description: |-
    Amazon Personalize can consume real-time user event data, such as _stream_ or _click_ data, and use it for model training either alone or combined with historical data. For more information see [Recording item interaction events](https://docs.aws.amazon.com/personalize/latest/dg/recording-item-interaction-events.html).
servers:
- description: The Amazon Personalize Events regional endpoint
  url: https://personalize-events.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths:
  /action-interactions:
    post:
      operationId: PutActionInteractions
      description: |-
        Records action interaction event data. An _action interaction_ event is an interaction between a user and an _action_. For example, a user taking an action, such a enrolling in a membership program or downloading your app.

        For more information about recording action interactions, see [Recording action interaction events](https://docs.aws.amazon.com/personalize/latest/dg/recording-action-interaction-events.html). For more information about actions in an Actions dataset, see [Actions dataset](https://docs.aws.amazon.com/personalize/latest/dg/actions-datasets.html).
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                trackingId:
                  $ref: '#/components/schemas/StringType'
                actionInteractions:
                  $ref: '#/components/schemas/ActionInteractionsList'
      responses:
        '200': {}
        '400':
          description: |-
            Provide a valid value for the field or parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '409':
          description: |-
            The specified resource is in use.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
        '404':
          description: |-
            Could not find the specified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /actions:
    post:
      operationId: PutActions
      description: |-
        Adds one or more actions to an Actions dataset. For more information see [Importing actions individually](https://docs.aws.amazon.com/personalize/latest/dg/importing-actions.html).
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                datasetArn:
                  $ref: '#/components/schemas/Arn'
                actions:
                  $ref: '#/components/schemas/ActionList'
      responses:
        '200': {}
        '400':
          description: |-
            Provide a valid value for the field or parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '409':
          description: |-
            The specified resource is in use.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
        '404':
          description: |-
            Could not find the specified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /events:
    post:
      operationId: PutEvents
      description: |-
        Records item interaction event data. For more information see [Recording item interaction events](https://docs.aws.amazon.com/personalize/latest/dg/recording-item-interaction-events.html).
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                trackingId:
                  $ref: '#/components/schemas/StringType'
                userId:
                  $ref: '#/components/schemas/UserId'
                sessionId:
                  $ref: '#/components/schemas/StringType'
                eventList:
                  $ref: '#/components/schemas/EventList'
      responses:
        '200': {}
        '400':
          description: |-
            Provide a valid value for the field or parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
  /items:
    post:
      operationId: PutItems
      description: |-
        Adds one or more items to an Items dataset. For more information see [Importing items individually](https://docs.aws.amazon.com/personalize/latest/dg/importing-items.html).
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                datasetArn:
                  $ref: '#/components/schemas/Arn'
                items:
                  $ref: '#/components/schemas/ItemList'
      responses:
        '200': {}
        '400':
          description: |-
            Provide a valid value for the field or parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '409':
          description: |-
            The specified resource is in use.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
        '404':
          description: |-
            Could not find the specified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /users:
    post:
      operationId: PutUsers
      description: |-
        Adds one or more users to a Users dataset. For more information see [Importing users individually](https://docs.aws.amazon.com/personalize/latest/dg/importing-users.html).
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                datasetArn:
                  $ref: '#/components/schemas/Arn'
                users:
                  $ref: '#/components/schemas/UserList'
      responses:
        '200': {}
        '400':
          description: |-
            Provide a valid value for the field or parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
        '409':
          description: |-
            The specified resource is in use.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
        '404':
          description: |-
            Could not find the specified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
components:
  schemas:
    Action:
      type: object
      properties:
        actionId:
          allOf:
          - $ref: '#/components/schemas/StringType'
          description: The ID associated with the action.
        properties:
          allOf:
          - $ref: '#/components/schemas/SynthesizedJsonActionProperties'
          description: 'A string map of action-specific metadata. Each element in
            the map consists of a key-value pair. For example, `{"value": "100"}`.


            The keys use camel case names that match the fields in the schema for
            the Actions dataset. In the previous example, the `value` matches the
            ''VALUE'' field defined in the Actions schema. For categorical string
            data, to include multiple categories for a single action, separate each
            category with a pipe separator (`|`). For example, `\"Deluxe|Premium\"`.'
      required:
      - actionId
      description: Represents action metadata added to an Action dataset using the
        `PutActions` API. For more information see [Importing actions individually](https://docs.aws.amazon.com/personalize/latest/dg/importing-actions.html).
    ActionId:
      type: string
      minLength: 1
      maxLength: 256
    ActionImpression:
      type: array
      items:
        $ref: '#/components/schemas/ActionId'
    ActionInteraction:
      type: object
      properties:
        actionId:
          allOf:
          - $ref: '#/components/schemas/ActionId'
          description: The ID of the action the user interacted with. This corresponds
            to the `ACTION_ID` field of the Action interaction schema.
        userId:
          allOf:
          - $ref: '#/components/schemas/UserId'
          description: The ID of the user who interacted with the action. This corresponds
            to the `USER_ID` field of the Action interaction schema.
        sessionId:
          allOf:
          - $ref: '#/components/schemas/StringType'
          description: The ID associated with the user's visit. Your application generates
            a unique `sessionId` when a user first visits your website or uses your
            application.
        timestamp:
          allOf:
          - $ref: '#/components/schemas/Date'
          description: The timestamp for when the action interaction event occurred.
            Timestamps must be in Unix epoch time format, in seconds.
        eventType:
          allOf:
          - $ref: '#/components/schemas/StringType'
          description: The type of action interaction event. You can specify `Viewed`,
            `Taken`, and `Not Taken` event types. For more information about action
            interaction event type data, see [Event type data](https://docs.aws.amazon.com/personalize/latest/dg/action-interaction-event-type-data.html).
        eventId:
          allOf:
          - $ref: '#/components/schemas/StringType'
          description: An ID associated with the event. If an event ID is not provided,
            Amazon Personalize generates a unique ID for the event. An event ID is
            not used as an input to the model. Amazon Personalize uses the event ID
            to distinguish unique events. Any subsequent events after the first with
            the same event ID are not used in model training.
        recommendationId:
          allOf:
          - $ref: '#/components/schemas/RecommendationId'
          description: The ID of the list of recommendations that contains the action
            the user interacted with.
        impression:
          allOf:
          - $ref: '#/components/schemas/ActionImpression'
          description: A list of action IDs that represents the sequence of actions
            you have shown the user. For example, `["actionId1", "actionId2", "actionId3"]`.
            Amazon Personalize doesn't use impressions data from action interaction
            events. Instead, record multiple events for each action and use the `Viewed`
            event type.
        properties:
          allOf:
          - $ref: '#/components/schemas/SynthesizedJsonActionInteractionProperties'
          description: "A string map of event-specific data that you might choose\
            \ to record. For example, if a user takes an action, other than the action\
            \ ID, you might also send the number of actions taken by the user.\n\n\
            Each item in the map consists of a key-value pair. For example,\n\n`{\"\
            numberOfActions\": \"12\"}`\n\nThe keys use camel case names that match\
            \ the fields in the Action interactions schema. In the above example,\
            \ the `numberOfActions` would match the 'NUMBER_OF_ACTIONS' field defined\
            \ in the Action interactions schema.\n\nThe following can't be included\
            \ as a keyword for properties (case insensitive).\n\n  * userId \n\n \
            \ * sessionId \n\n  * eventType\n\n  * timestamp\n\n  * recommendationId\n\
            \n  * impression"
      required:
      - actionId
      - sessionId
      - timestamp
      - eventType
      description: Represents an action interaction event sent using the `PutActionInteractions`
        API.
    ActionInteractionsList:
      type: array
      items:
        $ref: '#/components/schemas/ActionInteraction'
    ActionList:
      type: array
      items:
        $ref: '#/components/schemas/Action'
    Arn:
      type: string
      pattern: ^arn:([a-z\d-]+):personalize:.*:.*:.+$
      minLength: 0
      maxLength: 256
    Date:
      type: string
      format: date-time
    ErrorMessage:
      type: string
    Event:
      type: object
      properties:
        eventId:
          allOf:
          - $ref: '#/components/schemas/StringType'
          description: An ID associated with the event. If an event ID is not provided,
            Amazon Personalize generates a unique ID for the event. An event ID is
            not used as an input to the model. Amazon Personalize uses the event ID
            to distinguish unique events. Any subsequent events after the first with
            the same event ID are not used in model training.
        eventType:
          allOf:
          - $ref: '#/components/schemas/StringType'
          description: The type of event, such as click or download. This property
            corresponds to the `EVENT_TYPE` field of your Item interactions dataset's
            schema and depends on the types of events you are tracking.
        eventValue:
          allOf:
          - $ref: '#/components/schemas/FloatType'
          description: The event value that corresponds to the `EVENT_VALUE` field
            of the Item interactions schema.
        itemId:
          allOf:
          - $ref: '#/components/schemas/ItemId'
          description: The item ID key that corresponds to the `ITEM_ID` field of
            the Item interactions dataset's schema.
        properties:
          allOf:
          - $ref: '#/components/schemas/SynthesizedJsonEventPropertiesJSON'
          description: "A string map of event-specific data that you might choose\
            \ to record. For example, if a user rates a movie on your site, other\
            \ than movie ID (`itemId`) and rating (`eventValue`) , you might also\
            \ send the number of movie ratings made by the user.\n\nEach item in the\
            \ map consists of a key-value pair. For example,\n\n`{\"numberOfRatings\"\
            : \"12\"}`\n\nThe keys use camel case names that match the fields in the\
            \ Item interactions dataset's schema. In the above example, the `numberOfRatings`\
            \ would match the 'NUMBER_OF_RATINGS' field defined in the Item interactions\
            \ dataset's schema.\n\nThe following can't be included as a keyword for\
            \ properties (case insensitive).\n\n  * userId \n\n  * sessionId \n\n\
            \  * eventType\n\n  * timestamp\n\n  * recommendationId\n\n  * impression"
        sentAt:
          allOf:
          - $ref: '#/components/schemas/Date'
          description: The timestamp (in Unix time) on the client side when the event
            occurred.
        recommendationId:
          allOf:
          - $ref: '#/components/schemas/RecommendationId'
          description: 'The ID of the list of recommendations that contains the item
            the user interacted with. Provide a `recommendationId` to have Amazon
            Personalize implicitly record the recommendations you show your user as
            impressions data. Or provide a `recommendationId` if you use a metric
            attribution to measure the impact of recommendations.


            For more information on recording impressions data, see [Recording impressions
            data](https://docs.aws.amazon.com/personalize/latest/dg/recording-events.html#putevents-including-impressions-data).
            For more information on creating a metric attribution see [Measuring impact
            of recommendations](https://docs.aws.amazon.com/personalize/latest/dg/measuring-recommendation-impact.html).'
        impression:
          allOf:
          - $ref: '#/components/schemas/Impression'
          description: A list of item IDs that represents the sequence of items you
            have shown the user. For example, `["itemId1", "itemId2", "itemId3"]`.
            Provide a list of items to manually record impressions data for an event.
            For more information on recording impressions data, see [Recording impressions
            data](https://docs.aws.amazon.com/personalize/latest/dg/recording-events.html#putevents-including-impressions-data).
        metricAttribution:
          allOf:
          - $ref: '#/components/schemas/MetricAttribution'
          description: Contains information about the metric attribution associated
            with an event. For more information about metric attributions, see [Measuring
            impact of recommendations](https://docs.aws.amazon.com/personalize/latest/dg/measuring-recommendation-impact.html).
      required:
      - eventType
      - sentAt
      description: Represents item interaction event information sent using the `PutEvents`
        API.
    EventAttributionSource:
      type: string
      pattern: ^[\x20-\x7E]*[\x21-\x7E]+[\x20-\x7E]*$
      minLength: 0
      maxLength: 1024
    EventList:
      type: array
      items:
        $ref: '#/components/schemas/Event'
    FloatType:
      type: number
      format: float
    Impression:
      type: array
      items:
        $ref: '#/components/schemas/ItemId'
    InvalidInputException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: Provide a valid value for the field or parameter.
    Item:
      type: object
      properties:
        itemId:
          allOf:
          - $ref: '#/components/schemas/StringType'
          description: The ID associated with the item.
        properties:
          allOf:
          - $ref: '#/components/schemas/SynthesizedJsonItemProperties'
          description: 'A string map of item-specific metadata. Each element in the
            map consists of a key-value pair. For example, `{"numberOfRatings": "12"}`.


            The keys use camel case names that match the fields in the schema for
            the Items dataset. In the previous example, the `numberOfRatings` matches
            the ''NUMBER_OF_RATINGS'' field defined in the Items schema. For categorical
            string data, to include multiple categories for a single item, separate
            each category with a pipe separator (`|`). For example, `\"Horror|Action\"`.'
      required:
      - itemId
      description: Represents item metadata added to an Items dataset using the `PutItems`
        API. For more information see [Importing items individually](https://docs.aws.amazon.com/personalize/latest/dg/importing-items.html).
    ItemId:
      type: string
      minLength: 1
      maxLength: 256
    ItemList:
      type: array
      items:
        $ref: '#/components/schemas/Item'
    MetricAttribution:
      type: object
      properties:
        eventAttributionSource:
          allOf:
          - $ref: '#/components/schemas/EventAttributionSource'
          description: The source of the event, such as a third party.
      required:
      - eventAttributionSource
      description: Contains information about a metric attribution associated with
        an event. For more information about metric attributions, see [Measuring impact
        of recommendations](https://docs.aws.amazon.com/personalize/latest/dg/measuring-recommendation-impact.html).
    PutActionInteractionsRequest:
      type: object
      properties:
        trackingId:
          allOf:
          - $ref: '#/components/schemas/StringType'
          description: The ID of your action interaction event tracker. When you create
            an Action interactions dataset, Amazon Personalize creates an action interaction
            event tracker for you. For more information, see [Action interaction event
            tracker ID](https://docs.aws.amazon.com/personalize/latest/dg/action-interaction-tracker-id.html).
        actionInteractions:
          allOf:
          - $ref: '#/components/schemas/ActionInteractionsList'
          description: A list of action interaction events from the session.
      required:
      - trackingId
      - actionInteractions
    PutActionsRequest:
      type: object
      properties:
        datasetArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the Actions dataset you are
            adding the action or actions to.
        actions:
          allOf:
          - $ref: '#/components/schemas/ActionList'
          description: A list of action data.
      required:
      - datasetArn
      - actions
    PutEventsRequest:
      type: object
      properties:
        trackingId:
          allOf:
          - $ref: '#/components/schemas/StringType'
          description: The tracking ID for the event. The ID is generated by a call
            to the [CreateEventTracker](https://docs.aws.amazon.com/personalize/latest/dg/API_CreateEventTracker.html)
            API.
        userId:
          allOf:
          - $ref: '#/components/schemas/UserId'
          description: The user associated with the event.
        sessionId:
          allOf:
          - $ref: '#/components/schemas/StringType'
          description: The session ID associated with the user's visit. Your application
            generates the sessionId when a user first visits your website or uses
            your application. Amazon Personalize uses the sessionId to associate events
            with the user before they log in. For more information, see [Recording
            item interaction events](https://docs.aws.amazon.com/personalize/latest/dg/recording-item-interaction-events.html).
        eventList:
          allOf:
          - $ref: '#/components/schemas/EventList'
          description: A list of event data from the session.
      required:
      - trackingId
      - sessionId
      - eventList
    PutItemsRequest:
      type: object
      properties:
        datasetArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the Items dataset you are
            adding the item or items to.
        items:
          allOf:
          - $ref: '#/components/schemas/ItemList'
          description: A list of item data.
      required:
      - datasetArn
      - items
    PutUsersRequest:
      type: object
      properties:
        datasetArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the Users dataset you are
            adding the user or users to.
        users:
          allOf:
          - $ref: '#/components/schemas/UserList'
          description: A list of user data.
      required:
      - datasetArn
      - users
    RecommendationId:
      type: string
      minLength: 1
      maxLength: 40
    ResourceInUseException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: The specified resource is in use.
    ResourceNotFoundException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: Could not find the specified resource.
    StringType:
      type: string
      minLength: 1
      maxLength: 256
    SynthesizedJsonActionInteractionProperties:
      type: string
      minLength: 1
      maxLength: 1024
    SynthesizedJsonActionProperties:
      type: string
      minLength: 1
      maxLength: 32000
    SynthesizedJsonEventPropertiesJSON:
      type: string
      minLength: 1
      maxLength: 1024
    SynthesizedJsonItemProperties:
      type: string
      minLength: 1
      maxLength: 32000
    SynthesizedJsonUserProperties:
      type: string
      minLength: 1
      maxLength: 24000
    User:
      type: object
      properties:
        userId:
          allOf:
          - $ref: '#/components/schemas/StringType'
          description: The ID associated with the user.
        properties:
          allOf:
          - $ref: '#/components/schemas/SynthesizedJsonUserProperties'
          description: 'A string map of user-specific metadata. Each element in the
            map consists of a key-value pair. For example, `{"numberOfVideosWatched":
            "45"}`.


            The keys use camel case names that match the fields in the schema for
            the Users dataset. In the previous example, the `numberOfVideosWatched`
            matches the ''NUMBER_OF_VIDEOS_WATCHED'' field defined in the Users schema.
            For categorical string data, to include multiple categories for a single
            user, separate each category with a pipe separator (`|`). For example,
            `\"Member|Frequent shopper\"`.'
      required:
      - userId
      description: Represents user metadata added to a Users dataset using the `PutUsers`
        API. For more information see [Importing users individually](https://docs.aws.amazon.com/personalize/latest/dg/importing-users.html).
    UserId:
      type: string
      minLength: 1
      maxLength: 256
    UserList:
      type: array
      items:
        $ref: '#/components/schemas/User'
