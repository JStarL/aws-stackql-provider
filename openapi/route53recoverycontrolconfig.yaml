openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: route53_recovery_control_config
  x-aws-serviceName: route53recoverycontrolconfig
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-07'
  version: '2020-11-02'
  title: AWS Route53 Recovery Control Config
  description: |-
    Recovery Control Configuration API Reference for Amazon Route 53 Application Recovery Controller
servers:
- description: The AWS Route53 Recovery Control Config regional endpoint
  url: https://route53-recovery-control-config.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths:
  /cluster:
    post:
      operationId: CreateCluster
      description: |-
        Create a new cluster. A cluster is a set of redundant Regional endpoints against which you can run API calls to update or get the state of one or more routing controls. Each cluster has a name, status, Amazon Resource Name (ARN), and an array of the five cluster endpoints (one for each supported Amazon Web Services Region) that you can use with API calls to the cluster data plane.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ClientToken:
                  $ref: '#/components/schemas/__stringMin1Max64PatternS'
                ClusterName:
                  $ref: '#/components/schemas/__stringMin1Max64PatternS'
                Tags:
                  $ref: '#/components/schemas/__mapOf__stringMin0Max256PatternS'
                NetworkType:
                  $ref: '#/components/schemas/NetworkType'
      responses:
        '200': {}
        '403':
          description: |-
            403 response - You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            409 response - ConflictException. You might be using a predefined variable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            500 response - InternalServiceError. Temporary service error. Retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            404 response - MalformedQueryString. The query string contains a syntax error or resource not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            402 response - You attempted to create more resources than the service allows based on service quotas.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            429 response - LimitExceededException or TooManyRequestsException.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            400 response - Multiple causes. For example, you might have a malformed query string and input parameter might be out of range, or you might have used parameters together incorrectly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: ListClusters
      description: |-
        Returns an array of all the clusters in an account.
      parameters:
      - name: MaxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: NextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '403':
          description: |-
            403 response - You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            500 response - InternalServiceError. Temporary service error. Retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            404 response - MalformedQueryString. The query string contains a syntax error or resource not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            429 response - LimitExceededException or TooManyRequestsException.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            400 response - Multiple causes. For example, you might have a malformed query string and input parameter might be out of range, or you might have used parameters together incorrectly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    put:
      operationId: UpdateCluster
      description: |-
        Updates an existing cluster. You can only update the network type of a cluster.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ClusterArn:
                  $ref: '#/components/schemas/__stringMin1Max256PatternAZaZ09'
                NetworkType:
                  $ref: '#/components/schemas/NetworkType'
      responses:
        '200': {}
        '403':
          description: |-
            403 response - You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            409 response - ConflictException. You might be using a predefined variable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            500 response - InternalServiceError. Temporary service error. Retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            404 response - MalformedQueryString. The query string contains a syntax error or resource not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            429 response - LimitExceededException or TooManyRequestsException.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            400 response - Multiple causes. For example, you might have a malformed query string and input parameter might be out of range, or you might have used parameters together incorrectly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /controlpanel:
    post:
      operationId: CreateControlPanel
      description: |-
        Creates a new control panel. A control panel represents a group of routing controls that can be changed together in a single transaction. You can use a control panel to centrally view the operational status of applications across your organization, and trigger multi-app failovers in a single transaction, for example, to fail over an Availability Zone or Amazon Web Services Region.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ClientToken:
                  $ref: '#/components/schemas/__stringMin1Max64PatternS'
                ClusterArn:
                  $ref: '#/components/schemas/__stringMin1Max256PatternAZaZ09'
                ControlPanelName:
                  $ref: '#/components/schemas/__stringMin1Max64PatternS'
                Tags:
                  $ref: '#/components/schemas/__mapOf__stringMin0Max256PatternS'
      responses:
        '200': {}
        '403':
          description: |-
            403 response - You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            409 response - ConflictException. You might be using a predefined variable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            500 response - InternalServiceError. Temporary service error. Retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            404 response - MalformedQueryString. The query string contains a syntax error or resource not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            402 response - You attempted to create more resources than the service allows based on service quotas.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            429 response - LimitExceededException or TooManyRequestsException.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            400 response - Multiple causes. For example, you might have a malformed query string and input parameter might be out of range, or you might have used parameters together incorrectly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    put:
      operationId: UpdateControlPanel
      description: |-
        Updates a control panel. The only update you can make to a control panel is to change the name of the control panel.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ControlPanelArn:
                  $ref: '#/components/schemas/__stringMin1Max256PatternAZaZ09'
                ControlPanelName:
                  $ref: '#/components/schemas/__stringMin1Max64PatternS'
      responses:
        '200': {}
        '403':
          description: |-
            403 response - You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            409 response - ConflictException. You might be using a predefined variable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            500 response - InternalServiceError. Temporary service error. Retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            404 response - MalformedQueryString. The query string contains a syntax error or resource not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            429 response - LimitExceededException or TooManyRequestsException.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            400 response - Multiple causes. For example, you might have a malformed query string and input parameter might be out of range, or you might have used parameters together incorrectly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /routingcontrol:
    post:
      operationId: CreateRoutingControl
      description: |-
        Creates a new routing control.

        A routing control has one of two states: ON and OFF. You can map the routing control state to the state of an Amazon Route 53 health check, which can be used to control traffic routing.

        To get or update the routing control state, see the Recovery Cluster (data plane) API actions for Amazon Route 53 Application Recovery Controller.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ClientToken:
                  $ref: '#/components/schemas/__stringMin1Max64PatternS'
                ClusterArn:
                  $ref: '#/components/schemas/__stringMin1Max256PatternAZaZ09'
                ControlPanelArn:
                  $ref: '#/components/schemas/__stringMin1Max256PatternAZaZ09'
                RoutingControlName:
                  $ref: '#/components/schemas/__stringMin1Max64PatternS'
      responses:
        '200': {}
        '403':
          description: |-
            403 response - You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            409 response - ConflictException. You might be using a predefined variable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            500 response - InternalServiceError. Temporary service error. Retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            404 response - MalformedQueryString. The query string contains a syntax error or resource not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            402 response - You attempted to create more resources than the service allows based on service quotas.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            429 response - LimitExceededException or TooManyRequestsException.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            400 response - Multiple causes. For example, you might have a malformed query string and input parameter might be out of range, or you might have used parameters together incorrectly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    put:
      operationId: UpdateRoutingControl
      description: |-
        Updates a routing control. You can only update the name of the routing control. To get or update the routing control state, see the Recovery Cluster (data plane) API actions for Amazon Route 53 Application Recovery Controller.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                RoutingControlArn:
                  $ref: '#/components/schemas/__stringMin1Max256PatternAZaZ09'
                RoutingControlName:
                  $ref: '#/components/schemas/__stringMin1Max64PatternS'
      responses:
        '200': {}
        '403':
          description: |-
            403 response - You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            409 response - ConflictException. You might be using a predefined variable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            500 response - InternalServiceError. Temporary service error. Retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            404 response - MalformedQueryString. The query string contains a syntax error or resource not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            429 response - LimitExceededException or TooManyRequestsException.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            400 response - Multiple causes. For example, you might have a malformed query string and input parameter might be out of range, or you might have used parameters together incorrectly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /safetyrule:
    post:
      operationId: CreateSafetyRule
      description: |-
        Creates a safety rule in a control panel. Safety rules let you add safeguards around changing routing control states, and for enabling and disabling routing controls, to help prevent unexpected outcomes.

        There are two types of safety rules: assertion rules and gating rules.

        Assertion rule: An assertion rule enforces that, when you change a routing control state, that a certain criteria is met. For example, the criteria might be that at least one routing control state is On after the transaction so that traffic continues to flow to at least one cell for the application. This ensures that you avoid a fail-open scenario.

        Gating rule: A gating rule lets you configure a gating routing control as an overall "on/off" switch for a group of routing controls. Or, you can configure more complex gating scenarios, for example by configuring multiple gating routing controls.

        For more information, see [Safety rules](https://docs.aws.amazon.com/r53recovery/latest/dg/routing-control.safety-rules.html) in the Amazon Route 53 Application Recovery Controller Developer Guide.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AssertionRule:
                  $ref: '#/components/schemas/NewAssertionRule'
                ClientToken:
                  $ref: '#/components/schemas/__stringMin1Max64PatternS'
                GatingRule:
                  $ref: '#/components/schemas/NewGatingRule'
                Tags:
                  $ref: '#/components/schemas/__mapOf__stringMin0Max256PatternS'
      responses:
        '200': {}
        '500':
          description: |-
            500 response - InternalServiceError. Temporary service error. Retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            400 response - Multiple causes. For example, you might have a malformed query string and input parameter might be out of range, or you might have used parameters together incorrectly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    put:
      operationId: UpdateSafetyRule
      description: |-
        Update a safety rule (an assertion rule or gating rule). You can only update the name and the waiting period for a safety rule. To make other updates, delete the safety rule and create a new one.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AssertionRuleUpdate:
                  $ref: '#/components/schemas/AssertionRuleUpdate'
                GatingRuleUpdate:
                  $ref: '#/components/schemas/GatingRuleUpdate'
      responses:
        '200': {}
        '500':
          description: |-
            500 response - InternalServiceError. Temporary service error. Retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            404 response - MalformedQueryString. The query string contains a syntax error or resource not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            400 response - Multiple causes. For example, you might have a malformed query string and input parameter might be out of range, or you might have used parameters together incorrectly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /cluster/{ClusterArn}:
    delete:
      operationId: DeleteCluster
      description: |-
        Delete a cluster.
      parameters:
      - name: ClusterArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '403':
          description: |-
            403 response - You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            409 response - ConflictException. You might be using a predefined variable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            500 response - InternalServiceError. Temporary service error. Retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            404 response - MalformedQueryString. The query string contains a syntax error or resource not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            429 response - LimitExceededException or TooManyRequestsException.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            400 response - Multiple causes. For example, you might have a malformed query string and input parameter might be out of range, or you might have used parameters together incorrectly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: DescribeCluster
      description: |-
        Display the details about a cluster. The response includes the cluster name, endpoints, status, and Amazon Resource Name (ARN).
      parameters:
      - name: ClusterArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '403':
          description: |-
            403 response - You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            409 response - ConflictException. You might be using a predefined variable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            500 response - InternalServiceError. Temporary service error. Retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            404 response - MalformedQueryString. The query string contains a syntax error or resource not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            429 response - LimitExceededException or TooManyRequestsException.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            400 response - Multiple causes. For example, you might have a malformed query string and input parameter might be out of range, or you might have used parameters together incorrectly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /controlpanel/{ControlPanelArn}:
    delete:
      operationId: DeleteControlPanel
      description: |-
        Deletes a control panel.
      parameters:
      - name: ControlPanelArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '403':
          description: |-
            403 response - You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            409 response - ConflictException. You might be using a predefined variable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            500 response - InternalServiceError. Temporary service error. Retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            404 response - MalformedQueryString. The query string contains a syntax error or resource not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            429 response - LimitExceededException or TooManyRequestsException.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            400 response - Multiple causes. For example, you might have a malformed query string and input parameter might be out of range, or you might have used parameters together incorrectly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: DescribeControlPanel
      description: |-
        Displays details about a control panel.
      parameters:
      - name: ControlPanelArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '403':
          description: |-
            403 response - You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            409 response - ConflictException. You might be using a predefined variable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            500 response - InternalServiceError. Temporary service error. Retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            404 response - MalformedQueryString. The query string contains a syntax error or resource not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            429 response - LimitExceededException or TooManyRequestsException.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            400 response - Multiple causes. For example, you might have a malformed query string and input parameter might be out of range, or you might have used parameters together incorrectly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /routingcontrol/{RoutingControlArn}:
    delete:
      operationId: DeleteRoutingControl
      description: |-
        Deletes a routing control.
      parameters:
      - name: RoutingControlArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '403':
          description: |-
            403 response - You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            409 response - ConflictException. You might be using a predefined variable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            500 response - InternalServiceError. Temporary service error. Retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            404 response - MalformedQueryString. The query string contains a syntax error or resource not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            429 response - LimitExceededException or TooManyRequestsException.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            400 response - Multiple causes. For example, you might have a malformed query string and input parameter might be out of range, or you might have used parameters together incorrectly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: DescribeRoutingControl
      description: |-
        Displays details about a routing control. A routing control has one of two states: ON and OFF. You can map the routing control state to the state of an Amazon Route 53 health check, which can be used to control routing.

        To get or update the routing control state, see the Recovery Cluster (data plane) API actions for Amazon Route 53 Application Recovery Controller.
      parameters:
      - name: RoutingControlArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '403':
          description: |-
            403 response - You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            409 response - ConflictException. You might be using a predefined variable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            500 response - InternalServiceError. Temporary service error. Retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            404 response - MalformedQueryString. The query string contains a syntax error or resource not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            429 response - LimitExceededException or TooManyRequestsException.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            400 response - Multiple causes. For example, you might have a malformed query string and input parameter might be out of range, or you might have used parameters together incorrectly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /safetyrule/{SafetyRuleArn}:
    delete:
      operationId: DeleteSafetyRule
      description: |-
        Deletes a safety rule.

        />
      parameters:
      - name: SafetyRuleArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '500':
          description: |-
            500 response - InternalServiceError. Temporary service error. Retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            404 response - MalformedQueryString. The query string contains a syntax error or resource not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            400 response - Multiple causes. For example, you might have a malformed query string and input parameter might be out of range, or you might have used parameters together incorrectly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: DescribeSafetyRule
      description: |-
        Returns information about a safety rule.
      parameters:
      - name: SafetyRuleArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '404':
          description: |-
            404 response - MalformedQueryString. The query string contains a syntax error or resource not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            400 response - Multiple causes. For example, you might have a malformed query string and input parameter might be out of range, or you might have used parameters together incorrectly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /resourcePolicy/{ResourceArn}:
    get:
      operationId: GetResourcePolicy
      description: |-
        Get information about the resource policy for a cluster.
      parameters:
      - name: ResourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '500':
          description: |-
            500 response - InternalServiceError. Temporary service error. Retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            404 response - MalformedQueryString. The query string contains a syntax error or resource not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /routingcontrol/{RoutingControlArn}/associatedRoute53HealthChecks:
    get:
      operationId: ListAssociatedRoute53HealthChecks
      description: |-
        Returns an array of all Amazon Route 53 health checks associated with a specific routing control.
      parameters:
      - name: MaxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: NextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      - name: RoutingControlArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '500':
          description: |-
            500 response - InternalServiceError. Temporary service error. Retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            404 response - MalformedQueryString. The query string contains a syntax error or resource not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            400 response - Multiple causes. For example, you might have a malformed query string and input parameter might be out of range, or you might have used parameters together incorrectly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /controlpanels:
    get:
      operationId: ListControlPanels
      description: |-
        Returns an array of control panels in an account or in a cluster.
      parameters:
      - name: ClusterArn
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      - name: MaxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: NextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '403':
          description: |-
            403 response - You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            500 response - InternalServiceError. Temporary service error. Retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            404 response - MalformedQueryString. The query string contains a syntax error or resource not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            429 response - LimitExceededException or TooManyRequestsException.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            400 response - Multiple causes. For example, you might have a malformed query string and input parameter might be out of range, or you might have used parameters together incorrectly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /controlpanel/{ControlPanelArn}/routingcontrols:
    get:
      operationId: ListRoutingControls
      description: |-
        Returns an array of routing controls for a control panel. A routing control is an Amazon Route 53 Application Recovery Controller construct that has one of two states: ON and OFF. You can map the routing control state to the state of an Amazon Route 53 health check, which can be used to control routing.
      parameters:
      - name: ControlPanelArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: MaxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: NextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '403':
          description: |-
            403 response - You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            500 response - InternalServiceError. Temporary service error. Retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            404 response - MalformedQueryString. The query string contains a syntax error or resource not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            429 response - LimitExceededException or TooManyRequestsException.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            400 response - Multiple causes. For example, you might have a malformed query string and input parameter might be out of range, or you might have used parameters together incorrectly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /controlpanel/{ControlPanelArn}/safetyrules:
    get:
      operationId: ListSafetyRules
      description: |-
        List the safety rules (the assertion rules and gating rules) that you've defined for the routing controls in a control panel.
      parameters:
      - name: ControlPanelArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: MaxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: NextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '403':
          description: |-
            403 response - You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            500 response - InternalServiceError. Temporary service error. Retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            404 response - MalformedQueryString. The query string contains a syntax error or resource not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            429 response - LimitExceededException or TooManyRequestsException.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            400 response - Multiple causes. For example, you might have a malformed query string and input parameter might be out of range, or you might have used parameters together incorrectly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /tags/{ResourceArn}:
    get:
      operationId: ListTagsForResource
      description: |-
        Lists the tags for a resource.
      parameters:
      - name: ResourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '500':
          description: |-
            500 response - InternalServiceError. Temporary service error. Retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            404 response - MalformedQueryString. The query string contains a syntax error or resource not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            400 response - Multiple causes. For example, you might have a malformed query string and input parameter might be out of range, or you might have used parameters together incorrectly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    post:
      operationId: TagResource
      description: |-
        Adds a tag to a resource.
      parameters:
      - name: ResourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Tags:
                  $ref: '#/components/schemas/__mapOf__stringMin0Max256PatternS'
      responses:
        '200': {}
        '500':
          description: |-
            500 response - InternalServiceError. Temporary service error. Retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            404 response - MalformedQueryString. The query string contains a syntax error or resource not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            400 response - Multiple causes. For example, you might have a malformed query string and input parameter might be out of range, or you might have used parameters together incorrectly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    delete:
      operationId: UntagResource
      description: |-
        Removes a tag from a resource.
      parameters:
      - name: ResourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: TagKeys
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/__listOf__string'
      responses:
        '200': {}
        '500':
          description: |-
            500 response - InternalServiceError. Temporary service error. Retry the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            404 response - MalformedQueryString. The query string contains a syntax error or resource not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            400 response - Multiple causes. For example, you might have a malformed query string and input parameter might be out of range, or you might have used parameters together incorrectly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
components:
  schemas:
    AccessDeniedException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/__string'
      required:
      - Message
      description: 403 response - You do not have sufficient access to perform this
        action.
    AssertionRule:
      type: object
      properties:
        AssertedControls:
          allOf:
          - $ref: '#/components/schemas/__listOf__stringMin1Max256PatternAZaZ09'
          description: The routing controls that are part of transactions that are
            evaluated to determine if a request to change a routing control state
            is allowed. For example, you might include three routing controls, one
            for each of three Amazon Web Services Regions.
        ControlPanelArn:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max256PatternAZaZ09'
          description: The Amazon Resource Name (ARN) of the control panel.
        Name:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max64PatternS'
          description: Name of the assertion rule. You can use any non-white space
            character in the name.
        RuleConfig:
          allOf:
          - $ref: '#/components/schemas/RuleConfig'
          description: The criteria that you set for specific assertion routing controls
            (AssertedControls) that designate how many routing control states must
            be ON as the result of a transaction. For example, if you have three assertion
            routing controls, you might specify ATLEAST 2 for your rule configuration.
            This means that at least two assertion routing control states must be
            ON, so that at least two Amazon Web Services Regions have traffic flowing
            to them.
        SafetyRuleArn:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max256PatternAZaZ09'
          description: The Amazon Resource Name (ARN) of the assertion rule.
        Status:
          allOf:
          - $ref: '#/components/schemas/Status'
          description: 'The deployment status of an assertion rule. Status can be
            one of the following: PENDING, DEPLOYED, PENDING_DELETION.'
        WaitPeriodMs:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: An evaluation period, in milliseconds (ms), during which any
            request against the target routing controls will fail. This helps prevent
            "flapping" of state. The wait period is 5000 ms by default, but you can
            choose a custom value.
        Owner:
          allOf:
          - $ref: '#/components/schemas/__stringMin12Max12PatternD12'
          description: The Amazon Web Services account ID of the assertion rule owner.
      required:
      - AssertedControls
      - ControlPanelArn
      - Name
      - RuleConfig
      - SafetyRuleArn
      - Status
      - WaitPeriodMs
      description: An assertion rule enforces that, when you change a routing control
        state, that the criteria that you set in the rule configuration is met. Otherwise,
        the change to the routing control is not accepted. For example, the criteria
        might be that at least one routing control state is On after the transaction
        so that traffic continues to flow to at least one cell for the application.
        This ensures that you avoid a fail-open scenario.
    AssertionRuleUpdate:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max64PatternS'
          description: The name of the assertion rule. You can use any non-white space
            character in the name.
        SafetyRuleArn:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max256PatternAZaZ09'
          description: The Amazon Resource Name (ARN) of the assertion rule.
        WaitPeriodMs:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: An evaluation period, in milliseconds (ms), during which any
            request against the target routing controls will fail. This helps prevent
            "flapping" of state. The wait period is 5000 ms by default, but you can
            choose a custom value.
      required:
      - Name
      - SafetyRuleArn
      - WaitPeriodMs
      description: An update to an assertion rule. You can update the name or the
        evaluation period (wait period). If you don't specify one of the items to
        update, the item is unchanged.
    Cluster:
      type: object
      properties:
        ClusterArn:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max256PatternAZaZ09'
          description: The Amazon Resource Name (ARN) of the cluster.
        ClusterEndpoints:
          allOf:
          - $ref: '#/components/schemas/__listOfClusterEndpoint'
          description: 'Endpoints for a cluster. Specify one of these endpoints when
            you want to set or retrieve a routing control state in the cluster.


            To get or update the routing control state, see the Amazon Route 53 Application
            Recovery Controller Routing Control Actions.'
        Name:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max64PatternS'
          description: The name of the cluster.
        Status:
          allOf:
          - $ref: '#/components/schemas/Status'
          description: 'Deployment status of a resource. Status can be one of the
            following: PENDING, DEPLOYED, PENDING_DELETION.'
        Owner:
          allOf:
          - $ref: '#/components/schemas/__stringMin12Max12PatternD12'
          description: The Amazon Web Services account ID of the cluster owner.
        NetworkType:
          allOf:
          - $ref: '#/components/schemas/NetworkType'
          description: 'The network type of the cluster. NetworkType can be one of
            the following: IPV4, DUALSTACK.'
      description: A set of five redundant Regional endpoints against which you can
        execute API calls to update or get the state of routing controls. You can
        host multiple control panels and routing controls on one cluster.
    ClusterEndpoint:
      type: object
      properties:
        Endpoint:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max128PatternAZaZ09'
          description: 'A cluster endpoint. Specify an endpoint and Amazon Web Services
            Region when you want to set or retrieve a routing control state in the
            cluster.


            To get or update the routing control state, see the Amazon Route 53 Application
            Recovery Controller Routing Control Actions.'
        Region:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max32PatternS'
          description: The Amazon Web Services Region for a cluster endpoint.
      description: A cluster endpoint. Specify an endpoint when you want to set or
        retrieve a routing control state in the cluster.
    ConflictException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/__string'
      required:
      - Message
      description: 409 response - ConflictException. You might be using a predefined
        variable.
    ControlPanel:
      type: object
      properties:
        ClusterArn:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max256PatternAZaZ09'
          description: The Amazon Resource Name (ARN) of the cluster that includes
            the control panel.
        ControlPanelArn:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max256PatternAZaZ09'
          description: The Amazon Resource Name (ARN) of the control panel.
        DefaultControlPanel:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: A flag that Amazon Route 53 Application Recovery Controller
            sets to true to designate the default control panel for a cluster. When
            you create a cluster, Amazon Route 53 Application Recovery Controller
            creates a control panel, and sets this flag for that control panel. If
            you create a control panel yourself, this flag is set to false.
        Name:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max64PatternS'
          description: The name of the control panel. You can use any non-white space
            character in the name.
        RoutingControlCount:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The number of routing controls in the control panel.
        Status:
          allOf:
          - $ref: '#/components/schemas/Status'
          description: 'The deployment status of control panel. Status can be one
            of the following: PENDING, DEPLOYED, PENDING_DELETION.'
        Owner:
          allOf:
          - $ref: '#/components/schemas/__stringMin12Max12PatternD12'
          description: The Amazon Web Services account ID of the control panel owner.
      description: A control panel represents a group of routing controls that can
        be changed together in a single transaction.
    CreateClusterRequest:
      type: object
      properties:
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max64PatternS'
          description: A unique, case-sensitive string of up to 64 ASCII characters.
            To make an idempotent API request with an action, specify a client token
            in the request.
        ClusterName:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max64PatternS'
          description: The name of the cluster.
        Tags:
          allOf:
          - $ref: '#/components/schemas/__mapOf__stringMin0Max256PatternS'
          description: The tags associated with the cluster.
        NetworkType:
          allOf:
          - $ref: '#/components/schemas/NetworkType'
          description: 'The network type of the cluster. NetworkType can be one of
            the following: IPV4, DUALSTACK.'
      required:
      - ClusterName
      description: Creates a cluster.
    CreateClusterResponse:
      type: object
      properties:
        Cluster:
          allOf:
          - $ref: '#/components/schemas/Cluster'
          description: The cluster that was created.
    CreateControlPanelRequest:
      type: object
      properties:
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max64PatternS'
          description: A unique, case-sensitive string of up to 64 ASCII characters.
            To make an idempotent API request with an action, specify a client token
            in the request.
        ClusterArn:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max256PatternAZaZ09'
          description: The Amazon Resource Name (ARN) of the cluster for the control
            panel.
        ControlPanelName:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max64PatternS'
          description: The name of the control panel.
        Tags:
          allOf:
          - $ref: '#/components/schemas/__mapOf__stringMin0Max256PatternS'
          description: The tags associated with the control panel.
      required:
      - ClusterArn
      - ControlPanelName
      description: The details of the control panel that you're creating.
    CreateControlPanelResponse:
      type: object
      properties:
        ControlPanel:
          allOf:
          - $ref: '#/components/schemas/ControlPanel'
          description: Information about a control panel.
    CreateRoutingControlRequest:
      type: object
      properties:
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max64PatternS'
          description: A unique, case-sensitive string of up to 64 ASCII characters.
            To make an idempotent API request with an action, specify a client token
            in the request.
        ClusterArn:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max256PatternAZaZ09'
          description: The Amazon Resource Name (ARN) of the cluster that includes
            the routing control.
        ControlPanelArn:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max256PatternAZaZ09'
          description: The Amazon Resource Name (ARN) of the control panel that includes
            the routing control.
        RoutingControlName:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max64PatternS'
          description: The name of the routing control.
      required:
      - ClusterArn
      - RoutingControlName
      description: The details of the routing control that you're creating.
    CreateRoutingControlResponse:
      type: object
      properties:
        RoutingControl:
          allOf:
          - $ref: '#/components/schemas/RoutingControl'
          description: The routing control that is created.
    CreateSafetyRuleRequest:
      type: object
      properties:
        AssertionRule:
          allOf:
          - $ref: '#/components/schemas/NewAssertionRule'
          description: The assertion rule requested.
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max64PatternS'
          description: A unique, case-sensitive string of up to 64 ASCII characters.
            To make an idempotent API request with an action, specify a client token
            in the request.
        GatingRule:
          allOf:
          - $ref: '#/components/schemas/NewGatingRule'
          description: The gating rule requested.
        Tags:
          allOf:
          - $ref: '#/components/schemas/__mapOf__stringMin0Max256PatternS'
          description: The tags associated with the safety rule.
      description: The request body that you include when you create a safety rule.
    CreateSafetyRuleResponse:
      type: object
      properties:
        AssertionRule:
          allOf:
          - $ref: '#/components/schemas/AssertionRule'
          description: The assertion rule created.
        GatingRule:
          allOf:
          - $ref: '#/components/schemas/GatingRule'
          description: The gating rule created.
    DeleteClusterRequest:
      type: object
      properties:
        ClusterArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the cluster that you're deleting.
      required:
      - ClusterArn
    DeleteClusterResponse:
      type: object
      properties: {}
    DeleteControlPanelRequest:
      type: object
      properties:
        ControlPanelArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the control panel.
      required:
      - ControlPanelArn
    DeleteControlPanelResponse:
      type: object
      properties: {}
    DeleteRoutingControlRequest:
      type: object
      properties:
        RoutingControlArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the routing control that
            you're deleting.
      required:
      - RoutingControlArn
    DeleteRoutingControlResponse:
      type: object
      properties: {}
    DeleteSafetyRuleRequest:
      type: object
      properties:
        SafetyRuleArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN of the safety rule.
      required:
      - SafetyRuleArn
    DeleteSafetyRuleResponse:
      type: object
      properties: {}
    DescribeClusterRequest:
      type: object
      properties:
        ClusterArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the cluster.
      required:
      - ClusterArn
    DescribeClusterResponse:
      type: object
      properties:
        Cluster:
          allOf:
          - $ref: '#/components/schemas/Cluster'
          description: The cluster for the DescribeCluster request.
    DescribeControlPanelRequest:
      type: object
      properties:
        ControlPanelArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the control panel.
      required:
      - ControlPanelArn
    DescribeControlPanelResponse:
      type: object
      properties:
        ControlPanel:
          allOf:
          - $ref: '#/components/schemas/ControlPanel'
          description: Information about the control panel.
    DescribeRoutingControlRequest:
      type: object
      properties:
        RoutingControlArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the routing control.
      required:
      - RoutingControlArn
    DescribeRoutingControlResponse:
      type: object
      properties:
        RoutingControl:
          allOf:
          - $ref: '#/components/schemas/RoutingControl'
          description: Information about the routing control.
    DescribeSafetyRuleRequest:
      type: object
      properties:
        SafetyRuleArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN of the safety rule.
      required:
      - SafetyRuleArn
    DescribeSafetyRuleResponse:
      type: object
      properties:
        AssertionRule:
          allOf:
          - $ref: '#/components/schemas/AssertionRule'
          description: The assertion rule in the response.
        GatingRule:
          allOf:
          - $ref: '#/components/schemas/GatingRule'
          description: The gating rule in the response.
    GatingRule:
      type: object
      properties:
        ControlPanelArn:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max256PatternAZaZ09'
          description: The Amazon Resource Name (ARN) of the control panel.
        GatingControls:
          allOf:
          - $ref: '#/components/schemas/__listOf__stringMin1Max256PatternAZaZ09'
          description: An array of gating routing control Amazon Resource Names (ARNs).
            For a simple "on/off" switch, specify the ARN for one routing control.
            The gating routing controls are evaluated by the rule configuration that
            you specify to determine if the target routing control states can be changed.
        Name:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max64PatternS'
          description: The name for the gating rule. You can use any non-white space
            character in the name.
        RuleConfig:
          allOf:
          - $ref: '#/components/schemas/RuleConfig'
          description: The criteria that you set for gating routing controls that
            designate how many of the routing control states must be ON to allow you
            to update target routing control states.
        SafetyRuleArn:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max256PatternAZaZ09'
          description: The Amazon Resource Name (ARN) of the gating rule.
        Status:
          allOf:
          - $ref: '#/components/schemas/Status'
          description: 'The deployment status of a gating rule. Status can be one
            of the following: PENDING, DEPLOYED, PENDING_DELETION.'
        TargetControls:
          allOf:
          - $ref: '#/components/schemas/__listOf__stringMin1Max256PatternAZaZ09'
          description: An array of target routing control Amazon Resource Names (ARNs)
            for which the states can only be updated if the rule configuration that
            you specify evaluates to true for the gating routing control. As a simple
            example, if you have a single gating control, it acts as an overall "on/off"
            switch for a set of target routing controls. You can use this to manually
            override automated failover, for example.
        WaitPeriodMs:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: An evaluation period, in milliseconds (ms), during which any
            request against the target routing controls will fail. This helps prevent
            "flapping" of state. The wait period is 5000 ms by default, but you can
            choose a custom value.
        Owner:
          allOf:
          - $ref: '#/components/schemas/__stringMin12Max12PatternD12'
          description: The Amazon Web Services account ID of the gating rule owner.
      required:
      - ControlPanelArn
      - GatingControls
      - Name
      - RuleConfig
      - SafetyRuleArn
      - Status
      - TargetControls
      - WaitPeriodMs
      description: 'A gating rule verifies that a gating routing control or set of
        gating routing controls, evaluates as true, based on a rule configuration
        that you specify, which allows a set of routing control state changes to complete.


        For example, if you specify one gating routing control and you set the Type
        in the rule configuration to OR, that indicates that you must set the gating
        routing control to On for the rule to evaluate as true; that is, for the gating
        control "switch" to be "On". When you do that, then you can update the routing
        control states for the target routing controls that you specify in the gating
        rule.'
    GatingRuleUpdate:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max64PatternS'
          description: The name for the gating rule. You can use any non-white space
            character in the name.
        SafetyRuleArn:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max256PatternAZaZ09'
          description: The Amazon Resource Name (ARN) of the gating rule.
        WaitPeriodMs:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: An evaluation period, in milliseconds (ms), during which any
            request against the target routing controls will fail. This helps prevent
            "flapping" of state. The wait period is 5000 ms by default, but you can
            choose a custom value.
      required:
      - Name
      - SafetyRuleArn
      - WaitPeriodMs
      description: Update to a gating rule. You can update the name or the evaluation
        period (wait period). If you don't specify one of the items to update, the
        item is unchanged.
    GetResourcePolicyRequest:
      type: object
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the resource.
      required:
      - ResourceArn
    GetResourcePolicyResponse:
      type: object
      properties:
        Policy:
          allOf:
          - $ref: '#/components/schemas/__policy'
          description: The resource policy.
    InternalServerException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/__string'
      required:
      - Message
      description: 500 response - InternalServiceError. Temporary service error. Retry
        the request.
    ListAssociatedRoute53HealthChecksRequest:
      type: object
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The number of objects that you want to return with this call.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The token that identifies which batch of results you want to
            see.
        RoutingControlArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the routing control.
      required:
      - RoutingControlArn
    ListAssociatedRoute53HealthChecksResponse:
      type: object
      properties:
        HealthCheckIds:
          allOf:
          - $ref: '#/components/schemas/__listOf__stringMax36PatternS'
          description: Identifiers for the health checks.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max8096PatternS'
          description: Next token for listing health checks.
    ListClustersRequest:
      type: object
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The number of objects that you want to return with this call.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The token that identifies which batch of results you want to
            see.
    ListClustersResponse:
      type: object
      properties:
        Clusters:
          allOf:
          - $ref: '#/components/schemas/__listOfCluster'
          description: An array of the clusters in an account.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max8096PatternS'
          description: The token that identifies which batch of results you want to
            see.
    ListControlPanelsRequest:
      type: object
      properties:
        ClusterArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of a cluster.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The number of objects that you want to return with this call.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The token that identifies which batch of results you want to
            see.
    ListControlPanelsResponse:
      type: object
      properties:
        ControlPanels:
          allOf:
          - $ref: '#/components/schemas/__listOfControlPanel'
          description: The result of a successful ListControlPanel request.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max8096PatternS'
          description: The token that identifies which batch of results you want to
            see.
    ListRoutingControlsRequest:
      type: object
      properties:
        ControlPanelArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the control panel.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The number of objects that you want to return with this call.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The token that identifies which batch of results you want to
            see.
      required:
      - ControlPanelArn
    ListRoutingControlsResponse:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max8096PatternS'
          description: The token that identifies which batch of results you want to
            see.
        RoutingControls:
          allOf:
          - $ref: '#/components/schemas/__listOfRoutingControl'
          description: An array of routing controls.
    ListSafetyRulesRequest:
      type: object
      properties:
        ControlPanelArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the control panel.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The number of objects that you want to return with this call.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The token that identifies which batch of results you want to
            see.
      required:
      - ControlPanelArn
    ListSafetyRulesResponse:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max8096PatternS'
          description: The token that identifies which batch of results you want to
            see.
        SafetyRules:
          allOf:
          - $ref: '#/components/schemas/__listOfRule'
          description: The list of safety rules in a control panel.
    ListTagsForResourceRequest:
      type: object
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) for the resource that's tagged.
      required:
      - ResourceArn
    ListTagsForResourceResponse:
      type: object
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/__mapOf__stringMin0Max256PatternS'
          description: The tags associated with the resource.
    MaxResults:
      type: integer
      minimum: 1
      maximum: 1000
    NetworkType:
      type: string
      enum:
      - IPV4
      - DUALSTACK
      description: '<p>The network type of a cluster. NetworkType can be one of the
        following:</p> <p>IPV4: Cluster endpoints support IPv4 only.</p> <p>DUALSTACK:
        Cluster endpoints support both IPv4 and IPv6.</p>'
    NewAssertionRule:
      type: object
      properties:
        AssertedControls:
          allOf:
          - $ref: '#/components/schemas/__listOf__stringMin1Max256PatternAZaZ09'
          description: The routing controls that are part of transactions that are
            evaluated to determine if a request to change a routing control state
            is allowed. For example, you might include three routing controls, one
            for each of three Amazon Web Services Regions.
        ControlPanelArn:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max256PatternAZaZ09'
          description: The Amazon Resource Name (ARN) for the control panel.
        Name:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max64PatternS'
          description: The name of the assertion rule. You can use any non-white space
            character in the name.
        RuleConfig:
          allOf:
          - $ref: '#/components/schemas/RuleConfig'
          description: The criteria that you set for specific assertion controls (routing
            controls) that designate how many control states must be ON as the result
            of a transaction. For example, if you have three assertion controls, you
            might specify ATLEAST 2 for your rule configuration. This means that at
            least two assertion controls must be ON, so that at least two Amazon Web
            Services Regions have traffic flowing to them.
        WaitPeriodMs:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: An evaluation period, in milliseconds (ms), during which any
            request against the target routing controls will fail. This helps prevent
            "flapping" of state. The wait period is 5000 ms by default, but you can
            choose a custom value.
      required:
      - AssertedControls
      - ControlPanelArn
      - Name
      - RuleConfig
      - WaitPeriodMs
      description: A new assertion rule for a control panel.
    NewGatingRule:
      type: object
      properties:
        ControlPanelArn:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max256PatternAZaZ09'
          description: The Amazon Resource Name (ARN) of the control panel.
        GatingControls:
          allOf:
          - $ref: '#/components/schemas/__listOf__stringMin1Max256PatternAZaZ09'
          description: The gating controls for the new gating rule. That is, routing
            controls that are evaluated by the rule configuration that you specify.
        Name:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max64PatternS'
          description: The name for the new gating rule.
        RuleConfig:
          allOf:
          - $ref: '#/components/schemas/RuleConfig'
          description: The criteria that you set for specific gating controls (routing
            controls) that designate how many control states must be ON to allow you
            to change (set or unset) the target control states.
        TargetControls:
          allOf:
          - $ref: '#/components/schemas/__listOf__stringMin1Max256PatternAZaZ09'
          description: 'Routing controls that can only be set or unset if the specified
            RuleConfig evaluates to true for the specified GatingControls. For example,
            say you have three gating controls, one for each of three Amazon Web Services
            Regions. Now you specify ATLEAST 2 as your RuleConfig. With these settings,
            you can only change (set or unset) the routing controls that you have
            specified as TargetControls if that rule evaluates to true.


            In other words, your ability to change the routing controls that you have
            specified as TargetControls is gated by the rule that you set for the
            routing controls in GatingControls.'
        WaitPeriodMs:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: An evaluation period, in milliseconds (ms), during which any
            request against the target routing controls will fail. This helps prevent
            "flapping" of state. The wait period is 5000 ms by default, but you can
            choose a custom value.
      required:
      - ControlPanelArn
      - GatingControls
      - Name
      - RuleConfig
      - TargetControls
      - WaitPeriodMs
      description: A new gating rule for a control panel.
    ResourceNotFoundException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/__string'
      required:
      - Message
      description: 404 response - MalformedQueryString. The query string contains
        a syntax error or resource not found.
    RoutingControl:
      type: object
      properties:
        ControlPanelArn:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max256PatternAZaZ09'
          description: The Amazon Resource Name (ARN) of the control panel that includes
            the routing control.
        Name:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max64PatternS'
          description: The name of the routing control.
        RoutingControlArn:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max256PatternAZaZ09'
          description: The Amazon Resource Name (ARN) of the routing control.
        Status:
          allOf:
          - $ref: '#/components/schemas/Status'
          description: 'The deployment status of a routing control. Status can be
            one of the following: PENDING, DEPLOYED, PENDING_DELETION.'
        Owner:
          allOf:
          - $ref: '#/components/schemas/__stringMin12Max12PatternD12'
          description: The Amazon Web Services account ID of the routing control owner.
      description: 'A routing control has one of two states: ON and OFF. You can map
        the routing control state to the state of an Amazon Route 53 health check,
        which can be used to control traffic routing.'
    Rule:
      type: object
      properties:
        ASSERTION:
          allOf:
          - $ref: '#/components/schemas/AssertionRule'
          description: An assertion rule enforces that, when a routing control state
            is changed, the criteria set by the rule configuration is met. Otherwise,
            the change to the routing control state is not accepted. For example,
            the criteria might be that at least one routing control state is On after
            the transaction so that traffic continues to flow to at least one cell
            for the application. This ensures that you avoid a fail-open scenario.
        GATING:
          allOf:
          - $ref: '#/components/schemas/GatingRule'
          description: 'A gating rule verifies that a gating routing control or set
            of gating routing controls, evaluates as true, based on a rule configuration
            that you specify, which allows a set of routing control state changes
            to complete.


            For example, if you specify one gating routing control and you set the
            Type in the rule configuration to OR, that indicates that you must set
            the gating routing control to On for the rule to evaluate as true; that
            is, for the gating control "switch" to be "On". When you do that, then
            you can update the routing control states for the target routing controls
            that you specify in the gating rule.'
      description: A safety rule. A safety rule can be an assertion rule or a gating
        rule.
    RuleConfig:
      type: object
      properties:
        Inverted:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: Logical negation of the rule. If the rule would usually evaluate
            true, it's evaluated as false, and vice versa.
        Threshold:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The value of N, when you specify an ATLEAST rule type. That
            is, Threshold is the number of controls that must be set when you specify
            an ATLEAST type.
        Type:
          allOf:
          - $ref: '#/components/schemas/RuleType'
          description: 'A rule can be one of the following: ATLEAST, AND, or OR.'
      required:
      - Inverted
      - Threshold
      - Type
      description: The rule configuration for an assertion rule. That is, the criteria
        that you set for specific assertion controls (routing controls) that specify
        how many control states must be ON after a transaction completes.
    RuleType:
      type: string
      enum:
      - ATLEAST
      - AND
      - OR
      description: <p>An enumerated type that determines how the evaluated rules are
        processed. RuleType can be one of the following:</p> <p>ATLEAST - At least
        N routing controls must be set. You specify N as the Threshold in the rule
        configuration.</p> <p>AND - All routing controls must be set. This is a shortcut
        for "At least N," where N is the total number of controls in the rule.</p>
        <p>OR - Any control must be set. This is a shortcut for "At least N," where
        N is 1.</p>
    ServiceQuotaExceededException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/__string'
      required:
      - Message
      description: 402 response - You attempted to create more resources than the
        service allows based on service quotas.
    Status:
      type: string
      enum:
      - PENDING
      - DEPLOYED
      - PENDING_DELETION
      description: '<p>The deployment status of a resource. Status can be one of the
        following:</p> <p>PENDING: Amazon Route 53 Application Recovery Controller
        is creating the resource.</p> <p>DEPLOYED: The resource is deployed and ready
        to use.</p> <p>PENDING_DELETION: Amazon Route 53 Application Recovery Controller
        is deleting the resource.</p>'
    TagResourceRequest:
      type: object
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) for the resource that's tagged.
        Tags:
          allOf:
          - $ref: '#/components/schemas/__mapOf__stringMin0Max256PatternS'
          description: The tags associated with the resource.
      required:
      - ResourceArn
      - Tags
      description: Request of adding tag to the resource
    TagResourceResponse:
      type: object
      properties: {}
    ThrottlingException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/__string'
      required:
      - Message
      description: 429 response - LimitExceededException or TooManyRequestsException.
    UntagResourceRequest:
      type: object
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) for the resource that's tagged.
        TagKeys:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: Keys for the tags to be removed.
      required:
      - ResourceArn
      - TagKeys
    UntagResourceResponse:
      type: object
      properties: {}
    UpdateClusterRequest:
      type: object
      properties:
        ClusterArn:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max256PatternAZaZ09'
          description: The Amazon Resource Name (ARN) of the cluster.
        NetworkType:
          allOf:
          - $ref: '#/components/schemas/NetworkType'
          description: 'The network type of the cluster. NetworkType can be one of
            the following: IPV4, DUALSTACK.'
      required:
      - ClusterArn
      - NetworkType
      description: The details of the cluster that you're updating.
    UpdateClusterResponse:
      type: object
      properties:
        Cluster:
          allOf:
          - $ref: '#/components/schemas/Cluster'
          description: The cluster that was updated.
    UpdateControlPanelRequest:
      type: object
      properties:
        ControlPanelArn:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max256PatternAZaZ09'
          description: The Amazon Resource Name (ARN) of the control panel.
        ControlPanelName:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max64PatternS'
          description: The name of the control panel.
      required:
      - ControlPanelArn
      - ControlPanelName
      description: The details of the control panel that you're updating.
    UpdateControlPanelResponse:
      type: object
      properties:
        ControlPanel:
          allOf:
          - $ref: '#/components/schemas/ControlPanel'
          description: The control panel to update.
    UpdateRoutingControlRequest:
      type: object
      properties:
        RoutingControlArn:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max256PatternAZaZ09'
          description: The Amazon Resource Name (ARN) of the routing control.
        RoutingControlName:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max64PatternS'
          description: The name of the routing control.
      required:
      - RoutingControlArn
      - RoutingControlName
      description: The details of the routing control that you're updating.
    UpdateRoutingControlResponse:
      type: object
      properties:
        RoutingControl:
          allOf:
          - $ref: '#/components/schemas/RoutingControl'
          description: The routing control that was updated.
    UpdateSafetyRuleRequest:
      type: object
      properties:
        AssertionRuleUpdate:
          allOf:
          - $ref: '#/components/schemas/AssertionRuleUpdate'
          description: The assertion rule to update.
        GatingRuleUpdate:
          allOf:
          - $ref: '#/components/schemas/GatingRuleUpdate'
          description: The gating rule to update.
      description: A rule that you add to Application Recovery Controller to ensure
        that recovery actions don't accidentally impair your application's availability.
    UpdateSafetyRuleResponse:
      type: object
      properties:
        AssertionRule:
          allOf:
          - $ref: '#/components/schemas/AssertionRule'
          description: The assertion rule updated.
        GatingRule:
          allOf:
          - $ref: '#/components/schemas/GatingRule'
          description: The gating rule updated.
    ValidationException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/__string'
      required:
      - Message
      description: 400 response - Multiple causes. For example, you might have a malformed
        query string and input parameter might be out of range, or you might have
        used parameters together incorrectly.
    __boolean:
      type: boolean
    __integer:
      type: integer
    __listOfCluster:
      type: array
      items:
        $ref: '#/components/schemas/Cluster'
    __listOfClusterEndpoint:
      type: array
      items:
        $ref: '#/components/schemas/ClusterEndpoint'
    __listOfControlPanel:
      type: array
      items:
        $ref: '#/components/schemas/ControlPanel'
    __listOfRoutingControl:
      type: array
      items:
        $ref: '#/components/schemas/RoutingControl'
    __listOfRule:
      type: array
      items:
        $ref: '#/components/schemas/Rule'
    __listOf__string:
      type: array
      items:
        $ref: '#/components/schemas/__string'
    __listOf__stringMax36PatternS:
      type: array
      items:
        $ref: '#/components/schemas/__stringMax36PatternS'
    __listOf__stringMin1Max256PatternAZaZ09:
      type: array
      items:
        $ref: '#/components/schemas/__stringMin1Max256PatternAZaZ09'
    __mapOf__stringMin0Max256PatternS:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/__stringMin0Max256PatternS'
    __policy:
      type: string
      pattern: ^[\u0009\u000A\u000D\u0020-\u007E\u00A1-\u00FF]+$
      minLength: 2
      maxLength: 10240
    __string:
      type: string
    __stringMax36PatternS:
      type: string
      pattern: ^\S+$
      minLength: 0
      maxLength: 36
    __stringMin0Max256PatternS:
      type: string
      pattern: ^\S+$
      minLength: 0
      maxLength: 256
    __stringMin12Max12PatternD12:
      type: string
      pattern: ^\d{12}$
      minLength: 12
      maxLength: 12
    __stringMin1Max128PatternAZaZ09:
      type: string
      pattern: ^[A-Za-z0-9:.\/_-]*$
      minLength: 1
      maxLength: 128
    __stringMin1Max256PatternAZaZ09:
      type: string
      pattern: ^[A-Za-z0-9:\/_-]*$
      minLength: 1
      maxLength: 256
    __stringMin1Max32PatternS:
      type: string
      pattern: ^\S+$
      minLength: 1
      maxLength: 32
    __stringMin1Max64PatternS:
      type: string
      pattern: ^\S+$
      minLength: 1
      maxLength: 64
    __stringMin1Max8096PatternS:
      type: string
      pattern: ^[\S]*$
      minLength: 1
      maxLength: 8096
