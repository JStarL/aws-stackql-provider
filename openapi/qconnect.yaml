openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: qconnect
  x-aws-serviceName: qconnect
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-07'
  version: '2020-10-19'
  title: Amazon Q Connect
  description: |-
    * [Amazon Q actions](https://docs.aws.amazon.com/connect/latest/APIReference/API_Operations_Amazon_Q_Connect.html)

      * [Amazon Q data types](https://docs.aws.amazon.com/connect/latest/APIReference/API_Types_Amazon_Q_Connect.html)

    **Powered by Amazon Bedrock** : Amazon Web Services implements [automated abuse detection](https://docs.aws.amazon.com/bedrock/latest/userguide/abuse-detection.html). Because Amazon Q in Connect is built on Amazon Bedrock, users can take full advantage of the controls implemented in Amazon Bedrock to enforce safety, security, and the responsible use of artificial intelligence (AI).

    Amazon Q in Connect is a generative AI customer service assistant. It is an LLM-enhanced evolution of Amazon Connect Wisdom that delivers real-time recommendations to help contact center agents resolve customer issues quickly and accurately.

    Amazon Q in Connect automatically detects customer intent during calls and chats using conversational analytics and natural language understanding (NLU). It then provides agents with immediate, real-time generative responses and suggested actions, and links to relevant documents and articles. Agents can also query Amazon Q in Connect directly using natural language or keywords to answer customer requests.

    Use the Amazon Q in Connect APIs to create an assistant and a knowledge base, for example, or manage content by uploading custom files.

    For more information, see [Use Amazon Q in Connect for generative AI powered agent assistance in real-time](https://docs.aws.amazon.com/connect/latest/adminguide/amazon-q-connect.html) in the _Amazon Connect Administrator Guide_.
servers:
- description: The Amazon Q Connect regional endpoint
  url: https://wisdom.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths:
  /knowledgeBases/{knowledgeBaseId}/messageTemplates/{messageTemplateId}/activate:
    post:
      operationId: ActivateMessageTemplate
      description: |-
        Activates a specific version of the Amazon Q in Connect message template. After the version is activated, the previous active version will be deactivated automatically. You can use the `$ACTIVE_VERSION` qualifier later to reference the version that is in active status.
      parameters:
      - name: knowledgeBaseId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      - name: messageTemplateId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArnOrEitherWithQualifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                versionNumber:
                  $ref: '#/components/schemas/Version'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the resource. For example, if you're using a `Create` API (such as `CreateAssistant`) that accepts name, a conflicting resource (usually with the same name) is being created or mutated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by a service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /assistants/{assistantId}/aiagents:
    post:
      operationId: CreateAIAgent
      description: |-
        Creates an Amazon Q in Connect AI Agent.
      parameters:
      - name: assistantId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
                name:
                  $ref: '#/components/schemas/Name'
                type:
                  $ref: '#/components/schemas/AIAgentType'
                configuration:
                  $ref: '#/components/schemas/AIAgentConfiguration'
                visibilityStatus:
                  $ref: '#/components/schemas/VisibilityStatus'
                tags:
                  $ref: '#/components/schemas/Tags'
                description:
                  $ref: '#/components/schemas/Description'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the resource. For example, if you're using a `Create` API (such as `CreateAssistant`) that accepts name, a conflicting resource (usually with the same name) is being created or mutated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            You've exceeded your service quota. To perform the requested action, remove some of the relevant resources, or use service quotas to request a service quota increase.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by a service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: ListAIAgents
      description: |-
        Lists AI Agents.
      parameters:
      - name: assistantId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: origin
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Origin'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by a service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /assistants/{assistantId}/aiagents/{aiAgentId}/versions:
    post:
      operationId: CreateAIAgentVersion
      description: |-
        Creates and Amazon Q in Connect AI Agent version.
      parameters:
      - name: assistantId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      - name: aiAgentId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArnOrEitherWithQualifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                modifiedTime:
                  $ref: '#/components/schemas/Timestamp'
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the resource. For example, if you're using a `Create` API (such as `CreateAssistant`) that accepts name, a conflicting resource (usually with the same name) is being created or mutated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            You've exceeded your service quota. To perform the requested action, remove some of the relevant resources, or use service quotas to request a service quota increase.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by a service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: ListAIAgentVersions
      description: |-
        List AI Agent versions.
      parameters:
      - name: assistantId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      - name: aiAgentId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArnOrEitherWithQualifier'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: origin
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Origin'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by a service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /assistants/{assistantId}/aiguardrails:
    post:
      operationId: CreateAIGuardrail
      description: |-
        Creates an Amazon Q in Connect AI Guardrail.
      parameters:
      - name: assistantId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
                name:
                  $ref: '#/components/schemas/Name'
                blockedInputMessaging:
                  $ref: '#/components/schemas/AIGuardrailBlockedMessaging'
                blockedOutputsMessaging:
                  $ref: '#/components/schemas/AIGuardrailBlockedMessaging'
                visibilityStatus:
                  $ref: '#/components/schemas/VisibilityStatus'
                description:
                  $ref: '#/components/schemas/AIGuardrailDescription'
                topicPolicyConfig:
                  $ref: '#/components/schemas/AIGuardrailTopicPolicyConfig'
                contentPolicyConfig:
                  $ref: '#/components/schemas/AIGuardrailContentPolicyConfig'
                wordPolicyConfig:
                  $ref: '#/components/schemas/AIGuardrailWordPolicyConfig'
                sensitiveInformationPolicyConfig:
                  $ref: '#/components/schemas/AIGuardrailSensitiveInformationPolicyConfig'
                contextualGroundingPolicyConfig:
                  $ref: '#/components/schemas/AIGuardrailContextualGroundingPolicyConfig'
                tags:
                  $ref: '#/components/schemas/Tags'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the resource. For example, if you're using a `Create` API (such as `CreateAssistant`) that accepts name, a conflicting resource (usually with the same name) is being created or mutated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            You've exceeded your service quota. To perform the requested action, remove some of the relevant resources, or use service quotas to request a service quota increase.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by a service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: ListAIGuardrails
      description: |-
        Lists the AI Guardrails available on the Amazon Q in Connect assistant.
      parameters:
      - name: assistantId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by a service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /assistants/{assistantId}/aiguardrails/{aiGuardrailId}/versions:
    post:
      operationId: CreateAIGuardrailVersion
      description: |-
        Creates an Amazon Q in Connect AI Guardrail version.
      parameters:
      - name: assistantId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      - name: aiGuardrailId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArnOrEitherWithQualifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                modifiedTime:
                  $ref: '#/components/schemas/Timestamp'
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the resource. For example, if you're using a `Create` API (such as `CreateAssistant`) that accepts name, a conflicting resource (usually with the same name) is being created or mutated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            You've exceeded your service quota. To perform the requested action, remove some of the relevant resources, or use service quotas to request a service quota increase.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by a service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: ListAIGuardrailVersions
      description: |-
        Lists AI Guardrail versions.
      parameters:
      - name: assistantId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      - name: aiGuardrailId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArnOrEitherWithQualifier'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by a service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /assistants/{assistantId}/aiprompts:
    post:
      operationId: CreateAIPrompt
      description: |-
        Creates an Amazon Q in Connect AI Prompt.
      parameters:
      - name: assistantId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
                name:
                  $ref: '#/components/schemas/Name'
                type:
                  $ref: '#/components/schemas/AIPromptType'
                templateConfiguration:
                  $ref: '#/components/schemas/AIPromptTemplateConfiguration'
                visibilityStatus:
                  $ref: '#/components/schemas/VisibilityStatus'
                templateType:
                  $ref: '#/components/schemas/AIPromptTemplateType'
                modelId:
                  $ref: '#/components/schemas/AIPromptModelIdentifier'
                apiFormat:
                  $ref: '#/components/schemas/AIPromptAPIFormat'
                tags:
                  $ref: '#/components/schemas/Tags'
                description:
                  $ref: '#/components/schemas/Description'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the resource. For example, if you're using a `Create` API (such as `CreateAssistant`) that accepts name, a conflicting resource (usually with the same name) is being created or mutated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            You've exceeded your service quota. To perform the requested action, remove some of the relevant resources, or use service quotas to request a service quota increase.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by a service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: ListAIPrompts
      description: |-
        Lists the AI Prompts available on the Amazon Q in Connect assistant.
      parameters:
      - name: assistantId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: origin
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Origin'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by a service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /assistants/{assistantId}/aiprompts/{aiPromptId}/versions:
    post:
      operationId: CreateAIPromptVersion
      description: |-
        Creates an Amazon Q in Connect AI Prompt version.
      parameters:
      - name: assistantId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      - name: aiPromptId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArnOrEitherWithQualifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                modifiedTime:
                  $ref: '#/components/schemas/Timestamp'
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the resource. For example, if you're using a `Create` API (such as `CreateAssistant`) that accepts name, a conflicting resource (usually with the same name) is being created or mutated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            You've exceeded your service quota. To perform the requested action, remove some of the relevant resources, or use service quotas to request a service quota increase.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by a service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: ListAIPromptVersions
      description: |-
        Lists AI Prompt versions.
      parameters:
      - name: assistantId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      - name: aiPromptId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArnOrEitherWithQualifier'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: origin
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Origin'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by a service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /assistants:
    post:
      operationId: CreateAssistant
      description: |-
        Creates an Amazon Q in Connect assistant.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
                name:
                  $ref: '#/components/schemas/Name'
                type:
                  $ref: '#/components/schemas/AssistantType'
                description:
                  $ref: '#/components/schemas/Description'
                tags:
                  $ref: '#/components/schemas/Tags'
                serverSideEncryptionConfiguration:
                  $ref: '#/components/schemas/ServerSideEncryptionConfiguration'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the resource. For example, if you're using a `Create` API (such as `CreateAssistant`) that accepts name, a conflicting resource (usually with the same name) is being created or mutated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '402':
          description: |-
            You've exceeded your service quota. To perform the requested action, remove some of the relevant resources, or use service quotas to request a service quota increase.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by a service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: ListAssistants
      description: |-
        Lists information about assistants.
      parameters:
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by a service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /assistants/{assistantId}/associations:
    post:
      operationId: CreateAssistantAssociation
      description: |-
        Creates an association between an Amazon Q in Connect assistant and another resource. Currently, the only supported association is with a knowledge base. An assistant can have only a single association.
      parameters:
      - name: assistantId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                associationType:
                  $ref: '#/components/schemas/AssociationType'
                association:
                  $ref: '#/components/schemas/AssistantAssociationInputData'
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
                tags:
                  $ref: '#/components/schemas/Tags'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the resource. For example, if you're using a `Create` API (such as `CreateAssistant`) that accepts name, a conflicting resource (usually with the same name) is being created or mutated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            You've exceeded your service quota. To perform the requested action, remove some of the relevant resources, or use service quotas to request a service quota increase.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by a service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: ListAssistantAssociations
      description: |-
        Lists information about assistant associations.
      parameters:
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: assistantId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by a service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /knowledgeBases/{knowledgeBaseId}/contents:
    post:
      operationId: CreateContent
      description: |-
        Creates Amazon Q in Connect content. Before to calling this API, use [StartContentUpload](https://docs.aws.amazon.com/amazon-q-connect/latest/APIReference/API_StartContentUpload.html) to upload an asset.
      parameters:
      - name: knowledgeBaseId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  $ref: '#/components/schemas/Name'
                title:
                  $ref: '#/components/schemas/ContentTitle'
                overrideLinkOutUri:
                  $ref: '#/components/schemas/Uri'
                metadata:
                  $ref: '#/components/schemas/ContentMetadata'
                uploadId:
                  $ref: '#/components/schemas/UploadId'
                clientToken:
                  $ref: '#/components/schemas/NonEmptyString'
                tags:
                  $ref: '#/components/schemas/Tags'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the resource. For example, if you're using a `Create` API (such as `CreateAssistant`) that accepts name, a conflicting resource (usually with the same name) is being created or mutated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            You've exceeded your service quota. To perform the requested action, remove some of the relevant resources, or use service quotas to request a service quota increase.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by a service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: ListContents
      description: |-
        Lists the content.
      parameters:
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: knowledgeBaseId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by a service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /knowledgeBases/{knowledgeBaseId}/contents/{contentId}/associations:
    post:
      operationId: CreateContentAssociation
      description: |-
        Creates an association between a content resource in a knowledge base and [step-by-step guides](https://docs.aws.amazon.com/connect/latest/adminguide/step-by-step-guided-experiences.html). Step-by-step guides offer instructions to agents for resolving common customer issues. You create a content association to integrate Amazon Q in Connect and step-by-step guides.

        After you integrate Amazon Q and step-by-step guides, when Amazon Q provides a recommendation to an agent based on the intent that it's detected, it also provides them with the option to start the step-by-step guide that you have associated with the content.

        Note the following limitations:

          * You can create only one content association for each content resource in a knowledge base.

          * You can associate a step-by-step guide with multiple content resources.

        For more information, see [Integrate Amazon Q in Connect with step-by-step guides](https://docs.aws.amazon.com/connect/latest/adminguide/integrate-q-with-guides.html) in the _Amazon Connect Administrator Guide_.
      parameters:
      - name: knowledgeBaseId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      - name: contentId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
                associationType:
                  $ref: '#/components/schemas/ContentAssociationType'
                association:
                  $ref: '#/components/schemas/ContentAssociationContents'
                tags:
                  $ref: '#/components/schemas/Tags'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the resource. For example, if you're using a `Create` API (such as `CreateAssistant`) that accepts name, a conflicting resource (usually with the same name) is being created or mutated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            You've exceeded your service quota. To perform the requested action, remove some of the relevant resources, or use service quotas to request a service quota increase.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by a service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: ListContentAssociations
      description: |-
        Lists the content associations.

        For more information about content associations--what they are and when they are used--see [Integrate Amazon Q in Connect with step-by-step guides](https://docs.aws.amazon.com/connect/latest/adminguide/integrate-q-with-guides.html) in the _Amazon Connect Administrator Guide_.
      parameters:
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: knowledgeBaseId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      - name: contentId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by a service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /knowledgeBases:
    post:
      operationId: CreateKnowledgeBase
      description: |-
        Creates a knowledge base.

        When using this API, you cannot reuse [Amazon AppIntegrations](https://docs.aws.amazon.com/appintegrations/latest/APIReference/Welcome.html) DataIntegrations with external knowledge bases such as Salesforce and ServiceNow. If you do, you'll get an `InvalidRequestException` error.

        For example, you're programmatically managing your external knowledge base, and you want to add or remove one of the fields that is being ingested from Salesforce. Do the following:

          1. Call [DeleteKnowledgeBase](https://docs.aws.amazon.com/amazon-q-connect/latest/APIReference/API_DeleteKnowledgeBase.html).

          2. Call [DeleteDataIntegration](https://docs.aws.amazon.com/appintegrations/latest/APIReference/API_DeleteDataIntegration.html).

          3. Call [CreateDataIntegration](https://docs.aws.amazon.com/appintegrations/latest/APIReference/API_CreateDataIntegration.html) to recreate the DataIntegration or a create different one.

          4. Call CreateKnowledgeBase.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                clientToken:
                  $ref: '#/components/schemas/NonEmptyString'
                name:
                  $ref: '#/components/schemas/Name'
                knowledgeBaseType:
                  $ref: '#/components/schemas/KnowledgeBaseType'
                sourceConfiguration:
                  $ref: '#/components/schemas/SourceConfiguration'
                renderingConfiguration:
                  $ref: '#/components/schemas/RenderingConfiguration'
                vectorIngestionConfiguration:
                  $ref: '#/components/schemas/VectorIngestionConfiguration'
                serverSideEncryptionConfiguration:
                  $ref: '#/components/schemas/ServerSideEncryptionConfiguration'
                description:
                  $ref: '#/components/schemas/Description'
                tags:
                  $ref: '#/components/schemas/Tags'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the resource. For example, if you're using a `Create` API (such as `CreateAssistant`) that accepts name, a conflicting resource (usually with the same name) is being created or mutated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '402':
          description: |-
            You've exceeded your service quota. To perform the requested action, remove some of the relevant resources, or use service quotas to request a service quota increase.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by a service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: ListKnowledgeBases
      description: |-
        Lists the knowledge bases.
      parameters:
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NonEmptyString'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by a service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /knowledgeBases/{knowledgeBaseId}/messageTemplates:
    post:
      operationId: CreateMessageTemplate
      description: |-
        Creates an Amazon Q in Connect message template. The name of the message template has to be unique for each knowledge base. The channel subtype of the message template is immutable and cannot be modified after creation. After the message template is created, you can use the `$LATEST` qualifier to reference the created message template.
      parameters:
      - name: knowledgeBaseId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  $ref: '#/components/schemas/Name'
                content:
                  $ref: '#/components/schemas/MessageTemplateContentProvider'
                description:
                  $ref: '#/components/schemas/Description'
                channelSubtype:
                  $ref: '#/components/schemas/ChannelSubtype'
                language:
                  $ref: '#/components/schemas/LanguageCode'
                defaultAttributes:
                  $ref: '#/components/schemas/MessageTemplateAttributes'
                groupingConfiguration:
                  $ref: '#/components/schemas/GroupingConfiguration'
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
                tags:
                  $ref: '#/components/schemas/Tags'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the resource. For example, if you're using a `Create` API (such as `CreateAssistant`) that accepts name, a conflicting resource (usually with the same name) is being created or mutated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            You've exceeded your service quota. To perform the requested action, remove some of the relevant resources, or use service quotas to request a service quota increase.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by a service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: ListMessageTemplates
      description: |-
        Lists all the available Amazon Q in Connect message templates for the specified knowledge base.
      parameters:
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: knowledgeBaseId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by a service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /knowledgeBases/{knowledgeBaseId}/messageTemplates/{messageTemplateId}/attachments:
    post:
      operationId: CreateMessageTemplateAttachment
      description: |-
        Uploads an attachment file to the specified Amazon Q in Connect message template. The name of the message template attachment has to be unique for each message template referenced by the `$LATEST` qualifier. The body of the attachment file should be encoded using base64 encoding. After the file is uploaded, you can use the pre-signed Amazon S3 URL returned in response to download the uploaded file.
      parameters:
      - name: knowledgeBaseId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      - name: messageTemplateId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArnOrEitherWithQualifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                contentDisposition:
                  $ref: '#/components/schemas/ContentDisposition'
                name:
                  $ref: '#/components/schemas/AttachmentFileName'
                body:
                  $ref: '#/components/schemas/NonEmptyUnlimitedString'
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the resource. For example, if you're using a `Create` API (such as `CreateAssistant`) that accepts name, a conflicting resource (usually with the same name) is being created or mutated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            You've exceeded your service quota. To perform the requested action, remove some of the relevant resources, or use service quotas to request a service quota increase.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by a service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /knowledgeBases/{knowledgeBaseId}/messageTemplates/{messageTemplateId}/versions:
    post:
      operationId: CreateMessageTemplateVersion
      description: |-
        Creates a new Amazon Q in Connect message template version from the current content and configuration of a message template. Versions are immutable and monotonically increasing. Once a version is created, you can reference a specific version of the message template by passing in `<message-template-id>:<versionNumber>` as the message template identifier. An error is displayed if the supplied `messageTemplateContentSha256` is different from the `messageTemplateContentSha256` of the message template with `$LATEST` qualifier. If multiple `CreateMessageTemplateVersion` requests are made while the message template remains the same, only the first invocation creates a new version and the succeeding requests will return the same response as the first invocation.
      parameters:
      - name: knowledgeBaseId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      - name: messageTemplateId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArnOrEitherWithQualifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                messageTemplateContentSha256:
                  $ref: '#/components/schemas/MessageTemplateContentSha256'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the resource. For example, if you're using a `Create` API (such as `CreateAssistant`) that accepts name, a conflicting resource (usually with the same name) is being created or mutated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            You've exceeded your service quota. To perform the requested action, remove some of the relevant resources, or use service quotas to request a service quota increase.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by a service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: ListMessageTemplateVersions
      description: |-
        Lists all the available versions for the specified Amazon Q in Connect message template.
      parameters:
      - name: knowledgeBaseId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      - name: messageTemplateId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArnOrEitherWithQualifier'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by a service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /knowledgeBases/{knowledgeBaseId}/quickResponses:
    post:
      operationId: CreateQuickResponse
      description: |-
        Creates an Amazon Q in Connect quick response.
      parameters:
      - name: knowledgeBaseId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  $ref: '#/components/schemas/QuickResponseName'
                content:
                  $ref: '#/components/schemas/QuickResponseDataProvider'
                contentType:
                  $ref: '#/components/schemas/QuickResponseType'
                groupingConfiguration:
                  $ref: '#/components/schemas/GroupingConfiguration'
                description:
                  $ref: '#/components/schemas/QuickResponseDescription'
                shortcutKey:
                  $ref: '#/components/schemas/ShortCutKey'
                isActive:
                  $ref: '#/components/schemas/Boolean'
                channels:
                  $ref: '#/components/schemas/Channels'
                language:
                  $ref: '#/components/schemas/LanguageCode'
                clientToken:
                  $ref: '#/components/schemas/NonEmptyString'
                tags:
                  $ref: '#/components/schemas/Tags'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the resource. For example, if you're using a `Create` API (such as `CreateAssistant`) that accepts name, a conflicting resource (usually with the same name) is being created or mutated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            You've exceeded your service quota. To perform the requested action, remove some of the relevant resources, or use service quotas to request a service quota increase.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by a service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: ListQuickResponses
      description: |-
        Lists information about quick response.
      parameters:
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NonEmptyString'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: knowledgeBaseId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by a service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /assistants/{assistantId}/sessions:
    post:
      operationId: CreateSession
      description: |-
        Creates a session. A session is a contextual container used for generating recommendations. Amazon Connect creates a new Amazon Q in Connect session for each contact on which Amazon Q in Connect is enabled.
      parameters:
      - name: assistantId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
                name:
                  $ref: '#/components/schemas/Name'
                description:
                  $ref: '#/components/schemas/Description'
                tags:
                  $ref: '#/components/schemas/Tags'
                tagFilter:
                  $ref: '#/components/schemas/TagFilter'
                aiAgentConfiguration:
                  $ref: '#/components/schemas/AIAgentConfigurationMap'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the resource. For example, if you're using a `Create` API (such as `CreateAssistant`) that accepts name, a conflicting resource (usually with the same name) is being created or mutated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by a service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /knowledgeBases/{knowledgeBaseId}/messageTemplates/{messageTemplateId}/deactivate:
    post:
      operationId: DeactivateMessageTemplate
      description: |-
        Deactivates a specific version of the Amazon Q in Connect message template . After the version is deactivated, you can no longer use the `$ACTIVE_VERSION` qualifier to reference the version in active status.
      parameters:
      - name: knowledgeBaseId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      - name: messageTemplateId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArnOrEitherWithQualifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                versionNumber:
                  $ref: '#/components/schemas/Version'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the resource. For example, if you're using a `Create` API (such as `CreateAssistant`) that accepts name, a conflicting resource (usually with the same name) is being created or mutated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by a service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /assistants/{assistantId}/aiagents/{aiAgentId}:
    delete:
      operationId: DeleteAIAgent
      description: |-
        Deletes an Amazon Q in Connect AI Agent.
      parameters:
      - name: assistantId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      - name: aiAgentId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArnOrEitherWithQualifier'
      responses:
        '204': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by a service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetAIAgent
      description: |-
        Gets an Amazon Q in Connect AI Agent.
      parameters:
      - name: assistantId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      - name: aiAgentId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArnOrEitherWithQualifier'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by a service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    post:
      operationId: UpdateAIAgent
      description: |-
        Updates an AI Agent.
      parameters:
      - name: assistantId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      - name: aiAgentId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArnOrEitherWithQualifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
                visibilityStatus:
                  $ref: '#/components/schemas/VisibilityStatus'
                configuration:
                  $ref: '#/components/schemas/AIAgentConfiguration'
                description:
                  $ref: '#/components/schemas/Description'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the resource. For example, if you're using a `Create` API (such as `CreateAssistant`) that accepts name, a conflicting resource (usually with the same name) is being created or mutated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by a service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /assistants/{assistantId}/aiagents/{aiAgentId}/versions/{versionNumber}:
    delete:
      operationId: DeleteAIAgentVersion
      description: |-
        Deletes an Amazon Q in Connect AI Agent Version.
      parameters:
      - name: assistantId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      - name: aiAgentId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArnOrEitherWithQualifier'
      - name: versionNumber
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Version'
      responses:
        '204': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the resource. For example, if you're using a `Create` API (such as `CreateAssistant`) that accepts name, a conflicting resource (usually with the same name) is being created or mutated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by a service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /assistants/{assistantId}/aiguardrails/{aiGuardrailId}:
    delete:
      operationId: DeleteAIGuardrail
      description: |-
        Deletes an Amazon Q in Connect AI Guardrail.
      parameters:
      - name: assistantId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      - name: aiGuardrailId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArnOrEitherWithQualifier'
      responses:
        '202': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the resource. For example, if you're using a `Create` API (such as `CreateAssistant`) that accepts name, a conflicting resource (usually with the same name) is being created or mutated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by a service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetAIGuardrail
      description: |-
        Gets the Amazon Q in Connect AI Guardrail.
      parameters:
      - name: assistantId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      - name: aiGuardrailId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArnOrEitherWithQualifier'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by a service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    post:
      operationId: UpdateAIGuardrail
      description: |-
        Updates an AI Guardrail.
      parameters:
      - name: assistantId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      - name: aiGuardrailId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArnOrEitherWithQualifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
                visibilityStatus:
                  $ref: '#/components/schemas/VisibilityStatus'
                blockedInputMessaging:
                  $ref: '#/components/schemas/AIGuardrailBlockedMessaging'
                blockedOutputsMessaging:
                  $ref: '#/components/schemas/AIGuardrailBlockedMessaging'
                description:
                  $ref: '#/components/schemas/AIGuardrailDescription'
                topicPolicyConfig:
                  $ref: '#/components/schemas/AIGuardrailTopicPolicyConfig'
                contentPolicyConfig:
                  $ref: '#/components/schemas/AIGuardrailContentPolicyConfig'
                wordPolicyConfig:
                  $ref: '#/components/schemas/AIGuardrailWordPolicyConfig'
                sensitiveInformationPolicyConfig:
                  $ref: '#/components/schemas/AIGuardrailSensitiveInformationPolicyConfig'
                contextualGroundingPolicyConfig:
                  $ref: '#/components/schemas/AIGuardrailContextualGroundingPolicyConfig'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the resource. For example, if you're using a `Create` API (such as `CreateAssistant`) that accepts name, a conflicting resource (usually with the same name) is being created or mutated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by a service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /assistants/{assistantId}/aiguardrails/{aiGuardrailId}/versions/{versionNumber}:
    delete:
      operationId: DeleteAIGuardrailVersion
      description: |-
        Delete and Amazon Q in Connect AI Guardrail version.
      parameters:
      - name: assistantId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      - name: aiGuardrailId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArnOrEitherWithQualifier'
      - name: versionNumber
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Version'
      responses:
        '202': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the resource. For example, if you're using a `Create` API (such as `CreateAssistant`) that accepts name, a conflicting resource (usually with the same name) is being created or mutated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by a service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /assistants/{assistantId}/aiprompts/{aiPromptId}:
    delete:
      operationId: DeleteAIPrompt
      description: |-
        Deletes an Amazon Q in Connect AI Prompt.
      parameters:
      - name: assistantId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      - name: aiPromptId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArnOrEitherWithQualifier'
      responses:
        '204': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by a service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetAIPrompt
      description: |-
        Gets and Amazon Q in Connect AI Prompt.
      parameters:
      - name: assistantId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      - name: aiPromptId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArnOrEitherWithQualifier'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by a service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    post:
      operationId: UpdateAIPrompt
      description: |-
        Updates an AI Prompt.
      parameters:
      - name: assistantId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      - name: aiPromptId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArnOrEitherWithQualifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
                visibilityStatus:
                  $ref: '#/components/schemas/VisibilityStatus'
                templateConfiguration:
                  $ref: '#/components/schemas/AIPromptTemplateConfiguration'
                description:
                  $ref: '#/components/schemas/Description'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the resource. For example, if you're using a `Create` API (such as `CreateAssistant`) that accepts name, a conflicting resource (usually with the same name) is being created or mutated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by a service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /assistants/{assistantId}/aiprompts/{aiPromptId}/versions/{versionNumber}:
    delete:
      operationId: DeleteAIPromptVersion
      description: |-
        Delete and Amazon Q in Connect AI Prompt version.
      parameters:
      - name: assistantId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      - name: aiPromptId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArnOrEitherWithQualifier'
      - name: versionNumber
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Version'
      responses:
        '204': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the resource. For example, if you're using a `Create` API (such as `CreateAssistant`) that accepts name, a conflicting resource (usually with the same name) is being created or mutated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by a service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /assistants/{assistantId}:
    delete:
      operationId: DeleteAssistant
      description: |-
        Deletes an assistant.
      parameters:
      - name: assistantId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      responses:
        '204': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by a service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetAssistant
      description: |-
        Retrieves information about an assistant.
      parameters:
      - name: assistantId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by a service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /assistants/{assistantId}/associations/{assistantAssociationId}:
    delete:
      operationId: DeleteAssistantAssociation
      description: |-
        Deletes an assistant association.
      parameters:
      - name: assistantAssociationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      - name: assistantId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      responses:
        '204': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by a service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetAssistantAssociation
      description: |-
        Retrieves information about an assistant association.
      parameters:
      - name: assistantAssociationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      - name: assistantId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by a service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /knowledgeBases/{knowledgeBaseId}/contents/{contentId}:
    delete:
      operationId: DeleteContent
      description: |-
        Deletes the content.
      parameters:
      - name: knowledgeBaseId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      - name: contentId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      responses:
        '204': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the resource. For example, if you're using a `Create` API (such as `CreateAssistant`) that accepts name, a conflicting resource (usually with the same name) is being created or mutated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by a service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetContent
      description: |-
        Retrieves content, including a pre-signed URL to download the content.
      parameters:
      - name: contentId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      - name: knowledgeBaseId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by a service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    post:
      operationId: UpdateContent
      description: |-
        Updates information about the content.
      parameters:
      - name: knowledgeBaseId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      - name: contentId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                revisionId:
                  $ref: '#/components/schemas/NonEmptyString'
                title:
                  $ref: '#/components/schemas/ContentTitle'
                overrideLinkOutUri:
                  $ref: '#/components/schemas/Uri'
                removeOverrideLinkOutUri:
                  $ref: '#/components/schemas/Boolean'
                metadata:
                  $ref: '#/components/schemas/ContentMetadata'
                uploadId:
                  $ref: '#/components/schemas/UploadId'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '412':
          description: |-
            The provided `revisionId` does not match, indicating the content has been modified since it was last read.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreconditionFailedException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by a service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /knowledgeBases/{knowledgeBaseId}/contents/{contentId}/associations/{contentAssociationId}:
    delete:
      operationId: DeleteContentAssociation
      description: |-
        Deletes the content association.

        For more information about content associations--what they are and when they are used--see [Integrate Amazon Q in Connect with step-by-step guides](https://docs.aws.amazon.com/connect/latest/adminguide/integrate-q-with-guides.html) in the _Amazon Connect Administrator Guide_.
      parameters:
      - name: knowledgeBaseId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      - name: contentId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      - name: contentAssociationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      responses:
        '204': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by a service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetContentAssociation
      description: |-
        Returns the content association.

        For more information about content associations--what they are and when they are used--see [Integrate Amazon Q in Connect with step-by-step guides](https://docs.aws.amazon.com/connect/latest/adminguide/integrate-q-with-guides.html) in the _Amazon Connect Administrator Guide_.
      parameters:
      - name: knowledgeBaseId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      - name: contentId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      - name: contentAssociationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by a service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /knowledgeBases/{knowledgeBaseId}/importJobs/{importJobId}:
    delete:
      operationId: DeleteImportJob
      description: |-
        Deletes the quick response import job.
      parameters:
      - name: knowledgeBaseId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      - name: importJobId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Uuid'
      responses:
        '204': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the resource. For example, if you're using a `Create` API (such as `CreateAssistant`) that accepts name, a conflicting resource (usually with the same name) is being created or mutated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by a service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetImportJob
      description: |-
        Retrieves the started import job.
      parameters:
      - name: importJobId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Uuid'
      - name: knowledgeBaseId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by a service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /knowledgeBases/{knowledgeBaseId}:
    delete:
      operationId: DeleteKnowledgeBase
      description: |-
        Deletes the knowledge base.

        When you use this API to delete an external knowledge base such as Salesforce or ServiceNow, you must also delete the [Amazon AppIntegrations](https://docs.aws.amazon.com/appintegrations/latest/APIReference/Welcome.html) DataIntegration. This is because you can't reuse the DataIntegration after it's been associated with an external knowledge base. However, you can delete and recreate it. See [DeleteDataIntegration](https://docs.aws.amazon.com/appintegrations/latest/APIReference/API_DeleteDataIntegration.html) and [CreateDataIntegration](https://docs.aws.amazon.com/appintegrations/latest/APIReference/API_CreateDataIntegration.html) in the _Amazon AppIntegrations API Reference_.
      parameters:
      - name: knowledgeBaseId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      responses:
        '204': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the resource. For example, if you're using a `Create` API (such as `CreateAssistant`) that accepts name, a conflicting resource (usually with the same name) is being created or mutated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by a service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetKnowledgeBase
      description: |-
        Retrieves information about the knowledge base.
      parameters:
      - name: knowledgeBaseId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by a service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /knowledgeBases/{knowledgeBaseId}/messageTemplates/{messageTemplateId}:
    delete:
      operationId: DeleteMessageTemplate
      description: |-
        Deletes an Amazon Q in Connect message template entirely or a specific version of the message template if version is supplied in the request. You can provide the message template identifier as `<message-template-id>:<versionNumber>` to delete a specific version of the message template. If it is not supplied, the message template and all available versions will be deleted.
      parameters:
      - name: knowledgeBaseId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      - name: messageTemplateId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArnOrEitherWithQualifier'
      responses:
        '204': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the resource. For example, if you're using a `Create` API (such as `CreateAssistant`) that accepts name, a conflicting resource (usually with the same name) is being created or mutated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by a service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetMessageTemplate
      description: |-
        Retrieves the Amazon Q in Connect message template. The message template identifier can contain an optional qualifier, for example, `<message-template-id>:<qualifier>`, which is either an actual version number or an Amazon Q Connect managed qualifier `$ACTIVE_VERSION` | `$LATEST`. If it is not supplied, then `$LATEST` is assumed implicitly.
      parameters:
      - name: messageTemplateId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArnOrEitherWithQualifier'
      - name: knowledgeBaseId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by a service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    post:
      operationId: UpdateMessageTemplate
      description: |-
        Updates the Amazon Q in Connect message template. Partial update is supported. If any field is not supplied, it will remain unchanged for the message template that is referenced by the `$LATEST` qualifier. Any modification will only apply to the message template that is referenced by the `$LATEST` qualifier. The fields for all available versions will remain unchanged.
      parameters:
      - name: knowledgeBaseId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      - name: messageTemplateId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArnOrEitherWithQualifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  $ref: '#/components/schemas/MessageTemplateContentProvider'
                language:
                  $ref: '#/components/schemas/LanguageCode'
                defaultAttributes:
                  $ref: '#/components/schemas/MessageTemplateAttributes'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the resource. For example, if you're using a `Create` API (such as `CreateAssistant`) that accepts name, a conflicting resource (usually with the same name) is being created or mutated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by a service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /knowledgeBases/{knowledgeBaseId}/messageTemplates/{messageTemplateId}/attachments/{attachmentId}:
    delete:
      operationId: DeleteMessageTemplateAttachment
      description: |-
        Deletes the attachment file from the Amazon Q in Connect message template that is referenced by `$LATEST` qualifier. Attachments on available message template versions will remain unchanged.
      parameters:
      - name: knowledgeBaseId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      - name: messageTemplateId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArnOrEitherWithQualifier'
      - name: attachmentId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Uuid'
      responses:
        '204': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the resource. For example, if you're using a `Create` API (such as `CreateAssistant`) that accepts name, a conflicting resource (usually with the same name) is being created or mutated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by a service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /knowledgeBases/{knowledgeBaseId}/quickResponses/{quickResponseId}:
    delete:
      operationId: DeleteQuickResponse
      description: |-
        Deletes a quick response.
      parameters:
      - name: knowledgeBaseId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      - name: quickResponseId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      responses:
        '204': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by a service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetQuickResponse
      description: |-
        Retrieves the quick response.
      parameters:
      - name: quickResponseId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      - name: knowledgeBaseId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by a service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    post:
      operationId: UpdateQuickResponse
      description: |-
        Updates an existing Amazon Q in Connect quick response.
      parameters:
      - name: knowledgeBaseId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      - name: quickResponseId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  $ref: '#/components/schemas/QuickResponseName'
                content:
                  $ref: '#/components/schemas/QuickResponseDataProvider'
                contentType:
                  $ref: '#/components/schemas/QuickResponseType'
                groupingConfiguration:
                  $ref: '#/components/schemas/GroupingConfiguration'
                removeGroupingConfiguration:
                  $ref: '#/components/schemas/Boolean'
                description:
                  $ref: '#/components/schemas/QuickResponseDescription'
                removeDescription:
                  $ref: '#/components/schemas/Boolean'
                shortcutKey:
                  $ref: '#/components/schemas/ShortCutKey'
                removeShortcutKey:
                  $ref: '#/components/schemas/Boolean'
                isActive:
                  $ref: '#/components/schemas/Boolean'
                channels:
                  $ref: '#/components/schemas/Channels'
                language:
                  $ref: '#/components/schemas/LanguageCode'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the resource. For example, if you're using a `Create` API (such as `CreateAssistant`) that accepts name, a conflicting resource (usually with the same name) is being created or mutated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '412':
          description: |-
            The provided `revisionId` does not match, indicating the content has been modified since it was last read.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreconditionFailedException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by a service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /knowledgeBases/{knowledgeBaseId}/contents/{contentId}/summary:
    get:
      operationId: GetContentSummary
      description: |-
        Retrieves summary information about the content.
      parameters:
      - name: contentId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      - name: knowledgeBaseId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by a service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /assistants/{assistantId}/sessions/{sessionId}/messages/next:
    get:
      operationId: GetNextMessage
      description: |-
        Retrieves next message on an Amazon Q in Connect session.
      parameters:
      - name: assistantId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      - name: sessionId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      - name: nextMessageToken
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by a service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /assistants/{assistantId}/sessions/{sessionId}/recommendations:
    get:
      operationId: GetRecommendations
      description: |-
        This API will be discontinued starting June 1, 2024. To receive generative responses after March 1, 2024, you will need to create a new Assistant in the Amazon Connect console and integrate the Amazon Q in Connect JavaScript library (amazon-q-connectjs) into your applications.

        Retrieves recommendations for the specified session. To avoid retrieving the same recommendations in subsequent calls, use [NotifyRecommendationsReceived](https://docs.aws.amazon.com/amazon-q-connect/latest/APIReference/API_NotifyRecommendationsReceived.html). This API supports long-polling behavior with the `waitTimeSeconds` parameter. Short poll is the default behavior and only returns recommendations already available. To perform a manual query against an assistant, use [QueryAssistant](https://docs.aws.amazon.com/amazon-q-connect/latest/APIReference/API_QueryAssistant.html).
      parameters:
      - name: assistantId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      - name: sessionId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: waitTimeSeconds
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/WaitTimeSeconds'
      - name: nextChunkToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by a service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /assistants/{assistantId}/sessions/{sessionId}:
    get:
      operationId: GetSession
      description: |-
        Retrieves information for a specified session.
      parameters:
      - name: assistantId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      - name: sessionId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by a service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    post:
      operationId: UpdateSession
      description: |-
        Updates a session. A session is a contextual container used for generating recommendations. Amazon Connect updates the existing Amazon Q in Connect session for each contact on which Amazon Q in Connect is enabled.
      parameters:
      - name: assistantId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      - name: sessionId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  $ref: '#/components/schemas/Description'
                tagFilter:
                  $ref: '#/components/schemas/TagFilter'
                aiAgentConfiguration:
                  $ref: '#/components/schemas/AIAgentConfigurationMap'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by a service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /knowledgeBases/{knowledgeBaseId}/importJobs:
    get:
      operationId: ListImportJobs
      description: |-
        Lists information about import jobs.
      parameters:
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NonEmptyString'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: knowledgeBaseId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by a service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    post:
      operationId: StartImportJob
      description: |-
        Start an asynchronous job to import Amazon Q in Connect resources from an uploaded source file. Before calling this API, use [StartContentUpload](https://docs.aws.amazon.com/wisdom/latest/APIReference/API_StartContentUpload.html) to upload an asset that contains the resource data.

          * For importing Amazon Q in Connect quick responses, you need to upload a csv file including the quick responses. For information about how to format the csv file for importing quick responses, see [Import quick responses](https://docs.aws.amazon.com/console/connect/quick-responses/add-data).
      parameters:
      - name: knowledgeBaseId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                importJobType:
                  $ref: '#/components/schemas/ImportJobType'
                uploadId:
                  $ref: '#/components/schemas/UploadId'
                clientToken:
                  $ref: '#/components/schemas/NonEmptyString'
                metadata:
                  $ref: '#/components/schemas/ContentMetadata'
                externalSourceConfiguration:
                  $ref: '#/components/schemas/ExternalSourceConfiguration'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the resource. For example, if you're using a `Create` API (such as `CreateAssistant`) that accepts name, a conflicting resource (usually with the same name) is being created or mutated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            You've exceeded your service quota. To perform the requested action, remove some of the relevant resources, or use service quotas to request a service quota increase.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by a service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /assistants/{assistantId}/sessions/{sessionId}/messages:
    get:
      operationId: ListMessages
      description: |-
        Lists messages on an Amazon Q in Connect session.
      parameters:
      - name: assistantId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      - name: sessionId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by a service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /tags/{resourceArn}:
    get:
      operationId: ListTagsForResource
      description: |-
        Lists the tags for the specified resource.
      parameters:
      - name: resourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      responses:
        '200': {}
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
    post:
      operationId: TagResource
      description: |-
        Adds the specified tags to the specified resource.
      parameters:
      - name: resourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tags:
                  $ref: '#/components/schemas/Tags'
      responses:
        '200': {}
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            Amazon Q in Connect throws this exception if you have too many tags in your tag set.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyTagsException'
    delete:
      operationId: UntagResource
      description: |-
        Removes the specified tags from the specified resource.
      parameters:
      - name: resourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      - name: tagKeys
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/TagKeyList'
      responses:
        '200': {}
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /assistants/{assistantId}/sessions/{sessionId}/recommendations/notify:
    post:
      operationId: NotifyRecommendationsReceived
      description: |-
        Removes the specified recommendations from the specified assistant's queue of newly available recommendations. You can use this API in conjunction with [GetRecommendations](https://docs.aws.amazon.com/amazon-q-connect/latest/APIReference/API_GetRecommendations.html) and a `waitTimeSeconds` input for long-polling behavior and avoiding duplicate recommendations.
      parameters:
      - name: assistantId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      - name: sessionId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                recommendationIds:
                  $ref: '#/components/schemas/RecommendationIdList'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by a service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /assistants/{assistantId}/feedback:
    put:
      operationId: PutFeedback
      description: |-
        Provides feedback against the specified assistant for the specified target. This API only supports generative targets.
      parameters:
      - name: assistantId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                targetId:
                  $ref: '#/components/schemas/Uuid'
                targetType:
                  $ref: '#/components/schemas/TargetType'
                contentFeedback:
                  $ref: '#/components/schemas/ContentFeedbackData'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by a service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /assistants/{assistantId}/query:
    post:
      operationId: QueryAssistant
      description: |-
        This API will be discontinued starting June 1, 2024. To receive generative responses after March 1, 2024, you will need to create a new Assistant in the Amazon Connect console and integrate the Amazon Q in Connect JavaScript library (amazon-q-connectjs) into your applications.

        Performs a manual search against the specified assistant. To retrieve recommendations for an assistant, use [GetRecommendations](https://docs.aws.amazon.com/amazon-q-connect/latest/APIReference/API_GetRecommendations.html).
      parameters:
      - name: assistantId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                queryText:
                  $ref: '#/components/schemas/QueryText'
                nextToken:
                  $ref: '#/components/schemas/NextToken'
                maxResults:
                  $ref: '#/components/schemas/MaxResults'
                sessionId:
                  $ref: '#/components/schemas/UuidOrArn'
                queryCondition:
                  $ref: '#/components/schemas/QueryConditionExpression'
                queryInputData:
                  $ref: '#/components/schemas/QueryInputData'
                overrideKnowledgeBaseSearchType:
                  $ref: '#/components/schemas/KnowledgeBaseSearchType'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '408':
          description: |-
            The request reached the service more than 15 minutes after the date stamp on the request or more than 15 minutes after the request expiration date (such as for pre-signed URLs), or the date stamp on the request is more than 15 minutes in the future.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestTimeoutException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by a service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /assistants/{assistantId}/aiagentConfiguration:
    delete:
      operationId: RemoveAssistantAIAgent
      description: |-
        Removes the AI Agent that is set for use by default on an Amazon Q in Connect Assistant.
      parameters:
      - name: assistantId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      - name: aiAgentType
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/AIAgentType'
      responses:
        '204': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by a service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    post:
      operationId: UpdateAssistantAIAgent
      description: |-
        Updates the AI Agent that is set for use by default on an Amazon Q in Connect Assistant.
      parameters:
      - name: assistantId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                aiAgentType:
                  $ref: '#/components/schemas/AIAgentType'
                configuration:
                  $ref: '#/components/schemas/AIAgentConfigurationData'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by a service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /knowledgeBases/{knowledgeBaseId}/templateUri:
    delete:
      operationId: RemoveKnowledgeBaseTemplateUri
      description: |-
        Removes a URI template from a knowledge base.
      parameters:
      - name: knowledgeBaseId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      responses:
        '204': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by a service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    post:
      operationId: UpdateKnowledgeBaseTemplateUri
      description: |-
        Updates the template URI of a knowledge base. This is only supported for knowledge bases of type EXTERNAL. Include a single variable in `${variable}` format; this interpolated by Amazon Q in Connect using ingested content. For example, if you ingest a Salesforce article, it has an `Id` value, and you can set the template URI to `https://myInstanceName.lightning.force.com/lightning/r/Knowledge__kav/*${Id}*/view`.
      parameters:
      - name: knowledgeBaseId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                templateUri:
                  $ref: '#/components/schemas/Uri'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by a service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /knowledgeBases/{knowledgeBaseId}/messageTemplates/{messageTemplateId}/render:
    post:
      operationId: RenderMessageTemplate
      description: |-
        Renders the Amazon Q in Connect message template based on the attribute values provided and generates the message content. For any variable present in the message template, if the attribute value is neither provided in the attribute request parameter nor the default attribute of the message template, the rendered message content will keep the variable placeholder as it is and return the attribute keys that are missing.
      parameters:
      - name: knowledgeBaseId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      - name: messageTemplateId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArnOrEitherWithQualifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                attributes:
                  $ref: '#/components/schemas/MessageTemplateAttributes'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by a service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /knowledgeBases/{knowledgeBaseId}/search:
    post:
      operationId: SearchContent
      description: |-
        Searches for content in a specified knowledge base. Can be used to get a specific content resource by its name.
      parameters:
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: knowledgeBaseId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                searchExpression:
                  $ref: '#/components/schemas/SearchExpression'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by a service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /knowledgeBases/{knowledgeBaseId}/search/messageTemplates:
    post:
      operationId: SearchMessageTemplates
      description: |-
        Searches for Amazon Q in Connect message templates in the specified knowledge base.
      parameters:
      - name: knowledgeBaseId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                searchExpression:
                  $ref: '#/components/schemas/MessageTemplateSearchExpression'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by a service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /knowledgeBases/{knowledgeBaseId}/search/quickResponses:
    post:
      operationId: SearchQuickResponses
      description: |-
        Searches existing Amazon Q in Connect quick responses in an Amazon Q in Connect knowledge base.
      parameters:
      - name: knowledgeBaseId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NonEmptyString'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                searchExpression:
                  $ref: '#/components/schemas/QuickResponseSearchExpression'
                attributes:
                  $ref: '#/components/schemas/ContactAttributes'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '408':
          description: |-
            The request reached the service more than 15 minutes after the date stamp on the request or more than 15 minutes after the request expiration date (such as for pre-signed URLs), or the date stamp on the request is more than 15 minutes in the future.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestTimeoutException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by a service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /assistants/{assistantId}/searchSessions:
    post:
      operationId: SearchSessions
      description: |-
        Searches for sessions.
      parameters:
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: assistantId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                searchExpression:
                  $ref: '#/components/schemas/SearchExpression'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by a service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /assistants/{assistantId}/sessions/{sessionId}/message:
    post:
      operationId: SendMessage
      description: |-
        Submits a message to the Amazon Q in Connect session.
      parameters:
      - name: assistantId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      - name: sessionId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  $ref: '#/components/schemas/MessageType'
                message:
                  $ref: '#/components/schemas/MessageInput'
                conversationContext:
                  $ref: '#/components/schemas/ConversationContext'
                configuration:
                  $ref: '#/components/schemas/MessageConfiguration'
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the resource. For example, if you're using a `Create` API (such as `CreateAssistant`) that accepts name, a conflicting resource (usually with the same name) is being created or mutated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '408':
          description: |-
            The request reached the service more than 15 minutes after the date stamp on the request or more than 15 minutes after the request expiration date (such as for pre-signed URLs), or the date stamp on the request is more than 15 minutes in the future.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestTimeoutException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by a service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /knowledgeBases/{knowledgeBaseId}/upload:
    post:
      operationId: StartContentUpload
      description: |-
        Get a URL to upload content to a knowledge base. To upload content, first make a PUT request to the returned URL with your file, making sure to include the required headers. Then use [CreateContent](https://docs.aws.amazon.com/amazon-q-connect/latest/APIReference/API_CreateContent.html) to finalize the content creation process or [UpdateContent](https://docs.aws.amazon.com/amazon-q-connect/latest/APIReference/API_UpdateContent.html) to modify an existing resource. You can only upload content to a knowledge base of type CUSTOM.
      parameters:
      - name: knowledgeBaseId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                contentType:
                  $ref: '#/components/schemas/ContentType'
                presignedUrlTimeToLive:
                  $ref: '#/components/schemas/TimeToLive'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by a service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /knowledgeBases/{knowledgeBaseId}/messageTemplates/{messageTemplateId}/metadata:
    post:
      operationId: UpdateMessageTemplateMetadata
      description: |-
        Updates the Amazon Q in Connect message template metadata. Note that any modification to the message template’s name, description and grouping configuration will applied to the message template pointed by the `$LATEST` qualifier and all available versions. Partial update is supported. If any field is not supplied, it will remain unchanged for the message template.
      parameters:
      - name: knowledgeBaseId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      - name: messageTemplateId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArnOrEitherWithQualifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  $ref: '#/components/schemas/Name'
                description:
                  $ref: '#/components/schemas/Description'
                groupingConfiguration:
                  $ref: '#/components/schemas/GroupingConfiguration'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the resource. For example, if you're using a `Create` API (such as `CreateAssistant`) that accepts name, a conflicting resource (usually with the same name) is being created or mutated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by a service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /assistants/{assistantId}/sessions/{sessionId}/data:
    patch:
      operationId: UpdateSessionData
      description: |-
        Updates the data stored on an Amazon Q in Connect Session.
      parameters:
      - name: assistantId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      - name: sessionId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UuidOrArn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                namespace:
                  $ref: '#/components/schemas/SessionDataNamespace'
                data:
                  $ref: '#/components/schemas/RuntimeSessionDataList'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '404':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by a service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
components:
  schemas:
    AIAgentAssociationConfigurationType:
      type: string
      enum:
      - KNOWLEDGE_BASE
    AIAgentConfiguration:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/ManualSearchAIAgentConfiguration'
        description: |-
          The configuration for AI Agents of type `MANUAL_SEARCH`.
      - allOf:
        - $ref: '#/components/schemas/AnswerRecommendationAIAgentConfiguration'
        description: |-
          The configuration for AI Agents of type `ANSWER_RECOMMENDATION`.
      - allOf:
        - $ref: '#/components/schemas/SelfServiceAIAgentConfiguration'
        description: |-
          The configuration for AI Agents of type SELF_SERVICE.
      description: |-
        A typed union that specifies the configuration based on the type of AI Agent.
    AIAgentConfigurationData:
      type: object
      properties:
        aiAgentId:
          allOf:
          - $ref: '#/components/schemas/UuidWithQualifier'
          description: The ID of the AI Agent to be configured.
      required:
      - aiAgentId
      description: A type that specifies the AI Agent ID configuration data when mapping
        an AI Agents to be used for an AI Agent type on a session or assistant.
    AIAgentConfigurationMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/AIAgentConfigurationData'
    AIAgentData:
      type: object
      properties:
        assistantId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The identifier of the Amazon Q in Connect assistant. Can be
            either the ID or the ARN. URLs cannot contain the ARN.
        assistantArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the Amazon Q in Connect assistant.
        aiAgentId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The identifier of the AI Agent.
        aiAgentArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the AI agent.
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the AI Agent.
        type:
          allOf:
          - $ref: '#/components/schemas/AIAgentType'
          description: The type of the AI Agent.
        configuration:
          allOf:
          - $ref: '#/components/schemas/AIAgentConfiguration'
          description: Configuration for the AI Agent.
        modifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time the AI Agent was last modified.
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: The description of the AI Agent.
        visibilityStatus:
          allOf:
          - $ref: '#/components/schemas/VisibilityStatus'
          description: The visibility status of the AI Agent.
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: The tags used to organize, track, or control access for this
            resource.
        origin:
          allOf:
          - $ref: '#/components/schemas/Origin'
          description: Specifies the origin of the AI Agent. `SYSTEM` for a default
            AI Agent created by Q in Connect or `CUSTOMER` for an AI Agent created
            by calling AI Agent creation APIs.
        status:
          allOf:
          - $ref: '#/components/schemas/Status'
          description: The status of the AI Agent.
      required:
      - assistantId
      - assistantArn
      - aiAgentId
      - aiAgentArn
      - name
      - type
      - configuration
      - visibilityStatus
      description: The data for the AI Agent.
    AIAgentSummary:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the AI Agent.
        assistantId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The identifier of the Amazon Q in Connect assistant. Can be
            either the ID or the ARN. URLs cannot contain the ARN.
        assistantArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the Amazon Q in Connect assistant.
        aiAgentId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The identifier of the AI Agent.
        type:
          allOf:
          - $ref: '#/components/schemas/AIAgentType'
          description: The type of the AI Agent.
        aiAgentArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the AI agent.
        modifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time the AI Agent was last modified.
        visibilityStatus:
          allOf:
          - $ref: '#/components/schemas/VisibilityStatus'
          description: The visibility status of the AI Agent.
        configuration:
          allOf:
          - $ref: '#/components/schemas/AIAgentConfiguration'
          description: The configuration for the AI Agent.
        origin:
          allOf:
          - $ref: '#/components/schemas/Origin'
          description: The origin of the AI Agent. `SYSTEM` for a default AI Agent
            created by Q in Connect or `CUSTOMER` for an AI Agent created by calling
            AI Agent creation APIs.
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: The description of the AI Agent.
        status:
          allOf:
          - $ref: '#/components/schemas/Status'
          description: The status of the AI Agent.
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: The tags used to organize, track, or control access for this
            resource.
      required:
      - name
      - assistantId
      - assistantArn
      - aiAgentId
      - type
      - aiAgentArn
      - visibilityStatus
      description: The summary of the AI Agent.
    AIAgentSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/AIAgentSummary'
    AIAgentType:
      type: string
      enum:
      - MANUAL_SEARCH
      - ANSWER_RECOMMENDATION
      - SELF_SERVICE
    AIAgentVersionSummariesList:
      type: array
      items:
        $ref: '#/components/schemas/AIAgentVersionSummary'
    AIAgentVersionSummary:
      type: object
      properties:
        aiAgentSummary:
          allOf:
          - $ref: '#/components/schemas/AIAgentSummary'
          description: The data for the summary of the AI Agent version.
        versionNumber:
          allOf:
          - $ref: '#/components/schemas/Version'
          description: The version number for this AI Agent version.
      description: The summary of the AI Agent version.
    AIGuardrailBlockedMessaging:
      type: string
      minLength: 1
      maxLength: 500
    AIGuardrailContentPolicyConfig:
      type: object
      properties:
        filtersConfig:
          allOf:
          - $ref: '#/components/schemas/GuardrailContentFiltersConfig'
          description: Contains the type of the content filter and how strongly it
            should apply to prompts and model responses.
      required:
      - filtersConfig
      description: Contains details about how to handle harmful content.
    AIGuardrailContextualGroundingPolicyConfig:
      type: object
      properties:
        filtersConfig:
          allOf:
          - $ref: '#/components/schemas/GuardrailContextualGroundingFiltersConfig'
          description: The filter configuration details for the AI Guardrails contextual
            grounding policy.
      required:
      - filtersConfig
      description: The policy configuration details for the AI Guardrail's contextual
        grounding policy.
    AIGuardrailData:
      type: object
      properties:
        assistantId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The identifier of the Amazon Q in Connect assistant. Can be
            either the ID or the ARN. URLs cannot contain the ARN.
        assistantArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the Amazon Q in Connect assistant.
        aiGuardrailArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the AI Guardrail.
        aiGuardrailId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The identifier of the Amazon Q in Connect AI Guardrail.
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the AI Guardrail.
        visibilityStatus:
          allOf:
          - $ref: '#/components/schemas/VisibilityStatus'
          description: The visibility status of the AI Guardrail.
        blockedInputMessaging:
          allOf:
          - $ref: '#/components/schemas/AIGuardrailBlockedMessaging'
          description: The message to return when the AI Guardrail blocks a prompt.
        blockedOutputsMessaging:
          allOf:
          - $ref: '#/components/schemas/AIGuardrailBlockedMessaging'
          description: The message to return when the AI Guardrail blocks a model
            response.
        description:
          allOf:
          - $ref: '#/components/schemas/AIGuardrailDescription'
          description: A description of the AI Guardrail.
        topicPolicyConfig:
          allOf:
          - $ref: '#/components/schemas/AIGuardrailTopicPolicyConfig'
          description: Contains details about topics that the AI Guardrail should
            identify and deny.
        contentPolicyConfig:
          allOf:
          - $ref: '#/components/schemas/AIGuardrailContentPolicyConfig'
          description: Contains details about how to handle harmful content.
        wordPolicyConfig:
          allOf:
          - $ref: '#/components/schemas/AIGuardrailWordPolicyConfig'
          description: Contains details about the word policy to configured for the
            AI Guardrail.
        sensitiveInformationPolicyConfig:
          allOf:
          - $ref: '#/components/schemas/AIGuardrailSensitiveInformationPolicyConfig'
          description: Contains details about PII entities and regular expressions
            to configure for the AI Guardrail.
        contextualGroundingPolicyConfig:
          allOf:
          - $ref: '#/components/schemas/AIGuardrailContextualGroundingPolicyConfig'
          description: The policy configuration details for the AI Guardrail's contextual
            grounding policy.
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: The tags used to organize, track, or control access for this
            resource.
        status:
          allOf:
          - $ref: '#/components/schemas/Status'
          description: The status of the AI Guardrail.
        modifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time the AI Guardrail was last modified.
      required:
      - assistantId
      - assistantArn
      - aiGuardrailArn
      - aiGuardrailId
      - name
      - visibilityStatus
      - blockedInputMessaging
      - blockedOutputsMessaging
      description: The data for the AI Guardrail
    AIGuardrailDescription:
      type: string
      minLength: 1
      maxLength: 200
    AIGuardrailSensitiveInformationPolicyConfig:
      type: object
      properties:
        piiEntitiesConfig:
          allOf:
          - $ref: '#/components/schemas/GuardrailPiiEntitiesConfig'
          description: A list of PII entities to configure to the AI Guardrail.
        regexesConfig:
          allOf:
          - $ref: '#/components/schemas/GuardrailRegexesConfig'
          description: A list of regular expressions to configure to the AI Guardrail.
      description: Contains details about PII entities and regular expressions to
        configure for the AI Guardrail.
    AIGuardrailSummariesList:
      type: array
      items:
        $ref: '#/components/schemas/AIGuardrailSummary'
    AIGuardrailSummary:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the AI Guardrail.
        assistantId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The identifier of the Amazon Q in Connect assistant. Can be
            either the ID or the ARN. URLs cannot contain the ARN.
        assistantArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the Amazon Q in Connect assistant.
        aiGuardrailId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The identifier of the Amazon Q in Connect AI Guardrail.
        aiGuardrailArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the AI Guardrail.
        modifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time the AI Guardrail was last modified.
        visibilityStatus:
          allOf:
          - $ref: '#/components/schemas/VisibilityStatus'
          description: The visibility status of the AI Guardrail.
        description:
          allOf:
          - $ref: '#/components/schemas/AIGuardrailDescription'
          description: A description of the AI Guardrail.
        status:
          allOf:
          - $ref: '#/components/schemas/Status'
          description: The status of the AI Guardrail.
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: The tags used to organize, track, or control access for this
            resource.
      required:
      - name
      - assistantId
      - assistantArn
      - aiGuardrailId
      - aiGuardrailArn
      - visibilityStatus
      description: The summary of the AI Guardrail.
    AIGuardrailTopicPolicyConfig:
      type: object
      properties:
        topicsConfig:
          allOf:
          - $ref: '#/components/schemas/GuardrailTopicsConfig'
          description: A list of policies related to topics that the AI Guardrail
            should deny.
      required:
      - topicsConfig
      description: Contains details about topics that the AI Guardrail should identify
        and deny.
    AIGuardrailVersionSummariesList:
      type: array
      items:
        $ref: '#/components/schemas/AIGuardrailVersionSummary'
    AIGuardrailVersionSummary:
      type: object
      properties:
        aiGuardrailSummary:
          allOf:
          - $ref: '#/components/schemas/AIGuardrailSummary'
          description: The data for the summary of the AI Guardrail version.
        versionNumber:
          allOf:
          - $ref: '#/components/schemas/Version'
          description: The version number for this AI Guardrail version.
      description: The summary of the AI Guardrail version.
    AIGuardrailWordPolicyConfig:
      type: object
      properties:
        wordsConfig:
          allOf:
          - $ref: '#/components/schemas/GuardrailWordsConfig'
          description: A list of words to configure for the AI Guardrail.
        managedWordListsConfig:
          allOf:
          - $ref: '#/components/schemas/GuardrailManagedWordListsConfig'
          description: A list of managed words to configure for the AI Guardrail.
      description: Contains details about the word policy to configured for the AI
        Guardrail.
    AIPromptAPIFormat:
      type: string
      enum:
      - ANTHROPIC_CLAUDE_MESSAGES
      - ANTHROPIC_CLAUDE_TEXT_COMPLETIONS
      - MESSAGES
      - TEXT_COMPLETIONS
    AIPromptData:
      type: object
      properties:
        assistantId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The identifier of the Amazon Q in Connect assistant. Can be
            either the ID or the ARN. URLs cannot contain the ARN.
        assistantArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the Amazon Q in Connect assistant.
        aiPromptId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The identifier of the Amazon Q in Connect AI prompt.
        aiPromptArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the AI Prompt.
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the AI Prompt
        type:
          allOf:
          - $ref: '#/components/schemas/AIPromptType'
          description: The type of this AI Prompt.
        templateType:
          allOf:
          - $ref: '#/components/schemas/AIPromptTemplateType'
          description: The type of the prompt template for this AI Prompt.
        modelId:
          allOf:
          - $ref: '#/components/schemas/AIPromptModelIdentifier'
          description: "The identifier of the model used for this AI Prompt. The following\
            \ model Ids are supported:\n\n  * `anthropic.claude-3-haiku--v1:0`\n\n\
            \  * `apac.amazon.nova-lite-v1:0`\n\n  * `apac.amazon.nova-micro-v1:0`\n\
            \n  * `apac.amazon.nova-pro-v1:0`\n\n  * `apac.anthropic.claude-3-5-sonnet--v2:0`\n\
            \n  * `apac.anthropic.claude-3-haiku-20240307-v1:0`\n\n  * `eu.amazon.nova-lite-v1:0`\n\
            \n  * `eu.amazon.nova-micro-v1:0`\n\n  * `eu.amazon.nova-pro-v1:0`\n\n\
            \  * `eu.anthropic.claude-3-7-sonnet-20250219-v1:0`\n\n  * `eu.anthropic.claude-3-haiku-20240307-v1:0`\n\
            \n  * `us.amazon.nova-lite-v1:0`\n\n  * `us.amazon.nova-micro-v1:0`\n\n\
            \  * `us.amazon.nova-pro-v1:0`\n\n  * `us.anthropic.claude-3-5-haiku-20241022-v1:0`\n\
            \n  * `us.anthropic.claude-3-7-sonnet-20250219-v1:0`\n\n  * `us.anthropic.claude-3-haiku-20240307-v1:0`"
        apiFormat:
          allOf:
          - $ref: '#/components/schemas/AIPromptAPIFormat'
          description: The API format used for this AI Prompt.
        templateConfiguration:
          allOf:
          - $ref: '#/components/schemas/AIPromptTemplateConfiguration'
          description: The configuration of the prompt template for this AI Prompt.
        modifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time the AI Prompt was last modified.
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: The description of the AI Prompt.
        visibilityStatus:
          allOf:
          - $ref: '#/components/schemas/VisibilityStatus'
          description: The visibility status of the AI Prompt.
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: The tags used to organize, track, or control access for this
            resource.
        origin:
          allOf:
          - $ref: '#/components/schemas/Origin'
          description: The origin of the AI Prompt. `SYSTEM` for a default AI Prompt
            created by Q in Connect or `CUSTOMER` for an AI Prompt created by calling
            AI Prompt creation APIs.
        status:
          allOf:
          - $ref: '#/components/schemas/Status'
          description: The status of the AI Prompt.
      required:
      - assistantId
      - assistantArn
      - aiPromptId
      - aiPromptArn
      - name
      - type
      - templateType
      - modelId
      - apiFormat
      - templateConfiguration
      - visibilityStatus
      description: The data for the AI Prompt
    AIPromptModelIdentifier:
      type: string
      minLength: 1
      maxLength: 2048
    AIPromptSummary:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the AI Prompt.
        assistantId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The identifier of the Amazon Q in Connect assistant. Can be
            either the ID or the ARN. URLs cannot contain the ARN.
        assistantArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the Amazon Q in Connect assistant.
        aiPromptId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The identifier of the Amazon Q in Connect AI prompt.
        type:
          allOf:
          - $ref: '#/components/schemas/AIPromptType'
          description: The type of this AI Prompt.
        aiPromptArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the AI Prompt.
        modifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time the AI Prompt was last modified.
        templateType:
          allOf:
          - $ref: '#/components/schemas/AIPromptTemplateType'
          description: The type of the prompt template for this AI Prompt.
        modelId:
          allOf:
          - $ref: '#/components/schemas/AIPromptModelIdentifier'
          description: 'The identifier of the model used for this AI Prompt. Model
            Ids supported are: `anthropic.claude-3-haiku-20240307-v1:0`.'
        apiFormat:
          allOf:
          - $ref: '#/components/schemas/AIPromptAPIFormat'
          description: The API format used for this AI Prompt.
        visibilityStatus:
          allOf:
          - $ref: '#/components/schemas/VisibilityStatus'
          description: The visibility status of the AI Prompt.
        origin:
          allOf:
          - $ref: '#/components/schemas/Origin'
          description: The origin of the AI Prompt. `SYSTEM` for a default AI Prompt
            created by Q in Connect or `CUSTOMER` for an AI Prompt created by calling
            AI Prompt creation APIs.
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: The description of the AI Prompt.
        status:
          allOf:
          - $ref: '#/components/schemas/Status'
          description: The status of the AI Prompt.
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: The tags used to organize, track, or control access for this
            resource.
      required:
      - name
      - assistantId
      - assistantArn
      - aiPromptId
      - type
      - aiPromptArn
      - templateType
      - modelId
      - apiFormat
      - visibilityStatus
      description: The summary of the AI Prompt.
    AIPromptSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/AIPromptSummary'
    AIPromptTemplateConfiguration:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/TextFullAIPromptEditTemplateConfiguration'
        description: |-
          The configuration for a prompt template that supports full textual prompt configuration using a YAML prompt.
      description: |-
        A typed union that specifies the configuration for a prompt template based on its type.
    AIPromptTemplateType:
      type: string
      enum:
      - TEXT
    AIPromptType:
      type: string
      enum:
      - ANSWER_GENERATION
      - INTENT_LABELING_GENERATION
      - QUERY_REFORMULATION
      - SELF_SERVICE_PRE_PROCESSING
      - SELF_SERVICE_ANSWER_GENERATION
    AIPromptVersionSummariesList:
      type: array
      items:
        $ref: '#/components/schemas/AIPromptVersionSummary'
    AIPromptVersionSummary:
      type: object
      properties:
        aiPromptSummary:
          allOf:
          - $ref: '#/components/schemas/AIPromptSummary'
          description: The date for the summary of the AI Prompt version.
        versionNumber:
          allOf:
          - $ref: '#/components/schemas/Version'
          description: The version number for this AI Prompt version.
      description: The summary of the AI Prompt version.
    AccessDeniedException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      description: You do not have sufficient access to perform this action.
    ActivateMessageTemplateRequest:
      type: object
      properties:
        knowledgeBaseId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the knowledge base. Can be either the ID
            or the ARN. URLs cannot contain the ARN.
        messageTemplateId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArnOrEitherWithQualifier'
          description: The identifier of the message template. Can be either the ID
            or the ARN. It cannot contain any qualifier.
        versionNumber:
          allOf:
          - $ref: '#/components/schemas/Version'
          description: The version number of the message template version to activate.
      required:
      - knowledgeBaseId
      - messageTemplateId
      - versionNumber
    ActivateMessageTemplateResponse:
      type: object
      properties:
        messageTemplateArn:
          allOf:
          - $ref: '#/components/schemas/ArnWithQualifier'
          description: The Amazon Resource Name (ARN) of the message template.
        messageTemplateId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The identifier of the message template.
        versionNumber:
          allOf:
          - $ref: '#/components/schemas/Version'
          description: The version number of the message template version that is
            activated.
      required:
      - messageTemplateArn
      - messageTemplateId
      - versionNumber
    AgentAttributes:
      type: object
      properties:
        firstName:
          allOf:
          - $ref: '#/components/schemas/MessageTemplateAttributeValue'
          description: The agent’s first name as entered in their Amazon Connect user
            account.
        lastName:
          allOf:
          - $ref: '#/components/schemas/MessageTemplateAttributeValue'
          description: The agent’s last name as entered in their Amazon Connect user
            account.
      description: Information about an agent.
    AmazonConnectGuideAssociationData:
      type: object
      properties:
        flowId:
          allOf:
          - $ref: '#/components/schemas/GenericArn'
          description: The Amazon Resource Name (ARN) of an Amazon Connect flow. Step-by-step
            guides are a type of flow.
      description: Content association data for a [step-by-step guide](https://docs.aws.amazon.com/connect/latest/adminguide/step-by-step-guided-experiences.html).
    AndConditions:
      type: array
      items:
        $ref: '#/components/schemas/TagCondition'
    AnswerRecommendationAIAgentConfiguration:
      type: object
      properties:
        intentLabelingGenerationAIPromptId:
          allOf:
          - $ref: '#/components/schemas/UuidWithQualifier'
          description: The AI Prompt identifier for the Intent Labeling prompt used
            by the `ANSWER_RECOMMENDATION` AI Agent.
        queryReformulationAIPromptId:
          allOf:
          - $ref: '#/components/schemas/UuidWithQualifier'
          description: The AI Prompt identifier for the Query Reformulation prompt
            used by the `ANSWER_RECOMMENDATION` AI Agent.
        answerGenerationAIPromptId:
          allOf:
          - $ref: '#/components/schemas/UuidWithQualifier'
          description: The AI Prompt identifier for the Answer Generation prompt used
            by the `ANSWER_RECOMMENDATION` AI Agent.
        answerGenerationAIGuardrailId:
          allOf:
          - $ref: '#/components/schemas/UuidWithQualifier'
          description: The AI Guardrail identifier for the Answer Generation Guardrail
            used by the `ANSWER_RECOMMENDATION` AI Agent.
        associationConfigurations:
          allOf:
          - $ref: '#/components/schemas/AssociationConfigurationList'
          description: The association configurations for overriding behavior on this
            AI Agent.
        locale:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: 'The locale to which specifies the language and region settings
            that determine the response language for [QueryAssistant](https://docs.aws.amazon.com/connect/latest/APIReference/API_amazon-q-connect_QueryAssistant.html).


            Changing this locale to anything other than `en_US`, `en_GB`, or `en_AU`
            will turn off recommendations triggered by contact transcripts for agent
            assistance, as this feature is not supported in multiple languages.'
      description: The configuration for the `ANSWER_RECOMMENDATION` AI Agent type.
    AppIntegrationsConfiguration:
      type: object
      properties:
        appIntegrationArn:
          allOf:
          - $ref: '#/components/schemas/GenericArn'
          description: "The Amazon Resource Name (ARN) of the AppIntegrations DataIntegration\
            \ to use for ingesting content.\n\n  * For [ Salesforce](https://developer.salesforce.com/docs/atlas.en-us.knowledge_dev.meta/knowledge_dev/sforce_api_objects_knowledge__kav.htm),\
            \ your AppIntegrations DataIntegration must have an ObjectConfiguration\
            \ if objectFields is not provided, including at least `Id`, `ArticleNumber`,\
            \ `VersionNumber`, `Title`, `PublishStatus`, and `IsDeleted` as source\
            \ fields. \n\n  * For [ ServiceNow](https://developer.servicenow.com/dev.do#!/reference/api/rome/rest/knowledge-management-api),\
            \ your AppIntegrations DataIntegration must have an ObjectConfiguration\
            \ if objectFields is not provided, including at least `number`, `short_description`,\
            \ `sys_mod_count`, `workflow_state`, and `active` as source fields. \n\
            \n  * For [ Zendesk](https://developer.zendesk.com/api-reference/help_center/help-center-api/articles/),\
            \ your AppIntegrations DataIntegration must have an ObjectConfiguration\
            \ if `objectFields` is not provided, including at least `id`, `title`,\
            \ `updated_at`, and `draft` as source fields. \n\n  * For [SharePoint](https://learn.microsoft.com/en-us/sharepoint/dev/sp-add-ins/sharepoint-net-server-csom-jsom-and-rest-api-index),\
            \ your AppIntegrations DataIntegration must have a FileConfiguration,\
            \ including only file extensions that are among `docx`, `pdf`, `html`,\
            \ `htm`, and `txt`. \n\n  * For [Amazon S3](http://aws.amazon.com/s3/),\
            \ the ObjectConfiguration and FileConfiguration of your AppIntegrations\
            \ DataIntegration must be null. The `SourceURI` of your DataIntegration\
            \ must use the following format: `s3://your_s3_bucket_name`.\n\nThe bucket\
            \ policy of the corresponding S3 bucket must allow the Amazon Web Services\
            \ principal `app-integrations.amazonaws.com` to perform `s3:ListBucket`,\
            \ `s3:GetObject`, and `s3:GetBucketLocation` against the bucket."
        objectFields:
          allOf:
          - $ref: '#/components/schemas/ObjectFieldsList'
          description: "The fields from the source that are made available to your\
            \ agents in Amazon Q in Connect. Optional if ObjectConfiguration is included\
            \ in the provided DataIntegration.\n\n  * For [ Salesforce](https://developer.salesforce.com/docs/atlas.en-us.knowledge_dev.meta/knowledge_dev/sforce_api_objects_knowledge__kav.htm),\
            \ you must include at least `Id`, `ArticleNumber`, `VersionNumber`, `Title`,\
            \ `PublishStatus`, and `IsDeleted`. \n\n  * For [ ServiceNow](https://developer.servicenow.com/dev.do#!/reference/api/rome/rest/knowledge-management-api),\
            \ you must include at least `number`, `short_description`, `sys_mod_count`,\
            \ `workflow_state`, and `active`. \n\n  * For [ Zendesk](https://developer.zendesk.com/api-reference/help_center/help-center-api/articles/),\
            \ you must include at least `id`, `title`, `updated_at`, and `draft`.\
            \ \n\nMake sure to include additional fields. These fields are indexed\
            \ and used to source recommendations."
      required:
      - appIntegrationArn
      description: Configuration information for Amazon AppIntegrations to automatically
        ingest content.
    Arn:
      type: string
      pattern: ^arn:[a-z-]*?:wisdom:[a-z0-9-]*?:[0-9]{12}:[a-z-]*?/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(?:/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}){0,2}$
    ArnWithQualifier:
      type: string
      pattern: ^arn:[a-z-]*?:wisdom:[a-z0-9-]*?:[0-9]{12}:[a-z-]*?/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(?:/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}){0,2}(:[A-Z0-9_$]+){0,1}$
    AssistantAssociationData:
      type: object
      properties:
        assistantAssociationId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The identifier of the assistant association.
        assistantAssociationArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the assistant association.
        assistantId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The identifier of the Amazon Q in Connect assistant.
        assistantArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the Amazon Q in Connect assistant.
        associationType:
          allOf:
          - $ref: '#/components/schemas/AssociationType'
          description: The type of association.
        associationData:
          allOf:
          - $ref: '#/components/schemas/AssistantAssociationOutputData'
          description: A union type that currently has a single argument, the knowledge
            base ID.
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: The tags used to organize, track, or control access for this
            resource.
      required:
      - assistantAssociationId
      - assistantAssociationArn
      - assistantId
      - assistantArn
      - associationType
      - associationData
      description: Information about the assistant association.
    AssistantAssociationInputData:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/Uuid'
        description: |-
          The identifier of the knowledge base. This should not be a QUICK_RESPONSES type knowledge base.
      description: |-
        The data that is input into Amazon Q in Connect as a result of the assistant association.
    AssistantAssociationOutputData:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/KnowledgeBaseAssociationData'
        description: |-
          The knowledge base where output data is sent.
      description: |-
        The data that is output as a result of the assistant association.
    AssistantAssociationSummary:
      type: object
      properties:
        assistantAssociationId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The identifier of the assistant association.
        assistantAssociationArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the assistant association.
        assistantId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The identifier of the Amazon Q in Connect assistant.
        assistantArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the Amazon Q in Connect assistant.
        associationType:
          allOf:
          - $ref: '#/components/schemas/AssociationType'
          description: The type of association.
        associationData:
          allOf:
          - $ref: '#/components/schemas/AssistantAssociationOutputData'
          description: The association data.
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: The tags used to organize, track, or control access for this
            resource.
      required:
      - assistantAssociationId
      - assistantAssociationArn
      - assistantId
      - assistantArn
      - associationType
      - associationData
      description: Summary information about the assistant association.
    AssistantAssociationSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/AssistantAssociationSummary'
    AssistantCapabilityConfiguration:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/AssistantCapabilityType'
          description: The type of Amazon Q in Connect assistant capability.
      description: The capability configuration for an Amazon Q in Connect assistant.
    AssistantCapabilityType:
      type: string
      enum:
      - V1
      - V2
    AssistantData:
      type: object
      properties:
        assistantId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The identifier of the Amazon Q in Connect assistant.
        assistantArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the Amazon Q in Connect assistant.
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name.
        type:
          allOf:
          - $ref: '#/components/schemas/AssistantType'
          description: The type of assistant.
        status:
          allOf:
          - $ref: '#/components/schemas/AssistantStatus'
          description: The status of the assistant.
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: The description.
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: The tags used to organize, track, or control access for this
            resource.
        serverSideEncryptionConfiguration:
          allOf:
          - $ref: '#/components/schemas/ServerSideEncryptionConfiguration'
          description: 'The configuration information for the customer managed key
            used for encryption.


            This KMS key must have a policy that allows `kms:CreateGrant`, `kms:DescribeKey`,
            `kms:Decrypt`, and `kms:GenerateDataKey*` permissions to the IAM identity
            using the key to invoke Amazon Q in Connect. To use Amazon Q in Connect
            with chat, the key policy must also allow `kms:Decrypt`, `kms:GenerateDataKey*`,
            and `kms:DescribeKey` permissions to the `connect.amazonaws.com` service
            principal.


            For more information about setting up a customer managed key for Amazon
            Q in Connect, see [Enable Amazon Q in Connect for your instance](https://docs.aws.amazon.com/connect/latest/adminguide/enable-q.html).'
        integrationConfiguration:
          allOf:
          - $ref: '#/components/schemas/AssistantIntegrationConfiguration'
          description: The configuration information for the Amazon Q in Connect assistant
            integration.
        capabilityConfiguration:
          allOf:
          - $ref: '#/components/schemas/AssistantCapabilityConfiguration'
          description: The configuration information for the Amazon Q in Connect assistant
            capability.
        aiAgentConfiguration:
          allOf:
          - $ref: '#/components/schemas/AIAgentConfigurationMap'
          description: The configuration of the AI Agents (mapped by AI Agent Type
            to AI Agent version) that is set on the Amazon Q in Connect Assistant.
      required:
      - assistantId
      - assistantArn
      - name
      - type
      - status
      description: The assistant data.
    AssistantIntegrationConfiguration:
      type: object
      properties:
        topicIntegrationArn:
          allOf:
          - $ref: '#/components/schemas/GenericArn'
          description: The Amazon Resource Name (ARN) of the integrated Amazon SNS
            topic used for streaming chat messages.
      description: The configuration information for the Amazon Q in Connect assistant
        integration.
    AssistantList:
      type: array
      items:
        $ref: '#/components/schemas/AssistantSummary'
    AssistantStatus:
      type: string
      enum:
      - CREATE_IN_PROGRESS
      - CREATE_FAILED
      - ACTIVE
      - DELETE_IN_PROGRESS
      - DELETE_FAILED
      - DELETED
    AssistantSummary:
      type: object
      properties:
        assistantId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The identifier of the Amazon Q in Connect assistant.
        assistantArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the Amazon Q in Connect assistant.
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the assistant.
        type:
          allOf:
          - $ref: '#/components/schemas/AssistantType'
          description: The type of the assistant.
        status:
          allOf:
          - $ref: '#/components/schemas/AssistantStatus'
          description: The status of the assistant.
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: The description of the assistant.
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: The tags used to organize, track, or control access for this
            resource.
        serverSideEncryptionConfiguration:
          allOf:
          - $ref: '#/components/schemas/ServerSideEncryptionConfiguration'
          description: 'The configuration information for the customer managed key
            used for encryption.


            This KMS key must have a policy that allows `kms:CreateGrant`, `kms:DescribeKey`,
            `kms:Decrypt`, and `kms:GenerateDataKey*` permissions to the IAM identity
            using the key to invoke Amazon Q in Connect. To use Amazon Q in Connect
            with chat, the key policy must also allow `kms:Decrypt`, `kms:GenerateDataKey*`,
            and `kms:DescribeKey` permissions to the `connect.amazonaws.com` service
            principal.


            For more information about setting up a customer managed key for Amazon
            Q in Connect, see [Enable Amazon Q in Connect for your instance](https://docs.aws.amazon.com/connect/latest/adminguide/enable-q.html).'
        integrationConfiguration:
          allOf:
          - $ref: '#/components/schemas/AssistantIntegrationConfiguration'
          description: The configuration information for the Amazon Q in Connect assistant
            integration.
        capabilityConfiguration:
          allOf:
          - $ref: '#/components/schemas/AssistantCapabilityConfiguration'
          description: The configuration information for the Amazon Q in Connect assistant
            capability.
        aiAgentConfiguration:
          allOf:
          - $ref: '#/components/schemas/AIAgentConfigurationMap'
          description: The configuration of the AI Agents (mapped by AI Agent Type
            to AI Agent version) that is set on the Amazon Q in Connect Assistant.
      required:
      - assistantId
      - assistantArn
      - name
      - type
      - status
      description: Summary information about the assistant.
    AssistantType:
      type: string
      enum:
      - AGENT
    AssociationConfiguration:
      type: object
      properties:
        associationId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The identifier of the association for this Association Configuration.
        associationType:
          allOf:
          - $ref: '#/components/schemas/AIAgentAssociationConfigurationType'
          description: The type of the association for this Association Configuration.
        associationConfigurationData:
          allOf:
          - $ref: '#/components/schemas/AssociationConfigurationData'
          description: The data of the configuration for an Amazon Q in Connect Assistant
            Association.
      description: The configuration for an Amazon Q in Connect Assistant Association.
    AssociationConfigurationData:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/KnowledgeBaseAssociationConfigurationData'
        description: |-
          The data of the configuration for a `KNOWLEDGE_BASE` type Amazon Q in Connect Assistant Association.
      description: |-
        A typed union of the data of the configuration for an Amazon Q in Connect Assistant Association.
    AssociationConfigurationList:
      type: array
      items:
        $ref: '#/components/schemas/AssociationConfiguration'
    AssociationType:
      type: string
      enum:
      - KNOWLEDGE_BASE
    AttachmentFileName:
      type: string
      pattern: ^[\p{L}\p{M}\p{N}_\s&@()+,;=\-]+\.[A-Za-z0-9]+$
      minLength: 1
      maxLength: 256
    BedrockFoundationModelConfigurationForParsing:
      type: object
      properties:
        modelArn:
          allOf:
          - $ref: '#/components/schemas/BedrockModelArnForParsing'
          description: The ARN of the foundation model.
        parsingPrompt:
          allOf:
          - $ref: '#/components/schemas/ParsingPrompt'
          description: Instructions for interpreting the contents of a document.
      required:
      - modelArn
      description: Settings for a foundation model used to parse documents for a data
        source.
    BedrockModelArnForParsing:
      type: string
      pattern: ^arn:aws(-[^:]+)?:bedrock:[a-z0-9-]{1,20}::foundation-model/anthropic.claude-3-haiku-20240307-v1:0$
      minLength: 1
      maxLength: 2048
    Channel:
      type: string
      minLength: 1
      maxLength: 10
    ChannelSubtype:
      type: string
      enum:
      - EMAIL
      - SMS
    Channels:
      type: array
      items:
        $ref: '#/components/schemas/Channel'
    ChunkingConfiguration:
      type: object
      properties:
        chunkingStrategy:
          allOf:
          - $ref: '#/components/schemas/ChunkingStrategy'
          description: Knowledge base can split your source data into chunks. A chunk
            refers to an excerpt from a data source that is returned when the knowledge
            base that it belongs to is queried. You have the following options for
            chunking your data. If you opt for `NONE`, then you may want to pre-process
            your files by splitting them up such that each file corresponds to a chunk.
        fixedSizeChunkingConfiguration:
          allOf:
          - $ref: '#/components/schemas/FixedSizeChunkingConfiguration'
          description: Configurations for when you choose fixed-size chunking. If
            you set the `chunkingStrategy` as `NONE`, exclude this field.
        hierarchicalChunkingConfiguration:
          allOf:
          - $ref: '#/components/schemas/HierarchicalChunkingConfiguration'
          description: Settings for hierarchical document chunking for a data source.
            Hierarchical chunking splits documents into layers of chunks where the
            first layer contains large chunks, and the second layer contains smaller
            chunks derived from the first layer.
        semanticChunkingConfiguration:
          allOf:
          - $ref: '#/components/schemas/SemanticChunkingConfiguration'
          description: Settings for semantic document chunking for a data source.
            Semantic chunking splits a document into smaller documents based on groups
            of similar content derived from the text with natural language processing.
      required:
      - chunkingStrategy
      description: Details about how to chunk the documents in the data source. A
        chunk refers to an excerpt from a data source that is returned when the knowledge
        base that it belongs to is queried.
    ChunkingStrategy:
      type: string
      enum:
      - FIXED_SIZE
      - NONE
      - HIERARCHICAL
      - SEMANTIC
    CitationSpan:
      type: object
      properties:
        beginOffsetInclusive:
          allOf:
          - $ref: '#/components/schemas/CitationSpanOffset'
          description: Where the text with a citation starts in the generated output.
        endOffsetExclusive:
          allOf:
          - $ref: '#/components/schemas/CitationSpanOffset'
          description: Where the text with a citation ends in the generated output.
      description: Contains information about where the text with a citation begins
        and ends in the generated output.
    CitationSpanOffset:
      type: integer
      default: 0
    ClientToken:
      type: string
      minLength: 1
      maxLength: 4096
    Configuration:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/ConnectConfiguration'
        description: |-
          The configuration information of the Amazon Connect data source.
      description: |-
        The configuration information of the external data source.
    ConflictException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      description: The request could not be processed because of conflict in the current
        state of the resource. For example, if you're using a `Create` API (such as
        `CreateAssistant`) that accepts name, a conflicting resource (usually with
        the same name) is being created or mutated.
    ConnectConfiguration:
      type: object
      properties:
        instanceId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The identifier of the Amazon Connect instance. You can find
            the instanceId in the ARN of the instance.
      description: The configuration information of the Amazon Connect data source.
    ContactAttributeKey:
      type: string
    ContactAttributeKeys:
      type: array
      items:
        $ref: '#/components/schemas/ContactAttributeKey'
      x-sensitive: true
    ContactAttributeValue:
      type: string
    ContactAttributes:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/ContactAttributeValue'
    ContentAssociationContents:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/AmazonConnectGuideAssociationData'
        description: |-
          The data of the step-by-step guide association.
      description: |-
        The contents of a content association.
    ContentAssociationData:
      type: object
      properties:
        knowledgeBaseId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The identifier of the knowledge base.
        knowledgeBaseArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the knowledge base.
        contentId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The identifier of the content.
        contentArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the content.
        contentAssociationId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The identifier of the content association. Can be either the
            ID or the ARN. URLs cannot contain the ARN.
        contentAssociationArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the content association.
        associationType:
          allOf:
          - $ref: '#/components/schemas/ContentAssociationType'
          description: The type of association.
        associationData:
          allOf:
          - $ref: '#/components/schemas/ContentAssociationContents'
          description: The content association.
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: The tags used to organize, track, or control access for this
            resource.
      required:
      - knowledgeBaseId
      - knowledgeBaseArn
      - contentId
      - contentArn
      - contentAssociationId
      - contentAssociationArn
      - associationType
      - associationData
      description: Information about the content association.
    ContentAssociationSummary:
      type: object
      properties:
        knowledgeBaseId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The identifier of the knowledge base.
        knowledgeBaseArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the knowledge base.
        contentId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The identifier of the content.
        contentArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the content.
        contentAssociationId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The identifier of the content association. Can be either the
            ID or the ARN. URLs cannot contain the ARN.
        contentAssociationArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the content association.
        associationType:
          allOf:
          - $ref: '#/components/schemas/ContentAssociationType'
          description: The type of association.
        associationData:
          allOf:
          - $ref: '#/components/schemas/ContentAssociationContents'
          description: The content association.
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: The tags used to organize, track, or control access for this
            resource.
      required:
      - knowledgeBaseId
      - knowledgeBaseArn
      - contentId
      - contentArn
      - contentAssociationId
      - contentAssociationArn
      - associationType
      - associationData
      description: Summary information about a content association.
    ContentAssociationSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/ContentAssociationSummary'
    ContentAssociationType:
      type: string
      enum:
      - AMAZON_CONNECT_GUIDE
    ContentData:
      type: object
      properties:
        contentArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the content.
        contentId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The identifier of the content.
        knowledgeBaseArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the knowledge base.
        knowledgeBaseId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The identifier of the knowledge base.
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the content.
        revisionId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The identifier of the content revision.
        title:
          allOf:
          - $ref: '#/components/schemas/ContentTitle'
          description: The title of the content.
        contentType:
          allOf:
          - $ref: '#/components/schemas/ContentType'
          description: The media type of the content.
        status:
          allOf:
          - $ref: '#/components/schemas/ContentStatus'
          description: The status of the content.
        metadata:
          allOf:
          - $ref: '#/components/schemas/ContentMetadata'
          description: A key/value map to store attributes without affecting tagging
            or recommendations. For example, when synchronizing data between an external
            system and Amazon Q in Connect, you can store an external version identifier
            as metadata to utilize for determining drift.
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: The tags used to organize, track, or control access for this
            resource.
        linkOutUri:
          allOf:
          - $ref: '#/components/schemas/Uri'
          description: The URI of the content.
        url:
          allOf:
          - $ref: '#/components/schemas/Url'
          description: The URL of the content.
        urlExpiry:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The expiration time of the URL as an epoch timestamp.
      required:
      - contentArn
      - contentId
      - knowledgeBaseArn
      - knowledgeBaseId
      - name
      - revisionId
      - title
      - contentType
      - status
      - metadata
      - url
      - urlExpiry
      description: Information about the content.
    ContentDataDetails:
      type: object
      properties:
        textData:
          allOf:
          - $ref: '#/components/schemas/TextData'
          description: Details about the content text data.
        rankingData:
          allOf:
          - $ref: '#/components/schemas/RankingData'
          description: Details about the content ranking data.
      required:
      - textData
      - rankingData
      description: Details about the content data.
    ContentDisposition:
      type: string
      enum:
      - ATTACHMENT
    ContentFeedbackData:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/GenerativeContentFeedbackData'
        description: |-
          Information about the feedback for a generative target type.
      description: |-
        Information about the feedback.
    ContentMetadata:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/NonEmptyString'
    ContentReference:
      type: object
      properties:
        knowledgeBaseArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the knowledge base.
        knowledgeBaseId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The identifier of the knowledge base. This should not be a
            QUICK_RESPONSES type knowledge base.
        contentArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the content.
        contentId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The identifier of the content.
        sourceURL:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The web URL of the source content.
        referenceType:
          allOf:
          - $ref: '#/components/schemas/ReferenceType'
          description: The type of reference content.
      description: Reference information about the content.
    ContentStatus:
      type: string
      enum:
      - CREATE_IN_PROGRESS
      - CREATE_FAILED
      - ACTIVE
      - DELETE_IN_PROGRESS
      - DELETE_FAILED
      - DELETED
      - UPDATE_FAILED
    ContentSummary:
      type: object
      properties:
        contentArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the content.
        contentId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The identifier of the content.
        knowledgeBaseArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the knowledge base.
        knowledgeBaseId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The identifier of the knowledge base. This should not be a
            QUICK_RESPONSES type knowledge base.
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the content.
        revisionId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The identifier of the revision of the content.
        title:
          allOf:
          - $ref: '#/components/schemas/ContentTitle'
          description: The title of the content.
        contentType:
          allOf:
          - $ref: '#/components/schemas/ContentType'
          description: The media type of the content.
        status:
          allOf:
          - $ref: '#/components/schemas/ContentStatus'
          description: The status of the content.
        metadata:
          allOf:
          - $ref: '#/components/schemas/ContentMetadata'
          description: A key/value map to store attributes without affecting tagging
            or recommendations. For example, when synchronizing data between an external
            system and Amazon Q in Connect, you can store an external version identifier
            as metadata to utilize for determining drift.
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: The tags used to organize, track, or control access for this
            resource.
      required:
      - contentArn
      - contentId
      - knowledgeBaseArn
      - knowledgeBaseId
      - name
      - revisionId
      - title
      - contentType
      - status
      - metadata
      description: Summary information about the content.
    ContentSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/ContentSummary'
    ContentTitle:
      type: string
      minLength: 1
      maxLength: 255
    ContentType:
      type: string
      pattern: ^(text/(plain|html|csv))|(application/(pdf|vnd\.openxmlformats-officedocument\.wordprocessingml\.document))|(application/x\.wisdom-json;source=(salesforce|servicenow|zendesk))$
    ConversationContext:
      type: object
      properties:
        selfServiceConversationHistory:
          allOf:
          - $ref: '#/components/schemas/SelfServiceConversationHistoryList'
          description: The self service conversation history before the Amazon Q in
            Connect session.
      required:
      - selfServiceConversationHistory
      description: The conversation context to include in SendMessage.
    ConversationState:
      type: object
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/ConversationStatus'
          description: The status of the conversation state.
        reason:
          allOf:
          - $ref: '#/components/schemas/ConversationStatusReason'
          description: The reason of the conversation state.
      required:
      - status
      description: The conversation state associated to a message.
    ConversationStatus:
      type: string
      enum:
      - CLOSED
      - READY
      - PROCESSING
    ConversationStatusReason:
      type: string
      enum:
      - SUCCESS
      - FAILED
      - REJECTED
    CreateAIAgentRequest:
      type: object
      properties:
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. If not provided, the Amazon Web Services
            SDK populates this field. For more information about idempotency, see
            [Making retries safe with idempotent APIs](http://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/)..
        assistantId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the Amazon Q in Connect assistant. Can be
            either the ID or the ARN. URLs cannot contain the ARN.
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the AI Agent.
        type:
          allOf:
          - $ref: '#/components/schemas/AIAgentType'
          description: The type of the AI Agent.
        configuration:
          allOf:
          - $ref: '#/components/schemas/AIAgentConfiguration'
          description: The configuration of the AI Agent.
        visibilityStatus:
          allOf:
          - $ref: '#/components/schemas/VisibilityStatus'
          description: The visibility status of the AI Agent.
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: The tags used to organize, track, or control access for this
            resource.
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: The description of the AI Agent.
      required:
      - assistantId
      - name
      - type
      - configuration
      - visibilityStatus
    CreateAIAgentResponse:
      type: object
      properties:
        aiAgent:
          allOf:
          - $ref: '#/components/schemas/AIAgentData'
          description: The data of the created AI Agent.
    CreateAIAgentVersionRequest:
      type: object
      properties:
        assistantId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the Amazon Q in Connect assistant. Can be
            either the ID or the ARN. URLs cannot contain the ARN.
        aiAgentId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArnOrEitherWithQualifier'
          description: The identifier of the Amazon Q in Connect AI Agent.
        modifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The modification time of the AI Agent should be tracked for
            version creation. This field should be specified to avoid version creation
            when simultaneous update to the underlying AI Agent are possible. The
            value should be the modifiedTime returned from the request to create or
            update an AI Agent so that version creation can fail if an update to the
            AI Agent post the specified modification time has been made.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. If not provided, the Amazon Web Services
            SDK populates this field. For more information about idempotency, see
            [Making retries safe with idempotent APIs](http://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/)..
      required:
      - assistantId
      - aiAgentId
    CreateAIAgentVersionResponse:
      type: object
      properties:
        aiAgent:
          allOf:
          - $ref: '#/components/schemas/AIAgentData'
          description: The data of the AI Agent version.
        versionNumber:
          allOf:
          - $ref: '#/components/schemas/Version'
          description: The version number of the AI Agent version.
    CreateAIGuardrailRequest:
      type: object
      properties:
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. If not provided, the Amazon Web Services
            SDK populates this field. For more information about idempotency, see
            [Making retries safe with idempotent APIs](http://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/)..
        assistantId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the Amazon Q in Connect assistant. Can be
            either the ID or the ARN. URLs cannot contain the ARN.
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the AI Guardrail.
        blockedInputMessaging:
          allOf:
          - $ref: '#/components/schemas/AIGuardrailBlockedMessaging'
          description: The message to return when the AI Guardrail blocks a prompt.
        blockedOutputsMessaging:
          allOf:
          - $ref: '#/components/schemas/AIGuardrailBlockedMessaging'
          description: The message to return when the AI Guardrail blocks a model
            response.
        visibilityStatus:
          allOf:
          - $ref: '#/components/schemas/VisibilityStatus'
          description: The visibility status of the AI Guardrail.
        description:
          allOf:
          - $ref: '#/components/schemas/AIGuardrailDescription'
          description: A description of the AI Guardrail.
        topicPolicyConfig:
          allOf:
          - $ref: '#/components/schemas/AIGuardrailTopicPolicyConfig'
          description: The topic policies to configure for the AI Guardrail.
        contentPolicyConfig:
          allOf:
          - $ref: '#/components/schemas/AIGuardrailContentPolicyConfig'
          description: The content filter policies to configure for the AI Guardrail.
        wordPolicyConfig:
          allOf:
          - $ref: '#/components/schemas/AIGuardrailWordPolicyConfig'
          description: The word policy you configure for the AI Guardrail.
        sensitiveInformationPolicyConfig:
          allOf:
          - $ref: '#/components/schemas/AIGuardrailSensitiveInformationPolicyConfig'
          description: The sensitive information policy to configure for the AI Guardrail.
        contextualGroundingPolicyConfig:
          allOf:
          - $ref: '#/components/schemas/AIGuardrailContextualGroundingPolicyConfig'
          description: The contextual grounding policy configuration used to create
            an AI Guardrail.
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: The tags used to organize, track, or control access for this
            resource.
      required:
      - assistantId
      - name
      - blockedInputMessaging
      - blockedOutputsMessaging
      - visibilityStatus
    CreateAIGuardrailResponse:
      type: object
      properties:
        aiGuardrail:
          allOf:
          - $ref: '#/components/schemas/AIGuardrailData'
          description: The data of the AI Guardrail.
    CreateAIGuardrailVersionRequest:
      type: object
      properties:
        assistantId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the Amazon Q in Connect assistant. Can be
            either the ID or the ARN. URLs cannot contain the ARN.
        aiGuardrailId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArnOrEitherWithQualifier'
          description: The identifier of the Amazon Q in Connect AI Guardrail.
        modifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time the AI Guardrail was last modified.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. If not provided, the Amazon Web Services
            SDK populates this field. For more information about idempotency, see
            [Making retries safe with idempotent APIs](http://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/)..
      required:
      - assistantId
      - aiGuardrailId
    CreateAIGuardrailVersionResponse:
      type: object
      properties:
        aiGuardrail:
          allOf:
          - $ref: '#/components/schemas/AIGuardrailData'
          description: The data of the AI Guardrail version.
        versionNumber:
          allOf:
          - $ref: '#/components/schemas/Version'
          description: The version number of the AI Guardrail version.
    CreateAIPromptRequest:
      type: object
      properties:
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. If not provided, the Amazon Web Services
            SDK populates this field. For more information about idempotency, see
            [Making retries safe with idempotent APIs](http://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/)..
        assistantId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the Amazon Q in Connect assistant. Can be
            either the ID or the ARN. URLs cannot contain the ARN.
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the AI Prompt.
        type:
          allOf:
          - $ref: '#/components/schemas/AIPromptType'
          description: The type of this AI Prompt.
        templateConfiguration:
          allOf:
          - $ref: '#/components/schemas/AIPromptTemplateConfiguration'
          description: The configuration of the prompt template for this AI Prompt.
        visibilityStatus:
          allOf:
          - $ref: '#/components/schemas/VisibilityStatus'
          description: The visibility status of the AI Prompt.
        templateType:
          allOf:
          - $ref: '#/components/schemas/AIPromptTemplateType'
          description: The type of the prompt template for this AI Prompt.
        modelId:
          allOf:
          - $ref: '#/components/schemas/AIPromptModelIdentifier'
          description: The identifier of the model used for this AI Prompt.
        apiFormat:
          allOf:
          - $ref: '#/components/schemas/AIPromptAPIFormat'
          description: 'The API Format of the AI Prompt.


            Recommended values: `MESSAGES | TEXT_COMPLETIONS`


            The values `ANTHROPIC_CLAUDE_MESSAGES | ANTHROPIC_CLAUDE_TEXT_COMPLETIONS`
            will be deprecated.'
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: The tags used to organize, track, or control access for this
            resource.
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: The description of the AI Prompt.
      required:
      - assistantId
      - name
      - type
      - templateConfiguration
      - visibilityStatus
      - templateType
      - modelId
      - apiFormat
    CreateAIPromptResponse:
      type: object
      properties:
        aiPrompt:
          allOf:
          - $ref: '#/components/schemas/AIPromptData'
          description: The data of the AI Prompt.
    CreateAIPromptVersionRequest:
      type: object
      properties:
        assistantId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the Amazon Q in Connect assistant. Can be
            either the ID or the ARN. URLs cannot contain the ARN.
        aiPromptId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArnOrEitherWithQualifier'
          description: The identifier of the Amazon Q in Connect AI prompt.
        modifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time the AI Prompt was last modified.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. If not provided, the Amazon Web Services
            SDK populates this field. For more information about idempotency, see
            [Making retries safe with idempotent APIs](http://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/)..
      required:
      - assistantId
      - aiPromptId
    CreateAIPromptVersionResponse:
      type: object
      properties:
        aiPrompt:
          allOf:
          - $ref: '#/components/schemas/AIPromptData'
          description: The data of the AI Prompt version.
        versionNumber:
          allOf:
          - $ref: '#/components/schemas/Version'
          description: The version number of the AI Prompt version.
    CreateAssistantAssociationRequest:
      type: object
      properties:
        assistantId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the Amazon Q in Connect assistant. Can be
            either the ID or the ARN. URLs cannot contain the ARN.
        associationType:
          allOf:
          - $ref: '#/components/schemas/AssociationType'
          description: The type of association.
        association:
          allOf:
          - $ref: '#/components/schemas/AssistantAssociationInputData'
          description: The identifier of the associated resource.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. If not provided, the Amazon Web Services
            SDK populates this field. For more information about idempotency, see
            [Making retries safe with idempotent APIs](http://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/).
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: The tags used to organize, track, or control access for this
            resource.
      required:
      - assistantId
      - associationType
      - association
    CreateAssistantAssociationResponse:
      type: object
      properties:
        assistantAssociation:
          allOf:
          - $ref: '#/components/schemas/AssistantAssociationData'
          description: The assistant association.
    CreateAssistantRequest:
      type: object
      properties:
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. If not provided, the Amazon Web Services
            SDK populates this field. For more information about idempotency, see
            [Making retries safe with idempotent APIs](http://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/).
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the assistant.
        type:
          allOf:
          - $ref: '#/components/schemas/AssistantType'
          description: The type of assistant.
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: The description of the assistant.
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: The tags used to organize, track, or control access for this
            resource.
        serverSideEncryptionConfiguration:
          allOf:
          - $ref: '#/components/schemas/ServerSideEncryptionConfiguration'
          description: 'The configuration information for the customer managed key
            used for encryption.


            The customer managed key must have a policy that allows `kms:CreateGrant`,
            ` kms:DescribeKey`, `kms:Decrypt`, and `kms:GenerateDataKey*` permissions
            to the IAM identity using the key to invoke Amazon Q in Connect. To use
            Amazon Q in Connect with chat, the key policy must also allow `kms:Decrypt`,
            `kms:GenerateDataKey*`, and `kms:DescribeKey` permissions to the `connect.amazonaws.com`
            service principal.


            For more information about setting up a customer managed key for Amazon
            Q in Connect, see [Enable Amazon Q in Connect for your instance](https://docs.aws.amazon.com/connect/latest/adminguide/enable-q.html).'
      required:
      - name
      - type
    CreateAssistantResponse:
      type: object
      properties:
        assistant:
          allOf:
          - $ref: '#/components/schemas/AssistantData'
          description: Information about the assistant.
    CreateContentAssociationRequest:
      type: object
      properties:
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. If not provided, the Amazon Web Services
            SDK populates this field. For more information about idempotency, see
            [Making retries safe with idempotent APIs](http://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/).
        knowledgeBaseId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the knowledge base.
        contentId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the content.
        associationType:
          allOf:
          - $ref: '#/components/schemas/ContentAssociationType'
          description: The type of association.
        association:
          allOf:
          - $ref: '#/components/schemas/ContentAssociationContents'
          description: The identifier of the associated resource.
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: The tags used to organize, track, or control access for this
            resource.
      required:
      - knowledgeBaseId
      - contentId
      - associationType
      - association
    CreateContentAssociationResponse:
      type: object
      properties:
        contentAssociation:
          allOf:
          - $ref: '#/components/schemas/ContentAssociationData'
          description: The association between Amazon Q in Connect content and another
            resource.
    CreateContentRequest:
      type: object
      properties:
        knowledgeBaseId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the knowledge base. This should not be a
            QUICK_RESPONSES type knowledge base. Can be either the ID or the ARN.
            URLs cannot contain the ARN.
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the content. Each piece of content in a knowledge
            base must have a unique name. You can retrieve a piece of content using
            only its knowledge base and its name with the [SearchContent](https://docs.aws.amazon.com/amazon-q-connect/latest/APIReference/API_SearchContent.html)
            API.
        title:
          allOf:
          - $ref: '#/components/schemas/ContentTitle'
          description: The title of the content. If not set, the title is equal to
            the name.
        overrideLinkOutUri:
          allOf:
          - $ref: '#/components/schemas/Uri'
          description: The URI you want to use for the article. If the knowledge base
            has a templateUri, setting this argument overrides it for this piece of
            content.
        metadata:
          allOf:
          - $ref: '#/components/schemas/ContentMetadata'
          description: A key/value map to store attributes without affecting tagging
            or recommendations. For example, when synchronizing data between an external
            system and Amazon Q in Connect, you can store an external version identifier
            as metadata to utilize for determining drift.
        uploadId:
          allOf:
          - $ref: '#/components/schemas/UploadId'
          description: A pointer to the uploaded asset. This value is returned by
            [StartContentUpload](https://docs.aws.amazon.com/amazon-q-connect/latest/APIReference/API_StartContentUpload.html).
        clientToken:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. If not provided, the Amazon Web Services
            SDK populates this field. For more information about idempotency, see
            [Making retries safe with idempotent APIs](http://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/).
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: The tags used to organize, track, or control access for this
            resource.
      required:
      - knowledgeBaseId
      - name
      - uploadId
    CreateContentResponse:
      type: object
      properties:
        content:
          allOf:
          - $ref: '#/components/schemas/ContentData'
          description: The content.
    CreateKnowledgeBaseRequest:
      type: object
      properties:
        clientToken:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. If not provided, the Amazon Web Services
            SDK populates this field. For more information about idempotency, see
            [Making retries safe with idempotent APIs](http://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/).
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the knowledge base.
        knowledgeBaseType:
          allOf:
          - $ref: '#/components/schemas/KnowledgeBaseType'
          description: The type of knowledge base. Only CUSTOM knowledge bases allow
            you to upload your own content. EXTERNAL knowledge bases support integrations
            with third-party systems whose content is synchronized automatically.
        sourceConfiguration:
          allOf:
          - $ref: '#/components/schemas/SourceConfiguration'
          description: The source of the knowledge base content. Only set this argument
            for EXTERNAL or Managed knowledge bases.
        renderingConfiguration:
          allOf:
          - $ref: '#/components/schemas/RenderingConfiguration'
          description: Information about how to render the content.
        vectorIngestionConfiguration:
          allOf:
          - $ref: '#/components/schemas/VectorIngestionConfiguration'
          description: Contains details about how to ingest the documents in a data
            source.
        serverSideEncryptionConfiguration:
          allOf:
          - $ref: '#/components/schemas/ServerSideEncryptionConfiguration'
          description: 'The configuration information for the customer managed key
            used for encryption.


            This KMS key must have a policy that allows `kms:CreateGrant`, `kms:DescribeKey`,
            `kms:Decrypt`, and `kms:GenerateDataKey*` permissions to the IAM identity
            using the key to invoke Amazon Q in Connect.


            For more information about setting up a customer managed key for Amazon
            Q in Connect, see [Enable Amazon Q in Connect for your instance](https://docs.aws.amazon.com/connect/latest/adminguide/enable-q.html).'
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: The description.
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: The tags used to organize, track, or control access for this
            resource.
      required:
      - name
      - knowledgeBaseType
    CreateKnowledgeBaseResponse:
      type: object
      properties:
        knowledgeBase:
          allOf:
          - $ref: '#/components/schemas/KnowledgeBaseData'
          description: The knowledge base.
    CreateMessageTemplateAttachmentRequest:
      type: object
      properties:
        knowledgeBaseId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the knowledge base. Can be either the ID
            or the ARN. URLs cannot contain the ARN.
        messageTemplateId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArnOrEitherWithQualifier'
          description: The identifier of the message template. Can be either the ID
            or the ARN. It cannot contain any qualifier.
        contentDisposition:
          allOf:
          - $ref: '#/components/schemas/ContentDisposition'
          description: The presentation information for the attachment file.
        name:
          allOf:
          - $ref: '#/components/schemas/AttachmentFileName'
          description: The name of the attachment file being uploaded. The name should
            include the file extension.
        body:
          allOf:
          - $ref: '#/components/schemas/NonEmptyUnlimitedString'
          description: The body of the attachment file being uploaded. It should be
            encoded using base64 encoding.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. If not provided, the Amazon Web Services
            SDK populates this field. For more information about idempotency, see
            [Making retries safe with idempotent APIs](http://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/).
      required:
      - knowledgeBaseId
      - messageTemplateId
      - contentDisposition
      - name
      - body
    CreateMessageTemplateAttachmentResponse:
      type: object
      properties:
        attachment:
          allOf:
          - $ref: '#/components/schemas/MessageTemplateAttachment'
          description: The message template attachment.
    CreateMessageTemplateRequest:
      type: object
      properties:
        knowledgeBaseId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the knowledge base. Can be either the ID
            or the ARN. URLs cannot contain the ARN.
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the message template.
        content:
          allOf:
          - $ref: '#/components/schemas/MessageTemplateContentProvider'
          description: The content of the message template.
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: The description of the message template.
        channelSubtype:
          allOf:
          - $ref: '#/components/schemas/ChannelSubtype'
          description: The channel subtype this message template applies to.
        language:
          allOf:
          - $ref: '#/components/schemas/LanguageCode'
          description: The language code value for the language in which the quick
            response is written. The supported language codes include `de_DE`, `en_US`,
            `es_ES`, `fr_FR`, `id_ID`, `it_IT`, `ja_JP`, `ko_KR`, `pt_BR`, `zh_CN`,
            `zh_TW`
        defaultAttributes:
          allOf:
          - $ref: '#/components/schemas/MessageTemplateAttributes'
          description: An object that specifies the default values to use for variables
            in the message template. This object contains different categories of
            key-value pairs. Each key defines a variable or placeholder in the message
            template. The corresponding value defines the default value for that variable.
        groupingConfiguration:
          $ref: '#/components/schemas/GroupingConfiguration'
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. If not provided, the Amazon Web Services
            SDK populates this field. For more information about idempotency, see
            [Making retries safe with idempotent APIs](http://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/).
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: The tags used to organize, track, or control access for this
            resource.
      required:
      - knowledgeBaseId
      - name
      - content
      - channelSubtype
    CreateMessageTemplateResponse:
      type: object
      properties:
        messageTemplate:
          allOf:
          - $ref: '#/components/schemas/MessageTemplateData'
          description: The message template.
    CreateMessageTemplateVersionRequest:
      type: object
      properties:
        knowledgeBaseId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the knowledge base. Can be either the ID
            or the ARN. URLs cannot contain the ARN.
        messageTemplateId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArnOrEitherWithQualifier'
          description: The identifier of the message template. Can be either the ID
            or the ARN. It cannot contain any qualifier.
        messageTemplateContentSha256:
          allOf:
          - $ref: '#/components/schemas/MessageTemplateContentSha256'
          description: The checksum value of the message template content that is
            referenced by the `$LATEST` qualifier. It can be returned in `MessageTemplateData`
            or `ExtendedMessageTemplateData`. It’s calculated by content, language,
            `defaultAttributes` and `Attachments` of the message template. If not
            supplied, the message template version will be created based on the message
            template content that is referenced by the `$LATEST` qualifier by default.
      required:
      - knowledgeBaseId
      - messageTemplateId
    CreateMessageTemplateVersionResponse:
      type: object
      properties:
        messageTemplate:
          allOf:
          - $ref: '#/components/schemas/ExtendedMessageTemplateData'
          description: The message template.
    CreateQuickResponseRequest:
      type: object
      properties:
        knowledgeBaseId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the knowledge base. Can be either the ID
            or the ARN. URLs cannot contain the ARN.
        name:
          allOf:
          - $ref: '#/components/schemas/QuickResponseName'
          description: The name of the quick response.
        content:
          allOf:
          - $ref: '#/components/schemas/QuickResponseDataProvider'
          description: The content of the quick response.
        contentType:
          allOf:
          - $ref: '#/components/schemas/QuickResponseType'
          description: "The media type of the quick response content.\n\n  * Use `application/x.quickresponse;format=plain`\
            \ for a quick response written in plain text.\n\n  * Use `application/x.quickresponse;format=markdown`\
            \ for a quick response written in richtext."
        groupingConfiguration:
          allOf:
          - $ref: '#/components/schemas/GroupingConfiguration'
          description: The configuration information of the user groups that the quick
            response is accessible to.
        description:
          allOf:
          - $ref: '#/components/schemas/QuickResponseDescription'
          description: The description of the quick response.
        shortcutKey:
          allOf:
          - $ref: '#/components/schemas/ShortCutKey'
          description: The shortcut key of the quick response. The value should be
            unique across the knowledge base.
        isActive:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether the quick response is active.
        channels:
          allOf:
          - $ref: '#/components/schemas/Channels'
          description: The Amazon Connect channels this quick response applies to.
        language:
          allOf:
          - $ref: '#/components/schemas/LanguageCode'
          description: The language code value for the language in which the quick
            response is written. The supported language codes include `de_DE`, `en_US`,
            `es_ES`, `fr_FR`, `id_ID`, `it_IT`, `ja_JP`, `ko_KR`, `pt_BR`, `zh_CN`,
            `zh_TW`
        clientToken:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. If not provided, the Amazon Web Services
            SDK populates this field. For more information about idempotency, see
            [Making retries safe with idempotent APIs](http://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/).
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: The tags used to organize, track, or control access for this
            resource.
      required:
      - knowledgeBaseId
      - name
      - content
    CreateQuickResponseResponse:
      type: object
      properties:
        quickResponse:
          allOf:
          - $ref: '#/components/schemas/QuickResponseData'
          description: The quick response.
    CreateSessionRequest:
      type: object
      properties:
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. If not provided, the Amazon Web Services
            SDK populates this field. For more information about idempotency, see
            [Making retries safe with idempotent APIs](http://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/).
        assistantId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the Amazon Q in Connect assistant. Can be
            either the ID or the ARN. URLs cannot contain the ARN.
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the session.
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: The description.
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: The tags used to organize, track, or control access for this
            resource.
        tagFilter:
          allOf:
          - $ref: '#/components/schemas/TagFilter'
          description: An object that can be used to specify Tag conditions.
        aiAgentConfiguration:
          allOf:
          - $ref: '#/components/schemas/AIAgentConfigurationMap'
          description: The configuration of the AI Agents (mapped by AI Agent Type
            to AI Agent version) that should be used by Amazon Q in Connect for this
            Session.
      required:
      - assistantId
      - name
    CreateSessionResponse:
      type: object
      properties:
        session:
          allOf:
          - $ref: '#/components/schemas/SessionData'
          description: The session.
    CustomAttributes:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/MessageTemplateAttributeValue'
    CustomerProfileAttributes:
      type: object
      properties:
        profileId:
          allOf:
          - $ref: '#/components/schemas/MessageTemplateAttributeValue'
          description: The unique identifier of a customer profile.
        profileARN:
          allOf:
          - $ref: '#/components/schemas/MessageTemplateAttributeValue'
          description: The ARN of a customer profile.
        firstName:
          allOf:
          - $ref: '#/components/schemas/MessageTemplateAttributeValue'
          description: The customer's first name.
        middleName:
          allOf:
          - $ref: '#/components/schemas/MessageTemplateAttributeValue'
          description: The customer's middle name.
        lastName:
          allOf:
          - $ref: '#/components/schemas/MessageTemplateAttributeValue'
          description: The customer's last name.
        accountNumber:
          allOf:
          - $ref: '#/components/schemas/MessageTemplateAttributeValue'
          description: A unique account number that you have given to the customer.
        emailAddress:
          allOf:
          - $ref: '#/components/schemas/MessageTemplateAttributeValue'
          description: The customer's email address, which has not been specified
            as a personal or business address.
        phoneNumber:
          allOf:
          - $ref: '#/components/schemas/MessageTemplateAttributeValue'
          description: The customer's phone number, which has not been specified as
            a mobile, home, or business number.
        additionalInformation:
          allOf:
          - $ref: '#/components/schemas/MessageTemplateAttributeValue'
          description: Any additional information relevant to the customer's profile.
        partyType:
          allOf:
          - $ref: '#/components/schemas/MessageTemplateAttributeValue'
          description: The customer's party type.
        businessName:
          allOf:
          - $ref: '#/components/schemas/MessageTemplateAttributeValue'
          description: The name of the customer's business.
        birthDate:
          allOf:
          - $ref: '#/components/schemas/MessageTemplateAttributeValue'
          description: The customer's birth date.
        gender:
          allOf:
          - $ref: '#/components/schemas/MessageTemplateAttributeValue'
          description: The customer's gender.
        mobilePhoneNumber:
          allOf:
          - $ref: '#/components/schemas/MessageTemplateAttributeValue'
          description: The customer's mobile phone number.
        homePhoneNumber:
          allOf:
          - $ref: '#/components/schemas/MessageTemplateAttributeValue'
          description: The customer's mobile phone number.
        businessPhoneNumber:
          allOf:
          - $ref: '#/components/schemas/MessageTemplateAttributeValue'
          description: The customer's business phone number.
        businessEmailAddress:
          allOf:
          - $ref: '#/components/schemas/MessageTemplateAttributeValue'
          description: The customer's business email address.
        address1:
          allOf:
          - $ref: '#/components/schemas/MessageTemplateAttributeValue'
          description: The first line of a customer address.
        address2:
          allOf:
          - $ref: '#/components/schemas/MessageTemplateAttributeValue'
          description: The second line of a customer address.
        address3:
          allOf:
          - $ref: '#/components/schemas/MessageTemplateAttributeValue'
          description: The third line of a customer address.
        address4:
          allOf:
          - $ref: '#/components/schemas/MessageTemplateAttributeValue'
          description: The fourth line of a customer address.
        city:
          allOf:
          - $ref: '#/components/schemas/MessageTemplateAttributeValue'
          description: The city in which a customer lives.
        county:
          allOf:
          - $ref: '#/components/schemas/MessageTemplateAttributeValue'
          description: The county in which a customer lives.
        country:
          allOf:
          - $ref: '#/components/schemas/MessageTemplateAttributeValue'
          description: The country in which a customer lives.
        postalCode:
          allOf:
          - $ref: '#/components/schemas/MessageTemplateAttributeValue'
          description: The postal code of a customer address.
        province:
          allOf:
          - $ref: '#/components/schemas/MessageTemplateAttributeValue'
          description: The province in which a customer lives.
        state:
          allOf:
          - $ref: '#/components/schemas/MessageTemplateAttributeValue'
          description: The state in which a customer lives.
        shippingAddress1:
          allOf:
          - $ref: '#/components/schemas/MessageTemplateAttributeValue'
          description: The first line of a customer’s shipping address.
        shippingAddress2:
          allOf:
          - $ref: '#/components/schemas/MessageTemplateAttributeValue'
          description: The second line of a customer’s shipping address.
        shippingAddress3:
          allOf:
          - $ref: '#/components/schemas/MessageTemplateAttributeValue'
          description: The third line of a customer’s shipping address.
        shippingAddress4:
          allOf:
          - $ref: '#/components/schemas/MessageTemplateAttributeValue'
          description: The fourth line of a customer’s shipping address.
        shippingCity:
          allOf:
          - $ref: '#/components/schemas/MessageTemplateAttributeValue'
          description: The city of a customer’s shipping address.
        shippingCounty:
          allOf:
          - $ref: '#/components/schemas/MessageTemplateAttributeValue'
          description: The county of a customer’s shipping address.
        shippingCountry:
          allOf:
          - $ref: '#/components/schemas/MessageTemplateAttributeValue'
          description: The country of a customer’s shipping address.
        shippingPostalCode:
          allOf:
          - $ref: '#/components/schemas/MessageTemplateAttributeValue'
          description: The postal code of a customer’s shipping address.
        shippingProvince:
          allOf:
          - $ref: '#/components/schemas/MessageTemplateAttributeValue'
          description: The province of a customer’s shipping address.
        shippingState:
          allOf:
          - $ref: '#/components/schemas/MessageTemplateAttributeValue'
          description: The state of a customer’s shipping address.
        mailingAddress1:
          allOf:
          - $ref: '#/components/schemas/MessageTemplateAttributeValue'
          description: The first line of a customer’s mailing address.
        mailingAddress2:
          allOf:
          - $ref: '#/components/schemas/MessageTemplateAttributeValue'
          description: The second line of a customer’s mailing address.
        mailingAddress3:
          allOf:
          - $ref: '#/components/schemas/MessageTemplateAttributeValue'
          description: The third line of a customer’s mailing address.
        mailingAddress4:
          allOf:
          - $ref: '#/components/schemas/MessageTemplateAttributeValue'
          description: The fourth line of a customer’s mailing address.
        mailingCity:
          allOf:
          - $ref: '#/components/schemas/MessageTemplateAttributeValue'
          description: The city of a customer’s mailing address.
        mailingCounty:
          allOf:
          - $ref: '#/components/schemas/MessageTemplateAttributeValue'
          description: The county of a customer’s mailing address.
        mailingCountry:
          allOf:
          - $ref: '#/components/schemas/MessageTemplateAttributeValue'
          description: The country of a customer’s mailing address.
        mailingPostalCode:
          allOf:
          - $ref: '#/components/schemas/MessageTemplateAttributeValue'
          description: The postal code of a customer’s mailing address.
        mailingProvince:
          allOf:
          - $ref: '#/components/schemas/MessageTemplateAttributeValue'
          description: The province of a customer’s mailing address.
        mailingState:
          allOf:
          - $ref: '#/components/schemas/MessageTemplateAttributeValue'
          description: The state of a customer’s mailing address.
        billingAddress1:
          allOf:
          - $ref: '#/components/schemas/MessageTemplateAttributeValue'
          description: The first line of a customer’s billing address.
        billingAddress2:
          allOf:
          - $ref: '#/components/schemas/MessageTemplateAttributeValue'
          description: The second line of a customer’s billing address.
        billingAddress3:
          allOf:
          - $ref: '#/components/schemas/MessageTemplateAttributeValue'
          description: The third line of a customer’s billing address.
        billingAddress4:
          allOf:
          - $ref: '#/components/schemas/MessageTemplateAttributeValue'
          description: The fourth line of a customer’s billing address.
        billingCity:
          allOf:
          - $ref: '#/components/schemas/MessageTemplateAttributeValue'
          description: The city of a customer’s billing address.
        billingCounty:
          allOf:
          - $ref: '#/components/schemas/MessageTemplateAttributeValue'
          description: The county of a customer’s billing address.
        billingCountry:
          allOf:
          - $ref: '#/components/schemas/MessageTemplateAttributeValue'
          description: The country of a customer’s billing address.
        billingPostalCode:
          allOf:
          - $ref: '#/components/schemas/MessageTemplateAttributeValue'
          description: The postal code of a customer’s billing address.
        billingProvince:
          allOf:
          - $ref: '#/components/schemas/MessageTemplateAttributeValue'
          description: The province of a customer’s billing address.
        billingState:
          allOf:
          - $ref: '#/components/schemas/MessageTemplateAttributeValue'
          description: The state of a customer’s billing address.
        custom:
          allOf:
          - $ref: '#/components/schemas/CustomAttributes'
          description: The custom attributes in customer profile attributes.
      description: The customer profile attributes that are used with the message
        template.
    DataDetails:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/ContentDataDetails'
        description: |-
          Details about the content data.
      - allOf:
        - $ref: '#/components/schemas/GenerativeDataDetails'
        description: |-
          Details about the generative data.
      - allOf:
        - $ref: '#/components/schemas/IntentDetectedDataDetails'
        description: |-
          Details about the intent data.
      - allOf:
        - $ref: '#/components/schemas/SourceContentDataDetails'
        description: |-
          Details about the content data.
      - allOf:
        - $ref: '#/components/schemas/GenerativeChunkDataDetails'
        description: |-
          Details about the generative chunk data.
      description: |-
        Details about the data.
    DataReference:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/ContentReference'
      - allOf:
        - $ref: '#/components/schemas/GenerativeReference'
        description: |-
          Reference information about the generative content.
      description: |-
        Reference data.
    DataSummary:
      type: object
      properties:
        reference:
          allOf:
          - $ref: '#/components/schemas/DataReference'
          description: Reference information about the content.
        details:
          allOf:
          - $ref: '#/components/schemas/DataDetails'
          description: Details about the data.
      required:
      - reference
      - details
      description: Summary of the data.
    DataSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/DataSummary'
    DeactivateMessageTemplateRequest:
      type: object
      properties:
        knowledgeBaseId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the knowledge base. Can be either the ID
            or the ARN. URLs cannot contain the ARN.
        messageTemplateId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArnOrEitherWithQualifier'
          description: The identifier of the message template. Can be either the ID
            or the ARN. It cannot contain any qualifier.
        versionNumber:
          allOf:
          - $ref: '#/components/schemas/Version'
          description: The version number of the message template version to deactivate.
      required:
      - knowledgeBaseId
      - messageTemplateId
      - versionNumber
    DeactivateMessageTemplateResponse:
      type: object
      properties:
        messageTemplateArn:
          allOf:
          - $ref: '#/components/schemas/ArnWithQualifier'
          description: The Amazon Resource Name (ARN) of the message template.
        messageTemplateId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The identifier of the message template.
        versionNumber:
          allOf:
          - $ref: '#/components/schemas/Version'
          description: The version number of the message template version that has
            been deactivated.
      required:
      - messageTemplateArn
      - messageTemplateId
      - versionNumber
    DeleteAIAgentRequest:
      type: object
      properties:
        assistantId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the Amazon Q in Connect assistant. Can be
            either the ID or the ARN. URLs cannot contain the ARN.
        aiAgentId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArnOrEitherWithQualifier'
          description: The identifier of the Amazon Q in Connect AI Agent. Can be
            either the ID or the ARN. URLs cannot contain the ARN.
      required:
      - assistantId
      - aiAgentId
    DeleteAIAgentResponse:
      type: object
      properties: {}
    DeleteAIAgentVersionRequest:
      type: object
      properties:
        assistantId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the Amazon Q in Connect assistant. Can be
            either the ID or the ARN. URLs cannot contain the ARN.
        aiAgentId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArnOrEitherWithQualifier'
          description: The identifier of the Amazon Q in Connect AI Agent. Can be
            either the ID or the ARN. URLs cannot contain the ARN.
        versionNumber:
          allOf:
          - $ref: '#/components/schemas/Version'
          description: The version number of the AI Agent version.
      required:
      - assistantId
      - aiAgentId
      - versionNumber
    DeleteAIAgentVersionResponse:
      type: object
      properties: {}
    DeleteAIGuardrailRequest:
      type: object
      properties:
        assistantId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the Amazon Q in Connect assistant. Can be
            either the ID or the ARN. URLs cannot contain the ARN.
        aiGuardrailId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArnOrEitherWithQualifier'
          description: The identifier of the Amazon Q in Connect AI Guardrail. Can
            be either the ID or the ARN. URLs cannot contain the ARN.
      required:
      - assistantId
      - aiGuardrailId
    DeleteAIGuardrailResponse:
      type: object
      properties: {}
    DeleteAIGuardrailVersionRequest:
      type: object
      properties:
        assistantId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the Amazon Q in Connect assistant. Can be
            either the ID or the ARN. URLs cannot contain the ARN.
        aiGuardrailId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArnOrEitherWithQualifier'
          description: The identifier of the Amazon Q in Connect AI Guardrail.
        versionNumber:
          allOf:
          - $ref: '#/components/schemas/Version'
          description: The version number of the AI Guardrail version to be deleted.
      required:
      - assistantId
      - aiGuardrailId
      - versionNumber
    DeleteAIGuardrailVersionResponse:
      type: object
      properties: {}
    DeleteAIPromptRequest:
      type: object
      properties:
        assistantId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the Amazon Q in Connect assistant. Can be
            either the ID or the ARN. URLs cannot contain the ARN.
        aiPromptId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArnOrEitherWithQualifier'
          description: The identifier of the Amazon Q in Connect AI prompt. Can be
            either the ID or the ARN. URLs cannot contain the ARN.
      required:
      - assistantId
      - aiPromptId
    DeleteAIPromptResponse:
      type: object
      properties: {}
    DeleteAIPromptVersionRequest:
      type: object
      properties:
        assistantId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the Amazon Q in Connect assistant. Can be
            either the ID or the ARN. URLs cannot contain the ARN.
        aiPromptId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArnOrEitherWithQualifier'
          description: The identifier of the Amazon Q in Connect AI prompt.
        versionNumber:
          allOf:
          - $ref: '#/components/schemas/Version'
          description: The version number of the AI Prompt version to be deleted.
      required:
      - assistantId
      - aiPromptId
      - versionNumber
    DeleteAIPromptVersionResponse:
      type: object
      properties: {}
    DeleteAssistantAssociationRequest:
      type: object
      properties:
        assistantAssociationId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the assistant association. Can be either
            the ID or the ARN. URLs cannot contain the ARN.
        assistantId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the Amazon Q in Connect assistant. Can be
            either the ID or the ARN. URLs cannot contain the ARN.
      required:
      - assistantAssociationId
      - assistantId
    DeleteAssistantAssociationResponse:
      type: object
      properties: {}
    DeleteAssistantRequest:
      type: object
      properties:
        assistantId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the Amazon Q in Connect assistant. Can be
            either the ID or the ARN. URLs cannot contain the ARN.
      required:
      - assistantId
    DeleteAssistantResponse:
      type: object
      properties: {}
    DeleteContentAssociationRequest:
      type: object
      properties:
        knowledgeBaseId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the knowledge base.
        contentId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the content.
        contentAssociationId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the content association. Can be either the
            ID or the ARN. URLs cannot contain the ARN.
      required:
      - knowledgeBaseId
      - contentId
      - contentAssociationId
    DeleteContentAssociationResponse:
      type: object
      properties: {}
    DeleteContentRequest:
      type: object
      properties:
        knowledgeBaseId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the knowledge base. Can be either the ID
            or the ARN. URLs cannot contain the ARN.
        contentId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the content. Can be either the ID or the
            ARN. URLs cannot contain the ARN.
      required:
      - knowledgeBaseId
      - contentId
    DeleteContentResponse:
      type: object
      properties: {}
    DeleteImportJobRequest:
      type: object
      properties:
        knowledgeBaseId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the knowledge base.
        importJobId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The identifier of the import job to be deleted.
      required:
      - knowledgeBaseId
      - importJobId
    DeleteImportJobResponse:
      type: object
      properties: {}
    DeleteKnowledgeBaseRequest:
      type: object
      properties:
        knowledgeBaseId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The knowledge base to delete content from. Can be either the
            ID or the ARN. URLs cannot contain the ARN.
      required:
      - knowledgeBaseId
    DeleteKnowledgeBaseResponse:
      type: object
      properties: {}
    DeleteMessageTemplateAttachmentRequest:
      type: object
      properties:
        knowledgeBaseId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the knowledge base. Can be either the ID
            or the ARN. URLs cannot contain the ARN.
        messageTemplateId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArnOrEitherWithQualifier'
          description: The identifier of the message template. Can be either the ID
            or the ARN. It cannot contain any qualifier.
        attachmentId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The identifier of the attachment file.
      required:
      - knowledgeBaseId
      - messageTemplateId
      - attachmentId
    DeleteMessageTemplateAttachmentResponse:
      type: object
      properties: {}
    DeleteMessageTemplateRequest:
      type: object
      properties:
        knowledgeBaseId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the knowledge base. Can be either the ID
            or the ARN. URLs cannot contain the ARN.
        messageTemplateId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArnOrEitherWithQualifier'
          description: The identifier of the message template. Can be either the ID
            or the ARN.
      required:
      - knowledgeBaseId
      - messageTemplateId
    DeleteMessageTemplateResponse:
      type: object
      properties: {}
    DeleteQuickResponseRequest:
      type: object
      properties:
        knowledgeBaseId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The knowledge base from which the quick response is deleted.
            The identifier of the knowledge base.
        quickResponseId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the quick response to delete.
      required:
      - knowledgeBaseId
      - quickResponseId
    DeleteQuickResponseResponse:
      type: object
      properties: {}
    Description:
      type: string
      pattern: ^[a-zA-Z0-9\s_.,-]+
      minLength: 1
      maxLength: 255
    Document:
      type: object
      properties:
        contentReference:
          allOf:
          - $ref: '#/components/schemas/ContentReference'
          description: A reference to the content resource.
        title:
          allOf:
          - $ref: '#/components/schemas/DocumentText'
          description: The title of the document.
        excerpt:
          allOf:
          - $ref: '#/components/schemas/DocumentText'
          description: The excerpt from the document.
      required:
      - contentReference
      description: The document.
    DocumentText:
      type: object
      properties:
        text:
          allOf:
          - $ref: '#/components/schemas/SensitiveString'
          description: Text in the document.
        highlights:
          allOf:
          - $ref: '#/components/schemas/Highlights'
          description: Highlights in the document text.
      description: The text of the document.
    EmailHeader:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/EmailHeaderKey'
          description: The name of the email header.
        value:
          allOf:
          - $ref: '#/components/schemas/EmailHeaderValue'
          description: The value of the email header.
      description: The email header to include in email messages.
    EmailHeaderKey:
      type: string
      pattern: ^[!-9;-@A-~]+$
      minLength: 1
      maxLength: 126
    EmailHeaderValue:
      type: string
      pattern: '[ -~]*'
      minLength: 1
      maxLength: 870
    EmailHeaders:
      type: array
      items:
        $ref: '#/components/schemas/EmailHeader'
    EmailMessageTemplateContent:
      type: object
      properties:
        subject:
          allOf:
          - $ref: '#/components/schemas/NonEmptyUnlimitedString'
          description: The subject line, or title, to use in email messages.
        body:
          allOf:
          - $ref: '#/components/schemas/EmailMessageTemplateContentBody'
          description: The body to use in email messages.
        headers:
          allOf:
          - $ref: '#/components/schemas/EmailHeaders'
          description: The email headers to include in email messages.
      description: The content of the message template that applies to the email channel
        subtype.
    EmailMessageTemplateContentBody:
      type: object
      properties:
        plainText:
          allOf:
          - $ref: '#/components/schemas/MessageTemplateBodyContentProvider'
          description: The message body, in plain text format, to use in email messages
            that are based on the message template. We recommend using plain text
            format for email clients that don't render HTML content and clients that
            are connected to high-latency networks, such as mobile devices.
        html:
          allOf:
          - $ref: '#/components/schemas/MessageTemplateBodyContentProvider'
          description: The message body, in HTML format, to use in email messages
            that are based on the message template. We recommend using HTML format
            for email clients that render HTML content. You can include links, formatted
            text, and more in an HTML message.
      description: The body to use in email messages.
    ExtendedMessageTemplateData:
      type: object
      properties:
        messageTemplateArn:
          allOf:
          - $ref: '#/components/schemas/ArnWithQualifier'
          description: The Amazon Resource Name (ARN) of the message template.
        messageTemplateId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The identifier of the message template.
        knowledgeBaseArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the knowledge base.
        knowledgeBaseId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The identifier of the knowledge base.
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the message template.
        channelSubtype:
          allOf:
          - $ref: '#/components/schemas/ChannelSubtype'
          description: The channel subtype this message template applies to.
        createdTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp when the message template was created.
        lastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp when the message template data was last modified.
        lastModifiedBy:
          allOf:
          - $ref: '#/components/schemas/GenericArn'
          description: The Amazon Resource Name (ARN) of the user who last updated
            the message template data.
        content:
          allOf:
          - $ref: '#/components/schemas/MessageTemplateContentProvider'
          description: The content of the message template.
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: The description of the message template.
        language:
          allOf:
          - $ref: '#/components/schemas/LanguageCode'
          description: The language code value for the language in which the quick
            response is written. The supported language codes include `de_DE`, `en_US`,
            `es_ES`, `fr_FR`, `id_ID`, `it_IT`, `ja_JP`, `ko_KR`, `pt_BR`, `zh_CN`,
            `zh_TW`
        groupingConfiguration:
          $ref: '#/components/schemas/GroupingConfiguration'
        defaultAttributes:
          allOf:
          - $ref: '#/components/schemas/MessageTemplateAttributes'
          description: An object that specifies the default values to use for variables
            in the message template. This object contains different categories of
            key-value pairs. Each key defines a variable or placeholder in the message
            template. The corresponding value defines the default value for that variable.
        attributeTypes:
          allOf:
          - $ref: '#/components/schemas/MessageTemplateAttributeTypeList'
          description: The types of attributes contain the message template.
        attachments:
          allOf:
          - $ref: '#/components/schemas/MessageTemplateAttachmentList'
          description: The message template attachments.
        isActive:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether the version of the message template is activated.
        versionNumber:
          allOf:
          - $ref: '#/components/schemas/Version'
          description: The version number of the message template version.
        messageTemplateContentSha256:
          allOf:
          - $ref: '#/components/schemas/MessageTemplateContentSha256'
          description: The checksum value of the message template content that is
            referenced by the `$LATEST` qualifier. It can be returned in `MessageTemplateData`
            or `ExtendedMessageTemplateData`. It’s calculated by content, language,
            `defaultAttributes` and `Attachments` of the message template.
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: The tags used to organize, track, or control access for this
            resource.
      required:
      - messageTemplateArn
      - messageTemplateId
      - knowledgeBaseArn
      - knowledgeBaseId
      - name
      - channelSubtype
      - createdTime
      - lastModifiedTime
      - lastModifiedBy
      - content
      - messageTemplateContentSha256
      description: The extended data of a message template.
    ExternalSource:
      type: string
      enum:
      - AMAZON_CONNECT
    ExternalSourceConfiguration:
      type: object
      properties:
        source:
          allOf:
          - $ref: '#/components/schemas/ExternalSource'
          description: The type of the external data source.
        configuration:
          allOf:
          - $ref: '#/components/schemas/Configuration'
          description: The configuration information of the external data source.
      required:
      - source
      - configuration
      description: The configuration information of the external data source.
    FailureReason:
      type: array
      items:
        $ref: '#/components/schemas/NonEmptyString'
    Filter:
      type: object
      properties:
        field:
          allOf:
          - $ref: '#/components/schemas/FilterField'
          description: The field on which to filter.
        operator:
          allOf:
          - $ref: '#/components/schemas/FilterOperator'
          description: The operator to use for comparing the field’s value with the
            provided value.
        value:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The desired field value on which to filter.
      required:
      - field
      - operator
      - value
      description: A search filter.
    FilterField:
      type: string
      enum:
      - NAME
    FilterList:
      type: array
      items:
        $ref: '#/components/schemas/Filter'
    FilterOperator:
      type: string
      enum:
      - EQUALS
    FixedSizeChunkingConfiguration:
      type: object
      properties:
        maxTokens:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The maximum number of tokens to include in a chunk.
        overlapPercentage:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The percentage of overlap between adjacent chunks of a data
            source.
      required:
      - maxTokens
      - overlapPercentage
      description: Configurations for when you choose fixed-size chunking. If you
        set the `chunkingStrategy` as `NONE`, exclude this field.
    GenerativeChunkDataDetails:
      type: object
      properties:
        completion:
          allOf:
          - $ref: '#/components/schemas/SensitiveString'
          description: A chunk of the LLM response.
        references:
          allOf:
          - $ref: '#/components/schemas/DataSummaryList'
          description: The references used to generate the LLM response.
        nextChunkToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of chunks. Use the value returned
            in the previous response in the next request to retrieve the next set
            of chunks.
      description: Details about the generative chunk data.
    GenerativeContentFeedbackData:
      type: object
      properties:
        relevance:
          allOf:
          - $ref: '#/components/schemas/Relevance'
          description: The relevance of the feedback.
      required:
      - relevance
      description: The feedback information for a generative target type.
    GenerativeDataDetails:
      type: object
      properties:
        completion:
          allOf:
          - $ref: '#/components/schemas/SensitiveString'
          description: The LLM response.
        references:
          allOf:
          - $ref: '#/components/schemas/DataSummaryList'
          description: The references used to generative the LLM response.
        rankingData:
          allOf:
          - $ref: '#/components/schemas/RankingData'
          description: Details about the generative content ranking data.
      required:
      - completion
      - references
      - rankingData
      description: Details about generative data.
    GenerativeReference:
      type: object
      properties:
        modelId:
          allOf:
          - $ref: '#/components/schemas/LlmModelId'
          description: The identifier of the LLM model.
        generationId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The identifier of the LLM model.
      description: Reference information about generative content.
    GenericArn:
      type: string
      pattern: ^arn:[a-z-]+?:[a-z-]+?:[a-z0-9-]*?:([0-9]{12})?:[a-zA-Z0-9-:/]+$
      minLength: 1
      maxLength: 2048
    GetAIAgentRequest:
      type: object
      properties:
        assistantId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the Amazon Q in Connect assistant. Can be
            either the ID or the ARN. URLs cannot contain the ARN.
        aiAgentId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArnOrEitherWithQualifier'
          description: The identifier of the Amazon Q in Connect AI Agent (with or
            without a version qualifier). Can be either the ID or the ARN. URLs cannot
            contain the ARN.
      required:
      - assistantId
      - aiAgentId
    GetAIAgentResponse:
      type: object
      properties:
        aiAgent:
          allOf:
          - $ref: '#/components/schemas/AIAgentData'
          description: The data of the AI Agent.
        versionNumber:
          allOf:
          - $ref: '#/components/schemas/Version'
          description: The version number of the AI Agent version (returned if an
            AI Agent version was specified via use of a qualifier for the `aiAgentId`
            on the request).
    GetAIGuardrailRequest:
      type: object
      properties:
        assistantId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the Amazon Q in Connect assistant. Can be
            either the ID or the ARN. URLs cannot contain the ARN.
        aiGuardrailId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArnOrEitherWithQualifier'
          description: The identifier of the Amazon Q in Connect AI Guardrail.
      required:
      - assistantId
      - aiGuardrailId
    GetAIGuardrailResponse:
      type: object
      properties:
        aiGuardrail:
          allOf:
          - $ref: '#/components/schemas/AIGuardrailData'
          description: The data of the AI Guardrail.
        versionNumber:
          allOf:
          - $ref: '#/components/schemas/Version'
          description: The version number of the AI Guardrail version (returned if
            an AI Guardrail version was specified via use of a qualifier for the `aiGuardrailId`
            on the request).
    GetAIPromptRequest:
      type: object
      properties:
        assistantId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the Amazon Q in Connect assistant. Can be
            either the ID or the ARN. URLs cannot contain the ARN.
        aiPromptId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArnOrEitherWithQualifier'
          description: The identifier of the Amazon Q in Connect AI prompt.
      required:
      - assistantId
      - aiPromptId
    GetAIPromptResponse:
      type: object
      properties:
        aiPrompt:
          allOf:
          - $ref: '#/components/schemas/AIPromptData'
          description: The data of the AI Prompt.
        versionNumber:
          allOf:
          - $ref: '#/components/schemas/Version'
          description: The version number of the AI Prompt version (returned if an
            AI Prompt version was specified via use of a qualifier for the `aiPromptId`
            on the request).
    GetAssistantAssociationRequest:
      type: object
      properties:
        assistantAssociationId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the assistant association. Can be either
            the ID or the ARN. URLs cannot contain the ARN.
        assistantId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the Amazon Q in Connect assistant. Can be
            either the ID or the ARN. URLs cannot contain the ARN.
      required:
      - assistantAssociationId
      - assistantId
    GetAssistantAssociationResponse:
      type: object
      properties:
        assistantAssociation:
          allOf:
          - $ref: '#/components/schemas/AssistantAssociationData'
          description: The assistant association.
    GetAssistantRequest:
      type: object
      properties:
        assistantId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the Amazon Q in Connect assistant. Can be
            either the ID or the ARN. URLs cannot contain the ARN.
      required:
      - assistantId
    GetAssistantResponse:
      type: object
      properties:
        assistant:
          allOf:
          - $ref: '#/components/schemas/AssistantData'
          description: Information about the assistant.
    GetContentAssociationRequest:
      type: object
      properties:
        knowledgeBaseId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the knowledge base.
        contentId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the content.
        contentAssociationId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the content association. Can be either the
            ID or the ARN. URLs cannot contain the ARN.
      required:
      - knowledgeBaseId
      - contentId
      - contentAssociationId
    GetContentAssociationResponse:
      type: object
      properties:
        contentAssociation:
          allOf:
          - $ref: '#/components/schemas/ContentAssociationData'
          description: The association between Amazon Q in Connect content and another
            resource.
    GetContentRequest:
      type: object
      properties:
        contentId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the content. Can be either the ID or the
            ARN. URLs cannot contain the ARN.
        knowledgeBaseId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the knowledge base. This should not be a
            QUICK_RESPONSES type knowledge base. Can be either the ID or the ARN.
            URLs cannot contain the ARN.
      required:
      - contentId
      - knowledgeBaseId
    GetContentResponse:
      type: object
      properties:
        content:
          allOf:
          - $ref: '#/components/schemas/ContentData'
          description: The content.
    GetContentSummaryRequest:
      type: object
      properties:
        contentId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the content. Can be either the ID or the
            ARN. URLs cannot contain the ARN.
        knowledgeBaseId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the knowledge base. Can be either the ID
            or the ARN. URLs cannot contain the ARN.
      required:
      - contentId
      - knowledgeBaseId
    GetContentSummaryResponse:
      type: object
      properties:
        contentSummary:
          allOf:
          - $ref: '#/components/schemas/ContentSummary'
          description: The content summary.
    GetImportJobRequest:
      type: object
      properties:
        importJobId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The identifier of the import job to retrieve.
        knowledgeBaseId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the knowledge base that the import job belongs
            to.
      required:
      - importJobId
      - knowledgeBaseId
    GetImportJobResponse:
      type: object
      properties:
        importJob:
          allOf:
          - $ref: '#/components/schemas/ImportJobData'
          description: The import job.
    GetKnowledgeBaseRequest:
      type: object
      properties:
        knowledgeBaseId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the knowledge base. Can be either the ID
            or the ARN. URLs cannot contain the ARN.
      required:
      - knowledgeBaseId
    GetKnowledgeBaseResponse:
      type: object
      properties:
        knowledgeBase:
          allOf:
          - $ref: '#/components/schemas/KnowledgeBaseData'
          description: The knowledge base.
    GetMessageTemplateRequest:
      type: object
      properties:
        messageTemplateId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArnOrEitherWithQualifier'
          description: The identifier of the message template. Can be either the ID
            or the ARN.
        knowledgeBaseId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the knowledge base. Can be either the ID
            or the ARN. URLs cannot contain the ARN.
      required:
      - messageTemplateId
      - knowledgeBaseId
    GetMessageTemplateResponse:
      type: object
      properties:
        messageTemplate:
          allOf:
          - $ref: '#/components/schemas/ExtendedMessageTemplateData'
          description: The message template.
    GetNextMessageRequest:
      type: object
      properties:
        assistantId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the Amazon Q in Connect assistant.
        sessionId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the Amazon Q in Connect session.
        nextMessageToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next message. Use the value returned in the
            SendMessage or previous response in the next request to retrieve the next
            message.
      required:
      - assistantId
      - sessionId
      - nextMessageToken
    GetNextMessageResponse:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/MessageType'
          description: The type of message response.
        response:
          allOf:
          - $ref: '#/components/schemas/MessageOutput'
          description: The message response to the requested message.
        requestMessageId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The identifier of the submitted message.
        conversationState:
          allOf:
          - $ref: '#/components/schemas/ConversationState'
          description: The state of current conversation.
        nextMessageToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next message.
        conversationSessionData:
          allOf:
          - $ref: '#/components/schemas/RuntimeSessionDataList'
          description: The conversation data stored on an Amazon Q in Connect Session.
      required:
      - type
      - response
      - requestMessageId
      - conversationState
    GetQuickResponseRequest:
      type: object
      properties:
        quickResponseId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the quick response.
        knowledgeBaseId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the knowledge base. This should be a QUICK_RESPONSES
            type knowledge base.
      required:
      - quickResponseId
      - knowledgeBaseId
    GetQuickResponseResponse:
      type: object
      properties:
        quickResponse:
          allOf:
          - $ref: '#/components/schemas/QuickResponseData'
          description: The quick response.
    GetRecommendationsRequest:
      type: object
      properties:
        assistantId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the Amazon Q in Connect assistant. Can be
            either the ID or the ARN. URLs cannot contain the ARN.
        sessionId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the session. Can be either the ID or the
            ARN. URLs cannot contain the ARN.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return per page.
        waitTimeSeconds:
          allOf:
          - $ref: '#/components/schemas/WaitTimeSeconds'
          description: The duration (in seconds) for which the call waits for a recommendation
            to be made available before returning. If a recommendation is available,
            the call returns sooner than `WaitTimeSeconds`. If no messages are available
            and the wait time expires, the call returns successfully with an empty
            list.
        nextChunkToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of chunks. Use the value returned
            in the previous response in the next request to retrieve the next set
            of chunks.
      required:
      - assistantId
      - sessionId
    GetRecommendationsResponse:
      type: object
      properties:
        recommendations:
          allOf:
          - $ref: '#/components/schemas/RecommendationList'
          description: The recommendations.
        triggers:
          allOf:
          - $ref: '#/components/schemas/RecommendationTriggerList'
          description: The triggers corresponding to recommendations.
      required:
      - recommendations
    GetSessionRequest:
      type: object
      properties:
        assistantId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the Amazon Q in Connect assistant. Can be
            either the ID or the ARN. URLs cannot contain the ARN.
        sessionId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the session. Can be either the ID or the
            ARN. URLs cannot contain the ARN.
      required:
      - assistantId
      - sessionId
    GetSessionResponse:
      type: object
      properties:
        session:
          allOf:
          - $ref: '#/components/schemas/SessionData'
          description: The session.
    GroupingConfiguration:
      type: object
      properties:
        criteria:
          allOf:
          - $ref: '#/components/schemas/GroupingCriteria'
          description: "The criteria used for grouping Amazon Q in Connect users.\n\
            \nThe following is the list of supported criteria values.\n\n  * `RoutingProfileArn`:\
            \ Grouping the users by their [Amazon Connect routing profile ARN](https://docs.aws.amazon.com/connect/latest/APIReference/API_RoutingProfile.html).\
            \ User should have [SearchRoutingProfile](https://docs.aws.amazon.com/connect/latest/APIReference/API_SearchRoutingProfiles.html)\
            \ and [DescribeRoutingProfile](https://docs.aws.amazon.com/connect/latest/APIReference/API_DescribeRoutingProfile.html)\
            \ permissions when setting criteria to this value."
        values:
          allOf:
          - $ref: '#/components/schemas/GroupingValues'
          description: "The list of values that define different groups of Amazon\
            \ Q in Connect users.\n\n  * When setting `criteria` to `RoutingProfileArn`,\
            \ you need to provide a list of ARNs of [Amazon Connect routing profiles](https://docs.aws.amazon.com/connect/latest/APIReference/API_RoutingProfile.html)\
            \ as values of this parameter."
      description: The configuration information of the grouping of Amazon Q in Connect
        users.
    GroupingCriteria:
      type: string
      minLength: 1
      maxLength: 100
    GroupingValue:
      type: string
      minLength: 1
      maxLength: 2048
    GroupingValues:
      type: array
      items:
        $ref: '#/components/schemas/GroupingValue'
    GuardrailContentFilterConfig:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/GuardrailContentFilterType'
          description: The harmful category that the content filter is applied to.
        inputStrength:
          allOf:
          - $ref: '#/components/schemas/GuardrailFilterStrength'
          description: The strength of the content filter to apply to prompts. As
            you increase the filter strength, the likelihood of filtering harmful
            content increases and the probability of seeing harmful content in your
            application reduces.
        outputStrength:
          allOf:
          - $ref: '#/components/schemas/GuardrailFilterStrength'
          description: The strength of the content filter to apply to model responses.
            As you increase the filter strength, the likelihood of filtering harmful
            content increases and the probability of seeing harmful content in your
            application reduces.
      required:
      - type
      - inputStrength
      - outputStrength
      description: "Contains filter strengths for harmful content. AI Guardrail's\
        \ support the following content filters to detect and filter harmful user\
        \ inputs and FM-generated outputs.\n\n  * **Hate** : Describes input prompts\
        \ and model responses that discriminate, criticize, insult, denounce, or dehumanize\
        \ a person or group on the basis of an identity (such as race, ethnicity,\
        \ gender, religion, sexual orientation, ability, and national origin).\n\n\
        \  * **Insults** : Describes input prompts and model responses that includes\
        \ demeaning, humiliating, mocking, insulting, or belittling language. This\
        \ type of language is also labeled as bullying.\n\n  * **Sexual** : Describes\
        \ input prompts and model responses that indicates sexual interest, activity,\
        \ or arousal using direct or indirect references to body parts, physical traits,\
        \ or sex.\n\n  * **Violence** : Describes input prompts and model responses\
        \ that includes glorification of, or threats to inflict physical pain, hurt,\
        \ or injury toward a person, group, or thing.\n\nContent filtering depends\
        \ on the confidence classification of user inputs and FM responses across\
        \ each of the four harmful categories. All input and output statements are\
        \ classified into one of four confidence levels (NONE, LOW, MEDIUM, HIGH)\
        \ for each harmful category. For example, if a statement is classified as\
        \ _Hate_ with HIGH confidence, the likelihood of the statement representing\
        \ hateful content is high. A single statement can be classified across multiple\
        \ categories with varying confidence levels. For example, a single statement\
        \ can be classified as _Hate_ with HIGH confidence, _Insults_ with LOW confidence,\
        \ _Sexual_ with NONE confidence, and _Violence_ with MEDIUM confidence."
    GuardrailContentFilterType:
      type: string
      enum:
      - SEXUAL
      - VIOLENCE
      - HATE
      - INSULTS
      - MISCONDUCT
      - PROMPT_ATTACK
    GuardrailContentFiltersConfig:
      type: array
      items:
        $ref: '#/components/schemas/GuardrailContentFilterConfig'
      description: List of content filter configs in content policy.
    GuardrailContextualGroundingFilterConfig:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/GuardrailContextualGroundingFilterType'
          description: The filter type for the AI Guardrail's contextual grounding
            filter.
        threshold:
          allOf:
          - $ref: '#/components/schemas/GuardrailContextualGroundingFilterThreshold'
          description: The threshold details for the AI Guardrail's contextual grounding
            filter.
      required:
      - type
      - threshold
      description: The filter configuration details for the AI Guardrail's contextual
        grounding filter.
    GuardrailContextualGroundingFilterThreshold:
      type: number
      format: double
      description: The threshold for this filter.
      default: 0
      minimum: 0
    GuardrailContextualGroundingFilterType:
      type: string
      enum:
      - GROUNDING
      - RELEVANCE
    GuardrailContextualGroundingFiltersConfig:
      type: array
      items:
        $ref: '#/components/schemas/GuardrailContextualGroundingFilterConfig'
      description: List of contextual grounding filter configs.
    GuardrailFilterStrength:
      type: string
      enum:
      - NONE
      - LOW
      - MEDIUM
      - HIGH
    GuardrailManagedWordListsConfig:
      type: array
      items:
        $ref: '#/components/schemas/GuardrailManagedWordsConfig'
      description: A config for the list of managed words.
    GuardrailManagedWordsConfig:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/GuardrailManagedWordsType'
          description: The managed word type to configure for the AI Guardrail.
      required:
      - type
      description: The managed word list to configure for the AI Guardrail.
    GuardrailManagedWordsType:
      type: string
      enum:
      - PROFANITY
    GuardrailPiiEntitiesConfig:
      type: array
      items:
        $ref: '#/components/schemas/GuardrailPiiEntityConfig'
      description: List of entities.
    GuardrailPiiEntityConfig:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/GuardrailPiiEntityType'
          description: "Configure AI Guardrail type when the PII entity is detected.\n\
            \nThe following PIIs are used to block or mask sensitive information:\n\
            \n  * **General**\n\n    * **ADDRESS**\n\nA physical address, such as\
            \ \"100 Main Street, Anytown, USA\" or \"Suite #12, Building 123\". An\
            \ address can include information such as the street, building, location,\
            \ city, state, country, county, zip code, precinct, and neighborhood.\n\
            \n    * **AGE**\n\nAn individual's age, including the quantity and unit\
            \ of time. For example, in the phrase \"I am 40 years old,\" Guarrails\
            \ recognizes \"40 years\" as an age.\n\n    * **NAME**\n\nAn individual's\
            \ name. This entity type does not include titles, such as Dr., Mr., Mrs.,\
            \ or Miss. AI Guardrail doesn't apply this entity type to names that are\
            \ part of organizations or addresses. For example, AI Guardrail recognizes\
            \ the \"John Doe Organization\" as an organization, and it recognizes\
            \ \"Jane Doe Street\" as an address.\n\n    * **EMAIL**\n\nAn email address,\
            \ such as _marymajor@email.com_.\n\n    * **PHONE**\n\nA phone number.\
            \ This entity type also includes fax and pager numbers.\n\n    * **USERNAME**\n\
            \nA user name that identifies an account, such as a login name, screen\
            \ name, nick name, or handle.\n\n    * **PASSWORD**\n\nAn alphanumeric\
            \ string that is used as a password, such as \"*_very20special#pass*_\
            \ \".\n\n    * **DRIVER_ID**\n\nThe number assigned to a driver's license,\
            \ which is an official document permitting an individual to operate one\
            \ or more motorized vehicles on a public road. A driver's license number\
            \ consists of alphanumeric characters.\n\n    * **LICENSE_PLATE**\n\n\
            A license plate for a vehicle is issued by the state or country where\
            \ the vehicle is registered. The format for passenger vehicles is typically\
            \ five to eight digits, consisting of upper-case letters and numbers.\
            \ The format varies depending on the location of the issuing state or\
            \ country.\n\n    * **VEHICLE_IDENTIFICATION_NUMBER**\n\nA Vehicle Identification\
            \ Number (VIN) uniquely identifies a vehicle. VIN content and format are\
            \ defined in the _ISO 3779_ specification. Each country has specific codes\
            \ and formats for VINs.\n\n  * **Finance**\n\n    * **CREDIT_DEBIT_CARD_CVV**\n\
            \nA three-digit card verification code (CVV) that is present on VISA,\
            \ MasterCard, and Discover credit and debit cards. For American Express\
            \ credit or debit cards, the CVV is a four-digit numeric code.\n\n   \
            \ * **CREDIT_DEBIT_CARD_EXPIRY**\n\nThe expiration date for a credit or\
            \ debit card. This number is usually four digits long and is often formatted\
            \ as _month/year_ or _MM/YY_. AI Guardrail recognizes expiration dates\
            \ such as _01/21_ , _01/2021_ , and _Jan 2021_.\n\n    * **CREDIT_DEBIT_CARD_NUMBER**\n\
            \nThe number for a credit or debit card. These numbers can vary from 13\
            \ to 16 digits in length. However, Amazon Comprehend also recognizes credit\
            \ or debit card numbers when only the last four digits are present.\n\n\
            \    * **PIN**\n\nA four-digit personal identification number (PIN) with\
            \ which you can access your bank account.\n\n    * **INTERNATIONAL_BANK_ACCOUNT_NUMBER**\n\
            \nAn International Bank Account Number has specific formats in each country.\
            \ For more information, see [ www.iban.com/structure](https://www.iban.com/structure).\n\
            \n    * **SWIFT_CODE**\n\nA SWIFT code is a standard format of Bank Identifier\
            \ Code (BIC) used to specify a particular bank or branch. Banks use these\
            \ codes for money transfers such as international wire transfers.\n\n\
            SWIFT codes consist of eight or 11 characters. The 11-digit codes refer\
            \ to specific branches, while eight-digit codes (or 11-digit codes ending\
            \ in 'XXX') refer to the head or primary office.\n\n  * **IT**\n\n   \
            \ * **IP_ADDRESS**\n\nAn IPv4 address, such as _198.51.100.0_.\n\n   \
            \ * **MAC_ADDRESS**\n\nA _media access control_ (MAC) address is a unique\
            \ identifier assigned to a network interface controller (NIC).\n\n   \
            \ * **URL**\n\nA web address, such as _www.example.com_.\n\n    * **AWS_ACCESS_KEY**\n\
            \nA unique identifier that's associated with a secret access key; you\
            \ use the access key ID and secret access key to sign programmatic Amazon\
            \ Web Services requests cryptographically.\n\n    * **AWS_SECRET_KEY**\n\
            \nA unique identifier that's associated with an access key. You use the\
            \ access key ID and secret access key to sign programmatic Amazon Web\
            \ Services requests cryptographically.\n\n  * **USA specific**\n\n   \
            \ * **US_BANK_ACCOUNT_NUMBER**\n\nA US bank account number, which is typically\
            \ 10 to 12 digits long.\n\n    * **US_BANK_ROUTING_NUMBER**\n\nA US bank\
            \ account routing number. These are typically nine digits long,\n\n  \
            \  * **US_INDIVIDUAL_TAX_IDENTIFICATION_NUMBER**\n\nA US Individual Taxpayer\
            \ Identification Number (ITIN) is a nine-digit number that starts with\
            \ a \"9\" and contain a \"7\" or \"8\" as the fourth digit. An ITIN can\
            \ be formatted with a space or a dash after the third and forth digits.\n\
            \n    * **US_PASSPORT_NUMBER**\n\nA US passport number. Passport numbers\
            \ range from six to nine alphanumeric characters.\n\n    * **US_SOCIAL_SECURITY_NUMBER**\n\
            \nA US Social Security Number (SSN) is a nine-digit number that is issued\
            \ to US citizens, permanent residents, and temporary working residents.\n\
            \n  * **Canada specific**\n\n    * **CA_HEALTH_NUMBER**\n\nA Canadian\
            \ Health Service Number is a 10-digit unique identifier, required for\
            \ individuals to access healthcare benefits.\n\n    * **CA_SOCIAL_INSURANCE_NUMBER**\n\
            \nA Canadian Social Insurance Number (SIN) is a nine-digit unique identifier,\
            \ required for individuals to access government programs and benefits.\n\
            \nThe SIN is formatted as three groups of three digits, such as _123-456-789_.\
            \ A SIN can be validated through a simple check-digit process called the\
            \ [Luhn algorithm](https://www.wikipedia.org/wiki/Luhn_algorithm) .\n\n\
            \  * **UK Specific**\n\n    * **UK_NATIONAL_HEALTH_SERVICE_NUMBER**\n\n\
            A UK National Health Service Number is a 10-17 digit number, such as _485\
            \ 555 3456_. The current system formats the 10-digit number with spaces\
            \ after the third and sixth digits. The final digit is an error-detecting\
            \ checksum.\n\n    * **UK_NATIONAL_INSURANCE_NUMBER**\n\nA UK National\
            \ Insurance Number (NINO) provides individuals with access to National\
            \ Insurance (social security) benefits. It is also used for some purposes\
            \ in the UK tax system.\n\nThe number is nine digits long and starts with\
            \ two letters, followed by six numbers and one letter. A NINO can be formatted\
            \ with a space or a dash after the two letters and after the second, forth,\
            \ and sixth digits.\n\n    * **UK_UNIQUE_TAXPAYER_REFERENCE_NUMBER**\n\
            \nA UK Unique Taxpayer Reference (UTR) is a 10-digit number that identifies\
            \ a taxpayer or a business.\n\n  * **Custom**\n\n    * **Regex filter**\
            \ \\- You can use a regular expressions to define patterns for an AI Guardrail\
            \ to recognize and act upon such as serial number, booking ID etc.."
        action:
          allOf:
          - $ref: '#/components/schemas/GuardrailSensitiveInformationAction'
          description: Configure AI Guardrail's action when the PII entity is detected.
      required:
      - type
      - action
      description: The PII entity to configure for the AI Guardrail.
    GuardrailPiiEntityType:
      type: string
      enum:
      - ADDRESS
      - AGE
      - AWS_ACCESS_KEY
      - AWS_SECRET_KEY
      - CA_HEALTH_NUMBER
      - CA_SOCIAL_INSURANCE_NUMBER
      - CREDIT_DEBIT_CARD_CVV
      - CREDIT_DEBIT_CARD_EXPIRY
      - CREDIT_DEBIT_CARD_NUMBER
      - DRIVER_ID
      - EMAIL
      - INTERNATIONAL_BANK_ACCOUNT_NUMBER
      - IP_ADDRESS
      - LICENSE_PLATE
      - MAC_ADDRESS
      - NAME
      - PASSWORD
      - PHONE
      - PIN
      - SWIFT_CODE
      - UK_NATIONAL_HEALTH_SERVICE_NUMBER
      - UK_NATIONAL_INSURANCE_NUMBER
      - UK_UNIQUE_TAXPAYER_REFERENCE_NUMBER
      - URL
      - USERNAME
      - US_BANK_ACCOUNT_NUMBER
      - US_BANK_ROUTING_NUMBER
      - US_INDIVIDUAL_TAX_IDENTIFICATION_NUMBER
      - US_PASSPORT_NUMBER
      - US_SOCIAL_SECURITY_NUMBER
      - VEHICLE_IDENTIFICATION_NUMBER
    GuardrailRegexConfig:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/GuardrailRegexName'
          description: The name of the regular expression to configure for the AI
            Guardrail.
        description:
          allOf:
          - $ref: '#/components/schemas/GuardrailRegexDescription'
          description: The description of the regular expression to configure for
            the AI Guardrail.
        pattern:
          allOf:
          - $ref: '#/components/schemas/GuardrailRegexPattern'
          description: The regular expression pattern to configure for the AI Guardrail.
        action:
          allOf:
          - $ref: '#/components/schemas/GuardrailSensitiveInformationAction'
          description: The AI Guardrail action to configure when matching regular
            expression is detected.
      required:
      - name
      - pattern
      - action
      description: The regular expression to configure for the AI Guardrail.
    GuardrailRegexDescription:
      type: string
      minLength: 1
      maxLength: 1000
    GuardrailRegexName:
      type: string
      minLength: 1
      maxLength: 100
    GuardrailRegexPattern:
      type: string
      minLength: 1
    GuardrailRegexesConfig:
      type: array
      items:
        $ref: '#/components/schemas/GuardrailRegexConfig'
      description: List of regex.
    GuardrailSensitiveInformationAction:
      type: string
      enum:
      - BLOCK
      - ANONYMIZE
    GuardrailTopicConfig:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/GuardrailTopicName'
          description: The name of the topic to deny.
        definition:
          allOf:
          - $ref: '#/components/schemas/GuardrailTopicDefinition'
          description: A definition of the topic to deny.
        examples:
          allOf:
          - $ref: '#/components/schemas/GuardrailTopicExamples'
          description: A list of prompts, each of which is an example of a prompt
            that can be categorized as belonging to the topic.
        type:
          allOf:
          - $ref: '#/components/schemas/GuardrailTopicType'
          description: Specifies to deny the topic.
      required:
      - name
      - definition
      - type
      description: Details about topics for the AI Guardrail to identify and deny.
    GuardrailTopicDefinition:
      type: string
      minLength: 1
      maxLength: 200
    GuardrailTopicExample:
      type: string
      minLength: 1
      maxLength: 100
    GuardrailTopicExamples:
      type: array
      items:
        $ref: '#/components/schemas/GuardrailTopicExample'
      description: List of text examples
    GuardrailTopicName:
      type: string
      pattern: ^[0-9a-zA-Z-_ !?.]+$
      minLength: 1
      maxLength: 100
    GuardrailTopicType:
      type: string
      enum:
      - DENY
    GuardrailTopicsConfig:
      type: array
      items:
        $ref: '#/components/schemas/GuardrailTopicConfig'
      description: List of topic configs in topic policy.
    GuardrailWordConfig:
      type: object
      properties:
        text:
          allOf:
          - $ref: '#/components/schemas/GuardrailWordText'
          description: Text of the word configured for the AI Guardrail to block.
      required:
      - text
      description: A word to configure for the AI Guardrail.
    GuardrailWordText:
      type: string
      minLength: 1
    GuardrailWordsConfig:
      type: array
      items:
        $ref: '#/components/schemas/GuardrailWordConfig'
      description: List of custom word configs.
    Headers:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/NonEmptyString'
    HierarchicalChunkingConfiguration:
      type: object
      properties:
        levelConfigurations:
          allOf:
          - $ref: '#/components/schemas/HierarchicalChunkingLevelConfigurations'
          description: Token settings for each layer.
        overlapTokens:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of tokens to repeat across chunks in the same layer.
      required:
      - levelConfigurations
      - overlapTokens
      description: Settings for hierarchical document chunking for a data source.
        Hierarchical chunking splits documents into layers of chunks where the first
        layer contains large chunks, and the second layer contains smaller chunks
        derived from the first layer.
    HierarchicalChunkingLevelConfiguration:
      type: object
      properties:
        maxTokens:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The maximum number of tokens that a chunk can contain in this
            layer.
      required:
      - maxTokens
      description: Token settings for each layer.
    HierarchicalChunkingLevelConfigurations:
      type: array
      items:
        $ref: '#/components/schemas/HierarchicalChunkingLevelConfiguration'
    Highlight:
      type: object
      properties:
        beginOffsetInclusive:
          allOf:
          - $ref: '#/components/schemas/HighlightOffset'
          description: The offset for the start of the highlight.
        endOffsetExclusive:
          allOf:
          - $ref: '#/components/schemas/HighlightOffset'
          description: The offset for the end of the highlight.
      description: Offset specification to describe highlighting of document excerpts
        for rendering search results and recommendations.
    HighlightOffset:
      type: integer
      default: 0
    Highlights:
      type: array
      items:
        $ref: '#/components/schemas/Highlight'
    ImportJobData:
      type: object
      properties:
        importJobId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The identifier of the import job.
        knowledgeBaseId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The identifier of the knowledge base.
        uploadId:
          allOf:
          - $ref: '#/components/schemas/UploadId'
          description: A pointer to the uploaded asset. This value is returned by
            [StartContentUpload](https://docs.aws.amazon.com/wisdom/latest/APIReference/API_StartContentUpload.html).
        knowledgeBaseArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the knowledge base.
        importJobType:
          allOf:
          - $ref: '#/components/schemas/ImportJobType'
          description: The type of the import job.
        status:
          allOf:
          - $ref: '#/components/schemas/ImportJobStatus'
          description: The status of the import job.
        url:
          allOf:
          - $ref: '#/components/schemas/Url'
          description: The download link to the resource file that is uploaded to
            the import job.
        failedRecordReport:
          allOf:
          - $ref: '#/components/schemas/Url'
          description: The link to download the information of resource data that
            failed to be imported.
        urlExpiry:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The expiration time of the URL as an epoch timestamp.
        createdTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp when the import job was created.
        lastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp when the import job data was last modified.
        metadata:
          allOf:
          - $ref: '#/components/schemas/ContentMetadata'
          description: The metadata fields of the imported Amazon Q in Connect resources.
        externalSourceConfiguration:
          $ref: '#/components/schemas/ExternalSourceConfiguration'
      required:
      - importJobId
      - knowledgeBaseId
      - uploadId
      - knowledgeBaseArn
      - importJobType
      - status
      - url
      - urlExpiry
      - createdTime
      - lastModifiedTime
      description: Summary information about the import job.
    ImportJobList:
      type: array
      items:
        $ref: '#/components/schemas/ImportJobSummary'
    ImportJobStatus:
      type: string
      enum:
      - START_IN_PROGRESS
      - FAILED
      - COMPLETE
      - DELETE_IN_PROGRESS
      - DELETE_FAILED
      - DELETED
    ImportJobSummary:
      type: object
      properties:
        importJobId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The identifier of the import job.
        knowledgeBaseId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The identifier of the knowledge base.
        uploadId:
          allOf:
          - $ref: '#/components/schemas/UploadId'
          description: A pointer to the uploaded asset. This value is returned by
            [StartContentUpload](https://docs.aws.amazon.com/wisdom/latest/APIReference/API_StartContentUpload.html).
        knowledgeBaseArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the knowledge base.
        importJobType:
          allOf:
          - $ref: '#/components/schemas/ImportJobType'
          description: The type of import job.
        status:
          allOf:
          - $ref: '#/components/schemas/ImportJobStatus'
          description: The status of the import job.
        createdTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp when the import job was created.
        lastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp when the import job was last modified.
        metadata:
          allOf:
          - $ref: '#/components/schemas/ContentMetadata'
          description: The metadata fields of the imported Amazon Q in Connect resources.
        externalSourceConfiguration:
          allOf:
          - $ref: '#/components/schemas/ExternalSourceConfiguration'
          description: The configuration information of the external source that the
            resource data are imported from.
      required:
      - importJobId
      - knowledgeBaseId
      - uploadId
      - knowledgeBaseArn
      - importJobType
      - status
      - createdTime
      - lastModifiedTime
      description: Summary information about the import job.
    ImportJobType:
      type: string
      enum:
      - QUICK_RESPONSES
    IntentDetectedDataDetails:
      type: object
      properties:
        intent:
          allOf:
          - $ref: '#/components/schemas/SensitiveString'
          description: The detected intent.
        intentId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The identifier of the detected intent.
      required:
      - intent
      - intentId
      description: Details about the detected intent.
    IntentInputData:
      type: object
      properties:
        intentId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The identifier of the Amazon Q intent.
      required:
      - intentId
      description: Information about the Amazon Q intent.
    KnowledgeBaseAssociationConfigurationData:
      type: object
      properties:
        contentTagFilter:
          $ref: '#/components/schemas/TagFilter'
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return per page.
        overrideKnowledgeBaseSearchType:
          allOf:
          - $ref: '#/components/schemas/KnowledgeBaseSearchType'
          description: The search type to be used against the Knowledge Base for this
            request. The values can be `SEMANTIC` which uses vector embeddings or
            `HYBRID` which use vector embeddings and raw text
      description: The data of the configuration for a `KNOWLEDGE_BASE` type Amazon
        Q in Connect Assistant Association.
    KnowledgeBaseAssociationData:
      type: object
      properties:
        knowledgeBaseId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The identifier of the knowledge base.
        knowledgeBaseArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the knowledge base.
      description: Association information about the knowledge base.
    KnowledgeBaseData:
      type: object
      properties:
        knowledgeBaseId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The identifier of the knowledge base.
        knowledgeBaseArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the knowledge base.
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the knowledge base.
        knowledgeBaseType:
          allOf:
          - $ref: '#/components/schemas/KnowledgeBaseType'
          description: The type of knowledge base.
        status:
          allOf:
          - $ref: '#/components/schemas/KnowledgeBaseStatus'
          description: The status of the knowledge base.
        lastContentModificationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: An epoch timestamp indicating the most recent content modification
            inside the knowledge base. If no content exists in a knowledge base, this
            value is unset.
        vectorIngestionConfiguration:
          allOf:
          - $ref: '#/components/schemas/VectorIngestionConfiguration'
          description: Contains details about how to ingest the documents in a data
            source.
        sourceConfiguration:
          allOf:
          - $ref: '#/components/schemas/SourceConfiguration'
          description: Source configuration information about the knowledge base.
        renderingConfiguration:
          allOf:
          - $ref: '#/components/schemas/RenderingConfiguration'
          description: Information about how to render the content.
        serverSideEncryptionConfiguration:
          allOf:
          - $ref: '#/components/schemas/ServerSideEncryptionConfiguration'
          description: 'The configuration information for the customer managed key
            used for encryption.


            This KMS key must have a policy that allows `kms:CreateGrant`, `kms:DescribeKey`,
            `kms:Decrypt`, and `kms:GenerateDataKey*` permissions to the IAM identity
            using the key to invoke Amazon Q in Connect.


            For more information about setting up a customer managed key for Amazon
            Q in Connect, see [Enable Amazon Q in Connect for your instance](https://docs.aws.amazon.com/connect/latest/adminguide/enable-q.html).'
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: The description.
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: The tags used to organize, track, or control access for this
            resource.
        ingestionStatus:
          allOf:
          - $ref: '#/components/schemas/SyncStatus'
          description: Status of ingestion on data source.
        ingestionFailureReasons:
          allOf:
          - $ref: '#/components/schemas/FailureReason'
          description: List of failure reasons on ingestion per file.
      required:
      - knowledgeBaseId
      - knowledgeBaseArn
      - name
      - knowledgeBaseType
      - status
      description: Information about the knowledge base.
    KnowledgeBaseList:
      type: array
      items:
        $ref: '#/components/schemas/KnowledgeBaseSummary'
    KnowledgeBaseSearchType:
      type: string
      enum:
      - HYBRID
      - SEMANTIC
    KnowledgeBaseStatus:
      type: string
      enum:
      - CREATE_IN_PROGRESS
      - CREATE_FAILED
      - ACTIVE
      - DELETE_IN_PROGRESS
      - DELETE_FAILED
      - DELETED
    KnowledgeBaseSummary:
      type: object
      properties:
        knowledgeBaseId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The identifier of the knowledge base.
        knowledgeBaseArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the knowledge base.
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the knowledge base.
        knowledgeBaseType:
          allOf:
          - $ref: '#/components/schemas/KnowledgeBaseType'
          description: The type of knowledge base.
        status:
          allOf:
          - $ref: '#/components/schemas/KnowledgeBaseStatus'
          description: The status of the knowledge base summary.
        sourceConfiguration:
          allOf:
          - $ref: '#/components/schemas/SourceConfiguration'
          description: Configuration information about the external data source.
        vectorIngestionConfiguration:
          allOf:
          - $ref: '#/components/schemas/VectorIngestionConfiguration'
          description: Contains details about how to ingest the documents in a data
            source.
        renderingConfiguration:
          allOf:
          - $ref: '#/components/schemas/RenderingConfiguration'
          description: Information about how to render the content.
        serverSideEncryptionConfiguration:
          allOf:
          - $ref: '#/components/schemas/ServerSideEncryptionConfiguration'
          description: 'The configuration information for the customer managed key
            used for encryption.


            This KMS key must have a policy that allows `kms:CreateGrant`, `kms:DescribeKey`,
            `kms:Decrypt`, and `kms:GenerateDataKey*` permissions to the IAM identity
            using the key to invoke Amazon Q in Connect.


            For more information about setting up a customer managed key for Amazon
            Q in Connect, see [Enable Amazon Q in Connect for your instance](https://docs.aws.amazon.com/connect/latest/adminguide/enable-q.html).'
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: The description of the knowledge base.
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: The tags used to organize, track, or control access for this
            resource.
      required:
      - knowledgeBaseId
      - knowledgeBaseArn
      - name
      - knowledgeBaseType
      - status
      description: Summary information about the knowledge base.
    KnowledgeBaseType:
      type: string
      enum:
      - EXTERNAL
      - CUSTOM
      - QUICK_RESPONSES
      - MESSAGE_TEMPLATES
      - MANAGED
    LanguageCode:
      type: string
      minLength: 2
      maxLength: 5
    ListAIAgentVersionsRequest:
      type: object
      properties:
        assistantId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the Amazon Q in Connect assistant. Can be
            either the ID or the ARN. URLs cannot contain the ARN.
        aiAgentId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArnOrEitherWithQualifier'
          description: The identifier of the Amazon Q in Connect AI Agent for which
            versions are to be listed.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return per page.
        origin:
          allOf:
          - $ref: '#/components/schemas/Origin'
          description: The origin of the AI Agent versions to be listed. `SYSTEM`
            for a default AI Agent created by Q in Connect or `CUSTOMER` for an AI
            Agent created by calling AI Agent creation APIs.
      required:
      - assistantId
      - aiAgentId
    ListAIAgentVersionsResponse:
      type: object
      properties:
        aiAgentVersionSummaries:
          allOf:
          - $ref: '#/components/schemas/AIAgentVersionSummariesList'
          description: The summaries of AI Agent versions.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.
      required:
      - aiAgentVersionSummaries
    ListAIAgentsRequest:
      type: object
      properties:
        assistantId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the Amazon Q in Connect assistant. Can be
            either the ID or the ARN. URLs cannot contain the ARN.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return per page.
        origin:
          allOf:
          - $ref: '#/components/schemas/Origin'
          description: The origin of the AI Agents to be listed. `SYSTEM` for a default
            AI Agent created by Q in Connect or `CUSTOMER` for an AI Agent created
            by calling AI Agent creation APIs.
      required:
      - assistantId
    ListAIAgentsResponse:
      type: object
      properties:
        aiAgentSummaries:
          allOf:
          - $ref: '#/components/schemas/AIAgentSummaryList'
          description: The summaries of AI Agents.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.
      required:
      - aiAgentSummaries
    ListAIGuardrailVersionsRequest:
      type: object
      properties:
        assistantId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the Amazon Q in Connect assistant. Can be
            either the ID or the ARN. URLs cannot contain the ARN.
        aiGuardrailId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArnOrEitherWithQualifier'
          description: The identifier of the Amazon Q in Connect AI Guardrail for
            which versions are to be listed.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return per page.
      required:
      - assistantId
      - aiGuardrailId
    ListAIGuardrailVersionsResponse:
      type: object
      properties:
        aiGuardrailVersionSummaries:
          allOf:
          - $ref: '#/components/schemas/AIGuardrailVersionSummariesList'
          description: The summaries of the AI Guardrail versions.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.
      required:
      - aiGuardrailVersionSummaries
    ListAIGuardrailsRequest:
      type: object
      properties:
        assistantId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the Amazon Q in Connect assistant. Can be
            either the ID or the ARN. URLs cannot contain the ARN.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return per page.
      required:
      - assistantId
    ListAIGuardrailsResponse:
      type: object
      properties:
        aiGuardrailSummaries:
          allOf:
          - $ref: '#/components/schemas/AIGuardrailSummariesList'
          description: The summaries of the AI Guardrails.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.
      required:
      - aiGuardrailSummaries
    ListAIPromptVersionsRequest:
      type: object
      properties:
        assistantId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the Amazon Q in Connect assistant. Can be
            either the ID or the ARN. URLs cannot contain the ARN.
        aiPromptId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArnOrEitherWithQualifier'
          description: The identifier of the Amazon Q in Connect AI prompt for which
            versions are to be listed.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return per page.
        origin:
          allOf:
          - $ref: '#/components/schemas/Origin'
          description: The origin of the AI Prompt versions to be listed. `SYSTEM`
            for a default AI Agent created by Q in Connect or `CUSTOMER` for an AI
            Agent created by calling AI Agent creation APIs.
      required:
      - assistantId
      - aiPromptId
    ListAIPromptVersionsResponse:
      type: object
      properties:
        aiPromptVersionSummaries:
          allOf:
          - $ref: '#/components/schemas/AIPromptVersionSummariesList'
          description: The summaries of the AI Prompt versions.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.
      required:
      - aiPromptVersionSummaries
    ListAIPromptsRequest:
      type: object
      properties:
        assistantId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the Amazon Q in Connect assistant. Can be
            either the ID or the ARN. URLs cannot contain the ARN.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return per page.
        origin:
          allOf:
          - $ref: '#/components/schemas/Origin'
          description: The origin of the AI Prompts to be listed. `SYSTEM` for a default
            AI Agent created by Q in Connect or `CUSTOMER` for an AI Agent created
            by calling AI Agent creation APIs.
      required:
      - assistantId
    ListAIPromptsResponse:
      type: object
      properties:
        aiPromptSummaries:
          allOf:
          - $ref: '#/components/schemas/AIPromptSummaryList'
          description: The summaries of the AI Prompts.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.
      required:
      - aiPromptSummaries
    ListAssistantAssociationsRequest:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return per page.
        assistantId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the Amazon Q in Connect assistant. Can be
            either the ID or the ARN. URLs cannot contain the ARN.
      required:
      - assistantId
    ListAssistantAssociationsResponse:
      type: object
      properties:
        assistantAssociationSummaries:
          allOf:
          - $ref: '#/components/schemas/AssistantAssociationSummaryList'
          description: Summary information about assistant associations.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If there are additional results, this is the token for the
            next set of results.
      required:
      - assistantAssociationSummaries
    ListAssistantsRequest:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return per page.
    ListAssistantsResponse:
      type: object
      properties:
        assistantSummaries:
          allOf:
          - $ref: '#/components/schemas/AssistantList'
          description: Information about the assistants.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If there are additional results, this is the token for the
            next set of results.
      required:
      - assistantSummaries
    ListContentAssociationsRequest:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return per page.
        knowledgeBaseId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the knowledge base.
        contentId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the content.
      required:
      - knowledgeBaseId
      - contentId
    ListContentAssociationsResponse:
      type: object
      properties:
        contentAssociationSummaries:
          allOf:
          - $ref: '#/components/schemas/ContentAssociationSummaryList'
          description: Summary information about content associations.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If there are additional results, this is the token for the
            next set of results.
      required:
      - contentAssociationSummaries
    ListContentsRequest:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return per page.
        knowledgeBaseId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the knowledge base. This should not be a
            QUICK_RESPONSES type knowledge base. Can be either the ID or the ARN.
            URLs cannot contain the ARN.
      required:
      - knowledgeBaseId
    ListContentsResponse:
      type: object
      properties:
        contentSummaries:
          allOf:
          - $ref: '#/components/schemas/ContentSummaryList'
          description: Information about the content.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If there are additional results, this is the token for the
            next set of results.
      required:
      - contentSummaries
    ListImportJobsRequest:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return per page.
        knowledgeBaseId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the knowledge base. Can be either the ID
            or the ARN. URLs cannot contain the ARN.
      required:
      - knowledgeBaseId
    ListImportJobsResponse:
      type: object
      properties:
        importJobSummaries:
          allOf:
          - $ref: '#/components/schemas/ImportJobList'
          description: Summary information about the import jobs.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.
      required:
      - importJobSummaries
    ListKnowledgeBasesRequest:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return per page.
    ListKnowledgeBasesResponse:
      type: object
      properties:
        knowledgeBaseSummaries:
          allOf:
          - $ref: '#/components/schemas/KnowledgeBaseList'
          description: Information about the knowledge bases.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: If there are additional results, this is the token for the
            next set of results.
      required:
      - knowledgeBaseSummaries
    ListMessageTemplateVersionsRequest:
      type: object
      properties:
        knowledgeBaseId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the knowledge base. Can be either the ID
            or the ARN. URLs cannot contain the ARN.
        messageTemplateId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArnOrEitherWithQualifier'
          description: The identifier of the message template. Can be either the ID
            or the ARN. It cannot contain any qualifier.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return per page.
      required:
      - knowledgeBaseId
      - messageTemplateId
    ListMessageTemplateVersionsResponse:
      type: object
      properties:
        messageTemplateVersionSummaries:
          allOf:
          - $ref: '#/components/schemas/MessageTemplateVersionSummaryList'
          description: Summary information about the versions of a message template.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If there are additional results, this is the token for the
            next set of results.
      required:
      - messageTemplateVersionSummaries
    ListMessageTemplatesRequest:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return per page.
        knowledgeBaseId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the knowledge base. Can be either the ID
            or the ARN. URLs cannot contain the ARN.
      required:
      - knowledgeBaseId
    ListMessageTemplatesResponse:
      type: object
      properties:
        messageTemplateSummaries:
          allOf:
          - $ref: '#/components/schemas/MessageTemplateSummaryList'
          description: Summary information about the message template.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If there are additional results, this is the token for the
            next set of results.
      required:
      - messageTemplateSummaries
    ListMessagesRequest:
      type: object
      properties:
        assistantId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the Amazon Q in Connect assistant.
        sessionId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the Amazon Q in Connect session.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return per page.
      required:
      - assistantId
      - sessionId
    ListMessagesResponse:
      type: object
      properties:
        messages:
          allOf:
          - $ref: '#/components/schemas/MessageList'
          description: The message information.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.
      required:
      - messages
    ListQuickResponsesRequest:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return per page.
        knowledgeBaseId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the knowledge base. Can be either the ID
            or the ARN. URLs cannot contain the ARN.
      required:
      - knowledgeBaseId
    ListQuickResponsesResponse:
      type: object
      properties:
        quickResponseSummaries:
          allOf:
          - $ref: '#/components/schemas/QuickResponseSummaryList'
          description: Summary information about the quick responses.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.
      required:
      - quickResponseSummaries
    ListTagsForResourceRequest:
      type: object
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the resource.
      required:
      - resourceArn
    ListTagsForResourceResponse:
      type: object
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: The tags used to organize, track, or control access for this
            resource.
    LlmModelId:
      type: string
      minLength: 1
      maxLength: 128
    ManagedSourceConfiguration:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/WebCrawlerConfiguration'
        description: |-
          Configuration data for web crawler data source.
      description: |-
        Source configuration for managed resources.
    ManualSearchAIAgentConfiguration:
      type: object
      properties:
        answerGenerationAIPromptId:
          allOf:
          - $ref: '#/components/schemas/UuidWithQualifier'
          description: The AI Prompt identifier for the Answer Generation prompt used
            by the MANUAL_SEARCH AI Agent.
        answerGenerationAIGuardrailId:
          allOf:
          - $ref: '#/components/schemas/UuidWithQualifier'
          description: The AI Guardrail identifier for the Answer Generation guardrail
            used by the MANUAL_SEARCH AI Agent.
        associationConfigurations:
          allOf:
          - $ref: '#/components/schemas/AssociationConfigurationList'
          description: The association configurations for overriding behavior on this
            AI Agent.
        locale:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The locale to which specifies the language and region settings
            that determine the response language for [QueryAssistant](https://docs.aws.amazon.com/connect/latest/APIReference/API_amazon-q-connect_QueryAssistant.html).
      description: The configuration for the `MANUAL_SEARCH` AI Agent type.
    MaxResults:
      type: integer
      minimum: 1
      maximum: 100
    MessageConfiguration:
      type: object
      properties:
        generateFillerMessage:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Generates a filler response when tool selection is `QUESTION`.
      description: The configuration for a [SendMessage](https://docs.aws.amazon.com/connect/latest/APIReference/API_amazon-q-connect_SendMessage.html)
        request.
    MessageData:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/TextMessage'
        description: |-
          The message data in text type.
      description: |-
        The message data.
    MessageInput:
      type: object
      properties:
        value:
          allOf:
          - $ref: '#/components/schemas/MessageData'
          description: The message input value.
      required:
      - value
      description: The message input.
    MessageList:
      type: array
      items:
        $ref: '#/components/schemas/MessageOutput'
    MessageOutput:
      type: object
      properties:
        value:
          allOf:
          - $ref: '#/components/schemas/MessageData'
          description: The value of a message data.
        messageId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The identifier of a message.
        participant:
          allOf:
          - $ref: '#/components/schemas/Participant'
          description: The participant of a message.
        timestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp of a message.
      required:
      - value
      - messageId
      - participant
      - timestamp
      description: The message output.
    MessageTemplateAttachment:
      type: object
      properties:
        contentDisposition:
          allOf:
          - $ref: '#/components/schemas/ContentDisposition'
          description: The presentation information for the attachment file.
        name:
          allOf:
          - $ref: '#/components/schemas/AttachmentFileName'
          description: The name of the attachment file being uploaded. The name should
            include the file extension.
        uploadedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp when the attachment file was uploaded.
        url:
          allOf:
          - $ref: '#/components/schemas/Url'
          description: A pre-signed Amazon S3 URL that can be used to download the
            attachment file.
        urlExpiry:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The expiration time of the pre-signed Amazon S3 URL.
        attachmentId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The identifier of the attachment file.
      required:
      - contentDisposition
      - name
      - uploadedTime
      - url
      - urlExpiry
      - attachmentId
      description: Information about the message template attachment.
    MessageTemplateAttachmentList:
      type: array
      items:
        $ref: '#/components/schemas/MessageTemplateAttachment'
    MessageTemplateAttributeKey:
      type: string
      minLength: 1
      maxLength: 32767
    MessageTemplateAttributeKeyList:
      type: array
      items:
        $ref: '#/components/schemas/MessageTemplateAttributeKey'
      x-sensitive: true
    MessageTemplateAttributeType:
      type: string
      enum:
      - SYSTEM
      - AGENT
      - CUSTOMER_PROFILE
      - CUSTOM
    MessageTemplateAttributeTypeList:
      type: array
      items:
        $ref: '#/components/schemas/MessageTemplateAttributeType'
    MessageTemplateAttributeValue:
      type: string
      minLength: 1
      maxLength: 32767
    MessageTemplateAttributes:
      type: object
      properties:
        systemAttributes:
          allOf:
          - $ref: '#/components/schemas/SystemAttributes'
          description: The system attributes that are used with the message template.
        agentAttributes:
          allOf:
          - $ref: '#/components/schemas/AgentAttributes'
          description: The agent attributes that are used with the message template.
        customerProfileAttributes:
          allOf:
          - $ref: '#/components/schemas/CustomerProfileAttributes'
          description: The customer profile attributes that are used with the message
            template.
        customAttributes:
          allOf:
          - $ref: '#/components/schemas/CustomAttributes'
          description: The custom attributes that are used with the message template.
      description: The attributes that are used with the message template.
    MessageTemplateBodyContentProvider:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/NonEmptyUnlimitedString'
        description: |-
          The content of the message template.
      description: |-
        The container of the message template body.
    MessageTemplateContentProvider:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/EmailMessageTemplateContent'
        description: |-
          The content of the message template that applies to the email channel subtype.
      - allOf:
        - $ref: '#/components/schemas/SMSMessageTemplateContent'
        description: |-
          The content of the message template that applies to the SMS channel subtype.
      description: |-
        The container of message template content.
    MessageTemplateContentSha256:
      type: string
      pattern: ^[a-zA-Z0-9]+$
      minLength: 1
      maxLength: 64
    MessageTemplateData:
      type: object
      properties:
        messageTemplateArn:
          allOf:
          - $ref: '#/components/schemas/ArnWithQualifier'
          description: The Amazon Resource Name (ARN) of the message template.
        messageTemplateId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The identifier of the message template.
        knowledgeBaseArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the knowledge base.
        knowledgeBaseId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The identifier of the knowledge base.
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the message template.
        channelSubtype:
          allOf:
          - $ref: '#/components/schemas/ChannelSubtype'
          description: The channel subtype this message template applies to.
        createdTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp when the message template was created.
        lastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp when the message template data was last modified.
        lastModifiedBy:
          allOf:
          - $ref: '#/components/schemas/GenericArn'
          description: The Amazon Resource Name (ARN) of the user who last updated
            the message template data.
        content:
          allOf:
          - $ref: '#/components/schemas/MessageTemplateContentProvider'
          description: The content of the message template.
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: The description of the message template.
        language:
          allOf:
          - $ref: '#/components/schemas/LanguageCode'
          description: The language code value for the language in which the quick
            response is written. The supported language codes include `de_DE`, `en_US`,
            `es_ES`, `fr_FR`, `id_ID`, `it_IT`, `ja_JP`, `ko_KR`, `pt_BR`, `zh_CN`,
            `zh_TW`
        groupingConfiguration:
          $ref: '#/components/schemas/GroupingConfiguration'
        defaultAttributes:
          allOf:
          - $ref: '#/components/schemas/MessageTemplateAttributes'
          description: An object that specifies the default values to use for variables
            in the message template. This object contains different categories of
            key-value pairs. Each key defines a variable or placeholder in the message
            template. The corresponding value defines the default value for that variable.
        attributeTypes:
          allOf:
          - $ref: '#/components/schemas/MessageTemplateAttributeTypeList'
          description: The types of attributes that the message template contains.
        messageTemplateContentSha256:
          allOf:
          - $ref: '#/components/schemas/MessageTemplateContentSha256'
          description: The checksum value of the message template content that is
            referenced by the `$LATEST` qualifier. It can be returned in `MessageTemplateData`
            or `ExtendedMessageTemplateData`. It’s calculated by content, language,
            `defaultAttributes` and `Attachments` of the message template.
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: The tags used to organize, track, or control access for this
            resource.
      required:
      - messageTemplateArn
      - messageTemplateId
      - knowledgeBaseArn
      - knowledgeBaseId
      - name
      - channelSubtype
      - createdTime
      - lastModifiedTime
      - lastModifiedBy
      - content
      - messageTemplateContentSha256
      description: The data of a message template.
    MessageTemplateFilterField:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the attribute field to filter the message templates
            by.
        values:
          allOf:
          - $ref: '#/components/schemas/MessageTemplateFilterValueList'
          description: The values of attribute field to filter the message template
            by.
        operator:
          allOf:
          - $ref: '#/components/schemas/MessageTemplateFilterOperator'
          description: The operator to use for filtering.
        includeNoExistence:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether to treat null value as a match for the attribute field.
      required:
      - name
      - operator
      description: "The message template fields to filter the message template query\
        \ results by. The following is the list of supported field names:\n\n  * name\n\
        \n  * description\n\n  * channel\n\n  * channelSubtype\n\n  * language\n\n\
        \  * qualifier\n\n  * createdTime\n\n  * lastModifiedTime\n\n  * lastModifiedBy\n\
        \n  * groupingConfiguration.criteria\n\n  * groupingConfiguration.values"
    MessageTemplateFilterFieldList:
      type: array
      items:
        $ref: '#/components/schemas/MessageTemplateFilterField'
    MessageTemplateFilterOperator:
      type: string
      enum:
      - EQUALS
      - PREFIX
    MessageTemplateFilterValue:
      type: string
      minLength: 1
      maxLength: 2048
    MessageTemplateFilterValueList:
      type: array
      items:
        $ref: '#/components/schemas/MessageTemplateFilterValue'
    MessageTemplateOrderField:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the message template.
        order:
          allOf:
          - $ref: '#/components/schemas/Order'
          description: The order at which the message templates are sorted by.
      required:
      - name
      description: "The message template fields to order the message template query\
        \ results by. The following is the list of supported field names:\n\n  * name\n\
        \n  * description\n\n  * channel\n\n  * channelSubtype\n\n  * language\n\n\
        \  * qualifier\n\n  * createdTime\n\n  * lastModifiedTime\n\n  * lastModifiedBy\n\
        \n  * groupingConfiguration.criteria\n\n  * groupingConfiguration.values"
    MessageTemplateQueryField:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the attribute to query the message templates by.
        values:
          allOf:
          - $ref: '#/components/schemas/MessageTemplateQueryValueList'
          description: The values of the attribute to query the message templates
            by.
        operator:
          allOf:
          - $ref: '#/components/schemas/MessageTemplateQueryOperator'
          description: The operator to use for matching attribute field values in
            the query.
        allowFuzziness:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether the query expects only exact matches on the attribute
            field values. The results of the query will only include exact matches
            if this parameter is set to false.
        priority:
          allOf:
          - $ref: '#/components/schemas/Priority'
          description: The importance of the attribute field when calculating query
            result relevancy scores. The value set for this parameter affects the
            ordering of search results.
      required:
      - name
      - values
      - operator
      description: "The message template fields to query message templates by. The\
        \ following is the list of supported field names:\n\n  * name\n\n  * description"
    MessageTemplateQueryFieldList:
      type: array
      items:
        $ref: '#/components/schemas/MessageTemplateQueryField'
    MessageTemplateQueryOperator:
      type: string
      enum:
      - CONTAINS
      - CONTAINS_AND_PREFIX
    MessageTemplateQueryValue:
      type: string
      minLength: 1
      maxLength: 1024
    MessageTemplateQueryValueList:
      type: array
      items:
        $ref: '#/components/schemas/MessageTemplateQueryValue'
    MessageTemplateSearchExpression:
      type: object
      properties:
        queries:
          allOf:
          - $ref: '#/components/schemas/MessageTemplateQueryFieldList'
          description: The message template query expressions.
        filters:
          allOf:
          - $ref: '#/components/schemas/MessageTemplateFilterFieldList'
          description: The configuration of filtering rules applied to message template
            query results.
        orderOnField:
          allOf:
          - $ref: '#/components/schemas/MessageTemplateOrderField'
          description: The message template attribute fields on which the query results
            are ordered.
      description: The search expression of the message template.
    MessageTemplateSearchResultData:
      type: object
      properties:
        messageTemplateArn:
          allOf:
          - $ref: '#/components/schemas/ArnWithQualifier'
          description: The Amazon Resource Name (ARN) of the message template.
        messageTemplateId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The identifier of the message template.
        knowledgeBaseArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the knowledge base.
        knowledgeBaseId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The identifier of the knowledge base.
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the message template.
        channelSubtype:
          allOf:
          - $ref: '#/components/schemas/ChannelSubtype'
          description: The channel subtype this message template applies to.
        createdTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp when the message template was created.
        lastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp when the message template data was last modified.
        lastModifiedBy:
          allOf:
          - $ref: '#/components/schemas/GenericArn'
          description: The Amazon Resource Name (ARN) of the user who last updated
            the message template data.
        isActive:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether the version of the message template is activated.
        versionNumber:
          allOf:
          - $ref: '#/components/schemas/Version'
          description: The version number of the message template version.
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: The description of the message template.
        groupingConfiguration:
          $ref: '#/components/schemas/GroupingConfiguration'
        language:
          allOf:
          - $ref: '#/components/schemas/LanguageCode'
          description: The language code value for the language in which the quick
            response is written. The supported language codes include `de_DE`, `en_US`,
            `es_ES`, `fr_FR`, `id_ID`, `it_IT`, `ja_JP`, `ko_KR`, `pt_BR`, `zh_CN`,
            `zh_TW`
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: The tags used to organize, track, or control access for this
            resource.
      required:
      - messageTemplateArn
      - messageTemplateId
      - knowledgeBaseArn
      - knowledgeBaseId
      - name
      - channelSubtype
      - createdTime
      - lastModifiedTime
      - lastModifiedBy
      description: The result of message template search.
    MessageTemplateSearchResultsList:
      type: array
      items:
        $ref: '#/components/schemas/MessageTemplateSearchResultData'
    MessageTemplateSummary:
      type: object
      properties:
        messageTemplateArn:
          allOf:
          - $ref: '#/components/schemas/ArnWithQualifier'
          description: The Amazon Resource Name (ARN) of the message template.
        messageTemplateId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The identifier of the message template.
        knowledgeBaseArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the knowledge base.
        knowledgeBaseId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The identifier of the knowledge base.
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the message template.
        channelSubtype:
          allOf:
          - $ref: '#/components/schemas/ChannelSubtype'
          description: The channel subtype this message template applies to.
        createdTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp when the message template was created.
        lastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp when the message template data was last modified.
        lastModifiedBy:
          allOf:
          - $ref: '#/components/schemas/GenericArn'
          description: The Amazon Resource Name (ARN) of the user who last updated
            the message template data.
        activeVersionNumber:
          allOf:
          - $ref: '#/components/schemas/Version'
          description: The version number of the message template version that is
            activated.
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: The description of the message template.
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: The tags used to organize, track, or control access for this
            resource.
      required:
      - messageTemplateArn
      - messageTemplateId
      - knowledgeBaseArn
      - knowledgeBaseId
      - name
      - channelSubtype
      - createdTime
      - lastModifiedTime
      - lastModifiedBy
      description: The summary of the message template.
    MessageTemplateSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/MessageTemplateSummary'
    MessageTemplateVersionSummary:
      type: object
      properties:
        messageTemplateArn:
          allOf:
          - $ref: '#/components/schemas/ArnWithQualifier'
          description: The Amazon Resource Name (ARN) of the message template.
        messageTemplateId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The identifier of the message template.
        knowledgeBaseArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the knowledge base.
        knowledgeBaseId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The identifier of the knowledge base.
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the message template.
        channelSubtype:
          allOf:
          - $ref: '#/components/schemas/ChannelSubtype'
          description: The channel subtype this message template applies to.
        isActive:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether the version of the message template is activated.
        versionNumber:
          allOf:
          - $ref: '#/components/schemas/Version'
          description: The version number of the message template version.
      required:
      - messageTemplateArn
      - messageTemplateId
      - knowledgeBaseArn
      - knowledgeBaseId
      - name
      - channelSubtype
      - isActive
      - versionNumber
      description: The summary of the message template version.
    MessageTemplateVersionSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/MessageTemplateVersionSummary'
    MessageType:
      type: string
      enum:
      - TEXT
    Name:
      type: string
      pattern: ^[a-zA-Z0-9\s_.,-]+
      minLength: 1
      maxLength: 255
    NextToken:
      type: string
      minLength: 1
      maxLength: 2048
    NonEmptySensitiveString:
      type: string
      minLength: 1
      maxLength: 4096
    NonEmptyString:
      type: string
      minLength: 1
      maxLength: 4096
    NonEmptyUnlimitedString:
      type: string
      minLength: 1
    NotifyRecommendationsReceivedError:
      type: object
      properties:
        recommendationId:
          allOf:
          - $ref: '#/components/schemas/RecommendationId'
          description: The identifier of the recommendation that is in error.
        message:
          allOf:
          - $ref: '#/components/schemas/NotifyRecommendationsReceivedErrorMessage'
          description: A recommendation is causing an error.
      description: An error occurred when creating a recommendation.
    NotifyRecommendationsReceivedErrorList:
      type: array
      items:
        $ref: '#/components/schemas/NotifyRecommendationsReceivedError'
    NotifyRecommendationsReceivedErrorMessage:
      type: string
    NotifyRecommendationsReceivedRequest:
      type: object
      properties:
        assistantId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the Amazon Q in Connect assistant. Can be
            either the ID or the ARN. URLs cannot contain the ARN.
        sessionId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the session. Can be either the ID or the
            ARN. URLs cannot contain the ARN.
        recommendationIds:
          allOf:
          - $ref: '#/components/schemas/RecommendationIdList'
          description: The identifiers of the recommendations.
      required:
      - assistantId
      - sessionId
      - recommendationIds
    NotifyRecommendationsReceivedResponse:
      type: object
      properties:
        recommendationIds:
          allOf:
          - $ref: '#/components/schemas/RecommendationIdList'
          description: The identifiers of the recommendations.
        errors:
          allOf:
          - $ref: '#/components/schemas/NotifyRecommendationsReceivedErrorList'
          description: The identifiers of recommendations that are causing errors.
    ObjectFieldsList:
      type: array
      items:
        $ref: '#/components/schemas/NonEmptyString'
    OrCondition:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/AndConditions'
        description: |-
          A list of conditions which would be applied together with an `AND` condition.
      - allOf:
        - $ref: '#/components/schemas/TagCondition'
        description: |-
          A leaf node condition which can be used to specify a tag condition.
      description: |-
        A list of conditions which would be applied together with an `OR` condition.
    OrConditions:
      type: array
      items:
        $ref: '#/components/schemas/OrCondition'
    Order:
      type: string
      enum:
      - ASC
      - DESC
    Origin:
      type: string
      enum:
      - SYSTEM
      - CUSTOMER
    ParsingConfiguration:
      type: object
      properties:
        parsingStrategy:
          allOf:
          - $ref: '#/components/schemas/ParsingStrategy'
          description: The parsing strategy for the data source.
        bedrockFoundationModelConfiguration:
          allOf:
          - $ref: '#/components/schemas/BedrockFoundationModelConfigurationForParsing'
          description: Settings for a foundation model used to parse documents for
            a data source.
      required:
      - parsingStrategy
      description: Settings for parsing document contents. By default, the service
        converts the contents of each document into text before splitting it into
        chunks. To improve processing of PDF files with tables and images, you can
        configure the data source to convert the pages of text into images and use
        a model to describe the contents of each page.
    ParsingPrompt:
      type: object
      properties:
        parsingPromptText:
          allOf:
          - $ref: '#/components/schemas/ParsingPromptText'
          description: Instructions for interpreting the contents of a document.
      required:
      - parsingPromptText
      description: Instructions for interpreting the contents of a document.
    ParsingPromptText:
      type: string
      minLength: 1
      maxLength: 10000
    ParsingStrategy:
      type: string
      enum:
      - BEDROCK_FOUNDATION_MODEL
    Participant:
      type: string
      enum:
      - CUSTOMER
      - AGENT
      - BOT
    PreconditionFailedException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      description: The provided `revisionId` does not match, indicating the content
        has been modified since it was last read.
    Priority:
      type: string
      enum:
      - HIGH
      - MEDIUM
      - LOW
    PutFeedbackRequest:
      type: object
      properties:
        assistantId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the Amazon Q in Connect assistant.
        targetId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The identifier of the feedback target.
        targetType:
          allOf:
          - $ref: '#/components/schemas/TargetType'
          description: The type of the feedback target.
        contentFeedback:
          allOf:
          - $ref: '#/components/schemas/ContentFeedbackData'
          description: Information about the feedback provided.
      required:
      - assistantId
      - targetId
      - targetType
      - contentFeedback
    PutFeedbackResponse:
      type: object
      properties:
        assistantId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The identifier of the Amazon Q in Connect assistant.
        assistantArn:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The Amazon Resource Name (ARN) of the Amazon Q in Connect assistant.
        targetId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The identifier of the feedback target.
        targetType:
          allOf:
          - $ref: '#/components/schemas/TargetType'
          description: The type of the feedback target.
        contentFeedback:
          allOf:
          - $ref: '#/components/schemas/ContentFeedbackData'
          description: Information about the feedback provided.
      required:
      - assistantId
      - assistantArn
      - targetId
      - targetType
      - contentFeedback
    QueryAssistantRequest:
      type: object
      properties:
        assistantId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the Amazon Q in Connect assistant. Can be
            either the ID or the ARN. URLs cannot contain the ARN.
        queryText:
          allOf:
          - $ref: '#/components/schemas/QueryText'
          description: The text to search for.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return per page.
        sessionId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the Amazon Q in Connect session. Can be either
            the ID or the ARN. URLs cannot contain the ARN.
        queryCondition:
          allOf:
          - $ref: '#/components/schemas/QueryConditionExpression'
          description: Information about how to query content.
        queryInputData:
          allOf:
          - $ref: '#/components/schemas/QueryInputData'
          description: Information about the query.
        overrideKnowledgeBaseSearchType:
          allOf:
          - $ref: '#/components/schemas/KnowledgeBaseSearchType'
          description: The search type to be used against the Knowledge Base for this
            request. The values can be `SEMANTIC` which uses vector embeddings or
            `HYBRID` which use vector embeddings and raw text.
      required:
      - assistantId
    QueryAssistantResponse:
      type: object
      properties:
        results:
          allOf:
          - $ref: '#/components/schemas/QueryResultsList'
          description: The results of the query.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If there are additional results, this is the token for the
            next set of results.
      required:
      - results
    QueryCondition:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/QueryConditionItem'
        description: |-
          The condition for the query.
      description: |-
        Information about how to query content.
    QueryConditionComparisonOperator:
      type: string
      enum:
      - EQUALS
    QueryConditionExpression:
      type: array
      items:
        $ref: '#/components/schemas/QueryCondition'
    QueryConditionFieldName:
      type: string
      enum:
      - RESULT_TYPE
    QueryConditionItem:
      type: object
      properties:
        field:
          allOf:
          - $ref: '#/components/schemas/QueryConditionFieldName'
          description: The name of the field for query condition to query on.
        comparator:
          allOf:
          - $ref: '#/components/schemas/QueryConditionComparisonOperator'
          description: The comparison operator for query condition to query on.
        value:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The value for the query condition to query on.
      required:
      - field
      - comparator
      - value
      description: The condition for the query.
    QueryInputData:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/QueryTextInputData'
        description: |-
          Input information for the query.
      - allOf:
        - $ref: '#/components/schemas/IntentInputData'
        description: |-
          Input information for the intent.
      description: |-
        Input information for the query.
    QueryRecommendationTriggerData:
      type: object
      properties:
        text:
          allOf:
          - $ref: '#/components/schemas/QueryText'
          description: The text associated with the recommendation trigger.
      description: Data associated with the QUERY RecommendationTriggerType.
    QueryResultType:
      type: string
      enum:
      - KNOWLEDGE_CONTENT
      - INTENT_ANSWER
      - GENERATIVE_ANSWER
      - GENERATIVE_ANSWER_CHUNK
      - BLOCKED_GENERATIVE_ANSWER_CHUNK
      - INTENT_ANSWER_CHUNK
      - BLOCKED_INTENT_ANSWER_CHUNK
    QueryResultsList:
      type: array
      items:
        $ref: '#/components/schemas/ResultData'
    QueryText:
      type: string
      maxLength: 512
    QueryTextInputData:
      type: object
      properties:
        text:
          allOf:
          - $ref: '#/components/schemas/QueryText'
          description: The text to search for.
      required:
      - text
      description: Information about the text to search for.
    QuickResponseContent:
      type: string
      minLength: 1
      maxLength: 1024
    QuickResponseContentProvider:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/QuickResponseContent'
        description: |-
          The content of the quick response.
      description: |-
        The container quick response content.
    QuickResponseContents:
      type: object
      properties:
        plainText:
          $ref: '#/components/schemas/QuickResponseContentProvider'
        markdown:
          $ref: '#/components/schemas/QuickResponseContentProvider'
      description: The content of the quick response stored in different media types.
    QuickResponseData:
      type: object
      properties:
        quickResponseArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the quick response.
        quickResponseId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The identifier of the quick response.
        knowledgeBaseArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the knowledge base.
        knowledgeBaseId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The identifier of the knowledge base. Can be either the ID
            or the ARN. URLs cannot contain the ARN.
        name:
          allOf:
          - $ref: '#/components/schemas/QuickResponseName'
          description: The name of the quick response.
        contentType:
          allOf:
          - $ref: '#/components/schemas/QuickResponseType'
          description: "The media type of the quick response content.\n\n  * Use `application/x.quickresponse;format=plain`\
            \ for quick response written in plain text.\n\n  * Use `application/x.quickresponse;format=markdown`\
            \ for quick response written in richtext."
        status:
          allOf:
          - $ref: '#/components/schemas/QuickResponseStatus'
          description: The status of the quick response data.
        createdTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp when the quick response was created.
        lastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp when the quick response data was last modified.
        contents:
          allOf:
          - $ref: '#/components/schemas/QuickResponseContents'
          description: The contents of the quick response.
        description:
          allOf:
          - $ref: '#/components/schemas/QuickResponseDescription'
          description: The description of the quick response.
        groupingConfiguration:
          allOf:
          - $ref: '#/components/schemas/GroupingConfiguration'
          description: The configuration information of the user groups that the quick
            response is accessible to.
        shortcutKey:
          allOf:
          - $ref: '#/components/schemas/ShortCutKey'
          description: The shortcut key of the quick response. The value should be
            unique across the knowledge base.
        lastModifiedBy:
          allOf:
          - $ref: '#/components/schemas/GenericArn'
          description: The Amazon Resource Name (ARN) of the user who last updated
            the quick response data.
        isActive:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether the quick response is active.
        channels:
          allOf:
          - $ref: '#/components/schemas/Channels'
          description: The Amazon Connect contact channels this quick response applies
            to. The supported contact channel types include `Chat`.
        language:
          allOf:
          - $ref: '#/components/schemas/LanguageCode'
          description: The language code value for the language in which the quick
            response is written. The supported language codes include `de_DE`, `en_US`,
            `es_ES`, `fr_FR`, `id_ID`, `it_IT`, `ja_JP`, `ko_KR`, `pt_BR`, `zh_CN`,
            `zh_TW`
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: The tags used to organize, track, or control access for this
            resource.
      required:
      - quickResponseArn
      - quickResponseId
      - knowledgeBaseArn
      - knowledgeBaseId
      - name
      - contentType
      - status
      - createdTime
      - lastModifiedTime
      description: Information about the quick response.
    QuickResponseDataProvider:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/QuickResponseContent'
        description: |-
          The content of the quick response.
      description: |-
        The container of quick response data.
    QuickResponseDescription:
      type: string
      minLength: 1
      maxLength: 255
    QuickResponseFilterField:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the attribute field to filter the quick responses
            by.
        values:
          allOf:
          - $ref: '#/components/schemas/QuickResponseFilterValueList'
          description: The values of attribute field to filter the quick response
            by.
        operator:
          allOf:
          - $ref: '#/components/schemas/QuickResponseFilterOperator'
          description: The operator to use for filtering.
        includeNoExistence:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether to treat null value as a match for the attribute field.
      required:
      - name
      - operator
      description: "The quick response fields to filter the quick response query results\
        \ by.\n\nThe following is the list of supported field names.\n\n  * name\n\
        \n  * description\n\n  * shortcutKey\n\n  * isActive\n\n  * channels\n\n \
        \ * language\n\n  * contentType\n\n  * createdTime\n\n  * lastModifiedTime\n\
        \n  * lastModifiedBy\n\n  * groupingConfiguration.criteria\n\n  * groupingConfiguration.values"
    QuickResponseFilterFieldList:
      type: array
      items:
        $ref: '#/components/schemas/QuickResponseFilterField'
    QuickResponseFilterOperator:
      type: string
      enum:
      - EQUALS
      - PREFIX
    QuickResponseFilterValue:
      type: string
      minLength: 1
      maxLength: 2048
    QuickResponseFilterValueList:
      type: array
      items:
        $ref: '#/components/schemas/QuickResponseFilterValue'
    QuickResponseName:
      type: string
      minLength: 1
      maxLength: 100
    QuickResponseOrderField:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the attribute to order the quick response query
            results by.
        order:
          allOf:
          - $ref: '#/components/schemas/Order'
          description: The order at which the quick responses are sorted by.
      required:
      - name
      description: "The quick response fields to order the quick response query results\
        \ by.\n\nThe following is the list of supported field names.\n\n  * name\n\
        \n  * description\n\n  * shortcutKey\n\n  * isActive\n\n  * channels\n\n \
        \ * language\n\n  * contentType\n\n  * createdTime\n\n  * lastModifiedTime\n\
        \n  * lastModifiedBy\n\n  * groupingConfiguration.criteria\n\n  * groupingConfiguration.values"
    QuickResponseQueryField:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The name of the attribute to query the quick responses by.
        values:
          allOf:
          - $ref: '#/components/schemas/QuickResponseQueryValueList'
          description: The values of the attribute to query the quick responses by.
        operator:
          allOf:
          - $ref: '#/components/schemas/QuickResponseQueryOperator'
          description: The operator to use for matching attribute field values in
            the query.
        allowFuzziness:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether the query expects only exact matches on the attribute
            field values. The results of the query will only include exact matches
            if this parameter is set to false.
        priority:
          allOf:
          - $ref: '#/components/schemas/Priority'
          description: The importance of the attribute field when calculating query
            result relevancy scores. The value set for this parameter affects the
            ordering of search results.
      required:
      - name
      - values
      - operator
      description: "The quick response fields to query quick responses by.\n\nThe\
        \ following is the list of supported field names.\n\n  * content\n\n  * name\n\
        \n  * description\n\n  * shortcutKey"
    QuickResponseQueryFieldList:
      type: array
      items:
        $ref: '#/components/schemas/QuickResponseQueryField'
    QuickResponseQueryOperator:
      type: string
      enum:
      - CONTAINS
      - CONTAINS_AND_PREFIX
    QuickResponseQueryValue:
      type: string
      minLength: 1
      maxLength: 1024
    QuickResponseQueryValueList:
      type: array
      items:
        $ref: '#/components/schemas/QuickResponseQueryValue'
    QuickResponseSearchExpression:
      type: object
      properties:
        queries:
          allOf:
          - $ref: '#/components/schemas/QuickResponseQueryFieldList'
          description: The quick response query expressions.
        filters:
          allOf:
          - $ref: '#/components/schemas/QuickResponseFilterFieldList'
          description: The configuration of filtering rules applied to quick response
            query results.
        orderOnField:
          allOf:
          - $ref: '#/components/schemas/QuickResponseOrderField'
          description: The quick response attribute fields on which the query results
            are ordered.
      description: Information about the import job.
    QuickResponseSearchResultData:
      type: object
      properties:
        quickResponseArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the quick response.
        quickResponseId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The identifier of the quick response.
        knowledgeBaseArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the knowledge base.
        knowledgeBaseId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The identifier of the knowledge base. Can be either the ID
            or the ARN. URLs cannot contain the ARN.
        name:
          allOf:
          - $ref: '#/components/schemas/QuickResponseName'
          description: The name of the quick response.
        contentType:
          allOf:
          - $ref: '#/components/schemas/QuickResponseType'
          description: "The media type of the quick response content.\n\n  * Use `application/x.quickresponse;format=plain`\
            \ for quick response written in plain text.\n\n  * Use `application/x.quickresponse;format=markdown`\
            \ for quick response written in richtext."
        status:
          allOf:
          - $ref: '#/components/schemas/QuickResponseStatus'
          description: The resource status of the quick response.
        contents:
          allOf:
          - $ref: '#/components/schemas/QuickResponseContents'
          description: The contents of the quick response.
        createdTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp when the quick response was created.
        lastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp when the quick response search result data was
            last modified.
        isActive:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether the quick response is active.
        description:
          allOf:
          - $ref: '#/components/schemas/QuickResponseDescription'
          description: The description of the quick response.
        groupingConfiguration:
          allOf:
          - $ref: '#/components/schemas/GroupingConfiguration'
          description: The configuration information of the user groups that the quick
            response is accessible to.
        shortcutKey:
          allOf:
          - $ref: '#/components/schemas/ShortCutKey'
          description: The shortcut key of the quick response. The value should be
            unique across the knowledge base.
        lastModifiedBy:
          allOf:
          - $ref: '#/components/schemas/GenericArn'
          description: The Amazon Resource Name (ARN) of the user who last updated
            the quick response search result data.
        channels:
          allOf:
          - $ref: '#/components/schemas/Channels'
          description: The Amazon Connect contact channels this quick response applies
            to. The supported contact channel types include `Chat`.
        language:
          allOf:
          - $ref: '#/components/schemas/LanguageCode'
          description: The language code value for the language in which the quick
            response is written.
        attributesNotInterpolated:
          allOf:
          - $ref: '#/components/schemas/ContactAttributeKeys'
          description: The user defined contact attributes that are not resolved when
            the search result is returned.
        attributesInterpolated:
          allOf:
          - $ref: '#/components/schemas/ContactAttributeKeys'
          description: The user defined contact attributes that are resolved when
            the search result is returned.
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: The tags used to organize, track, or control access for this
            resource.
      required:
      - quickResponseArn
      - quickResponseId
      - knowledgeBaseArn
      - knowledgeBaseId
      - name
      - contentType
      - status
      - contents
      - createdTime
      - lastModifiedTime
      - isActive
      description: The result of quick response search.
    QuickResponseSearchResultsList:
      type: array
      items:
        $ref: '#/components/schemas/QuickResponseSearchResultData'
    QuickResponseStatus:
      type: string
      enum:
      - CREATE_IN_PROGRESS
      - CREATE_FAILED
      - CREATED
      - DELETE_IN_PROGRESS
      - DELETE_FAILED
      - DELETED
      - UPDATE_IN_PROGRESS
      - UPDATE_FAILED
    QuickResponseSummary:
      type: object
      properties:
        quickResponseArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the quick response.
        quickResponseId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The identifier of the quick response.
        knowledgeBaseArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the knowledge base.
        knowledgeBaseId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The identifier of the knowledge base.
        name:
          allOf:
          - $ref: '#/components/schemas/QuickResponseName'
          description: The name of the quick response.
        contentType:
          allOf:
          - $ref: '#/components/schemas/QuickResponseType'
          description: "The media type of the quick response content.\n\n  * Use `application/x.quickresponse;format=plain`\
            \ for quick response written in plain text.\n\n  * Use `application/x.quickresponse;format=markdown`\
            \ for quick response written in richtext."
        status:
          allOf:
          - $ref: '#/components/schemas/QuickResponseStatus'
          description: The resource status of the quick response.
        createdTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp when the quick response was created.
        lastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp when the quick response summary was last modified.
        description:
          allOf:
          - $ref: '#/components/schemas/QuickResponseDescription'
          description: The description of the quick response.
        lastModifiedBy:
          allOf:
          - $ref: '#/components/schemas/GenericArn'
          description: The Amazon Resource Name (ARN) of the user who last updated
            the quick response data.
        isActive:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether the quick response is active.
        channels:
          allOf:
          - $ref: '#/components/schemas/Channels'
          description: The Amazon Connect contact channels this quick response applies
            to. The supported contact channel types include `Chat`.
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: The tags used to organize, track, or control access for this
            resource.
      required:
      - quickResponseArn
      - quickResponseId
      - knowledgeBaseArn
      - knowledgeBaseId
      - name
      - contentType
      - status
      - createdTime
      - lastModifiedTime
      description: The summary information about the quick response.
    QuickResponseSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/QuickResponseSummary'
    QuickResponseType:
      type: string
      pattern: ^(application/x\.quickresponse;format=(plain|markdown))$
    RankingData:
      type: object
      properties:
        relevanceScore:
          allOf:
          - $ref: '#/components/schemas/RelevanceScore'
          description: The relevance level of the recommendation.
        relevanceLevel:
          allOf:
          - $ref: '#/components/schemas/RelevanceLevel'
          description: The relevance score of the content.
      description: Details about the source content ranking data.
    RecommendationData:
      type: object
      properties:
        recommendationId:
          allOf:
          - $ref: '#/components/schemas/RecommendationId'
          description: The identifier of the recommendation.
        document:
          allOf:
          - $ref: '#/components/schemas/Document'
          description: The recommended document.
        relevanceScore:
          allOf:
          - $ref: '#/components/schemas/RelevanceScore'
          description: The relevance score of the recommendation.
        relevanceLevel:
          allOf:
          - $ref: '#/components/schemas/RelevanceLevel'
          description: The relevance level of the recommendation.
        type:
          allOf:
          - $ref: '#/components/schemas/RecommendationType'
          description: The type of recommendation.
        data:
          allOf:
          - $ref: '#/components/schemas/DataSummary'
          description: Summary of the recommended content.
      required:
      - recommendationId
      description: Information about the recommendation.
    RecommendationId:
      type: string
      minLength: 1
      maxLength: 2048
    RecommendationIdList:
      type: array
      items:
        $ref: '#/components/schemas/RecommendationId'
    RecommendationList:
      type: array
      items:
        $ref: '#/components/schemas/RecommendationData'
    RecommendationSourceType:
      type: string
      enum:
      - ISSUE_DETECTION
      - RULE_EVALUATION
      - OTHER
    RecommendationTrigger:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The identifier of the recommendation trigger.
        type:
          allOf:
          - $ref: '#/components/schemas/RecommendationTriggerType'
          description: The type of recommendation trigger.
        source:
          allOf:
          - $ref: '#/components/schemas/RecommendationSourceType'
          description: "The source of the recommendation trigger.\n\n  * ISSUE_DETECTION:\
            \ The corresponding recommendations were triggered by a Contact Lens issue.\n\
            \n  * RULE_EVALUATION: The corresponding recommendations were triggered\
            \ by a Contact Lens rule."
        data:
          allOf:
          - $ref: '#/components/schemas/RecommendationTriggerData'
          description: A union type containing information related to the trigger.
        recommendationIds:
          allOf:
          - $ref: '#/components/schemas/RecommendationIdList'
          description: The identifiers of the recommendations.
      required:
      - id
      - type
      - source
      - data
      - recommendationIds
      description: A recommendation trigger provides context on the event that produced
        the referenced recommendations. Recommendations are only referenced in `recommendationIds`
        by a single RecommendationTrigger.
    RecommendationTriggerData:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/QueryRecommendationTriggerData'
        description: |-
          Data associated with the QUERY RecommendationTriggerType.
      description: |-
        A union type containing information related to the trigger.
    RecommendationTriggerList:
      type: array
      items:
        $ref: '#/components/schemas/RecommendationTrigger'
    RecommendationTriggerType:
      type: string
      enum:
      - QUERY
      - GENERATIVE
    RecommendationType:
      type: string
      enum:
      - KNOWLEDGE_CONTENT
      - GENERATIVE_RESPONSE
      - GENERATIVE_ANSWER
      - DETECTED_INTENT
      - GENERATIVE_ANSWER_CHUNK
      - BLOCKED_GENERATIVE_ANSWER_CHUNK
      - INTENT_ANSWER_CHUNK
      - BLOCKED_INTENT_ANSWER_CHUNK
    ReferenceType:
      type: string
      enum:
      - WEB_CRAWLER
      - KNOWLEDGE_BASE
    Relevance:
      type: string
      enum:
      - HELPFUL
      - NOT_HELPFUL
    RelevanceLevel:
      type: string
      enum:
      - HIGH
      - MEDIUM
      - LOW
    RelevanceScore:
      type: number
      format: double
      default: 0
      minimum: 0.0
    RemoveAssistantAIAgentRequest:
      type: object
      properties:
        assistantId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the Amazon Q in Connect assistant. Can be
            either the ID or the ARN. URLs cannot contain the ARN.
        aiAgentType:
          allOf:
          - $ref: '#/components/schemas/AIAgentType'
          description: The type of the AI Agent being removed for use by default from
            the Amazon Q in Connect Assistant.
      required:
      - assistantId
      - aiAgentType
    RemoveAssistantAIAgentResponse:
      type: object
      properties: {}
    RemoveKnowledgeBaseTemplateUriRequest:
      type: object
      properties:
        knowledgeBaseId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the knowledge base. Can be either the ID
            or the ARN. URLs cannot contain the ARN.
      required:
      - knowledgeBaseId
    RemoveKnowledgeBaseTemplateUriResponse:
      type: object
      properties: {}
    RenderMessageTemplateRequest:
      type: object
      properties:
        knowledgeBaseId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the knowledge base. Can be either the ID
            or the ARN. URLs cannot contain the ARN.
        messageTemplateId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArnOrEitherWithQualifier'
          description: The identifier of the message template. Can be either the ID
            or the ARN.
        attributes:
          allOf:
          - $ref: '#/components/schemas/MessageTemplateAttributes'
          description: An object that specifies the values to use for variables in
            the message template. This object contains different categories of key-value
            pairs. Each key defines a variable or placeholder in the message template.
            The corresponding value defines the value for that variable.
      required:
      - knowledgeBaseId
      - messageTemplateId
      - attributes
    RenderMessageTemplateResponse:
      type: object
      properties:
        content:
          allOf:
          - $ref: '#/components/schemas/MessageTemplateContentProvider'
          description: The content of the message template.
        attributesNotInterpolated:
          allOf:
          - $ref: '#/components/schemas/MessageTemplateAttributeKeyList'
          description: The attribute keys that are not resolved.
        attachments:
          allOf:
          - $ref: '#/components/schemas/MessageTemplateAttachmentList'
          description: The message template attachments.
      required:
      - content
    RenderingConfiguration:
      type: object
      properties:
        templateUri:
          allOf:
          - $ref: '#/components/schemas/Uri'
          description: "A URI template containing exactly one variable in `${variableName}\
            \ `format. This can only be set for `EXTERNAL` knowledge bases. For Salesforce,\
            \ ServiceNow, and Zendesk, the variable must be one of the following:\n\
            \n  * Salesforce: `Id`, `ArticleNumber`, `VersionNumber`, `Title`, `PublishStatus`,\
            \ or `IsDeleted`\n\n  * ServiceNow: `number`, `short_description`, `sys_mod_count`,\
            \ `workflow_state`, or `active`\n\n  * Zendesk: `id`, `title`, `updated_at`,\
            \ or `draft`\n\nThe variable is replaced with the actual value for a piece\
            \ of content when calling [GetContent](https://docs.aws.amazon.com/amazon-q-connect/latest/APIReference/API_GetContent.html)."
      description: Information about how to render the content.
    RequestTimeoutException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      description: The request reached the service more than 15 minutes after the
        date stamp on the request or more than 15 minutes after the request expiration
        date (such as for pre-signed URLs), or the date stamp on the request is more
        than 15 minutes in the future.
    ResourceNotFoundException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
        resourceName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The specified resource name.
      description: The specified resource does not exist.
    ResultData:
      type: object
      properties:
        resultId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The identifier of the result data.
        document:
          allOf:
          - $ref: '#/components/schemas/Document'
          description: The document.
        relevanceScore:
          allOf:
          - $ref: '#/components/schemas/RelevanceScore'
          description: The relevance score of the results.
        data:
          allOf:
          - $ref: '#/components/schemas/DataSummary'
          description: Summary of the recommended content.
        type:
          allOf:
          - $ref: '#/components/schemas/QueryResultType'
          description: The type of the query result.
      required:
      - resultId
      description: Information about the result.
    RuntimeSessionData:
      type: object
      properties:
        key:
          allOf:
          - $ref: '#/components/schemas/NonEmptySensitiveString'
          description: The key of the data stored on the session.
        value:
          allOf:
          - $ref: '#/components/schemas/RuntimeSessionDataValue'
          description: The value of the data stored on the session.
      required:
      - key
      - value
      description: The list of key-value pairs that are stored on the session.
    RuntimeSessionDataList:
      type: array
      items:
        $ref: '#/components/schemas/RuntimeSessionData'
    RuntimeSessionDataValue:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/NonEmptySensitiveString'
        description: |-
          The string value of the data stored on the session.
      description: |-
        A union type that specifies the data stored on the session.
    SMSMessageTemplateContent:
      type: object
      properties:
        body:
          allOf:
          - $ref: '#/components/schemas/SMSMessageTemplateContentBody'
          description: The body to use in SMS messages.
      description: The content of the message template that applies to the SMS channel
        subtype.
    SMSMessageTemplateContentBody:
      type: object
      properties:
        plainText:
          allOf:
          - $ref: '#/components/schemas/MessageTemplateBodyContentProvider'
          description: The message body to use in SMS messages.
      description: The body to use in SMS messages.
    SearchContentRequest:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return per page.
        knowledgeBaseId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the knowledge base. This should not be a
            QUICK_RESPONSES type knowledge base. Can be either the ID or the ARN.
            URLs cannot contain the ARN.
        searchExpression:
          allOf:
          - $ref: '#/components/schemas/SearchExpression'
          description: The search expression to filter results.
      required:
      - knowledgeBaseId
      - searchExpression
    SearchContentResponse:
      type: object
      properties:
        contentSummaries:
          allOf:
          - $ref: '#/components/schemas/ContentSummaryList'
          description: Summary information about the content.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If there are additional results, this is the token for the
            next set of results.
      required:
      - contentSummaries
    SearchExpression:
      type: object
      properties:
        filters:
          allOf:
          - $ref: '#/components/schemas/FilterList'
          description: The search expression filters.
      required:
      - filters
      description: The search expression.
    SearchMessageTemplatesRequest:
      type: object
      properties:
        knowledgeBaseId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the knowledge base. Can be either the ID
            or the ARN. URLs cannot contain the ARN.
        searchExpression:
          allOf:
          - $ref: '#/components/schemas/MessageTemplateSearchExpression'
          description: The search expression for querying the message template.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return per page.
      required:
      - knowledgeBaseId
      - searchExpression
    SearchMessageTemplatesResponse:
      type: object
      properties:
        results:
          allOf:
          - $ref: '#/components/schemas/MessageTemplateSearchResultsList'
          description: The results of the message template search.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If there are additional results, this is the token for the
            next set of results.
      required:
      - results
    SearchQuickResponsesRequest:
      type: object
      properties:
        knowledgeBaseId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the knowledge base. This should be a QUICK_RESPONSES
            type knowledge base. Can be either the ID or the ARN. URLs cannot contain
            the ARN.
        searchExpression:
          allOf:
          - $ref: '#/components/schemas/QuickResponseSearchExpression'
          description: The search expression for querying the quick response.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return per page.
        attributes:
          allOf:
          - $ref: '#/components/schemas/ContactAttributes'
          description: The [user-defined Amazon Connect contact attributes](https://docs.aws.amazon.com/connect/latest/adminguide/connect-attrib-list.html#user-defined-attributes)
            to be resolved when search results are returned.
      required:
      - knowledgeBaseId
      - searchExpression
    SearchQuickResponsesResponse:
      type: object
      properties:
        results:
          allOf:
          - $ref: '#/components/schemas/QuickResponseSearchResultsList'
          description: The results of the quick response search.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.
      required:
      - results
    SearchSessionsRequest:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of results. Use the value returned
            in the previous response in the next request to retrieve the next set
            of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return per page.
        assistantId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the Amazon Q in Connect assistant. Can be
            either the ID or the ARN. URLs cannot contain the ARN.
        searchExpression:
          allOf:
          - $ref: '#/components/schemas/SearchExpression'
          description: The search expression to filter results.
      required:
      - assistantId
      - searchExpression
    SearchSessionsResponse:
      type: object
      properties:
        sessionSummaries:
          allOf:
          - $ref: '#/components/schemas/SessionSummaries'
          description: Summary information about the sessions.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If there are additional results, this is the token for the
            next set of results.
      required:
      - sessionSummaries
    SeedUrl:
      type: object
      properties:
        url:
          allOf:
          - $ref: '#/components/schemas/WebUrl'
          description: URL for crawling
      description: A URL for crawling.
    SeedUrls:
      type: array
      items:
        $ref: '#/components/schemas/SeedUrl'
    SelfServiceAIAgentConfiguration:
      type: object
      properties:
        selfServicePreProcessingAIPromptId:
          allOf:
          - $ref: '#/components/schemas/UuidWithQualifier'
          description: The AI Prompt identifier for the Self Service Pre-Processing
            prompt used by the SELF_SERVICE AI Agent
        selfServiceAnswerGenerationAIPromptId:
          allOf:
          - $ref: '#/components/schemas/UuidWithQualifier'
          description: The AI Prompt identifier for the Self Service Answer Generation
            prompt used by the SELF_SERVICE AI Agent
        selfServiceAIGuardrailId:
          allOf:
          - $ref: '#/components/schemas/UuidWithQualifier'
          description: The AI Guardrail identifier used by the SELF_SERVICE AI Agent.
        associationConfigurations:
          allOf:
          - $ref: '#/components/schemas/AssociationConfigurationList'
          description: The association configurations for overriding behavior on this
            AI Agent.
      description: The configuration for AI Agents of type SELF_SERVICE.
    SelfServiceConversationHistory:
      type: object
      properties:
        turnNumber:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of turn of the conversation history data.
        inputTranscript:
          allOf:
          - $ref: '#/components/schemas/SensitiveString'
          description: The input transcript of the conversation history data.
        botResponse:
          allOf:
          - $ref: '#/components/schemas/SensitiveString'
          description: The bot response of the conversation history data.
      required:
      - turnNumber
      description: The conversation history data to included in conversation context
        data before the Amazon Q in Connect session.
    SelfServiceConversationHistoryList:
      type: array
      items:
        $ref: '#/components/schemas/SelfServiceConversationHistory'
    SemanticChunkingConfiguration:
      type: object
      properties:
        maxTokens:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The maximum number of tokens that a chunk can contain.
        bufferSize:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The buffer size.
        breakpointPercentileThreshold:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The dissimilarity threshold for splitting chunks.
      required:
      - maxTokens
      - bufferSize
      - breakpointPercentileThreshold
      description: Settings for semantic document chunking for a data source. Semantic
        chunking splits a document into smaller documents based on groups of similar
        content derived from the text with natural language processing.
    SendMessageRequest:
      type: object
      properties:
        assistantId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the Amazon Q in Connect assistant.
        sessionId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the Amazon Q in Connect session.
        type:
          allOf:
          - $ref: '#/components/schemas/MessageType'
          description: The message type.
        message:
          allOf:
          - $ref: '#/components/schemas/MessageInput'
          description: The message data to submit to the Amazon Q in Connect session.
        conversationContext:
          allOf:
          - $ref: '#/components/schemas/ConversationContext'
          description: The conversation context before the Amazon Q in Connect session.
        configuration:
          allOf:
          - $ref: '#/components/schemas/MessageConfiguration'
          description: The configuration of the [SendMessage](https://docs.aws.amazon.com/connect/latest/APIReference/API_amazon-q-connect_SendMessage.html)
            request.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. If not provided, the AWS SDK populates
            this field.For more information about idempotency, see Making retries
            safe with idempotent APIs.
      required:
      - assistantId
      - sessionId
      - type
      - message
    SendMessageResponse:
      type: object
      properties:
        requestMessageId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The identifier of the submitted message.
        configuration:
          allOf:
          - $ref: '#/components/schemas/MessageConfiguration'
          description: The configuration of the [SendMessage](https://docs.aws.amazon.com/connect/latest/APIReference/API_amazon-q-connect_SendMessage.html)
            request.
        nextMessageToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next message, used by GetNextMessage.
      required:
      - requestMessageId
      - nextMessageToken
    SensitiveString:
      type: string
    ServerSideEncryptionConfiguration:
      type: object
      properties:
        kmsKeyId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The customer managed key used for encryption. For more information
            about setting up a customer managed key for Amazon Q in Connect, see [Enable
            Amazon Q in Connect for your instance](https://docs.aws.amazon.com/connect/latest/adminguide/enable-q.html).
            For information about valid ID values, see [Key identifiers (KeyId)](https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#key-id).
      description: The configuration information for the customer managed key used
        for encryption.
    ServiceQuotaExceededException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      description: You've exceeded your service quota. To perform the requested action,
        remove some of the relevant resources, or use service quotas to request a
        service quota increase.
    SessionData:
      type: object
      properties:
        sessionArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the session.
        sessionId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The identifier of the session.
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the session.
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: The description of the session.
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: The tags used to organize, track, or control access for this
            resource.
        integrationConfiguration:
          allOf:
          - $ref: '#/components/schemas/SessionIntegrationConfiguration'
          description: The configuration information for the session integration.
        tagFilter:
          allOf:
          - $ref: '#/components/schemas/TagFilter'
          description: An object that can be used to specify Tag conditions.
        aiAgentConfiguration:
          allOf:
          - $ref: '#/components/schemas/AIAgentConfigurationMap'
          description: The configuration of the AI Agents (mapped by AI Agent Type
            to AI Agent version) that should be used by Amazon Q in Connect for this
            Session.
        origin:
          allOf:
          - $ref: '#/components/schemas/Origin'
          description: The origin of the Session to be listed. `SYSTEM` for a default
            Session created by Amazon Q in Connect or `CUSTOMER` for a Session created
            by calling [CreateSession](https://docs.aws.amazon.com/connect/latest/APIReference/API_amazon-q-connect_CreateSession.html)
            API.
      required:
      - sessionArn
      - sessionId
      - name
      description: Information about the session.
    SessionDataNamespace:
      type: string
      enum:
      - Custom
    SessionIntegrationConfiguration:
      type: object
      properties:
        topicIntegrationArn:
          allOf:
          - $ref: '#/components/schemas/GenericArn'
          description: The Amazon Resource Name (ARN) of the integrated Amazon SNS
            topic used for streaming chat messages.
      description: The configuration information for the session integration.
    SessionSummaries:
      type: array
      items:
        $ref: '#/components/schemas/SessionSummary'
    SessionSummary:
      type: object
      properties:
        sessionId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The identifier of the session.
        sessionArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the session.
        assistantId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The identifier of the Amazon Q in Connect assistant.
        assistantArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the Amazon Q in Connect assistant.
      required:
      - sessionId
      - sessionArn
      - assistantId
      - assistantArn
      description: Summary information about the session.
    ShortCutKey:
      type: string
      minLength: 1
      maxLength: 10
    SourceConfiguration:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/AppIntegrationsConfiguration'
        description: |-
          Configuration information for Amazon AppIntegrations to automatically ingest content.
      - allOf:
        - $ref: '#/components/schemas/ManagedSourceConfiguration'
        description: |-
          Source configuration for managed resources.
      description: |-
        Configuration information about the external data source.
    SourceContentDataDetails:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The identifier of the source content.
        type:
          allOf:
          - $ref: '#/components/schemas/SourceContentType'
          description: The type of the source content.
        textData:
          allOf:
          - $ref: '#/components/schemas/TextData'
          description: Details about the source content text data.
        rankingData:
          allOf:
          - $ref: '#/components/schemas/RankingData'
          description: Details about the source content ranking data.
        citationSpan:
          allOf:
          - $ref: '#/components/schemas/CitationSpan'
          description: Contains information about where the text with a citation begins
            and ends in the generated output.
      required:
      - id
      - type
      - textData
      - rankingData
      description: Details about the source content data.
    SourceContentType:
      type: string
      enum:
      - KNOWLEDGE_CONTENT
    StartContentUploadRequest:
      type: object
      properties:
        knowledgeBaseId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the knowledge base. Can be either the ID
            or the ARN. URLs cannot contain the ARN.
        contentType:
          allOf:
          - $ref: '#/components/schemas/ContentType'
          description: The type of content to upload.
        presignedUrlTimeToLive:
          allOf:
          - $ref: '#/components/schemas/TimeToLive'
          description: The expected expiration time of the generated presigned URL,
            specified in minutes.
      required:
      - knowledgeBaseId
      - contentType
    StartContentUploadResponse:
      type: object
      properties:
        uploadId:
          allOf:
          - $ref: '#/components/schemas/UploadId'
          description: The identifier of the upload.
        url:
          allOf:
          - $ref: '#/components/schemas/Url'
          description: The URL of the upload.
        urlExpiry:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The expiration time of the URL as an epoch timestamp.
        headersToInclude:
          allOf:
          - $ref: '#/components/schemas/Headers'
          description: The headers to include in the upload.
      required:
      - uploadId
      - url
      - urlExpiry
      - headersToInclude
    StartImportJobRequest:
      type: object
      properties:
        knowledgeBaseId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: "The identifier of the knowledge base. Can be either the ID\
            \ or the ARN. URLs cannot contain the ARN.\n\n  * For importing Amazon\
            \ Q in Connect quick responses, this should be a `QUICK_RESPONSES` type\
            \ knowledge base."
        importJobType:
          allOf:
          - $ref: '#/components/schemas/ImportJobType'
          description: "The type of the import job.\n\n  * For importing quick response\
            \ resource, set the value to `QUICK_RESPONSES`."
        uploadId:
          allOf:
          - $ref: '#/components/schemas/UploadId'
          description: A pointer to the uploaded asset. This value is returned by
            [StartContentUpload](https://docs.aws.amazon.com/wisdom/latest/APIReference/API_StartContentUpload.html).
        clientToken:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The tags used to organize, track, or control access for this
            resource.
        metadata:
          allOf:
          - $ref: '#/components/schemas/ContentMetadata'
          description: The metadata fields of the imported Amazon Q in Connect resources.
        externalSourceConfiguration:
          allOf:
          - $ref: '#/components/schemas/ExternalSourceConfiguration'
          description: The configuration information of the external source that the
            resource data are imported from.
      required:
      - knowledgeBaseId
      - importJobType
      - uploadId
    StartImportJobResponse:
      type: object
      properties:
        importJob:
          allOf:
          - $ref: '#/components/schemas/ImportJobData'
          description: The import job.
    Status:
      type: string
      enum:
      - CREATE_IN_PROGRESS
      - CREATE_FAILED
      - ACTIVE
      - DELETE_IN_PROGRESS
      - DELETE_FAILED
      - DELETED
    SyncStatus:
      type: string
      enum:
      - SYNC_FAILED
      - SYNCING_IN_PROGRESS
      - SYNC_SUCCESS
      - CREATE_IN_PROGRESS
    SystemAttributes:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/MessageTemplateAttributeValue'
          description: The name of the task.
        customerEndpoint:
          allOf:
          - $ref: '#/components/schemas/SystemEndpointAttributes'
          description: The CustomerEndpoint attribute.
        systemEndpoint:
          allOf:
          - $ref: '#/components/schemas/SystemEndpointAttributes'
          description: The SystemEndpoint attribute.
      description: The system attributes that are used with the message template.
    SystemEndpointAttributes:
      type: object
      properties:
        address:
          allOf:
          - $ref: '#/components/schemas/MessageTemplateAttributeValue'
          description: The customer's phone number if used with `customerEndpoint`,
            or the number the customer dialed to call your contact center if used
            with `systemEndpoint`.
      description: The system endpoint attributes that are used with the message template.
    TagCondition:
      type: object
      properties:
        key:
          allOf:
          - $ref: '#/components/schemas/TagKey'
          description: The tag key in the tag condition.
        value:
          allOf:
          - $ref: '#/components/schemas/TagValue'
          description: The tag value in the tag condition.
      required:
      - key
      description: A leaf node condition which can be used to specify a tag condition.
    TagFilter:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/TagCondition'
        description: |-
          A leaf node condition which can be used to specify a tag condition.
      - allOf:
        - $ref: '#/components/schemas/AndConditions'
        description: |-
          A list of conditions which would be applied together with an `AND` condition.
      - allOf:
        - $ref: '#/components/schemas/OrConditions'
        description: |-
          A list of conditions which would be applied together with an `OR` condition.
      description: |-
        An object that can be used to specify Tag conditions.
    TagKey:
      type: string
      pattern: ^(?!aws:)[a-zA-Z+-=._:/]+$
      minLength: 1
      maxLength: 128
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
    TagResourceRequest:
      type: object
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the resource.
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: The tags used to organize, track, or control access for this
            resource.
      required:
      - resourceArn
      - tags
    TagResourceResponse:
      type: object
      properties: {}
    TagValue:
      type: string
      minLength: 1
      maxLength: 256
    Tags:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
    TargetType:
      type: string
      enum:
      - RECOMMENDATION
      - RESULT
    TextAIPrompt:
      type: string
      minLength: 1
      maxLength: 1000000
    TextData:
      type: object
      properties:
        title:
          $ref: '#/components/schemas/DocumentText'
        excerpt:
          $ref: '#/components/schemas/DocumentText'
      description: Details about the source content text data.
    TextFullAIPromptEditTemplateConfiguration:
      type: object
      properties:
        text:
          allOf:
          - $ref: '#/components/schemas/TextAIPrompt'
          description: The YAML text for the AI Prompt template.
      required:
      - text
      description: The configuration for a prompt template that supports full textual
        prompt configuration using a YAML prompt.
    TextMessage:
      type: object
      properties:
        value:
          allOf:
          - $ref: '#/components/schemas/SensitiveString'
          description: The value of the message data in text type.
      description: The message data in text type.
    ThrottlingException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      description: The throttling limit has been exceeded.
    TimeToLive:
      type: integer
      minimum: 1
      maximum: 60
      description: Expiration time in minutes
    TooManyTagsException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
        resourceName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The specified resource name.
      description: Amazon Q in Connect throws this exception if you have too many
        tags in your tag set.
    UntagResourceRequest:
      type: object
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the resource.
        tagKeys:
          allOf:
          - $ref: '#/components/schemas/TagKeyList'
          description: The tag keys.
      required:
      - resourceArn
      - tagKeys
    UntagResourceResponse:
      type: object
      properties: {}
    UpdateAIAgentRequest:
      type: object
      properties:
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. If not provided, the Amazon Web Services
            SDK populates this field. For more information about idempotency, see
            [Making retries safe with idempotent APIs](http://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/)..
        assistantId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the Amazon Q in Connect assistant. Can be
            either the ID or the ARN. URLs cannot contain the ARN.
        aiAgentId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArnOrEitherWithQualifier'
          description: The identifier of the Amazon Q in Connect AI Agent.
        visibilityStatus:
          allOf:
          - $ref: '#/components/schemas/VisibilityStatus'
          description: The visbility status of the Amazon Q in Connect AI Agent.
        configuration:
          allOf:
          - $ref: '#/components/schemas/AIAgentConfiguration'
          description: The configuration of the Amazon Q in Connect AI Agent.
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: The description of the Amazon Q in Connect AI Agent.
      required:
      - assistantId
      - aiAgentId
      - visibilityStatus
    UpdateAIAgentResponse:
      type: object
      properties:
        aiAgent:
          allOf:
          - $ref: '#/components/schemas/AIAgentData'
          description: The data of the updated Amazon Q in Connect AI Agent.
    UpdateAIGuardrailRequest:
      type: object
      properties:
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. If not provided, the Amazon Web Services
            SDK populates this field. For more information about idempotency, see
            [Making retries safe with idempotent APIs](http://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/)..
        assistantId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the Amazon Q in Connect assistant. Can be
            either the ID or the ARN. URLs cannot contain the ARN.
        aiGuardrailId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArnOrEitherWithQualifier'
          description: The identifier of the Amazon Q in Connect AI Guardrail.
        visibilityStatus:
          allOf:
          - $ref: '#/components/schemas/VisibilityStatus'
          description: The visibility status of the Amazon Q in Connect AI Guardrail.
        blockedInputMessaging:
          allOf:
          - $ref: '#/components/schemas/AIGuardrailBlockedMessaging'
          description: The message to return when the AI Guardrail blocks a prompt.
        blockedOutputsMessaging:
          allOf:
          - $ref: '#/components/schemas/AIGuardrailBlockedMessaging'
          description: The message to return when the AI Guardrail blocks a model
            response.
        description:
          allOf:
          - $ref: '#/components/schemas/AIGuardrailDescription'
          description: A description of the AI Guardrail.
        topicPolicyConfig:
          allOf:
          - $ref: '#/components/schemas/AIGuardrailTopicPolicyConfig'
          description: The topic policies to configure for the AI Guardrail.
        contentPolicyConfig:
          allOf:
          - $ref: '#/components/schemas/AIGuardrailContentPolicyConfig'
          description: The content filter policies to configure for the AI Guardrail.
        wordPolicyConfig:
          allOf:
          - $ref: '#/components/schemas/AIGuardrailWordPolicyConfig'
          description: The word policy you configure for the AI Guardrail.
        sensitiveInformationPolicyConfig:
          allOf:
          - $ref: '#/components/schemas/AIGuardrailSensitiveInformationPolicyConfig'
          description: The sensitive information policy to configure for the AI Guardrail.
        contextualGroundingPolicyConfig:
          allOf:
          - $ref: '#/components/schemas/AIGuardrailContextualGroundingPolicyConfig'
          description: The contextual grounding policy configuration used to create
            an AI Guardrail.
      required:
      - assistantId
      - aiGuardrailId
      - visibilityStatus
      - blockedInputMessaging
      - blockedOutputsMessaging
    UpdateAIGuardrailResponse:
      type: object
      properties:
        aiGuardrail:
          allOf:
          - $ref: '#/components/schemas/AIGuardrailData'
          description: The data of the updated Amazon Q in Connect AI Guardrail.
    UpdateAIPromptRequest:
      type: object
      properties:
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. If not provided, the Amazon Web Services
            SDK populates this field. For more information about idempotency, see
            [Making retries safe with idempotent APIs](http://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/)..
        assistantId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the Amazon Q in Connect assistant. Can be
            either the ID or the ARN. URLs cannot contain the ARN.
        aiPromptId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArnOrEitherWithQualifier'
          description: The identifier of the Amazon Q in Connect AI Prompt.
        visibilityStatus:
          allOf:
          - $ref: '#/components/schemas/VisibilityStatus'
          description: The visibility status of the Amazon Q in Connect AI prompt.
        templateConfiguration:
          allOf:
          - $ref: '#/components/schemas/AIPromptTemplateConfiguration'
          description: The configuration of the prompt template for this AI Prompt.
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: The description of the Amazon Q in Connect AI Prompt.
      required:
      - assistantId
      - aiPromptId
      - visibilityStatus
    UpdateAIPromptResponse:
      type: object
      properties:
        aiPrompt:
          allOf:
          - $ref: '#/components/schemas/AIPromptData'
          description: The data of the updated Amazon Q in Connect AI Prompt.
    UpdateAssistantAIAgentRequest:
      type: object
      properties:
        assistantId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the Amazon Q in Connect assistant. Can be
            either the ID or the ARN. URLs cannot contain the ARN.
        aiAgentType:
          allOf:
          - $ref: '#/components/schemas/AIAgentType'
          description: The type of the AI Agent being updated for use by default on
            the Amazon Q in Connect Assistant.
        configuration:
          allOf:
          - $ref: '#/components/schemas/AIAgentConfigurationData'
          description: The configuration of the AI Agent being updated for use by
            default on the Amazon Q in Connect Assistant.
      required:
      - assistantId
      - aiAgentType
      - configuration
    UpdateAssistantAIAgentResponse:
      type: object
      properties:
        assistant:
          $ref: '#/components/schemas/AssistantData'
    UpdateContentRequest:
      type: object
      properties:
        knowledgeBaseId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the knowledge base. This should not be a
            QUICK_RESPONSES type knowledge base. Can be either the ID or the ARN
        contentId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the content. Can be either the ID or the
            ARN. URLs cannot contain the ARN.
        revisionId:
          allOf:
          - $ref: '#/components/schemas/NonEmptyString'
          description: The `revisionId` of the content resource to update, taken from
            an earlier call to `GetContent`, `GetContentSummary`, `SearchContent`,
            or `ListContents`. If included, this argument acts as an optimistic lock
            to ensure content was not modified since it was last read. If it has been
            modified, this API throws a `PreconditionFailedException`.
        title:
          allOf:
          - $ref: '#/components/schemas/ContentTitle'
          description: The title of the content.
        overrideLinkOutUri:
          allOf:
          - $ref: '#/components/schemas/Uri'
          description: The URI for the article. If the knowledge base has a templateUri,
            setting this argument overrides it for this piece of content. To remove
            an existing `overrideLinkOurUri`, exclude this argument and set `removeOverrideLinkOutUri`
            to true.
        removeOverrideLinkOutUri:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Unset the existing `overrideLinkOutUri` if it exists.
        metadata:
          allOf:
          - $ref: '#/components/schemas/ContentMetadata'
          description: A key/value map to store attributes without affecting tagging
            or recommendations. For example, when synchronizing data between an external
            system and Amazon Q in Connect, you can store an external version identifier
            as metadata to utilize for determining drift.
        uploadId:
          allOf:
          - $ref: '#/components/schemas/UploadId'
          description: A pointer to the uploaded asset. This value is returned by
            [StartContentUpload](https://docs.aws.amazon.com/amazon-q-connect/latest/APIReference/API_StartContentUpload.html).
      required:
      - knowledgeBaseId
      - contentId
    UpdateContentResponse:
      type: object
      properties:
        content:
          allOf:
          - $ref: '#/components/schemas/ContentData'
          description: The content.
    UpdateKnowledgeBaseTemplateUriRequest:
      type: object
      properties:
        knowledgeBaseId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the knowledge base. This should not be a
            QUICK_RESPONSES type knowledge base. Can be either the ID or the ARN.
            URLs cannot contain the ARN.
        templateUri:
          allOf:
          - $ref: '#/components/schemas/Uri'
          description: The template URI to update.
      required:
      - knowledgeBaseId
      - templateUri
    UpdateKnowledgeBaseTemplateUriResponse:
      type: object
      properties:
        knowledgeBase:
          allOf:
          - $ref: '#/components/schemas/KnowledgeBaseData'
          description: The knowledge base to update.
    UpdateMessageTemplateMetadataRequest:
      type: object
      properties:
        knowledgeBaseId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the knowledge base. Can be either the ID
            or the ARN. URLs cannot contain the ARN.
        messageTemplateId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArnOrEitherWithQualifier'
          description: The identifier of the message template. Can be either the ID
            or the ARN. It cannot contain any qualifier.
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the message template.
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: The description of the message template.
        groupingConfiguration:
          $ref: '#/components/schemas/GroupingConfiguration'
      required:
      - knowledgeBaseId
      - messageTemplateId
    UpdateMessageTemplateMetadataResponse:
      type: object
      properties:
        messageTemplate:
          allOf:
          - $ref: '#/components/schemas/MessageTemplateData'
          description: The message template.
    UpdateMessageTemplateRequest:
      type: object
      properties:
        knowledgeBaseId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the knowledge base. Can be either the ID
            or the ARN. URLs cannot contain the ARN.
        messageTemplateId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArnOrEitherWithQualifier'
          description: The identifier of the message template. Can be either the ID
            or the ARN. It cannot contain any qualifier.
        content:
          allOf:
          - $ref: '#/components/schemas/MessageTemplateContentProvider'
          description: The content of the message template.
        language:
          allOf:
          - $ref: '#/components/schemas/LanguageCode'
          description: The language code value for the language in which the quick
            response is written. The supported language codes include `de_DE`, `en_US`,
            `es_ES`, `fr_FR`, `id_ID`, `it_IT`, `ja_JP`, `ko_KR`, `pt_BR`, `zh_CN`,
            `zh_TW`
        defaultAttributes:
          allOf:
          - $ref: '#/components/schemas/MessageTemplateAttributes'
          description: An object that specifies the default values to use for variables
            in the message template. This object contains different categories of
            key-value pairs. Each key defines a variable or placeholder in the message
            template. The corresponding value defines the default value for that variable.
      required:
      - knowledgeBaseId
      - messageTemplateId
    UpdateMessageTemplateResponse:
      type: object
      properties:
        messageTemplate:
          allOf:
          - $ref: '#/components/schemas/MessageTemplateData'
          description: The message template.
    UpdateQuickResponseRequest:
      type: object
      properties:
        knowledgeBaseId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the knowledge base. Can be either the ID
            or the ARN. URLs cannot contain the ARN.
        quickResponseId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the quick response.
        name:
          allOf:
          - $ref: '#/components/schemas/QuickResponseName'
          description: The name of the quick response.
        content:
          allOf:
          - $ref: '#/components/schemas/QuickResponseDataProvider'
          description: The updated content of the quick response.
        contentType:
          allOf:
          - $ref: '#/components/schemas/QuickResponseType'
          description: "The media type of the quick response content.\n\n  * Use `application/x.quickresponse;format=plain`\
            \ for quick response written in plain text.\n\n  * Use `application/x.quickresponse;format=markdown`\
            \ for quick response written in richtext."
        groupingConfiguration:
          allOf:
          - $ref: '#/components/schemas/GroupingConfiguration'
          description: The updated grouping configuration of the quick response.
        removeGroupingConfiguration:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether to remove the grouping configuration of the quick response.
        description:
          allOf:
          - $ref: '#/components/schemas/QuickResponseDescription'
          description: The updated description of the quick response.
        removeDescription:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether to remove the description from the quick response.
        shortcutKey:
          allOf:
          - $ref: '#/components/schemas/ShortCutKey'
          description: The shortcut key of the quick response. The value should be
            unique across the knowledge base.
        removeShortcutKey:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether to remove the shortcut key of the quick response.
        isActive:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether the quick response is active.
        channels:
          allOf:
          - $ref: '#/components/schemas/Channels'
          description: The Amazon Connect contact channels this quick response applies
            to. The supported contact channel types include `Chat`.
        language:
          allOf:
          - $ref: '#/components/schemas/LanguageCode'
          description: The language code value for the language in which the quick
            response is written. The supported language codes include `de_DE`, `en_US`,
            `es_ES`, `fr_FR`, `id_ID`, `it_IT`, `ja_JP`, `ko_KR`, `pt_BR`, `zh_CN`,
            `zh_TW`
      required:
      - knowledgeBaseId
      - quickResponseId
    UpdateQuickResponseResponse:
      type: object
      properties:
        quickResponse:
          allOf:
          - $ref: '#/components/schemas/QuickResponseData'
          description: The quick response.
    UpdateSessionDataRequest:
      type: object
      properties:
        assistantId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the Amazon Q in Connect assistant. Can be
            either the ID or the ARN. URLs cannot contain the ARN.
        sessionId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the session. Can be either the ID or the
            ARN. URLs cannot contain the ARN.
        namespace:
          allOf:
          - $ref: '#/components/schemas/SessionDataNamespace'
          description: 'The namespace into which the session data is stored. Supported
            namespaces are: Custom'
        data:
          allOf:
          - $ref: '#/components/schemas/RuntimeSessionDataList'
          description: The data stored on the Amazon Q in Connect Session.
      required:
      - assistantId
      - sessionId
      - data
    UpdateSessionDataResponse:
      type: object
      properties:
        sessionArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the session.
        sessionId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The identifier of the session.
        namespace:
          allOf:
          - $ref: '#/components/schemas/SessionDataNamespace'
          description: 'The namespace into which the session data is stored. Supported
            namespaces are: Custom'
        data:
          allOf:
          - $ref: '#/components/schemas/RuntimeSessionDataList'
          description: Data stored in the session.
      required:
      - sessionArn
      - sessionId
      - namespace
      - data
    UpdateSessionRequest:
      type: object
      properties:
        assistantId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the Amazon Q in Connect assistant. Can be
            either the ID or the ARN. URLs cannot contain the ARN.
        sessionId:
          allOf:
          - $ref: '#/components/schemas/UuidOrArn'
          description: The identifier of the session. Can be either the ID or the
            ARN. URLs cannot contain the ARN.
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: The description.
        tagFilter:
          allOf:
          - $ref: '#/components/schemas/TagFilter'
          description: An object that can be used to specify Tag conditions.
        aiAgentConfiguration:
          allOf:
          - $ref: '#/components/schemas/AIAgentConfigurationMap'
          description: The configuration of the AI Agents (mapped by AI Agent Type
            to AI Agent version) that should be used by Amazon Q in Connect for this
            Session.
      required:
      - assistantId
      - sessionId
    UpdateSessionResponse:
      type: object
      properties:
        session:
          $ref: '#/components/schemas/SessionData'
    UploadId:
      type: string
      minLength: 1
      maxLength: 1200
    Uri:
      type: string
      minLength: 1
      maxLength: 4096
    Url:
      type: string
      minLength: 1
      maxLength: 4096
    UrlConfiguration:
      type: object
      properties:
        seedUrls:
          allOf:
          - $ref: '#/components/schemas/SeedUrls'
          description: List of URLs for crawling.
      description: The configuration of the URL/URLs for the web content that you
        want to crawl. You should be authorized to crawl the URLs.
    UrlFilterList:
      type: array
      items:
        $ref: '#/components/schemas/UrlFilterPattern'
      x-sensitive: true
    UrlFilterPattern:
      type: string
      minLength: 1
      maxLength: 1000
    Uuid:
      type: string
      pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
    UuidOrArn:
      type: string
      pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$|^arn:[a-z-]*?:wisdom:[a-z0-9-]*?:[0-9]{12}:[a-z-]*?/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(?:/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}){0,2}$
    UuidOrArnOrEitherWithQualifier:
      type: string
      pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(:[A-Z0-9_$]+){0,1}$|^arn:[a-z-]*?:wisdom:[a-z0-9-]*?:[0-9]{12}:[a-z-]*?/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(?:/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}){0,2}(:[A-Z0-9_$]+){0,1}$
    UuidWithQualifier:
      type: string
      pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}(:[A-Z0-9_$]+){0,1}$
    ValidationException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      description: The input fails to satisfy the constraints specified by a service.
    VectorIngestionConfiguration:
      type: object
      properties:
        chunkingConfiguration:
          allOf:
          - $ref: '#/components/schemas/ChunkingConfiguration'
          description: Details about how to chunk the documents in the data source.
            A chunk refers to an excerpt from a data source that is returned when
            the knowledge base that it belongs to is queried.
        parsingConfiguration:
          allOf:
          - $ref: '#/components/schemas/ParsingConfiguration'
          description: A custom parser for data source documents.
      description: Contains details about how to ingest the documents in a data source.
    Version:
      type: integer
      format: int64
      minimum: 1
    VisibilityStatus:
      type: string
      enum:
      - SAVED
      - PUBLISHED
    WaitTimeSeconds:
      type: integer
      default: 0
      minimum: 0
      maximum: 20
    WebCrawlerConfiguration:
      type: object
      properties:
        urlConfiguration:
          allOf:
          - $ref: '#/components/schemas/UrlConfiguration'
          description: The configuration of the URL/URLs for the web content that
            you want to crawl. You should be authorized to crawl the URLs.
        crawlerLimits:
          allOf:
          - $ref: '#/components/schemas/WebCrawlerLimits'
          description: The configuration of crawl limits for the web URLs.
        inclusionFilters:
          allOf:
          - $ref: '#/components/schemas/UrlFilterList'
          description: A list of one or more inclusion regular expression patterns
            to include certain URLs. If you specify an inclusion and exclusion filter/pattern
            and both match a URL, the exclusion filter takes precedence and the web
            content of the URL isn’t crawled.
        exclusionFilters:
          allOf:
          - $ref: '#/components/schemas/UrlFilterList'
          description: A list of one or more exclusion regular expression patterns
            to exclude certain URLs. If you specify an inclusion and exclusion filter/pattern
            and both match a URL, the exclusion filter takes precedence and the web
            content of the URL isn’t crawled.
        scope:
          allOf:
          - $ref: '#/components/schemas/WebScopeType'
          description: The scope of what is crawled for your URLs. You can choose
            to crawl only web pages that belong to the same host or primary domain.
            For example, only web pages that contain the seed URL `https://docs.aws.amazon.com/bedrock/latest/userguide/`
            and no other domains. You can choose to include sub domains in addition
            to the host or primary domain. For example, web pages that contain `aws.amazon.com`
            can also include sub domain `docs.aws.amazon.com`.
      required:
      - urlConfiguration
      description: The configuration details for the web data source.
    WebCrawlerLimits:
      type: object
      properties:
        rateLimit:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: Rate of web URLs retrieved per minute.
      description: The configuration of crawl limits for the web URLs.
    WebScopeType:
      type: string
      enum:
      - HOST_ONLY
      - SUBDOMAINS
    WebUrl:
      type: string
      pattern: ^https?://[A-Za-z0-9][^\s]*$
