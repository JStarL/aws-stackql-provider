openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: internetmonitor
  x-aws-serviceName: internetmonitor
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-07'
  version: '2021-06-03'
  title: Amazon CloudWatch Internet Monitor
  description: |-
    Amazon CloudWatch Internet Monitor provides visibility into how internet issues impact the performance and availability between your applications hosted on Amazon Web Services and your end users. It can reduce the time it takes for you to diagnose internet issues from days to minutes. Internet Monitor uses the connectivity data that Amazon Web Services captures from its global networking footprint to calculate a baseline of performance and availability for internet traffic. This is the same data that Amazon Web Services uses to monitor internet uptime and availability. With those measurements as a baseline, Internet Monitor raises awareness for you when there are significant problems for your end users in the different geographic locations where your application runs.

    Internet Monitor publishes internet measurements to CloudWatch Logs and CloudWatch Metrics, to easily support using CloudWatch tools with health information for geographies and networks specific to your application. Internet Monitor sends health events to Amazon EventBridge so that you can set up notifications. If an issue is caused by the Amazon Web Services network, you also automatically receive an Amazon Web Services Health Dashboard notification with the steps that Amazon Web Services is taking to mitigate the problem.

    To use Internet Monitor, you create a _monitor_ and associate your application's resources with it - VPCs, NLBs, CloudFront distributions, or WorkSpaces directories - so Internet Monitor can determine where your application's internet traffic is. Internet Monitor then provides internet measurements from Amazon Web Services that are specific to the locations and ASNs (typically, internet service providers or ISPs) that communicate with your application.

    For more information, see [Using Amazon CloudWatch Internet Monitor](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-InternetMonitor.html) in the _Amazon CloudWatch User Guide_.
servers:
- description: The Amazon CloudWatch Internet Monitor regional endpoint
  url: https://internetmonitor.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths:
  /v20210603/Monitors:
    post:
      operationId: CreateMonitor
      description: |-
        Creates a monitor in Amazon CloudWatch Internet Monitor. A monitor is built based on information from the application resources that you add: VPCs, Network Load Balancers (NLBs), Amazon CloudFront distributions, and Amazon WorkSpaces directories. Internet Monitor then publishes internet measurements from Amazon Web Services that are specific to the _city-networks_. That is, the locations and ASNs (typically internet service providers or ISPs), where clients access your application. For more information, see [Using Amazon CloudWatch Internet Monitor](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-InternetMonitor.html) in the _Amazon CloudWatch User Guide_.

        When you create a monitor, you choose the percentage of traffic that you want to monitor. You can also set a maximum limit for the number of city-networks where client traffic is monitored, that caps the total traffic that Internet Monitor monitors. A city-network maximum is the limit of city-networks, but you only pay for the number of city-networks that are actually monitored. You can update your monitor at any time to change the percentage of traffic to monitor or the city-networks maximum. For more information, see [Choosing a city-network maximum value](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/IMCityNetworksMaximum.html) in the _Amazon CloudWatch User Guide_.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                MonitorName:
                  $ref: '#/components/schemas/ResourceName'
                Resources:
                  $ref: '#/components/schemas/SetOfARNs'
                ClientToken:
                  $ref: '#/components/schemas/String'
                Tags:
                  $ref: '#/components/schemas/TagMap'
                MaxCityNetworksToMonitor:
                  $ref: '#/components/schemas/MaxCityNetworksToMonitor'
                InternetMeasurementsLogDelivery:
                  $ref: '#/components/schemas/InternetMeasurementsLogDelivery'
                TrafficPercentageToMonitor:
                  $ref: '#/components/schemas/TrafficPercentageToMonitor'
                HealthEventsConfig:
                  $ref: '#/components/schemas/HealthEventsConfig'
      responses:
        '200': {}
        '403':
          description: |-
            The request exceeded a service quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '409':
          description: |-
            The requested resource is in use.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An internal error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Invalid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: ListMonitors
      description: |-
        Lists all of your monitors for Amazon CloudWatch Internet Monitor and their statuses, along with the Amazon Resource Name (ARN) and name of each monitor.
      parameters:
      - name: NextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      - name: MaxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: MonitorStatus
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      - name: IncludeLinkedAccounts
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Boolean'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have sufficient permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Invalid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /v20210603/Monitors/{MonitorName}:
    delete:
      operationId: DeleteMonitor
      description: |-
        Deletes a monitor in Amazon CloudWatch Internet Monitor.
      parameters:
      - name: MonitorName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have sufficient permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Invalid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetMonitor
      description: |-
        Gets information about a monitor in Amazon CloudWatch Internet Monitor based on a monitor name. The information returned includes the Amazon Resource Name (ARN), create time, modified time, resources included in the monitor, and status information.
      parameters:
      - name: MonitorName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      - name: LinkedAccountId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/AccountId'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have sufficient permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Invalid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    patch:
      operationId: UpdateMonitor
      description: |-
        Updates a monitor. You can update a monitor to change the percentage of traffic to monitor or the maximum number of city-networks (locations and ASNs), to add or remove resources, or to change the status of the monitor. Note that you can't change the name of a monitor.

        The city-network maximum that you choose is the limit, but you only pay for the number of city-networks that are actually monitored. For more information, see [Choosing a city-network maximum value](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/IMCityNetworksMaximum.html) in the _Amazon CloudWatch User Guide_.
      parameters:
      - name: MonitorName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ResourcesToAdd:
                  $ref: '#/components/schemas/SetOfARNs'
                ResourcesToRemove:
                  $ref: '#/components/schemas/SetOfARNs'
                Status:
                  $ref: '#/components/schemas/MonitorConfigState'
                ClientToken:
                  $ref: '#/components/schemas/String'
                MaxCityNetworksToMonitor:
                  $ref: '#/components/schemas/MaxCityNetworksToMonitor'
                InternetMeasurementsLogDelivery:
                  $ref: '#/components/schemas/InternetMeasurementsLogDelivery'
                TrafficPercentageToMonitor:
                  $ref: '#/components/schemas/TrafficPercentageToMonitor'
                HealthEventsConfig:
                  $ref: '#/components/schemas/HealthEventsConfig'
      responses:
        '200': {}
        '403':
          description: |-
            The request exceeded a service quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '500':
          description: |-
            An internal error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The request specifies a resource that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Invalid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /v20210603/Monitors/{MonitorName}/HealthEvents/{EventId}:
    get:
      operationId: GetHealthEvent
      description: |-
        Gets information that Amazon CloudWatch Internet Monitor has created and stored about a health event for a specified monitor. This information includes the impacted locations, and all the information related to the event, by location.

        The information returned includes the impact on performance, availability, and round-trip time, information about the network providers (ASNs), the event type, and so on.

        Information rolled up at the global traffic level is also returned, including the impact type and total traffic impact.
      parameters:
      - name: MonitorName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      - name: EventId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/HealthEventName'
      - name: LinkedAccountId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/AccountId'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have sufficient permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Invalid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /v20210603/InternetEvents/{EventId}:
    get:
      operationId: GetInternetEvent
      description: |-
        Gets information that Amazon CloudWatch Internet Monitor has generated about an internet event. Internet Monitor displays information about recent global health events, called internet events, on a global outages map that is available to all Amazon Web Services customers.

        The information returned here includes the impacted location, when the event started and (if the event is over) ended, the type of event (`PERFORMANCE` or `AVAILABILITY`), and the status (`ACTIVE` or `RESOLVED`).
      parameters:
      - name: EventId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/InternetEventId'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have sufficient permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Invalid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /v20210603/Monitors/{MonitorName}/Queries/{QueryId}/Results:
    get:
      operationId: GetQueryResults
      description: |-
        Return the data for a query with the Amazon CloudWatch Internet Monitor query interface. Specify the query that you want to return results for by providing a `QueryId` and a monitor name.

        For more information about using the query interface, including examples, see [Using the Amazon CloudWatch Internet Monitor query interface](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-IM-view-cw-tools-cwim-query.html) in the Amazon CloudWatch Internet Monitor User Guide.
      parameters:
      - name: MonitorName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      - name: QueryId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: NextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      - name: MaxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/QueryMaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            The request exceeded a service quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '500':
          description: |-
            An internal error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Invalid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /v20210603/Monitors/{MonitorName}/Queries/{QueryId}/Status:
    get:
      operationId: GetQueryStatus
      description: |-
        Returns the current status of a query for the Amazon CloudWatch Internet Monitor query interface, for a specified query ID and monitor. When you run a query, check the status to make sure that the query has `SUCCEEDED` before you review the results.

          * `QUEUED`: The query is scheduled to run.

          * `RUNNING`: The query is in progress but not complete.

          * `SUCCEEDED`: The query completed sucessfully.

          * `FAILED`: The query failed due to an error.

          * `CANCELED`: The query was canceled.
      parameters:
      - name: MonitorName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      - name: QueryId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '403':
          description: |-
            The request exceeded a service quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '500':
          description: |-
            An internal error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Invalid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /v20210603/Monitors/{MonitorName}/HealthEvents:
    get:
      operationId: ListHealthEvents
      description: |-
        Lists all health events for a monitor in Amazon CloudWatch Internet Monitor. Returns information for health events including the event start and end times, and the status.

        Health events that have start times during the time frame that is requested are not included in the list of health events.
      parameters:
      - name: MonitorName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      - name: StartTime
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Timestamp'
      - name: EndTime
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Timestamp'
      - name: NextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      - name: MaxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: EventStatus
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/HealthEventStatus'
      - name: LinkedAccountId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/AccountId'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have sufficient permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Invalid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /v20210603/InternetEvents:
    get:
      operationId: ListInternetEvents
      description: |-
        Lists internet events that cause performance or availability issues for client locations. Amazon CloudWatch Internet Monitor displays information about recent global health events, called internet events, on a global outages map that is available to all Amazon Web Services customers.

        You can constrain the list of internet events returned by providing a start time and end time to define a total time frame for events you want to list. Both start time and end time specify the time when an event started. End time is optional. If you don't include it, the default end time is the current time.

        You can also limit the events returned to a specific status (`ACTIVE` or `RESOLVED`) or type (`PERFORMANCE` or `AVAILABILITY`).
      parameters:
      - name: NextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      - name: InternetEventMaxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/InternetEventMaxResults'
      - name: StartTime
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Timestamp'
      - name: EndTime
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Timestamp'
      - name: EventStatus
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      - name: EventType
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have sufficient permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Invalid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /tags/{ResourceArn}:
    get:
      operationId: ListTagsForResource
      description: |-
        Lists the tags for a resource. Tags are supported only for monitors in Amazon CloudWatch Internet Monitor.
      parameters:
      - name: ResourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MonitorArn'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have sufficient permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            A bad request was received.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            There was an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The request specifies something that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            There were too many requests.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    post:
      operationId: TagResource
      description: |-
        Adds a tag to a resource. Tags are supported only for monitors in Amazon CloudWatch Internet Monitor. You can add a maximum of 50 tags in Internet Monitor.

        A minimum of one tag is required for this call. It returns an error if you use the `TagResource` request with 0 tags.
      parameters:
      - name: ResourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MonitorArn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '204': {}
        '403':
          description: |-
            You don't have sufficient permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            A bad request was received.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            There was an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The request specifies something that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            There were too many requests.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    delete:
      operationId: UntagResource
      description: |-
        Removes a tag from a resource.
      parameters:
      - name: ResourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MonitorArn'
      - name: tagKeys
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/TagKeys'
      responses:
        '204': {}
        '403':
          description: |-
            You don't have sufficient permission to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            A bad request was received.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            There was an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The request specifies something that doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            There were too many requests.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v20210603/Monitors/{MonitorName}/Queries:
    post:
      operationId: StartQuery
      description: |-
        Start a query to return data for a specific query type for the Amazon CloudWatch Internet Monitor query interface. Specify a time period for the data that you want returned by using `StartTime` and `EndTime`. You filter the query results to return by providing parameters that you specify with `FilterParameters`.

        For more information about using the query interface, including examples, see [Using the Amazon CloudWatch Internet Monitor query interface](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-IM-view-cw-tools-cwim-query.html) in the Amazon CloudWatch Internet Monitor User Guide.
      parameters:
      - name: MonitorName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                StartTime:
                  $ref: '#/components/schemas/Timestamp'
                EndTime:
                  $ref: '#/components/schemas/Timestamp'
                QueryType:
                  $ref: '#/components/schemas/QueryType'
                FilterParameters:
                  $ref: '#/components/schemas/FilterParameters'
                LinkedAccountId:
                  $ref: '#/components/schemas/AccountId'
      responses:
        '200': {}
        '403':
          description: |-
            The request exceeded a service quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '500':
          description: |-
            An internal error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Invalid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /v20210603/Monitors/{MonitorName}/Queries/{QueryId}:
    delete:
      operationId: StopQuery
      description: |-
        Stop a query that is progress for a specific monitor.
      parameters:
      - name: MonitorName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceName'
      - name: QueryId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '403':
          description: |-
            The request exceeded a service quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '500':
          description: |-
            An internal error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            Invalid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
components:
  schemas:
    AccessDeniedException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      description: You don't have sufficient permission to perform this action.
    AccountId:
      type: string
      minLength: 12
      maxLength: 12
    Arn:
      type: string
      pattern: ^arn:.*
      minLength: 20
      maxLength: 2048
    AvailabilityMeasurement:
      type: object
      properties:
        ExperienceScore:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: 'Experience scores, or health scores are calculated for different
            geographic and network provider combinations (that is, different granularities)
            and also summed into global scores. If you view performance or availability
            scores without filtering for any specific geography or service provider,
            Amazon CloudWatch Internet Monitor provides global health scores.


            The Amazon CloudWatch Internet Monitor chapter in the _CloudWatch User
            Guide_ includes detailed information about how Internet Monitor calculates
            health scores, including performance and availability scores, and when
            it creates and resolves health events. For more information, see [How
            Amazon Web Services calculates performance and availability scores](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-IM-inside-internet-monitor.html#IMExperienceScores)
            in the Amazon CloudWatch Internet Monitor section of the _CloudWatch User
            Guide_.'
        PercentOfTotalTrafficImpacted:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: 'The impact on total traffic that a health event has, in increased
            latency or reduced availability. This is the percentage of how much latency
            has increased or availability has decreased during the event, compared
            to what is typical for traffic from this client location to the Amazon
            Web Services location using this client network.


            For information about how Internet Monitor calculates impact, see [How
            Internet Monitor works](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-IM-inside-internet-monitor.html)
            in the Amazon CloudWatch Internet Monitor section of the Amazon CloudWatch
            User Guide.'
        PercentOfClientLocationImpacted:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: 'The percentage of impact caused by a health event for client
            location traffic globally.


            For information about how Internet Monitor calculates impact, see [Inside
            Internet Monitor](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-IM-inside-internet-monitor.html)
            in the Amazon CloudWatch Internet Monitor section of the Amazon CloudWatch
            User Guide.'
      description: 'Amazon CloudWatch Internet Monitor calculates measurements about
        the availability for your application''s internet traffic between client locations
        and Amazon Web Services. Amazon Web Services has substantial historical data
        about internet performance and availability between Amazon Web Services services
        and different network providers and geographies. By applying statistical analysis
        to the data, Internet Monitor can detect when the performance and availability
        for your application has dropped, compared to an estimated baseline that''s
        already calculated. To make it easier to see those drops, we report that information
        to you in the form of health scores: a performance score and an availability
        score.


        Availability in Internet Monitor represents the estimated percentage of traffic
        that is not seeing an availability drop. For example, an availability score
        of 99% for an end user and service location pair is equivalent to 1% of the
        traffic experiencing an availability drop for that pair.


        For more information, see [How Internet Monitor calculates performance and
        availability scores](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-IM-inside-internet-monitor.html#IMExperienceScores)
        in the Amazon CloudWatch Internet Monitor section of the _Amazon CloudWatch
        User Guide_.'
    BadRequestException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      description: A bad request was received.
    ClientLocation:
      type: object
      properties:
        ASName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the internet service provider (ISP) or network
            (ASN).
        ASNumber:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: The Autonomous System Number (ASN) of the network at an impacted
            location.
        Country:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the country where the internet event is located.
        Subdivision:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The subdivision location where the health event is located.
            The subdivision usually maps to states in most countries (including the
            United States). For United Kingdom, it maps to a country (England, Scotland,
            Wales) or province (Northern Ireland).
        Metro:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'The metro area where the health event is located.


            Metro indicates a metropolitan region in the United States, such as the
            region around New York City. In non-US countries, this is a second-level
            subdivision. For example, in the United Kingdom, it could be a county,
            a London borough, a unitary authority, council area, and so on.'
        City:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the city where the internet event is located.
        Latitude:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: The latitude where the internet event is located.
        Longitude:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: The longitude where the internet event is located.
      required:
      - ASName
      - ASNumber
      - Country
      - City
      - Latitude
      - Longitude
      description: The impacted location, such as a city, that Amazon Web Services
        clients access application resources from.
    ConflictException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      description: The requested resource is in use.
    CreateMonitorInput:
      type: object
      properties:
        MonitorName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the monitor.
        Resources:
          allOf:
          - $ref: '#/components/schemas/SetOfARNs'
          description: 'The resources to include in a monitor, which you provide as
            a set of Amazon Resource Names (ARNs). Resources can be VPCs, NLBs, Amazon
            CloudFront distributions, or Amazon WorkSpaces directories.


            You can add a combination of VPCs and CloudFront distributions, or you
            can add WorkSpaces directories, or you can add NLBs. You can''t add NLBs
            or WorkSpaces directories together with any other resources.


            If you add only Amazon VPC resources, at least one VPC must have an Internet
            Gateway attached to it, to make sure that it has internet connectivity.'
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A unique, case-sensitive string of up to 64 ASCII characters
            that you specify to make an idempotent API request. Don't reuse the same
            client token for other API requests.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The tags for a monitor. You can add a maximum of 50 tags in
            Internet Monitor.
        MaxCityNetworksToMonitor:
          allOf:
          - $ref: '#/components/schemas/MaxCityNetworksToMonitor'
          description: 'The maximum number of city-networks to monitor for your resources.
            A city-network is the location (city) where clients access your application
            resources from and the ASN or network provider, such as an internet service
            provider (ISP), that clients access the resources through. Setting this
            limit can help control billing costs.


            To learn more, see [Choosing a city-network maximum value ](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/IMCityNetworksMaximum.html)
            in the Amazon CloudWatch Internet Monitor section of the _CloudWatch User
            Guide_.'
        InternetMeasurementsLogDelivery:
          allOf:
          - $ref: '#/components/schemas/InternetMeasurementsLogDelivery'
          description: Publish internet measurements for Internet Monitor to an Amazon
            S3 bucket in addition to CloudWatch Logs.
        TrafficPercentageToMonitor:
          allOf:
          - $ref: '#/components/schemas/TrafficPercentageToMonitor'
          description: 'The percentage of the internet-facing traffic for your application
            that you want to monitor with this monitor. If you set a city-networks
            maximum, that limit overrides the traffic percentage that you set.


            To learn more, see [Choosing an application traffic percentage to monitor
            ](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/IMTrafficPercentage.html)
            in the Amazon CloudWatch Internet Monitor section of the _CloudWatch User
            Guide_.'
        HealthEventsConfig:
          allOf:
          - $ref: '#/components/schemas/HealthEventsConfig'
          description: 'Defines the threshold percentages and other configuration
            information for when Amazon CloudWatch Internet Monitor creates a health
            event. Internet Monitor creates a health event when an internet issue
            that affects your application end users has a health score percentage
            that is at or below a specific threshold, and, sometimes, when other criteria
            are met.


            If you don''t set a health event threshold, the default value is 95%.


            For more information, see [ Change health event thresholds](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-IM-overview.html#IMUpdateThresholdFromOverview)
            in the Internet Monitor section of the _CloudWatch User Guide_.'
      required:
      - MonitorName
    CreateMonitorOutput:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/MonitorArn'
          description: The Amazon Resource Name (ARN) of the monitor.
        Status:
          allOf:
          - $ref: '#/components/schemas/MonitorConfigState'
          description: The status of a monitor.
      required:
      - Arn
      - Status
    DeleteMonitorInput:
      type: object
      properties:
        MonitorName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the monitor to delete.
      required:
      - MonitorName
    DeleteMonitorOutput:
      type: object
      properties: {}
    FilterList:
      type: array
      items:
        type: string
    FilterParameter:
      type: object
      properties:
        Field:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A data field that you want to filter, to further scope your
            application's Internet Monitor data in a repository that you created by
            running a query. A field might be `city`, for example. The field must
            be one of the fields that was returned by the specific query that you
            used to create the repository.
        Operator:
          allOf:
          - $ref: '#/components/schemas/Operator'
          description: The operator to use with the filter field and a value, such
            as `not_equals`.
        Values:
          allOf:
          - $ref: '#/components/schemas/FilterList'
          description: One or more values to be used, together with the specified
            operator, to filter data for a query. For example, you could specify an
            array of values such as `["Seattle", "Redmond"]`. Values in the array
            are separated by commas.
      description: 'A filter that you use with the results of a Amazon CloudWatch
        Internet Monitor query that you created and ran. The query sets up a repository
        of data that is a subset of your application''s Internet Monitor data. `FilterParameter`
        is a string that defines how you want to filter the repository of data to
        return a set of results, based on your criteria.


        The filter parameters that you can specify depend on the query type that you
        used to create the repository, since each query type returns a different set
        of Internet Monitor data.


        For each filter, you specify a field (such as `city`), an operator (such as
        `not_equals`, and a value or array of values (such as `["Seattle", "Redmond"]`).
        Separate values in the array with commas.


        For more information about specifying filter parameters, see [Using the Amazon
        CloudWatch Internet Monitor query interface](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-IM-view-cw-tools-cwim-query.html)
        in the Amazon CloudWatch Internet Monitor User Guide.'
    FilterParameters:
      type: array
      items:
        $ref: '#/components/schemas/FilterParameter'
    GetHealthEventInput:
      type: object
      properties:
        MonitorName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the monitor.
        EventId:
          allOf:
          - $ref: '#/components/schemas/HealthEventName'
          description: The internally-generated identifier of a health event. Because
            `EventID` contains the forward slash (“/”) character, you must URL-encode
            the `EventID` field in the request URL.
        LinkedAccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The account ID for an account that you've set up cross-account
            sharing for in Amazon CloudWatch Internet Monitor. You configure cross-account
            sharing by using Amazon CloudWatch Observability Access Manager. For more
            information, see [Internet Monitor cross-account observability](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cwim-cross-account.html)
            in the Amazon CloudWatch Internet Monitor User Guide.
      required:
      - MonitorName
      - EventId
    GetHealthEventOutput:
      type: object
      properties:
        EventArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the event.
        EventId:
          allOf:
          - $ref: '#/components/schemas/HealthEventName'
          description: The internally-generated identifier of a health event.
        StartedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time when a health event started.
        EndedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time when a health event was resolved. If the health event
            is still active, the end time is not set.
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time when a health event was created.
        LastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time when a health event was last updated or recalculated.
        ImpactedLocations:
          allOf:
          - $ref: '#/components/schemas/ImpactedLocationsList'
          description: The locations affected by a health event.
        Status:
          allOf:
          - $ref: '#/components/schemas/HealthEventStatus'
          description: The status of a health event.
        PercentOfTotalTrafficImpacted:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: The impact on total traffic that a health event has, in increased
            latency or reduced availability. This is the percentage of how much latency
            has increased or availability has decreased during the event, compared
            to what is typical for traffic from this client location to the Amazon
            Web Services location using this client network.
        ImpactType:
          allOf:
          - $ref: '#/components/schemas/HealthEventImpactType'
          description: The type of impairment of a specific health event.
        HealthScoreThreshold:
          allOf:
          - $ref: '#/components/schemas/Percentage'
          description: The threshold percentage for a health score that determines,
            along with other configuration information, when Internet Monitor creates
            a health event when there's an internet issue that affects your application
            end users.
      required:
      - EventArn
      - EventId
      - StartedAt
      - LastUpdatedAt
      - ImpactedLocations
      - Status
      - ImpactType
    GetInternetEventInput:
      type: object
      properties:
        EventId:
          allOf:
          - $ref: '#/components/schemas/InternetEventId'
          description: The `EventId` of the internet event to return information for.
      required:
      - EventId
    GetInternetEventOutput:
      type: object
      properties:
        EventId:
          allOf:
          - $ref: '#/components/schemas/InternetEventId'
          description: The internally-generated identifier of an internet event.
        EventArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the internet event.
        StartedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time when the internet event started.
        EndedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time when the internet event ended. If the event hasn't
            ended yet, this value is empty.
        ClientLocation:
          allOf:
          - $ref: '#/components/schemas/ClientLocation'
          description: The impacted location, such as a city, where clients access
            Amazon Web Services application resources.
        EventType:
          allOf:
          - $ref: '#/components/schemas/InternetEventType'
          description: The type of network impairment.
        EventStatus:
          allOf:
          - $ref: '#/components/schemas/InternetEventStatus'
          description: The status of the internet event.
      required:
      - EventId
      - EventArn
      - StartedAt
      - ClientLocation
      - EventType
      - EventStatus
    GetMonitorInput:
      type: object
      properties:
        MonitorName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the monitor.
        LinkedAccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The account ID for an account that you've set up cross-account
            sharing for in Amazon CloudWatch Internet Monitor. You configure cross-account
            sharing by using Amazon CloudWatch Observability Access Manager. For more
            information, see [Internet Monitor cross-account observability](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cwim-cross-account.html)
            in the Amazon CloudWatch Internet Monitor User Guide.
      required:
      - MonitorName
    GetMonitorOutput:
      type: object
      properties:
        MonitorName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the monitor.
        MonitorArn:
          allOf:
          - $ref: '#/components/schemas/MonitorArn'
          description: The Amazon Resource Name (ARN) of the monitor.
        Resources:
          allOf:
          - $ref: '#/components/schemas/SetOfARNs'
          description: The resources monitored by the monitor. Resources are listed
            by their Amazon Resource Names (ARNs).
        Status:
          allOf:
          - $ref: '#/components/schemas/MonitorConfigState'
          description: The status of the monitor.
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time when the monitor was created.
        ModifiedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The last time that the monitor was modified.
        ProcessingStatus:
          allOf:
          - $ref: '#/components/schemas/MonitorProcessingStatusCode'
          description: The health of the data processing for the monitor.
        ProcessingStatusInfo:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Additional information about the health of the data processing
            for the monitor.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The tags that have been added to monitor.
        MaxCityNetworksToMonitor:
          allOf:
          - $ref: '#/components/schemas/MaxCityNetworksToMonitor'
          description: 'The maximum number of city-networks to monitor for your resources.
            A city-network is the location (city) where clients access your application
            resources from and the ASN or network provider, such as an internet service
            provider (ISP), that clients access the resources through. This limit
            can help control billing costs.


            To learn more, see [Choosing a city-network maximum value ](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/IMCityNetworksMaximum.html)
            in the Amazon CloudWatch Internet Monitor section of the _CloudWatch User
            Guide_.'
        InternetMeasurementsLogDelivery:
          allOf:
          - $ref: '#/components/schemas/InternetMeasurementsLogDelivery'
          description: Publish internet measurements for Internet Monitor to another
            location, such as an Amazon S3 bucket. The measurements are also published
            to Amazon CloudWatch Logs.
        TrafficPercentageToMonitor:
          allOf:
          - $ref: '#/components/schemas/TrafficPercentageToMonitor'
          description: 'The percentage of the internet-facing traffic for your application
            to monitor with this monitor. If you set a city-networks maximum, that
            limit overrides the traffic percentage that you set.


            To learn more, see [Choosing an application traffic percentage to monitor
            ](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/IMTrafficPercentage.html)
            in the Amazon CloudWatch Internet Monitor section of the _CloudWatch User
            Guide_.'
        HealthEventsConfig:
          allOf:
          - $ref: '#/components/schemas/HealthEventsConfig'
          description: 'The list of health event threshold configurations. The threshold
            percentage for a health score determines, along with other configuration
            information, when Internet Monitor creates a health event when there''s
            an internet issue that affects your application end users.


            For more information, see [ Change health event thresholds](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-IM-overview.html#IMUpdateThresholdFromOverview)
            in the Internet Monitor section of the _CloudWatch User Guide_.'
      required:
      - MonitorName
      - MonitorArn
      - Resources
      - Status
      - CreatedAt
      - ModifiedAt
    GetQueryResultsInput:
      type: object
      properties:
        MonitorName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the monitor to return data for.
        QueryId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the query that you want to return data results for.
            A `QueryId` is an internally-generated identifier for a specific query.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The token for the next set of results. You receive this token
            from a previous call.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/QueryMaxResults'
          description: The number of query results that you want to return with this
            call.
      required:
      - MonitorName
      - QueryId
    GetQueryResultsOutput:
      type: object
      properties:
        Fields:
          allOf:
          - $ref: '#/components/schemas/QueryFields'
          description: The fields that the query returns data for. Fields are name-data
            type pairs, such as `availability_score`-`float`.
        Data:
          allOf:
          - $ref: '#/components/schemas/QueryData'
          description: The data results that the query returns. Data is returned in
            arrays, aligned with the `Fields` for the query, which creates a repository
            of Amazon CloudWatch Internet Monitor information for your application.
            Then, you can filter the information in the repository by using `FilterParameters`
            that you define.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The token for the next set of results. You receive this token
            from a previous call.
      required:
      - Fields
      - Data
    GetQueryStatusInput:
      type: object
      properties:
        MonitorName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the monitor.
        QueryId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the query that you want to return the status for.
            A `QueryId` is an internally-generated dentifier for a specific query.
      required:
      - MonitorName
      - QueryId
    GetQueryStatusOutput:
      type: object
      properties:
        Status:
          allOf:
          - $ref: '#/components/schemas/QueryStatus'
          description: The current status for a query.
      required:
      - Status
    HealthEvent:
      type: object
      properties:
        EventArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the event.
        EventId:
          allOf:
          - $ref: '#/components/schemas/HealthEventName'
          description: The internally-generated identifier of a specific network traffic
            impairment health event.
        StartedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: When a health event started.
        EndedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time when a health event ended. If the health event is
            still active, then the end time is not set.
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: When the health event was created.
        LastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: When the health event was last updated.
        ImpactedLocations:
          allOf:
          - $ref: '#/components/schemas/ImpactedLocationsList'
          description: The locations impacted by the health event.
        Status:
          allOf:
          - $ref: '#/components/schemas/HealthEventStatus'
          description: The status of a health event.
        PercentOfTotalTrafficImpacted:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: The impact on total traffic that a health event has, in increased
            latency or reduced availability. This is the percentage of how much latency
            has increased or availability has decreased during the event, compared
            to what is typical for traffic from this client location to the Amazon
            Web Services location using this client network.
        ImpactType:
          allOf:
          - $ref: '#/components/schemas/HealthEventImpactType'
          description: The type of impairment for a health event.
        HealthScoreThreshold:
          allOf:
          - $ref: '#/components/schemas/Percentage'
          description: The value of the threshold percentage for performance or availability
            that was configured when Amazon CloudWatch Internet Monitor created the
            health event.
      required:
      - EventArn
      - EventId
      - StartedAt
      - LastUpdatedAt
      - ImpactedLocations
      - Status
      - ImpactType
      description: Information about a health event created in a monitor in Amazon
        CloudWatch Internet Monitor.
    HealthEventImpactType:
      type: string
      enum:
      - AVAILABILITY
      - PERFORMANCE
      - LOCAL_AVAILABILITY
      - LOCAL_PERFORMANCE
    HealthEventList:
      type: array
      items:
        $ref: '#/components/schemas/HealthEvent'
    HealthEventName:
      type: string
      pattern: ^[a-zA-Z0-9/_.-]+$
      minLength: 1
      maxLength: 255
    HealthEventStatus:
      type: string
      enum:
      - ACTIVE
      - RESOLVED
    HealthEventsConfig:
      type: object
      properties:
        AvailabilityScoreThreshold:
          allOf:
          - $ref: '#/components/schemas/Percentage'
          description: The health event threshold percentage set for availability
            scores.
        PerformanceScoreThreshold:
          allOf:
          - $ref: '#/components/schemas/Percentage'
          description: The health event threshold percentage set for performance scores.
        AvailabilityLocalHealthEventsConfig:
          allOf:
          - $ref: '#/components/schemas/LocalHealthEventsConfig'
          description: The configuration that determines the threshold and other conditions
            for when Internet Monitor creates a health event for a local availability
            issue.
        PerformanceLocalHealthEventsConfig:
          allOf:
          - $ref: '#/components/schemas/LocalHealthEventsConfig'
          description: The configuration that determines the threshold and other conditions
            for when Internet Monitor creates a health event for a local performance
            issue.
      description: 'A complex type with the configuration information that determines
        the threshold and other conditions for when Internet Monitor creates a health
        event for an overall performance or availability issue, across an application''s
        geographies.


        Defines the percentages, for overall performance scores and availability scores
        for an application, that are the thresholds for when Amazon CloudWatch Internet
        Monitor creates a health event. You can override the defaults to set a custom
        threshold for overall performance or availability scores, or both.


        You can also set thresholds for local health scores,, where Internet Monitor
        creates a health event when scores cross a threshold for one or more city-networks,
        in addition to creating an event when an overall score crosses a threshold.


        If you don''t set a health event threshold, the default value is 95%.


        For local thresholds, you also set a minimum percentage of overall traffic
        that is impacted by an issue before Internet Monitor creates an event. In
        addition, you can disable local thresholds, for performance scores, availability
        scores, or both.


        For more information, see [ Change health event thresholds](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-IM-overview.html#IMUpdateThresholdFromOverview)
        in the Internet Monitor section of the _CloudWatch User Guide_.'
    ImpactedLocation:
      type: object
      properties:
        ASName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the internet service provider (ISP) or network
            (ASN).
        ASNumber:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: The Autonomous System Number (ASN) of the network at an impacted
            location.
        Country:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the country where the health event is located.
        Subdivision:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The subdivision location where the health event is located.
            The subdivision usually maps to states in most countries (including the
            United States). For United Kingdom, it maps to a country (England, Scotland,
            Wales) or province (Northern Ireland).
        Metro:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'The metro area where the health event is located.


            Metro indicates a metropolitan region in the United States, such as the
            region around New York City. In non-US countries, this is a second-level
            subdivision. For example, in the United Kingdom, it could be a county,
            a London borough, a unitary authority, council area, and so on.'
        City:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the city where the health event is located.
        Latitude:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: The latitude where the health event is located.
        Longitude:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: The longitude where the health event is located.
        CountryCode:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The country code where the health event is located. The ISO
            3166-2 codes for the country is provided, when available.
        SubdivisionCode:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The subdivision code where the health event is located. The
            ISO 3166-2 codes for country subdivisions is provided, when available.
        ServiceLocation:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The service location where the health event is located.
        Status:
          allOf:
          - $ref: '#/components/schemas/HealthEventStatus'
          description: The status of the health event at an impacted location.
        CausedBy:
          allOf:
          - $ref: '#/components/schemas/NetworkImpairment'
          description: 'The cause of the impairment. There are two types of network
            impairments: Amazon Web Services network issues or internet issues. Internet
            issues are typically a problem with a network provider, like an internet
            service provider (ISP).'
        InternetHealth:
          allOf:
          - $ref: '#/components/schemas/InternetHealth'
          description: The calculated health at a specific location.
        Ipv4Prefixes:
          allOf:
          - $ref: '#/components/schemas/Ipv4PrefixList'
          description: The IPv4 prefixes at the client location that was impacted
            by the health event.
      required:
      - ASName
      - ASNumber
      - Country
      - Status
      description: 'Information about a location impacted by a health event in Amazon
        CloudWatch Internet Monitor.


        Geographic regions are hierarchically categorized into country, subdivision,
        metro and city geographic granularities. The geographic region is identified
        based on the IP address used at the client locations.'
    ImpactedLocationsList:
      type: array
      items:
        $ref: '#/components/schemas/ImpactedLocation'
    InternalServerErrorException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      description: There was an internal server error.
    InternalServerException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      description: An internal error occurred.
    InternetEventId:
      type: string
      pattern: ^[a-zA-Z0-9-]+$
      minLength: 1
      maxLength: 255
    InternetEventMaxResults:
      type: integer
      minimum: 1
      maximum: 100
    InternetEventStatus:
      type: string
      enum:
      - ACTIVE
      - RESOLVED
    InternetEventSummary:
      type: object
      properties:
        EventId:
          allOf:
          - $ref: '#/components/schemas/InternetEventId'
          description: The internally-generated identifier of an internet event.
        EventArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the internet event.
        StartedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time when an internet event started.
        EndedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time when an internet event ended. If the event hasn't
            ended yet, this value is empty.
        ClientLocation:
          allOf:
          - $ref: '#/components/schemas/ClientLocation'
          description: The impacted location, such as a city, that Amazon Web Services
            clients access application resources from.
        EventType:
          allOf:
          - $ref: '#/components/schemas/InternetEventType'
          description: The type of network impairment.
        EventStatus:
          allOf:
          - $ref: '#/components/schemas/InternetEventStatus'
          description: The status of an internet event.
      required:
      - EventId
      - EventArn
      - StartedAt
      - ClientLocation
      - EventType
      - EventStatus
      description: A summary of information about an internet event in Amazon CloudWatch
        Internet Monitor. Internet events are issues that cause performance degradation
        or availability problems for impacted Amazon Web Services client locations.
        Internet Monitor displays information about recent global health events, called
        internet events, on a global outages map that is available to all Amazon Web
        Services customers.
    InternetEventType:
      type: string
      enum:
      - AVAILABILITY
      - PERFORMANCE
    InternetEventsList:
      type: array
      items:
        $ref: '#/components/schemas/InternetEventSummary'
    InternetHealth:
      type: object
      properties:
        Availability:
          allOf:
          - $ref: '#/components/schemas/AvailabilityMeasurement'
          description: 'Availability in Internet Monitor represents the estimated
            percentage of traffic that is not seeing an availability drop. For example,
            an availability score of 99% for an end user and service location pair
            is equivalent to 1% of the traffic experiencing an availability drop for
            that pair.


            For more information, see [How Internet Monitor calculates performance
            and availability scores](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-IM-inside-internet-monitor.html#IMExperienceScores)
            in the Amazon CloudWatch Internet Monitor section of the _CloudWatch User
            Guide_.'
        Performance:
          allOf:
          - $ref: '#/components/schemas/PerformanceMeasurement'
          description: 'Performance in Internet Monitor represents the estimated percentage
            of traffic that is not seeing a performance drop. For example, a performance
            score of 99% for an end user and service location pair is equivalent to
            1% of the traffic experiencing a performance drop for that pair.


            For more information, see [How Internet Monitor calculates performance
            and availability scores](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-IM-inside-internet-monitor.html#IMExperienceScores)
            in the Amazon CloudWatch Internet Monitor section of the _CloudWatch User
            Guide_.'
      description: 'Internet health includes measurements calculated by Amazon CloudWatch
        Internet Monitor about the performance and availability for your application
        on the internet. Amazon Web Services has substantial historical data about
        internet performance and availability between Amazon Web Services services
        and different network providers and geographies. By applying statistical analysis
        to the data, Internet Monitor can detect when the performance and availability
        for your application has dropped, compared to an estimated baseline that''s
        already calculated. To make it easier to see those drops, Internet Monitor
        reports the information to you in the form of health scores: a performance
        score and an availability score.'
    InternetMeasurementsLogDelivery:
      type: object
      properties:
        S3Config:
          allOf:
          - $ref: '#/components/schemas/S3Config'
          description: The configuration information for publishing Internet Monitor
            internet measurements to Amazon S3. The configuration includes the bucket
            name and (optionally) prefix for the S3 bucket to store the measurements,
            and the delivery status. The delivery status is `ENABLED` or `DISABLED`,
            depending on whether you choose to deliver internet measurements to S3
            logs.
      description: Publish internet measurements to an Amazon S3 bucket in addition
        to CloudWatch Logs.
    Ipv4PrefixList:
      type: array
      items:
        type: string
    LimitExceededException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      description: The request exceeded a service quota.
    ListHealthEventsInput:
      type: object
      properties:
        MonitorName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the monitor.
        StartTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time when a health event started.
        EndTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time when a health event ended. If the health event is
            still ongoing, then the end time is not set.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The token for the next set of results. You receive this token
            from a previous call.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The number of health event objects that you want to return
            with this call.
        EventStatus:
          allOf:
          - $ref: '#/components/schemas/HealthEventStatus'
          description: The status of a health event.
        LinkedAccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The account ID for an account that you've set up cross-account
            sharing for in Amazon CloudWatch Internet Monitor. You configure cross-account
            sharing by using Amazon CloudWatch Observability Access Manager. For more
            information, see [Internet Monitor cross-account observability](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cwim-cross-account.html)
            in the Amazon CloudWatch Internet Monitor User Guide.
      required:
      - MonitorName
    ListHealthEventsOutput:
      type: object
      properties:
        HealthEvents:
          allOf:
          - $ref: '#/components/schemas/HealthEventList'
          description: A list of health events.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The token for the next set of results. You receive this token
            from a previous call.
      required:
      - HealthEvents
    ListInternetEventsInput:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The token for the next set of results. You receive this token
            from a previous call.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/InternetEventMaxResults'
          description: The number of query results that you want to return with this
            call.
        StartTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The start time of the time window that you want to get a list
            of internet events for.
        EndTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The end time of the time window that you want to get a list
            of internet events for.
        EventStatus:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The status of an internet event.
        EventType:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The type of network impairment.
    ListInternetEventsOutput:
      type: object
      properties:
        InternetEvents:
          allOf:
          - $ref: '#/components/schemas/InternetEventsList'
          description: A set of internet events returned for the list operation.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The token for the next set of results. You receive this token
            from a previous call.
      required:
      - InternetEvents
    ListMonitorsInput:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The token for the next set of results. You receive this token
            from a previous call.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The number of monitor objects that you want to return with
            this call.
        MonitorStatus:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'The status of a monitor. This includes the status of the data
            processing for the monitor and the status of the monitor itself.


            For information about the statuses for a monitor, see [ Monitor](https://docs.aws.amazon.com/internet-monitor/latest/api/API_Monitor.html).'
        IncludeLinkedAccounts:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: A boolean option that you can set to `TRUE` to include monitors
            for linked accounts in a list of monitors, when you've set up cross-account
            sharing in Amazon CloudWatch Internet Monitor. You configure cross-account
            sharing by using Amazon CloudWatch Observability Access Manager. For more
            information, see [Internet Monitor cross-account observability](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cwim-cross-account.html)
            in the Amazon CloudWatch Internet Monitor User Guide.
    ListMonitorsOutput:
      type: object
      properties:
        Monitors:
          allOf:
          - $ref: '#/components/schemas/MonitorList'
          description: A list of monitors.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The token for the next set of results. You receive this token
            from a previous call.
      required:
      - Monitors
    ListTagsForResourceInput:
      type: object
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/MonitorArn'
          description: The Amazon Resource Name (ARN) for a resource.
      required:
      - ResourceArn
    ListTagsForResourceOutput:
      type: object
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: Tags for a resource.
    LocalHealthEventsConfig:
      type: object
      properties:
        Status:
          allOf:
          - $ref: '#/components/schemas/LocalHealthEventsConfigStatus'
          description: The status of whether Internet Monitor creates a health event
            based on a threshold percentage set for a local health score. The status
            can be `ENABLED` or `DISABLED`.
        HealthScoreThreshold:
          allOf:
          - $ref: '#/components/schemas/Percentage'
          description: The health event threshold percentage set for a local health
            score.
        MinTrafficImpact:
          allOf:
          - $ref: '#/components/schemas/Percentage'
          description: 'The minimum percentage of overall traffic for an application
            that must be impacted by an issue before Internet Monitor creates an event
            when a threshold is crossed for a local health score.


            If you don''t set a minimum traffic impact threshold, the default value
            is 0.1%.'
      description: 'A complex type with the configuration information that determines
        the threshold and other conditions for when Internet Monitor creates a health
        event for a local performance or availability issue, when scores cross a threshold
        for one or more city-networks.


        Defines the percentages, for performance scores or availability scores, that
        are the local thresholds for when Amazon CloudWatch Internet Monitor creates
        a health event. Also defines whether a local threshold is enabled or disabled,
        and the minimum percentage of overall traffic that must be impacted by an
        issue before Internet Monitor creates an event when a threshold is crossed
        for a local health score.


        If you don''t set a local health event threshold, the default value is 60%.


        For more information, see [ Change health event thresholds](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-IM-overview.html#IMUpdateThresholdFromOverview)
        in the Internet Monitor section of the _CloudWatch User Guide_.'
    LocalHealthEventsConfigStatus:
      type: string
      enum:
      - ENABLED
      - DISABLED
    LogDeliveryStatus:
      type: string
      enum:
      - ENABLED
      - DISABLED
    MaxCityNetworksToMonitor:
      type: integer
      minimum: 1
      maximum: 500000
    MaxResults:
      type: integer
      minimum: 1
      maximum: 25
    Monitor:
      type: object
      properties:
        MonitorName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the monitor.
        MonitorArn:
          allOf:
          - $ref: '#/components/schemas/MonitorArn'
          description: The Amazon Resource Name (ARN) of the monitor.
        Status:
          allOf:
          - $ref: '#/components/schemas/MonitorConfigState'
          description: The status of a monitor.
        ProcessingStatus:
          allOf:
          - $ref: '#/components/schemas/MonitorProcessingStatusCode'
          description: The health of data processing for the monitor.
      required:
      - MonitorName
      - MonitorArn
      - Status
      description: The description of and information about a monitor in Amazon CloudWatch
        Internet Monitor.
    MonitorArn:
      type: string
      pattern: ^arn:.*
      minLength: 20
      maxLength: 512
    MonitorConfigState:
      type: string
      enum:
      - PENDING
      - ACTIVE
      - INACTIVE
      - ERROR
    MonitorList:
      type: array
      items:
        $ref: '#/components/schemas/Monitor'
    MonitorProcessingStatusCode:
      type: string
      enum:
      - OK
      - INACTIVE
      - COLLECTING_DATA
      - INSUFFICIENT_DATA
      - FAULT_SERVICE
      - FAULT_ACCESS_CLOUDWATCH
    Network:
      type: object
      properties:
        ASName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the internet service provider (ISP) or network
            (ASN).
        ASNumber:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: The Autonomous System Number (ASN) of the internet provider
            or network.
      required:
      - ASName
      - ASNumber
      description: An internet service provider (ISP) or network (ASN) in Amazon CloudWatch
        Internet Monitor.
    NetworkImpairment:
      type: object
      properties:
        Networks:
          allOf:
          - $ref: '#/components/schemas/NetworkList'
          description: The networks that could be impacted by a network impairment
            event.
        AsPath:
          allOf:
          - $ref: '#/components/schemas/NetworkList'
          description: The combination of the Autonomous System Number (ASN) of the
            network and the name of the network.
        NetworkEventType:
          allOf:
          - $ref: '#/components/schemas/TriangulationEventType'
          description: The type of network impairment.
      required:
      - Networks
      - AsPath
      - NetworkEventType
      description: Information about the network impairment for a specific network
        measured by Amazon CloudWatch Internet Monitor.
    NetworkList:
      type: array
      items:
        $ref: '#/components/schemas/Network'
    NotFoundException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      description: The request specifies something that doesn't exist.
    Operator:
      type: string
      enum:
      - EQUALS
      - NOT_EQUALS
    Percentage:
      type: number
      format: double
      default: 0
      minimum: 0
      maximum: 100
    PerformanceMeasurement:
      type: object
      properties:
        ExperienceScore:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: 'Experience scores, or health scores, are calculated for different
            geographic and network provider combinations (that is, different granularities)
            and also totaled into global scores. If you view performance or availability
            scores without filtering for any specific geography or service provider,
            Amazon CloudWatch Internet Monitor provides global health scores.


            The Amazon CloudWatch Internet Monitor chapter in the CloudWatch User
            Guide includes detailed information about how Internet Monitor calculates
            health scores, including performance and availability scores, and when
            it creates and resolves health events. For more information, see [How
            Amazon Web Services calculates performance and availability scores](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-IM-inside-internet-monitor.html#IMExperienceScores)
            in the Amazon CloudWatch Internet Monitor section of the _CloudWatch User
            Guide_.'
        PercentOfTotalTrafficImpacted:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: 'The impact on total traffic that a health event has, in increased
            latency or reduced availability. This is the percentage of how much latency
            has increased or availability has decreased during the event, compared
            to what is typical for traffic from this client location to the Amazon
            Web Services location using this client network.


            For more information, see [When Amazon Web Services creates and resolves
            health events](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-IM-inside-internet-monitor.html#IMHealthEventStartStop)
            in the Amazon CloudWatch Internet Monitor section of the _CloudWatch User
            Guide_.'
        PercentOfClientLocationImpacted:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: 'How much performance impact was caused by a health event at
            a client location. For performance, this is the percentage of how much
            latency increased during the event compared to typical performance for
            traffic, from this client location to an Amazon Web Services location,
            using a specific client network.


            For more information, see [When Amazon Web Services creates and resolves
            health events](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-IM-inside-internet-monitor.html#IMHealthEventStartStop)
            in the Amazon CloudWatch Internet Monitor section of the _CloudWatch User
            Guide_.'
        RoundTripTime:
          allOf:
          - $ref: '#/components/schemas/RoundTripTime'
          description: 'This is the percentage of how much round-trip time increased
            during the event compared to typical round-trip time for your application
            for traffic.


            For more information, see [When Amazon Web Services creates and resolves
            health events](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-IM-inside-internet-monitor.html#IMHealthEventStartStop)
            in the Amazon CloudWatch Internet Monitor section of the _CloudWatch User
            Guide_.'
      description: 'Amazon CloudWatch Internet Monitor calculates measurements about
        the performance for your application''s internet traffic between client locations
        and Amazon Web Services. Amazon Web Services has substantial historical data
        about internet performance and availability between Amazon Web Services services
        and different network providers and geographies. By applying statistical analysis
        to the data, Internet Monitor can detect when the performance and availability
        for your application has dropped, compared to an estimated baseline that''s
        already calculated. To make it easier to see those drops, we report that information
        to you in the form of health scores: a performance score and an availability
        score.


        Performance in Internet Monitor represents the estimated percentage of traffic
        that is not seeing a performance drop. For example, a performance score of
        99% for an end user and service location pair is equivalent to 1% of the traffic
        experiencing a performance drop for that pair.


        For more information, see [How Internet Monitor calculates performance and
        availability scores](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-IM-inside-internet-monitor.html#IMExperienceScores)
        in the Amazon CloudWatch Internet Monitor section of the _CloudWatch User
        Guide_.'
    QueryData:
      type: array
      items:
        $ref: '#/components/schemas/QueryRow'
    QueryField:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of a field to query your application's Amazon CloudWatch
            Internet Monitor data for, such as `availability_score`.
        Type:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The data type for a query field, which must correspond to the
            field you're defining for `QueryField`. For example, if the query field
            name is `availability_score`, the data type is `float`.
      description: Defines a field to query for your application's Amazon CloudWatch
        Internet Monitor data. You create a data repository by running a query of
        a specific type. Each `QueryType` includes a specific set of fields and datatypes
        to retrieve data for.
    QueryFields:
      type: array
      items:
        $ref: '#/components/schemas/QueryField'
    QueryMaxResults:
      type: integer
      minimum: 1
      maximum: 1000
    QueryRow:
      type: array
      items:
        type: string
    QueryStatus:
      type: string
      enum:
      - QUEUED
      - RUNNING
      - SUCCEEDED
      - FAILED
      - CANCELED
    QueryType:
      type: string
      enum:
      - MEASUREMENTS
      - TOP_LOCATIONS
      - TOP_LOCATION_DETAILS
      - OVERALL_TRAFFIC_SUGGESTIONS
      - OVERALL_TRAFFIC_SUGGESTIONS_DETAILS
      - ROUTING_SUGGESTIONS
    ResourceName:
      type: string
      pattern: ^[a-zA-Z0-9_.-]+$
      minLength: 1
      maxLength: 255
    ResourceNotFoundException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      description: The request specifies a resource that doesn't exist.
    RoundTripTime:
      type: object
      properties:
        P50:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: RTT at the 50th percentile (p50).
        P90:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: RTT at the 90th percentile (p90).
        P95:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: RTT at the 95th percentile (p95).
      description: 'Round-trip time (RTT) is how long it takes for a request from
        the user to return a response to the user. Amazon CloudWatch Internet Monitor
        calculates RTT at different percentiles: p50, p90, and p95.'
    S3Config:
      type: object
      properties:
        BucketName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon S3 bucket name.
        BucketPrefix:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon S3 bucket prefix.
        LogDeliveryStatus:
          allOf:
          - $ref: '#/components/schemas/LogDeliveryStatus'
          description: The status of publishing Internet Monitor internet measurements
            to an Amazon S3 bucket.
      description: The configuration for publishing Amazon CloudWatch Internet Monitor
        internet measurements to Amazon S3. The configuration includes the bucket
        name and (optionally) prefix for the S3 bucket to store the measurements,
        and the delivery status. The delivery status is `ENABLED` or `DISABLED`, depending
        on whether you choose to deliver internet measurements to S3 logs.
    SetOfARNs:
      type: array
      items:
        $ref: '#/components/schemas/Arn'
    StartQueryInput:
      type: object
      properties:
        MonitorName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the monitor to query.
        StartTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp that is the beginning of the period that you
            want to retrieve data for with your query.
        EndTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp that is the end of the period that you want to
            retrieve data for with your query.
        QueryType:
          allOf:
          - $ref: '#/components/schemas/QueryType'
          description: "The type of query to run. The following are the three types\
            \ of queries that you can run using the Internet Monitor query interface:\n\
            \n  * `MEASUREMENTS`: Provides availability score, performance score,\
            \ total traffic, and round-trip times, at 5 minute intervals.\n\n  * `TOP_LOCATIONS`:\
            \ Provides availability score, performance score, total traffic, and time\
            \ to first byte (TTFB) information, for the top location and ASN combinations\
            \ that you're monitoring, by traffic volume.\n\n  * `TOP_LOCATION_DETAILS`:\
            \ Provides TTFB for Amazon CloudFront, your current configuration, and\
            \ the best performing EC2 configuration, at 1 hour intervals.\n\n  * `OVERALL_TRAFFIC_SUGGESTIONS`:\
            \ Provides TTFB, using a 30-day weighted average, for all traffic in each\
            \ Amazon Web Services location that is monitored.\n\n  * `OVERALL_TRAFFIC_SUGGESTIONS_DETAILS`:\
            \ Provides TTFB, using a 30-day weighted average, for each top location,\
            \ for a proposed Amazon Web Services location. Must provide an Amazon\
            \ Web Services location to search.\n\n  * `ROUTING_SUGGESTIONS`: Provides\
            \ the predicted average round-trip time (RTT) from an IP prefix toward\
            \ an Amazon Web Services location for a DNS resolver. The RTT is calculated\
            \ at one hour intervals, over a one hour period.\n\nFor lists of the fields\
            \ returned with each query type and more information about how each type\
            \ of query is performed, see [ Using the Amazon CloudWatch Internet Monitor\
            \ query interface](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-IM-view-cw-tools-cwim-query.html)\
            \ in the Amazon CloudWatch Internet Monitor User Guide."
        FilterParameters:
          allOf:
          - $ref: '#/components/schemas/FilterParameters'
          description: 'The `FilterParameters` field that you use with Amazon CloudWatch
            Internet Monitor queries is a string the defines how you want a query
            to be filtered. The filter parameters that you can specify depend on the
            query type, since each query type returns a different set of Internet
            Monitor data.


            For more information about specifying filter parameters, see [Using the
            Amazon CloudWatch Internet Monitor query interface](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-IM-view-cw-tools-cwim-query.html)
            in the Amazon CloudWatch Internet Monitor User Guide.'
        LinkedAccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The account ID for an account that you've set up cross-account
            sharing for in Amazon CloudWatch Internet Monitor. You configure cross-account
            sharing by using Amazon CloudWatch Observability Access Manager. For more
            information, see [Internet Monitor cross-account observability](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cwim-cross-account.html)
            in the Amazon CloudWatch Internet Monitor User Guide.
      required:
      - MonitorName
      - StartTime
      - EndTime
      - QueryType
    StartQueryOutput:
      type: object
      properties:
        QueryId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The internally-generated identifier of a specific query.
      required:
      - QueryId
    StopQueryInput:
      type: object
      properties:
        MonitorName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the monitor.
        QueryId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the query that you want to stop. A `QueryId` is an
            internally-generated identifier for a specific query.
      required:
      - MonitorName
      - QueryId
    StopQueryOutput:
      type: object
      properties: {}
    TagKey:
      type: string
      minLength: 1
      maxLength: 128
    TagKeys:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
    TagMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
    TagResourceInput:
      type: object
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/MonitorArn'
          description: The Amazon Resource Name (ARN) for a tag that you add to a
            resource. Tags are supported only for monitors in Amazon CloudWatch Internet
            Monitor.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: Tags that you add to a resource. You can add a maximum of 50
            tags in Internet Monitor.
      required:
      - ResourceArn
      - Tags
    TagResourceOutput:
      type: object
      properties: {}
    TagValue:
      type: string
      minLength: 0
      maxLength: 256
    ThrottlingException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      description: The request was denied due to request throttling.
    TooManyRequestsException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      description: There were too many requests.
    TrafficPercentageToMonitor:
      type: integer
      minimum: 1
      maximum: 100
    TriangulationEventType:
      type: string
      enum:
      - AWS
      - Internet
    UntagResourceInput:
      type: object
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/MonitorArn'
          description: The Amazon Resource Name (ARN) for a tag you remove a resource
            from.
        TagKeys:
          allOf:
          - $ref: '#/components/schemas/TagKeys'
          description: Tag keys that you remove from a resource.
      required:
      - ResourceArn
      - TagKeys
    UntagResourceOutput:
      type: object
      properties: {}
    UpdateMonitorInput:
      type: object
      properties:
        MonitorName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the monitor.
        ResourcesToAdd:
          allOf:
          - $ref: '#/components/schemas/SetOfARNs'
          description: 'The resources to include in a monitor, which you provide as
            a set of Amazon Resource Names (ARNs). Resources can be VPCs, NLBs, Amazon
            CloudFront distributions, or Amazon WorkSpaces directories.


            You can add a combination of VPCs and CloudFront distributions, or you
            can add WorkSpaces directories, or you can add NLBs. You can''t add NLBs
            or WorkSpaces directories together with any other resources.


            If you add only Amazon Virtual Private Clouds resources, at least one
            VPC must have an Internet Gateway attached to it, to make sure that it
            has internet connectivity.'
        ResourcesToRemove:
          allOf:
          - $ref: '#/components/schemas/SetOfARNs'
          description: The resources to remove from a monitor, which you provide as
            a set of Amazon Resource Names (ARNs).
        Status:
          allOf:
          - $ref: '#/components/schemas/MonitorConfigState'
          description: 'The status for a monitor. The accepted values for `Status`
            with the `UpdateMonitor` API call are the following: `ACTIVE` and `INACTIVE`.
            The following values are _not_ accepted: `PENDING`, and `ERROR`.'
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A unique, case-sensitive string of up to 64 ASCII characters
            that you specify to make an idempotent API request. You should not reuse
            the same client token for other API requests.
        MaxCityNetworksToMonitor:
          allOf:
          - $ref: '#/components/schemas/MaxCityNetworksToMonitor'
          description: The maximum number of city-networks to monitor for your application.
            A city-network is the location (city) where clients access your application
            resources from and the ASN or network provider, such as an internet service
            provider (ISP), that clients access the resources through. Setting this
            limit can help control billing costs.
        InternetMeasurementsLogDelivery:
          allOf:
          - $ref: '#/components/schemas/InternetMeasurementsLogDelivery'
          description: Publish internet measurements for Internet Monitor to another
            location, such as an Amazon S3 bucket. The measurements are also published
            to Amazon CloudWatch Logs.
        TrafficPercentageToMonitor:
          allOf:
          - $ref: '#/components/schemas/TrafficPercentageToMonitor'
          description: 'The percentage of the internet-facing traffic for your application
            that you want to monitor with this monitor. If you set a city-networks
            maximum, that limit overrides the traffic percentage that you set.


            To learn more, see [Choosing an application traffic percentage to monitor
            ](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/IMTrafficPercentage.html)
            in the Amazon CloudWatch Internet Monitor section of the _CloudWatch User
            Guide_.'
        HealthEventsConfig:
          allOf:
          - $ref: '#/components/schemas/HealthEventsConfig'
          description: 'The list of health score thresholds. A threshold percentage
            for health scores, along with other configuration information, determines
            when Internet Monitor creates a health event when there''s an internet
            issue that affects your application end users.


            For more information, see [ Change health event thresholds](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-IM-overview.html#IMUpdateThresholdFromOverview)
            in the Internet Monitor section of the _CloudWatch User Guide_.'
      required:
      - MonitorName
    UpdateMonitorOutput:
      type: object
      properties:
        MonitorArn:
          allOf:
          - $ref: '#/components/schemas/MonitorArn'
          description: The Amazon Resource Name (ARN) of the monitor.
        Status:
          allOf:
          - $ref: '#/components/schemas/MonitorConfigState'
          description: The status of a monitor.
      required:
      - MonitorArn
      - Status
    ValidationException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      description: Invalid request.
