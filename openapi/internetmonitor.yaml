openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: internetmonitor
  x-aws-serviceName: internetmonitor
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-05'
  version: '2021-06-03'
  title: Amazon CloudWatch Internet Monitor
  description: |-
    Amazon CloudWatch Internet Monitor provides visibility into how internet issues impact the performance and availability between your applications hosted on Amazon Web Services and your end users. It can reduce the time it takes for you to diagnose internet issues from days to minutes. Internet Monitor uses the connectivity data that Amazon Web Services captures from its global networking footprint to calculate a baseline of performance and availability for internet traffic. This is the same data that Amazon Web Services uses to monitor internet uptime and availability. With those measurements as a baseline, Internet Monitor raises awareness for you when there are significant problems for your end users in the different geographic locations where your application runs.

    Internet Monitor publishes internet measurements to CloudWatch Logs and CloudWatch Metrics, to easily support using CloudWatch tools with health information for geographies and networks specific to your application. Internet Monitor sends health events to Amazon EventBridge so that you can set up notifications. If an issue is caused by the Amazon Web Services network, you also automatically receive an Amazon Web Services Health Dashboard notification with the steps that Amazon Web Services is taking to mitigate the problem.

    To use Internet Monitor, you create a _monitor_ and associate your application's resources with it - VPCs, NLBs, CloudFront distributions, or WorkSpaces directories - so Internet Monitor can determine where your application's internet traffic is. Internet Monitor then provides internet measurements from Amazon Web Services that are specific to the locations and ASNs (typically, internet service providers or ISPs) that communicate with your application.

    For more information, see [Using Amazon CloudWatch Internet Monitor](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-InternetMonitor.html) in the _Amazon CloudWatch User Guide_.
servers:
- description: The Amazon CloudWatch Internet Monitor regional endpoint
  url: https://internetmonitor.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths: {}
components:
  schemas:
    AccountId:
      type: string
      minLength: 12
      maxLength: 12
    Arn:
      type: string
      pattern: ^arn:.*
      minLength: 20
      maxLength: 2048
    HealthEventImpactType:
      type: string
      enum:
      - AVAILABILITY
      - PERFORMANCE
      - LOCAL_AVAILABILITY
      - LOCAL_PERFORMANCE
    HealthEventName:
      type: string
      pattern: ^[a-zA-Z0-9/_.-]+$
      minLength: 1
      maxLength: 255
    HealthEventStatus:
      type: string
      enum:
      - ACTIVE
      - RESOLVED
    InternetEventId:
      type: string
      pattern: ^[a-zA-Z0-9-]+$
      minLength: 1
      maxLength: 255
    InternetEventMaxResults:
      type: integer
      minimum: 1
      maximum: 100
    InternetEventStatus:
      type: string
      enum:
      - ACTIVE
      - RESOLVED
    InternetEventType:
      type: string
      enum:
      - AVAILABILITY
      - PERFORMANCE
    LocalHealthEventsConfigStatus:
      type: string
      enum:
      - ENABLED
      - DISABLED
    LogDeliveryStatus:
      type: string
      enum:
      - ENABLED
      - DISABLED
    MaxCityNetworksToMonitor:
      type: integer
      minimum: 1
      maximum: 500000
    MaxResults:
      type: integer
      minimum: 1
      maximum: 25
    MonitorArn:
      type: string
      pattern: ^arn:.*
      minLength: 20
      maxLength: 512
    MonitorConfigState:
      type: string
      enum:
      - PENDING
      - ACTIVE
      - INACTIVE
      - ERROR
    MonitorProcessingStatusCode:
      type: string
      enum:
      - OK
      - INACTIVE
      - COLLECTING_DATA
      - INSUFFICIENT_DATA
      - FAULT_SERVICE
      - FAULT_ACCESS_CLOUDWATCH
    Operator:
      type: string
      enum:
      - EQUALS
      - NOT_EQUALS
    QueryMaxResults:
      type: integer
      minimum: 1
      maximum: 1000
    QueryStatus:
      type: string
      enum:
      - QUEUED
      - RUNNING
      - SUCCEEDED
      - FAILED
      - CANCELED
    QueryType:
      type: string
      enum:
      - MEASUREMENTS
      - TOP_LOCATIONS
      - TOP_LOCATION_DETAILS
      - OVERALL_TRAFFIC_SUGGESTIONS
      - OVERALL_TRAFFIC_SUGGESTIONS_DETAILS
      - ROUTING_SUGGESTIONS
    ResourceName:
      type: string
      pattern: ^[a-zA-Z0-9_.-]+$
      minLength: 1
      maxLength: 255
    TagKey:
      type: string
      minLength: 1
      maxLength: 128
    TagValue:
      type: string
      minLength: 0
      maxLength: 256
    TrafficPercentageToMonitor:
      type: integer
      minimum: 1
      maximum: 100
    TriangulationEventType:
      type: string
      enum:
      - AWS
      - Internet
