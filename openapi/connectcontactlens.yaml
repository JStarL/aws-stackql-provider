openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: connect_contact_lens
  x-aws-serviceName: connectcontactlens
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-05'
  version: '2020-08-21'
  title: Amazon Connect Contact Lens
  description: |-
    * [Contact Lens actions](https://docs.aws.amazon.com/connect/latest/APIReference/API_Operations_Amazon_Connect_Contact_Lens.html)

      * [Contact Lens data types](https://docs.aws.amazon.com/connect/latest/APIReference/API_Types_Amazon_Connect_Contact_Lens.html)

    Amazon Connect Contact Lens enables you to analyze conversations between customer and agents, by using speech transcription, natural language processing, and intelligent search capabilities. It performs sentiment analysis, detects issues, and enables you to automatically categorize contacts.

    Amazon Connect Contact Lens provides both real-time and post-call analytics of customer-agent conversations. For more information, see [Analyze conversations using speech analytics](https://docs.aws.amazon.com/connect/latest/adminguide/analyze-conversations.html) in the _Amazon Connect Administrator Guide_.
servers:
- description: The Amazon Connect Contact Lens regional endpoint
  url: https://contact-lens.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths: {}
components:
  schemas:
    CategoryName:
      type: string
      pattern: \S
      minLength: 1
      maxLength: 256
    CharacterOffset:
      type: integer
      minimum: 0
    ContactId:
      type: string
      pattern: \S
      minLength: 1
      maxLength: 256
    InstanceId:
      type: string
      pattern: \S
      minLength: 1
      maxLength: 256
    IssuesDetected:
      type: array
      items:
        $ref: '#/components/schemas/IssueDetected'
    MatchedCategories:
      type: array
      items:
        $ref: '#/components/schemas/CategoryName'
    MatchedDetails:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/CategoryDetails'
    MaxResults:
      type: integer
      minimum: 1
      maximum: 100
    Message:
      type: string
    NextToken:
      type: string
      pattern: \S
      minLength: 1
      maxLength: 131070
    OffsetMillis:
      type: integer
      minimum: 0
    ParticipantId:
      type: string
      pattern: \S
      minLength: 1
      maxLength: 256
    ParticipantRole:
      type: string
      pattern: \S
      minLength: 1
      maxLength: 256
    PointsOfInterest:
      type: array
      items:
        $ref: '#/components/schemas/PointOfInterest'
    PostContactSummaryContent:
      type: string
      minLength: 1
      maxLength: 1762
    PostContactSummaryFailureCode:
      type: string
      enum:
      - QUOTA_EXCEEDED
      - INSUFFICIENT_CONVERSATION_CONTENT
      - FAILED_SAFETY_GUIDELINES
      - INVALID_ANALYSIS_CONFIGURATION
      - INTERNAL_ERROR
    PostContactSummaryStatus:
      type: string
      enum:
      - FAILED
      - COMPLETED
    RealtimeContactAnalysisSegments:
      type: array
      items:
        $ref: '#/components/schemas/RealtimeContactAnalysisSegment'
    SentimentValue:
      type: string
      enum:
      - POSITIVE
      - NEUTRAL
      - NEGATIVE
    TranscriptContent:
      type: string
      pattern: \S
      minLength: 1
    TranscriptId:
      type: string
      pattern: \S
      minLength: 1
      maxLength: 256
