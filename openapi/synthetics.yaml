openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: synthetics
  x-aws-serviceName: synthetics
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-07'
  version: '2017-10-11'
  title: Synthetics
  description: |-
    Amazon CloudWatch Synthetics

    You can use Amazon CloudWatch Synthetics to continually monitor your services. You can create and manage _canaries_ , which are modular, lightweight scripts that monitor your endpoints and APIs from the outside-in. You can set up your canaries to run 24 hours a day, once per minute. The canaries help you check the availability and latency of your web services and troubleshoot anomalies by investigating load time data, screenshots of the UI, logs, and metrics. The canaries seamlessly integrate with CloudWatch ServiceLens to help you trace the causes of impacted nodes in your applications. For more information, see [Using ServiceLens to Monitor the Health of Your Applications](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/ServiceLens.html) in the _Amazon CloudWatch User Guide_.

    Before you create and manage canaries, be aware of the security considerations. For more information, see [Security Considerations for Synthetics Canaries](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/servicelens_canaries_security.html).
servers:
- description: The Synthetics regional endpoint
  url: https://synthetics.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths:
  /group/{GroupIdentifier}/associate:
    patch:
      operationId: AssociateResource
      description: |-
        Associates a canary with a group. Using groups can help you with managing and automating your canaries, and you can also view aggregated run results and statistics for all canaries in a group.

        You must run this operation in the Region where the canary exists.
      parameters:
      - name: GroupIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/GroupIdentifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ResourceArn:
                  $ref: '#/components/schemas/CanaryArn'
      responses:
        '200': {}
        '409':
          description: |-
            A conflicting operation is already in progress.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An unknown internal error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            One of the specified resources was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            The request exceeded a service quota value.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '400':
          description: |-
            A parameter could not be validated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /canary:
    post:
      operationId: CreateCanary
      description: |-
        Creates a canary. Canaries are scripts that monitor your endpoints and APIs from the outside-in. Canaries help you check the availability and latency of your web services and troubleshoot anomalies by investigating load time data, screenshots of the UI, logs, and metrics. You can set up a canary to run continuously or just once.

        Do not use `CreateCanary` to modify an existing canary. Use [UpdateCanary](https://docs.aws.amazon.com/AmazonSynthetics/latest/APIReference/API_UpdateCanary.html) instead.

        To create canaries, you must have the `CloudWatchSyntheticsFullAccess` policy. If you are creating a new IAM role for the canary, you also need the `iam:CreateRole`, `iam:CreatePolicy` and `iam:AttachRolePolicy` permissions. For more information, see [Necessary Roles and Permissions](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Synthetics_Canaries_Roles).

        Do not include secrets or proprietary information in your canary names. The canary name makes up part of the Amazon Resource Name (ARN) for the canary, and the ARN is included in outbound calls over the internet. For more information, see [Security Considerations for Synthetics Canaries](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/servicelens_canaries_security.html).
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  $ref: '#/components/schemas/CanaryName'
                Code:
                  $ref: '#/components/schemas/CanaryCodeInput'
                ArtifactS3Location:
                  $ref: '#/components/schemas/String'
                ExecutionRoleArn:
                  $ref: '#/components/schemas/RoleArn'
                Schedule:
                  $ref: '#/components/schemas/CanaryScheduleInput'
                RunConfig:
                  $ref: '#/components/schemas/CanaryRunConfigInput'
                SuccessRetentionPeriodInDays:
                  $ref: '#/components/schemas/MaxSize1024'
                FailureRetentionPeriodInDays:
                  $ref: '#/components/schemas/MaxSize1024'
                RuntimeVersion:
                  $ref: '#/components/schemas/String'
                VpcConfig:
                  $ref: '#/components/schemas/VpcConfigInput'
                ResourcesToReplicateTags:
                  $ref: '#/components/schemas/ResourceList'
                ProvisionedResourceCleanup:
                  $ref: '#/components/schemas/ProvisionedResourceCleanupSetting'
                Tags:
                  $ref: '#/components/schemas/TagMap'
                ArtifactConfig:
                  $ref: '#/components/schemas/ArtifactConfigInput'
      responses:
        '200': {}
        '500':
          description: |-
            An unknown internal error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '413':
          description: |-
            One of the input resources is larger than is allowed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestEntityTooLargeException'
        '400':
          description: |-
            A parameter could not be validated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /group:
    post:
      operationId: CreateGroup
      description: |-
        Creates a group which you can use to associate canaries with each other, including cross-Region canaries. Using groups can help you with managing and automating your canaries, and you can also view aggregated run results and statistics for all canaries in a group.

        Groups are global resources. When you create a group, it is replicated across Amazon Web Services Regions, and you can view it and add canaries to it from any Region. Although the group ARN format reflects the Region name where it was created, a group is not constrained to any Region. This means that you can put canaries from multiple Regions into the same group, and then use that group to view and manage all of those canaries in a single view.

        Groups are supported in all Regions except the Regions that are disabled by default. For more information about these Regions, see [Enabling a Region](https://docs.aws.amazon.com/general/latest/gr/rande-manage.html#rande-manage-enable).

        Each group can contain as many as 10 canaries. You can have as many as 20 groups in your account. Any single canary can be a member of up to 10 groups.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  $ref: '#/components/schemas/GroupName'
                Tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '200': {}
        '409':
          description: |-
            A conflicting operation is already in progress.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An unknown internal error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '402':
          description: |-
            The request exceeded a service quota value.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '400':
          description: |-
            A parameter could not be validated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /canary/{Name}:
    delete:
      operationId: DeleteCanary
      description: |-
        Permanently deletes the specified canary.

        If the canary's `ProvisionedResourceCleanup` field is set to `AUTOMATIC` or you specify `DeleteLambda` in this operation as `true`, CloudWatch Synthetics also deletes the Lambda functions and layers that are used by the canary.

        Other resources used and created by the canary are not automatically deleted. After you delete a canary, you should also delete the following:

          * The CloudWatch alarms created for this canary. These alarms have a name of `Synthetics-Alarm-_first-198-characters-of-canary-name_ -_canaryId_ -_alarm number_ `

          * Amazon S3 objects and buckets, such as the canary's artifact location.

          * IAM roles created for the canary. If they were created in the console, these roles have the name ` role/service-role/CloudWatchSyntheticsRole-_First-21-Characters-of-CanaryName_ `

          * CloudWatch Logs log groups created for the canary. These logs groups have the name `/aws/lambda/cwsyn-_First-21-Characters-of-CanaryName_ `

        Before you delete a canary, you might want to use `GetCanary` to display the information about this canary. Make note of the information returned by this operation so that you can delete these resources after you delete the canary.
      parameters:
      - name: Name
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CanaryName'
      - name: deleteLambda
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/boolean'
      responses:
        '200': {}
        '409':
          description: |-
            A conflicting operation is already in progress.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An unknown internal error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            One of the specified resources was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            A parameter could not be validated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetCanary
      description: |-
        Retrieves complete information about one canary. You must specify the name of the canary that you want. To get a list of canaries and their names, use [DescribeCanaries](https://docs.aws.amazon.com/AmazonSynthetics/latest/APIReference/API_DescribeCanaries.html).
      parameters:
      - name: Name
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CanaryName'
      responses:
        '200': {}
        '500':
          description: |-
            An unknown internal error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            A parameter could not be validated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    patch:
      operationId: UpdateCanary
      description: |-
        Updates the configuration of a canary that has already been created.

        You can't use this operation to update the tags of an existing canary. To change the tags of an existing canary, use [TagResource](https://docs.aws.amazon.com/AmazonSynthetics/latest/APIReference/API_TagResource.html).
      parameters:
      - name: Name
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CanaryName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Code:
                  $ref: '#/components/schemas/CanaryCodeInput'
                ExecutionRoleArn:
                  $ref: '#/components/schemas/RoleArn'
                RuntimeVersion:
                  $ref: '#/components/schemas/String'
                Schedule:
                  $ref: '#/components/schemas/CanaryScheduleInput'
                RunConfig:
                  $ref: '#/components/schemas/CanaryRunConfigInput'
                SuccessRetentionPeriodInDays:
                  $ref: '#/components/schemas/MaxSize1024'
                FailureRetentionPeriodInDays:
                  $ref: '#/components/schemas/MaxSize1024'
                VpcConfig:
                  $ref: '#/components/schemas/VpcConfigInput'
                VisualReference:
                  $ref: '#/components/schemas/VisualReferenceInput'
                ArtifactS3Location:
                  $ref: '#/components/schemas/String'
                ArtifactConfig:
                  $ref: '#/components/schemas/ArtifactConfigInput'
                ProvisionedResourceCleanup:
                  $ref: '#/components/schemas/ProvisionedResourceCleanupSetting'
      responses:
        '200': {}
        '409':
          description: |-
            A conflicting operation is already in progress.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An unknown internal error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '413':
          description: |-
            One of the input resources is larger than is allowed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestEntityTooLargeException'
        '404':
          description: |-
            One of the specified resources was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            A parameter could not be validated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /group/{GroupIdentifier}:
    delete:
      operationId: DeleteGroup
      description: |-
        Deletes a group. The group doesn't need to be empty to be deleted. If there are canaries in the group, they are not deleted when you delete the group.

        Groups are a global resource that appear in all Regions, but the request to delete a group must be made from its home Region. You can find the home Region of a group within its ARN.
      parameters:
      - name: GroupIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/GroupIdentifier'
      responses:
        '200': {}
        '409':
          description: |-
            A conflicting operation is already in progress.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An unknown internal error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            One of the specified resources was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            A parameter could not be validated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetGroup
      description: |-
        Returns information about one group. Groups are a global resource, so you can use this operation from any Region.
      parameters:
      - name: GroupIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/GroupIdentifier'
      responses:
        '200': {}
        '409':
          description: |-
            A conflicting operation is already in progress.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An unknown internal error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            One of the specified resources was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            A parameter could not be validated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /canaries:
    post:
      operationId: DescribeCanaries
      description: |-
        This operation returns a list of the canaries in your account, along with full details about each canary.

        This operation supports resource-level authorization using an IAM policy and the `Names` parameter. If you specify the `Names` parameter, the operation is successful only if you have authorization to view all the canaries that you specify in your request. If you do not have permission to view any of the canaries, the request fails with a 403 response.

        You are required to use the `Names` parameter if you are logged on to a user or role that has an IAM policy that restricts which canaries that you are allowed to view. For more information, see [ Limiting a user to viewing specific canaries](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Synthetics_Canaries_Restricted.html).
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                NextToken:
                  $ref: '#/components/schemas/Token'
                MaxResults:
                  $ref: '#/components/schemas/MaxCanaryResults'
                Names:
                  $ref: '#/components/schemas/DescribeCanariesNameFilter'
      responses:
        '200': {}
        '500':
          description: |-
            An unknown internal error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            A parameter could not be validated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /canaries/last-run:
    post:
      operationId: DescribeCanariesLastRun
      description: |-
        Use this operation to see information from the most recent run of each canary that you have created.

        This operation supports resource-level authorization using an IAM policy and the `Names` parameter. If you specify the `Names` parameter, the operation is successful only if you have authorization to view all the canaries that you specify in your request. If you do not have permission to view any of the canaries, the request fails with a 403 response.

        You are required to use the `Names` parameter if you are logged on to a user or role that has an IAM policy that restricts which canaries that you are allowed to view. For more information, see [ Limiting a user to viewing specific canaries](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Synthetics_Canaries_Restricted.html).
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                NextToken:
                  $ref: '#/components/schemas/Token'
                MaxResults:
                  $ref: '#/components/schemas/MaxSize100'
                Names:
                  $ref: '#/components/schemas/DescribeCanariesLastRunNameFilter'
      responses:
        '200': {}
        '500':
          description: |-
            An unknown internal error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            A parameter could not be validated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /runtime-versions:
    post:
      operationId: DescribeRuntimeVersions
      description: |-
        Returns a list of Synthetics canary runtime versions. For more information, see [ Canary Runtime Versions](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Synthetics_Canaries_Library.html).
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                NextToken:
                  $ref: '#/components/schemas/Token'
                MaxResults:
                  $ref: '#/components/schemas/MaxSize100'
      responses:
        '200': {}
        '500':
          description: |-
            An unknown internal error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            A parameter could not be validated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /group/{GroupIdentifier}/disassociate:
    patch:
      operationId: DisassociateResource
      description: |-
        Removes a canary from a group. You must run this operation in the Region where the canary exists.
      parameters:
      - name: GroupIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/GroupIdentifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ResourceArn:
                  $ref: '#/components/schemas/CanaryArn'
      responses:
        '200': {}
        '409':
          description: |-
            A conflicting operation is already in progress.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An unknown internal error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            One of the specified resources was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            A parameter could not be validated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /canary/{Name}/runs:
    post:
      operationId: GetCanaryRuns
      description: |-
        Retrieves a list of runs for a specified canary.
      parameters:
      - name: Name
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CanaryName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                NextToken:
                  $ref: '#/components/schemas/Token'
                MaxResults:
                  $ref: '#/components/schemas/MaxSize100'
      responses:
        '200': {}
        '500':
          description: |-
            An unknown internal error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            One of the specified resources was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            A parameter could not be validated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /resource/{ResourceArn}/groups:
    post:
      operationId: ListAssociatedGroups
      description: |-
        Returns a list of the groups that the specified canary is associated with. The canary that you specify must be in the current Region.
      parameters:
      - name: ResourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CanaryArn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                NextToken:
                  $ref: '#/components/schemas/PaginationToken'
                MaxResults:
                  $ref: '#/components/schemas/MaxGroupResults'
      responses:
        '200': {}
        '500':
          description: |-
            An unknown internal error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            One of the specified resources was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            A parameter could not be validated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /group/{GroupIdentifier}/resources:
    post:
      operationId: ListGroupResources
      description: |-
        This operation returns a list of the ARNs of the canaries that are associated with the specified group.
      parameters:
      - name: GroupIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/GroupIdentifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                NextToken:
                  $ref: '#/components/schemas/PaginationToken'
                MaxResults:
                  $ref: '#/components/schemas/MaxGroupResults'
      responses:
        '200': {}
        '409':
          description: |-
            A conflicting operation is already in progress.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An unknown internal error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            One of the specified resources was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            A parameter could not be validated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /groups:
    post:
      operationId: ListGroups
      description: |-
        Returns a list of all groups in the account, displaying their names, unique IDs, and ARNs. The groups from all Regions are returned.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                NextToken:
                  $ref: '#/components/schemas/PaginationToken'
                MaxResults:
                  $ref: '#/components/schemas/MaxGroupResults'
      responses:
        '200': {}
        '500':
          description: |-
            An unknown internal error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            A parameter could not be validated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /tags/{ResourceArn}:
    get:
      operationId: ListTagsForResource
      description: |-
        Displays the tags associated with a canary or group.
      parameters:
      - name: ResourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceArn'
      responses:
        '200': {}
        '400':
          description: |-
            The request was not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            A conflicting operation is already in progress.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An internal failure occurred. Try the operation again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            There were too many simultaneous requests. Try the operation again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    post:
      operationId: TagResource
      description: |-
        Assigns one or more tags (key-value pairs) to the specified canary or group.

        Tags can help you organize and categorize your resources. You can also use them to scope user permissions, by granting a user permission to access or change only resources with certain tag values.

        Tags don't have any semantic meaning to Amazon Web Services and are interpreted strictly as strings of characters.

        You can use the `TagResource` action with a resource that already has tags. If you specify a new tag key for the resource, this tag is appended to the list of tags associated with the resource. If you specify a tag key that is already associated with the resource, the new tag value that you specify replaces the previous value for that tag.

        You can associate as many as 50 tags with a canary or group.
      parameters:
      - name: ResourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceArn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '200': {}
        '400':
          description: |-
            The request was not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            A conflicting operation is already in progress.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An internal failure occurred. Try the operation again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            There were too many simultaneous requests. Try the operation again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    delete:
      operationId: UntagResource
      description: |-
        Removes one or more tags from the specified resource.
      parameters:
      - name: ResourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceArn'
      - name: tagKeys
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/TagKeyList'
      responses:
        '200': {}
        '400':
          description: |-
            The request was not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            A conflicting operation is already in progress.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An internal failure occurred. Try the operation again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            There were too many simultaneous requests. Try the operation again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /canary/{Name}/start:
    post:
      operationId: StartCanary
      description: |-
        Use this operation to run a canary that has already been created. The frequency of the canary runs is determined by the value of the canary's `Schedule`. To see a canary's schedule, use [GetCanary](https://docs.aws.amazon.com/AmazonSynthetics/latest/APIReference/API_GetCanary.html).
      parameters:
      - name: Name
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CanaryName'
      responses:
        '200': {}
        '409':
          description: |-
            A conflicting operation is already in progress.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An unknown internal error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            One of the specified resources was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            A parameter could not be validated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /canary/{Name}/stop:
    post:
      operationId: StopCanary
      description: |-
        Stops the canary to prevent all future runs. If the canary is currently running,the run that is in progress completes on its own, publishes metrics, and uploads artifacts, but it is not recorded in Synthetics as a completed run.

        You can use `StartCanary` to start it running again with the canary’s current schedule at any point in the future.
      parameters:
      - name: Name
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CanaryName'
      responses:
        '200': {}
        '409':
          description: |-
            A conflicting operation is already in progress.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An unknown internal error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            One of the specified resources was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            A parameter could not be validated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
components:
  schemas:
    ArtifactConfigInput:
      type: object
      properties:
        S3Encryption:
          allOf:
          - $ref: '#/components/schemas/S3EncryptionConfig'
          description: A structure that contains the configuration of the encryption-at-rest
            settings for artifacts that the canary uploads to Amazon S3. Artifact
            encryption functionality is available only for canaries that use Synthetics
            runtime version syn-nodejs-puppeteer-3.3 or later. For more information,
            see [Encrypting canary artifacts](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Synthetics_artifact_encryption.html)
      description: A structure that contains the configuration for canary artifacts,
        including the encryption-at-rest settings for artifacts that the canary uploads
        to Amazon S3.
    ArtifactConfigOutput:
      type: object
      properties:
        S3Encryption:
          allOf:
          - $ref: '#/components/schemas/S3EncryptionConfig'
          description: A structure that contains the configuration of encryption settings
            for canary artifacts that are stored in Amazon S3.
      description: A structure that contains the configuration for canary artifacts,
        including the encryption-at-rest settings for artifacts that the canary uploads
        to Amazon S3.
    AssociateResourceRequest:
      type: object
      properties:
        GroupIdentifier:
          allOf:
          - $ref: '#/components/schemas/GroupIdentifier'
          description: Specifies the group. You can specify the group name, the ARN,
            or the group ID as the `GroupIdentifier`.
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/CanaryArn'
          description: The ARN of the canary that you want to associate with the specified
            group.
      required:
      - GroupIdentifier
      - ResourceArn
    AssociateResourceResponse:
      type: object
      properties: {}
    BadRequestException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      description: The request was not valid.
    BaseScreenshot:
      type: object
      properties:
        ScreenshotName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the screenshot. This is generated the first time
            the canary is run after the `UpdateCanary` operation that specified for
            this canary to perform visual monitoring.
        IgnoreCoordinates:
          allOf:
          - $ref: '#/components/schemas/BaseScreenshotIgnoreCoordinates'
          description: Coordinates that define the part of a screen to ignore during
            screenshot comparisons. To obtain the coordinates to use here, use the
            CloudWatch console to draw the boundaries on the screen. For more information,
            see [ Editing or deleting a canary](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/synthetics_canaries_deletion.html)
      required:
      - ScreenshotName
      description: A structure representing a screenshot that is used as a baseline
        during visual monitoring comparisons made by the canary.
    BaseScreenshotConfigIgnoreCoordinate:
      type: string
      pattern: ^(-?\d{1,5}\.?\d{0,2},){3}(-?\d{1,5}\.?\d{0,2}){1}$
    BaseScreenshotIgnoreCoordinates:
      type: array
      items:
        $ref: '#/components/schemas/BaseScreenshotConfigIgnoreCoordinate'
    BaseScreenshots:
      type: array
      items:
        $ref: '#/components/schemas/BaseScreenshot'
    Blob:
      type: string
      format: byte
      minLength: 1
      maxLength: 10000000
    Canaries:
      type: array
      items:
        $ref: '#/components/schemas/Canary'
    CanariesLastRun:
      type: array
      items:
        $ref: '#/components/schemas/CanaryLastRun'
    Canary:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The unique ID of this canary.
        Name:
          allOf:
          - $ref: '#/components/schemas/CanaryName'
          description: The name of the canary.
        Code:
          $ref: '#/components/schemas/CanaryCodeOutput'
        ExecutionRoleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          description: The ARN of the IAM role used to run the canary. This role must
            include `lambda.amazonaws.com` as a principal in the trust policy.
        Schedule:
          allOf:
          - $ref: '#/components/schemas/CanaryScheduleOutput'
          description: A structure that contains information about how often the canary
            is to run, and when these runs are to stop.
        RunConfig:
          $ref: '#/components/schemas/CanaryRunConfigOutput'
        SuccessRetentionPeriodInDays:
          allOf:
          - $ref: '#/components/schemas/MaxSize1024'
          description: The number of days to retain data about successful runs of
            this canary.
        FailureRetentionPeriodInDays:
          allOf:
          - $ref: '#/components/schemas/MaxSize1024'
          description: The number of days to retain data about failed runs of this
            canary.
        Status:
          allOf:
          - $ref: '#/components/schemas/CanaryStatus'
          description: A structure that contains information about the canary's status.
        Timeline:
          allOf:
          - $ref: '#/components/schemas/CanaryTimeline'
          description: A structure that contains information about when the canary
            was created, modified, and most recently run.
        ArtifactS3Location:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The location in Amazon S3 where Synthetics stores artifacts
            from the runs of this canary. Artifacts include the log file, screenshots,
            and HAR files.
        EngineArn:
          allOf:
          - $ref: '#/components/schemas/FunctionArn'
          description: The ARN of the Lambda function that is used as your canary's
            engine. For more information about Lambda ARN format, see [Resources and
            Conditions for Lambda Actions](https://docs.aws.amazon.com/lambda/latest/dg/lambda-api-permissions-ref.html).
        RuntimeVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Specifies the runtime version to use for the canary. For more
            information about runtime versions, see [ Canary Runtime Versions](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Synthetics_Canaries_Library.html).
        VpcConfig:
          $ref: '#/components/schemas/VpcConfigOutput'
        VisualReference:
          allOf:
          - $ref: '#/components/schemas/VisualReferenceOutput'
          description: If this canary performs visual monitoring by comparing screenshots,
            this structure contains the ID of the canary run to use as the baseline
            for screenshots, and the coordinates of any parts of the screen to ignore
            during the visual monitoring comparison.
        ProvisionedResourceCleanup:
          allOf:
          - $ref: '#/components/schemas/ProvisionedResourceCleanupSetting'
          description: 'Specifies whether to also delete the Lambda functions and
            layers used by this canary when the canary is deleted. If it is `AUTOMATIC`,
            the Lambda functions and layers will be deleted when the canary is deleted.


            If the value of this parameter is `OFF`, then the value of the `DeleteLambda`
            parameter of the [DeleteCanary](https://docs.aws.amazon.com/AmazonSynthetics/latest/APIReference/API_DeleteCanary.html)
            operation determines whether the Lambda functions and layers will be deleted.'
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The list of key-value pairs that are associated with the canary.
        ArtifactConfig:
          allOf:
          - $ref: '#/components/schemas/ArtifactConfigOutput'
          description: A structure that contains the configuration for canary artifacts,
            including the encryption-at-rest settings for artifacts that the canary
            uploads to Amazon S3.
      description: This structure contains all information about one canary in your
        account.
    CanaryArn:
      type: string
      pattern: ^arn:(aws[a-zA-Z-]*)?:synthetics:[a-z]{2,4}(-[a-z]{2,4})?-[a-z]+-\d{1}:\d{12}:canary:[0-9a-z_\-]{1,255}$
      minLength: 1
      maxLength: 2048
    CanaryCodeInput:
      type: object
      properties:
        S3Bucket:
          allOf:
          - $ref: '#/components/schemas/String'
          description: If your canary script is located in S3, specify the bucket
            name here. Do not include `s3://` as the start of the bucket name.
        S3Key:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The S3 key of your script. For more information, see [Working
            with Amazon S3 Objects](https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingObjects.html).
        S3Version:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The S3 version ID of your script.
        ZipFile:
          allOf:
          - $ref: '#/components/schemas/Blob'
          description: 'If you input your canary script directly into the canary instead
            of referring to an S3 location, the value of this parameter is the base64-encoded
            contents of the .zip file that contains the script. It must be smaller
            than 225 Kb.


            For large canary scripts, we recommend that you use an S3 location instead
            of inputting it directly with this parameter.'
        Handler:
          allOf:
          - $ref: '#/components/schemas/CodeHandler'
          description: The entry point to use for the source code when running the
            canary. For canaries that use the `syn-python-selenium-1.0` runtime or
            a `syn-nodejs.puppeteer` runtime earlier than `syn-nodejs.puppeteer-3.4`,
            the handler must be specified as ` _fileName_.handler`. For `syn-python-selenium-1.1`,
            `syn-nodejs.puppeteer-3.4`, and later runtimes, the handler can be specified
            as ` _fileName_._functionName_ `, or you can specify a folder where canary
            scripts reside as ` _folder_ /_fileName_._functionName_ `.
      required:
      - Handler
      description: "Use this structure to input your script code for the canary. This\
        \ structure contains the Lambda handler with the location where the canary\
        \ should start running the script. If the script is stored in an S3 bucket,\
        \ the bucket name, key, and version are also included. If the script was passed\
        \ into the canary directly, the script code is contained in the value of `Zipfile`.\n\
        \nIf you are uploading your canary scripts with an Amazon S3 bucket, your\
        \ zip file should include your script in a certain folder structure.\n\n \
        \ * For Node.js canaries, the folder structure must be `nodejs/node_modules/_myCanaryFilename.js_\
        \ ` For more information, see [Packaging your Node.js canary files](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Synthetics_Canaries_WritingCanary_Nodejs.html#CloudWatch_Synthetics_Canaries_package)\n\
        \n  * For Python canaries, the folder structure must be `python/_myCanaryFilename.p_\
        \ ` or `python/_myFolder/myCanaryFilename.py_ ` For more information, see\
        \ [Packaging your Python canary files](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Synthetics_Canaries_WritingCanary_Python.html#CloudWatch_Synthetics_Canaries_WritingCanary_Python_package)"
    CanaryCodeOutput:
      type: object
      properties:
        SourceLocationArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ARN of the Lambda layer where Synthetics stores the canary
            script code.
        Handler:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The entry point to use for the source code when running the
            canary.
      description: This structure contains information about the canary's Lambda handler
        and where its code is stored by CloudWatch Synthetics.
    CanaryLastRun:
      type: object
      properties:
        CanaryName:
          allOf:
          - $ref: '#/components/schemas/CanaryName'
          description: The name of the canary.
        LastRun:
          allOf:
          - $ref: '#/components/schemas/CanaryRun'
          description: The results from this canary's most recent run.
      description: This structure contains information about the most recent run of
        a single canary.
    CanaryName:
      type: string
      pattern: ^[0-9a-z_\-]+$
      minLength: 1
      maxLength: 255
    CanaryRun:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: A unique ID that identifies this canary run.
        Name:
          allOf:
          - $ref: '#/components/schemas/CanaryName'
          description: The name of the canary.
        Status:
          allOf:
          - $ref: '#/components/schemas/CanaryRunStatus'
          description: The status of this run.
        Timeline:
          allOf:
          - $ref: '#/components/schemas/CanaryRunTimeline'
          description: A structure that contains the start and end times of this run.
        ArtifactS3Location:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The location where the canary stored artifacts from the run.
            Artifacts include the log file, screenshots, and HAR files.
      description: This structure contains the details about one run of one canary.
    CanaryRunConfigInput:
      type: object
      properties:
        TimeoutInSeconds:
          allOf:
          - $ref: '#/components/schemas/MaxFifteenMinutesInSeconds'
          description: 'How long the canary is allowed to run before it must stop.
            You can''t set this time to be longer than the frequency of the runs of
            this canary.


            If you omit this field, the frequency of the canary is used as this value,
            up to a maximum of 14 minutes.'
        MemoryInMB:
          allOf:
          - $ref: '#/components/schemas/MaxSize3008'
          description: The maximum amount of memory available to the canary while
            it is running, in MB. This value must be a multiple of 64.
        ActiveTracing:
          allOf:
          - $ref: '#/components/schemas/NullableBoolean'
          description: 'Specifies whether this canary is to use active X-Ray tracing
            when it runs. Active tracing enables this canary run to be displayed in
            the ServiceLens and X-Ray service maps even if the canary does not hit
            an endpoint that has X-Ray tracing enabled. Using X-Ray tracing incurs
            charges. For more information, see [ Canaries and X-Ray tracing](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Synthetics_Canaries_tracing.html).


            You can enable active tracing only for canaries that use version `syn-nodejs-2.0`
            or later for their canary runtime.'
        EnvironmentVariables:
          allOf:
          - $ref: '#/components/schemas/EnvironmentVariablesMap'
          description: 'Specifies the keys and values to use for any environment variables
            used in the canary script. Use the following format:


            { "key1" : "value1", "key2" : "value2", ...}


            Keys must start with a letter and be at least two characters. The total
            size of your environment variables cannot exceed 4 KB. You can''t specify
            any Lambda reserved environment variables as the keys for your environment
            variables. For more information about reserved keys, see [ Runtime environment
            variables](https://docs.aws.amazon.com/lambda/latest/dg/configuration-envvars.html#configuration-envvars-runtime).


            The environment variables keys and values are not encrypted. Do not store
            sensitive information in this field.'
      description: A structure that contains input information for a canary run.
    CanaryRunConfigOutput:
      type: object
      properties:
        TimeoutInSeconds:
          allOf:
          - $ref: '#/components/schemas/MaxFifteenMinutesInSeconds'
          description: How long the canary is allowed to run before it must stop.
        MemoryInMB:
          allOf:
          - $ref: '#/components/schemas/MaxSize3008'
          description: The maximum amount of memory available to the canary while
            it is running, in MB. This value must be a multiple of 64.
        ActiveTracing:
          allOf:
          - $ref: '#/components/schemas/NullableBoolean'
          description: Displays whether this canary run used active X-Ray tracing.
      description: A structure that contains information about a canary run.
    CanaryRunState:
      type: string
      enum:
      - RUNNING
      - PASSED
      - FAILED
    CanaryRunStateReasonCode:
      type: string
      enum:
      - CANARY_FAILURE
      - EXECUTION_FAILURE
    CanaryRunStatus:
      type: object
      properties:
        State:
          allOf:
          - $ref: '#/components/schemas/CanaryRunState'
          description: The current state of the run.
        StateReason:
          allOf:
          - $ref: '#/components/schemas/String'
          description: If run of the canary failed, this field contains the reason
            for the error.
        StateReasonCode:
          allOf:
          - $ref: '#/components/schemas/CanaryRunStateReasonCode'
          description: If this value is `CANARY_FAILURE`, an exception occurred in
            the canary code. If this value is `EXECUTION_FAILURE`, an exception occurred
            in CloudWatch Synthetics.
      description: This structure contains the status information about a canary run.
    CanaryRunTimeline:
      type: object
      properties:
        Started:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The start time of the run.
        Completed:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The end time of the run.
      description: This structure contains the start and end times of a single canary
        run.
    CanaryRuns:
      type: array
      items:
        $ref: '#/components/schemas/CanaryRun'
    CanaryScheduleInput:
      type: object
      properties:
        Expression:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'A `rate` expression or a `cron` expression that defines how
            often the canary is to run.


            For a rate expression, The syntax is `rate(_number unit_)`. _unit_ can
            be `minute`, `minutes`, or `hour`.


            For example, `rate(1 minute)` runs the canary once a minute, `rate(10
            minutes)` runs it once every 10 minutes, and `rate(1 hour)` runs it once
            every hour. You can specify a frequency between `rate(1 minute)` and `rate(1
            hour)`.


            Specifying `rate(0 minute)` or `rate(0 hour)` is a special value that
            causes the canary to run only once when it is started.


            Use `cron(_expression_)` to specify a cron expression. You can''t schedule
            a canary to wait for more than a year before running. For information
            about the syntax for cron expressions, see [ Scheduling canary runs using
            cron](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Synthetics_Canaries_cron.html).'
        DurationInSeconds:
          allOf:
          - $ref: '#/components/schemas/MaxOneYearInSeconds'
          description: How long, in seconds, for the canary to continue making regular
            runs according to the schedule in the `Expression` value. If you specify
            0, the canary continues making runs until you stop it. If you omit this
            field, the default of 0 is used.
      required:
      - Expression
      description: This structure specifies how often a canary is to make runs and
        the date and time when it should stop making runs.
    CanaryScheduleOutput:
      type: object
      properties:
        Expression:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'A `rate` expression or a `cron` expression that defines how
            often the canary is to run.


            For a rate expression, The syntax is `rate(_number unit_)`. _unit_ can
            be `minute`, `minutes`, or `hour`.


            For example, `rate(1 minute)` runs the canary once a minute, `rate(10
            minutes)` runs it once every 10 minutes, and `rate(1 hour)` runs it once
            every hour. You can specify a frequency between `rate(1 minute)` and `rate(1
            hour)`.


            Specifying `rate(0 minute)` or `rate(0 hour)` is a special value that
            causes the canary to run only once when it is started.


            Use `cron(_expression_)` to specify a cron expression. For information
            about the syntax for cron expressions, see [ Scheduling canary runs using
            cron](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Synthetics_Canaries_cron.html).'
        DurationInSeconds:
          allOf:
          - $ref: '#/components/schemas/MaxOneYearInSeconds'
          description: How long, in seconds, for the canary to continue making regular
            runs after it was created. The runs are performed according to the schedule
            in the `Expression` value.
      description: How long, in seconds, for the canary to continue making regular
        runs according to the schedule in the `Expression` value.
    CanaryState:
      type: string
      enum:
      - CREATING
      - READY
      - STARTING
      - RUNNING
      - UPDATING
      - STOPPING
      - STOPPED
      - ERROR
      - DELETING
    CanaryStateReasonCode:
      type: string
      enum:
      - INVALID_PERMISSIONS
      - CREATE_PENDING
      - CREATE_IN_PROGRESS
      - CREATE_FAILED
      - UPDATE_PENDING
      - UPDATE_IN_PROGRESS
      - UPDATE_COMPLETE
      - ROLLBACK_COMPLETE
      - ROLLBACK_FAILED
      - DELETE_IN_PROGRESS
      - DELETE_FAILED
      - SYNC_DELETE_IN_PROGRESS
    CanaryStatus:
      type: object
      properties:
        State:
          allOf:
          - $ref: '#/components/schemas/CanaryState'
          description: The current state of the canary.
        StateReason:
          allOf:
          - $ref: '#/components/schemas/String'
          description: If the canary has insufficient permissions to run, this field
            provides more details.
        StateReasonCode:
          allOf:
          - $ref: '#/components/schemas/CanaryStateReasonCode'
          description: If the canary cannot run or has failed, this field displays
            the reason.
      description: A structure that contains the current state of the canary.
    CanaryTimeline:
      type: object
      properties:
        Created:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time the canary was created.
        LastModified:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time the canary was most recently modified.
        LastStarted:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time that the canary's most recent run started.
        LastStopped:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time that the canary's most recent run ended.
      description: This structure contains information about when the canary was created
        and modified.
    CodeHandler:
      type: string
      pattern: ^([0-9a-zA-Z_-]+\/)*[0-9A-Za-z_\\-]+\.[A-Za-z_][A-Za-z0-9_]*$
      minLength: 1
      maxLength: 128
    ConflictException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      description: A conflicting operation is already in progress.
    CreateCanaryRequest:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/CanaryName'
          description: 'The name for this canary. Be sure to give it a descriptive
            name that distinguishes it from other canaries in your account.


            Do not include secrets or proprietary information in your canary names.
            The canary name makes up part of the canary ARN, and the ARN is included
            in outbound calls over the internet. For more information, see [Security
            Considerations for Synthetics Canaries](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/servicelens_canaries_security.html).'
        Code:
          allOf:
          - $ref: '#/components/schemas/CanaryCodeInput'
          description: A structure that includes the entry point from which the canary
            should start running your script. If the script is stored in an S3 bucket,
            the bucket name, key, and version are also included.
        ArtifactS3Location:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The location in Amazon S3 where Synthetics stores artifacts
            from the test runs of this canary. Artifacts include the log file, screenshots,
            and HAR files. The name of the S3 bucket can't include a period (.).
        ExecutionRoleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          description: "The ARN of the IAM role to be used to run the canary. This\
            \ role must already exist, and must include `lambda.amazonaws.com` as\
            \ a principal in the trust policy. The role must also have the following\
            \ permissions:\n\n  * `s3:PutObject`\n\n  * `s3:GetBucketLocation`\n\n\
            \  * `s3:ListAllMyBuckets`\n\n  * `cloudwatch:PutMetricData`\n\n  * `logs:CreateLogGroup`\n\
            \n  * `logs:CreateLogStream`\n\n  * `logs:PutLogEvents`"
        Schedule:
          allOf:
          - $ref: '#/components/schemas/CanaryScheduleInput'
          description: A structure that contains information about how often the canary
            is to run and when these test runs are to stop.
        RunConfig:
          allOf:
          - $ref: '#/components/schemas/CanaryRunConfigInput'
          description: 'A structure that contains the configuration for individual
            canary runs, such as timeout value and environment variables.


            The environment variables keys and values are not encrypted. Do not store
            sensitive information in this field.'
        SuccessRetentionPeriodInDays:
          allOf:
          - $ref: '#/components/schemas/MaxSize1024'
          description: The number of days to retain data about successful runs of
            this canary. If you omit this field, the default of 31 days is used. The
            valid range is 1 to 455 days.
        FailureRetentionPeriodInDays:
          allOf:
          - $ref: '#/components/schemas/MaxSize1024'
          description: The number of days to retain data about failed runs of this
            canary. If you omit this field, the default of 31 days is used. The valid
            range is 1 to 455 days.
        RuntimeVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Specifies the runtime version to use for the canary. For a
            list of valid runtime versions and more information about runtime versions,
            see [ Canary Runtime Versions](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Synthetics_Canaries_Library.html).
        VpcConfig:
          allOf:
          - $ref: '#/components/schemas/VpcConfigInput'
          description: If this canary is to test an endpoint in a VPC, this structure
            contains information about the subnet and security groups of the VPC endpoint.
            For more information, see [ Running a Canary in a VPC](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Synthetics_Canaries_VPC.html).
        ResourcesToReplicateTags:
          allOf:
          - $ref: '#/components/schemas/ResourceList'
          description: 'To have the tags that you apply to this canary also be applied
            to the Lambda function that the canary uses, specify this parameter with
            the value `lambda-function`.


            If you specify this parameter and don''t specify any tags in the `Tags`
            parameter, the canary creation fails.'
        ProvisionedResourceCleanup:
          allOf:
          - $ref: '#/components/schemas/ProvisionedResourceCleanupSetting'
          description: 'Specifies whether to also delete the Lambda functions and
            layers used by this canary when the canary is deleted. If you omit this
            parameter, the default of `AUTOMATIC` is used, which means that the Lambda
            functions and layers will be deleted when the canary is deleted.


            If the value of this parameter is `OFF`, then the value of the `DeleteLambda`
            parameter of the [DeleteCanary](https://docs.aws.amazon.com/AmazonSynthetics/latest/APIReference/API_DeleteCanary.html)
            operation determines whether the Lambda functions and layers will be deleted.'
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: 'A list of key-value pairs to associate with the canary. You
            can associate as many as 50 tags with a canary.


            Tags can help you organize and categorize your resources. You can also
            use them to scope user permissions, by granting a user permission to access
            or change only the resources that have certain tag values.


            To have the tags that you apply to this canary also be applied to the
            Lambda function that the canary uses, specify this parameter with the
            value `lambda-function`.'
        ArtifactConfig:
          allOf:
          - $ref: '#/components/schemas/ArtifactConfigInput'
          description: A structure that contains the configuration for canary artifacts,
            including the encryption-at-rest settings for artifacts that the canary
            uploads to Amazon S3.
      required:
      - Name
      - Code
      - ArtifactS3Location
      - ExecutionRoleArn
      - Schedule
      - RuntimeVersion
    CreateCanaryResponse:
      type: object
      properties:
        Canary:
          allOf:
          - $ref: '#/components/schemas/Canary'
          description: The full details about the canary you have created.
    CreateGroupRequest:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/GroupName'
          description: 'The name for the group. It can include any Unicode characters.


            The names for all groups in your account, across all Regions, must be
            unique.'
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: 'A list of key-value pairs to associate with the group. You
            can associate as many as 50 tags with a group.


            Tags can help you organize and categorize your resources. You can also
            use them to scope user permissions, by granting a user permission to access
            or change only the resources that have certain tag values.'
      required:
      - Name
    CreateGroupResponse:
      type: object
      properties:
        Group:
          allOf:
          - $ref: '#/components/schemas/Group'
          description: A structure that contains information about the group that
            was just created.
    DeleteCanaryRequest:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/CanaryName'
          description: The name of the canary that you want to delete. To find the
            names of your canaries, use [DescribeCanaries](https://docs.aws.amazon.com/AmazonSynthetics/latest/APIReference/API_DescribeCanaries.html).
        DeleteLambda:
          allOf:
          - $ref: '#/components/schemas/boolean'
          description: 'Specifies whether to also delete the Lambda functions and
            layers used by this canary. The default is `false`.


            Your setting for this parameter is used only if the canary doesn''t have
            `AUTOMATIC` for its `ProvisionedResourceCleanup` field. If that field
            is set to `AUTOMATIC`, then the Lambda functions and layers will be deleted
            when this canary is deleted.


            Type: Boolean'
      required:
      - Name
    DeleteCanaryResponse:
      type: object
      properties: {}
    DeleteGroupRequest:
      type: object
      properties:
        GroupIdentifier:
          allOf:
          - $ref: '#/components/schemas/GroupIdentifier'
          description: Specifies which group to delete. You can specify the group
            name, the ARN, or the group ID as the `GroupIdentifier`.
      required:
      - GroupIdentifier
    DeleteGroupResponse:
      type: object
      properties: {}
    DescribeCanariesLastRunNameFilter:
      type: array
      items:
        $ref: '#/components/schemas/CanaryName'
    DescribeCanariesLastRunRequest:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          description: A token that indicates that there is more data available. You
            can use this token in a subsequent `DescribeCanariesLastRun` operation
            to retrieve the next set of results.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxSize100'
          description: Specify this parameter to limit how many runs are returned
            each time you use the `DescribeLastRun` operation. If you omit this parameter,
            the default of 100 is used.
        Names:
          allOf:
          - $ref: '#/components/schemas/DescribeCanariesLastRunNameFilter'
          description: 'Use this parameter to return only canaries that match the
            names that you specify here. You can specify as many as five canary names.


            If you specify this parameter, the operation is successful only if you
            have authorization to view all the canaries that you specify in your request.
            If you do not have permission to view any of the canaries, the request
            fails with a 403 response.


            You are required to use the `Names` parameter if you are logged on to
            a user or role that has an IAM policy that restricts which canaries that
            you are allowed to view. For more information, see [ Limiting a user to
            viewing specific canaries](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Synthetics_Canaries_Restricted.html).'
    DescribeCanariesLastRunResponse:
      type: object
      properties:
        CanariesLastRun:
          allOf:
          - $ref: '#/components/schemas/CanariesLastRun'
          description: An array that contains the information from the most recent
            run of each canary.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          description: A token that indicates that there is more data available. You
            can use this token in a subsequent `DescribeCanariesLastRun` operation
            to retrieve the next set of results.
    DescribeCanariesNameFilter:
      type: array
      items:
        $ref: '#/components/schemas/CanaryName'
    DescribeCanariesRequest:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          description: A token that indicates that there is more data available. You
            can use this token in a subsequent operation to retrieve the next set
            of results.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxCanaryResults'
          description: Specify this parameter to limit how many canaries are returned
            each time you use the `DescribeCanaries` operation. If you omit this parameter,
            the default of 20 is used.
        Names:
          allOf:
          - $ref: '#/components/schemas/DescribeCanariesNameFilter'
          description: 'Use this parameter to return only canaries that match the
            names that you specify here. You can specify as many as five canary names.


            If you specify this parameter, the operation is successful only if you
            have authorization to view all the canaries that you specify in your request.
            If you do not have permission to view any of the canaries, the request
            fails with a 403 response.


            You are required to use this parameter if you are logged on to a user
            or role that has an IAM policy that restricts which canaries that you
            are allowed to view. For more information, see [ Limiting a user to viewing
            specific canaries](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Synthetics_Canaries_Restricted.html).'
    DescribeCanariesResponse:
      type: object
      properties:
        Canaries:
          allOf:
          - $ref: '#/components/schemas/Canaries'
          description: Returns an array. Each item in the array contains the full
            information about one canary.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          description: A token that indicates that there is more data available. You
            can use this token in a subsequent `DescribeCanaries` operation to retrieve
            the next set of results.
    DescribeRuntimeVersionsRequest:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          description: A token that indicates that there is more data available. You
            can use this token in a subsequent `DescribeRuntimeVersions` operation
            to retrieve the next set of results.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxSize100'
          description: Specify this parameter to limit how many runs are returned
            each time you use the `DescribeRuntimeVersions` operation. If you omit
            this parameter, the default of 100 is used.
    DescribeRuntimeVersionsResponse:
      type: object
      properties:
        RuntimeVersions:
          allOf:
          - $ref: '#/components/schemas/RuntimeVersionList'
          description: An array of objects that display the details about each Synthetics
            canary runtime version.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          description: A token that indicates that there is more data available. You
            can use this token in a subsequent `DescribeRuntimeVersions` operation
            to retrieve the next set of results.
    DisassociateResourceRequest:
      type: object
      properties:
        GroupIdentifier:
          allOf:
          - $ref: '#/components/schemas/GroupIdentifier'
          description: Specifies the group. You can specify the group name, the ARN,
            or the group ID as the `GroupIdentifier`.
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/CanaryArn'
          description: The ARN of the canary that you want to remove from the specified
            group.
      required:
      - GroupIdentifier
      - ResourceArn
    DisassociateResourceResponse:
      type: object
      properties: {}
    EncryptionMode:
      type: string
      enum:
      - SSE_S3
      - SSE_KMS
    EnvironmentVariableName:
      type: string
      pattern: ^[a-zA-Z]([a-zA-Z0-9_])+$
    EnvironmentVariableValue:
      type: string
    EnvironmentVariablesMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/EnvironmentVariableValue'
    ErrorMessage:
      type: string
    FunctionArn:
      type: string
      pattern: ^arn:(aws[a-zA-Z-]*)?:lambda:[a-z]{2,4}(-[a-z]{2,4})?-[a-z]+-\d{1}:\d{12}:function:[a-zA-Z0-9-_]+(:(\$LATEST|[a-zA-Z0-9-_]+))?$
      minLength: 1
      maxLength: 2048
    GetCanaryRequest:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/CanaryName'
          description: The name of the canary that you want details for.
      required:
      - Name
    GetCanaryResponse:
      type: object
      properties:
        Canary:
          allOf:
          - $ref: '#/components/schemas/Canary'
          description: A structure that contains the full information about the canary.
    GetCanaryRunsRequest:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/CanaryName'
          description: The name of the canary that you want to see runs for.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          description: A token that indicates that there is more data available. You
            can use this token in a subsequent `GetCanaryRuns` operation to retrieve
            the next set of results.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxSize100'
          description: Specify this parameter to limit how many runs are returned
            each time you use the `GetCanaryRuns` operation. If you omit this parameter,
            the default of 100 is used.
      required:
      - Name
    GetCanaryRunsResponse:
      type: object
      properties:
        CanaryRuns:
          allOf:
          - $ref: '#/components/schemas/CanaryRuns'
          description: An array of structures. Each structure contains the details
            of one of the retrieved canary runs.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          description: A token that indicates that there is more data available. You
            can use this token in a subsequent `GetCanaryRuns` operation to retrieve
            the next set of results.
    GetGroupRequest:
      type: object
      properties:
        GroupIdentifier:
          allOf:
          - $ref: '#/components/schemas/GroupIdentifier'
          description: Specifies the group to return information for. You can specify
            the group name, the ARN, or the group ID as the `GroupIdentifier`.
      required:
      - GroupIdentifier
    GetGroupResponse:
      type: object
      properties:
        Group:
          allOf:
          - $ref: '#/components/schemas/Group'
          description: A structure that contains information about the group.
    Group:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique ID of the group.
        Name:
          allOf:
          - $ref: '#/components/schemas/GroupName'
          description: The name of the group.
        Arn:
          allOf:
          - $ref: '#/components/schemas/GroupArn'
          description: The ARN of the group.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The list of key-value pairs that are associated with the canary.
        CreatedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time that the group was created.
        LastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time that the group was most recently updated.
      description: This structure contains information about one group.
    GroupArn:
      type: string
      pattern: ^arn:(aws[a-zA-Z-]*)?:synthetics:[a-z]{2,4}(-[a-z]{2,4})?-[a-z]+-\d{1}:\d{12}:group:[0-9a-z]+$
      minLength: 1
      maxLength: 128
    GroupIdentifier:
      type: string
      minLength: 1
      maxLength: 128
    GroupName:
      type: string
      minLength: 1
      maxLength: 64
    GroupSummary:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique ID of the group.
        Name:
          allOf:
          - $ref: '#/components/schemas/GroupName'
          description: The name of the group.
        Arn:
          allOf:
          - $ref: '#/components/schemas/GroupArn'
          description: The ARN of the group.
      description: A structure containing some information about a group.
    GroupSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/GroupSummary'
    InternalFailureException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      description: An internal failure occurred. Try the operation again.
    InternalServerException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      description: An unknown internal error occurred.
    KmsKeyArn:
      type: string
      pattern: ^arn:(aws[a-zA-Z-]*)?:kms:[a-z]{2,4}(-[a-z]{2,4})?-[a-z]+-\d{1}:\d{12}:key/[\w\-\/]+$
      minLength: 1
      maxLength: 2048
    ListAssociatedGroupsRequest:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: A token that indicates that there is more data available. You
            can use this token in a subsequent operation to retrieve the next set
            of results.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxGroupResults'
          description: Specify this parameter to limit how many groups are returned
            each time you use the `ListAssociatedGroups` operation. If you omit this
            parameter, the default of 20 is used.
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/CanaryArn'
          description: The ARN of the canary that you want to view groups for.
      required:
      - ResourceArn
    ListAssociatedGroupsResponse:
      type: object
      properties:
        Groups:
          allOf:
          - $ref: '#/components/schemas/GroupSummaryList'
          description: An array of structures that contain information about the groups
            that this canary is associated with.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: A token that indicates that there is more data available. You
            can use this token in a subsequent `ListAssociatedGroups` operation to
            retrieve the next set of results.
    ListGroupResourcesRequest:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: A token that indicates that there is more data available. You
            can use this token in a subsequent operation to retrieve the next set
            of results.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxGroupResults'
          description: Specify this parameter to limit how many canary ARNs are returned
            each time you use the `ListGroupResources` operation. If you omit this
            parameter, the default of 20 is used.
        GroupIdentifier:
          allOf:
          - $ref: '#/components/schemas/GroupIdentifier'
          description: Specifies the group to return information for. You can specify
            the group name, the ARN, or the group ID as the `GroupIdentifier`.
      required:
      - GroupIdentifier
    ListGroupResourcesResponse:
      type: object
      properties:
        Resources:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: An array of ARNs. These ARNs are for the canaries that are
            associated with the group.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: A token that indicates that there is more data available. You
            can use this token in a subsequent `ListGroupResources` operation to retrieve
            the next set of results.
    ListGroupsRequest:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: A token that indicates that there is more data available. You
            can use this token in a subsequent operation to retrieve the next set
            of results.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxGroupResults'
          description: Specify this parameter to limit how many groups are returned
            each time you use the `ListGroups` operation. If you omit this parameter,
            the default of 20 is used.
    ListGroupsResponse:
      type: object
      properties:
        Groups:
          allOf:
          - $ref: '#/components/schemas/GroupSummaryList'
          description: An array of structures that each contain information about
            one group.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          description: A token that indicates that there is more data available. You
            can use this token in a subsequent `ListGroups` operation to retrieve
            the next set of results.
    ListTagsForResourceRequest:
      type: object
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          description: 'The ARN of the canary or group that you want to view tags
            for.


            The ARN format of a canary is `arn:aws:synthetics:_Region_ :_account-id_
            :canary:_canary-name_ `.


            The ARN format of a group is `arn:aws:synthetics:_Region_ :_account-id_
            :group:_group-name_ `'
      required:
      - ResourceArn
    ListTagsForResourceResponse:
      type: object
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The list of tag keys and values associated with the resource
            that you specified.
    MaxCanaryResults:
      type: integer
      minimum: 1
      maximum: 20
    MaxFifteenMinutesInSeconds:
      type: integer
      minimum: 3
      maximum: 840
    MaxGroupResults:
      type: integer
      minimum: 1
      maximum: 20
    MaxOneYearInSeconds:
      type: integer
      format: int64
      minimum: 0
      maximum: 31622400
    MaxSize100:
      type: integer
      minimum: 1
      maximum: 100
    MaxSize1024:
      type: integer
      minimum: 1
      maximum: 1024
    MaxSize3008:
      type: integer
      minimum: 960
      maximum: 3008
    NotFoundException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      description: The specified resource was not found.
    NullableBoolean:
      type: boolean
    PaginationToken:
      type: string
      pattern: ^.+$
      minLength: 1
      maxLength: 512
    ProvisionedResourceCleanupSetting:
      type: string
      enum:
      - AUTOMATIC
      - 'OFF'
    RequestEntityTooLargeException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      description: One of the input resources is larger than is allowed.
    ResourceArn:
      type: string
      pattern: ^arn:(aws[a-zA-Z-]*)?:synthetics:[a-z]{2,4}(-[a-z]{2,4})?-[a-z]+-\d{1}:\d{12}:(canary|group):[0-9a-z_\-]+$
      minLength: 1
      maxLength: 2048
    ResourceList:
      type: array
      items:
        $ref: '#/components/schemas/ResourceToTag'
    ResourceNotFoundException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      description: One of the specified resources was not found.
    ResourceToTag:
      type: string
      enum:
      - lambda-function
    RoleArn:
      type: string
      pattern: ^arn:(aws[a-zA-Z-]*)?:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$
      minLength: 1
      maxLength: 2048
    RuntimeVersion:
      type: object
      properties:
        VersionName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the runtime version. For a list of valid runtime
            versions, see [ Canary Runtime Versions](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Synthetics_Canaries_Library.html).
        Description:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A description of the runtime version, created by Amazon.
        ReleaseDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date that the runtime version was released.
        DeprecationDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: If this runtime version is deprecated, this value is the date
            of deprecation.
      description: This structure contains information about one canary runtime version.
        For more information about runtime versions, see [ Canary Runtime Versions](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Synthetics_Canaries_Library.html).
    RuntimeVersionList:
      type: array
      items:
        $ref: '#/components/schemas/RuntimeVersion'
    S3EncryptionConfig:
      type: object
      properties:
        EncryptionMode:
          allOf:
          - $ref: '#/components/schemas/EncryptionMode'
          description: 'The encryption method to use for artifacts created by this
            canary. Specify `SSE_S3` to use server-side encryption (SSE) with an Amazon
            S3-managed key. Specify `SSE-KMS` to use server-side encryption with a
            customer-managed KMS key.


            If you omit this parameter, an Amazon Web Services-managed KMS key is
            used.'
        KmsKeyArn:
          allOf:
          - $ref: '#/components/schemas/KmsKeyArn'
          description: The ARN of the customer-managed KMS key to use, if you specify
            `SSE-KMS` for `EncryptionMode`
      description: 'A structure that contains the configuration of encryption-at-rest
        settings for canary artifacts that the canary uploads to Amazon S3.


        For more information, see [Encrypting canary artifacts](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Synthetics_artifact_encryption.html)'
    SecurityGroupId:
      type: string
    SecurityGroupIds:
      type: array
      items:
        $ref: '#/components/schemas/SecurityGroupId'
    ServiceQuotaExceededException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      description: The request exceeded a service quota value.
    StartCanaryRequest:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/CanaryName'
          description: The name of the canary that you want to run. To find canary
            names, use [DescribeCanaries](https://docs.aws.amazon.com/AmazonSynthetics/latest/APIReference/API_DescribeCanaries.html).
      required:
      - Name
    StartCanaryResponse:
      type: object
      properties: {}
    StopCanaryRequest:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/CanaryName'
          description: The name of the canary that you want to stop. To find the names
            of your canaries, use [ListCanaries](https://docs.aws.amazon.com/AmazonSynthetics/latest/APIReference/API_DescribeCanaries.html).
      required:
      - Name
    StopCanaryResponse:
      type: object
      properties: {}
    String:
      type: string
      minLength: 1
      maxLength: 1024
    StringList:
      type: array
      items:
        $ref: '#/components/schemas/String'
    SubnetId:
      type: string
    SubnetIds:
      type: array
      items:
        $ref: '#/components/schemas/SubnetId'
    TagKey:
      type: string
      pattern: ^(?!aws:)[a-zA-Z+-=._:/]+$
      minLength: 1
      maxLength: 128
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
    TagMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
    TagResourceRequest:
      type: object
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          description: 'The ARN of the canary or group that you''re adding tags to.


            The ARN format of a canary is `arn:aws:synthetics:_Region_ :_account-id_
            :canary:_canary-name_ `.


            The ARN format of a group is `arn:aws:synthetics:_Region_ :_account-id_
            :group:_group-name_ `'
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The list of key-value pairs to associate with the resource.
      required:
      - ResourceArn
      - Tags
    TagResourceResponse:
      type: object
      properties: {}
    TagValue:
      type: string
      minLength: 0
      maxLength: 256
    Timestamp:
      type: string
      format: date-time
    Token:
      type: string
      minLength: 4
      maxLength: 252
    TooManyRequestsException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      description: There were too many simultaneous requests. Try the operation again.
    UUID:
      type: string
      pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
    UntagResourceRequest:
      type: object
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          description: 'The ARN of the canary or group that you''re removing tags
            from.


            The ARN format of a canary is `arn:aws:synthetics:_Region_ :_account-id_
            :canary:_canary-name_ `.


            The ARN format of a group is `arn:aws:synthetics:_Region_ :_account-id_
            :group:_group-name_ `'
        TagKeys:
          allOf:
          - $ref: '#/components/schemas/TagKeyList'
          description: The list of tag keys to remove from the resource.
      required:
      - ResourceArn
      - TagKeys
    UntagResourceResponse:
      type: object
      properties: {}
    UpdateCanaryRequest:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/CanaryName'
          description: 'The name of the canary that you want to update. To find the
            names of your canaries, use [DescribeCanaries](https://docs.aws.amazon.com/AmazonSynthetics/latest/APIReference/API_DescribeCanaries.html).


            You cannot change the name of a canary that has already been created.'
        Code:
          allOf:
          - $ref: '#/components/schemas/CanaryCodeInput'
          description: A structure that includes the entry point from which the canary
            should start running your script. If the script is stored in an S3 bucket,
            the bucket name, key, and version are also included.
        ExecutionRoleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          description: "The ARN of the IAM role to be used to run the canary. This\
            \ role must already exist, and must include `lambda.amazonaws.com` as\
            \ a principal in the trust policy. The role must also have the following\
            \ permissions:\n\n  * `s3:PutObject`\n\n  * `s3:GetBucketLocation`\n\n\
            \  * `s3:ListAllMyBuckets`\n\n  * `cloudwatch:PutMetricData`\n\n  * `logs:CreateLogGroup`\n\
            \n  * `logs:CreateLogStream`\n\n  * `logs:CreateLogStream`"
        RuntimeVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Specifies the runtime version to use for the canary. For a
            list of valid runtime versions and for more information about runtime
            versions, see [ Canary Runtime Versions](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Synthetics_Canaries_Library.html).
        Schedule:
          allOf:
          - $ref: '#/components/schemas/CanaryScheduleInput'
          description: A structure that contains information about how often the canary
            is to run, and when these runs are to stop.
        RunConfig:
          allOf:
          - $ref: '#/components/schemas/CanaryRunConfigInput'
          description: 'A structure that contains the timeout value that is used for
            each individual run of the canary.


            The environment variables keys and values are not encrypted. Do not store
            sensitive information in this field.'
        SuccessRetentionPeriodInDays:
          allOf:
          - $ref: '#/components/schemas/MaxSize1024'
          description: The number of days to retain data about successful runs of
            this canary.
        FailureRetentionPeriodInDays:
          allOf:
          - $ref: '#/components/schemas/MaxSize1024'
          description: The number of days to retain data about failed runs of this
            canary.
        VpcConfig:
          allOf:
          - $ref: '#/components/schemas/VpcConfigInput'
          description: If this canary is to test an endpoint in a VPC, this structure
            contains information about the subnet and security groups of the VPC endpoint.
            For more information, see [ Running a Canary in a VPC](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Synthetics_Canaries_VPC.html).
        VisualReference:
          allOf:
          - $ref: '#/components/schemas/VisualReferenceInput'
          description: 'Defines the screenshots to use as the baseline for comparisons
            during visual monitoring comparisons during future runs of this canary.
            If you omit this parameter, no changes are made to any baseline screenshots
            that the canary might be using already.


            Visual monitoring is supported only on canaries running the **syn-puppeteer-node-3.2**
            runtime or later. For more information, see [ Visual monitoring](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Synthetics_Library_SyntheticsLogger_VisualTesting.html)
            and [ Visual monitoring blueprint](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Synthetics_Canaries_Blueprints_VisualTesting.html)'
        ArtifactS3Location:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The location in Amazon S3 where Synthetics stores artifacts
            from the test runs of this canary. Artifacts include the log file, screenshots,
            and HAR files. The name of the S3 bucket can't include a period (.).
        ArtifactConfig:
          allOf:
          - $ref: '#/components/schemas/ArtifactConfigInput'
          description: A structure that contains the configuration for canary artifacts,
            including the encryption-at-rest settings for artifacts that the canary
            uploads to Amazon S3.
        ProvisionedResourceCleanup:
          allOf:
          - $ref: '#/components/schemas/ProvisionedResourceCleanupSetting'
          description: 'Specifies whether to also delete the Lambda functions and
            layers used by this canary when the canary is deleted.


            If the value of this parameter is `OFF`, then the value of the `DeleteLambda`
            parameter of the [DeleteCanary](https://docs.aws.amazon.com/AmazonSynthetics/latest/APIReference/API_DeleteCanary.html)
            operation determines whether the Lambda functions and layers will be deleted.'
      required:
      - Name
    UpdateCanaryResponse:
      type: object
      properties: {}
    ValidationException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      description: A parameter could not be validated.
    VisualReferenceInput:
      type: object
      properties:
        BaseScreenshots:
          allOf:
          - $ref: '#/components/schemas/BaseScreenshots'
          description: An array of screenshots that will be used as the baseline for
            visual monitoring in future runs of this canary. If there is a screenshot
            that you don't want to be used for visual monitoring, remove it from this
            array.
        BaseCanaryRunId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Specifies which canary run to use the screenshots from as the
            baseline for future visual monitoring with this canary. Valid values are
            `nextrun` to use the screenshots from the next run after this update is
            made, `lastrun` to use the screenshots from the most recent run before
            this update was made, or the value of `Id` in the [ CanaryRun](https://docs.aws.amazon.com/AmazonSynthetics/latest/APIReference/API_CanaryRun.html)
            from a run of this a canary in the past 31 days. If you specify the `Id`
            of a canary run older than 31 days, the operation returns a 400 validation
            exception error..
      required:
      - BaseCanaryRunId
      description: 'An object that specifies what screenshots to use as a baseline
        for visual monitoring by this canary. It can optionally also specify parts
        of the screenshots to ignore during the visual monitoring comparison.


        Visual monitoring is supported only on canaries running the **syn-puppeteer-node-3.2**
        runtime or later. For more information, see [ Visual monitoring](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Synthetics_Library_SyntheticsLogger_VisualTesting.html)
        and [ Visual monitoring blueprint](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Synthetics_Canaries_Blueprints_VisualTesting.html)'
    VisualReferenceOutput:
      type: object
      properties:
        BaseScreenshots:
          allOf:
          - $ref: '#/components/schemas/BaseScreenshots'
          description: An array of screenshots that are used as the baseline for comparisons
            during visual monitoring.
        BaseCanaryRunId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the canary run that produced the baseline screenshots
            that are used for visual monitoring comparisons by this canary.
      description: 'If this canary performs visual monitoring by comparing screenshots,
        this structure contains the ID of the canary run that is used as the baseline
        for screenshots, and the coordinates of any parts of those screenshots that
        are ignored during visual monitoring comparison.


        Visual monitoring is supported only on canaries running the **syn-puppeteer-node-3.2**
        runtime or later.'
    VpcConfigInput:
      type: object
      properties:
        SubnetIds:
          allOf:
          - $ref: '#/components/schemas/SubnetIds'
          description: The IDs of the subnets where this canary is to run.
        SecurityGroupIds:
          allOf:
          - $ref: '#/components/schemas/SecurityGroupIds'
          description: The IDs of the security groups for this canary.
        Ipv6AllowedForDualStack:
          allOf:
          - $ref: '#/components/schemas/NullableBoolean'
          description: Set this to `true` to allow outbound IPv6 traffic on VPC canaries
            that are connected to dual-stack subnets. The default is `false`
      description: If this canary is to test an endpoint in a VPC, this structure
        contains information about the subnets and security groups of the VPC endpoint.
        For more information, see [ Running a Canary in a VPC](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Synthetics_Canaries_VPC.html).
    VpcConfigOutput:
      type: object
      properties:
        VpcId:
          allOf:
          - $ref: '#/components/schemas/VpcId'
          description: The IDs of the VPC where this canary is to run.
        SubnetIds:
          allOf:
          - $ref: '#/components/schemas/SubnetIds'
          description: The IDs of the subnets where this canary is to run.
        SecurityGroupIds:
          allOf:
          - $ref: '#/components/schemas/SecurityGroupIds'
          description: The IDs of the security groups for this canary.
        Ipv6AllowedForDualStack:
          allOf:
          - $ref: '#/components/schemas/NullableBoolean'
          description: Indicates whether this canary allows outbound IPv6 traffic
            if it is connected to dual-stack subnets.
      description: If this canary is to test an endpoint in a VPC, this structure
        contains information about the subnets and security groups of the VPC endpoint.
        For more information, see [ Running a Canary in a VPC](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Synthetics_Canaries_VPC.html).
    VpcId:
      type: string
    boolean:
      type: boolean
      default: false
