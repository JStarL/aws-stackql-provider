openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: sesv2
  x-aws-serviceName: sesv2
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-07'
  version: '2019-09-27'
  title: Amazon Simple Email Service
  description: |-
    Amazon SES API v2

    [Amazon SES](http://aws.amazon.com/ses) is an Amazon Web Services service that you can use to send email messages to your customers.

    If you're new to Amazon SES API v2, you might find it helpful to review the [Amazon Simple Email Service Developer Guide](https://docs.aws.amazon.com/ses/latest/DeveloperGuide/). The _Amazon SES Developer Guide_ provides information and code samples that demonstrate how to use Amazon SES API v2 features programmatically.
servers:
- description: The Amazon Simple Email Service regional endpoint
  url: https://email.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths:
  /v2/email/metrics/batch:
    post:
      operationId: BatchGetMetricData
      description: |-
        Retrieves batches of metric data collected based on your sending activity.

        You can execute this operation no more than 16 times per second, and with at most 160 queries from the batches per second (cumulative).
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Queries:
                  $ref: '#/components/schemas/BatchGetMetricDataQueries'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            The request couldn't be processed because an error occurred with the Amazon SES API v2.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceErrorException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v2/email/export-jobs/{JobId}/cancel:
    put:
      operationId: CancelExportJob
      description: |-
        Cancels an export job.
      parameters:
      - name: JobId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/JobId'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v2/email/configuration-sets:
    post:
      operationId: CreateConfigurationSet
      description: |-
        Create a configuration set. _Configuration sets_ are groups of rules that you can apply to the emails that you send. You apply a configuration set to an email by specifying the name of the configuration set when you call the Amazon SES API v2. When you apply a configuration set to an email, all of the rules in that configuration set are applied to the email.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ConfigurationSetName:
                  $ref: '#/components/schemas/ConfigurationSetName'
                TrackingOptions:
                  $ref: '#/components/schemas/TrackingOptions'
                DeliveryOptions:
                  $ref: '#/components/schemas/DeliveryOptions'
                ReputationOptions:
                  $ref: '#/components/schemas/ReputationOptions'
                SendingOptions:
                  $ref: '#/components/schemas/SendingOptions'
                Tags:
                  $ref: '#/components/schemas/TagList'
                SuppressionOptions:
                  $ref: '#/components/schemas/SuppressionOptions'
                VdmOptions:
                  $ref: '#/components/schemas/VdmOptions'
                ArchivingOptions:
                  $ref: '#/components/schemas/ArchivingOptions'
      responses:
        '200': {}
        '400':
          description: |-
            There are too many instances of the specified resource type.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '500':
          description: |-
            The resource is being modified by another operation or thread.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    get:
      operationId: ListConfigurationSets
      description: |-
        List all of the configuration sets associated with your account in the current region.

        _Configuration sets_ are groups of rules that you can apply to the emails you send. You apply a configuration set to an email by including a reference to the configuration set in the headers of the email. When you apply a configuration set to an email, all of the rules in that configuration set are applied to the email.
      parameters:
      - name: NextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: PageSize
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxItems'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v2/email/configuration-sets/{ConfigurationSetName}/event-destinations:
    post:
      operationId: CreateConfigurationSetEventDestination
      description: |-
        Create an event destination. _Events_ include message sends, deliveries, opens, clicks, bounces, and complaints. _Event destinations_ are places that you can send information about these events to. For example, you can send event data to Amazon EventBridge and associate a rule to send the event to the specified target.

        A single configuration set can include more than one event destination.
      parameters:
      - name: ConfigurationSetName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ConfigurationSetName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                EventDestinationName:
                  $ref: '#/components/schemas/EventDestinationName'
                EventDestination:
                  $ref: '#/components/schemas/EventDestinationDefinition'
      responses:
        '200': {}
        '400':
          description: |-
            There are too many instances of the specified resource type.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    get:
      operationId: GetConfigurationSetEventDestinations
      description: |-
        Retrieve a list of event destinations that are associated with a configuration set.

        _Events_ include message sends, deliveries, opens, clicks, bounces, and complaints. _Event destinations_ are places that you can send information about these events to. For example, you can send event data to Amazon EventBridge and associate a rule to send the event to the specified target.
      parameters:
      - name: ConfigurationSetName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ConfigurationSetName'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v2/email/contact-lists/{ContactListName}/contacts:
    post:
      operationId: CreateContact
      description: |-
        Creates a contact, which is an end-user who is receiving the email, and adds them to a contact list.
      parameters:
      - name: ContactListName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ContactListName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                EmailAddress:
                  $ref: '#/components/schemas/EmailAddress'
                TopicPreferences:
                  $ref: '#/components/schemas/TopicPreferenceList'
                UnsubscribeAll:
                  $ref: '#/components/schemas/UnsubscribeAll'
                AttributesData:
                  $ref: '#/components/schemas/AttributesData'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v2/email/contact-lists:
    post:
      operationId: CreateContactList
      description: |-
        Creates a contact list.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ContactListName:
                  $ref: '#/components/schemas/ContactListName'
                Topics:
                  $ref: '#/components/schemas/Topics'
                Description:
                  $ref: '#/components/schemas/Description'
                Tags:
                  $ref: '#/components/schemas/TagList'
      responses:
        '200': {}
        '400':
          description: |-
            There are too many instances of the specified resource type.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    get:
      operationId: ListContactLists
      description: |-
        Lists all of the contact lists available.

        If your output includes a "NextToken" field with a string value, this indicates there may be additional contacts on the filtered list - regardless of the number of contacts returned.
      parameters:
      - name: PageSize
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxItems'
      - name: NextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v2/email/custom-verification-email-templates:
    post:
      operationId: CreateCustomVerificationEmailTemplate
      description: |-
        Creates a new custom verification email template.

        For more information about custom verification email templates, see [Using custom verification email templates](https://docs.aws.amazon.com/ses/latest/dg/creating-identities.html#send-email-verify-address-custom) in the _Amazon SES Developer Guide_.

        You can execute this operation no more than once per second.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                TemplateName:
                  $ref: '#/components/schemas/EmailTemplateName'
                FromEmailAddress:
                  $ref: '#/components/schemas/EmailAddress'
                TemplateSubject:
                  $ref: '#/components/schemas/EmailTemplateSubject'
                TemplateContent:
                  $ref: '#/components/schemas/TemplateContent'
                SuccessRedirectionURL:
                  $ref: '#/components/schemas/SuccessRedirectionURL'
                FailureRedirectionURL:
                  $ref: '#/components/schemas/FailureRedirectionURL'
      responses:
        '200': {}
        '400':
          description: |-
            There are too many instances of the specified resource type.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    get:
      operationId: ListCustomVerificationEmailTemplates
      description: |-
        Lists the existing custom verification email templates for your account in the current Amazon Web Services Region.

        For more information about custom verification email templates, see [Using custom verification email templates](https://docs.aws.amazon.com/ses/latest/dg/creating-identities.html#send-email-verify-address-custom) in the _Amazon SES Developer Guide_.

        You can execute this operation no more than once per second.
      parameters:
      - name: NextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: PageSize
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxItems'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v2/email/dedicated-ip-pools:
    post:
      operationId: CreateDedicatedIpPool
      description: |-
        Create a new pool of dedicated IP addresses. A pool can include one or more dedicated IP addresses that are associated with your Amazon Web Services account. You can associate a pool with a configuration set. When you send an email that uses that configuration set, the message is sent from one of the addresses in the associated pool.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                PoolName:
                  $ref: '#/components/schemas/PoolName'
                Tags:
                  $ref: '#/components/schemas/TagList'
                ScalingMode:
                  $ref: '#/components/schemas/ScalingMode'
      responses:
        '200': {}
        '400':
          description: |-
            There are too many instances of the specified resource type.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '500':
          description: |-
            The resource is being modified by another operation or thread.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    get:
      operationId: ListDedicatedIpPools
      description: |-
        List all of the dedicated IP pools that exist in your Amazon Web Services account in the current Region.
      parameters:
      - name: NextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: PageSize
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxItems'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v2/email/deliverability-dashboard/test:
    post:
      operationId: CreateDeliverabilityTestReport
      description: |-
        Create a new predictive inbox placement test. Predictive inbox placement tests can help you predict how your messages will be handled by various email providers around the world. When you perform a predictive inbox placement test, you provide a sample message that contains the content that you plan to send to your customers. Amazon SES then sends that message to special email addresses spread across several major email providers. After about 24 hours, the test is complete, and you can use the `GetDeliverabilityTestReport` operation to view the results of the test.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ReportName:
                  $ref: '#/components/schemas/ReportName'
                FromEmailAddress:
                  $ref: '#/components/schemas/EmailAddress'
                Content:
                  $ref: '#/components/schemas/EmailContent'
                Tags:
                  $ref: '#/components/schemas/TagList'
      responses:
        '200': {}
        '400':
          description: |-
            The message can't be sent because the account's ability to send email is currently paused.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendingPausedException'
        '500':
          description: |-
            The resource is being modified by another operation or thread.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v2/email/identities:
    post:
      operationId: CreateEmailIdentity
      description: |-
        Starts the process of verifying an email identity. An _identity_ is an email address or domain that you use when you send email. Before you can use an identity to send email, you first have to verify it. By verifying an identity, you demonstrate that you're the owner of the identity, and that you've given Amazon SES API v2 permission to send email from the identity.

        When you verify an email address, Amazon SES sends an email to the address. Your email address is verified as soon as you follow the link in the verification email.

        When you verify a domain without specifying the `DkimSigningAttributes` object, this operation provides a set of DKIM tokens. You can convert these tokens into CNAME records, which you then add to the DNS configuration for your domain. Your domain is verified when Amazon SES detects these records in the DNS configuration for your domain. This verification method is known as [Easy DKIM](https://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim.html).

        Alternatively, you can perform the verification process by providing your own public-private key pair. This verification method is known as Bring Your Own DKIM (BYODKIM). To use BYODKIM, your call to the `CreateEmailIdentity` operation has to include the `DkimSigningAttributes` object. When you specify this object, you provide a selector (a component of the DNS record name that identifies the public key to use for DKIM authentication) and a private key.

        When you verify a domain, this operation provides a set of DKIM tokens, which you can convert into CNAME tokens. You add these CNAME tokens to the DNS configuration for your domain. Your domain is verified when Amazon SES detects these records in the DNS configuration for your domain. For some DNS providers, it can take 72 hours or more to complete the domain verification process.

        Additionally, you can associate an existing configuration set with the email identity that you're verifying.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                EmailIdentity:
                  $ref: '#/components/schemas/Identity'
                Tags:
                  $ref: '#/components/schemas/TagList'
                DkimSigningAttributes:
                  $ref: '#/components/schemas/DkimSigningAttributes'
                ConfigurationSetName:
                  $ref: '#/components/schemas/ConfigurationSetName'
      responses:
        '200': {}
        '400':
          description: |-
            There are too many instances of the specified resource type.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '500':
          description: |-
            The resource is being modified by another operation or thread.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    get:
      operationId: ListEmailIdentities
      description: |-
        Returns a list of all of the email identities that are associated with your Amazon Web Services account. An identity can be either an email address or a domain. This operation returns identities that are verified as well as those that aren't. This operation returns identities that are associated with Amazon SES and Amazon Pinpoint.
      parameters:
      - name: NextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: PageSize
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxItems'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v2/email/identities/{EmailIdentity}/policies/{PolicyName}:
    post:
      operationId: CreateEmailIdentityPolicy
      description: |-
        Creates the specified sending authorization policy for the given identity (an email address or a domain).

        This API is for the identity owner only. If you have not verified the identity, this API will return an error.

        Sending authorization is a feature that enables an identity owner to authorize other senders to use its identities. For information about using sending authorization, see the [Amazon SES Developer Guide](https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html).

        You can execute this operation no more than once per second.
      parameters:
      - name: EmailIdentity
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Identity'
      - name: PolicyName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PolicyName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Policy:
                  $ref: '#/components/schemas/Policy'
      responses:
        '200': {}
        '400':
          description: |-
            There are too many instances of the specified resource type.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    delete:
      operationId: DeleteEmailIdentityPolicy
      description: |-
        Deletes the specified sending authorization policy for the given identity (an email address or a domain). This API returns successfully even if a policy with the specified name does not exist.

        This API is for the identity owner only. If you have not verified the identity, this API will return an error.

        Sending authorization is a feature that enables an identity owner to authorize other senders to use its identities. For information about using sending authorization, see the [Amazon SES Developer Guide](https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html).

        You can execute this operation no more than once per second.
      parameters:
      - name: EmailIdentity
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Identity'
      - name: PolicyName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PolicyName'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    put:
      operationId: UpdateEmailIdentityPolicy
      description: |-
        Updates the specified sending authorization policy for the given identity (an email address or a domain). This API returns successfully even if a policy with the specified name does not exist.

        This API is for the identity owner only. If you have not verified the identity, this API will return an error.

        Sending authorization is a feature that enables an identity owner to authorize other senders to use its identities. For information about using sending authorization, see the [Amazon SES Developer Guide](https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html).

        You can execute this operation no more than once per second.
      parameters:
      - name: EmailIdentity
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Identity'
      - name: PolicyName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PolicyName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Policy:
                  $ref: '#/components/schemas/Policy'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v2/email/templates:
    post:
      operationId: CreateEmailTemplate
      description: |-
        Creates an email template. Email templates enable you to send personalized email to one or more destinations in a single API operation. For more information, see the [Amazon SES Developer Guide](https://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-personalized-email-api.html).

        You can execute this operation no more than once per second.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                TemplateName:
                  $ref: '#/components/schemas/EmailTemplateName'
                TemplateContent:
                  $ref: '#/components/schemas/EmailTemplateContent'
      responses:
        '200': {}
        '400':
          description: |-
            There are too many instances of the specified resource type.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    get:
      operationId: ListEmailTemplates
      description: |-
        Lists the email templates present in your Amazon SES account in the current Amazon Web Services Region.

        You can execute this operation no more than once per second.
      parameters:
      - name: NextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: PageSize
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxItems'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v2/email/export-jobs:
    post:
      operationId: CreateExportJob
      description: |-
        Creates an export job for a data source and destination.

        You can execute this operation no more than once per second.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ExportDataSource:
                  $ref: '#/components/schemas/ExportDataSource'
                ExportDestination:
                  $ref: '#/components/schemas/ExportDestination'
      responses:
        '200': {}
        '400':
          description: |-
            There are too many instances of the specified resource type.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v2/email/import-jobs:
    post:
      operationId: CreateImportJob
      description: |-
        Creates an import job for a data destination.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ImportDestination:
                  $ref: '#/components/schemas/ImportDestination'
                ImportDataSource:
                  $ref: '#/components/schemas/ImportDataSource'
      responses:
        '200': {}
        '400':
          description: |-
            There are too many instances of the specified resource type.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v2/email/multi-region-endpoints:
    post:
      operationId: CreateMultiRegionEndpoint
      description: |-
        Creates a multi-region endpoint (global-endpoint).

        The primary region is going to be the AWS-Region where the operation is executed. The secondary region has to be provided in request's parameters. From the data flow standpoint there is no difference between primary and secondary regions - sending traffic will be split equally between the two. The primary region is the region where the resource has been created and where it can be managed.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                EndpointName:
                  $ref: '#/components/schemas/EndpointName'
                Details:
                  $ref: '#/components/schemas/Details'
                Tags:
                  $ref: '#/components/schemas/TagList'
      responses:
        '200': {}
        '400':
          description: |-
            There are too many instances of the specified resource type.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    get:
      operationId: ListMultiRegionEndpoints
      description: |-
        List the multi-region endpoints (global-endpoints).

        Only multi-region endpoints (global-endpoints) whose primary region is the AWS-Region where operation is executed will be listed.
      parameters:
      - name: NextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextTokenV2'
      - name: PageSize
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PageSizeV2'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v2/email/configuration-sets/{ConfigurationSetName}:
    delete:
      operationId: DeleteConfigurationSet
      description: |-
        Delete an existing configuration set.

        _Configuration sets_ are groups of rules that you can apply to the emails you send. You apply a configuration set to an email by including a reference to the configuration set in the headers of the email. When you apply a configuration set to an email, all of the rules in that configuration set are applied to the email.
      parameters:
      - name: ConfigurationSetName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ConfigurationSetName'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            The resource is being modified by another operation or thread.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    get:
      operationId: GetConfigurationSet
      description: |-
        Get information about an existing configuration set, including the dedicated IP pool that it's associated with, whether or not it's enabled for sending email, and more.

        _Configuration sets_ are groups of rules that you can apply to the emails you send. You apply a configuration set to an email by including a reference to the configuration set in the headers of the email. When you apply a configuration set to an email, all of the rules in that configuration set are applied to the email.
      parameters:
      - name: ConfigurationSetName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ConfigurationSetName'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v2/email/configuration-sets/{ConfigurationSetName}/event-destinations/{EventDestinationName}:
    delete:
      operationId: DeleteConfigurationSetEventDestination
      description: |-
        Delete an event destination.

        _Events_ include message sends, deliveries, opens, clicks, bounces, and complaints. _Event destinations_ are places that you can send information about these events to. For example, you can send event data to Amazon EventBridge and associate a rule to send the event to the specified target.
      parameters:
      - name: ConfigurationSetName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ConfigurationSetName'
      - name: EventDestinationName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/EventDestinationName'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    put:
      operationId: UpdateConfigurationSetEventDestination
      description: |-
        Update the configuration of an event destination for a configuration set.

        _Events_ include message sends, deliveries, opens, clicks, bounces, and complaints. _Event destinations_ are places that you can send information about these events to. For example, you can send event data to Amazon EventBridge and associate a rule to send the event to the specified target.
      parameters:
      - name: ConfigurationSetName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ConfigurationSetName'
      - name: EventDestinationName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/EventDestinationName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                EventDestination:
                  $ref: '#/components/schemas/EventDestinationDefinition'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v2/email/contact-lists/{ContactListName}/contacts/{EmailAddress}:
    delete:
      operationId: DeleteContact
      description: |-
        Removes a contact from a contact list.
      parameters:
      - name: ContactListName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ContactListName'
      - name: EmailAddress
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/EmailAddress'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    get:
      operationId: GetContact
      description: |-
        Returns a contact from a contact list.
      parameters:
      - name: ContactListName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ContactListName'
      - name: EmailAddress
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/EmailAddress'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    put:
      operationId: UpdateContact
      description: |-
        Updates a contact's preferences for a list.

        You must specify all existing topic preferences in the `TopicPreferences` object, not just the ones that need updating; otherwise, all your existing preferences will be removed.
      parameters:
      - name: ContactListName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ContactListName'
      - name: EmailAddress
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/EmailAddress'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                TopicPreferences:
                  $ref: '#/components/schemas/TopicPreferenceList'
                UnsubscribeAll:
                  $ref: '#/components/schemas/UnsubscribeAll'
                AttributesData:
                  $ref: '#/components/schemas/AttributesData'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            The resource is being modified by another operation or thread.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v2/email/contact-lists/{ContactListName}:
    delete:
      operationId: DeleteContactList
      description: |-
        Deletes a contact list and all of the contacts on that list.
      parameters:
      - name: ContactListName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ContactListName'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            The resource is being modified by another operation or thread.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    get:
      operationId: GetContactList
      description: |-
        Returns contact list metadata. It does not return any information about the contacts present in the list.
      parameters:
      - name: ContactListName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ContactListName'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    put:
      operationId: UpdateContactList
      description: |-
        Updates contact list metadata. This operation does a complete replacement.
      parameters:
      - name: ContactListName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ContactListName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Topics:
                  $ref: '#/components/schemas/Topics'
                Description:
                  $ref: '#/components/schemas/Description'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            The resource is being modified by another operation or thread.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v2/email/custom-verification-email-templates/{TemplateName}:
    delete:
      operationId: DeleteCustomVerificationEmailTemplate
      description: |-
        Deletes an existing custom verification email template.

        For more information about custom verification email templates, see [Using custom verification email templates](https://docs.aws.amazon.com/ses/latest/dg/creating-identities.html#send-email-verify-address-custom) in the _Amazon SES Developer Guide_.

        You can execute this operation no more than once per second.
      parameters:
      - name: TemplateName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/EmailTemplateName'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    get:
      operationId: GetCustomVerificationEmailTemplate
      description: |-
        Returns the custom email verification template for the template name you specify.

        For more information about custom verification email templates, see [Using custom verification email templates](https://docs.aws.amazon.com/ses/latest/dg/creating-identities.html#send-email-verify-address-custom) in the _Amazon SES Developer Guide_.

        You can execute this operation no more than once per second.
      parameters:
      - name: TemplateName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/EmailTemplateName'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    put:
      operationId: UpdateCustomVerificationEmailTemplate
      description: |-
        Updates an existing custom verification email template.

        For more information about custom verification email templates, see [Using custom verification email templates](https://docs.aws.amazon.com/ses/latest/dg/creating-identities.html#send-email-verify-address-custom) in the _Amazon SES Developer Guide_.

        You can execute this operation no more than once per second.
      parameters:
      - name: TemplateName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/EmailTemplateName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                FromEmailAddress:
                  $ref: '#/components/schemas/EmailAddress'
                TemplateSubject:
                  $ref: '#/components/schemas/EmailTemplateSubject'
                TemplateContent:
                  $ref: '#/components/schemas/TemplateContent'
                SuccessRedirectionURL:
                  $ref: '#/components/schemas/SuccessRedirectionURL'
                FailureRedirectionURL:
                  $ref: '#/components/schemas/FailureRedirectionURL'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v2/email/dedicated-ip-pools/{PoolName}:
    delete:
      operationId: DeleteDedicatedIpPool
      description: |-
        Delete a dedicated IP pool.
      parameters:
      - name: PoolName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PoolName'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            The resource is being modified by another operation or thread.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    get:
      operationId: GetDedicatedIpPool
      description: |-
        Retrieve information about the dedicated pool.
      parameters:
      - name: PoolName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PoolName'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v2/email/identities/{EmailIdentity}:
    delete:
      operationId: DeleteEmailIdentity
      description: |-
        Deletes an email identity. An identity can be either an email address or a domain name.
      parameters:
      - name: EmailIdentity
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Identity'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            The resource is being modified by another operation or thread.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    get:
      operationId: GetEmailIdentity
      description: |-
        Provides information about a specific identity, including the identity's verification status, sending authorization policies, its DKIM authentication status, and its custom Mail-From settings.
      parameters:
      - name: EmailIdentity
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Identity'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v2/email/templates/{TemplateName}:
    delete:
      operationId: DeleteEmailTemplate
      description: |-
        Deletes an email template.

        You can execute this operation no more than once per second.
      parameters:
      - name: TemplateName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/EmailTemplateName'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    get:
      operationId: GetEmailTemplate
      description: |-
        Displays the template object (which includes the subject line, HTML part and text part) for the template you specify.

        You can execute this operation no more than once per second.
      parameters:
      - name: TemplateName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/EmailTemplateName'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    put:
      operationId: UpdateEmailTemplate
      description: |-
        Updates an email template. Email templates enable you to send personalized email to one or more destinations in a single API operation. For more information, see the [Amazon SES Developer Guide](https://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-personalized-email-api.html).

        You can execute this operation no more than once per second.
      parameters:
      - name: TemplateName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/EmailTemplateName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                TemplateContent:
                  $ref: '#/components/schemas/EmailTemplateContent'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v2/email/multi-region-endpoints/{EndpointName}:
    delete:
      operationId: DeleteMultiRegionEndpoint
      description: |-
        Deletes a multi-region endpoint (global-endpoint).

        Only multi-region endpoints (global-endpoints) whose primary region is the AWS-Region where operation is executed can be deleted.
      parameters:
      - name: EndpointName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/EndpointName'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            The resource is being modified by another operation or thread.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    get:
      operationId: GetMultiRegionEndpoint
      description: |-
        Displays the multi-region endpoint (global-endpoint) configuration.

        Only multi-region endpoints (global-endpoints) whose primary region is the AWS-Region where operation is executed can be displayed.
      parameters:
      - name: EndpointName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/EndpointName'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v2/email/suppression/addresses/{EmailAddress}:
    delete:
      operationId: DeleteSuppressedDestination
      description: |-
        Removes an email address from the suppression list for your account.
      parameters:
      - name: EmailAddress
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/EmailAddress'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    get:
      operationId: GetSuppressedDestination
      description: |-
        Retrieves information about a specific email address that's on the suppression list for your account.
      parameters:
      - name: EmailAddress
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/EmailAddress'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v2/email/account:
    get:
      operationId: GetAccount
      description: |-
        Obtain information about the email-sending status and capabilities of your Amazon SES account in the current Amazon Web Services Region.
      parameters: []
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v2/email/deliverability-dashboard/blacklist-report:
    get:
      operationId: GetBlacklistReports
      description: |-
        Retrieve a list of the blacklists that your dedicated IP addresses appear on.
      parameters:
      - name: BlacklistItemNames
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/BlacklistItemNames'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v2/email/dedicated-ips/{Ip}:
    get:
      operationId: GetDedicatedIp
      description: |-
        Get information about a dedicated IP address, including the name of the dedicated IP pool that it's associated with, as well information about the automatic warm-up process for the address.
      parameters:
      - name: Ip
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Ip'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v2/email/dedicated-ips:
    get:
      operationId: GetDedicatedIps
      description: |-
        List the dedicated IP addresses that are associated with your Amazon Web Services account.
      parameters:
      - name: PoolName
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PoolName'
      - name: NextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: PageSize
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxItems'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v2/email/deliverability-dashboard:
    get:
      operationId: GetDeliverabilityDashboardOptions
      description: |-
        Retrieve information about the status of the Deliverability dashboard for your account. When the Deliverability dashboard is enabled, you gain access to reputation, deliverability, and other metrics for the domains that you use to send email. You also gain the ability to perform predictive inbox placement tests.

        When you use the Deliverability dashboard, you pay a monthly subscription charge, in addition to any other fees that you accrue by using Amazon SES and other Amazon Web Services services. For more information about the features and cost of a Deliverability dashboard subscription, see [Amazon SES Pricing](http://aws.amazon.com/ses/pricing/).
      parameters: []
      responses:
        '200': {}
        '400':
          description: |-
            There are too many instances of the specified resource type.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    put:
      operationId: PutDeliverabilityDashboardOption
      description: |-
        Enable or disable the Deliverability dashboard. When you enable the Deliverability dashboard, you gain access to reputation, deliverability, and other metrics for the domains that you use to send email. You also gain the ability to perform predictive inbox placement tests.

        When you use the Deliverability dashboard, you pay a monthly subscription charge, in addition to any other fees that you accrue by using Amazon SES and other Amazon Web Services services. For more information about the features and cost of a Deliverability dashboard subscription, see [Amazon SES Pricing](http://aws.amazon.com/ses/pricing/).
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                DashboardEnabled:
                  $ref: '#/components/schemas/Enabled'
                SubscribedDomains:
                  $ref: '#/components/schemas/DomainDeliverabilityTrackingOptions'
      responses:
        '200': {}
        '400':
          description: |-
            There are too many instances of the specified resource type.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v2/email/deliverability-dashboard/test-reports/{ReportId}:
    get:
      operationId: GetDeliverabilityTestReport
      description: |-
        Retrieve the results of a predictive inbox placement test.
      parameters:
      - name: ReportId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ReportId'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v2/email/deliverability-dashboard/campaigns/{CampaignId}:
    get:
      operationId: GetDomainDeliverabilityCampaign
      description: |-
        Retrieve all the deliverability data for a specific campaign. This data is available for a campaign only if the campaign sent email by using a domain that the Deliverability dashboard is enabled for.
      parameters:
      - name: CampaignId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CampaignId'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v2/email/deliverability-dashboard/statistics-report/{Domain}:
    get:
      operationId: GetDomainStatisticsReport
      description: |-
        Retrieve inbox placement and engagement rates for the domains that you use to send email.
      parameters:
      - name: Domain
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Identity'
      - name: StartDate
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Timestamp'
      - name: EndDate
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Timestamp'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v2/email/identities/{EmailIdentity}/policies:
    get:
      operationId: GetEmailIdentityPolicies
      description: |-
        Returns the requested sending authorization policies for the given identity (an email address or a domain). The policies are returned as a map of policy names to policy contents. You can retrieve a maximum of 20 policies at a time.

        This API is for the identity owner only. If you have not verified the identity, this API will return an error.

        Sending authorization is a feature that enables an identity owner to authorize other senders to use its identities. For information about using sending authorization, see the [Amazon SES Developer Guide](https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html).

        You can execute this operation no more than once per second.
      parameters:
      - name: EmailIdentity
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Identity'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v2/email/export-jobs/{JobId}:
    get:
      operationId: GetExportJob
      description: |-
        Provides information about an export job.
      parameters:
      - name: JobId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/JobId'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v2/email/import-jobs/{JobId}:
    get:
      operationId: GetImportJob
      description: |-
        Provides information about an import job.
      parameters:
      - name: JobId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/JobId'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v2/email/insights/{MessageId}:
    get:
      operationId: GetMessageInsights
      description: |-
        Provides information about a specific message, including the from address, the subject, the recipient address, email tags, as well as events associated with the message.

        You can execute this operation no more than once per second.
      parameters:
      - name: MessageId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/OutboundMessageId'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v2/email/contact-lists/{ContactListName}/contacts/list:
    post:
      operationId: ListContacts
      description: |-
        Lists the contacts present in a specific contact list.
      parameters:
      - name: ContactListName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ContactListName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Filter:
                  $ref: '#/components/schemas/ListContactsFilter'
                PageSize:
                  $ref: '#/components/schemas/MaxItems'
                NextToken:
                  $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v2/email/deliverability-dashboard/test-reports:
    get:
      operationId: ListDeliverabilityTestReports
      description: |-
        Show a list of the predictive inbox placement tests that you've performed, regardless of their statuses. For predictive inbox placement tests that are complete, you can use the `GetDeliverabilityTestReport` operation to view the results.
      parameters:
      - name: NextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: PageSize
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxItems'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v2/email/deliverability-dashboard/domains/{SubscribedDomain}/campaigns:
    get:
      operationId: ListDomainDeliverabilityCampaigns
      description: |-
        Retrieve deliverability data for all the campaigns that used a specific domain to send email during a specified time range. This data is available for a domain only if you enabled the Deliverability dashboard for the domain.
      parameters:
      - name: StartDate
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Timestamp'
      - name: EndDate
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Timestamp'
      - name: SubscribedDomain
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Domain'
      - name: NextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: PageSize
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxItems'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v2/email/list-export-jobs:
    post:
      operationId: ListExportJobs
      description: |-
        Lists all of the export jobs.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                NextToken:
                  $ref: '#/components/schemas/NextToken'
                PageSize:
                  $ref: '#/components/schemas/MaxItems'
                ExportSourceType:
                  $ref: '#/components/schemas/ExportSourceType'
                JobStatus:
                  $ref: '#/components/schemas/JobStatus'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v2/email/import-jobs/list:
    post:
      operationId: ListImportJobs
      description: |-
        Lists all of the import jobs.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ImportDestinationType:
                  $ref: '#/components/schemas/ImportDestinationType'
                NextToken:
                  $ref: '#/components/schemas/NextToken'
                PageSize:
                  $ref: '#/components/schemas/MaxItems'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v2/email/vdm/recommendations:
    post:
      operationId: ListRecommendations
      description: |-
        Lists the recommendations present in your Amazon SES account in the current Amazon Web Services Region.

        You can execute this operation no more than once per second.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Filter:
                  $ref: '#/components/schemas/ListRecommendationsFilter'
                NextToken:
                  $ref: '#/components/schemas/NextToken'
                PageSize:
                  $ref: '#/components/schemas/MaxItems'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v2/email/suppression/addresses:
    get:
      operationId: ListSuppressedDestinations
      description: |-
        Retrieves a list of email addresses that are on the suppression list for your account.
      parameters:
      - name: Reason
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/SuppressionListReasons'
      - name: StartDate
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Timestamp'
      - name: EndDate
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Timestamp'
      - name: NextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: PageSize
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxItems'
      responses:
        '200': {}
        '400':
          description: |-
            The specified request includes an invalid or expired token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidNextTokenException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    put:
      operationId: PutSuppressedDestination
      description: |-
        Adds an email address to the suppression list for your account.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                EmailAddress:
                  $ref: '#/components/schemas/EmailAddress'
                Reason:
                  $ref: '#/components/schemas/SuppressionListReason'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v2/email/tags:
    get:
      operationId: ListTagsForResource
      description: |-
        Retrieve a list of the tags (keys and values) that are associated with a specified resource. A  _tag_ is a label that you optionally define and associate with a resource. Each tag consists of a required  _tag key_ and an optional associated  _tag value_. A tag key is a general label that acts as a category for more specific tag values. A tag value acts as a descriptor within a tag key.
      parameters:
      - name: ResourceArn
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/AmazonResourceName'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    post:
      operationId: TagResource
      description: |-
        Add one or more tags (keys and values) to a specified resource. A _tag_ is a label that you optionally define and associate with a resource. Tags can help you categorize and manage resources in different ways, such as by purpose, owner, environment, or other criteria. A resource can have as many as 50 tags.

        Each tag consists of a required  _tag key_ and an associated  _tag value_ , both of which you define. A tag key is a general label that acts as a category for more specific tag values. A tag value acts as a descriptor within a tag key.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ResourceArn:
                  $ref: '#/components/schemas/AmazonResourceName'
                Tags:
                  $ref: '#/components/schemas/TagList'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            The resource is being modified by another operation or thread.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    delete:
      operationId: UntagResource
      description: |-
        Remove one or more tags (keys and values) from a specified resource.
      parameters:
      - name: ResourceArn
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/AmazonResourceName'
      - name: TagKeys
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/TagKeyList'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            The resource is being modified by another operation or thread.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v2/email/account/dedicated-ips/warmup:
    put:
      operationId: PutAccountDedicatedIpWarmupAttributes
      description: |-
        Enable or disable the automatic warm-up feature for dedicated IP addresses.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AutoWarmupEnabled:
                  $ref: '#/components/schemas/Enabled'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v2/email/account/details:
    post:
      operationId: PutAccountDetails
      description: |-
        Update your Amazon SES account details.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                MailType:
                  $ref: '#/components/schemas/MailType'
                WebsiteURL:
                  $ref: '#/components/schemas/WebsiteURL'
                ContactLanguage:
                  $ref: '#/components/schemas/ContactLanguage'
                UseCaseDescription:
                  $ref: '#/components/schemas/UseCaseDescription'
                AdditionalContactEmailAddresses:
                  $ref: '#/components/schemas/AdditionalContactEmailAddresses'
                ProductionAccessEnabled:
                  $ref: '#/components/schemas/EnabledWrapper'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            If there is already an ongoing account details update under review.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v2/email/account/sending:
    put:
      operationId: PutAccountSendingAttributes
      description: |-
        Enable or disable the ability of your account to send email.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                SendingEnabled:
                  $ref: '#/components/schemas/Enabled'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v2/email/account/suppression:
    put:
      operationId: PutAccountSuppressionAttributes
      description: |-
        Change the settings for the account-level suppression list.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                SuppressedReasons:
                  $ref: '#/components/schemas/SuppressionListReasons'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v2/email/account/vdm:
    put:
      operationId: PutAccountVdmAttributes
      description: |-
        Update your Amazon SES account VDM attributes.

        You can execute this operation no more than once per second.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                VdmAttributes:
                  $ref: '#/components/schemas/VdmAttributes'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v2/email/configuration-sets/{ConfigurationSetName}/archiving-options:
    put:
      operationId: PutConfigurationSetArchivingOptions
      description: |-
        Associate the configuration set with a MailManager archive. When you send email using the `SendEmail` or `SendBulkEmail` operations the message as it will be given to the receiving SMTP server will be archived, along with the recipient information.
      parameters:
      - name: ConfigurationSetName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ConfigurationSetName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ArchiveArn:
                  $ref: '#/components/schemas/ArchiveArn'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v2/email/configuration-sets/{ConfigurationSetName}/delivery-options:
    put:
      operationId: PutConfigurationSetDeliveryOptions
      description: |-
        Associate a configuration set with a dedicated IP pool. You can use dedicated IP pools to create groups of dedicated IP addresses for sending specific types of email.
      parameters:
      - name: ConfigurationSetName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ConfigurationSetName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                TlsPolicy:
                  $ref: '#/components/schemas/TlsPolicy'
                SendingPoolName:
                  $ref: '#/components/schemas/SendingPoolName'
                MaxDeliverySeconds:
                  $ref: '#/components/schemas/MaxDeliverySeconds'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v2/email/configuration-sets/{ConfigurationSetName}/reputation-options:
    put:
      operationId: PutConfigurationSetReputationOptions
      description: |-
        Enable or disable collection of reputation metrics for emails that you send using a particular configuration set in a specific Amazon Web Services Region.
      parameters:
      - name: ConfigurationSetName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ConfigurationSetName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ReputationMetricsEnabled:
                  $ref: '#/components/schemas/Enabled'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v2/email/configuration-sets/{ConfigurationSetName}/sending:
    put:
      operationId: PutConfigurationSetSendingOptions
      description: |-
        Enable or disable email sending for messages that use a particular configuration set in a specific Amazon Web Services Region.
      parameters:
      - name: ConfigurationSetName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ConfigurationSetName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                SendingEnabled:
                  $ref: '#/components/schemas/Enabled'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v2/email/configuration-sets/{ConfigurationSetName}/suppression-options:
    put:
      operationId: PutConfigurationSetSuppressionOptions
      description: |-
        Specify the account suppression list preferences for a configuration set.
      parameters:
      - name: ConfigurationSetName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ConfigurationSetName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                SuppressedReasons:
                  $ref: '#/components/schemas/SuppressionListReasons'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v2/email/configuration-sets/{ConfigurationSetName}/tracking-options:
    put:
      operationId: PutConfigurationSetTrackingOptions
      description: |-
        Specify a custom domain to use for open and click tracking elements in email that you send.
      parameters:
      - name: ConfigurationSetName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ConfigurationSetName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                CustomRedirectDomain:
                  $ref: '#/components/schemas/CustomRedirectDomain'
                HttpsPolicy:
                  $ref: '#/components/schemas/HttpsPolicy'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v2/email/configuration-sets/{ConfigurationSetName}/vdm-options:
    put:
      operationId: PutConfigurationSetVdmOptions
      description: |-
        Specify VDM preferences for email that you send using the configuration set.

        You can execute this operation no more than once per second.
      parameters:
      - name: ConfigurationSetName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ConfigurationSetName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                VdmOptions:
                  $ref: '#/components/schemas/VdmOptions'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v2/email/dedicated-ips/{Ip}/pool:
    put:
      operationId: PutDedicatedIpInPool
      description: |-
        Move a dedicated IP address to an existing dedicated IP pool.

        The dedicated IP address that you specify must already exist, and must be associated with your Amazon Web Services account.

        The dedicated IP pool you specify must already exist. You can create a new pool by using the `CreateDedicatedIpPool` operation.
      parameters:
      - name: Ip
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Ip'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                DestinationPoolName:
                  $ref: '#/components/schemas/PoolName'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v2/email/dedicated-ip-pools/{PoolName}/scaling:
    put:
      operationId: PutDedicatedIpPoolScalingAttributes
      description: |-
        Used to convert a dedicated IP pool to a different scaling mode.

        `MANAGED` pools cannot be converted to `STANDARD` scaling mode.
      parameters:
      - name: PoolName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PoolName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ScalingMode:
                  $ref: '#/components/schemas/ScalingMode'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            The resource is being modified by another operation or thread.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v2/email/dedicated-ips/{Ip}/warmup:
    put:
      operationId: PutDedicatedIpWarmupAttributes
      description: ""
      parameters:
      - name: Ip
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Ip'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                WarmupPercentage:
                  $ref: '#/components/schemas/Percentage100Wrapper'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v2/email/identities/{EmailIdentity}/configuration-set:
    put:
      operationId: PutEmailIdentityConfigurationSetAttributes
      description: |-
        Used to associate a configuration set with an email identity.
      parameters:
      - name: EmailIdentity
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Identity'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ConfigurationSetName:
                  $ref: '#/components/schemas/ConfigurationSetName'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v2/email/identities/{EmailIdentity}/dkim:
    put:
      operationId: PutEmailIdentityDkimAttributes
      description: |-
        Used to enable or disable DKIM authentication for an email identity.
      parameters:
      - name: EmailIdentity
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Identity'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                SigningEnabled:
                  $ref: '#/components/schemas/Enabled'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v1/email/identities/{EmailIdentity}/dkim/signing:
    put:
      operationId: PutEmailIdentityDkimSigningAttributes
      description: |-
        Used to configure or change the DKIM authentication settings for an email domain identity. You can use this operation to do any of the following:

          * Update the signing attributes for an identity that uses Bring Your Own DKIM (BYODKIM).

          * Update the key length that should be used for Easy DKIM.

          * Change from using no DKIM authentication to using Easy DKIM.

          * Change from using no DKIM authentication to using BYODKIM.

          * Change from using Easy DKIM to using BYODKIM.

          * Change from using BYODKIM to using Easy DKIM.
      parameters:
      - name: EmailIdentity
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Identity'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                SigningAttributesOrigin:
                  $ref: '#/components/schemas/DkimSigningAttributesOrigin'
                SigningAttributes:
                  $ref: '#/components/schemas/DkimSigningAttributes'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v2/email/identities/{EmailIdentity}/feedback:
    put:
      operationId: PutEmailIdentityFeedbackAttributes
      description: |-
        Used to enable or disable feedback forwarding for an identity. This setting determines what happens when an identity is used to send an email that results in a bounce or complaint event.

        If the value is `true`, you receive email notifications when bounce or complaint events occur. These notifications are sent to the address that you specified in the `Return-Path` header of the original email.

        You're required to have a method of tracking bounces and complaints. If you haven't set up another mechanism for receiving bounce or complaint notifications (for example, by setting up an event destination), you receive an email notification when these events occur (even if this setting is disabled).
      parameters:
      - name: EmailIdentity
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Identity'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                EmailForwardingEnabled:
                  $ref: '#/components/schemas/Enabled'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v2/email/identities/{EmailIdentity}/mail-from:
    put:
      operationId: PutEmailIdentityMailFromAttributes
      description: |-
        Used to enable or disable the custom Mail-From domain configuration for an email identity.
      parameters:
      - name: EmailIdentity
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Identity'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                MailFromDomain:
                  $ref: '#/components/schemas/MailFromDomainName'
                BehaviorOnMxFailure:
                  $ref: '#/components/schemas/BehaviorOnMxFailure'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v2/email/outbound-bulk-emails:
    post:
      operationId: SendBulkEmail
      description: |-
        Composes an email message to multiple destinations.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                FromEmailAddress:
                  $ref: '#/components/schemas/EmailAddress'
                FromEmailAddressIdentityArn:
                  $ref: '#/components/schemas/AmazonResourceName'
                ReplyToAddresses:
                  $ref: '#/components/schemas/EmailAddressList'
                FeedbackForwardingEmailAddress:
                  $ref: '#/components/schemas/EmailAddress'
                FeedbackForwardingEmailAddressIdentityArn:
                  $ref: '#/components/schemas/AmazonResourceName'
                DefaultEmailTags:
                  $ref: '#/components/schemas/MessageTagList'
                DefaultContent:
                  $ref: '#/components/schemas/BulkEmailContent'
                BulkEmailEntries:
                  $ref: '#/components/schemas/BulkEmailEntryList'
                ConfigurationSetName:
                  $ref: '#/components/schemas/ConfigurationSetName'
                EndpointId:
                  $ref: '#/components/schemas/EndpointId'
      responses:
        '200': {}
        '400':
          description: |-
            The message can't be sent because the account's ability to send email is currently paused.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendingPausedException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v2/email/outbound-custom-verification-emails:
    post:
      operationId: SendCustomVerificationEmail
      description: |-
        Adds an email address to the list of identities for your Amazon SES account in the current Amazon Web Services Region and attempts to verify it. As a result of executing this operation, a customized verification email is sent to the specified address.

        To use this operation, you must first create a custom verification email template. For more information about creating and using custom verification email templates, see [Using custom verification email templates](https://docs.aws.amazon.com/ses/latest/dg/creating-identities.html#send-email-verify-address-custom) in the _Amazon SES Developer Guide_.

        You can execute this operation no more than once per second.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                EmailAddress:
                  $ref: '#/components/schemas/EmailAddress'
                TemplateName:
                  $ref: '#/components/schemas/EmailTemplateName'
                ConfigurationSetName:
                  $ref: '#/components/schemas/ConfigurationSetName'
      responses:
        '200': {}
        '400':
          description: |-
            The message can't be sent because the account's ability to send email is currently paused.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendingPausedException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v2/email/outbound-emails:
    post:
      operationId: SendEmail
      description: |-
        Sends an email message. You can use the Amazon SES API v2 to send the following types of messages:

          * **Simple** – A standard email message. When you create this type of message, you specify the sender, the recipient, and the message body, and Amazon SES assembles the message for you.

          * **Raw** – A raw, MIME-formatted email message. When you send this type of email, you have to specify all of the message headers, as well as the message body. You can use this message type to send messages that contain attachments. The message that you specify has to be a valid MIME message.

          * **Templated** – A message that contains personalization tags. When you send this type of email, Amazon SES API v2 automatically replaces the tags with values that you specify.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                FromEmailAddress:
                  $ref: '#/components/schemas/EmailAddress'
                FromEmailAddressIdentityArn:
                  $ref: '#/components/schemas/AmazonResourceName'
                Destination:
                  $ref: '#/components/schemas/Destination'
                ReplyToAddresses:
                  $ref: '#/components/schemas/EmailAddressList'
                FeedbackForwardingEmailAddress:
                  $ref: '#/components/schemas/EmailAddress'
                FeedbackForwardingEmailAddressIdentityArn:
                  $ref: '#/components/schemas/AmazonResourceName'
                Content:
                  $ref: '#/components/schemas/EmailContent'
                EmailTags:
                  $ref: '#/components/schemas/MessageTagList'
                ConfigurationSetName:
                  $ref: '#/components/schemas/ConfigurationSetName'
                EndpointId:
                  $ref: '#/components/schemas/EndpointId'
                ListManagementOptions:
                  $ref: '#/components/schemas/ListManagementOptions'
      responses:
        '200': {}
        '400':
          description: |-
            The message can't be sent because the account's ability to send email is currently paused.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendingPausedException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v2/email/templates/{TemplateName}/render:
    post:
      operationId: TestRenderEmailTemplate
      description: |-
        Creates a preview of the MIME content of an email when provided with a template and a set of replacement data.

        You can execute this operation no more than once per second.
      parameters:
      - name: TemplateName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/EmailTemplateName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                TemplateData:
                  $ref: '#/components/schemas/EmailTemplateData'
      responses:
        '200': {}
        '400':
          description: |-
            The input you provided is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '404':
          description: |-
            The resource you attempted to access doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            Too many requests have been made to the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
components:
  schemas:
    AccountDetails:
      type: object
      properties:
        MailType:
          allOf:
          - $ref: '#/components/schemas/MailType'
          description: "The type of email your account is sending. The mail type can\
            \ be one of the following:\n\n  * `MARKETING` – Most of your sending traffic\
            \ is to keep your customers informed of your latest offering.\n\n  * `TRANSACTIONAL`\
            \ – Most of your sending traffic is to communicate during a transaction\
            \ with a customer."
        WebsiteURL:
          allOf:
          - $ref: '#/components/schemas/WebsiteURL'
          description: The URL of your website. This information helps us better understand
            the type of content that you plan to send.
        ContactLanguage:
          allOf:
          - $ref: '#/components/schemas/ContactLanguage'
          description: The language you would prefer for the case. The contact language
            can be one of `ENGLISH` or `JAPANESE`.
        UseCaseDescription:
          allOf:
          - $ref: '#/components/schemas/UseCaseDescription'
          description: A description of the types of email that you plan to send.
        AdditionalContactEmailAddresses:
          allOf:
          - $ref: '#/components/schemas/AdditionalContactEmailAddresses'
          description: Additional email addresses where updates are sent about your
            account review process.
        ReviewDetails:
          allOf:
          - $ref: '#/components/schemas/ReviewDetails'
          description: Information about the review of the latest details you submitted.
      description: An object that contains information about your account details.
    AccountSuspendedException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: The message can't be sent because the account's ability to send
        email has been permanently restricted.
    AdditionalContactEmailAddress:
      type: string
      pattern: ^(.+)@(.+)$
      minLength: 6
      maxLength: 254
    AdditionalContactEmailAddresses:
      type: array
      items:
        $ref: '#/components/schemas/AdditionalContactEmailAddress'
      x-sensitive: true
    AdminEmail:
      type: string
    AlreadyExistsException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: The resource specified in your request already exists.
    AmazonResourceName:
      type: string
    ArchiveArn:
      type: string
      pattern: ^arn:(aws|aws-[a-z-]+):ses:[a-z]{2}-[a-z-]+-[0-9]:[0-9]{1,20}:mailmanager-archive/a-[a-z0-9]{24,62}$
      minLength: 20
      maxLength: 1011
    ArchivingOptions:
      type: object
      properties:
        ArchiveArn:
          allOf:
          - $ref: '#/components/schemas/ArchiveArn'
          description: The Amazon Resource Name (ARN) of the MailManager archive where
            the Amazon SES API v2 will archive sent emails.
      description: Used to associate a configuration set with a MailManager archive.
    Attachment:
      type: object
      properties:
        RawContent:
          allOf:
          - $ref: '#/components/schemas/RawAttachmentData'
          description: The raw data of the attachment. It needs to be base64-encoded
            if you are accessing Amazon SES directly through the HTTPS interface.
            If you are accessing Amazon SES using an Amazon Web Services SDK, the
            SDK takes care of the base 64-encoding for you.
        ContentDisposition:
          allOf:
          - $ref: '#/components/schemas/AttachmentContentDisposition'
          description: 'A standard descriptor indicating how the attachment should
            be rendered in the email. Supported values: `ATTACHMENT` or `INLINE`.'
        FileName:
          allOf:
          - $ref: '#/components/schemas/AttachmentFileName'
          description: The file name for the attachment as it will appear in the email.
            Amazon SES restricts certain file extensions. To ensure attachments are
            accepted, check the [Unsupported attachment types](https://docs.aws.amazon.com/ses/latest/dg/mime-types.html)
            in the Amazon SES Developer Guide.
        ContentDescription:
          allOf:
          - $ref: '#/components/schemas/AttachmentContentDescription'
          description: A brief description of the attachment content.
        ContentId:
          allOf:
          - $ref: '#/components/schemas/AttachmentContentId'
          description: Unique identifier for the attachment, used for referencing
            attachments with INLINE disposition in HTML content.
        ContentTransferEncoding:
          allOf:
          - $ref: '#/components/schemas/AttachmentContentTransferEncoding'
          description: 'Specifies how the attachment is encoded. Supported values:
            `BASE64`, `QUOTED_PRINTABLE`, `SEVEN_BIT`.'
        ContentType:
          allOf:
          - $ref: '#/components/schemas/AttachmentContentType'
          description: 'The MIME type of the attachment.


            Example: `application/pdf`, `image/jpeg`'
      required:
      - RawContent
      - FileName
      description: Contains metadata and attachment raw content.
    AttachmentContentDescription:
      type: string
      minLength: 0
      maxLength: 1000
    AttachmentContentDisposition:
      type: string
      enum:
      - ATTACHMENT
      - INLINE
    AttachmentContentId:
      type: string
      minLength: 1
      maxLength: 78
    AttachmentContentTransferEncoding:
      type: string
      enum:
      - BASE64
      - QUOTED_PRINTABLE
      - SEVEN_BIT
    AttachmentContentType:
      type: string
      minLength: 1
      maxLength: 78
    AttachmentFileName:
      type: string
      minLength: 0
      maxLength: 255
    AttachmentList:
      type: array
      items:
        $ref: '#/components/schemas/Attachment'
    AttributesData:
      type: string
    BadRequestException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: The input you provided is invalid.
    BatchGetMetricDataQueries:
      type: array
      items:
        $ref: '#/components/schemas/BatchGetMetricDataQuery'
    BatchGetMetricDataQuery:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/QueryIdentifier'
          description: The query identifier.
        Namespace:
          allOf:
          - $ref: '#/components/schemas/MetricNamespace'
          description: The query namespace - e.g. `VDM`
        Metric:
          allOf:
          - $ref: '#/components/schemas/Metric'
          description: "The queried metric. This can be one of the following:\n\n\
            \  * `SEND` – Emails sent eligible for tracking in the VDM dashboard.\
            \ This excludes emails sent to the mailbox simulator and emails addressed\
            \ to more than one recipient.\n\n  * `COMPLAINT` – Complaints received\
            \ for your account. This excludes complaints from the mailbox simulator,\
            \ those originating from your account-level suppression list (if enabled),\
            \ and those for emails addressed to more than one recipient\n\n  * `PERMANENT_BOUNCE`\
            \ – Permanent bounces - i.e. feedback received for emails sent to non-existent\
            \ mailboxes. Excludes bounces from the mailbox simulator, those originating\
            \ from your account-level suppression list (if enabled), and those for\
            \ emails addressed to more than one recipient.\n\n  * `TRANSIENT_BOUNCE`\
            \ – Transient bounces - i.e. feedback received for delivery failures excluding\
            \ issues with non-existent mailboxes. Excludes bounces from the mailbox\
            \ simulator, and those for emails addressed to more than one recipient.\n\
            \n  * `OPEN` – Unique open events for emails including open trackers.\
            \ Excludes opens for emails addressed to more than one recipient.\n\n\
            \  * `CLICK` – Unique click events for emails including wrapped links.\
            \ Excludes clicks for emails addressed to more than one recipient.\n\n\
            \  * `DELIVERY` – Successful deliveries for email sending attempts. Excludes\
            \ deliveries to the mailbox simulator and for emails addressed to more\
            \ than one recipient.\n\n  * `DELIVERY_OPEN` – Successful deliveries for\
            \ email sending attempts. Excludes deliveries to the mailbox simulator,\
            \ for emails addressed to more than one recipient, and emails without\
            \ open trackers.\n\n  * `DELIVERY_CLICK` – Successful deliveries for email\
            \ sending attempts. Excludes deliveries to the mailbox simulator, for\
            \ emails addressed to more than one recipient, and emails without click\
            \ trackers.\n\n  * `DELIVERY_COMPLAINT` – Successful deliveries for email\
            \ sending attempts. Excludes deliveries to the mailbox simulator, for\
            \ emails addressed to more than one recipient, and emails addressed to\
            \ recipients hosted by ISPs with which Amazon SES does not have a feedback\
            \ loop agreement."
        Dimensions:
          allOf:
          - $ref: '#/components/schemas/Dimensions'
          description: An object that contains mapping between `MetricDimensionName`
            and `MetricDimensionValue` to filter metrics by.
        StartDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: Represents the start date for the query interval.
        EndDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: Represents the end date for the query interval.
      required:
      - Id
      - Namespace
      - Metric
      - StartDate
      - EndDate
      description: Represents a single metric data query to include in a batch.
    BatchGetMetricDataRequest:
      type: object
      properties:
        Queries:
          allOf:
          - $ref: '#/components/schemas/BatchGetMetricDataQueries'
          description: A list of queries for metrics to be retrieved.
      required:
      - Queries
      description: Represents a request to retrieve a batch of metric data.
    BatchGetMetricDataResponse:
      type: object
      properties:
        Results:
          allOf:
          - $ref: '#/components/schemas/MetricDataResultList'
          description: A list of successfully retrieved `MetricDataResult`.
        Errors:
          allOf:
          - $ref: '#/components/schemas/MetricDataErrorList'
          description: A list of `MetricDataError` encountered while processing your
            metric data batch request.
      description: Represents the result of processing your metric data batch request
    BehaviorOnMxFailure:
      type: string
      enum:
      - USE_DEFAULT_VALUE
      - REJECT_MESSAGE
      description: "<p>The action to take if the required MX record can't be found\
        \ when you send an email.\n            When you set this value to <code>UseDefaultValue</code>,\
        \ the mail is sent using\n                <i>amazonses.com</i> as the MAIL\
        \ FROM domain. When you set this value\n            to <code>RejectMessage</code>,\
        \ the Amazon SES API v2 returns a\n                <code>MailFromDomainNotVerified</code>\
        \ error, and doesn't attempt to deliver the\n            email.</p>\n    \
        \     <p>These behaviors are taken when the custom MAIL FROM domain configuration\
        \ is in the\n                <code>Pending</code>, <code>Failed</code>, and\
        \ <code>TemporaryFailure</code>\n            states.</p>"
    BlacklistEntries:
      type: array
      items:
        $ref: '#/components/schemas/BlacklistEntry'
    BlacklistEntry:
      type: object
      properties:
        RblName:
          allOf:
          - $ref: '#/components/schemas/RblName'
          description: The name of the blacklist that the IP address appears on.
        ListingTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time when the blacklisting event occurred.
        Description:
          allOf:
          - $ref: '#/components/schemas/BlacklistingDescription'
          description: Additional information about the blacklisting event, as provided
            by the blacklist maintainer.
      description: An object that contains information about a blacklisting event
        that impacts one of the dedicated IP addresses that is associated with your
        account.
    BlacklistItemName:
      type: string
    BlacklistItemNames:
      type: array
      items:
        $ref: '#/components/schemas/BlacklistItemName'
    BlacklistReport:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/BlacklistEntries'
    BlacklistingDescription:
      type: string
    Body:
      type: object
      properties:
        Text:
          allOf:
          - $ref: '#/components/schemas/Content'
          description: An object that represents the version of the message that is
            displayed in email clients that don't support HTML, or clients where the
            recipient has disabled HTML rendering.
        Html:
          allOf:
          - $ref: '#/components/schemas/Content'
          description: An object that represents the version of the message that is
            displayed in email clients that support HTML. HTML messages can include
            formatted text, hyperlinks, images, and more.
      description: Represents the body of the email message.
    Bounce:
      type: object
      properties:
        BounceType:
          allOf:
          - $ref: '#/components/schemas/BounceType'
          description: The type of the bounce, as determined by SES. Can be one of
            `UNDETERMINED`, `TRANSIENT`, or `PERMANENT`
        BounceSubType:
          allOf:
          - $ref: '#/components/schemas/BounceSubType'
          description: The subtype of the bounce, as determined by SES.
        DiagnosticCode:
          allOf:
          - $ref: '#/components/schemas/DiagnosticCode'
          description: The status code issued by the reporting Message Transfer Authority
            (MTA). This field only appears if a delivery status notification (DSN)
            was attached to the bounce and the `Diagnostic-Code` was provided in the
            DSN.
      description: Information about a `Bounce` event.
    BounceSubType:
      type: string
    BounceType:
      type: string
      enum:
      - UNDETERMINED
      - TRANSIENT
      - PERMANENT
    BulkEmailContent:
      type: object
      properties:
        Template:
          allOf:
          - $ref: '#/components/schemas/Template'
          description: The template to use for the bulk email message.
      description: An object that contains the body of the message. You can specify
        a template message.
    BulkEmailEntry:
      type: object
      properties:
        Destination:
          allOf:
          - $ref: '#/components/schemas/Destination'
          description: 'Represents the destination of the message, consisting of To:,
            CC:, and BCC: fields.


            Amazon SES does not support the SMTPUTF8 extension, as described in [RFC6531](https://tools.ietf.org/html/rfc6531).
            For this reason, the local part of a destination email address (the part
            of the email address that precedes the @ sign) may only contain [7-bit
            ASCII characters](https://en.wikipedia.org/wiki/Email_address#Local-part).
            If the domain part of an address (the part after the @ sign) contains
            non-ASCII characters, they must be encoded using Punycode, as described
            in [RFC3492](https://tools.ietf.org/html/rfc3492.html).'
        ReplacementTags:
          allOf:
          - $ref: '#/components/schemas/MessageTagList'
          description: A list of tags, in the form of name/value pairs, to apply to
            an email that you send using the `SendBulkTemplatedEmail` operation. Tags
            correspond to characteristics of the email that you define, so that you
            can publish email sending events.
        ReplacementEmailContent:
          allOf:
          - $ref: '#/components/schemas/ReplacementEmailContent'
          description: The `ReplacementEmailContent` associated with a `BulkEmailEntry`.
        ReplacementHeaders:
          allOf:
          - $ref: '#/components/schemas/MessageHeaderList'
          description: "The list of message headers associated with the `BulkEmailEntry`\
            \ data type.\n\n  * Headers Not Present in `BulkEmailEntry`: If a header\
            \ is specified in [ `Template` ](https://docs.aws.amazon.com/ses/latest/APIReference-V2/API_Template.html)\
            \ but not in `BulkEmailEntry`, the header from `Template` will be added\
            \ to the outgoing email.\n\n  * Headers Present in `BulkEmailEntry`: If\
            \ a header is specified in `BulkEmailEntry`, it takes precedence over\
            \ any header of the same name specified in [ `Template` ](https://docs.aws.amazon.com/ses/latest/APIReference-V2/API_Template.html):\n\
            \n    * If the header is also defined within `Template`, the value from\
            \ `BulkEmailEntry` will replace the header's value in the email.\n\n \
            \   * If the header is not defined within `Template`, it will simply be\
            \ added to the email as specified in `BulkEmailEntry`."
      required:
      - Destination
    BulkEmailEntryList:
      type: array
      items:
        $ref: '#/components/schemas/BulkEmailEntry'
      description: <p>A list of <code>BulkEmailEntry</code> objects.</p>
    BulkEmailEntryResult:
      type: object
      properties:
        Status:
          allOf:
          - $ref: '#/components/schemas/BulkEmailStatus'
          description: "The status of a message sent using the `SendBulkTemplatedEmail`\
            \ operation.\n\nPossible values for this parameter include:\n\n  * SUCCESS:\
            \ Amazon SES accepted the message, and will attempt to deliver it to the\
            \ recipients.\n\n  * MESSAGE_REJECTED: The message was rejected because\
            \ it contained a virus.\n\n  * MAIL_FROM_DOMAIN_NOT_VERIFIED: The sender's\
            \ email address or domain was not verified.\n\n  * CONFIGURATION_SET_DOES_NOT_EXIST:\
            \ The configuration set you specified does not exist.\n\n  * TEMPLATE_DOES_NOT_EXIST:\
            \ The template you specified does not exist.\n\n  * ACCOUNT_SUSPENDED:\
            \ Your account has been shut down because of issues related to your email\
            \ sending practices.\n\n  * ACCOUNT_THROTTLED: The number of emails you\
            \ can send has been reduced because your account has exceeded its allocated\
            \ sending limit.\n\n  * ACCOUNT_DAILY_QUOTA_EXCEEDED: You have reached\
            \ or exceeded the maximum number of emails you can send from your account\
            \ in a 24-hour period.\n\n  * INVALID_SENDING_POOL_NAME: The configuration\
            \ set you specified refers to an IP pool that does not exist.\n\n  * ACCOUNT_SENDING_PAUSED:\
            \ Email sending for the Amazon SES account was disabled using the [UpdateAccountSendingEnabled](https://docs.aws.amazon.com/ses/latest/APIReference/API_UpdateAccountSendingEnabled.html)\
            \ operation.\n\n  * CONFIGURATION_SET_SENDING_PAUSED: Email sending for\
            \ this configuration set was disabled using the [UpdateConfigurationSetSendingEnabled](https://docs.aws.amazon.com/ses/latest/APIReference/API_UpdateConfigurationSetSendingEnabled.html)\
            \ operation.\n\n  * INVALID_PARAMETER_VALUE: One or more of the parameters\
            \ you specified when calling this operation was invalid. See the error\
            \ message for additional information.\n\n  * TRANSIENT_FAILURE: Amazon\
            \ SES was unable to process your request because of a temporary issue.\n\
            \n  * FAILED: Amazon SES was unable to process your request. See the error\
            \ message for additional information."
        Error:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage'
          description: A description of an error that prevented a message being sent
            using the `SendBulkTemplatedEmail` operation.
        MessageId:
          allOf:
          - $ref: '#/components/schemas/OutboundMessageId'
          description: The unique message identifier returned from the `SendBulkTemplatedEmail`
            operation.
      description: The result of the `SendBulkEmail` operation of each specified `BulkEmailEntry`.
    BulkEmailEntryResultList:
      type: array
      items:
        $ref: '#/components/schemas/BulkEmailEntryResult'
      description: <p>A list of <code>BulkMailEntry</code> objects.</p>
    BulkEmailStatus:
      type: string
      enum:
      - SUCCESS
      - MESSAGE_REJECTED
      - MAIL_FROM_DOMAIN_NOT_VERIFIED
      - CONFIGURATION_SET_NOT_FOUND
      - TEMPLATE_NOT_FOUND
      - ACCOUNT_SUSPENDED
      - ACCOUNT_THROTTLED
      - ACCOUNT_DAILY_QUOTA_EXCEEDED
      - INVALID_SENDING_POOL_NAME
      - ACCOUNT_SENDING_PAUSED
      - CONFIGURATION_SET_SENDING_PAUSED
      - INVALID_PARAMETER
      - TRANSIENT_FAILURE
      - FAILED
    CampaignId:
      type: string
    CancelExportJobRequest:
      type: object
      properties:
        JobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          description: The export job ID.
      required:
      - JobId
      description: Represents a request to cancel an export job using the export job
        ID.
    CancelExportJobResponse:
      type: object
      properties: {}
      description: An HTTP 200 response if the request succeeds, or an error message
        if the request fails.
    CaseId:
      type: string
    Charset:
      type: string
    CloudWatchDestination:
      type: object
      properties:
        DimensionConfigurations:
          allOf:
          - $ref: '#/components/schemas/CloudWatchDimensionConfigurations'
          description: An array of objects that define the dimensions to use when
            you send email events to Amazon CloudWatch.
      required:
      - DimensionConfigurations
      description: An object that defines an Amazon CloudWatch destination for email
        events. You can use Amazon CloudWatch to monitor and gain insights on your
        email sending metrics.
    CloudWatchDimensionConfiguration:
      type: object
      properties:
        DimensionName:
          allOf:
          - $ref: '#/components/schemas/DimensionName'
          description: "The name of an Amazon CloudWatch dimension associated with\
            \ an email sending metric. The name has to meet the following criteria:\n\
            \n  * It can only contain ASCII letters (a–z, A–Z), numbers (0–9), underscores\
            \ (_), or dashes (-).\n\n  * It can contain no more than 256 characters."
        DimensionValueSource:
          allOf:
          - $ref: '#/components/schemas/DimensionValueSource'
          description: The location where the Amazon SES API v2 finds the value of
            a dimension to publish to Amazon CloudWatch. To use the message tags that
            you specify using an `X-SES-MESSAGE-TAGS` header or a parameter to the
            `SendEmail` or `SendRawEmail` API, choose `messageTag`. To use your own
            email headers, choose `emailHeader`. To use link tags, choose `linkTags`.
        DefaultDimensionValue:
          allOf:
          - $ref: '#/components/schemas/DefaultDimensionValue'
          description: "The default value of the dimension that is published to Amazon\
            \ CloudWatch if you don't provide the value of the dimension when you\
            \ send an email. This value has to meet the following criteria:\n\n  *\
            \ Can only contain ASCII letters (a–z, A–Z), numbers (0–9), underscores\
            \ (_), or dashes (-), at signs (@), and periods (.).\n\n  * It can contain\
            \ no more than 256 characters."
      required:
      - DimensionName
      - DimensionValueSource
      - DefaultDimensionValue
      description: An object that defines the dimension configuration to use when
        you send email events to Amazon CloudWatch.
    CloudWatchDimensionConfigurations:
      type: array
      items:
        $ref: '#/components/schemas/CloudWatchDimensionConfiguration'
    Complaint:
      type: object
      properties:
        ComplaintSubType:
          allOf:
          - $ref: '#/components/schemas/ComplaintSubType'
          description: Can either be `null` or `OnAccountSuppressionList`. If the
            value is `OnAccountSuppressionList`, SES accepted the message, but didn't
            attempt to send it because it was on the account-level suppression list.
        ComplaintFeedbackType:
          allOf:
          - $ref: '#/components/schemas/ComplaintFeedbackType'
          description: The value of the `Feedback-Type` field from the feedback report
            received from the ISP.
      description: Information about a `Complaint` event.
    ComplaintFeedbackType:
      type: string
    ComplaintSubType:
      type: string
    ConcurrentModificationException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: The resource is being modified by another operation or thread.
    ConfigurationSetName:
      type: string
    ConfigurationSetNameList:
      type: array
      items:
        $ref: '#/components/schemas/ConfigurationSetName'
    ConflictException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: If there is already an ongoing account details update under review.
    Contact:
      type: object
      properties:
        EmailAddress:
          allOf:
          - $ref: '#/components/schemas/EmailAddress'
          description: The contact's email address.
        TopicPreferences:
          allOf:
          - $ref: '#/components/schemas/TopicPreferenceList'
          description: The contact's preference for being opted-in to or opted-out
            of a topic.
        TopicDefaultPreferences:
          allOf:
          - $ref: '#/components/schemas/TopicPreferenceList'
          description: The default topic preferences applied to the contact.
        UnsubscribeAll:
          allOf:
          - $ref: '#/components/schemas/UnsubscribeAll'
          description: A boolean value status noting if the contact is unsubscribed
            from all contact list topics.
        LastUpdatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: A timestamp noting the last time the contact's information
            was updated.
      description: A contact is the end-user who is receiving the email.
    ContactLanguage:
      type: string
      enum:
      - EN
      - JA
    ContactList:
      type: object
      properties:
        ContactListName:
          allOf:
          - $ref: '#/components/schemas/ContactListName'
          description: The name of the contact list.
        LastUpdatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: A timestamp noting the last time the contact list was updated.
      description: A list that contains contacts that have subscribed to a particular
        topic or topics.
    ContactListDestination:
      type: object
      properties:
        ContactListName:
          allOf:
          - $ref: '#/components/schemas/ContactListName'
          description: The name of the contact list.
        ContactListImportAction:
          allOf:
          - $ref: '#/components/schemas/ContactListImportAction'
          description: ">The type of action to perform on the addresses. The following\
            \ are the possible values:\n\n  * PUT: add the addresses to the contact\
            \ list. If the record already exists, it will override it with the new\
            \ value.\n\n  * DELETE: remove the addresses from the contact list."
      required:
      - ContactListName
      - ContactListImportAction
      description: An object that contains details about the action of a contact list.
    ContactListImportAction:
      type: string
      enum:
      - DELETE
      - PUT
    ContactListName:
      type: string
    Content:
      type: object
      properties:
        Data:
          allOf:
          - $ref: '#/components/schemas/MessageData'
          description: The content of the message itself.
        Charset:
          allOf:
          - $ref: '#/components/schemas/Charset'
          description: The character set for the content. Because of the constraints
            of the SMTP protocol, Amazon SES uses 7-bit ASCII by default. If the text
            includes characters outside of the ASCII range, you have to specify a
            character set. For example, you could specify `UTF-8`, `ISO-8859-1`, or
            `Shift_JIS`.
      required:
      - Data
      description: An object that represents the content of the email, and optionally
        a character set specification.
    Counter:
      type: integer
      format: int64
      default: 0
    CreateConfigurationSetEventDestinationRequest:
      type: object
      properties:
        ConfigurationSetName:
          allOf:
          - $ref: '#/components/schemas/ConfigurationSetName'
          description: The name of the configuration set .
        EventDestinationName:
          allOf:
          - $ref: '#/components/schemas/EventDestinationName'
          description: A name that identifies the event destination within the configuration
            set.
        EventDestination:
          allOf:
          - $ref: '#/components/schemas/EventDestinationDefinition'
          description: An object that defines the event destination.
      required:
      - ConfigurationSetName
      - EventDestinationName
      - EventDestination
      description: A request to add an event destination to a configuration set.
    CreateConfigurationSetEventDestinationResponse:
      type: object
      properties: {}
      description: An HTTP 200 response if the request succeeds, or an error message
        if the request fails.
    CreateConfigurationSetRequest:
      type: object
      properties:
        ConfigurationSetName:
          allOf:
          - $ref: '#/components/schemas/ConfigurationSetName'
          description: The name of the configuration set. The name can contain up
            to 64 alphanumeric characters, including letters, numbers, hyphens (-)
            and underscores (_) only.
        TrackingOptions:
          allOf:
          - $ref: '#/components/schemas/TrackingOptions'
          description: An object that defines the open and click tracking options
            for emails that you send using the configuration set.
        DeliveryOptions:
          allOf:
          - $ref: '#/components/schemas/DeliveryOptions'
          description: An object that defines the dedicated IP pool that is used to
            send emails that you send using the configuration set.
        ReputationOptions:
          allOf:
          - $ref: '#/components/schemas/ReputationOptions'
          description: An object that defines whether or not Amazon SES collects reputation
            metrics for the emails that you send that use the configuration set.
        SendingOptions:
          allOf:
          - $ref: '#/components/schemas/SendingOptions'
          description: An object that defines whether or not Amazon SES can send email
            that you send using the configuration set.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: An array of objects that define the tags (keys and values)
            to associate with the configuration set.
        SuppressionOptions:
          $ref: '#/components/schemas/SuppressionOptions'
        VdmOptions:
          allOf:
          - $ref: '#/components/schemas/VdmOptions'
          description: An object that defines the VDM options for emails that you
            send using the configuration set.
        ArchivingOptions:
          allOf:
          - $ref: '#/components/schemas/ArchivingOptions'
          description: An object that defines the MailManager archiving options for
            emails that you send using the configuration set.
      required:
      - ConfigurationSetName
      description: A request to create a configuration set.
    CreateConfigurationSetResponse:
      type: object
      properties: {}
      description: An HTTP 200 response if the request succeeds, or an error message
        if the request fails.
    CreateContactListRequest:
      type: object
      properties:
        ContactListName:
          allOf:
          - $ref: '#/components/schemas/ContactListName'
          description: The name of the contact list.
        Topics:
          allOf:
          - $ref: '#/components/schemas/Topics'
          description: An interest group, theme, or label within a list. A contact
            list can have multiple topics.
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: A description of what the contact list is about.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: The tags associated with a contact list.
      required:
      - ContactListName
    CreateContactListResponse:
      type: object
      properties: {}
    CreateContactRequest:
      type: object
      properties:
        ContactListName:
          allOf:
          - $ref: '#/components/schemas/ContactListName'
          description: The name of the contact list to which the contact should be
            added.
        EmailAddress:
          allOf:
          - $ref: '#/components/schemas/EmailAddress'
          description: The contact's email address.
        TopicPreferences:
          allOf:
          - $ref: '#/components/schemas/TopicPreferenceList'
          description: The contact's preferences for being opted-in to or opted-out
            of topics.
        UnsubscribeAll:
          allOf:
          - $ref: '#/components/schemas/UnsubscribeAll'
          description: A boolean value status noting if the contact is unsubscribed
            from all contact list topics.
        AttributesData:
          allOf:
          - $ref: '#/components/schemas/AttributesData'
          description: The attribute data attached to a contact.
      required:
      - ContactListName
      - EmailAddress
    CreateContactResponse:
      type: object
      properties: {}
    CreateCustomVerificationEmailTemplateRequest:
      type: object
      properties:
        TemplateName:
          allOf:
          - $ref: '#/components/schemas/EmailTemplateName'
          description: The name of the custom verification email template.
        FromEmailAddress:
          allOf:
          - $ref: '#/components/schemas/EmailAddress'
          description: The email address that the custom verification email is sent
            from.
        TemplateSubject:
          allOf:
          - $ref: '#/components/schemas/EmailTemplateSubject'
          description: The subject line of the custom verification email.
        TemplateContent:
          allOf:
          - $ref: '#/components/schemas/TemplateContent'
          description: The content of the custom verification email. The total size
            of the email must be less than 10 MB. The message body may contain HTML,
            with some limitations. For more information, see [Custom verification
            email frequently asked questions](https://docs.aws.amazon.com/ses/latest/dg/creating-identities.html#send-email-verify-address-custom-faq)
            in the _Amazon SES Developer Guide_.
        SuccessRedirectionURL:
          allOf:
          - $ref: '#/components/schemas/SuccessRedirectionURL'
          description: The URL that the recipient of the verification email is sent
            to if his or her address is successfully verified.
        FailureRedirectionURL:
          allOf:
          - $ref: '#/components/schemas/FailureRedirectionURL'
          description: The URL that the recipient of the verification email is sent
            to if his or her address is not successfully verified.
      required:
      - TemplateName
      - FromEmailAddress
      - TemplateSubject
      - TemplateContent
      - SuccessRedirectionURL
      - FailureRedirectionURL
      description: Represents a request to create a custom verification email template.
    CreateCustomVerificationEmailTemplateResponse:
      type: object
      properties: {}
      description: If the action is successful, the service sends back an HTTP 200
        response with an empty HTTP body.
    CreateDedicatedIpPoolRequest:
      type: object
      properties:
        PoolName:
          allOf:
          - $ref: '#/components/schemas/PoolName'
          description: The name of the dedicated IP pool.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: An object that defines the tags (keys and values) that you
            want to associate with the pool.
        ScalingMode:
          allOf:
          - $ref: '#/components/schemas/ScalingMode'
          description: The type of scaling mode.
      required:
      - PoolName
      description: A request to create a new dedicated IP pool.
    CreateDedicatedIpPoolResponse:
      type: object
      properties: {}
      description: An HTTP 200 response if the request succeeds, or an error message
        if the request fails.
    CreateDeliverabilityTestReportRequest:
      type: object
      properties:
        ReportName:
          allOf:
          - $ref: '#/components/schemas/ReportName'
          description: A unique name that helps you to identify the predictive inbox
            placement test when you retrieve the results.
        FromEmailAddress:
          allOf:
          - $ref: '#/components/schemas/EmailAddress'
          description: The email address that the predictive inbox placement test
            email was sent from.
        Content:
          allOf:
          - $ref: '#/components/schemas/EmailContent'
          description: The HTML body of the message that you sent when you performed
            the predictive inbox placement test.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: An array of objects that define the tags (keys and values)
            that you want to associate with the predictive inbox placement test.
      required:
      - FromEmailAddress
      - Content
      description: A request to perform a predictive inbox placement test. Predictive
        inbox placement tests can help you predict how your messages will be handled
        by various email providers around the world. When you perform a predictive
        inbox placement test, you provide a sample message that contains the content
        that you plan to send to your customers. We send that message to special email
        addresses spread across several major email providers around the world. The
        test takes about 24 hours to complete. When the test is complete, you can
        use the `GetDeliverabilityTestReport` operation to view the results of the
        test.
    CreateDeliverabilityTestReportResponse:
      type: object
      properties:
        ReportId:
          allOf:
          - $ref: '#/components/schemas/ReportId'
          description: A unique string that identifies the predictive inbox placement
            test.
        DeliverabilityTestStatus:
          allOf:
          - $ref: '#/components/schemas/DeliverabilityTestStatus'
          description: The status of the predictive inbox placement test. If the status
            is `IN_PROGRESS`, then the predictive inbox placement test is currently
            running. Predictive inbox placement tests are usually complete within
            24 hours of creating the test. If the status is `COMPLETE`, then the test
            is finished, and you can use the `GetDeliverabilityTestReport` to view
            the results of the test.
      required:
      - ReportId
      - DeliverabilityTestStatus
      description: Information about the predictive inbox placement test that you
        created.
    CreateEmailIdentityPolicyRequest:
      type: object
      properties:
        EmailIdentity:
          allOf:
          - $ref: '#/components/schemas/Identity'
          description: The email identity.
        PolicyName:
          allOf:
          - $ref: '#/components/schemas/PolicyName'
          description: 'The name of the policy.


            The policy name cannot exceed 64 characters and can only include alphanumeric
            characters, dashes, and underscores.'
        Policy:
          allOf:
          - $ref: '#/components/schemas/Policy'
          description: 'The text of the policy in JSON format. The policy cannot exceed
            4 KB.


            For information about the syntax of sending authorization policies, see
            the [Amazon SES Developer Guide](https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization-policies.html).'
      required:
      - EmailIdentity
      - PolicyName
      - Policy
      description: Represents a request to create a sending authorization policy for
        an identity. Sending authorization is an Amazon SES feature that enables you
        to authorize other senders to use your identities. For information, see the
        [Amazon SES Developer Guide](https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization-identity-owner-tasks-management.html).
    CreateEmailIdentityPolicyResponse:
      type: object
      properties: {}
      description: An HTTP 200 response if the request succeeds, or an error message
        if the request fails.
    CreateEmailIdentityRequest:
      type: object
      properties:
        EmailIdentity:
          allOf:
          - $ref: '#/components/schemas/Identity'
          description: The email address or domain to verify.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: An array of objects that define the tags (keys and values)
            to associate with the email identity.
        DkimSigningAttributes:
          allOf:
          - $ref: '#/components/schemas/DkimSigningAttributes'
          description: 'If your request includes this object, Amazon SES configures
            the identity to use Bring Your Own DKIM (BYODKIM) for DKIM authentication
            purposes, or, configures the key length to be used for [Easy DKIM](https://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim.html).


            You can only specify this object if the email identity is a domain, as
            opposed to an address.'
        ConfigurationSetName:
          allOf:
          - $ref: '#/components/schemas/ConfigurationSetName'
          description: The configuration set to use by default when sending from this
            identity. Note that any configuration set defined in the email sending
            request takes precedence.
      required:
      - EmailIdentity
      description: A request to begin the verification process for an email identity
        (an email address or domain).
    CreateEmailIdentityResponse:
      type: object
      properties:
        IdentityType:
          allOf:
          - $ref: '#/components/schemas/IdentityType'
          description: 'The email identity type. Note: the `MANAGED_DOMAIN` identity
            type is not supported.'
        VerifiedForSendingStatus:
          allOf:
          - $ref: '#/components/schemas/Enabled'
          description: Specifies whether or not the identity is verified. You can
            only send email from verified email addresses or domains. For more information
            about verifying identities, see the [Amazon Pinpoint User Guide](https://docs.aws.amazon.com/pinpoint/latest/userguide/channels-email-manage-verify.html).
        DkimAttributes:
          allOf:
          - $ref: '#/components/schemas/DkimAttributes'
          description: An object that contains information about the DKIM attributes
            for the identity.
      description: 'If the email identity is a domain, this object contains information
        about the DKIM verification status for the domain.


        If the email identity is an email address, this object is empty.'
    CreateEmailTemplateRequest:
      type: object
      properties:
        TemplateName:
          allOf:
          - $ref: '#/components/schemas/EmailTemplateName'
          description: The name of the template.
        TemplateContent:
          allOf:
          - $ref: '#/components/schemas/EmailTemplateContent'
          description: The content of the email template, composed of a subject line,
            an HTML part, and a text-only part.
      required:
      - TemplateName
      - TemplateContent
      description: Represents a request to create an email template. For more information,
        see the [Amazon SES Developer Guide](https://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-personalized-email-api.html).
    CreateEmailTemplateResponse:
      type: object
      properties: {}
      description: If the action is successful, the service sends back an HTTP 200
        response with an empty HTTP body.
    CreateExportJobRequest:
      type: object
      properties:
        ExportDataSource:
          allOf:
          - $ref: '#/components/schemas/ExportDataSource'
          description: The data source for the export job.
        ExportDestination:
          allOf:
          - $ref: '#/components/schemas/ExportDestination'
          description: The destination for the export job.
      required:
      - ExportDataSource
      - ExportDestination
      description: Represents a request to create an export job from a data source
        to a data destination.
    CreateExportJobResponse:
      type: object
      properties:
        JobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          description: A string that represents the export job ID.
      description: An HTTP 200 response if the request succeeds, or an error message
        if the request fails.
    CreateImportJobRequest:
      type: object
      properties:
        ImportDestination:
          allOf:
          - $ref: '#/components/schemas/ImportDestination'
          description: The destination for the import job.
        ImportDataSource:
          allOf:
          - $ref: '#/components/schemas/ImportDataSource'
          description: The data source for the import job.
      required:
      - ImportDestination
      - ImportDataSource
      description: Represents a request to create an import job from a data source
        for a data destination.
    CreateImportJobResponse:
      type: object
      properties:
        JobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          description: A string that represents the import job ID.
      description: An HTTP 200 response if the request succeeds, or an error message
        if the request fails.
    CreateMultiRegionEndpointRequest:
      type: object
      properties:
        EndpointName:
          allOf:
          - $ref: '#/components/schemas/EndpointName'
          description: The name of the multi-region endpoint (global-endpoint).
        Details:
          allOf:
          - $ref: '#/components/schemas/Details'
          description: Contains details of a multi-region endpoint (global-endpoint)
            being created.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: An array of objects that define the tags (keys and values)
            to associate with the multi-region endpoint (global-endpoint).
      required:
      - EndpointName
      - Details
      description: Represents a request to create a multi-region endpoint (global-endpoint).
    CreateMultiRegionEndpointResponse:
      type: object
      properties:
        Status:
          allOf:
          - $ref: '#/components/schemas/Status'
          description: "A status of the multi-region endpoint (global-endpoint) right\
            \ after the create request.\n\n  * `CREATING` – The resource is being\
            \ provisioned.\n\n  * `READY` – The resource is ready to use.\n\n  * `FAILED`\
            \ – The resource failed to be provisioned.\n\n  * `DELETING` – The resource\
            \ is being deleted as requested."
        EndpointId:
          allOf:
          - $ref: '#/components/schemas/EndpointId'
          description: The ID of the multi-region endpoint (global-endpoint).
      description: An HTTP 200 response if the request succeeds, or an error message
        if the request fails.
    CustomRedirectDomain:
      type: string
    CustomVerificationEmailTemplateMetadata:
      type: object
      properties:
        TemplateName:
          allOf:
          - $ref: '#/components/schemas/EmailTemplateName'
          description: The name of the custom verification email template.
        FromEmailAddress:
          allOf:
          - $ref: '#/components/schemas/EmailAddress'
          description: The email address that the custom verification email is sent
            from.
        TemplateSubject:
          allOf:
          - $ref: '#/components/schemas/EmailTemplateSubject'
          description: The subject line of the custom verification email.
        SuccessRedirectionURL:
          allOf:
          - $ref: '#/components/schemas/SuccessRedirectionURL'
          description: The URL that the recipient of the verification email is sent
            to if his or her address is successfully verified.
        FailureRedirectionURL:
          allOf:
          - $ref: '#/components/schemas/FailureRedirectionURL'
          description: The URL that the recipient of the verification email is sent
            to if his or her address is not successfully verified.
      description: Contains information about a custom verification email template.
    CustomVerificationEmailTemplatesList:
      type: array
      items:
        $ref: '#/components/schemas/CustomVerificationEmailTemplateMetadata'
      description: <p>A list of the custom verification email templates that exist
        in your account.</p>
    DailyVolume:
      type: object
      properties:
        StartDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date that the DailyVolume metrics apply to, in Unix time.
        VolumeStatistics:
          allOf:
          - $ref: '#/components/schemas/VolumeStatistics'
          description: An object that contains inbox placement metrics for a specific
            day in the analysis period.
        DomainIspPlacements:
          allOf:
          - $ref: '#/components/schemas/DomainIspPlacements'
          description: An object that contains inbox placement metrics for a specified
            day in the analysis period, broken out by the recipient's email provider.
      description: An object that contains information about the volume of email sent
        on each day of the analysis period.
    DailyVolumes:
      type: array
      items:
        $ref: '#/components/schemas/DailyVolume'
    DashboardAttributes:
      type: object
      properties:
        EngagementMetrics:
          allOf:
          - $ref: '#/components/schemas/FeatureStatus'
          description: "Specifies the status of your VDM engagement metrics collection.\
            \ Can be one of the following:\n\n  * `ENABLED` – Amazon SES enables engagement\
            \ metrics for your account.\n\n  * `DISABLED` – Amazon SES disables engagement\
            \ metrics for your account."
      description: An object containing additional settings for your VDM configuration
        as applicable to the Dashboard.
    DashboardOptions:
      type: object
      properties:
        EngagementMetrics:
          allOf:
          - $ref: '#/components/schemas/FeatureStatus'
          description: "Specifies the status of your VDM engagement metrics collection.\
            \ Can be one of the following:\n\n  * `ENABLED` – Amazon SES enables engagement\
            \ metrics for the configuration set.\n\n  * `DISABLED` – Amazon SES disables\
            \ engagement metrics for the configuration set."
      description: An object containing additional settings for your VDM configuration
        as applicable to the Dashboard.
    DataFormat:
      type: string
      enum:
      - CSV
      - JSON
      description: "<p>The data format of a file, can be one of the following:</p>\n\
        \         <ul>\n            <li>\n               <p>\n                  <code>CSV</code>\
        \ – A comma-separated values file.</p>\n            </li>\n            <li>\n\
        \               <p>\n                  <code>JSON</code> – A JSON file.</p>\n\
        \            </li>\n         </ul>"
    DedicatedIp:
      type: object
      properties:
        Ip:
          allOf:
          - $ref: '#/components/schemas/Ip'
          description: An IPv4 address.
        WarmupStatus:
          allOf:
          - $ref: '#/components/schemas/WarmupStatus'
          description: "The warm-up status of a dedicated IP address. The status can\
            \ have one of the following values:\n\n  * `IN_PROGRESS` – The IP address\
            \ isn't ready to use because the dedicated IP warm-up process is ongoing.\n\
            \n  * `DONE` – The dedicated IP warm-up process is complete, and the IP\
            \ address is ready to use."
        WarmupPercentage:
          allOf:
          - $ref: '#/components/schemas/Percentage100Wrapper'
          description: Indicates how complete the dedicated IP warm-up process is.
            When this value equals 1, the address has completed the warm-up process
            and is ready for use.
        PoolName:
          allOf:
          - $ref: '#/components/schemas/PoolName'
          description: The name of the dedicated IP pool that the IP address is associated
            with.
      required:
      - Ip
      - WarmupStatus
      - WarmupPercentage
      description: 'Contains information about a dedicated IP address that is associated
        with your Amazon SES account.


        To learn more about requesting dedicated IP addresses, see [Requesting and
        Relinquishing Dedicated IP Addresses](https://docs.aws.amazon.com/ses/latest/DeveloperGuide/dedicated-ip-case.html)
        in the _Amazon SES Developer Guide_.'
    DedicatedIpList:
      type: array
      items:
        $ref: '#/components/schemas/DedicatedIp'
      description: <p>A list of dedicated IP addresses that are associated with your
        Amazon Web Services account.</p>
    DedicatedIpPool:
      type: object
      properties:
        PoolName:
          allOf:
          - $ref: '#/components/schemas/PoolName'
          description: The name of the dedicated IP pool.
        ScalingMode:
          allOf:
          - $ref: '#/components/schemas/ScalingMode'
          description: "The type of the dedicated IP pool.\n\n  * `STANDARD` – A dedicated\
            \ IP pool where you can control which IPs are part of the pool.\n\n  *\
            \ `MANAGED` – A dedicated IP pool where the reputation and number of IPs\
            \ are automatically managed by Amazon SES."
      required:
      - PoolName
      - ScalingMode
      description: Contains information about a dedicated IP pool.
    DefaultDimensionValue:
      type: string
    DeleteConfigurationSetEventDestinationRequest:
      type: object
      properties:
        ConfigurationSetName:
          allOf:
          - $ref: '#/components/schemas/ConfigurationSetName'
          description: The name of the configuration set that contains the event destination
            to delete.
        EventDestinationName:
          allOf:
          - $ref: '#/components/schemas/EventDestinationName'
          description: The name of the event destination to delete.
      required:
      - ConfigurationSetName
      - EventDestinationName
      description: A request to delete an event destination from a configuration set.
    DeleteConfigurationSetEventDestinationResponse:
      type: object
      properties: {}
      description: An HTTP 200 response if the request succeeds, or an error message
        if the request fails.
    DeleteConfigurationSetRequest:
      type: object
      properties:
        ConfigurationSetName:
          allOf:
          - $ref: '#/components/schemas/ConfigurationSetName'
          description: The name of the configuration set.
      required:
      - ConfigurationSetName
      description: A request to delete a configuration set.
    DeleteConfigurationSetResponse:
      type: object
      properties: {}
      description: An HTTP 200 response if the request succeeds, or an error message
        if the request fails.
    DeleteContactListRequest:
      type: object
      properties:
        ContactListName:
          allOf:
          - $ref: '#/components/schemas/ContactListName'
          description: The name of the contact list.
      required:
      - ContactListName
    DeleteContactListResponse:
      type: object
      properties: {}
    DeleteContactRequest:
      type: object
      properties:
        ContactListName:
          allOf:
          - $ref: '#/components/schemas/ContactListName'
          description: The name of the contact list from which the contact should
            be removed.
        EmailAddress:
          allOf:
          - $ref: '#/components/schemas/EmailAddress'
          description: The contact's email address.
      required:
      - ContactListName
      - EmailAddress
    DeleteContactResponse:
      type: object
      properties: {}
    DeleteCustomVerificationEmailTemplateRequest:
      type: object
      properties:
        TemplateName:
          allOf:
          - $ref: '#/components/schemas/EmailTemplateName'
          description: The name of the custom verification email template that you
            want to delete.
      required:
      - TemplateName
      description: Represents a request to delete an existing custom verification
        email template.
    DeleteCustomVerificationEmailTemplateResponse:
      type: object
      properties: {}
      description: If the action is successful, the service sends back an HTTP 200
        response with an empty HTTP body.
    DeleteDedicatedIpPoolRequest:
      type: object
      properties:
        PoolName:
          allOf:
          - $ref: '#/components/schemas/PoolName'
          description: The name of the dedicated IP pool that you want to delete.
      required:
      - PoolName
      description: A request to delete a dedicated IP pool.
    DeleteDedicatedIpPoolResponse:
      type: object
      properties: {}
      description: An HTTP 200 response if the request succeeds, or an error message
        if the request fails.
    DeleteEmailIdentityPolicyRequest:
      type: object
      properties:
        EmailIdentity:
          allOf:
          - $ref: '#/components/schemas/Identity'
          description: The email identity.
        PolicyName:
          allOf:
          - $ref: '#/components/schemas/PolicyName'
          description: 'The name of the policy.


            The policy name cannot exceed 64 characters and can only include alphanumeric
            characters, dashes, and underscores.'
      required:
      - EmailIdentity
      - PolicyName
      description: Represents a request to delete a sending authorization policy for
        an identity. Sending authorization is an Amazon SES feature that enables you
        to authorize other senders to use your identities. For information, see the
        [Amazon SES Developer Guide](https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization-identity-owner-tasks-management.html).
    DeleteEmailIdentityPolicyResponse:
      type: object
      properties: {}
      description: An HTTP 200 response if the request succeeds, or an error message
        if the request fails.
    DeleteEmailIdentityRequest:
      type: object
      properties:
        EmailIdentity:
          allOf:
          - $ref: '#/components/schemas/Identity'
          description: The identity (that is, the email address or domain) to delete.
      required:
      - EmailIdentity
      description: A request to delete an existing email identity. When you delete
        an identity, you lose the ability to send email from that identity. You can
        restore your ability to send email by completing the verification process
        for the identity again.
    DeleteEmailIdentityResponse:
      type: object
      properties: {}
      description: An HTTP 200 response if the request succeeds, or an error message
        if the request fails.
    DeleteEmailTemplateRequest:
      type: object
      properties:
        TemplateName:
          allOf:
          - $ref: '#/components/schemas/EmailTemplateName'
          description: The name of the template to be deleted.
      required:
      - TemplateName
      description: Represents a request to delete an email template. For more information,
        see the [Amazon SES Developer Guide](https://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-personalized-email-api.html).
    DeleteEmailTemplateResponse:
      type: object
      properties: {}
      description: If the action is successful, the service sends back an HTTP 200
        response with an empty HTTP body.
    DeleteMultiRegionEndpointRequest:
      type: object
      properties:
        EndpointName:
          allOf:
          - $ref: '#/components/schemas/EndpointName'
          description: The name of the multi-region endpoint (global-endpoint) to
            be deleted.
      required:
      - EndpointName
      description: Represents a request to delete a multi-region endpoint (global-endpoint).
    DeleteMultiRegionEndpointResponse:
      type: object
      properties:
        Status:
          allOf:
          - $ref: '#/components/schemas/Status'
          description: "A status of the multi-region endpoint (global-endpoint) right\
            \ after the delete request.\n\n  * `CREATING` – The resource is being\
            \ provisioned.\n\n  * `READY` – The resource is ready to use.\n\n  * `FAILED`\
            \ – The resource failed to be provisioned.\n\n  * `DELETING` – The resource\
            \ is being deleted as requested."
      description: An HTTP 200 response if the request succeeds, or an error message
        if the request fails.
    DeleteSuppressedDestinationRequest:
      type: object
      properties:
        EmailAddress:
          allOf:
          - $ref: '#/components/schemas/EmailAddress'
          description: The suppressed email destination to remove from the account
            suppression list.
      required:
      - EmailAddress
      description: A request to remove an email address from the suppression list
        for your account.
    DeleteSuppressedDestinationResponse:
      type: object
      properties: {}
      description: An HTTP 200 response if the request succeeds, or an error message
        if the request fails.
    DeliverabilityDashboardAccountStatus:
      type: string
      enum:
      - ACTIVE
      - PENDING_EXPIRATION
      - DISABLED
      description: "<p>The current status of your Deliverability dashboard subscription.\
        \ If this value is\n                <code>PENDING_EXPIRATION</code>, your\
        \ subscription is scheduled to expire at the end\n            of the current\
        \ calendar month.</p>"
    DeliverabilityTestReport:
      type: object
      properties:
        ReportId:
          allOf:
          - $ref: '#/components/schemas/ReportId'
          description: A unique string that identifies the predictive inbox placement
            test.
        ReportName:
          allOf:
          - $ref: '#/components/schemas/ReportName'
          description: A name that helps you identify a predictive inbox placement
            test report.
        Subject:
          allOf:
          - $ref: '#/components/schemas/DeliverabilityTestSubject'
          description: The subject line for an email that you submitted in a predictive
            inbox placement test.
        FromEmailAddress:
          allOf:
          - $ref: '#/components/schemas/EmailAddress'
          description: The sender address that you specified for the predictive inbox
            placement test.
        CreateDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time when the predictive inbox placement test
            was created.
        DeliverabilityTestStatus:
          allOf:
          - $ref: '#/components/schemas/DeliverabilityTestStatus'
          description: The status of the predictive inbox placement test. If the status
            is `IN_PROGRESS`, then the predictive inbox placement test is currently
            running. Predictive inbox placement tests are usually complete within
            24 hours of creating the test. If the status is `COMPLETE`, then the test
            is finished, and you can use the `GetDeliverabilityTestReport` to view
            the results of the test.
      description: An object that contains metadata related to a predictive inbox
        placement test.
    DeliverabilityTestReports:
      type: array
      items:
        $ref: '#/components/schemas/DeliverabilityTestReport'
    DeliverabilityTestStatus:
      type: string
      enum:
      - IN_PROGRESS
      - COMPLETED
      description: "<p>The status of a predictive inbox placement test. If the status\
        \ is <code>IN_PROGRESS</code>, then the predictive inbox placement test is\n\
        \            currently running. Predictive inbox placement tests are usually\
        \ complete within 24 hours of creating the test.\n            If the status\
        \ is <code>COMPLETE</code>, then the test is finished, and you can use the\n\
        \                <code>GetDeliverabilityTestReport</code> operation to view\
        \ the results of the\n            test.</p>"
    DeliverabilityTestSubject:
      type: string
    DeliveryEventType:
      type: string
      enum:
      - SEND
      - DELIVERY
      - TRANSIENT_BOUNCE
      - PERMANENT_BOUNCE
      - UNDETERMINED_BOUNCE
      - COMPLAINT
      description: "<p>The type of delivery events:</p>\n         <ul>\n         \
        \   <li>\n               <p>\n                  <code>SEND</code> - The send\
        \ request was successful and SES will\n                    attempt to deliver\
        \ the message to the recipient’s mail server. (If account-level\n        \
        \            or global suppression is being used, SES will still count it\
        \ as a send,\n                    but delivery is suppressed.)</p>\n     \
        \       </li>\n            <li>\n               <p>\n                  <code>DELIVERY</code>\
        \ - SES successfully delivered the email to the\n                    recipient's\
        \ mail server. Excludes deliveries to the mailbox simulator and\n        \
        \            emails addressed to more than one recipient.</p>\n          \
        \  </li>\n            <li>\n               <p>\n                  <code>TRANSIENT_BOUNCE</code>\
        \ - Feedback received for\n                    delivery failures excluding\
        \ issues with non-existent mailboxes. Excludes bounces from the\n        \
        \            mailbox simulator, and those from emails addressed to more than\
        \ one recipient.</p>\n            </li>\n            <li>\n              \
        \ <p>\n                  <code>PERMANENT_BOUNCE</code> - Feedback received\
        \ for\n                    emails sent to non-existent mailboxes. Excludes\
        \ bounces from the mailbox simulator, those\n                    originating\
        \ from your account-level suppression list (if enabled), and those from emails\n\
        \                    addressed to more than one recipient.</p>\n         \
        \   </li>\n            <li>\n               <p>\n                  <code>UNDETERMINED_BOUNCE</code>\
        \ - SES was unable to determine the bounce reason.</p>\n            </li>\n\
        \            <li>\n               <p>\n                  <code>COMPLAINT</code>\
        \ - Complaint received for the email.\n                    This excludes complaints\
        \ from the mailbox simulator, those originating from\n                   \
        \ your account-level suppression list (if enabled), and those from emails\
        \ addressed to more\n                    than one recipient.</p>\n       \
        \     </li>\n         </ul>"
    DeliveryOptions:
      type: object
      properties:
        TlsPolicy:
          allOf:
          - $ref: '#/components/schemas/TlsPolicy'
          description: Specifies whether messages that use the configuration set are
            required to use Transport Layer Security (TLS). If the value is `Require`,
            messages are only delivered if a TLS connection can be established. If
            the value is `Optional`, messages can be delivered in plain text if a
            TLS connection can't be established.
        SendingPoolName:
          allOf:
          - $ref: '#/components/schemas/PoolName'
          description: The name of the dedicated IP pool to associate with the configuration
            set.
        MaxDeliverySeconds:
          allOf:
          - $ref: '#/components/schemas/MaxDeliverySeconds'
          description: The maximum amount of time, in seconds, that Amazon SES API
            v2 will attempt delivery of email. If specified, the value must greater
            than or equal to 300 seconds (5 minutes) and less than or equal to 50400
            seconds (840 minutes).
      description: Used to associate a configuration set with a dedicated IP pool.
    Description:
      type: string
    Destination:
      type: object
      properties:
        ToAddresses:
          allOf:
          - $ref: '#/components/schemas/EmailAddressList'
          description: An array that contains the email addresses of the "To" recipients
            for the email.
        CcAddresses:
          allOf:
          - $ref: '#/components/schemas/EmailAddressList'
          description: An array that contains the email addresses of the "CC" (carbon
            copy) recipients for the email.
        BccAddresses:
          allOf:
          - $ref: '#/components/schemas/EmailAddressList'
          description: An array that contains the email addresses of the "BCC" (blind
            carbon copy) recipients for the email.
      description: 'An object that describes the recipients for an email.


        Amazon SES does not support the SMTPUTF8 extension, as described in [RFC6531](https://tools.ietf.org/html/rfc6531).
        For this reason, the _local part_ of a destination email address (the part
        of the email address that precedes the @ sign) may only contain [7-bit ASCII
        characters](https://en.wikipedia.org/wiki/Email_address#Local-part). If the
        _domain part_ of an address (the part after the @ sign) contains non-ASCII
        characters, they must be encoded using Punycode, as described in [RFC3492](https://tools.ietf.org/html/rfc3492.html).'
    Details:
      type: object
      properties:
        RoutesDetails:
          allOf:
          - $ref: '#/components/schemas/RoutesDetails'
          description: A list of route configuration details. Must contain exactly
            one route configuration.
      required:
      - RoutesDetails
      description: An object that contains configuration details of multi-region endpoint
        (global-endpoint).
    DiagnosticCode:
      type: string
    DimensionName:
      type: string
    DimensionValueSource:
      type: string
      enum:
      - MESSAGE_TAG
      - EMAIL_HEADER
      - LINK_TAG
      description: "<p>The location where the Amazon SES API v2 finds the value of\
        \ a dimension to publish to Amazon CloudWatch. To\n            use the message\
        \ tags that you specify using an <code>X-SES-MESSAGE-TAGS</code> header or\n\
        \            a parameter to the <code>SendEmail</code> or <code>SendRawEmail</code>\
        \ API, choose\n                <code>messageTag</code>. To use your own email\
        \ headers, choose\n                <code>emailHeader</code>. To use link tags,\
        \ choose <code>linkTags</code>.</p>"
    Dimensions:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/MetricDimensionValue'
    DisplayName:
      type: string
    DkimAttributes:
      type: object
      properties:
        SigningEnabled:
          allOf:
          - $ref: '#/components/schemas/Enabled'
          description: If the value is `true`, then the messages that you send from
            the identity are signed using DKIM. If the value is `false`, then the
            messages that you send from the identity aren't DKIM-signed.
        Status:
          allOf:
          - $ref: '#/components/schemas/DkimStatus'
          description: "Describes whether or not Amazon SES has successfully located\
            \ the DKIM records in the DNS records for the domain. The status can be\
            \ one of the following:\n\n  * `PENDING` – The verification process was\
            \ initiated, but Amazon SES hasn't yet detected the DKIM records in the\
            \ DNS configuration for the domain.\n\n  * `SUCCESS` – The verification\
            \ process completed successfully.\n\n  * `FAILED` – The verification process\
            \ failed. This typically occurs when Amazon SES fails to find the DKIM\
            \ records in the DNS configuration of the domain.\n\n  * `TEMPORARY_FAILURE`\
            \ – A temporary issue is preventing Amazon SES from determining the DKIM\
            \ authentication status of the domain.\n\n  * `NOT_STARTED` – The DKIM\
            \ verification process hasn't been initiated for the domain."
        Tokens:
          allOf:
          - $ref: '#/components/schemas/DnsTokenList'
          description: 'If you used [Easy DKIM](https://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim.html)
            to configure DKIM authentication for the domain, then this object contains
            a set of unique strings that you use to create a set of CNAME records
            that you add to the DNS configuration for your domain. When Amazon SES
            detects these records in the DNS configuration for your domain, the DKIM
            authentication process is complete.


            If you configured DKIM authentication for the domain by providing your
            own public-private key pair, then this object contains the selector for
            the public key.


            Regardless of the DKIM authentication method you use, Amazon SES searches
            for the appropriate records in the DNS configuration of the domain for
            up to 72 hours.'
        SigningAttributesOrigin:
          allOf:
          - $ref: '#/components/schemas/DkimSigningAttributesOrigin'
          description: "A string that indicates how DKIM was configured for the identity.\
            \ These are the possible values:\n\n  * `AWS_SES` – Indicates that DKIM\
            \ was configured for the identity by using [Easy DKIM](https://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim.html).\n\
            \n  * `EXTERNAL` – Indicates that DKIM was configured for the identity\
            \ by using Bring Your Own DKIM (BYODKIM).\n\n  * `AWS_SES_AF_SOUTH_1`\
            \ – Indicates that DKIM was configured for the identity by replicating\
            \ signing attributes from a parent identity in Africa (Cape Town) region\
            \ using Deterministic Easy-DKIM (DEED). \n\n  * `AWS_SES_EU_NORTH_1` –\
            \ Indicates that DKIM was configured for the identity by replicating signing\
            \ attributes from a parent identity in Europe (Stockholm) region using\
            \ Deterministic Easy-DKIM (DEED). \n\n  * `AWS_SES_AP_SOUTH_1` – Indicates\
            \ that DKIM was configured for the identity by replicating signing attributes\
            \ from a parent identity in Asia Pacific (Mumbai) region using Deterministic\
            \ Easy-DKIM (DEED). \n\n  * `AWS_SES_EU_WEST_3` – Indicates that DKIM\
            \ was configured for the identity by replicating signing attributes from\
            \ a parent identity in Europe (Paris) region using Deterministic Easy-DKIM\
            \ (DEED). \n\n  * `AWS_SES_EU_WEST_2` – Indicates that DKIM was configured\
            \ for the identity by replicating signing attributes from a parent identity\
            \ in Europe (London) region using Deterministic Easy-DKIM (DEED). \n\n\
            \  * `AWS_SES_EU_SOUTH_1` – Indicates that DKIM was configured for the\
            \ identity by replicating signing attributes from a parent identity in\
            \ Europe (Milan) region using Deterministic Easy-DKIM (DEED). \n\n  *\
            \ `AWS_SES_EU_WEST_1` – Indicates that DKIM was configured for the identity\
            \ by replicating signing attributes from a parent identity in Europe (Ireland)\
            \ region using Deterministic Easy-DKIM (DEED). \n\n  * `AWS_SES_AP_NORTHEAST_3`\
            \ – Indicates that DKIM was configured for the identity by replicating\
            \ signing attributes from a parent identity in Asia Pacific (Osaka) region\
            \ using Deterministic Easy-DKIM (DEED). \n\n  * `AWS_SES_AP_NORTHEAST_2`\
            \ – Indicates that DKIM was configured for the identity by replicating\
            \ signing attributes from a parent identity in Asia Pacific (Seoul) region\
            \ using Deterministic Easy-DKIM (DEED). \n\n  * `AWS_SES_ME_SOUTH_1` –\
            \ Indicates that DKIM was configured for the identity by replicating signing\
            \ attributes from a parent identity in Middle East (Bahrain) region using\
            \ Deterministic Easy-DKIM (DEED). \n\n  * `AWS_SES_AP_NORTHEAST_1` – Indicates\
            \ that DKIM was configured for the identity by replicating signing attributes\
            \ from a parent identity in Asia Pacific (Tokyo) region using Deterministic\
            \ Easy-DKIM (DEED). \n\n  * `AWS_SES_IL_CENTRAL_1` – Indicates that DKIM\
            \ was configured for the identity by replicating signing attributes from\
            \ a parent identity in Israel (Tel Aviv) region using Deterministic Easy-DKIM\
            \ (DEED). \n\n  * `AWS_SES_SA_EAST_1` – Indicates that DKIM was configured\
            \ for the identity by replicating signing attributes from a parent identity\
            \ in South America (São Paulo) region using Deterministic Easy-DKIM (DEED).\
            \ \n\n  * `AWS_SES_CA_CENTRAL_1` – Indicates that DKIM was configured\
            \ for the identity by replicating signing attributes from a parent identity\
            \ in Canada (Central) region using Deterministic Easy-DKIM (DEED). \n\n\
            \  * `AWS_SES_AP_SOUTHEAST_1` – Indicates that DKIM was configured for\
            \ the identity by replicating signing attributes from a parent identity\
            \ in Asia Pacific (Singapore) region using Deterministic Easy-DKIM (DEED).\
            \ \n\n  * `AWS_SES_AP_SOUTHEAST_2` – Indicates that DKIM was configured\
            \ for the identity by replicating signing attributes from a parent identity\
            \ in Asia Pacific (Sydney) region using Deterministic Easy-DKIM (DEED).\
            \ \n\n  * `AWS_SES_AP_SOUTHEAST_3` – Indicates that DKIM was configured\
            \ for the identity by replicating signing attributes from a parent identity\
            \ in Asia Pacific (Jakarta) region using Deterministic Easy-DKIM (DEED).\
            \ \n\n  * `AWS_SES_EU_CENTRAL_1` – Indicates that DKIM was configured\
            \ for the identity by replicating signing attributes from a parent identity\
            \ in Europe (Frankfurt) region using Deterministic Easy-DKIM (DEED). \n\
            \n  * `AWS_SES_US_EAST_1` – Indicates that DKIM was configured for the\
            \ identity by replicating signing attributes from a parent identity in\
            \ US East (N. Virginia) region using Deterministic Easy-DKIM (DEED). \n\
            \n  * `AWS_SES_US_EAST_2` – Indicates that DKIM was configured for the\
            \ identity by replicating signing attributes from a parent identity in\
            \ US East (Ohio) region using Deterministic Easy-DKIM (DEED). \n\n  *\
            \ `AWS_SES_US_WEST_1` – Indicates that DKIM was configured for the identity\
            \ by replicating signing attributes from a parent identity in US West\
            \ (N. California) region using Deterministic Easy-DKIM (DEED). \n\n  *\
            \ `AWS_SES_US_WEST_2` – Indicates that DKIM was configured for the identity\
            \ by replicating signing attributes from a parent identity in US West\
            \ (Oregon) region using Deterministic Easy-DKIM (DEED)."
        NextSigningKeyLength:
          allOf:
          - $ref: '#/components/schemas/DkimSigningKeyLength'
          description: '[Easy DKIM] The key length of the future DKIM key pair to
            be generated. This can be changed at most once per day.'
        CurrentSigningKeyLength:
          allOf:
          - $ref: '#/components/schemas/DkimSigningKeyLength'
          description: '[Easy DKIM] The key length of the DKIM key pair in use.'
        LastKeyGenerationTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: '[Easy DKIM] The last time a key pair was generated for this
            identity.'
      description: 'An object that contains information about the DKIM authentication
        status for an email identity.


        Amazon SES determines the authentication status by searching for specific
        records in the DNS configuration for the domain. If you used [Easy DKIM](https://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim.html)
        to set up DKIM authentication, Amazon SES tries to find three unique CNAME
        records in the DNS configuration for your domain. If you provided a public
        key to perform DKIM authentication, Amazon SES tries to find a TXT record
        that uses the selector that you specified. The value of the TXT record must
        be a public key that''s paired with the private key that you specified in
        the process of creating the identity'
    DkimSigningAttributes:
      type: object
      properties:
        DomainSigningSelector:
          allOf:
          - $ref: '#/components/schemas/Selector'
          description: '[Bring Your Own DKIM] A string that''s used to identify a
            public key in the DNS configuration for a domain.'
        DomainSigningPrivateKey:
          allOf:
          - $ref: '#/components/schemas/PrivateKey'
          description: '[Bring Your Own DKIM] A private key that''s used to generate
            a DKIM signature.


            The private key must use 1024 or 2048-bit RSA encryption, and must be
            encoded using base64 encoding.'
        NextSigningKeyLength:
          allOf:
          - $ref: '#/components/schemas/DkimSigningKeyLength'
          description: '[Easy DKIM] The key length of the future DKIM key pair to
            be generated. This can be changed at most once per day.'
        DomainSigningAttributesOrigin:
          allOf:
          - $ref: '#/components/schemas/DkimSigningAttributesOrigin'
          description: "The attribute to use for configuring DKIM for the identity\
            \ depends on the operation:\n\n  1. For `PutEmailIdentityDkimSigningAttributes`:\
            \ \n\n     * None of the values are allowed - use the [ `SigningAttributesOrigin`\
            \ ](https://docs.aws.amazon.com/ses/latest/APIReference-V2/API_PutEmailIdentityDkimSigningAttributes.html#SES-PutEmailIdentityDkimSigningAttributes-request-SigningAttributesOrigin)\
            \ parameter instead \n\n  2. For `CreateEmailIdentity` when replicating\
            \ a parent identity's DKIM configuration: \n\n     * Allowed values: All\
            \ values except `AWS_SES` and `EXTERNAL`\n\n  * `AWS_SES` – Configure\
            \ DKIM for the identity by using Easy DKIM. \n\n  * `EXTERNAL` – Configure\
            \ DKIM for the identity by using Bring Your Own DKIM (BYODKIM). \n\n \
            \ * `AWS_SES_AF_SOUTH_1` – Configure DKIM for the identity by replicating\
            \ from a parent identity in Africa (Cape Town) region using Deterministic\
            \ Easy-DKIM (DEED). \n\n  * `AWS_SES_EU_NORTH_1` – Configure DKIM for\
            \ the identity by replicating from a parent identity in Europe (Stockholm)\
            \ region using Deterministic Easy-DKIM (DEED). \n\n  * `AWS_SES_AP_SOUTH_1`\
            \ – Configure DKIM for the identity by replicating from a parent identity\
            \ in Asia Pacific (Mumbai) region using Deterministic Easy-DKIM (DEED).\
            \ \n\n  * `AWS_SES_EU_WEST_3` – Configure DKIM for the identity by replicating\
            \ from a parent identity in Europe (Paris) region using Deterministic\
            \ Easy-DKIM (DEED). \n\n  * `AWS_SES_EU_WEST_2` – Configure DKIM for the\
            \ identity by replicating from a parent identity in Europe (London) region\
            \ using Deterministic Easy-DKIM (DEED). \n\n  * `AWS_SES_EU_SOUTH_1` –\
            \ Configure DKIM for the identity by replicating from a parent identity\
            \ in Europe (Milan) region using Deterministic Easy-DKIM (DEED). \n\n\
            \  * `AWS_SES_EU_WEST_1` – Configure DKIM for the identity by replicating\
            \ from a parent identity in Europe (Ireland) region using Deterministic\
            \ Easy-DKIM (DEED). \n\n  * `AWS_SES_AP_NORTHEAST_3` – Configure DKIM\
            \ for the identity by replicating from a parent identity in Asia Pacific\
            \ (Osaka) region using Deterministic Easy-DKIM (DEED). \n\n  * `AWS_SES_AP_NORTHEAST_2`\
            \ – Configure DKIM for the identity by replicating from a parent identity\
            \ in Asia Pacific (Seoul) region using Deterministic Easy-DKIM (DEED).\
            \ \n\n  * `AWS_SES_ME_SOUTH_1` – Configure DKIM for the identity by replicating\
            \ from a parent identity in Middle East (Bahrain) region using Deterministic\
            \ Easy-DKIM (DEED). \n\n  * `AWS_SES_AP_NORTHEAST_1` – Configure DKIM\
            \ for the identity by replicating from a parent identity in Asia Pacific\
            \ (Tokyo) region using Deterministic Easy-DKIM (DEED). \n\n  * `AWS_SES_IL_CENTRAL_1`\
            \ – Configure DKIM for the identity by replicating from a parent identity\
            \ in Israel (Tel Aviv) region using Deterministic Easy-DKIM (DEED). \n\
            \n  * `AWS_SES_SA_EAST_1` – Configure DKIM for the identity by replicating\
            \ from a parent identity in South America (São Paulo) region using Deterministic\
            \ Easy-DKIM (DEED). \n\n  * `AWS_SES_CA_CENTRAL_1` – Configure DKIM for\
            \ the identity by replicating from a parent identity in Canada (Central)\
            \ region using Deterministic Easy-DKIM (DEED). \n\n  * `AWS_SES_AP_SOUTHEAST_1`\
            \ – Configure DKIM for the identity by replicating from a parent identity\
            \ in Asia Pacific (Singapore) region using Deterministic Easy-DKIM (DEED).\
            \ \n\n  * `AWS_SES_AP_SOUTHEAST_2` – Configure DKIM for the identity by\
            \ replicating from a parent identity in Asia Pacific (Sydney) region using\
            \ Deterministic Easy-DKIM (DEED). \n\n  * `AWS_SES_AP_SOUTHEAST_3` – Configure\
            \ DKIM for the identity by replicating from a parent identity in Asia\
            \ Pacific (Jakarta) region using Deterministic Easy-DKIM (DEED). \n\n\
            \  * `AWS_SES_EU_CENTRAL_1` – Configure DKIM for the identity by replicating\
            \ from a parent identity in Europe (Frankfurt) region using Deterministic\
            \ Easy-DKIM (DEED). \n\n  * `AWS_SES_US_EAST_1` – Configure DKIM for the\
            \ identity by replicating from a parent identity in US East (N. Virginia)\
            \ region using Deterministic Easy-DKIM (DEED). \n\n  * `AWS_SES_US_EAST_2`\
            \ – Configure DKIM for the identity by replicating from a parent identity\
            \ in US East (Ohio) region using Deterministic Easy-DKIM (DEED). \n\n\
            \  * `AWS_SES_US_WEST_1` – Configure DKIM for the identity by replicating\
            \ from a parent identity in US West (N. California) region using Deterministic\
            \ Easy-DKIM (DEED). \n\n  * `AWS_SES_US_WEST_2` – Configure DKIM for the\
            \ identity by replicating from a parent identity in US West (Oregon) region\
            \ using Deterministic Easy-DKIM (DEED)."
      description: An object that contains configuration for Bring Your Own DKIM (BYODKIM),
        or, for Easy DKIM
    DkimSigningAttributesOrigin:
      type: string
      enum:
      - AWS_SES
      - EXTERNAL
      - AWS_SES_AF_SOUTH_1
      - AWS_SES_EU_NORTH_1
      - AWS_SES_AP_SOUTH_1
      - AWS_SES_EU_WEST_3
      - AWS_SES_EU_WEST_2
      - AWS_SES_EU_SOUTH_1
      - AWS_SES_EU_WEST_1
      - AWS_SES_AP_NORTHEAST_3
      - AWS_SES_AP_NORTHEAST_2
      - AWS_SES_ME_SOUTH_1
      - AWS_SES_AP_NORTHEAST_1
      - AWS_SES_IL_CENTRAL_1
      - AWS_SES_SA_EAST_1
      - AWS_SES_CA_CENTRAL_1
      - AWS_SES_AP_SOUTHEAST_1
      - AWS_SES_AP_SOUTHEAST_2
      - AWS_SES_AP_SOUTHEAST_3
      - AWS_SES_EU_CENTRAL_1
      - AWS_SES_US_EAST_1
      - AWS_SES_US_EAST_2
      - AWS_SES_US_WEST_1
      - AWS_SES_US_WEST_2
    DkimSigningKeyLength:
      type: string
      enum:
      - RSA_1024_BIT
      - RSA_2048_BIT
    DkimStatus:
      type: string
      enum:
      - PENDING
      - SUCCESS
      - FAILED
      - TEMPORARY_FAILURE
      - NOT_STARTED
      description: "<p>The DKIM authentication status of the identity. The status\
        \ can be one of the\n            following:</p>\n         <ul>\n         \
        \   <li>\n               <p>\n                  <code>PENDING</code> – The\
        \ verification process was initiated, but Amazon SES\n                   \
        \ hasn't yet detected the DKIM records in the DNS configuration for the\n\
        \                    domain.</p>\n            </li>\n            <li>\n  \
        \             <p>\n                  <code>SUCCESS</code> – The verification\
        \ process completed\n                    successfully.</p>\n            </li>\n\
        \            <li>\n               <p>\n                  <code>FAILED</code>\
        \ – The verification process failed. This typically\n                    occurs\
        \ when Amazon SES fails to find the DKIM records in the DNS configuration\
        \ of the\n                    domain.</p>\n            </li>\n           \
        \ <li>\n               <p>\n                  <code>TEMPORARY_FAILURE</code>\
        \ – A temporary issue is preventing Amazon SES\n                    from determining\
        \ the DKIM authentication status of the domain.</p>\n            </li>\n \
        \           <li>\n               <p>\n                  <code>NOT_STARTED</code>\
        \ – The DKIM verification process hasn't been\n                    initiated\
        \ for the domain.</p>\n            </li>\n         </ul>"
    DnsToken:
      type: string
    DnsTokenList:
      type: array
      items:
        $ref: '#/components/schemas/DnsToken'
    Domain:
      type: string
    DomainDeliverabilityCampaign:
      type: object
      properties:
        CampaignId:
          allOf:
          - $ref: '#/components/schemas/CampaignId'
          description: The unique identifier for the campaign. The Deliverability
            dashboard automatically generates and assigns this identifier to a campaign.
        ImageUrl:
          allOf:
          - $ref: '#/components/schemas/ImageUrl'
          description: The URL of an image that contains a snapshot of the email message
            that was sent.
        Subject:
          allOf:
          - $ref: '#/components/schemas/Subject'
          description: The subject line, or title, of the email message.
        FromAddress:
          allOf:
          - $ref: '#/components/schemas/Identity'
          description: The verified email address that the email message was sent
            from.
        SendingIps:
          allOf:
          - $ref: '#/components/schemas/IpList'
          description: The IP addresses that were used to send the email message.
        FirstSeenDateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The first time when the email message was delivered to any
            recipient's inbox. This value can help you determine how long it took
            for a campaign to deliver an email message.
        LastSeenDateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The last time when the email message was delivered to any recipient's
            inbox. This value can help you determine how long it took for a campaign
            to deliver an email message.
        InboxCount:
          allOf:
          - $ref: '#/components/schemas/Volume'
          description: The number of email messages that were delivered to recipients’
            inboxes.
        SpamCount:
          allOf:
          - $ref: '#/components/schemas/Volume'
          description: The number of email messages that were delivered to recipients'
            spam or junk mail folders.
        ReadRate:
          allOf:
          - $ref: '#/components/schemas/Percentage'
          description: The percentage of email messages that were opened by recipients.
            Due to technical limitations, this value only includes recipients who
            opened the message by using an email client that supports images.
        DeleteRate:
          allOf:
          - $ref: '#/components/schemas/Percentage'
          description: The percentage of email messages that were deleted by recipients,
            without being opened first. Due to technical limitations, this value only
            includes recipients who opened the message by using an email client that
            supports images.
        ReadDeleteRate:
          allOf:
          - $ref: '#/components/schemas/Percentage'
          description: The percentage of email messages that were opened and then
            deleted by recipients. Due to technical limitations, this value only includes
            recipients who opened the message by using an email client that supports
            images.
        ProjectedVolume:
          allOf:
          - $ref: '#/components/schemas/Volume'
          description: The projected number of recipients that the email message was
            sent to.
        Esps:
          allOf:
          - $ref: '#/components/schemas/Esps'
          description: The major email providers who handled the email message.
      description: An object that contains the deliverability data for a specific
        campaign. This data is available for a campaign only if the campaign sent
        email by using a domain that the Deliverability dashboard is enabled for (`PutDeliverabilityDashboardOption`
        operation).
    DomainDeliverabilityCampaignList:
      type: array
      items:
        $ref: '#/components/schemas/DomainDeliverabilityCampaign'
      description: <p></p>
    DomainDeliverabilityTrackingOption:
      type: object
      properties:
        Domain:
          allOf:
          - $ref: '#/components/schemas/Domain'
          description: A verified domain that’s associated with your Amazon Web Services
            account and currently has an active Deliverability dashboard subscription.
        SubscriptionStartDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date when you enabled the Deliverability dashboard for
            the domain.
        InboxPlacementTrackingOption:
          allOf:
          - $ref: '#/components/schemas/InboxPlacementTrackingOption'
          description: An object that contains information about the inbox placement
            data settings for the domain.
      description: An object that contains information about the Deliverability dashboard
        subscription for a verified domain that you use to send email and currently
        has an active Deliverability dashboard subscription. If a Deliverability dashboard
        subscription is active for a domain, you gain access to reputation, inbox
        placement, and other metrics for the domain.
    DomainDeliverabilityTrackingOptions:
      type: array
      items:
        $ref: '#/components/schemas/DomainDeliverabilityTrackingOption'
      description: "<p>An object that contains information about the Deliverability\
        \ dashboard subscription for a\n            verified domain that you use to\
        \ send email and currently has an active Deliverability dashboard\n      \
        \      subscription. If a Deliverability dashboard subscription is active\
        \ for a domain, you gain access\n            to reputation, inbox placement,\
        \ and other metrics for the domain.</p>"
    DomainIspPlacement:
      type: object
      properties:
        IspName:
          allOf:
          - $ref: '#/components/schemas/IspName'
          description: The name of the email provider that the inbox placement data
            applies to.
        InboxRawCount:
          allOf:
          - $ref: '#/components/schemas/Volume'
          description: The total number of messages that were sent from the selected
            domain to the specified email provider that arrived in recipients' inboxes.
        SpamRawCount:
          allOf:
          - $ref: '#/components/schemas/Volume'
          description: The total number of messages that were sent from the selected
            domain to the specified email provider that arrived in recipients' spam
            or junk mail folders.
        InboxPercentage:
          allOf:
          - $ref: '#/components/schemas/Percentage'
          description: The percentage of messages that were sent from the selected
            domain to the specified email provider that arrived in recipients' inboxes.
        SpamPercentage:
          allOf:
          - $ref: '#/components/schemas/Percentage'
          description: The percentage of messages that were sent from the selected
            domain to the specified email provider that arrived in recipients' spam
            or junk mail folders.
      description: An object that contains inbox placement data for email sent from
        one of your email domains to a specific email provider.
    DomainIspPlacements:
      type: array
      items:
        $ref: '#/components/schemas/DomainIspPlacement'
    EmailAddress:
      type: string
    EmailAddressFilterList:
      type: array
      items:
        $ref: '#/components/schemas/InsightsEmailAddress'
    EmailAddressList:
      type: array
      items:
        $ref: '#/components/schemas/EmailAddress'
    EmailContent:
      type: object
      properties:
        Simple:
          allOf:
          - $ref: '#/components/schemas/Message'
          description: The simple email message. The message consists of a subject,
            message body and attachments list.
        Raw:
          allOf:
          - $ref: '#/components/schemas/RawMessage'
          description: "The raw email message. The message has to meet the following\
            \ criteria:\n\n  * The message has to contain a header and a body, separated\
            \ by one blank line.\n\n  * All of the required header fields must be\
            \ present in the message.\n\n  * Each part of a multipart MIME message\
            \ must be formatted properly.\n\n  * If you include attachments, they\
            \ must be in a file format that the Amazon SES API v2 supports. \n\n \
            \ * The raw data of the message needs to base64-encoded if you are accessing\
            \ Amazon SES directly through the HTTPS interface. If you are accessing\
            \ Amazon SES using an Amazon Web Services SDK, the SDK takes care of the\
            \ base 64-encoding for you.\n\n  * If any of the MIME parts in your message\
            \ contain content that is outside of the 7-bit ASCII character range,\
            \ you should encode that content to ensure that recipients' email clients\
            \ render the message properly.\n\n  * The length of any single line of\
            \ text in the message can't exceed 1,000 characters. This restriction\
            \ is defined in [RFC 5321](https://tools.ietf.org/html/rfc5321)."
        Template:
          allOf:
          - $ref: '#/components/schemas/Template'
          description: The template to use for the email message.
      description: An object that defines the entire content of the email, including
        the message headers, body content, and attachments. For a simple email message,
        you specify the subject and provide both text and HTML versions of the message
        body. You can also add attachments to simple and templated messages. For a
        raw message, you provide a complete MIME-formatted message, which can include
        custom headers and attachments.
    EmailInsights:
      type: object
      properties:
        Destination:
          allOf:
          - $ref: '#/components/schemas/InsightsEmailAddress'
          description: The recipient of the email.
        Isp:
          allOf:
          - $ref: '#/components/schemas/Isp'
          description: The recipient's ISP (e.g., `Gmail`, `Yahoo`, etc.).
        Events:
          allOf:
          - $ref: '#/components/schemas/InsightsEvents'
          description: A list of events associated with the sent email.
      description: An email's insights contain metadata and delivery information about
        a specific email.
    EmailInsightsList:
      type: array
      items:
        $ref: '#/components/schemas/EmailInsights'
    EmailSubject:
      type: string
      minLength: 1
      maxLength: 998
    EmailSubjectFilterList:
      type: array
      items:
        $ref: '#/components/schemas/EmailSubject'
    EmailTemplateContent:
      type: object
      properties:
        Subject:
          allOf:
          - $ref: '#/components/schemas/EmailTemplateSubject'
          description: The subject line of the email.
        Text:
          allOf:
          - $ref: '#/components/schemas/EmailTemplateText'
          description: The email body that will be visible to recipients whose email
            clients do not display HTML.
        Html:
          allOf:
          - $ref: '#/components/schemas/EmailTemplateHtml'
          description: The HTML body of the email.
      description: The content of the email, composed of a subject line, an HTML part,
        and a text-only part.
    EmailTemplateData:
      type: string
      minLength: 0
      maxLength: 262144
    EmailTemplateHtml:
      type: string
    EmailTemplateMetadata:
      type: object
      properties:
        TemplateName:
          allOf:
          - $ref: '#/components/schemas/EmailTemplateName'
          description: The name of the template.
        CreatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time and date the template was created.
      description: Contains information about an email template.
    EmailTemplateMetadataList:
      type: array
      items:
        $ref: '#/components/schemas/EmailTemplateMetadata'
      description: <p>A list of the EmailTemplateMetadata object.</p>
    EmailTemplateName:
      type: string
      minLength: 1
    EmailTemplateSubject:
      type: string
    EmailTemplateText:
      type: string
    Enabled:
      type: boolean
      default: false
    EnabledWrapper:
      type: boolean
    EndpointId:
      type: string
    EndpointName:
      type: string
      pattern: ^[\w\-_]+$
      minLength: 1
      maxLength: 64
    EngagementEventType:
      type: string
      enum:
      - OPEN
      - CLICK
      description: "<p>The type of delivery events:</p>\n         <ul>\n         \
        \   <li>\n               <p>\n                  <code>OPEN</code> - Open event\
        \ for emails including open trackers.\n                    Excludes opens\
        \ for emails addressed to more than one recipient.</p>\n            </li>\n\
        \            <li>\n               <p>\n                  <code>CLICK</code>\
        \ - Click event for emails including wrapped links.\n                    Excludes\
        \ clicks for emails addressed to more than one recipient.</p>\n          \
        \  </li>\n         </ul>"
    ErrorMessage:
      type: string
    Esp:
      type: string
    Esps:
      type: array
      items:
        $ref: '#/components/schemas/Esp'
    EventBridgeDestination:
      type: object
      properties:
        EventBusArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          description: The Amazon Resource Name (ARN) of the Amazon EventBridge bus
            to publish email events to. Only the default bus is supported.
      required:
      - EventBusArn
      description: An object that defines an Amazon EventBridge destination for email
        events. You can use Amazon EventBridge to send notifications when certain
        email events occur.
    EventDestination:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/EventDestinationName'
          description: A name that identifies the event destination.
        Enabled:
          allOf:
          - $ref: '#/components/schemas/Enabled'
          description: 'If `true`, the event destination is enabled. When the event
            destination is enabled, the specified event types are sent to the destinations
            in this `EventDestinationDefinition`.


            If `false`, the event destination is disabled. When the event destination
            is disabled, events aren''t sent to the specified destinations.'
        MatchingEventTypes:
          allOf:
          - $ref: '#/components/schemas/EventTypes'
          description: "The types of events that Amazon SES sends to the specified\
            \ event destinations.\n\n  * `SEND` \\- The send request was successful\
            \ and SES will attempt to deliver the message to the recipient’s mail\
            \ server. (If account-level or global suppression is being used, SES will\
            \ still count it as a send, but delivery is suppressed.)\n\n  * `REJECT`\
            \ \\- SES accepted the email, but determined that it contained a virus\
            \ and didn’t attempt to deliver it to the recipient’s mail server.\n\n\
            \  * `BOUNCE` \\- (_Hard bounce_) The recipient's mail server permanently\
            \ rejected the email. (_Soft bounces_ are only included when SES fails\
            \ to deliver the email after retrying for a period of time.)\n\n  * `COMPLAINT`\
            \ \\- The email was successfully delivered to the recipient’s mail server,\
            \ but the recipient marked it as spam.\n\n  * `DELIVERY` \\- SES successfully\
            \ delivered the email to the recipient's mail server.\n\n  * `OPEN` \\\
            - The recipient received the message and opened it in their email client.\n\
            \n  * `CLICK` \\- The recipient clicked one or more links in the email.\n\
            \n  * `RENDERING_FAILURE` \\- The email wasn't sent because of a template\
            \ rendering issue. This event type can occur when template data is missing,\
            \ or when there is a mismatch between template parameters and data. (This\
            \ event type only occurs when you send email using the [ `SendTemplatedEmail`\
            \ ](https://docs.aws.amazon.com/ses/latest/APIReference/API_SendTemplatedEmail.html)\
            \ or [ `SendBulkTemplatedEmail` ](https://docs.aws.amazon.com/ses/latest/APIReference/API_SendBulkTemplatedEmail.html)\
            \ API operations.) \n\n  * `DELIVERY_DELAY` \\- The email couldn't be\
            \ delivered to the recipient’s mail server because a temporary issue occurred.\
            \ Delivery delays can occur, for example, when the recipient's inbox is\
            \ full, or when the receiving email server experiences a transient issue.\n\
            \n  * `SUBSCRIPTION` \\- The email was successfully delivered, but the\
            \ recipient updated their subscription preferences by clicking on an _unsubscribe_\
            \ link as part of your [subscription management](https://docs.aws.amazon.com/ses/latest/dg/sending-email-subscription-management.html)."
        KinesisFirehoseDestination:
          allOf:
          - $ref: '#/components/schemas/KinesisFirehoseDestination'
          description: An object that defines an Amazon Kinesis Data Firehose destination
            for email events. You can use Amazon Kinesis Data Firehose to stream data
            to other services, such as Amazon S3 and Amazon Redshift.
        CloudWatchDestination:
          allOf:
          - $ref: '#/components/schemas/CloudWatchDestination'
          description: An object that defines an Amazon CloudWatch destination for
            email events. You can use Amazon CloudWatch to monitor and gain insights
            on your email sending metrics.
        SnsDestination:
          allOf:
          - $ref: '#/components/schemas/SnsDestination'
          description: An object that defines an Amazon SNS destination for email
            events. You can use Amazon SNS to send notifications when certain email
            events occur.
        EventBridgeDestination:
          allOf:
          - $ref: '#/components/schemas/EventBridgeDestination'
          description: An object that defines an Amazon EventBridge destination for
            email events. You can use Amazon EventBridge to send notifications when
            certain email events occur.
        PinpointDestination:
          allOf:
          - $ref: '#/components/schemas/PinpointDestination'
          description: An object that defines an Amazon Pinpoint project destination
            for email events. You can send email event data to a Amazon Pinpoint project
            to view metrics using the Transactional Messaging dashboards that are
            built in to Amazon Pinpoint. For more information, see [Transactional
            Messaging Charts](https://docs.aws.amazon.com/pinpoint/latest/userguide/analytics-transactional-messages.html)
            in the _Amazon Pinpoint User Guide_.
      required:
      - Name
      - MatchingEventTypes
      description: In the Amazon SES API v2, _events_ include message sends, deliveries,
        opens, clicks, bounces, complaints and delivery delays. _Event destinations_
        are places that you can send information about these events to. For example,
        you can send event data to Amazon SNS to receive notifications when you receive
        bounces or complaints, or you can use Amazon Kinesis Data Firehose to stream
        data to Amazon S3 for long-term storage.
    EventDestinationDefinition:
      type: object
      properties:
        Enabled:
          allOf:
          - $ref: '#/components/schemas/Enabled'
          description: 'If `true`, the event destination is enabled. When the event
            destination is enabled, the specified event types are sent to the destinations
            in this `EventDestinationDefinition`.


            If `false`, the event destination is disabled. When the event destination
            is disabled, events aren''t sent to the specified destinations.'
        MatchingEventTypes:
          allOf:
          - $ref: '#/components/schemas/EventTypes'
          description: An array that specifies which events the Amazon SES API v2
            should send to the destinations in this `EventDestinationDefinition`.
        KinesisFirehoseDestination:
          allOf:
          - $ref: '#/components/schemas/KinesisFirehoseDestination'
          description: An object that defines an Amazon Kinesis Data Firehose destination
            for email events. You can use Amazon Kinesis Data Firehose to stream data
            to other services, such as Amazon S3 and Amazon Redshift.
        CloudWatchDestination:
          allOf:
          - $ref: '#/components/schemas/CloudWatchDestination'
          description: An object that defines an Amazon CloudWatch destination for
            email events. You can use Amazon CloudWatch to monitor and gain insights
            on your email sending metrics.
        SnsDestination:
          allOf:
          - $ref: '#/components/schemas/SnsDestination'
          description: An object that defines an Amazon SNS destination for email
            events. You can use Amazon SNS to send notifications when certain email
            events occur.
        EventBridgeDestination:
          allOf:
          - $ref: '#/components/schemas/EventBridgeDestination'
          description: An object that defines an Amazon EventBridge destination for
            email events. You can use Amazon EventBridge to send notifications when
            certain email events occur.
        PinpointDestination:
          allOf:
          - $ref: '#/components/schemas/PinpointDestination'
          description: An object that defines an Amazon Pinpoint project destination
            for email events. You can send email event data to a Amazon Pinpoint project
            to view metrics using the Transactional Messaging dashboards that are
            built in to Amazon Pinpoint. For more information, see [Transactional
            Messaging Charts](https://docs.aws.amazon.com/pinpoint/latest/userguide/analytics-transactional-messages.html)
            in the _Amazon Pinpoint User Guide_.
      description: An object that defines the event destination. Specifically, it
        defines which services receive events from emails sent using the configuration
        set that the event destination is associated with. Also defines the types
        of events that are sent to the event destination.
    EventDestinationName:
      type: string
    EventDestinations:
      type: array
      items:
        $ref: '#/components/schemas/EventDestination'
    EventDetails:
      type: object
      properties:
        Bounce:
          allOf:
          - $ref: '#/components/schemas/Bounce'
          description: Information about a `Bounce` event.
        Complaint:
          allOf:
          - $ref: '#/components/schemas/Complaint'
          description: Information about a `Complaint` event.
      description: Contains a `Bounce` object if the event type is `BOUNCE`. Contains
        a `Complaint` object if the event type is `COMPLAINT`.
    EventType:
      type: string
      enum:
      - SEND
      - REJECT
      - BOUNCE
      - COMPLAINT
      - DELIVERY
      - OPEN
      - CLICK
      - RENDERING_FAILURE
      - DELIVERY_DELAY
      - SUBSCRIPTION
      description: "<p>An email sending event type. For example, email sends, opens,\
        \ and bounces are all\n            email events.</p>"
    EventTypes:
      type: array
      items:
        $ref: '#/components/schemas/EventType'
    ExportDataSource:
      type: object
      properties:
        MetricsDataSource:
          $ref: '#/components/schemas/MetricsDataSource'
        MessageInsightsDataSource:
          $ref: '#/components/schemas/MessageInsightsDataSource'
      description: An object that contains details about the data source of the export
        job. It can only contain one of `MetricsDataSource` or `MessageInsightsDataSource`
        object.
    ExportDestination:
      type: object
      properties:
        DataFormat:
          allOf:
          - $ref: '#/components/schemas/DataFormat'
          description: "The data format of the final export job file, can be one of\
            \ the following:\n\n  * `CSV` \\- A comma-separated values file.\n\n \
            \ * `JSON` \\- A Json file."
        S3Url:
          allOf:
          - $ref: '#/components/schemas/S3Url'
          description: An Amazon S3 pre-signed URL that points to the generated export
            file.
      required:
      - DataFormat
      description: An object that contains details about the destination of the export
        job.
    ExportDimensionValue:
      type: array
      items:
        $ref: '#/components/schemas/MetricDimensionValue'
    ExportDimensions:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/ExportDimensionValue'
    ExportJobSummary:
      type: object
      properties:
        JobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          description: The export job ID.
        ExportSourceType:
          allOf:
          - $ref: '#/components/schemas/ExportSourceType'
          description: The source type of the export job.
        JobStatus:
          allOf:
          - $ref: '#/components/schemas/JobStatus'
          description: The status of the export job.
        CreatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp of when the export job was created.
        CompletedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp of when the export job was completed.
      description: A summary of the export job.
    ExportJobSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/ExportJobSummary'
      description: <p>A list of the export job summaries.</p>
    ExportMetric:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/Metric'
        Aggregation:
          $ref: '#/components/schemas/MetricAggregation'
      description: An object that contains a mapping between a `Metric` and `MetricAggregation`.
    ExportMetrics:
      type: array
      items:
        $ref: '#/components/schemas/ExportMetric'
    ExportSourceType:
      type: string
      enum:
      - METRICS_DATA
      - MESSAGE_INSIGHTS
      description: "<p>The type of data source of an export, can be one of the following:</p>\n\
        \         <ul>\n            <li>\n               <p>\n                  <code>METRICS_DATA</code>\
        \ - The metrics export.</p>\n            </li>\n            <li>\n       \
        \        <p>\n                  <code>MESSAGE_INSIGHTS</code> - The Message\
        \ Insights export.</p>\n            </li>\n         </ul>"
    ExportStatistics:
      type: object
      properties:
        ProcessedRecordsCount:
          allOf:
          - $ref: '#/components/schemas/ProcessedRecordsCount'
          description: The number of records that were processed to generate the final
            export file.
        ExportedRecordsCount:
          allOf:
          - $ref: '#/components/schemas/ExportedRecordsCount'
          description: 'The number of records that were exported to the final export
            file.


            This value might not be available for all export source types'
      description: Statistics about the execution of an export job.
    ExportedRecordsCount:
      type: integer
    FailedRecordsCount:
      type: integer
    FailedRecordsS3Url:
      type: string
    FailureInfo:
      type: object
      properties:
        FailedRecordsS3Url:
          allOf:
          - $ref: '#/components/schemas/FailedRecordsS3Url'
          description: An Amazon S3 pre-signed URL that contains all the failed records
            and related information.
        ErrorMessage:
          allOf:
          - $ref: '#/components/schemas/ErrorMessage'
          description: A message about why the job failed.
      description: An object that contains the failure details about a job.
    FailureRedirectionURL:
      type: string
    FeatureStatus:
      type: string
      enum:
      - ENABLED
      - DISABLED
    FeedbackId:
      type: string
    GeneralEnforcementStatus:
      type: string
    GetAccountRequest:
      type: object
      properties: {}
      description: A request to obtain information about the email-sending capabilities
        of your Amazon SES account.
    GetAccountResponse:
      type: object
      properties:
        DedicatedIpAutoWarmupEnabled:
          allOf:
          - $ref: '#/components/schemas/Enabled'
          description: Indicates whether or not the automatic warm-up feature is enabled
            for dedicated IP addresses that are associated with your account.
        EnforcementStatus:
          allOf:
          - $ref: '#/components/schemas/GeneralEnforcementStatus'
          description: "The reputation status of your Amazon SES account. The status\
            \ can be one of the following:\n\n  * `HEALTHY` – There are no reputation-related\
            \ issues that currently impact your account.\n\n  * `PROBATION` – We've\
            \ identified potential issues with your Amazon SES account. We're placing\
            \ your account under review while you work on correcting these issues.\n\
            \n  * `SHUTDOWN` – Your account's ability to send email is currently paused\
            \ because of an issue with the email sent from your account. When you\
            \ correct the issue, you can contact us and request that your account's\
            \ ability to send email is resumed."
        ProductionAccessEnabled:
          allOf:
          - $ref: '#/components/schemas/Enabled'
          description: 'Indicates whether or not your account has production access
            in the current Amazon Web Services Region.


            If the value is `false`, then your account is in the _sandbox_. When your
            account is in the sandbox, you can only send email to verified identities.


            If the value is `true`, then your account has production access. When
            your account has production access, you can send email to any address.
            The sending quota and maximum sending rate for your account vary based
            on your specific use case.'
        SendQuota:
          allOf:
          - $ref: '#/components/schemas/SendQuota'
          description: An object that contains information about the per-day and per-second
            sending limits for your Amazon SES account in the current Amazon Web Services
            Region.
        SendingEnabled:
          allOf:
          - $ref: '#/components/schemas/Enabled'
          description: Indicates whether or not email sending is enabled for your
            Amazon SES account in the current Amazon Web Services Region.
        SuppressionAttributes:
          allOf:
          - $ref: '#/components/schemas/SuppressionAttributes'
          description: An object that contains information about the email address
            suppression preferences for your account in the current Amazon Web Services
            Region.
        Details:
          allOf:
          - $ref: '#/components/schemas/AccountDetails'
          description: An object that defines your account details.
        VdmAttributes:
          allOf:
          - $ref: '#/components/schemas/VdmAttributes'
          description: The VDM attributes that apply to your Amazon SES account.
      description: A list of details about the email-sending capabilities of your
        Amazon SES account in the current Amazon Web Services Region.
    GetBlacklistReportsRequest:
      type: object
      properties:
        BlacklistItemNames:
          allOf:
          - $ref: '#/components/schemas/BlacklistItemNames'
          description: A list of IP addresses that you want to retrieve blacklist
            information about. You can only specify the dedicated IP addresses that
            you use to send email using Amazon SES or Amazon Pinpoint.
      required:
      - BlacklistItemNames
      description: A request to retrieve a list of the blacklists that your dedicated
        IP addresses appear on.
    GetBlacklistReportsResponse:
      type: object
      properties:
        BlacklistReport:
          allOf:
          - $ref: '#/components/schemas/BlacklistReport'
          description: An object that contains information about a blacklist that
            one of your dedicated IP addresses appears on.
      required:
      - BlacklistReport
      description: An object that contains information about blacklist events.
    GetConfigurationSetEventDestinationsRequest:
      type: object
      properties:
        ConfigurationSetName:
          allOf:
          - $ref: '#/components/schemas/ConfigurationSetName'
          description: The name of the configuration set that contains the event destination.
      required:
      - ConfigurationSetName
      description: A request to obtain information about the event destinations for
        a configuration set.
    GetConfigurationSetEventDestinationsResponse:
      type: object
      properties:
        EventDestinations:
          allOf:
          - $ref: '#/components/schemas/EventDestinations'
          description: An array that includes all of the events destinations that
            have been configured for the configuration set.
      description: Information about an event destination for a configuration set.
    GetConfigurationSetRequest:
      type: object
      properties:
        ConfigurationSetName:
          allOf:
          - $ref: '#/components/schemas/ConfigurationSetName'
          description: The name of the configuration set.
      required:
      - ConfigurationSetName
      description: A request to obtain information about a configuration set.
    GetConfigurationSetResponse:
      type: object
      properties:
        ConfigurationSetName:
          allOf:
          - $ref: '#/components/schemas/ConfigurationSetName'
          description: The name of the configuration set.
        TrackingOptions:
          allOf:
          - $ref: '#/components/schemas/TrackingOptions'
          description: An object that defines the open and click tracking options
            for emails that you send using the configuration set.
        DeliveryOptions:
          allOf:
          - $ref: '#/components/schemas/DeliveryOptions'
          description: An object that defines the dedicated IP pool that is used to
            send emails that you send using the configuration set.
        ReputationOptions:
          allOf:
          - $ref: '#/components/schemas/ReputationOptions'
          description: An object that defines whether or not Amazon SES collects reputation
            metrics for the emails that you send that use the configuration set.
        SendingOptions:
          allOf:
          - $ref: '#/components/schemas/SendingOptions'
          description: An object that defines whether or not Amazon SES can send email
            that you send using the configuration set.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: An array of objects that define the tags (keys and values)
            that are associated with the configuration set.
        SuppressionOptions:
          allOf:
          - $ref: '#/components/schemas/SuppressionOptions'
          description: An object that contains information about the suppression list
            preferences for your account.
        VdmOptions:
          allOf:
          - $ref: '#/components/schemas/VdmOptions'
          description: An object that contains information about the VDM preferences
            for your configuration set.
        ArchivingOptions:
          allOf:
          - $ref: '#/components/schemas/ArchivingOptions'
          description: An object that defines the MailManager archive where sent emails
            are archived that you send using the configuration set.
      description: Information about a configuration set.
    GetContactListRequest:
      type: object
      properties:
        ContactListName:
          allOf:
          - $ref: '#/components/schemas/ContactListName'
          description: The name of the contact list.
      required:
      - ContactListName
    GetContactListResponse:
      type: object
      properties:
        ContactListName:
          allOf:
          - $ref: '#/components/schemas/ContactListName'
          description: The name of the contact list.
        Topics:
          allOf:
          - $ref: '#/components/schemas/Topics'
          description: An interest group, theme, or label within a list. A contact
            list can have multiple topics.
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: A description of what the contact list is about.
        CreatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: A timestamp noting when the contact list was created.
        LastUpdatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: A timestamp noting the last time the contact list was updated.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: The tags associated with a contact list.
    GetContactRequest:
      type: object
      properties:
        ContactListName:
          allOf:
          - $ref: '#/components/schemas/ContactListName'
          description: The name of the contact list to which the contact belongs.
        EmailAddress:
          allOf:
          - $ref: '#/components/schemas/EmailAddress'
          description: The contact's email address.
      required:
      - ContactListName
      - EmailAddress
    GetContactResponse:
      type: object
      properties:
        ContactListName:
          allOf:
          - $ref: '#/components/schemas/ContactListName'
          description: The name of the contact list to which the contact belongs.
        EmailAddress:
          allOf:
          - $ref: '#/components/schemas/EmailAddress'
          description: The contact's email address.
        TopicPreferences:
          allOf:
          - $ref: '#/components/schemas/TopicPreferenceList'
          description: The contact's preference for being opted-in to or opted-out
            of a topic.>
        TopicDefaultPreferences:
          allOf:
          - $ref: '#/components/schemas/TopicPreferenceList'
          description: The default topic preferences applied to the contact.
        UnsubscribeAll:
          allOf:
          - $ref: '#/components/schemas/UnsubscribeAll'
          description: A boolean value status noting if the contact is unsubscribed
            from all contact list topics.
        AttributesData:
          allOf:
          - $ref: '#/components/schemas/AttributesData'
          description: The attribute data attached to a contact.
        CreatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: A timestamp noting when the contact was created.
        LastUpdatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: A timestamp noting the last time the contact's information
            was updated.
    GetCustomVerificationEmailTemplateRequest:
      type: object
      properties:
        TemplateName:
          allOf:
          - $ref: '#/components/schemas/EmailTemplateName'
          description: The name of the custom verification email template that you
            want to retrieve.
      required:
      - TemplateName
      description: Represents a request to retrieve an existing custom verification
        email template.
    GetCustomVerificationEmailTemplateResponse:
      type: object
      properties:
        TemplateName:
          allOf:
          - $ref: '#/components/schemas/EmailTemplateName'
          description: The name of the custom verification email template.
        FromEmailAddress:
          allOf:
          - $ref: '#/components/schemas/EmailAddress'
          description: The email address that the custom verification email is sent
            from.
        TemplateSubject:
          allOf:
          - $ref: '#/components/schemas/EmailTemplateSubject'
          description: The subject line of the custom verification email.
        TemplateContent:
          allOf:
          - $ref: '#/components/schemas/TemplateContent'
          description: The content of the custom verification email.
        SuccessRedirectionURL:
          allOf:
          - $ref: '#/components/schemas/SuccessRedirectionURL'
          description: The URL that the recipient of the verification email is sent
            to if his or her address is successfully verified.
        FailureRedirectionURL:
          allOf:
          - $ref: '#/components/schemas/FailureRedirectionURL'
          description: The URL that the recipient of the verification email is sent
            to if his or her address is not successfully verified.
      description: The following elements are returned by the service.
    GetDedicatedIpPoolRequest:
      type: object
      properties:
        PoolName:
          allOf:
          - $ref: '#/components/schemas/PoolName'
          description: The name of the dedicated IP pool to retrieve.
      required:
      - PoolName
      description: A request to obtain more information about a dedicated IP pool.
    GetDedicatedIpPoolResponse:
      type: object
      properties:
        DedicatedIpPool:
          allOf:
          - $ref: '#/components/schemas/DedicatedIpPool'
          description: An object that contains information about a dedicated IP pool.
      description: The following element is returned by the service.
    GetDedicatedIpRequest:
      type: object
      properties:
        Ip:
          allOf:
          - $ref: '#/components/schemas/Ip'
          description: The IP address that you want to obtain more information about.
            The value you specify has to be a dedicated IP address that's assocaited
            with your Amazon Web Services account.
      required:
      - Ip
      description: A request to obtain more information about a dedicated IP address.
    GetDedicatedIpResponse:
      type: object
      properties:
        DedicatedIp:
          allOf:
          - $ref: '#/components/schemas/DedicatedIp'
          description: An object that contains information about a dedicated IP address.
      description: Information about a dedicated IP address.
    GetDedicatedIpsRequest:
      type: object
      properties:
        PoolName:
          allOf:
          - $ref: '#/components/schemas/PoolName'
          description: The name of the IP pool that the dedicated IP address is associated
            with.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A token returned from a previous call to `GetDedicatedIps`
            to indicate the position of the dedicated IP pool in the list of IP pools.
        PageSize:
          allOf:
          - $ref: '#/components/schemas/MaxItems'
          description: The number of results to show in a single call to `GetDedicatedIpsRequest`.
            If the number of results is larger than the number you specified in this
            parameter, then the response includes a `NextToken` element, which you
            can use to obtain additional results.
      description: A request to obtain more information about dedicated IP pools.
    GetDedicatedIpsResponse:
      type: object
      properties:
        DedicatedIps:
          allOf:
          - $ref: '#/components/schemas/DedicatedIpList'
          description: A list of dedicated IP addresses that are associated with your
            Amazon Web Services account.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A token that indicates that there are additional dedicated
            IP addresses to list. To view additional addresses, issue another request
            to `GetDedicatedIps`, passing this token in the `NextToken` parameter.
      description: Information about the dedicated IP addresses that are associated
        with your Amazon Web Services account.
    GetDeliverabilityDashboardOptionsRequest:
      type: object
      properties: {}
      description: 'Retrieve information about the status of the Deliverability dashboard
        for your Amazon Web Services account. When the Deliverability dashboard is
        enabled, you gain access to reputation, deliverability, and other metrics
        for your domains. You also gain the ability to perform predictive inbox placement
        tests.


        When you use the Deliverability dashboard, you pay a monthly subscription
        charge, in addition to any other fees that you accrue by using Amazon SES
        and other Amazon Web Services services. For more information about the features
        and cost of a Deliverability dashboard subscription, see [Amazon Pinpoint
        Pricing](http://aws.amazon.com/pinpoint/pricing/).'
    GetDeliverabilityDashboardOptionsResponse:
      type: object
      properties:
        DashboardEnabled:
          allOf:
          - $ref: '#/components/schemas/Enabled'
          description: Specifies whether the Deliverability dashboard is enabled.
            If this value is `true`, the dashboard is enabled.
        SubscriptionExpiryDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date when your current subscription to the Deliverability
            dashboard is scheduled to expire, if your subscription is scheduled to
            expire at the end of the current calendar month. This value is null if
            you have an active subscription that isn’t due to expire at the end of
            the month.
        AccountStatus:
          allOf:
          - $ref: '#/components/schemas/DeliverabilityDashboardAccountStatus'
          description: The current status of your Deliverability dashboard subscription.
            If this value is `PENDING_EXPIRATION`, your subscription is scheduled
            to expire at the end of the current calendar month.
        ActiveSubscribedDomains:
          allOf:
          - $ref: '#/components/schemas/DomainDeliverabilityTrackingOptions'
          description: An array of objects, one for each verified domain that you
            use to send email and currently has an active Deliverability dashboard
            subscription that isn’t scheduled to expire at the end of the current
            calendar month.
        PendingExpirationSubscribedDomains:
          allOf:
          - $ref: '#/components/schemas/DomainDeliverabilityTrackingOptions'
          description: An array of objects, one for each verified domain that you
            use to send email and currently has an active Deliverability dashboard
            subscription that's scheduled to expire at the end of the current calendar
            month.
      required:
      - DashboardEnabled
      description: An object that shows the status of the Deliverability dashboard.
    GetDeliverabilityTestReportRequest:
      type: object
      properties:
        ReportId:
          allOf:
          - $ref: '#/components/schemas/ReportId'
          description: A unique string that identifies the predictive inbox placement
            test.
      required:
      - ReportId
      description: A request to retrieve the results of a predictive inbox placement
        test.
    GetDeliverabilityTestReportResponse:
      type: object
      properties:
        DeliverabilityTestReport:
          allOf:
          - $ref: '#/components/schemas/DeliverabilityTestReport'
          description: An object that contains the results of the predictive inbox
            placement test.
        OverallPlacement:
          allOf:
          - $ref: '#/components/schemas/PlacementStatistics'
          description: An object that specifies how many test messages that were sent
            during the predictive inbox placement test were delivered to recipients'
            inboxes, how many were sent to recipients' spam folders, and how many
            weren't delivered.
        IspPlacements:
          allOf:
          - $ref: '#/components/schemas/IspPlacements'
          description: An object that describes how the test email was handled by
            several email providers, including Gmail, Hotmail, Yahoo, AOL, and others.
        Message:
          allOf:
          - $ref: '#/components/schemas/MessageContent'
          description: An object that contains the message that you sent when you
            performed this predictive inbox placement test.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: An array of objects that define the tags (keys and values)
            that are associated with the predictive inbox placement test.
      required:
      - DeliverabilityTestReport
      - OverallPlacement
      - IspPlacements
      description: The results of the predictive inbox placement test.
    GetDomainDeliverabilityCampaignRequest:
      type: object
      properties:
        CampaignId:
          allOf:
          - $ref: '#/components/schemas/CampaignId'
          description: The unique identifier for the campaign. The Deliverability
            dashboard automatically generates and assigns this identifier to a campaign.
      required:
      - CampaignId
      description: Retrieve all the deliverability data for a specific campaign. This
        data is available for a campaign only if the campaign sent email by using
        a domain that the Deliverability dashboard is enabled for (`PutDeliverabilityDashboardOption`
        operation).
    GetDomainDeliverabilityCampaignResponse:
      type: object
      properties:
        DomainDeliverabilityCampaign:
          allOf:
          - $ref: '#/components/schemas/DomainDeliverabilityCampaign'
          description: An object that contains the deliverability data for the campaign.
      required:
      - DomainDeliverabilityCampaign
      description: An object that contains all the deliverability data for a specific
        campaign. This data is available for a campaign only if the campaign sent
        email by using a domain that the Deliverability dashboard is enabled for.
    GetDomainStatisticsReportRequest:
      type: object
      properties:
        Domain:
          allOf:
          - $ref: '#/components/schemas/Identity'
          description: The domain that you want to obtain deliverability metrics for.
        StartDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The first day (in Unix time) that you want to obtain domain
            deliverability metrics for.
        EndDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The last day (in Unix time) that you want to obtain domain
            deliverability metrics for. The `EndDate` that you specify has to be less
            than or equal to 30 days after the `StartDate`.
      required:
      - Domain
      - StartDate
      - EndDate
      description: A request to obtain deliverability metrics for a domain.
    GetDomainStatisticsReportResponse:
      type: object
      properties:
        OverallVolume:
          allOf:
          - $ref: '#/components/schemas/OverallVolume'
          description: An object that contains deliverability metrics for the domain
            that you specified. The data in this object is a summary of all of the
            data that was collected from the `StartDate` to the `EndDate`.
        DailyVolumes:
          allOf:
          - $ref: '#/components/schemas/DailyVolumes'
          description: An object that contains deliverability metrics for the domain
            that you specified. This object contains data for each day, starting on
            the `StartDate` and ending on the `EndDate`.
      required:
      - OverallVolume
      - DailyVolumes
      description: An object that includes statistics that are related to the domain
        that you specified.
    GetEmailIdentityPoliciesRequest:
      type: object
      properties:
        EmailIdentity:
          allOf:
          - $ref: '#/components/schemas/Identity'
          description: The email identity.
      required:
      - EmailIdentity
      description: A request to return the policies of an email identity.
    GetEmailIdentityPoliciesResponse:
      type: object
      properties:
        Policies:
          allOf:
          - $ref: '#/components/schemas/PolicyMap'
          description: A map of policy names to policies.
      description: Identity policies associated with email identity.
    GetEmailIdentityRequest:
      type: object
      properties:
        EmailIdentity:
          allOf:
          - $ref: '#/components/schemas/Identity'
          description: The email identity.
      required:
      - EmailIdentity
      description: A request to return details about an email identity.
    GetEmailIdentityResponse:
      type: object
      properties:
        IdentityType:
          allOf:
          - $ref: '#/components/schemas/IdentityType'
          description: 'The email identity type. Note: the `MANAGED_DOMAIN` identity
            type is not supported.'
        FeedbackForwardingStatus:
          allOf:
          - $ref: '#/components/schemas/Enabled'
          description: 'The feedback forwarding configuration for the identity.


            If the value is `true`, you receive email notifications when bounce or
            complaint events occur. These notifications are sent to the address that
            you specified in the `Return-Path` header of the original email.


            You''re required to have a method of tracking bounces and complaints.
            If you haven''t set up another mechanism for receiving bounce or complaint
            notifications (for example, by setting up an event destination), you receive
            an email notification when these events occur (even if this setting is
            disabled).'
        VerifiedForSendingStatus:
          allOf:
          - $ref: '#/components/schemas/Enabled'
          description: Specifies whether or not the identity is verified. You can
            only send email from verified email addresses or domains. For more information
            about verifying identities, see the [Amazon Pinpoint User Guide](https://docs.aws.amazon.com/pinpoint/latest/userguide/channels-email-manage-verify.html).
        DkimAttributes:
          allOf:
          - $ref: '#/components/schemas/DkimAttributes'
          description: An object that contains information about the DKIM attributes
            for the identity.
        MailFromAttributes:
          allOf:
          - $ref: '#/components/schemas/MailFromAttributes'
          description: An object that contains information about the Mail-From attributes
            for the email identity.
        Policies:
          allOf:
          - $ref: '#/components/schemas/PolicyMap'
          description: A map of policy names to policies.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: An array of objects that define the tags (keys and values)
            that are associated with the email identity.
        ConfigurationSetName:
          allOf:
          - $ref: '#/components/schemas/ConfigurationSetName'
          description: The configuration set used by default when sending from this
            identity.
        VerificationStatus:
          allOf:
          - $ref: '#/components/schemas/VerificationStatus'
          description: "The verification status of the identity. The status can be\
            \ one of the following:\n\n  * `PENDING` – The verification process was\
            \ initiated, but Amazon SES hasn't yet been able to verify the identity.\n\
            \n  * `SUCCESS` – The verification process completed successfully.\n\n\
            \  * `FAILED` – The verification process failed.\n\n  * `TEMPORARY_FAILURE`\
            \ – A temporary issue is preventing Amazon SES from determining the verification\
            \ status of the identity.\n\n  * `NOT_STARTED` – The verification process\
            \ hasn't been initiated for the identity."
        VerificationInfo:
          allOf:
          - $ref: '#/components/schemas/VerificationInfo'
          description: An object that contains additional information about the verification
            status for the identity.
      description: Details about an email identity.
    GetEmailTemplateRequest:
      type: object
      properties:
        TemplateName:
          allOf:
          - $ref: '#/components/schemas/EmailTemplateName'
          description: The name of the template.
      required:
      - TemplateName
      description: Represents a request to display the template object (which includes
        the subject line, HTML part and text part) for the template you specify.
    GetEmailTemplateResponse:
      type: object
      properties:
        TemplateName:
          allOf:
          - $ref: '#/components/schemas/EmailTemplateName'
          description: The name of the template.
        TemplateContent:
          allOf:
          - $ref: '#/components/schemas/EmailTemplateContent'
          description: The content of the email template, composed of a subject line,
            an HTML part, and a text-only part.
      required:
      - TemplateName
      - TemplateContent
      description: The following element is returned by the service.
    GetExportJobRequest:
      type: object
      properties:
        JobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          description: The export job ID.
      required:
      - JobId
      description: Represents a request to retrieve information about an export job
        using the export job ID.
    GetExportJobResponse:
      type: object
      properties:
        JobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          description: The export job ID.
        ExportSourceType:
          allOf:
          - $ref: '#/components/schemas/ExportSourceType'
          description: The type of source of the export job.
        JobStatus:
          allOf:
          - $ref: '#/components/schemas/JobStatus'
          description: The status of the export job.
        ExportDestination:
          allOf:
          - $ref: '#/components/schemas/ExportDestination'
          description: The destination of the export job.
        ExportDataSource:
          allOf:
          - $ref: '#/components/schemas/ExportDataSource'
          description: The data source of the export job.
        CreatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp of when the export job was created.
        CompletedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp of when the export job was completed.
        FailureInfo:
          allOf:
          - $ref: '#/components/schemas/FailureInfo'
          description: The failure details about an export job.
        Statistics:
          allOf:
          - $ref: '#/components/schemas/ExportStatistics'
          description: The statistics about the export job.
      description: An HTTP 200 response if the request succeeds, or an error message
        if the request fails.
    GetImportJobRequest:
      type: object
      properties:
        JobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          description: The ID of the import job.
      required:
      - JobId
      description: Represents a request for information about an import job using
        the import job ID.
    GetImportJobResponse:
      type: object
      properties:
        JobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          description: A string that represents the import job ID.
        ImportDestination:
          allOf:
          - $ref: '#/components/schemas/ImportDestination'
          description: The destination of the import job.
        ImportDataSource:
          allOf:
          - $ref: '#/components/schemas/ImportDataSource'
          description: The data source of the import job.
        FailureInfo:
          allOf:
          - $ref: '#/components/schemas/FailureInfo'
          description: The failure details about an import job.
        JobStatus:
          allOf:
          - $ref: '#/components/schemas/JobStatus'
          description: The status of the import job.
        CreatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time stamp of when the import job was created.
        CompletedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time stamp of when the import job was completed.
        ProcessedRecordsCount:
          allOf:
          - $ref: '#/components/schemas/ProcessedRecordsCount'
          description: The current number of records processed.
        FailedRecordsCount:
          allOf:
          - $ref: '#/components/schemas/FailedRecordsCount'
          description: The number of records that failed processing because of invalid
            input or other reasons.
      description: An HTTP 200 response if the request succeeds, or an error message
        if the request fails.
    GetMessageInsightsRequest:
      type: object
      properties:
        MessageId:
          allOf:
          - $ref: '#/components/schemas/OutboundMessageId'
          description: A `MessageId` is a unique identifier for a message, and is
            returned when sending emails through Amazon SES.
      required:
      - MessageId
      description: A request to return information about a message.
    GetMessageInsightsResponse:
      type: object
      properties:
        MessageId:
          allOf:
          - $ref: '#/components/schemas/OutboundMessageId'
          description: A unique identifier for the message.
        FromEmailAddress:
          allOf:
          - $ref: '#/components/schemas/InsightsEmailAddress'
          description: The from address used to send the message.
        Subject:
          allOf:
          - $ref: '#/components/schemas/EmailSubject'
          description: The subject line of the message.
        EmailTags:
          allOf:
          - $ref: '#/components/schemas/MessageTagList'
          description: A list of tags, in the form of name/value pairs, that were
            applied to the email you sent, along with Amazon SES [Auto-Tags](https://docs.aws.amazon.com/ses/latest/dg/monitor-using-event-publishing.html).
        Insights:
          allOf:
          - $ref: '#/components/schemas/EmailInsightsList'
          description: A set of insights associated with the message.
      description: Information about a message.
    GetMultiRegionEndpointRequest:
      type: object
      properties:
        EndpointName:
          allOf:
          - $ref: '#/components/schemas/EndpointName'
          description: The name of the multi-region endpoint (global-endpoint).
      required:
      - EndpointName
      description: Represents a request to display the multi-region endpoint (global-endpoint).
    GetMultiRegionEndpointResponse:
      type: object
      properties:
        EndpointName:
          allOf:
          - $ref: '#/components/schemas/EndpointName'
          description: The name of the multi-region endpoint (global-endpoint).
        EndpointId:
          allOf:
          - $ref: '#/components/schemas/EndpointId'
          description: The ID of the multi-region endpoint (global-endpoint).
        Routes:
          allOf:
          - $ref: '#/components/schemas/Routes'
          description: Contains routes information for the multi-region endpoint (global-endpoint).
        Status:
          allOf:
          - $ref: '#/components/schemas/Status'
          description: "The status of the multi-region endpoint (global-endpoint).\n\
            \n  * `CREATING` – The resource is being provisioned.\n\n  * `READY` –\
            \ The resource is ready to use.\n\n  * `FAILED` – The resource failed\
            \ to be provisioned.\n\n  * `DELETING` – The resource is being deleted\
            \ as requested."
        CreatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time stamp of when the multi-region endpoint (global-endpoint)
            was created.
        LastUpdatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time stamp of when the multi-region endpoint (global-endpoint)
            was last updated.
      description: An HTTP 200 response if the request succeeds, or an error message
        if the request fails.
    GetSuppressedDestinationRequest:
      type: object
      properties:
        EmailAddress:
          allOf:
          - $ref: '#/components/schemas/EmailAddress'
          description: The email address that's on the account suppression list.
      required:
      - EmailAddress
      description: A request to retrieve information about an email address that's
        on the suppression list for your account.
    GetSuppressedDestinationResponse:
      type: object
      properties:
        SuppressedDestination:
          allOf:
          - $ref: '#/components/schemas/SuppressedDestination'
          description: An object containing information about the suppressed email
            address.
      required:
      - SuppressedDestination
      description: Information about the suppressed email address.
    GuardianAttributes:
      type: object
      properties:
        OptimizedSharedDelivery:
          allOf:
          - $ref: '#/components/schemas/FeatureStatus'
          description: "Specifies the status of your VDM optimized shared delivery.\
            \ Can be one of the following:\n\n  * `ENABLED` – Amazon SES enables optimized\
            \ shared delivery for your account.\n\n  * `DISABLED` – Amazon SES disables\
            \ optimized shared delivery for your account."
      description: An object containing additional settings for your VDM configuration
        as applicable to the Guardian.
    GuardianOptions:
      type: object
      properties:
        OptimizedSharedDelivery:
          allOf:
          - $ref: '#/components/schemas/FeatureStatus'
          description: "Specifies the status of your VDM optimized shared delivery.\
            \ Can be one of the following:\n\n  * `ENABLED` – Amazon SES enables optimized\
            \ shared delivery for the configuration set.\n\n  * `DISABLED` – Amazon\
            \ SES disables optimized shared delivery for the configuration set."
      description: An object containing additional settings for your VDM configuration
        as applicable to the Guardian.
    HttpsPolicy:
      type: string
      enum:
      - REQUIRE
      - REQUIRE_OPEN_ONLY
      - OPTIONAL
      description: "<p>The https policy to use for tracking open and click events.\
        \ If the value is OPTIONAL or HttpsPolicy is not\n        specified, the open\
        \ trackers use HTTP and click tracker use the original protocol of the link.\n\
        \        If the value is REQUIRE, both open and click tracker uses HTTPS and\
        \ if the value is REQUIRE_OPEN_ONLY\n            open tracker uses HTTPS and\
        \ link tracker is same as original protocol of the link.\n        </p>"
    Identity:
      type: string
      minLength: 1
    IdentityInfo:
      type: object
      properties:
        IdentityType:
          allOf:
          - $ref: '#/components/schemas/IdentityType'
          description: 'The email identity type. Note: the `MANAGED_DOMAIN` type is
            not supported for email identity types.'
        IdentityName:
          allOf:
          - $ref: '#/components/schemas/Identity'
          description: The address or domain of the identity.
        SendingEnabled:
          allOf:
          - $ref: '#/components/schemas/Enabled'
          description: 'Indicates whether or not you can send email from the identity.


            An _identity_ is an email address or domain that you send email from.
            Before you can send email from an identity, you have to demostrate that
            you own the identity, and that you authorize Amazon SES to send email
            from that identity.'
        VerificationStatus:
          allOf:
          - $ref: '#/components/schemas/VerificationStatus'
          description: "The verification status of the identity. The status can be\
            \ one of the following:\n\n  * `PENDING` – The verification process was\
            \ initiated, but Amazon SES hasn't yet been able to verify the identity.\n\
            \n  * `SUCCESS` – The verification process completed successfully.\n\n\
            \  * `FAILED` – The verification process failed.\n\n  * `TEMPORARY_FAILURE`\
            \ – A temporary issue is preventing Amazon SES from determining the verification\
            \ status of the identity.\n\n  * `NOT_STARTED` – The verification process\
            \ hasn't been initiated for the identity."
      description: Information about an email identity.
    IdentityInfoList:
      type: array
      items:
        $ref: '#/components/schemas/IdentityInfo'
    IdentityType:
      type: string
      enum:
      - EMAIL_ADDRESS
      - DOMAIN
      - MANAGED_DOMAIN
    ImageUrl:
      type: string
    ImportDataSource:
      type: object
      properties:
        S3Url:
          allOf:
          - $ref: '#/components/schemas/S3Url'
          description: An Amazon S3 URL in the format s3://__/__.
        DataFormat:
          allOf:
          - $ref: '#/components/schemas/DataFormat'
          description: The data format of the import job's data source.
      required:
      - S3Url
      - DataFormat
      description: An object that contains details about the data source of the import
        job.
    ImportDestination:
      type: object
      properties:
        SuppressionListDestination:
          allOf:
          - $ref: '#/components/schemas/SuppressionListDestination'
          description: An object that contains the action of the import job towards
            suppression list.
        ContactListDestination:
          allOf:
          - $ref: '#/components/schemas/ContactListDestination'
          description: An object that contains the action of the import job towards
            a contact list.
      description: An object that contains details about the resource destination
        the import job is going to target.
    ImportDestinationType:
      type: string
      enum:
      - SUPPRESSION_LIST
      - CONTACT_LIST
      description: "<p>The destination of the import job, which can be used to list\
        \ import jobs that have a\n            certain <code>ImportDestinationType</code>.</p>"
    ImportJobSummary:
      type: object
      properties:
        JobId:
          $ref: '#/components/schemas/JobId'
        ImportDestination:
          $ref: '#/components/schemas/ImportDestination'
        JobStatus:
          $ref: '#/components/schemas/JobStatus'
        CreatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time when the import job was created.
        ProcessedRecordsCount:
          allOf:
          - $ref: '#/components/schemas/ProcessedRecordsCount'
          description: The current number of records processed.
        FailedRecordsCount:
          allOf:
          - $ref: '#/components/schemas/FailedRecordsCount'
          description: The number of records that failed processing because of invalid
            input or other reasons.
      description: A summary of the import job.
    ImportJobSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/ImportJobSummary'
      description: <p>A list of the import job summaries.</p>
    InboxPlacementTrackingOption:
      type: object
      properties:
        Global:
          allOf:
          - $ref: '#/components/schemas/Enabled'
          description: Specifies whether inbox placement data is being tracked for
            the domain.
        TrackedIsps:
          allOf:
          - $ref: '#/components/schemas/IspNameList'
          description: An array of strings, one for each major email provider that
            the inbox placement data applies to.
      description: An object that contains information about the inbox placement data
        settings for a verified domain that’s associated with your Amazon Web Services
        account. This data is available only if you enabled the Deliverability dashboard
        for the domain.
    InsightsEmailAddress:
      type: string
      minLength: 1
      maxLength: 320
    InsightsEvent:
      type: object
      properties:
        Timestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp of the event.
        Type:
          allOf:
          - $ref: '#/components/schemas/EventType'
          description: "The type of event:\n\n  * `SEND` \\- The send request was\
            \ successful and SES will attempt to deliver the message to the recipient’s\
            \ mail server. (If account-level or global suppression is being used,\
            \ SES will still count it as a send, but delivery is suppressed.) \n\n\
            \  * `DELIVERY` \\- SES successfully delivered the email to the recipient's\
            \ mail server. Excludes deliveries to the mailbox simulator, and those\
            \ from emails addressed to more than one recipient. \n\n  * `BOUNCE` \\\
            - Feedback received for delivery failures. Additional details about the\
            \ bounce are provided in the `Details` object. Excludes bounces from the\
            \ mailbox simulator, and those from emails addressed to more than one\
            \ recipient. \n\n  * `COMPLAINT` \\- Complaint received for the email.\
            \ Additional details about the complaint are provided in the `Details`\
            \ object. This excludes complaints from the mailbox simulator, those originating\
            \ from your account-level suppression list (if enabled), and those from\
            \ emails addressed to more than one recipient. \n\n  * `OPEN` \\- Open\
            \ event for emails including open trackers. Excludes opens for emails\
            \ addressed to more than one recipient.\n\n  * `CLICK` \\- Click event\
            \ for emails including wrapped links. Excludes clicks for emails addressed\
            \ to more than one recipient."
        Details:
          allOf:
          - $ref: '#/components/schemas/EventDetails'
          description: Details about bounce or complaint events.
      description: An object containing details about a specific event.
    InsightsEvents:
      type: array
      items:
        $ref: '#/components/schemas/InsightsEvent'
    InternalServiceErrorException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: The request couldn't be processed because an error occurred with
        the Amazon SES API v2.
    InvalidNextTokenException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: The specified request includes an invalid or expired token.
    Ip:
      type: string
    IpList:
      type: array
      items:
        $ref: '#/components/schemas/Ip'
    Isp:
      type: string
    IspFilterList:
      type: array
      items:
        $ref: '#/components/schemas/Isp'
    IspName:
      type: string
    IspNameList:
      type: array
      items:
        $ref: '#/components/schemas/IspName'
    IspPlacement:
      type: object
      properties:
        IspName:
          allOf:
          - $ref: '#/components/schemas/IspName'
          description: The name of the email provider that the inbox placement data
            applies to.
        PlacementStatistics:
          allOf:
          - $ref: '#/components/schemas/PlacementStatistics'
          description: An object that contains inbox placement metrics for a specific
            email provider.
      description: An object that describes how email sent during the predictive inbox
        placement test was handled by a certain email provider.
    IspPlacements:
      type: array
      items:
        $ref: '#/components/schemas/IspPlacement'
    JobId:
      type: string
      minLength: 1
    JobStatus:
      type: string
      enum:
      - CREATED
      - PROCESSING
      - COMPLETED
      - FAILED
      - CANCELLED
      description: "<p>The status of a job.</p>\n         <ul>\n            <li>\n\
        \               <p>\n                  <code>CREATED</code> – Job has just\
        \ been created.</p>\n            </li>\n            <li>\n               <p>\n\
        \                  <code>PROCESSING</code> – Job is processing.</p>\n    \
        \        </li>\n            <li>\n               <p>\n                  <code>ERROR</code>\
        \ – An error occurred during processing.</p>\n            </li>\n        \
        \    <li>\n               <p>\n                  <code>COMPLETED</code> –\
        \ Job has completed processing successfully.</p>\n            </li>\n    \
        \     </ul>"
    KinesisFirehoseDestination:
      type: object
      properties:
        IamRoleArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          description: The Amazon Resource Name (ARN) of the IAM role that the Amazon
            SES API v2 uses to send email events to the Amazon Kinesis Data Firehose
            stream.
        DeliveryStreamArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          description: The Amazon Resource Name (ARN) of the Amazon Kinesis Data Firehose
            stream that the Amazon SES API v2 sends email events to.
      required:
      - IamRoleArn
      - DeliveryStreamArn
      description: An object that defines an Amazon Kinesis Data Firehose destination
        for email events. You can use Amazon Kinesis Data Firehose to stream data
        to other services, such as Amazon S3 and Amazon Redshift.
    LastDeliveryEventList:
      type: array
      items:
        $ref: '#/components/schemas/DeliveryEventType'
    LastEngagementEventList:
      type: array
      items:
        $ref: '#/components/schemas/EngagementEventType'
    LastFreshStart:
      type: string
      format: date-time
      description: "<p>The date and time (in Unix time) when the reputation metrics\
        \ were last given a fresh\n            start. When your account is given a\
        \ fresh start, your reputation metrics are calculated\n            starting\
        \ from the date of the fresh start.</p>"
    LimitExceededException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: There are too many instances of the specified resource type.
    ListConfigurationSetsRequest:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A token returned from a previous call to `ListConfigurationSets`
            to indicate the position in the list of configuration sets.
        PageSize:
          allOf:
          - $ref: '#/components/schemas/MaxItems'
          description: The number of results to show in a single call to `ListConfigurationSets`.
            If the number of results is larger than the number you specified in this
            parameter, then the response includes a `NextToken` element, which you
            can use to obtain additional results.
      description: A request to obtain a list of configuration sets for your Amazon
        SES account in the current Amazon Web Services Region.
    ListConfigurationSetsResponse:
      type: object
      properties:
        ConfigurationSets:
          allOf:
          - $ref: '#/components/schemas/ConfigurationSetNameList'
          description: An array that contains all of the configuration sets in your
            Amazon SES account in the current Amazon Web Services Region.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A token that indicates that there are additional configuration
            sets to list. To view additional configuration sets, issue another request
            to `ListConfigurationSets`, and pass this token in the `NextToken` parameter.
      description: A list of configuration sets in your Amazon SES account in the
        current Amazon Web Services Region.
    ListContactListsRequest:
      type: object
      properties:
        PageSize:
          allOf:
          - $ref: '#/components/schemas/MaxItems'
          description: Maximum number of contact lists to return at once. Use this
            parameter to paginate results. If additional contact lists exist beyond
            the specified limit, the `NextToken` element is sent in the response.
            Use the `NextToken` value in subsequent requests to retrieve additional
            lists.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A string token indicating that there might be additional contact
            lists available to be listed. Use the token provided in the Response to
            use in the subsequent call to ListContactLists with the same parameters
            to retrieve the next page of contact lists.
    ListContactListsResponse:
      type: object
      properties:
        ContactLists:
          allOf:
          - $ref: '#/components/schemas/ListOfContactLists'
          description: The available contact lists.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A string token indicating that there might be additional contact
            lists available to be listed. Copy this token to a subsequent call to
            `ListContactLists` with the same parameters to retrieve the next page
            of contact lists.
    ListContactsFilter:
      type: object
      properties:
        FilteredStatus:
          allOf:
          - $ref: '#/components/schemas/SubscriptionStatus'
          description: 'The status by which you are filtering: `OPT_IN` or `OPT_OUT`.'
        TopicFilter:
          allOf:
          - $ref: '#/components/schemas/TopicFilter'
          description: Used for filtering by a specific topic preference.
      description: A filter that can be applied to a list of contacts.
    ListContactsRequest:
      type: object
      properties:
        ContactListName:
          allOf:
          - $ref: '#/components/schemas/ContactListName'
          description: The name of the contact list.
        Filter:
          allOf:
          - $ref: '#/components/schemas/ListContactsFilter'
          description: A filter that can be applied to a list of contacts.
        PageSize:
          allOf:
          - $ref: '#/components/schemas/MaxItems'
          description: The number of contacts that may be returned at once, which
            is dependent on if there are more or less contacts than the value of the
            PageSize. Use this parameter to paginate results. If additional contacts
            exist beyond the specified limit, the `NextToken` element is sent in the
            response. Use the `NextToken` value in subsequent requests to retrieve
            additional contacts.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A string token indicating that there might be additional contacts
            available to be listed. Use the token provided in the Response to use
            in the subsequent call to ListContacts with the same parameters to retrieve
            the next page of contacts.
      required:
      - ContactListName
    ListContactsResponse:
      type: object
      properties:
        Contacts:
          allOf:
          - $ref: '#/components/schemas/ListOfContacts'
          description: The contacts present in a specific contact list.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A string token indicating that there might be additional contacts
            available to be listed. Copy this token to a subsequent call to `ListContacts`
            with the same parameters to retrieve the next page of contacts.
    ListCustomVerificationEmailTemplatesRequest:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A token returned from a previous call to `ListCustomVerificationEmailTemplates`
            to indicate the position in the list of custom verification email templates.
        PageSize:
          allOf:
          - $ref: '#/components/schemas/MaxItems'
          description: 'The number of results to show in a single call to `ListCustomVerificationEmailTemplates`.
            If the number of results is larger than the number you specified in this
            parameter, then the response includes a `NextToken` element, which you
            can use to obtain additional results.


            The value you specify has to be at least 1, and can be no more than 50.'
      description: Represents a request to list the existing custom verification email
        templates for your account.
    ListCustomVerificationEmailTemplatesResponse:
      type: object
      properties:
        CustomVerificationEmailTemplates:
          allOf:
          - $ref: '#/components/schemas/CustomVerificationEmailTemplatesList'
          description: A list of the custom verification email templates that exist
            in your account.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A token indicating that there are additional custom verification
            email templates available to be listed. Pass this token to a subsequent
            call to `ListCustomVerificationEmailTemplates` to retrieve the next 50
            custom verification email templates.
      description: The following elements are returned by the service.
    ListDedicatedIpPoolsRequest:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A token returned from a previous call to `ListDedicatedIpPools`
            to indicate the position in the list of dedicated IP pools.
        PageSize:
          allOf:
          - $ref: '#/components/schemas/MaxItems'
          description: The number of results to show in a single call to `ListDedicatedIpPools`.
            If the number of results is larger than the number you specified in this
            parameter, then the response includes a `NextToken` element, which you
            can use to obtain additional results.
      description: A request to obtain a list of dedicated IP pools.
    ListDedicatedIpPoolsResponse:
      type: object
      properties:
        DedicatedIpPools:
          allOf:
          - $ref: '#/components/schemas/ListOfDedicatedIpPools'
          description: A list of all of the dedicated IP pools that are associated
            with your Amazon Web Services account in the current Region.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A token that indicates that there are additional IP pools to
            list. To view additional IP pools, issue another request to `ListDedicatedIpPools`,
            passing this token in the `NextToken` parameter.
      description: A list of dedicated IP pools.
    ListDeliverabilityTestReportsRequest:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A token returned from a previous call to `ListDeliverabilityTestReports`
            to indicate the position in the list of predictive inbox placement tests.
        PageSize:
          allOf:
          - $ref: '#/components/schemas/MaxItems'
          description: 'The number of results to show in a single call to `ListDeliverabilityTestReports`.
            If the number of results is larger than the number you specified in this
            parameter, then the response includes a `NextToken` element, which you
            can use to obtain additional results.


            The value you specify has to be at least 0, and can be no more than 1000.'
      description: A request to list all of the predictive inbox placement tests that
        you've performed.
    ListDeliverabilityTestReportsResponse:
      type: object
      properties:
        DeliverabilityTestReports:
          allOf:
          - $ref: '#/components/schemas/DeliverabilityTestReports'
          description: An object that contains a lists of predictive inbox placement
            tests that you've performed.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A token that indicates that there are additional predictive
            inbox placement tests to list. To view additional predictive inbox placement
            tests, issue another request to `ListDeliverabilityTestReports`, and pass
            this token in the `NextToken` parameter.
      required:
      - DeliverabilityTestReports
      description: A list of the predictive inbox placement test reports that are
        available for your account, regardless of whether or not those tests are complete.
    ListDomainDeliverabilityCampaignsRequest:
      type: object
      properties:
        StartDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The first day that you want to obtain deliverability data for.
        EndDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The last day that you want to obtain deliverability data for.
            This value has to be less than or equal to 30 days after the value of
            the `StartDate` parameter.
        SubscribedDomain:
          allOf:
          - $ref: '#/components/schemas/Domain'
          description: The domain to obtain deliverability data for.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A token that’s returned from a previous call to the `ListDomainDeliverabilityCampaigns`
            operation. This token indicates the position of a campaign in the list
            of campaigns.
        PageSize:
          allOf:
          - $ref: '#/components/schemas/MaxItems'
          description: The maximum number of results to include in response to a single
            call to the `ListDomainDeliverabilityCampaigns` operation. If the number
            of results is larger than the number that you specify in this parameter,
            the response includes a `NextToken` element, which you can use to obtain
            additional results.
      required:
      - StartDate
      - EndDate
      - SubscribedDomain
      description: Retrieve deliverability data for all the campaigns that used a
        specific domain to send email during a specified time range. This data is
        available for a domain only if you enabled the Deliverability dashboard.
    ListDomainDeliverabilityCampaignsResponse:
      type: object
      properties:
        DomainDeliverabilityCampaigns:
          allOf:
          - $ref: '#/components/schemas/DomainDeliverabilityCampaignList'
          description: An array of responses, one for each campaign that used the
            domain to send email during the specified time range.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A token that’s returned from a previous call to the `ListDomainDeliverabilityCampaigns`
            operation. This token indicates the position of the campaign in the list
            of campaigns.
      required:
      - DomainDeliverabilityCampaigns
      description: An array of objects that provide deliverability data for all the
        campaigns that used a specific domain to send email during a specified time
        range. This data is available for a domain only if you enabled the Deliverability
        dashboard for the domain.
    ListEmailIdentitiesRequest:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A token returned from a previous call to `ListEmailIdentities`
            to indicate the position in the list of identities.
        PageSize:
          allOf:
          - $ref: '#/components/schemas/MaxItems'
          description: 'The number of results to show in a single call to `ListEmailIdentities`.
            If the number of results is larger than the number you specified in this
            parameter, then the response includes a `NextToken` element, which you
            can use to obtain additional results.


            The value you specify has to be at least 0, and can be no more than 1000.'
      description: A request to list all of the email identities associated with your
        Amazon Web Services account. This list includes identities that you've already
        verified, identities that are unverified, and identities that were verified
        in the past, but are no longer verified.
    ListEmailIdentitiesResponse:
      type: object
      properties:
        EmailIdentities:
          allOf:
          - $ref: '#/components/schemas/IdentityInfoList'
          description: An array that includes all of the email identities associated
            with your Amazon Web Services account.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A token that indicates that there are additional configuration
            sets to list. To view additional configuration sets, issue another request
            to `ListEmailIdentities`, and pass this token in the `NextToken` parameter.
      description: A list of all of the identities that you've attempted to verify,
        regardless of whether or not those identities were successfully verified.
    ListEmailTemplatesRequest:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A token returned from a previous call to `ListEmailTemplates`
            to indicate the position in the list of email templates.
        PageSize:
          allOf:
          - $ref: '#/components/schemas/MaxItems'
          description: 'The number of results to show in a single call to `ListEmailTemplates`.
            If the number of results is larger than the number you specified in this
            parameter, then the response includes a `NextToken` element, which you
            can use to obtain additional results.


            The value you specify has to be at least 1, and can be no more than 100.'
      description: Represents a request to list the email templates present in your
        Amazon SES account in the current Amazon Web Services Region. For more information,
        see the [Amazon SES Developer Guide](https://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-personalized-email-api.html).
    ListEmailTemplatesResponse:
      type: object
      properties:
        TemplatesMetadata:
          allOf:
          - $ref: '#/components/schemas/EmailTemplateMetadataList'
          description: An array the contains the name and creation time stamp for
            each template in your Amazon SES account.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A token indicating that there are additional email templates
            available to be listed. Pass this token to a subsequent `ListEmailTemplates`
            call to retrieve the next 10 email templates.
      description: The following elements are returned by the service.
    ListExportJobsRequest:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token returned from a previous call to `ListExportJobs`
            to indicate the position in the list of export jobs.
        PageSize:
          allOf:
          - $ref: '#/components/schemas/MaxItems'
          description: Maximum number of export jobs to return at once. Use this parameter
            to paginate results. If additional export jobs exist beyond the specified
            limit, the `NextToken` element is sent in the response. Use the `NextToken`
            value in subsequent calls to `ListExportJobs` to retrieve additional export
            jobs.
        ExportSourceType:
          allOf:
          - $ref: '#/components/schemas/ExportSourceType'
          description: A value used to list export jobs that have a certain `ExportSourceType`.
        JobStatus:
          allOf:
          - $ref: '#/components/schemas/JobStatus'
          description: A value used to list export jobs that have a certain `JobStatus`.
      description: Represents a request to list all export jobs with filters.
    ListExportJobsResponse:
      type: object
      properties:
        ExportJobs:
          allOf:
          - $ref: '#/components/schemas/ExportJobSummaryList'
          description: A list of the export job summaries.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A string token indicating that there might be additional export
            jobs available to be listed. Use this token to a subsequent call to `ListExportJobs`
            with the same parameters to retrieve the next page of export jobs.
      description: An HTTP 200 response if the request succeeds, or an error message
        if the request fails.
    ListImportJobsRequest:
      type: object
      properties:
        ImportDestinationType:
          allOf:
          - $ref: '#/components/schemas/ImportDestinationType'
          description: The destination of the import job, which can be used to list
            import jobs that have a certain `ImportDestinationType`.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A string token indicating that there might be additional import
            jobs available to be listed. Copy this token to a subsequent call to `ListImportJobs`
            with the same parameters to retrieve the next page of import jobs.
        PageSize:
          allOf:
          - $ref: '#/components/schemas/MaxItems'
          description: Maximum number of import jobs to return at once. Use this parameter
            to paginate results. If additional import jobs exist beyond the specified
            limit, the `NextToken` element is sent in the response. Use the `NextToken`
            value in subsequent requests to retrieve additional addresses.
      description: Represents a request to list all of the import jobs for a data
        destination within the specified maximum number of import jobs.
    ListImportJobsResponse:
      type: object
      properties:
        ImportJobs:
          allOf:
          - $ref: '#/components/schemas/ImportJobSummaryList'
          description: A list of the import job summaries.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A string token indicating that there might be additional import
            jobs available to be listed. Copy this token to a subsequent call to `ListImportJobs`
            with the same parameters to retrieve the next page of import jobs.
      description: An HTTP 200 response if the request succeeds, or an error message
        if the request fails.
    ListManagementOptions:
      type: object
      properties:
        ContactListName:
          allOf:
          - $ref: '#/components/schemas/ContactListName'
          description: The name of the contact list.
        TopicName:
          allOf:
          - $ref: '#/components/schemas/TopicName'
          description: The name of the topic.
      required:
      - ContactListName
      description: An object used to specify a list or topic to which an email belongs,
        which will be used when a contact chooses to unsubscribe.
    ListMultiRegionEndpointsRequest:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextTokenV2'
          description: A token returned from a previous call to `ListMultiRegionEndpoints`
            to indicate the position in the list of multi-region endpoints (global-endpoints).
        PageSize:
          allOf:
          - $ref: '#/components/schemas/PageSizeV2'
          description: The number of results to show in a single call to `ListMultiRegionEndpoints`.
            If the number of results is larger than the number you specified in this
            parameter, the response includes a `NextToken` element that you can use
            to retrieve the next page of results.
      description: Represents a request to list all the multi-region endpoints (global-endpoints)
        whose primary region is the AWS-Region where operation is executed.
    ListMultiRegionEndpointsResponse:
      type: object
      properties:
        MultiRegionEndpoints:
          allOf:
          - $ref: '#/components/schemas/MultiRegionEndpoints'
          description: An array that contains key multi-region endpoint (global-endpoint)
            properties.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextTokenV2'
          description: A token indicating that there are additional multi-region endpoints
            (global-endpoints) available to be listed. Pass this token to a subsequent
            `ListMultiRegionEndpoints` call to retrieve the next page.
      description: The following elements are returned by the service.
    ListOfContactLists:
      type: array
      items:
        $ref: '#/components/schemas/ContactList'
    ListOfContacts:
      type: array
      items:
        $ref: '#/components/schemas/Contact'
    ListOfDedicatedIpPools:
      type: array
      items:
        $ref: '#/components/schemas/PoolName'
      description: <p>A list of dedicated IP pools that are associated with your Amazon
        Web Services account.</p>
    ListRecommendationFilterValue:
      type: string
      minLength: 1
      maxLength: 512
    ListRecommendationsFilter:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/ListRecommendationFilterValue'
      description: "<p>An object that contains mapping between <code>ListRecommendationsFilterKey</code>\n\
        \            and <code>ListRecommendationFilterValue</code> to filter by.</p>"
    ListRecommendationsFilterKey:
      type: string
      enum:
      - TYPE
      - IMPACT
      - STATUS
      - RESOURCE_ARN
      description: "<p>The <code>ListRecommendations</code> filter type. This can\
        \ be one of the following:</p>\n         <ul>\n            <li>\n        \
        \       <p>\n                  <code>TYPE</code> – The recommendation type,\
        \ with values like <code>DKIM</code>,\n                    <code>SPF</code>,\
        \ <code>DMARC</code>, <code>BIMI</code>, or <code>COMPLAINT</code>.</p>\n\
        \            </li>\n            <li>\n               <p>\n               \
        \   <code>IMPACT</code> – The recommendation impact, with values like\n  \
        \                  <code>HIGH</code> or <code>LOW</code>.</p>\n          \
        \  </li>\n            <li>\n               <p>\n                  <code>STATUS</code>\
        \ – The recommendation status, with values like\n                    <code>OPEN</code>\
        \ or <code>FIXED</code>.</p>\n            </li>\n            <li>\n      \
        \         <p>\n                  <code>RESOURCE_ARN</code> – The resource\
        \ affected by the recommendation,\n                    with values like <code>arn:aws:ses:us-east-1:123456789012:identity/example.com</code>.</p>\n\
        \            </li>\n         </ul>"
    ListRecommendationsRequest:
      type: object
      properties:
        Filter:
          allOf:
          - $ref: '#/components/schemas/ListRecommendationsFilter'
          description: Filters applied when retrieving recommendations. Can eiter
            be an individual filter, or combinations of `STATUS` and `IMPACT` or `STATUS`
            and `TYPE`
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A token returned from a previous call to `ListRecommendations`
            to indicate the position in the list of recommendations.
        PageSize:
          allOf:
          - $ref: '#/components/schemas/MaxItems'
          description: 'The number of results to show in a single call to `ListRecommendations`.
            If the number of results is larger than the number you specified in this
            parameter, then the response includes a `NextToken` element, which you
            can use to obtain additional results.


            The value you specify has to be at least 1, and can be no more than 100.'
      description: Represents a request to list the existing recommendations for your
        account.
    ListRecommendationsResponse:
      type: object
      properties:
        Recommendations:
          allOf:
          - $ref: '#/components/schemas/RecommendationsList'
          description: The recommendations applicable to your account.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A string token indicating that there might be additional recommendations
            available to be listed. Use the token provided in the `ListRecommendationsResponse`
            to use in the subsequent call to `ListRecommendations` with the same parameters
            to retrieve the next page of recommendations.
      description: Contains the response to your request to retrieve the list of recommendations
        for your account.
    ListSuppressedDestinationsRequest:
      type: object
      properties:
        Reasons:
          allOf:
          - $ref: '#/components/schemas/SuppressionListReasons'
          description: The factors that caused the email address to be added to .
        StartDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: Used to filter the list of suppressed email destinations so
            that it only includes addresses that were added to the list after a specific
            date.
        EndDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: Used to filter the list of suppressed email destinations so
            that it only includes addresses that were added to the list before a specific
            date.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A token returned from a previous call to `ListSuppressedDestinations`
            to indicate the position in the list of suppressed email addresses.
        PageSize:
          allOf:
          - $ref: '#/components/schemas/MaxItems'
          description: The number of results to show in a single call to `ListSuppressedDestinations`.
            If the number of results is larger than the number you specified in this
            parameter, then the response includes a `NextToken` element, which you
            can use to obtain additional results.
      description: A request to obtain a list of email destinations that are on the
        suppression list for your account.
    ListSuppressedDestinationsResponse:
      type: object
      properties:
        SuppressedDestinationSummaries:
          allOf:
          - $ref: '#/components/schemas/SuppressedDestinationSummaries'
          description: A list of summaries, each containing a summary for a suppressed
            email destination.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A token that indicates that there are additional email addresses
            on the suppression list for your account. To view additional suppressed
            addresses, issue another request to `ListSuppressedDestinations`, and
            pass this token in the `NextToken` parameter.
      description: A list of suppressed email addresses.
    ListTagsForResourceRequest:
      type: object
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          description: The Amazon Resource Name (ARN) of the resource that you want
            to retrieve tag information for.
      required:
      - ResourceArn
    ListTagsForResourceResponse:
      type: object
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: An array that lists all the tags that are associated with the
            resource. Each tag consists of a required tag key (`Key`) and an associated
            tag value (`Value`)
      required:
      - Tags
    MailFromAttributes:
      type: object
      properties:
        MailFromDomain:
          allOf:
          - $ref: '#/components/schemas/MailFromDomainName'
          description: The name of a domain that an email identity uses as a custom
            MAIL FROM domain.
        MailFromDomainStatus:
          allOf:
          - $ref: '#/components/schemas/MailFromDomainStatus'
          description: "The status of the MAIL FROM domain. This status can have the\
            \ following values:\n\n  * `PENDING` – Amazon SES hasn't started searching\
            \ for the MX record yet.\n\n  * `SUCCESS` – Amazon SES detected the required\
            \ MX record for the MAIL FROM domain.\n\n  * `FAILED` – Amazon SES can't\
            \ find the required MX record, or the record no longer exists.\n\n  *\
            \ `TEMPORARY_FAILURE` – A temporary issue occurred, which prevented Amazon\
            \ SES from determining the status of the MAIL FROM domain."
        BehaviorOnMxFailure:
          allOf:
          - $ref: '#/components/schemas/BehaviorOnMxFailure'
          description: 'The action to take if the required MX record can''t be found
            when you send an email. When you set this value to `USE_DEFAULT_VALUE`,
            the mail is sent using _amazonses.com_ as the MAIL FROM domain. When you
            set this value to `REJECT_MESSAGE`, the Amazon SES API v2 returns a `MailFromDomainNotVerified`
            error, and doesn''t attempt to deliver the email.


            These behaviors are taken when the custom MAIL FROM domain configuration
            is in the `Pending`, `Failed`, and `TemporaryFailure` states.'
      required:
      - MailFromDomain
      - MailFromDomainStatus
      - BehaviorOnMxFailure
      description: A list of attributes that are associated with a MAIL FROM domain.
    MailFromDomainName:
      type: string
    MailFromDomainNotVerifiedException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: The message can't be sent because the sending domain isn't verified.
    MailFromDomainStatus:
      type: string
      enum:
      - PENDING
      - SUCCESS
      - FAILED
      - TEMPORARY_FAILURE
      description: "<p>The status of the MAIL FROM domain. This status can have the\
        \ following values:</p>\n         <ul>\n            <li>\n               <p>\n\
        \                  <code>PENDING</code> – Amazon SES hasn't started searching\
        \ for the MX record\n                    yet.</p>\n            </li>\n   \
        \         <li>\n               <p>\n                  <code>SUCCESS</code>\
        \ – Amazon SES detected the required MX record for the\n                 \
        \   MAIL FROM domain.</p>\n            </li>\n            <li>\n         \
        \      <p>\n                  <code>FAILED</code> – Amazon SES can't find\
        \ the required MX record, or the\n                    record no longer exists.</p>\n\
        \            </li>\n            <li>\n               <p>\n               \
        \   <code>TEMPORARY_FAILURE</code> – A temporary issue occurred, which\n \
        \                   prevented Amazon SES from determining the status of the\
        \ MAIL FROM domain.</p>\n            </li>\n         </ul>"
    MailType:
      type: string
      enum:
      - MARKETING
      - TRANSACTIONAL
    Max24HourSend:
      type: number
      format: double
      default: 0
    MaxDeliverySeconds:
      type: integer
      format: int64
      minimum: 300
      maximum: 50400
    MaxItems:
      type: integer
    MaxSendRate:
      type: number
      format: double
      default: 0
    Message:
      type: object
      properties:
        Subject:
          allOf:
          - $ref: '#/components/schemas/Content'
          description: The subject line of the email. The subject line can only contain
            7-bit ASCII characters. However, you can specify non-ASCII characters
            in the subject line by using encoded-word syntax, as described in [RFC
            2047](https://tools.ietf.org/html/rfc2047).
        Body:
          allOf:
          - $ref: '#/components/schemas/Body'
          description: The body of the message. You can specify an HTML version of
            the message, a text-only version of the message, or both.
        Headers:
          allOf:
          - $ref: '#/components/schemas/MessageHeaderList'
          description: The list of message headers that will be added to the email
            message.
        Attachments:
          allOf:
          - $ref: '#/components/schemas/AttachmentList'
          description: The List of attachments to include in your email. All recipients
            will receive the same attachments.
      required:
      - Subject
      - Body
      description: Represents the email message that you're sending. The `Message`
        object consists of a subject line and a message body.
    MessageContent:
      type: string
    MessageData:
      type: string
    MessageHeader:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/MessageHeaderName'
          description: "The name of the message header. The message header name has\
            \ to meet the following criteria:\n\n  * Can contain any printable ASCII\
            \ character (33 - 126) except for colon (:).\n\n  * Can contain no more\
            \ than 126 characters."
        Value:
          allOf:
          - $ref: '#/components/schemas/MessageHeaderValue'
          description: "The value of the message header. The message header value\
            \ has to meet the following criteria:\n\n  * Can contain any printable\
            \ ASCII character.\n\n  * Can contain no more than 870 characters."
      required:
      - Name
      - Value
      description: Contains the name and value of a message header that you add to
        an email.
    MessageHeaderList:
      type: array
      items:
        $ref: '#/components/schemas/MessageHeader'
      description: "<p>A list of message headers. The list of message headers has\
        \ to meet the following\n            criteria:</p>\n         <ul>\n      \
        \      <li>\n               <p>Can contain no more than 15 headers in one\
        \ message.</p>\n            </li>\n         </ul>"
    MessageHeaderName:
      type: string
      pattern: ^[!-9;-@A-~]+$
      minLength: 1
      maxLength: 126
    MessageHeaderValue:
      type: string
      pattern: ^[ -~]*$
      minLength: 1
      maxLength: 870
    MessageInsightsDataSource:
      type: object
      properties:
        StartDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: Represents the start date for the export interval as a timestamp.
            The start date is inclusive.
        EndDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: Represents the end date for the export interval as a timestamp.
            The end date is inclusive.
        Include:
          allOf:
          - $ref: '#/components/schemas/MessageInsightsFilters'
          description: Filters for results to be included in the export file.
        Exclude:
          allOf:
          - $ref: '#/components/schemas/MessageInsightsFilters'
          description: Filters for results to be excluded from the export file.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MessageInsightsExportMaxResults'
          description: The maximum number of results.
      required:
      - StartDate
      - EndDate
      description: An object that contains filters applied when performing the Message
        Insights export.
    MessageInsightsExportMaxResults:
      type: integer
      minimum: 1
      maximum: 10000
    MessageInsightsFilters:
      type: object
      properties:
        FromEmailAddress:
          allOf:
          - $ref: '#/components/schemas/EmailAddressFilterList'
          description: The from address used to send the message.
        Destination:
          allOf:
          - $ref: '#/components/schemas/EmailAddressFilterList'
          description: The recipient's email address.
        Subject:
          allOf:
          - $ref: '#/components/schemas/EmailSubjectFilterList'
          description: The subject line of the message.
        Isp:
          allOf:
          - $ref: '#/components/schemas/IspFilterList'
          description: The recipient's ISP (e.g., `Gmail`, `Yahoo`, etc.).
        LastDeliveryEvent:
          allOf:
          - $ref: '#/components/schemas/LastDeliveryEventList'
          description: 'The last delivery-related event for the email, where the ordering
            is as follows: `SEND` < `BOUNCE` < `DELIVERY` < `COMPLAINT`.'
        LastEngagementEvent:
          allOf:
          - $ref: '#/components/schemas/LastEngagementEventList'
          description: 'The last engagement-related event for the email, where the
            ordering is as follows: `OPEN` < `CLICK`.


            Engagement events are only available if [Engagement tracking](https://docs.aws.amazon.com/ses/latest/dg/vdm-settings.html)
            is enabled.'
      description: 'An object containing Message Insights filters.


        If you specify multiple filters, the filters are joined by AND.


        If you specify multiple values for a filter, the values are joined by OR.
        Filter values are case-sensitive.


        `FromEmailAddress`, `Destination`, and `Subject` filters support partial match.
        A partial match is performed by using the `*` wildcard character placed at
        the beginning (suffix match), the end (prefix match) or both ends of the string
        (contains match). In order to match the literal characters `*` or `\`, they
        must be escaped using the `\` character. If no wildcard character is present,
        an exact match is performed.'
    MessageRejected:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: The message can't be sent because it contains invalid content.
    MessageTag:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/MessageTagName'
          description: "The name of the message tag. The message tag name has to meet\
            \ the following criteria:\n\n  * It can only contain ASCII letters (a–z,\
            \ A–Z), numbers (0–9), underscores (_), or dashes (-).\n\n  * It can contain\
            \ no more than 256 characters."
        Value:
          allOf:
          - $ref: '#/components/schemas/MessageTagValue'
          description: "The value of the message tag. The message tag value has to\
            \ meet the following criteria:\n\n  * It can only contain ASCII letters\
            \ (a–z, A–Z), numbers (0–9), underscores (_), or dashes (-).\n\n  * It\
            \ can contain no more than 256 characters."
      required:
      - Name
      - Value
      description: Contains the name and value of a tag that you apply to an email.
        You can use message tags when you publish email sending events.
    MessageTagList:
      type: array
      items:
        $ref: '#/components/schemas/MessageTag'
      description: <p>A list of message tags.</p>
    MessageTagName:
      type: string
    MessageTagValue:
      type: string
    Metric:
      type: string
      enum:
      - SEND
      - COMPLAINT
      - PERMANENT_BOUNCE
      - TRANSIENT_BOUNCE
      - OPEN
      - CLICK
      - DELIVERY
      - DELIVERY_OPEN
      - DELIVERY_CLICK
      - DELIVERY_COMPLAINT
      description: "<p>The metric to export, can be one of the following:</p>\n  \
        \       <ul>\n            <li>\n               <p>\n                  <code>SEND</code>\
        \ - Emails sent eligible for tracking in the VDM\n                    dashboard.\
        \ This excludes emails sent to the mailbox simulator and emails\n        \
        \            addressed to more than one recipient.</p>\n            </li>\n\
        \            <li>\n               <p>\n                  <code>COMPLAINT</code>\
        \ - Complaints received for your account. This\n                    excludes\
        \ complaints from the mailbox simulator, those originating from your\n   \
        \                 account-level suppression list (if enabled), and those for\
        \ emails addressed to\n                    more than one recipient</p>\n \
        \           </li>\n            <li>\n               <p>\n                \
        \  <code>PERMANENT_BOUNCE</code> - Permanent bounces - i.e., feedback\n  \
        \                  received for emails sent to non-existent mailboxes. Excludes\
        \ bounces from the\n                    mailbox simulator, those originating\
        \ from your account-level suppression list\n                    (if enabled),\
        \ and those for emails addressed to more than one recipient.</p>\n       \
        \     </li>\n            <li>\n               <p>\n                  <code>TRANSIENT_BOUNCE</code>\
        \ - Transient bounces - i.e., feedback\n                    received for delivery\
        \ failures excluding issues with non-existent mailboxes.\n               \
        \     Excludes bounces from the mailbox simulator, and those for emails addressed\
        \ to\n                    more than one recipient.</p>\n            </li>\n\
        \            <li>\n               <p>\n                  <code>OPEN</code>\
        \ - Unique open events for emails including open\n                    trackers.\
        \ Excludes opens for emails addressed to more than one recipient.</p>\n  \
        \          </li>\n            <li>\n               <p>\n                 \
        \ <code>CLICK</code> - Unique click events for emails including wrapped\n\
        \                    links. Excludes clicks for emails addressed to more than\
        \ one recipient.</p>\n            </li>\n            <li>\n              \
        \ <p>\n                  <code>DELIVERY</code> - Successful deliveries for\
        \ email sending\n                    attempts. Excludes deliveries to the\
        \ mailbox simulator and for emails addressed\n                    to more\
        \ than one recipient.</p>\n            </li>\n            <li>\n         \
        \      <p>\n                  <code>DELIVERY_OPEN</code> - Successful deliveries\
        \ for email sending\n                    attempts. Excludes deliveries to\
        \ the mailbox simulator, for emails addressed to\n                    more\
        \ than one recipient, and emails without open trackers.</p>\n            </li>\n\
        \            <li>\n               <p>\n                  <code>DELIVERY_CLICK</code>\
        \ - Successful deliveries for email sending\n                    attempts.\
        \ Excludes deliveries to the mailbox simulator, for emails addressed to\n\
        \                    more than one recipient, and emails without click trackers.</p>\n\
        \            </li>\n            <li>\n               <p>\n               \
        \   <code>DELIVERY_COMPLAINT</code> - Successful deliveries for email\n  \
        \                  sending attempts. Excludes deliveries to the mailbox simulator,\
        \ for emails\n                    addressed to more than one recipient, and\
        \ emails addressed to recipients hosted\n                    by ISPs with\
        \ which Amazon SES does not have a feedback loop agreement.</p>\n        \
        \    </li>\n         </ul>"
    MetricAggregation:
      type: string
      enum:
      - RATE
      - VOLUME
      description: "<p>The aggregation to apply to a metric, can be one of the following:</p>\n\
        \         <ul>\n            <li>\n               <p>\n                  <code>VOLUME</code>\
        \ - The volume of events for this metric.</p>\n            </li>\n       \
        \     <li>\n               <p>\n                  <code>RATE</code> - The\
        \ rate for this metric relative to the\n                    <code>SEND</code>\
        \ metric volume.</p>\n            </li>\n         </ul>"
    MetricDataError:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/QueryIdentifier'
          description: The query identifier.
        Code:
          allOf:
          - $ref: '#/components/schemas/QueryErrorCode'
          description: "The query error code. Can be one of:\n\n  * `INTERNAL_FAILURE`\
            \ – Amazon SES has failed to process one of the queries.\n\n  * `ACCESS_DENIED`\
            \ – You have insufficient access to retrieve metrics based on the given\
            \ query."
        Message:
          allOf:
          - $ref: '#/components/schemas/QueryErrorMessage'
          description: The error message associated with the current query error.
      description: An error corresponding to the unsuccessful processing of a single
        metric data query.
    MetricDataErrorList:
      type: array
      items:
        $ref: '#/components/schemas/MetricDataError'
    MetricDataResult:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/QueryIdentifier'
          description: The query identifier.
        Timestamps:
          allOf:
          - $ref: '#/components/schemas/TimestampList'
          description: A list of timestamps for the metric data results.
        Values:
          allOf:
          - $ref: '#/components/schemas/MetricValueList'
          description: A list of values (cumulative / sum) for the metric data results.
      description: The result of a single metric data query.
    MetricDataResultList:
      type: array
      items:
        $ref: '#/components/schemas/MetricDataResult'
    MetricDimensionName:
      type: string
      enum:
      - EMAIL_IDENTITY
      - CONFIGURATION_SET
      - ISP
      description: "<p>The <code>BatchGetMetricDataQuery</code> dimension name. This\
        \ can be one of the following:</p>\n         <ul>\n            <li>\n    \
        \           <p>\n                  <code>EMAIL_IDENTITY</code> – The email\
        \ identity used when sending messages.</p>\n            </li>\n          \
        \  <li>\n               <p>\n                  <code>CONFIGURATION_SET</code>\
        \ – The configuration set used when sending messages\n                   \
        \ (if one was used).</p>\n            </li>\n            <li>\n          \
        \     <p>\n                  <code>ISP</code> – The recipient ISP (e.g. <code>Gmail</code>,\
        \ <code>Yahoo</code>,\n                    etc.).</p>\n            </li>\n\
        \         </ul>"
    MetricDimensionValue:
      type: string
    MetricNamespace:
      type: string
      enum:
      - VDM
    MetricValueList:
      type: array
      items:
        $ref: '#/components/schemas/Counter'
    MetricsDataSource:
      type: object
      properties:
        Dimensions:
          allOf:
          - $ref: '#/components/schemas/ExportDimensions'
          description: An object that contains a mapping between a `MetricDimensionName`
            and `MetricDimensionValue` to filter metrics by. Must contain a least
            1 dimension but no more than 3 unique ones.
        Namespace:
          allOf:
          - $ref: '#/components/schemas/MetricNamespace'
          description: The metrics namespace - e.g., `VDM`.
        Metrics:
          allOf:
          - $ref: '#/components/schemas/ExportMetrics'
          description: A list of `ExportMetric` objects to export.
        StartDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: Represents the start date for the export interval as a timestamp.
        EndDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: Represents the end date for the export interval as a timestamp.
      required:
      - Dimensions
      - Namespace
      - Metrics
      - StartDate
      - EndDate
      description: An object that contains details about the data source for the metrics
        export.
    MultiRegionEndpoint:
      type: object
      properties:
        EndpointName:
          allOf:
          - $ref: '#/components/schemas/EndpointName'
          description: The name of the multi-region endpoint (global-endpoint).
        Status:
          allOf:
          - $ref: '#/components/schemas/Status'
          description: "The status of the multi-region endpoint (global-endpoint).\n\
            \n  * `CREATING` – The resource is being provisioned.\n\n  * `READY` –\
            \ The resource is ready to use.\n\n  * `FAILED` – The resource failed\
            \ to be provisioned.\n\n  * `DELETING` – The resource is being deleted\
            \ as requested."
        EndpointId:
          allOf:
          - $ref: '#/components/schemas/EndpointId'
          description: The ID of the multi-region endpoint (global-endpoint).
        Regions:
          allOf:
          - $ref: '#/components/schemas/Regions'
          description: Primary and secondary regions between which multi-region endpoint
            splits sending traffic.
        CreatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time stamp of when the multi-region endpoint (global-endpoint)
            was created.
        LastUpdatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time stamp of when the multi-region endpoint (global-endpoint)
            was last updated.
      description: An object that contains multi-region endpoint (global-endpoint)
        properties.
    MultiRegionEndpoints:
      type: array
      items:
        $ref: '#/components/schemas/MultiRegionEndpoint'
    NextToken:
      type: string
    NextTokenV2:
      type: string
      pattern: ^^([A-Za-z0-9+/]{4})*([A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
      minLength: 1
      maxLength: 5000
    NotFoundException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: The resource you attempted to access doesn't exist.
    OutboundMessageId:
      type: string
    OverallVolume:
      type: object
      properties:
        VolumeStatistics:
          allOf:
          - $ref: '#/components/schemas/VolumeStatistics'
          description: An object that contains information about the numbers of messages
            that arrived in recipients' inboxes and junk mail folders.
        ReadRatePercent:
          allOf:
          - $ref: '#/components/schemas/Percentage'
          description: The percentage of emails that were sent from the domain that
            were read by their recipients.
        DomainIspPlacements:
          allOf:
          - $ref: '#/components/schemas/DomainIspPlacements'
          description: An object that contains inbox and junk mail placement metrics
            for individual email providers.
      description: An object that contains information about email that was sent from
        the selected domain.
    PageSizeV2:
      type: integer
      minimum: 1
      maximum: 1000
    Percentage:
      type: number
      format: double
      description: <p>An object that contains information about inbox placement percentages.</p>
    Percentage100Wrapper:
      type: integer
    PinpointDestination:
      type: object
      properties:
        ApplicationArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          description: The Amazon Resource Name (ARN) of the Amazon Pinpoint project
            to send email events to.
      description: An object that defines an Amazon Pinpoint project destination for
        email events. You can send email event data to a Amazon Pinpoint project to
        view metrics using the Transactional Messaging dashboards that are built in
        to Amazon Pinpoint. For more information, see [Transactional Messaging Charts](https://docs.aws.amazon.com/pinpoint/latest/userguide/analytics-transactional-messages.html)
        in the _Amazon Pinpoint User Guide_.
    PlacementStatistics:
      type: object
      properties:
        InboxPercentage:
          allOf:
          - $ref: '#/components/schemas/Percentage'
          description: The percentage of emails that arrived in recipients' inboxes
            during the predictive inbox placement test.
        SpamPercentage:
          allOf:
          - $ref: '#/components/schemas/Percentage'
          description: The percentage of emails that arrived in recipients' spam or
            junk mail folders during the predictive inbox placement test.
        MissingPercentage:
          allOf:
          - $ref: '#/components/schemas/Percentage'
          description: The percentage of emails that didn't arrive in recipients'
            inboxes at all during the predictive inbox placement test.
        SpfPercentage:
          allOf:
          - $ref: '#/components/schemas/Percentage'
          description: The percentage of emails that were authenticated by using Sender
            Policy Framework (SPF) during the predictive inbox placement test.
        DkimPercentage:
          allOf:
          - $ref: '#/components/schemas/Percentage'
          description: The percentage of emails that were authenticated by using DomainKeys
            Identified Mail (DKIM) during the predictive inbox placement test.
      description: An object that contains inbox placement data for an email provider.
    Policy:
      type: string
      minLength: 1
    PolicyMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Policy'
      description: "<p>An object that contains mapping between <code>PolicyName</code>\
        \ and\n                <code>Policy</code> text.</p>"
    PolicyName:
      type: string
      minLength: 1
      maxLength: 64
    PoolName:
      type: string
    PrimaryNameServer:
      type: string
    PrivateKey:
      type: string
      pattern: ^[a-zA-Z0-9+\/]+={0,2}$
      minLength: 1
      maxLength: 20480
    ProcessedRecordsCount:
      type: integer
    PutAccountDedicatedIpWarmupAttributesRequest:
      type: object
      properties:
        AutoWarmupEnabled:
          allOf:
          - $ref: '#/components/schemas/Enabled'
          description: Enables or disables the automatic warm-up feature for dedicated
            IP addresses that are associated with your Amazon SES account in the current
            Amazon Web Services Region. Set to `true` to enable the automatic warm-up
            feature, or set to `false` to disable it.
      description: A request to enable or disable the automatic IP address warm-up
        feature.
    PutAccountDedicatedIpWarmupAttributesResponse:
      type: object
      properties: {}
      description: An HTTP 200 response if the request succeeds, or an error message
        if the request fails.
    PutAccountDetailsRequest:
      type: object
      properties:
        MailType:
          allOf:
          - $ref: '#/components/schemas/MailType'
          description: The type of email your account will send.
        WebsiteURL:
          allOf:
          - $ref: '#/components/schemas/WebsiteURL'
          description: The URL of your website. This information helps us better understand
            the type of content that you plan to send.
        ContactLanguage:
          allOf:
          - $ref: '#/components/schemas/ContactLanguage'
          description: The language you would prefer to be contacted with.
        UseCaseDescription:
          allOf:
          - $ref: '#/components/schemas/UseCaseDescription'
          description: A description of the types of email that you plan to send.
        AdditionalContactEmailAddresses:
          allOf:
          - $ref: '#/components/schemas/AdditionalContactEmailAddresses'
          description: Additional email addresses that you would like to be notified
            regarding Amazon SES matters.
        ProductionAccessEnabled:
          allOf:
          - $ref: '#/components/schemas/EnabledWrapper'
          description: 'Indicates whether or not your account should have production
            access in the current Amazon Web Services Region.


            If the value is `false`, then your account is in the _sandbox_. When your
            account is in the sandbox, you can only send email to verified identities.


            If the value is `true`, then your account has production access. When
            your account has production access, you can send email to any address.
            The sending quota and maximum sending rate for your account vary based
            on your specific use case.'
      required:
      - MailType
      - WebsiteURL
      description: A request to submit new account details.
    PutAccountDetailsResponse:
      type: object
      properties: {}
      description: An HTTP 200 response if the request succeeds, or an error message
        if the request fails.
    PutAccountSendingAttributesRequest:
      type: object
      properties:
        SendingEnabled:
          allOf:
          - $ref: '#/components/schemas/Enabled'
          description: 'Enables or disables your account''s ability to send email.
            Set to `true` to enable email sending, or set to `false` to disable email
            sending.


            If Amazon Web Services paused your account''s ability to send email, you
            can''t use this operation to resume your account''s ability to send email.'
      description: A request to change the ability of your account to send email.
    PutAccountSendingAttributesResponse:
      type: object
      properties: {}
      description: An HTTP 200 response if the request succeeds, or an error message
        if the request fails.
    PutAccountSuppressionAttributesRequest:
      type: object
      properties:
        SuppressedReasons:
          allOf:
          - $ref: '#/components/schemas/SuppressionListReasons'
          description: "A list that contains the reasons that email addresses will\
            \ be automatically added to the suppression list for your account. This\
            \ list can contain any or all of the following:\n\n  * `COMPLAINT` – Amazon\
            \ SES adds an email address to the suppression list for your account when\
            \ a message sent to that address results in a complaint.\n\n  * `BOUNCE`\
            \ – Amazon SES adds an email address to the suppression list for your\
            \ account when a message sent to that address results in a hard bounce."
      description: A request to change your account's suppression preferences.
    PutAccountSuppressionAttributesResponse:
      type: object
      properties: {}
      description: An HTTP 200 response if the request succeeds, or an error message
        if the request fails.
    PutAccountVdmAttributesRequest:
      type: object
      properties:
        VdmAttributes:
          allOf:
          - $ref: '#/components/schemas/VdmAttributes'
          description: The VDM attributes that you wish to apply to your Amazon SES
            account.
      required:
      - VdmAttributes
      description: A request to submit new account VDM attributes.
    PutAccountVdmAttributesResponse:
      type: object
      properties: {}
    PutConfigurationSetArchivingOptionsRequest:
      type: object
      properties:
        ConfigurationSetName:
          allOf:
          - $ref: '#/components/schemas/ConfigurationSetName'
          description: The name of the configuration set to associate with a MailManager
            archive.
        ArchiveArn:
          allOf:
          - $ref: '#/components/schemas/ArchiveArn'
          description: The Amazon Resource Name (ARN) of the MailManager archive that
            the Amazon SES API v2 sends email to.
      required:
      - ConfigurationSetName
      description: A request to associate a configuration set with a MailManager archive.
    PutConfigurationSetArchivingOptionsResponse:
      type: object
      properties: {}
      description: An HTTP 200 response if the request succeeds, or an error message
        if the request fails.
    PutConfigurationSetDeliveryOptionsRequest:
      type: object
      properties:
        ConfigurationSetName:
          allOf:
          - $ref: '#/components/schemas/ConfigurationSetName'
          description: The name of the configuration set to associate with a dedicated
            IP pool.
        TlsPolicy:
          allOf:
          - $ref: '#/components/schemas/TlsPolicy'
          description: Specifies whether messages that use the configuration set are
            required to use Transport Layer Security (TLS). If the value is `Require`,
            messages are only delivered if a TLS connection can be established. If
            the value is `Optional`, messages can be delivered in plain text if a
            TLS connection can't be established.
        SendingPoolName:
          allOf:
          - $ref: '#/components/schemas/SendingPoolName'
          description: The name of the dedicated IP pool to associate with the configuration
            set.
        MaxDeliverySeconds:
          allOf:
          - $ref: '#/components/schemas/MaxDeliverySeconds'
          description: The maximum amount of time, in seconds, that Amazon SES API
            v2 will attempt delivery of email. If specified, the value must greater
            than or equal to 300 seconds (5 minutes) and less than or equal to 50400
            seconds (840 minutes).
      required:
      - ConfigurationSetName
      description: A request to associate a configuration set with a dedicated IP
        pool.
    PutConfigurationSetDeliveryOptionsResponse:
      type: object
      properties: {}
      description: An HTTP 200 response if the request succeeds, or an error message
        if the request fails.
    PutConfigurationSetReputationOptionsRequest:
      type: object
      properties:
        ConfigurationSetName:
          allOf:
          - $ref: '#/components/schemas/ConfigurationSetName'
          description: The name of the configuration set.
        ReputationMetricsEnabled:
          allOf:
          - $ref: '#/components/schemas/Enabled'
          description: If `true`, tracking of reputation metrics is enabled for the
            configuration set. If `false`, tracking of reputation metrics is disabled
            for the configuration set.
      required:
      - ConfigurationSetName
      description: A request to enable or disable tracking of reputation metrics for
        a configuration set.
    PutConfigurationSetReputationOptionsResponse:
      type: object
      properties: {}
      description: An HTTP 200 response if the request succeeds, or an error message
        if the request fails.
    PutConfigurationSetSendingOptionsRequest:
      type: object
      properties:
        ConfigurationSetName:
          allOf:
          - $ref: '#/components/schemas/ConfigurationSetName'
          description: The name of the configuration set to enable or disable email
            sending for.
        SendingEnabled:
          allOf:
          - $ref: '#/components/schemas/Enabled'
          description: If `true`, email sending is enabled for the configuration set.
            If `false`, email sending is disabled for the configuration set.
      required:
      - ConfigurationSetName
      description: A request to enable or disable the ability of Amazon SES to send
        emails that use a specific configuration set.
    PutConfigurationSetSendingOptionsResponse:
      type: object
      properties: {}
      description: An HTTP 200 response if the request succeeds, or an error message
        if the request fails.
    PutConfigurationSetSuppressionOptionsRequest:
      type: object
      properties:
        ConfigurationSetName:
          allOf:
          - $ref: '#/components/schemas/ConfigurationSetName'
          description: The name of the configuration set to change the suppression
            list preferences for.
        SuppressedReasons:
          allOf:
          - $ref: '#/components/schemas/SuppressionListReasons'
          description: "A list that contains the reasons that email addresses are\
            \ automatically added to the suppression list for your account. This list\
            \ can contain any or all of the following:\n\n  * `COMPLAINT` – Amazon\
            \ SES adds an email address to the suppression list for your account when\
            \ a message sent to that address results in a complaint.\n\n  * `BOUNCE`\
            \ – Amazon SES adds an email address to the suppression list for your\
            \ account when a message sent to that address results in a hard bounce."
      required:
      - ConfigurationSetName
      description: A request to change the account suppression list preferences for
        a specific configuration set.
    PutConfigurationSetSuppressionOptionsResponse:
      type: object
      properties: {}
      description: An HTTP 200 response if the request succeeds, or an error message
        if the request fails.
    PutConfigurationSetTrackingOptionsRequest:
      type: object
      properties:
        ConfigurationSetName:
          allOf:
          - $ref: '#/components/schemas/ConfigurationSetName'
          description: The name of the configuration set.
        CustomRedirectDomain:
          allOf:
          - $ref: '#/components/schemas/CustomRedirectDomain'
          description: The domain to use to track open and click events.
        HttpsPolicy:
          $ref: '#/components/schemas/HttpsPolicy'
      required:
      - ConfigurationSetName
      description: A request to add a custom domain for tracking open and click events
        to a configuration set.
    PutConfigurationSetTrackingOptionsResponse:
      type: object
      properties: {}
      description: An HTTP 200 response if the request succeeds, or an error message
        if the request fails.
    PutConfigurationSetVdmOptionsRequest:
      type: object
      properties:
        ConfigurationSetName:
          allOf:
          - $ref: '#/components/schemas/ConfigurationSetName'
          description: The name of the configuration set.
        VdmOptions:
          allOf:
          - $ref: '#/components/schemas/VdmOptions'
          description: The VDM options to apply to the configuration set.
      required:
      - ConfigurationSetName
      description: A request to add specific VDM settings to a configuration set.
    PutConfigurationSetVdmOptionsResponse:
      type: object
      properties: {}
      description: An HTTP 200 response if the request succeeds, or an error message
        if the request fails.
    PutDedicatedIpInPoolRequest:
      type: object
      properties:
        Ip:
          allOf:
          - $ref: '#/components/schemas/Ip'
          description: The IP address that you want to move to the dedicated IP pool.
            The value you specify has to be a dedicated IP address that's associated
            with your Amazon Web Services account.
        DestinationPoolName:
          allOf:
          - $ref: '#/components/schemas/PoolName'
          description: The name of the IP pool that you want to add the dedicated
            IP address to. You have to specify an IP pool that already exists.
      required:
      - Ip
      - DestinationPoolName
      description: A request to move a dedicated IP address to a dedicated IP pool.
    PutDedicatedIpInPoolResponse:
      type: object
      properties: {}
      description: An HTTP 200 response if the request succeeds, or an error message
        if the request fails.
    PutDedicatedIpPoolScalingAttributesRequest:
      type: object
      properties:
        PoolName:
          allOf:
          - $ref: '#/components/schemas/PoolName'
          description: The name of the dedicated IP pool.
        ScalingMode:
          allOf:
          - $ref: '#/components/schemas/ScalingMode'
          description: 'The scaling mode to apply to the dedicated IP pool.


            Changing the scaling mode from `MANAGED` to `STANDARD` is not supported.'
      required:
      - PoolName
      - ScalingMode
      description: A request to convert a dedicated IP pool to a different scaling
        mode.
    PutDedicatedIpPoolScalingAttributesResponse:
      type: object
      properties: {}
      description: An HTTP 200 response if the request succeeds, or an error message
        if the request fails.
    PutDedicatedIpWarmupAttributesRequest:
      type: object
      properties:
        Ip:
          allOf:
          - $ref: '#/components/schemas/Ip'
          description: The dedicated IP address that you want to update the warm-up
            attributes for.
        WarmupPercentage:
          allOf:
          - $ref: '#/components/schemas/Percentage100Wrapper'
          description: The warm-up percentage that you want to associate with the
            dedicated IP address.
      required:
      - Ip
      - WarmupPercentage
      description: A request to change the warm-up attributes for a dedicated IP address.
        This operation is useful when you want to resume the warm-up process for an
        existing IP address.
    PutDedicatedIpWarmupAttributesResponse:
      type: object
      properties: {}
      description: An HTTP 200 response if the request succeeds, or an error message
        if the request fails.
    PutDeliverabilityDashboardOptionRequest:
      type: object
      properties:
        DashboardEnabled:
          allOf:
          - $ref: '#/components/schemas/Enabled'
          description: Specifies whether to enable the Deliverability dashboard. To
            enable the dashboard, set this value to `true`.
        SubscribedDomains:
          allOf:
          - $ref: '#/components/schemas/DomainDeliverabilityTrackingOptions'
          description: An array of objects, one for each verified domain that you
            use to send email and enabled the Deliverability dashboard for.
      required:
      - DashboardEnabled
      description: 'Enable or disable the Deliverability dashboard. When you enable
        the Deliverability dashboard, you gain access to reputation, deliverability,
        and other metrics for the domains that you use to send email using Amazon
        SES API v2. You also gain the ability to perform predictive inbox placement
        tests.


        When you use the Deliverability dashboard, you pay a monthly subscription
        charge, in addition to any other fees that you accrue by using Amazon SES
        and other Amazon Web Services services. For more information about the features
        and cost of a Deliverability dashboard subscription, see [Amazon Pinpoint
        Pricing](http://aws.amazon.com/pinpoint/pricing/).'
    PutDeliverabilityDashboardOptionResponse:
      type: object
      properties: {}
      description: A response that indicates whether the Deliverability dashboard
        is enabled.
    PutEmailIdentityConfigurationSetAttributesRequest:
      type: object
      properties:
        EmailIdentity:
          allOf:
          - $ref: '#/components/schemas/Identity'
          description: The email address or domain to associate with a configuration
            set.
        ConfigurationSetName:
          allOf:
          - $ref: '#/components/schemas/ConfigurationSetName'
          description: The configuration set to associate with an email identity.
      required:
      - EmailIdentity
      description: A request to associate a configuration set with an email identity.
    PutEmailIdentityConfigurationSetAttributesResponse:
      type: object
      properties: {}
      description: If the action is successful, the service sends back an HTTP 200
        response with an empty HTTP body.
    PutEmailIdentityDkimAttributesRequest:
      type: object
      properties:
        EmailIdentity:
          allOf:
          - $ref: '#/components/schemas/Identity'
          description: The email identity.
        SigningEnabled:
          allOf:
          - $ref: '#/components/schemas/Enabled'
          description: 'Sets the DKIM signing configuration for the identity.


            When you set this value `true`, then the messages that are sent from the
            identity are signed using DKIM. If you set this value to `false`, your
            messages are sent without DKIM signing.'
      required:
      - EmailIdentity
      description: A request to enable or disable DKIM signing of email that you send
        from an email identity.
    PutEmailIdentityDkimAttributesResponse:
      type: object
      properties: {}
      description: An HTTP 200 response if the request succeeds, or an error message
        if the request fails.
    PutEmailIdentityDkimSigningAttributesRequest:
      type: object
      properties:
        EmailIdentity:
          allOf:
          - $ref: '#/components/schemas/Identity'
          description: The email identity.
        SigningAttributesOrigin:
          allOf:
          - $ref: '#/components/schemas/DkimSigningAttributesOrigin'
          description: "The method to use to configure DKIM for the identity. There\
            \ are the following possible values:\n\n  * `AWS_SES` – Configure DKIM\
            \ for the identity by using [Easy DKIM](https://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim.html).\n\
            \n  * `EXTERNAL` – Configure DKIM for the identity by using Bring Your\
            \ Own DKIM (BYODKIM)."
        SigningAttributes:
          allOf:
          - $ref: '#/components/schemas/DkimSigningAttributes'
          description: An object that contains information about the private key and
            selector that you want to use to configure DKIM for the identity for Bring
            Your Own DKIM (BYODKIM) for the identity, or, configures the key length
            to be used for [Easy DKIM](https://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim.html).
      required:
      - EmailIdentity
      - SigningAttributesOrigin
      description: A request to change the DKIM attributes for an email identity.
    PutEmailIdentityDkimSigningAttributesResponse:
      type: object
      properties:
        DkimStatus:
          allOf:
          - $ref: '#/components/schemas/DkimStatus'
          description: "The DKIM authentication status of the identity. Amazon SES\
            \ determines the authentication status by searching for specific records\
            \ in the DNS configuration for your domain. If you used [Easy DKIM](https://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim.html)\
            \ to set up DKIM authentication, Amazon SES tries to find three unique\
            \ CNAME records in the DNS configuration for your domain.\n\nIf you provided\
            \ a public key to perform DKIM authentication, Amazon SES tries to find\
            \ a TXT record that uses the selector that you specified. The value of\
            \ the TXT record must be a public key that's paired with the private key\
            \ that you specified in the process of creating the identity.\n\nThe status\
            \ can be one of the following:\n\n  * `PENDING` – The verification process\
            \ was initiated, but Amazon SES hasn't yet detected the DKIM records in\
            \ the DNS configuration for the domain.\n\n  * `SUCCESS` – The verification\
            \ process completed successfully.\n\n  * `FAILED` – The verification process\
            \ failed. This typically occurs when Amazon SES fails to find the DKIM\
            \ records in the DNS configuration of the domain.\n\n  * `TEMPORARY_FAILURE`\
            \ – A temporary issue is preventing Amazon SES from determining the DKIM\
            \ authentication status of the domain.\n\n  * `NOT_STARTED` – The DKIM\
            \ verification process hasn't been initiated for the domain."
        DkimTokens:
          allOf:
          - $ref: '#/components/schemas/DnsTokenList'
          description: 'If you used [Easy DKIM](https://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim.html)
            to configure DKIM authentication for the domain, then this object contains
            a set of unique strings that you use to create a set of CNAME records
            that you add to the DNS configuration for your domain. When Amazon SES
            detects these records in the DNS configuration for your domain, the DKIM
            authentication process is complete.


            If you configured DKIM authentication for the domain by providing your
            own public-private key pair, then this object contains the selector that''s
            associated with your public key.


            Regardless of the DKIM authentication method you use, Amazon SES searches
            for the appropriate records in the DNS configuration of the domain for
            up to 72 hours.'
      description: 'If the action is successful, the service sends back an HTTP 200
        response.


        The following data is returned in JSON format by the service.'
    PutEmailIdentityFeedbackAttributesRequest:
      type: object
      properties:
        EmailIdentity:
          allOf:
          - $ref: '#/components/schemas/Identity'
          description: The email identity.
        EmailForwardingEnabled:
          allOf:
          - $ref: '#/components/schemas/Enabled'
          description: 'Sets the feedback forwarding configuration for the identity.


            If the value is `true`, you receive email notifications when bounce or
            complaint events occur. These notifications are sent to the address that
            you specified in the `Return-Path` header of the original email.


            You''re required to have a method of tracking bounces and complaints.
            If you haven''t set up another mechanism for receiving bounce or complaint
            notifications (for example, by setting up an event destination), you receive
            an email notification when these events occur (even if this setting is
            disabled).'
      required:
      - EmailIdentity
      description: A request to set the attributes that control how bounce and complaint
        events are processed.
    PutEmailIdentityFeedbackAttributesResponse:
      type: object
      properties: {}
      description: An HTTP 200 response if the request succeeds, or an error message
        if the request fails.
    PutEmailIdentityMailFromAttributesRequest:
      type: object
      properties:
        EmailIdentity:
          allOf:
          - $ref: '#/components/schemas/Identity'
          description: The verified email identity.
        MailFromDomain:
          allOf:
          - $ref: '#/components/schemas/MailFromDomainName'
          description: "The custom MAIL FROM domain that you want the verified identity\
            \ to use. The MAIL FROM domain must meet the following criteria:\n\n \
            \ * It has to be a subdomain of the verified identity.\n\n  * It can't\
            \ be used to receive email.\n\n  * It can't be used in a \"From\" address\
            \ if the MAIL FROM domain is a destination for feedback forwarding emails."
        BehaviorOnMxFailure:
          allOf:
          - $ref: '#/components/schemas/BehaviorOnMxFailure'
          description: 'The action to take if the required MX record isn''t found
            when you send an email. When you set this value to `UseDefaultValue`,
            the mail is sent using _amazonses.com_ as the MAIL FROM domain. When you
            set this value to `RejectMessage`, the Amazon SES API v2 returns a `MailFromDomainNotVerified`
            error, and doesn''t attempt to deliver the email.


            These behaviors are taken when the custom MAIL FROM domain configuration
            is in the `Pending`, `Failed`, and `TemporaryFailure` states.'
      required:
      - EmailIdentity
      description: A request to configure the custom MAIL FROM domain for a verified
        identity.
    PutEmailIdentityMailFromAttributesResponse:
      type: object
      properties: {}
      description: An HTTP 200 response if the request succeeds, or an error message
        if the request fails.
    PutSuppressedDestinationRequest:
      type: object
      properties:
        EmailAddress:
          allOf:
          - $ref: '#/components/schemas/EmailAddress'
          description: The email address that should be added to the suppression list
            for your account.
        Reason:
          allOf:
          - $ref: '#/components/schemas/SuppressionListReason'
          description: The factors that should cause the email address to be added
            to the suppression list for your account.
      required:
      - EmailAddress
      - Reason
      description: A request to add an email destination to the suppression list for
        your account.
    PutSuppressedDestinationResponse:
      type: object
      properties: {}
      description: An HTTP 200 response if the request succeeds, or an error message
        if the request fails.
    QueryErrorCode:
      type: string
      enum:
      - INTERNAL_FAILURE
      - ACCESS_DENIED
    QueryErrorMessage:
      type: string
    QueryIdentifier:
      type: string
      minLength: 1
      maxLength: 255
    RawAttachmentData:
      type: string
      format: byte
    RawMessage:
      type: object
      properties:
        Data:
          allOf:
          - $ref: '#/components/schemas/RawMessageData'
          description: "The raw email message. The message has to meet the following\
            \ criteria:\n\n  * The message has to contain a header and a body, separated\
            \ by one blank line.\n\n  * All of the required header fields must be\
            \ present in the message.\n\n  * Each part of a multipart MIME message\
            \ must be formatted properly.\n\n  * Attachments must be in a file format\
            \ that the Amazon SES supports.\n\n  * The raw data of the message needs\
            \ to base64-encoded if you are accessing Amazon SES directly through the\
            \ HTTPS interface. If you are accessing Amazon SES using an Amazon Web\
            \ Services SDK, the SDK takes care of the base 64-encoding for you.\n\n\
            \  * If any of the MIME parts in your message contain content that is\
            \ outside of the 7-bit ASCII character range, you should encode that content\
            \ to ensure that recipients' email clients render the message properly.\n\
            \n  * The length of any single line of text in the message can't exceed\
            \ 1,000 characters. This restriction is defined in [RFC 5321](https://tools.ietf.org/html/rfc5321)."
      required:
      - Data
      description: Represents the raw content of an email message.
    RawMessageData:
      type: string
      format: byte
      description: "<p>The raw email message. The message has to meet the following\
        \ criteria:</p>\n         <ul>\n            <li>\n               <p>The message\
        \ has to contain a header and a body, separated by one blank\n           \
        \         line.</p>\n            </li>\n            <li>\n               <p>All\
        \ of the required header fields must be present in the message.</p>\n    \
        \        </li>\n            <li>\n               <p>Each part of a multipart\
        \ MIME message must be formatted properly.</p>\n            </li>\n      \
        \      <li>\n               <p>Attachments must be in a file format that the\
        \ Amazon SES API v2 supports.\n                    </p>\n            </li>\n\
        \            <li>\n               <p>The entire message must be Base64 encoded.</p>\n\
        \            </li>\n            <li>\n               <p>If any of the MIME\
        \ parts in your message contain content that is outside of\n             \
        \       the 7-bit ASCII character range, you should encode that content to\
        \ ensure that\n                    recipients' email clients render the message\
        \ properly.</p>\n            </li>\n            <li>\n               <p>The\
        \ length of any single line of text in the message can't exceed 1,000\n  \
        \                  characters. This restriction is defined in <a href=\"https://tools.ietf.org/html/rfc5321\"\
        >RFC 5321</a>.</p>\n            </li>\n         </ul>"
    RblName:
      type: string
    Recommendation:
      type: object
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          description: The resource affected by the recommendation, with values like
            `arn:aws:ses:us-east-1:123456789012:identity/example.com`.
        Type:
          allOf:
          - $ref: '#/components/schemas/RecommendationType'
          description: The recommendation type, with values like `DKIM`, `SPF`, `DMARC`,
            `BIMI`, or `COMPLAINT`.
        Description:
          allOf:
          - $ref: '#/components/schemas/RecommendationDescription'
          description: The recommendation description / disambiguator - e.g. `DKIM1`
            and `DKIM2` are different recommendations about your DKIM setup.
        Status:
          allOf:
          - $ref: '#/components/schemas/RecommendationStatus'
          description: The recommendation status, with values like `OPEN` or `FIXED`.
        CreatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The first time this issue was encountered and the recommendation
            was generated.
        LastUpdatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The last time the recommendation was updated.
        Impact:
          allOf:
          - $ref: '#/components/schemas/RecommendationImpact'
          description: The recommendation impact, with values like `HIGH` or `LOW`.
      description: A recommendation generated for your account.
    RecommendationDescription:
      type: string
    RecommendationImpact:
      type: string
      enum:
      - LOW
      - HIGH
    RecommendationStatus:
      type: string
      enum:
      - OPEN
      - FIXED
    RecommendationType:
      type: string
      enum:
      - DKIM
      - DMARC
      - SPF
      - BIMI
      - COMPLAINT
    RecommendationsList:
      type: array
      items:
        $ref: '#/components/schemas/Recommendation'
    Region:
      type: string
    Regions:
      type: array
      items:
        $ref: '#/components/schemas/Region'
    RenderedEmailTemplate:
      type: string
    ReplacementEmailContent:
      type: object
      properties:
        ReplacementTemplate:
          allOf:
          - $ref: '#/components/schemas/ReplacementTemplate'
          description: The `ReplacementTemplate` associated with `ReplacementEmailContent`.
      description: The `ReplaceEmailContent` object to be used for a specific `BulkEmailEntry`.
        The `ReplacementTemplate` can be specified within this object.
    ReplacementTemplate:
      type: object
      properties:
        ReplacementTemplateData:
          allOf:
          - $ref: '#/components/schemas/EmailTemplateData'
          description: A list of replacement values to apply to the template. This
            parameter is a JSON object, typically consisting of key-value pairs in
            which the keys correspond to replacement tags in the email template.
      description: An object which contains `ReplacementTemplateData` to be used for
        a specific `BulkEmailEntry`.
    ReportId:
      type: string
    ReportName:
      type: string
    ReputationOptions:
      type: object
      properties:
        ReputationMetricsEnabled:
          allOf:
          - $ref: '#/components/schemas/Enabled'
          description: If `true`, tracking of reputation metrics is enabled for the
            configuration set. If `false`, tracking of reputation metrics is disabled
            for the configuration set.
        LastFreshStart:
          allOf:
          - $ref: '#/components/schemas/LastFreshStart'
          description: The date and time (in Unix time) when the reputation metrics
            were last given a fresh start. When your account is given a fresh start,
            your reputation metrics are calculated starting from the date of the fresh
            start.
      description: Enable or disable collection of reputation metrics for emails that
        you send using this configuration set in the current Amazon Web Services Region.
    ReviewDetails:
      type: object
      properties:
        Status:
          allOf:
          - $ref: '#/components/schemas/ReviewStatus'
          description: "The status of the latest review of your account. The status\
            \ can be one of the following:\n\n  * `PENDING` – We have received your\
            \ appeal and are in the process of reviewing it.\n\n  * `GRANTED` – Your\
            \ appeal has been reviewed and your production access has been granted.\n\
            \n  * `DENIED` – Your appeal has been reviewed and your production access\
            \ has been denied.\n\n  * `FAILED` – An internal error occurred and we\
            \ didn't receive your appeal. You can submit your appeal again."
        CaseId:
          allOf:
          - $ref: '#/components/schemas/CaseId'
          description: The associated support center case ID (if any).
      description: An object that contains information about your account details
        review.
    ReviewStatus:
      type: string
      enum:
      - PENDING
      - FAILED
      - GRANTED
      - DENIED
    Route:
      type: object
      properties:
        Region:
          allOf:
          - $ref: '#/components/schemas/Region'
          description: The name of an AWS-Region.
      required:
      - Region
      description: An object which contains an AWS-Region and routing status.
    RouteDetails:
      type: object
      properties:
        Region:
          allOf:
          - $ref: '#/components/schemas/Region'
          description: The name of an AWS-Region to be a secondary region for the
            multi-region endpoint (global-endpoint).
      required:
      - Region
      description: An object that contains route configuration. Includes secondary
        region name.
    Routes:
      type: array
      items:
        $ref: '#/components/schemas/Route'
      description: <p>A list of routes between which the traffic will be split when
        sending through the multi-region endpoint (global-endpoint).</p>
    RoutesDetails:
      type: array
      items:
        $ref: '#/components/schemas/RouteDetails'
      description: <p>A list of route configuration details. Must contain exactly
        one route configuration.</p>
    S3Url:
      type: string
      pattern: ^s3:\/\/([^\/]+)\/(.*?([^\/]+)\/?)$
    SOARecord:
      type: object
      properties:
        PrimaryNameServer:
          allOf:
          - $ref: '#/components/schemas/PrimaryNameServer'
          description: Primary name server specified in the SOA record.
        AdminEmail:
          allOf:
          - $ref: '#/components/schemas/AdminEmail'
          description: Administrative contact email from the SOA record.
        SerialNumber:
          allOf:
          - $ref: '#/components/schemas/SerialNumber'
          description: Serial number from the SOA record.
      description: An object that contains information about the start of authority
        (SOA) record associated with the identity.
    ScalingMode:
      type: string
      enum:
      - STANDARD
      - MANAGED
    Selector:
      type: string
      pattern: ^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\-]*[a-zA-Z0-9]))$
      minLength: 1
      maxLength: 63
    SendBulkEmailRequest:
      type: object
      properties:
        FromEmailAddress:
          allOf:
          - $ref: '#/components/schemas/EmailAddress'
          description: The email address to use as the "From" address for the email.
            The address that you specify has to be verified.
        FromEmailAddressIdentityArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          description: 'This parameter is used only for sending authorization. It
            is the ARN of the identity that is associated with the sending authorization
            policy that permits you to use the email address specified in the `FromEmailAddress`
            parameter.


            For example, if the owner of example.com (which has ARN arn:aws:ses:us-east-1:123456789012:identity/example.com)
            attaches a policy to it that authorizes you to use sender@example.com,
            then you would specify the `FromEmailAddressIdentityArn` to be arn:aws:ses:us-east-1:123456789012:identity/example.com,
            and the `FromEmailAddress` to be sender@example.com.


            For more information about sending authorization, see the [Amazon SES
            Developer Guide](https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html).'
        ReplyToAddresses:
          allOf:
          - $ref: '#/components/schemas/EmailAddressList'
          description: The "Reply-to" email addresses for the message. When the recipient
            replies to the message, each Reply-to address receives the reply.
        FeedbackForwardingEmailAddress:
          allOf:
          - $ref: '#/components/schemas/EmailAddress'
          description: The address that you want bounce and complaint notifications
            to be sent to.
        FeedbackForwardingEmailAddressIdentityArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          description: 'This parameter is used only for sending authorization. It
            is the ARN of the identity that is associated with the sending authorization
            policy that permits you to use the email address specified in the `FeedbackForwardingEmailAddress`
            parameter.


            For example, if the owner of example.com (which has ARN arn:aws:ses:us-east-1:123456789012:identity/example.com)
            attaches a policy to it that authorizes you to use feedback@example.com,
            then you would specify the `FeedbackForwardingEmailAddressIdentityArn`
            to be arn:aws:ses:us-east-1:123456789012:identity/example.com, and the
            `FeedbackForwardingEmailAddress` to be feedback@example.com.


            For more information about sending authorization, see the [Amazon SES
            Developer Guide](https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html).'
        DefaultEmailTags:
          allOf:
          - $ref: '#/components/schemas/MessageTagList'
          description: A list of tags, in the form of name/value pairs, to apply to
            an email that you send using the `SendEmail` operation. Tags correspond
            to characteristics of the email that you define, so that you can publish
            email sending events.
        DefaultContent:
          allOf:
          - $ref: '#/components/schemas/BulkEmailContent'
          description: An object that contains the body of the message. You can specify
            a template message.
        BulkEmailEntries:
          allOf:
          - $ref: '#/components/schemas/BulkEmailEntryList'
          description: The list of bulk email entry objects.
        ConfigurationSetName:
          allOf:
          - $ref: '#/components/schemas/ConfigurationSetName'
          description: The name of the configuration set to use when sending the email.
        EndpointId:
          allOf:
          - $ref: '#/components/schemas/EndpointId'
          description: The ID of the multi-region endpoint (global-endpoint).
      required:
      - DefaultContent
      - BulkEmailEntries
      description: Represents a request to send email messages to multiple destinations
        using Amazon SES. For more information, see the [Amazon SES Developer Guide](https://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-personalized-email-api.html).
    SendBulkEmailResponse:
      type: object
      properties:
        BulkEmailEntryResults:
          allOf:
          - $ref: '#/components/schemas/BulkEmailEntryResultList'
          description: One object per intended recipient. Check each response object
            and retry any messages with a failure status.
      required:
      - BulkEmailEntryResults
      description: The following data is returned in JSON format by the service.
    SendCustomVerificationEmailRequest:
      type: object
      properties:
        EmailAddress:
          allOf:
          - $ref: '#/components/schemas/EmailAddress'
          description: The email address to verify.
        TemplateName:
          allOf:
          - $ref: '#/components/schemas/EmailTemplateName'
          description: The name of the custom verification email template to use when
            sending the verification email.
        ConfigurationSetName:
          allOf:
          - $ref: '#/components/schemas/ConfigurationSetName'
          description: Name of a configuration set to use when sending the verification
            email.
      required:
      - EmailAddress
      - TemplateName
      description: Represents a request to send a custom verification email to a specified
        recipient.
    SendCustomVerificationEmailResponse:
      type: object
      properties:
        MessageId:
          allOf:
          - $ref: '#/components/schemas/OutboundMessageId'
          description: The unique message identifier returned from the `SendCustomVerificationEmail`
            operation.
      description: The following element is returned by the service.
    SendEmailRequest:
      type: object
      properties:
        FromEmailAddress:
          allOf:
          - $ref: '#/components/schemas/EmailAddress'
          description: The email address to use as the "From" address for the email.
            The address that you specify has to be verified.
        FromEmailAddressIdentityArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          description: 'This parameter is used only for sending authorization. It
            is the ARN of the identity that is associated with the sending authorization
            policy that permits you to use the email address specified in the `FromEmailAddress`
            parameter.


            For example, if the owner of example.com (which has ARN arn:aws:ses:us-east-1:123456789012:identity/example.com)
            attaches a policy to it that authorizes you to use sender@example.com,
            then you would specify the `FromEmailAddressIdentityArn` to be arn:aws:ses:us-east-1:123456789012:identity/example.com,
            and the `FromEmailAddress` to be sender@example.com.


            For more information about sending authorization, see the [Amazon SES
            Developer Guide](https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html).


            For Raw emails, the `FromEmailAddressIdentityArn` value overrides the
            X-SES-SOURCE-ARN and X-SES-FROM-ARN headers specified in raw email message
            content.'
        Destination:
          allOf:
          - $ref: '#/components/schemas/Destination'
          description: An object that contains the recipients of the email message.
        ReplyToAddresses:
          allOf:
          - $ref: '#/components/schemas/EmailAddressList'
          description: The "Reply-to" email addresses for the message. When the recipient
            replies to the message, each Reply-to address receives the reply.
        FeedbackForwardingEmailAddress:
          allOf:
          - $ref: '#/components/schemas/EmailAddress'
          description: The address that you want bounce and complaint notifications
            to be sent to.
        FeedbackForwardingEmailAddressIdentityArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          description: 'This parameter is used only for sending authorization. It
            is the ARN of the identity that is associated with the sending authorization
            policy that permits you to use the email address specified in the `FeedbackForwardingEmailAddress`
            parameter.


            For example, if the owner of example.com (which has ARN arn:aws:ses:us-east-1:123456789012:identity/example.com)
            attaches a policy to it that authorizes you to use feedback@example.com,
            then you would specify the `FeedbackForwardingEmailAddressIdentityArn`
            to be arn:aws:ses:us-east-1:123456789012:identity/example.com, and the
            `FeedbackForwardingEmailAddress` to be feedback@example.com.


            For more information about sending authorization, see the [Amazon SES
            Developer Guide](https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization.html).'
        Content:
          allOf:
          - $ref: '#/components/schemas/EmailContent'
          description: An object that contains the body of the message. You can send
            either a Simple message, Raw message, or a Templated message.
        EmailTags:
          allOf:
          - $ref: '#/components/schemas/MessageTagList'
          description: A list of tags, in the form of name/value pairs, to apply to
            an email that you send using the `SendEmail` operation. Tags correspond
            to characteristics of the email that you define, so that you can publish
            email sending events.
        ConfigurationSetName:
          allOf:
          - $ref: '#/components/schemas/ConfigurationSetName'
          description: The name of the configuration set to use when sending the email.
        EndpointId:
          allOf:
          - $ref: '#/components/schemas/EndpointId'
          description: The ID of the multi-region endpoint (global-endpoint).
        ListManagementOptions:
          allOf:
          - $ref: '#/components/schemas/ListManagementOptions'
          description: An object used to specify a list or topic to which an email
            belongs, which will be used when a contact chooses to unsubscribe.
      required:
      - Content
      description: Represents a request to send a single formatted email using Amazon
        SES. For more information, see the [Amazon SES Developer Guide](https://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-email-formatted.html).
    SendEmailResponse:
      type: object
      properties:
        MessageId:
          allOf:
          - $ref: '#/components/schemas/OutboundMessageId'
          description: 'A unique identifier for the message that is generated when
            the message is accepted.


            It''s possible for Amazon SES to accept a message without sending it.
            For example, this can happen when the message that you''re trying to send
            has an attachment that contains a virus, or when you send a templated
            email that contains invalid personalization content.'
      description: A unique message ID that you receive when an email is accepted
        for sending.
    SendQuota:
      type: object
      properties:
        Max24HourSend:
          allOf:
          - $ref: '#/components/schemas/Max24HourSend'
          description: The maximum number of emails that you can send in the current
            Amazon Web Services Region over a 24-hour period. A value of -1 signifies
            an unlimited quota. (This value is also referred to as your _sending quota_.)
        MaxSendRate:
          allOf:
          - $ref: '#/components/schemas/MaxSendRate'
          description: The maximum number of emails that you can send per second in
            the current Amazon Web Services Region. This value is also called your
            _maximum sending rate_ or your _maximum TPS (transactions per second)
            rate_.
        SentLast24Hours:
          allOf:
          - $ref: '#/components/schemas/SentLast24Hours'
          description: The number of emails sent from your Amazon SES account in the
            current Amazon Web Services Region over the past 24 hours.
      description: An object that contains information about the per-day and per-second
        sending limits for your Amazon SES account in the current Amazon Web Services
        Region.
    SendingOptions:
      type: object
      properties:
        SendingEnabled:
          allOf:
          - $ref: '#/components/schemas/Enabled'
          description: If `true`, email sending is enabled for the configuration set.
            If `false`, email sending is disabled for the configuration set.
      description: Used to enable or disable email sending for messages that use this
        configuration set in the current Amazon Web Services Region.
    SendingPausedException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: The message can't be sent because the account's ability to send
        email is currently paused.
    SendingPoolName:
      type: string
    SentLast24Hours:
      type: number
      format: double
      default: 0
    SerialNumber:
      type: integer
      format: int64
      default: 0
    SnsDestination:
      type: object
      properties:
        TopicArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          description: The Amazon Resource Name (ARN) of the Amazon SNS topic to publish
            email events to. For more information about Amazon SNS topics, see the
            [Amazon SNS Developer Guide](https://docs.aws.amazon.com/sns/latest/dg/CreateTopic.html).
      required:
      - TopicArn
      description: An object that defines an Amazon SNS destination for email events.
        You can use Amazon SNS to send notifications when certain email events occur.
    Status:
      type: string
      enum:
      - CREATING
      - READY
      - FAILED
      - DELETING
      description: "<p>The status of the multi-region endpoint (global-endpoint).</p>\n\
        \         <ul>\n            <li>\n               <p>\n                  <code>CREATING</code>\
        \ – The resource is being provisioned.</p>\n            </li>\n          \
        \  <li>\n               <p>\n                  <code>READY</code> – The resource\
        \ is ready to use.</p>\n            </li>\n            <li>\n            \
        \   <p>\n                  <code>FAILED</code> – The resource failed to be\
        \ provisioned.</p>\n            </li>\n            <li>\n               <p>\n\
        \                  <code>DELETING</code> – The resource is being deleted as\
        \ requested.</p>\n            </li>\n         </ul>"
    Subject:
      type: string
    SubscriptionStatus:
      type: string
      enum:
      - OPT_IN
      - OPT_OUT
    SuccessRedirectionURL:
      type: string
    SuppressedDestination:
      type: object
      properties:
        EmailAddress:
          allOf:
          - $ref: '#/components/schemas/EmailAddress'
          description: The email address that is on the suppression list for your
            account.
        Reason:
          allOf:
          - $ref: '#/components/schemas/SuppressionListReason'
          description: The reason that the address was added to the suppression list
            for your account.
        LastUpdateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time when the suppressed destination was last
            updated, shown in Unix time format.
        Attributes:
          allOf:
          - $ref: '#/components/schemas/SuppressedDestinationAttributes'
          description: An optional value that can contain additional information about
            the reasons that the address was added to the suppression list for your
            account.
      required:
      - EmailAddress
      - Reason
      - LastUpdateTime
      description: An object that contains information about an email address that
        is on the suppression list for your account.
    SuppressedDestinationAttributes:
      type: object
      properties:
        MessageId:
          allOf:
          - $ref: '#/components/schemas/OutboundMessageId'
          description: The unique identifier of the email message that caused the
            email address to be added to the suppression list for your account.
        FeedbackId:
          allOf:
          - $ref: '#/components/schemas/FeedbackId'
          description: A unique identifier that's generated when an email address
            is added to the suppression list for your account.
      description: An object that contains additional attributes that are related
        an email address that is on the suppression list for your account.
    SuppressedDestinationSummaries:
      type: array
      items:
        $ref: '#/components/schemas/SuppressedDestinationSummary'
    SuppressedDestinationSummary:
      type: object
      properties:
        EmailAddress:
          allOf:
          - $ref: '#/components/schemas/EmailAddress'
          description: The email address that's on the suppression list for your account.
        Reason:
          allOf:
          - $ref: '#/components/schemas/SuppressionListReason'
          description: The reason that the address was added to the suppression list
            for your account.
        LastUpdateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time when the suppressed destination was last
            updated, shown in Unix time format.
      required:
      - EmailAddress
      - Reason
      - LastUpdateTime
      description: A summary that describes the suppressed email address.
    SuppressionAttributes:
      type: object
      properties:
        SuppressedReasons:
          allOf:
          - $ref: '#/components/schemas/SuppressionListReasons'
          description: "A list that contains the reasons that email addresses will\
            \ be automatically added to the suppression list for your account. This\
            \ list can contain any or all of the following:\n\n  * `COMPLAINT` – Amazon\
            \ SES adds an email address to the suppression list for your account when\
            \ a message sent to that address results in a complaint.\n\n  * `BOUNCE`\
            \ – Amazon SES adds an email address to the suppression list for your\
            \ account when a message sent to that address results in a hard bounce."
      description: An object that contains information about the email address suppression
        preferences for your account in the current Amazon Web Services Region.
    SuppressionListDestination:
      type: object
      properties:
        SuppressionListImportAction:
          allOf:
          - $ref: '#/components/schemas/SuppressionListImportAction'
          description: "The type of action to perform on the address. The following\
            \ are possible values:\n\n  * PUT: add the addresses to the suppression\
            \ list. If the record already exists, it will override it with the new\
            \ value.\n\n  * DELETE: remove the addresses from the suppression list."
      required:
      - SuppressionListImportAction
      description: An object that contains details about the action of suppression
        list.
    SuppressionListImportAction:
      type: string
      enum:
      - DELETE
      - PUT
      description: "<p>The type of action to perform on the address. The following\
        \ are possible values:</p>\n         <ul>\n            <li>\n            \
        \   <p>PUT: add the addresses to the suppression list.</p>\n            </li>\n\
        \            <li>\n               <p>DELETE: remove the address from the suppression\
        \ list.</p>\n            </li>\n         </ul>"
    SuppressionListReason:
      type: string
      enum:
      - BOUNCE
      - COMPLAINT
      description: "<p>The reason that the address was added to the suppression list\
        \ for your account. The\n            value can be one of the following:</p>\n\
        \         <ul>\n            <li>\n               <p>\n                  <code>COMPLAINT</code>\
        \ – Amazon SES added an email address to the suppression\n               \
        \     list for your account because a message sent to that address results\
        \ in a\n                    complaint.</p>\n            </li>\n          \
        \  <li>\n               <p>\n                  <code>BOUNCE</code> – Amazon\
        \ SES added an email address to the suppression\n                    list\
        \ for your account because a message sent to that address results in a hard\n\
        \                    bounce.</p>\n            </li>\n         </ul>"
    SuppressionListReasons:
      type: array
      items:
        $ref: '#/components/schemas/SuppressionListReason'
    SuppressionOptions:
      type: object
      properties:
        SuppressedReasons:
          allOf:
          - $ref: '#/components/schemas/SuppressionListReasons'
          description: "A list that contains the reasons that email addresses are\
            \ automatically added to the suppression list for your account. This list\
            \ can contain any or all of the following:\n\n  * `COMPLAINT` – Amazon\
            \ SES adds an email address to the suppression list for your account when\
            \ a message sent to that address results in a complaint.\n\n  * `BOUNCE`\
            \ – Amazon SES adds an email address to the suppression list for your\
            \ account when a message sent to that address results in a hard bounce."
      description: An object that contains information about the suppression list
        preferences for your account.
    Tag:
      type: object
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/TagKey'
          description: One part of a key-value pair that defines a tag. The maximum
            length of a tag key is 128 characters. The minimum length is 1 character.
        Value:
          allOf:
          - $ref: '#/components/schemas/TagValue'
          description: The optional part of a key-value pair that defines a tag. The
            maximum length of a tag value is 256 characters. The minimum length is
            0 characters. If you don't want a resource to have a specific tag value,
            don't specify a value for this parameter. If you don't specify a value,
            Amazon SES sets the value to an empty string.
      required:
      - Key
      - Value
      description: "An object that defines the tags that are associated with a resource.\
        \ A  _tag_ is a label that you optionally define and associate with a resource.\
        \ Tags can help you categorize and manage resources in different ways, such\
        \ as by purpose, owner, environment, or other criteria. A resource can have\
        \ as many as 50 tags.\n\nEach tag consists of a required  _tag key_ and an\
        \ associated  _tag value_ , both of which you define. A tag key is a general\
        \ label that acts as a category for a more specific tag value. A tag value\
        \ acts as a descriptor within a tag key. A tag key can contain as many as\
        \ 128 characters. A tag value can contain as many as 256 characters. The characters\
        \ can be Unicode letters, digits, white space, or one of the following symbols:\
        \ _ . : / = + -. The following additional restrictions apply to tags:\n\n\
        \  * Tag keys and values are case sensitive.\n\n  * For each associated resource,\
        \ each tag key must be unique and it can have only one value.\n\n  * The `aws:`\
        \ prefix is reserved for use by Amazon Web Services; you can’t use it in any\
        \ tag keys or values that you define. In addition, you can't edit or remove\
        \ tag keys or values that use this prefix. Tags that use this prefix don’t\
        \ count against the limit of 50 tags per resource.\n\n  * You can associate\
        \ tags with public or shared resources, but the tags are available only for\
        \ your Amazon Web Services account, not any other accounts that share the\
        \ resource. In addition, the tags are available only for resources that are\
        \ located in the specified Amazon Web Services Region for your Amazon Web\
        \ Services account."
    TagKey:
      type: string
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
    TagList:
      type: array
      items:
        $ref: '#/components/schemas/Tag'
    TagResourceRequest:
      type: object
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          description: The Amazon Resource Name (ARN) of the resource that you want
            to add one or more tags to.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: A list of the tags that you want to add to the resource. A
            tag consists of a required tag key (`Key`) and an associated tag value
            (`Value`). The maximum length of a tag key is 128 characters. The maximum
            length of a tag value is 256 characters.
      required:
      - ResourceArn
      - Tags
    TagResourceResponse:
      type: object
      properties: {}
    TagValue:
      type: string
    Template:
      type: object
      properties:
        TemplateName:
          allOf:
          - $ref: '#/components/schemas/EmailTemplateName'
          description: The name of the template. You will refer to this name when
            you send email using the `SendTemplatedEmail` or `SendBulkTemplatedEmail`
            operations.
        TemplateArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          description: The Amazon Resource Name (ARN) of the template.
        TemplateContent:
          allOf:
          - $ref: '#/components/schemas/EmailTemplateContent'
          description: 'The content of the template.


            Amazon SES supports only simple substitions when you send email using
            the `SendEmail` or `SendBulkEmail` operations and you provide the full
            template content in the request.'
        TemplateData:
          allOf:
          - $ref: '#/components/schemas/EmailTemplateData'
          description: An object that defines the values to use for message variables
            in the template. This object is a set of key-value pairs. Each key defines
            a message variable in the template. The corresponding value defines the
            value to use for that variable.
        Headers:
          allOf:
          - $ref: '#/components/schemas/MessageHeaderList'
          description: The list of message headers that will be added to the email
            message.
        Attachments:
          allOf:
          - $ref: '#/components/schemas/AttachmentList'
          description: The List of attachments to include in your email. All recipients
            will receive the same attachments.
      description: An object that defines the email template to use for an email message,
        and the values to use for any message variables in that template. An _email
        template_ is a type of message template that contains content that you want
        to reuse in email messages that you send. You can specifiy the email template
        by providing the name or ARN of an _email template_ previously saved in your
        Amazon SES account or by providing the full template content.
    TemplateContent:
      type: string
    TestRenderEmailTemplateRequest:
      type: object
      properties:
        TemplateName:
          allOf:
          - $ref: '#/components/schemas/EmailTemplateName'
          description: The name of the template.
        TemplateData:
          allOf:
          - $ref: '#/components/schemas/EmailTemplateData'
          description: A list of replacement values to apply to the template. This
            parameter is a JSON object, typically consisting of key-value pairs in
            which the keys correspond to replacement tags in the email template.
      required:
      - TemplateName
      - TemplateData
      description: '>Represents a request to create a preview of the MIME content
        of an email when provided with a template and a set of replacement data.'
    TestRenderEmailTemplateResponse:
      type: object
      properties:
        RenderedTemplate:
          allOf:
          - $ref: '#/components/schemas/RenderedEmailTemplate'
          description: The complete MIME message rendered by applying the data in
            the `TemplateData` parameter to the template specified in the TemplateName
            parameter.
      required:
      - RenderedTemplate
      description: The following element is returned by the service.
    Timestamp:
      type: string
      format: date-time
    TimestampList:
      type: array
      items:
        $ref: '#/components/schemas/Timestamp'
    TlsPolicy:
      type: string
      enum:
      - REQUIRE
      - OPTIONAL
      description: "<p>Specifies whether messages that use the configuration set are\
        \ required to use\n            Transport Layer Security (TLS). If the value\
        \ is <code>Require</code>, messages are only\n            delivered if a TLS\
        \ connection can be established. If the value is <code>Optional</code>,\n\
        \            messages can be delivered in plain text if a TLS connection can't\
        \ be established.</p>"
    TooManyRequestsException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: Too many requests have been made to the operation.
    Topic:
      type: object
      properties:
        TopicName:
          allOf:
          - $ref: '#/components/schemas/TopicName'
          description: The name of the topic.
        DisplayName:
          allOf:
          - $ref: '#/components/schemas/DisplayName'
          description: The name of the topic the contact will see.
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: A description of what the topic is about, which the contact
            will see.
        DefaultSubscriptionStatus:
          allOf:
          - $ref: '#/components/schemas/SubscriptionStatus'
          description: The default subscription status to be applied to a contact
            if the contact has not noted their preference for subscribing to a topic.
      required:
      - TopicName
      - DisplayName
      - DefaultSubscriptionStatus
      description: An interest group, theme, or label within a list. Lists can have
        multiple topics.
    TopicFilter:
      type: object
      properties:
        TopicName:
          allOf:
          - $ref: '#/components/schemas/TopicName'
          description: The name of a topic on which you wish to apply the filter.
        UseDefaultIfPreferenceUnavailable:
          allOf:
          - $ref: '#/components/schemas/UseDefaultIfPreferenceUnavailable'
          description: Notes that the default subscription status should be applied
            to a contact because the contact has not noted their preference for subscribing
            to a topic.
      description: Used for filtering by a specific topic preference.
    TopicName:
      type: string
    TopicPreference:
      type: object
      properties:
        TopicName:
          allOf:
          - $ref: '#/components/schemas/TopicName'
          description: The name of the topic.
        SubscriptionStatus:
          allOf:
          - $ref: '#/components/schemas/SubscriptionStatus'
          description: The contact's subscription status to a topic which is either
            `OPT_IN` or `OPT_OUT`.
      required:
      - TopicName
      - SubscriptionStatus
      description: The contact's preference for being opted-in to or opted-out of
        a topic.
    TopicPreferenceList:
      type: array
      items:
        $ref: '#/components/schemas/TopicPreference'
    Topics:
      type: array
      items:
        $ref: '#/components/schemas/Topic'
    TrackingOptions:
      type: object
      properties:
        CustomRedirectDomain:
          allOf:
          - $ref: '#/components/schemas/CustomRedirectDomain'
          description: The domain to use for tracking open and click events.
        HttpsPolicy:
          allOf:
          - $ref: '#/components/schemas/HttpsPolicy'
          description: The https policy to use for tracking open and click events.
      required:
      - CustomRedirectDomain
      description: 'An object that defines the tracking options for a configuration
        set. When you use the Amazon SES API v2 to send an email, it contains an invisible
        image that''s used to track when recipients open your email. If your email
        contains links, those links are changed slightly in order to track when recipients
        click them.


        These images and links include references to a domain operated by Amazon Web
        Services. You can optionally configure the Amazon SES to use a domain that
        you operate for these images and links.'
    UnsubscribeAll:
      type: boolean
      default: false
    UntagResourceRequest:
      type: object
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          description: The Amazon Resource Name (ARN) of the resource that you want
            to remove one or more tags from.
        TagKeys:
          allOf:
          - $ref: '#/components/schemas/TagKeyList'
          description: 'The tags (tag keys) that you want to remove from the resource.
            When you specify a tag key, the action removes both that key and its associated
            tag value.


            To remove more than one tag from the resource, append the `TagKeys` parameter
            and argument for each additional tag to remove, separated by an ampersand.
            For example: `/v2/email/tags?ResourceArn=ResourceArn&TagKeys;=Key1&TagKeys;=Key2`'
      required:
      - ResourceArn
      - TagKeys
    UntagResourceResponse:
      type: object
      properties: {}
    UpdateConfigurationSetEventDestinationRequest:
      type: object
      properties:
        ConfigurationSetName:
          allOf:
          - $ref: '#/components/schemas/ConfigurationSetName'
          description: The name of the configuration set that contains the event destination
            to modify.
        EventDestinationName:
          allOf:
          - $ref: '#/components/schemas/EventDestinationName'
          description: The name of the event destination.
        EventDestination:
          allOf:
          - $ref: '#/components/schemas/EventDestinationDefinition'
          description: An object that defines the event destination.
      required:
      - ConfigurationSetName
      - EventDestinationName
      - EventDestination
      description: A request to change the settings for an event destination for a
        configuration set.
    UpdateConfigurationSetEventDestinationResponse:
      type: object
      properties: {}
      description: An HTTP 200 response if the request succeeds, or an error message
        if the request fails.
    UpdateContactListRequest:
      type: object
      properties:
        ContactListName:
          allOf:
          - $ref: '#/components/schemas/ContactListName'
          description: The name of the contact list.
        Topics:
          allOf:
          - $ref: '#/components/schemas/Topics'
          description: An interest group, theme, or label within a list. A contact
            list can have multiple topics.
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: A description of what the contact list is about.
      required:
      - ContactListName
    UpdateContactListResponse:
      type: object
      properties: {}
    UpdateContactRequest:
      type: object
      properties:
        ContactListName:
          allOf:
          - $ref: '#/components/schemas/ContactListName'
          description: The name of the contact list.
        EmailAddress:
          allOf:
          - $ref: '#/components/schemas/EmailAddress'
          description: The contact's email address.
        TopicPreferences:
          allOf:
          - $ref: '#/components/schemas/TopicPreferenceList'
          description: The contact's preference for being opted-in to or opted-out
            of a topic.
        UnsubscribeAll:
          allOf:
          - $ref: '#/components/schemas/UnsubscribeAll'
          description: A boolean value status noting if the contact is unsubscribed
            from all contact list topics.
        AttributesData:
          allOf:
          - $ref: '#/components/schemas/AttributesData'
          description: The attribute data attached to a contact.
      required:
      - ContactListName
      - EmailAddress
    UpdateContactResponse:
      type: object
      properties: {}
    UpdateCustomVerificationEmailTemplateRequest:
      type: object
      properties:
        TemplateName:
          allOf:
          - $ref: '#/components/schemas/EmailTemplateName'
          description: The name of the custom verification email template that you
            want to update.
        FromEmailAddress:
          allOf:
          - $ref: '#/components/schemas/EmailAddress'
          description: The email address that the custom verification email is sent
            from.
        TemplateSubject:
          allOf:
          - $ref: '#/components/schemas/EmailTemplateSubject'
          description: The subject line of the custom verification email.
        TemplateContent:
          allOf:
          - $ref: '#/components/schemas/TemplateContent'
          description: The content of the custom verification email. The total size
            of the email must be less than 10 MB. The message body may contain HTML,
            with some limitations. For more information, see [Custom verification
            email frequently asked questions](https://docs.aws.amazon.com/ses/latest/dg/creating-identities.html#send-email-verify-address-custom-faq)
            in the _Amazon SES Developer Guide_.
        SuccessRedirectionURL:
          allOf:
          - $ref: '#/components/schemas/SuccessRedirectionURL'
          description: The URL that the recipient of the verification email is sent
            to if his or her address is successfully verified.
        FailureRedirectionURL:
          allOf:
          - $ref: '#/components/schemas/FailureRedirectionURL'
          description: The URL that the recipient of the verification email is sent
            to if his or her address is not successfully verified.
      required:
      - TemplateName
      - FromEmailAddress
      - TemplateSubject
      - TemplateContent
      - SuccessRedirectionURL
      - FailureRedirectionURL
      description: Represents a request to update an existing custom verification
        email template.
    UpdateCustomVerificationEmailTemplateResponse:
      type: object
      properties: {}
      description: If the action is successful, the service sends back an HTTP 200
        response with an empty HTTP body.
    UpdateEmailIdentityPolicyRequest:
      type: object
      properties:
        EmailIdentity:
          allOf:
          - $ref: '#/components/schemas/Identity'
          description: The email identity.
        PolicyName:
          allOf:
          - $ref: '#/components/schemas/PolicyName'
          description: 'The name of the policy.


            The policy name cannot exceed 64 characters and can only include alphanumeric
            characters, dashes, and underscores.'
        Policy:
          allOf:
          - $ref: '#/components/schemas/Policy'
          description: 'The text of the policy in JSON format. The policy cannot exceed
            4 KB.


            For information about the syntax of sending authorization policies, see
            the [Amazon SES Developer Guide](https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization-policies.html).'
      required:
      - EmailIdentity
      - PolicyName
      - Policy
      description: Represents a request to update a sending authorization policy for
        an identity. Sending authorization is an Amazon SES feature that enables you
        to authorize other senders to use your identities. For information, see the
        [Amazon SES Developer Guide](https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization-identity-owner-tasks-management.html).
    UpdateEmailIdentityPolicyResponse:
      type: object
      properties: {}
      description: An HTTP 200 response if the request succeeds, or an error message
        if the request fails.
    UpdateEmailTemplateRequest:
      type: object
      properties:
        TemplateName:
          allOf:
          - $ref: '#/components/schemas/EmailTemplateName'
          description: The name of the template.
        TemplateContent:
          allOf:
          - $ref: '#/components/schemas/EmailTemplateContent'
          description: The content of the email template, composed of a subject line,
            an HTML part, and a text-only part.
      required:
      - TemplateName
      - TemplateContent
      description: Represents a request to update an email template. For more information,
        see the [Amazon SES Developer Guide](https://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-personalized-email-api.html).
    UpdateEmailTemplateResponse:
      type: object
      properties: {}
      description: If the action is successful, the service sends back an HTTP 200
        response with an empty HTTP body.
    UseCaseDescription:
      type: string
      minLength: 0
      maxLength: 5000
    UseDefaultIfPreferenceUnavailable:
      type: boolean
      default: false
    VdmAttributes:
      type: object
      properties:
        VdmEnabled:
          allOf:
          - $ref: '#/components/schemas/FeatureStatus'
          description: "Specifies the status of your VDM configuration. Can be one\
            \ of the following:\n\n  * `ENABLED` – Amazon SES enables VDM for your\
            \ account.\n\n  * `DISABLED` – Amazon SES disables VDM for your account."
        DashboardAttributes:
          allOf:
          - $ref: '#/components/schemas/DashboardAttributes'
          description: Specifies additional settings for your VDM configuration as
            applicable to the Dashboard.
        GuardianAttributes:
          allOf:
          - $ref: '#/components/schemas/GuardianAttributes'
          description: Specifies additional settings for your VDM configuration as
            applicable to the Guardian.
      required:
      - VdmEnabled
      description: The VDM attributes that apply to your Amazon SES account.
    VdmOptions:
      type: object
      properties:
        DashboardOptions:
          allOf:
          - $ref: '#/components/schemas/DashboardOptions'
          description: Specifies additional settings for your VDM configuration as
            applicable to the Dashboard.
        GuardianOptions:
          allOf:
          - $ref: '#/components/schemas/GuardianOptions'
          description: Specifies additional settings for your VDM configuration as
            applicable to the Guardian.
      description: An object that defines the VDM settings that apply to emails that
        you send using the configuration set.
    VerificationError:
      type: string
      enum:
      - SERVICE_ERROR
      - DNS_SERVER_ERROR
      - HOST_NOT_FOUND
      - TYPE_NOT_FOUND
      - INVALID_VALUE
      - REPLICATION_ACCESS_DENIED
      - REPLICATION_PRIMARY_NOT_FOUND
      - REPLICATION_PRIMARY_BYO_DKIM_NOT_SUPPORTED
      - REPLICATION_REPLICA_AS_PRIMARY_NOT_SUPPORTED
      - REPLICATION_PRIMARY_INVALID_REGION
    VerificationInfo:
      type: object
      properties:
        LastCheckedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The last time a verification attempt was made for this identity.
        LastSuccessTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The last time a successful verification was made for this identity.
        ErrorType:
          allOf:
          - $ref: '#/components/schemas/VerificationError'
          description: "Provides the reason for the failure describing why Amazon\
            \ SES was not able to successfully verify the identity. Below are the\
            \ possible values:\n\n  * `INVALID_VALUE` – Amazon SES was able to find\
            \ the record, but the value contained within the record was invalid. Ensure\
            \ you have published the correct values for the record.\n\n  * `TYPE_NOT_FOUND`\
            \ – The queried hostname exists but does not have the requested type of\
            \ DNS record. Ensure that you have published the correct type of DNS record.\n\
            \n  * `HOST_NOT_FOUND` – The queried hostname does not exist or was not\
            \ reachable at the time of the request. Ensure that you have published\
            \ the required DNS record(s). \n\n  * `SERVICE_ERROR` – A temporary issue\
            \ is preventing Amazon SES from determining the verification status of\
            \ the domain.\n\n  * `DNS_SERVER_ERROR` – The DNS server encountered an\
            \ issue and was unable to complete the request.\n\n  * `REPLICATION_ACCESS_DENIED`\
            \ – The verification failed because the user does not have the required\
            \ permissions to replicate the DKIM key from the primary region. Ensure\
            \ you have the necessary permissions in both primary and replica regions.\
            \ \n\n  * `REPLICATION_PRIMARY_NOT_FOUND` – The verification failed because\
            \ no corresponding identity was found in the specified primary region.\
            \ Ensure the identity exists in the primary region before attempting replication.\
            \ \n\n  * `REPLICATION_PRIMARY_BYO_DKIM_NOT_SUPPORTED` – The verification\
            \ failed because the identity in the primary region is configured with\
            \ Bring Your Own DKIM (BYODKIM). DKIM key replication is only supported\
            \ for identities using Easy DKIM. \n\n  * `REPLICATION_REPLICA_AS_PRIMARY_NOT_SUPPORTED`\
            \ – The verification failed because the specified primary identity is\
            \ a replica of another identity, and multi-level replication is not supported;\
            \ the primary identity must be a non-replica identity. \n\n  * `REPLICATION_PRIMARY_INVALID_REGION`\
            \ – The verification failed due to an invalid primary region specified.\
            \ Ensure you provide a valid Amazon Web Services region where Amazon SES\
            \ is available and different from the replica region."
        SOARecord:
          allOf:
          - $ref: '#/components/schemas/SOARecord'
          description: An object that contains information about the start of authority
            (SOA) record associated with the identity.
      description: An object that contains additional information about the verification
        status for the identity.
    VerificationStatus:
      type: string
      enum:
      - PENDING
      - SUCCESS
      - FAILED
      - TEMPORARY_FAILURE
      - NOT_STARTED
    Volume:
      type: integer
      format: int64
      description: <p>An object that contains information about inbox placement volume.</p>
    VolumeStatistics:
      type: object
      properties:
        InboxRawCount:
          allOf:
          - $ref: '#/components/schemas/Volume'
          description: The total number of emails that arrived in recipients' inboxes.
        SpamRawCount:
          allOf:
          - $ref: '#/components/schemas/Volume'
          description: The total number of emails that arrived in recipients' spam
            or junk mail folders.
        ProjectedInbox:
          allOf:
          - $ref: '#/components/schemas/Volume'
          description: An estimate of the percentage of emails sent from the current
            domain that will arrive in recipients' inboxes.
        ProjectedSpam:
          allOf:
          - $ref: '#/components/schemas/Volume'
          description: An estimate of the percentage of emails sent from the current
            domain that will arrive in recipients' spam or junk mail folders.
      description: An object that contains information about the amount of email that
        was delivered to recipients.
    WarmupStatus:
      type: string
      enum:
      - IN_PROGRESS
      - DONE
      description: <p>The warmup status of a dedicated IP.</p>
    WebsiteURL:
      type: string
      pattern: ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?$
      minLength: 1
      maxLength: 1000
