openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: workspaces_web
  x-aws-serviceName: workspacesweb
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-07'
  version: '2020-07-08'
  title: Amazon WorkSpaces Web
  description: |-
    Amazon WorkSpaces Secure Browser is a low cost, fully managed WorkSpace built specifically to facilitate secure, web-based workloads. WorkSpaces Secure Browser makes it easy for customers to safely provide their employees with access to internal websites and SaaS web applications without the administrative burden of appliances or specialized client software. WorkSpaces Secure Browser provides simple policy tools tailored for user interactions, while offloading common tasks like capacity management, scaling, and maintaining browser images.
servers:
- description: The Amazon WorkSpaces Web regional endpoint
  url: https://workspaces-web.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths:
  /portals/{portalArn+}/browserSettings:
    put:
      operationId: AssociateBrowserSettings
      description: |-
        Associates a browser settings resource with a web portal.
      parameters:
      - name: portalArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ARN'
      - name: browserSettingsArn
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/ARN'
      responses:
        '200': {}
        '403':
          description: |-
            Access is denied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There is a conflict.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            There is an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource cannot be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            There is a throttling error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            There is a validation error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    delete:
      operationId: DisassociateBrowserSettings
      description: |-
        Disassociates browser settings from a web portal.
      parameters:
      - name: portalArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ARN'
      responses:
        '200': {}
        '403':
          description: |-
            Access is denied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There is a conflict.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            There is an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource cannot be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            There is a throttling error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            There is a validation error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /portals/{portalArn+}/dataProtectionSettings:
    put:
      operationId: AssociateDataProtectionSettings
      description: |-
        Associates a data protection settings resource with a web portal.
      parameters:
      - name: portalArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ARN'
      - name: dataProtectionSettingsArn
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/ARN'
      responses:
        '200': {}
        '403':
          description: |-
            Access is denied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There is a conflict.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            There is an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource cannot be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            There is a throttling error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            There is a validation error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    delete:
      operationId: DisassociateDataProtectionSettings
      description: |-
        Disassociates data protection settings from a web portal.
      parameters:
      - name: portalArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ARN'
      responses:
        '200': {}
        '403':
          description: |-
            Access is denied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There is a conflict.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            There is an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource cannot be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            There is a throttling error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            There is a validation error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /portals/{portalArn+}/ipAccessSettings:
    put:
      operationId: AssociateIpAccessSettings
      description: |-
        Associates an IP access settings resource with a web portal.
      parameters:
      - name: portalArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ARN'
      - name: ipAccessSettingsArn
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/ARN'
      responses:
        '200': {}
        '403':
          description: |-
            Access is denied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There is a conflict.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            There is an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource cannot be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            There is a throttling error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            There is a validation error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    delete:
      operationId: DisassociateIpAccessSettings
      description: |-
        Disassociates IP access settings from a web portal.
      parameters:
      - name: portalArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ARN'
      responses:
        '200': {}
        '403':
          description: |-
            Access is denied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There is a conflict.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            There is an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource cannot be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            There is a throttling error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            There is a validation error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /portals/{portalArn+}/networkSettings:
    put:
      operationId: AssociateNetworkSettings
      description: |-
        Associates a network settings resource with a web portal.
      parameters:
      - name: portalArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ARN'
      - name: networkSettingsArn
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/ARN'
      responses:
        '200': {}
        '403':
          description: |-
            Access is denied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There is a conflict.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            There is an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource cannot be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            There is a throttling error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            There is a validation error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    delete:
      operationId: DisassociateNetworkSettings
      description: |-
        Disassociates network settings from a web portal.
      parameters:
      - name: portalArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ARN'
      responses:
        '200': {}
        '403':
          description: |-
            Access is denied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There is a conflict.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            There is an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource cannot be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            There is a throttling error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            There is a validation error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /portals/{portalArn+}/trustStores:
    put:
      operationId: AssociateTrustStore
      description: |-
        Associates a trust store with a web portal.
      parameters:
      - name: portalArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ARN'
      - name: trustStoreArn
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/ARN'
      responses:
        '200': {}
        '403':
          description: |-
            Access is denied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There is a conflict.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            There is an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource cannot be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            There is a throttling error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            There is a validation error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    delete:
      operationId: DisassociateTrustStore
      description: |-
        Disassociates a trust store from a web portal.
      parameters:
      - name: portalArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ARN'
      responses:
        '200': {}
        '403':
          description: |-
            Access is denied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There is a conflict.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            There is an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource cannot be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            There is a throttling error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            There is a validation error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /portals/{portalArn+}/userAccessLoggingSettings:
    put:
      operationId: AssociateUserAccessLoggingSettings
      description: |-
        Associates a user access logging settings resource with a web portal.
      parameters:
      - name: portalArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ARN'
      - name: userAccessLoggingSettingsArn
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/ARN'
      responses:
        '200': {}
        '403':
          description: |-
            Access is denied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There is a conflict.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            There is an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource cannot be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            There is a throttling error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            There is a validation error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    delete:
      operationId: DisassociateUserAccessLoggingSettings
      description: |-
        Disassociates user access logging settings from a web portal.
      parameters:
      - name: portalArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ARN'
      responses:
        '200': {}
        '403':
          description: |-
            Access is denied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There is a conflict.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            There is an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource cannot be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            There is a throttling error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            There is a validation error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /portals/{portalArn+}/userSettings:
    put:
      operationId: AssociateUserSettings
      description: |-
        Associates a user settings resource with a web portal.
      parameters:
      - name: portalArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ARN'
      - name: userSettingsArn
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/ARN'
      responses:
        '200': {}
        '403':
          description: |-
            Access is denied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There is a conflict.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            There is an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource cannot be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            There is a throttling error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            There is a validation error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    delete:
      operationId: DisassociateUserSettings
      description: |-
        Disassociates user settings from a web portal.
      parameters:
      - name: portalArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ARN'
      responses:
        '200': {}
        '403':
          description: |-
            Access is denied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There is a conflict.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            There is an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource cannot be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            There is a throttling error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            There is a validation error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /browserSettings:
    post:
      operationId: CreateBrowserSettings
      description: |-
        Creates a browser settings resource that can be associated with a web portal. Once associated with a web portal, browser settings control how the browser will behave once a user starts a streaming session for the web portal.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tags:
                  $ref: '#/components/schemas/TagList'
                customerManagedKey:
                  $ref: '#/components/schemas/keyArn'
                additionalEncryptionContext:
                  $ref: '#/components/schemas/EncryptionContextMap'
                browserPolicy:
                  $ref: '#/components/schemas/BrowserPolicy'
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '403':
          description: |-
            Access is denied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There is a conflict.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            There is an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource cannot be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            The service quota has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            There is a throttling error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            There is a validation error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: ListBrowserSettings
      description: |-
        Retrieves a list of browser settings.
      parameters:
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PaginationToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            Access is denied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            There is an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            There is a throttling error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            There is a validation error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /dataProtectionSettings:
    post:
      operationId: CreateDataProtectionSettings
      description: |-
        Creates a data protection settings resource that can be associated with a web portal.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                displayName:
                  $ref: '#/components/schemas/DisplayNameSafe'
                description:
                  $ref: '#/components/schemas/DescriptionSafe'
                tags:
                  $ref: '#/components/schemas/TagList'
                customerManagedKey:
                  $ref: '#/components/schemas/keyArn'
                additionalEncryptionContext:
                  $ref: '#/components/schemas/EncryptionContextMap'
                inlineRedactionConfiguration:
                  $ref: '#/components/schemas/InlineRedactionConfiguration'
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '403':
          description: |-
            Access is denied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There is a conflict.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            There is an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource cannot be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            The service quota has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            There is a throttling error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            There is a validation error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: ListDataProtectionSettings
      description: |-
        Retrieves a list of data protection settings.
      parameters:
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PaginationToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            Access is denied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            There is an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            There is a throttling error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            There is a validation error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /identityProviders:
    post:
      operationId: CreateIdentityProvider
      description: |-
        Creates an identity provider resource that is then associated with a web portal.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                portalArn:
                  $ref: '#/components/schemas/ARN'
                identityProviderName:
                  $ref: '#/components/schemas/IdentityProviderName'
                identityProviderType:
                  $ref: '#/components/schemas/IdentityProviderType'
                identityProviderDetails:
                  $ref: '#/components/schemas/IdentityProviderDetails'
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
                tags:
                  $ref: '#/components/schemas/TagList'
      responses:
        '200': {}
        '403':
          description: |-
            Access is denied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There is a conflict.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            There is an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource cannot be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            The service quota has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            There is a throttling error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            There is a validation error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /ipAccessSettings:
    post:
      operationId: CreateIpAccessSettings
      description: |-
        Creates an IP access settings resource that can be associated with a web portal.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                displayName:
                  $ref: '#/components/schemas/DisplayName'
                description:
                  $ref: '#/components/schemas/Description'
                tags:
                  $ref: '#/components/schemas/TagList'
                customerManagedKey:
                  $ref: '#/components/schemas/keyArn'
                additionalEncryptionContext:
                  $ref: '#/components/schemas/EncryptionContextMap'
                ipRules:
                  $ref: '#/components/schemas/IpRuleList'
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '403':
          description: |-
            Access is denied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There is a conflict.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            There is an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '402':
          description: |-
            The service quota has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            There is a throttling error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            There is a validation error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: ListIpAccessSettings
      description: |-
        Retrieves a list of IP access settings.
      parameters:
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PaginationToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            Access is denied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            There is an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            There is a throttling error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            There is a validation error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /networkSettings:
    post:
      operationId: CreateNetworkSettings
      description: |-
        Creates a network settings resource that can be associated with a web portal. Once associated with a web portal, network settings define how streaming instances will connect with your specified VPC.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                vpcId:
                  $ref: '#/components/schemas/VpcId'
                subnetIds:
                  $ref: '#/components/schemas/SubnetIdList'
                securityGroupIds:
                  $ref: '#/components/schemas/SecurityGroupIdList'
                tags:
                  $ref: '#/components/schemas/TagList'
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '403':
          description: |-
            Access is denied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There is a conflict.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            There is an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '402':
          description: |-
            The service quota has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            There is a throttling error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            There is a validation error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: ListNetworkSettings
      description: |-
        Retrieves a list of network settings.
      parameters:
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PaginationToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            Access is denied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            There is an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            There is a throttling error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            There is a validation error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /portals:
    post:
      operationId: CreatePortal
      description: |-
        Creates a web portal.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                displayName:
                  $ref: '#/components/schemas/DisplayName'
                tags:
                  $ref: '#/components/schemas/TagList'
                customerManagedKey:
                  $ref: '#/components/schemas/keyArn'
                additionalEncryptionContext:
                  $ref: '#/components/schemas/EncryptionContextMap'
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
                authenticationType:
                  $ref: '#/components/schemas/AuthenticationType'
                instanceType:
                  $ref: '#/components/schemas/InstanceType'
                maxConcurrentSessions:
                  $ref: '#/components/schemas/MaxConcurrentSessions'
      responses:
        '200': {}
        '403':
          description: |-
            Access is denied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There is a conflict.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            There is an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource cannot be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            The service quota has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            There is a throttling error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            There is a validation error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: ListPortals
      description: |-
        Retrieves a list or web portals.
      parameters:
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PaginationToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            Access is denied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            There is an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            There is a throttling error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            There is a validation error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /trustStores:
    post:
      operationId: CreateTrustStore
      description: |-
        Creates a trust store that can be associated with a web portal. A trust store contains certificate authority (CA) certificates. Once associated with a web portal, the browser in a streaming session will recognize certificates that have been issued using any of the CAs in the trust store. If your organization has internal websites that use certificates issued by private CAs, you should add the private CA certificate to the trust store.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                certificateList:
                  $ref: '#/components/schemas/CertificateList'
                tags:
                  $ref: '#/components/schemas/TagList'
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '403':
          description: |-
            Access is denied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There is a conflict.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            There is an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '402':
          description: |-
            The service quota has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            There is a throttling error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            There is a validation error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: ListTrustStores
      description: |-
        Retrieves a list of trust stores.
      parameters:
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PaginationToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            Access is denied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            There is an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            There is a throttling error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            There is a validation error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /userAccessLoggingSettings:
    post:
      operationId: CreateUserAccessLoggingSettings
      description: |-
        Creates a user access logging settings resource that can be associated with a web portal.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                kinesisStreamArn:
                  $ref: '#/components/schemas/KinesisStreamArn'
                tags:
                  $ref: '#/components/schemas/TagList'
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '403':
          description: |-
            Access is denied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There is a conflict.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            There is an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '402':
          description: |-
            The service quota has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            There is a throttling error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            There is a validation error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: ListUserAccessLoggingSettings
      description: |-
        Retrieves a list of user access logging settings.
      parameters:
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PaginationToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            Access is denied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            There is an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            There is a throttling error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            There is a validation error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /userSettings:
    post:
      operationId: CreateUserSettings
      description: |-
        Creates a user settings resource that can be associated with a web portal. Once associated with a web portal, user settings control how users can transfer data between a streaming session and the their local devices.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                copyAllowed:
                  $ref: '#/components/schemas/EnabledType'
                pasteAllowed:
                  $ref: '#/components/schemas/EnabledType'
                downloadAllowed:
                  $ref: '#/components/schemas/EnabledType'
                uploadAllowed:
                  $ref: '#/components/schemas/EnabledType'
                printAllowed:
                  $ref: '#/components/schemas/EnabledType'
                tags:
                  $ref: '#/components/schemas/TagList'
                disconnectTimeoutInMinutes:
                  $ref: '#/components/schemas/DisconnectTimeoutInMinutes'
                idleDisconnectTimeoutInMinutes:
                  $ref: '#/components/schemas/IdleDisconnectTimeoutInMinutes'
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
                cookieSynchronizationConfiguration:
                  $ref: '#/components/schemas/CookieSynchronizationConfiguration'
                customerManagedKey:
                  $ref: '#/components/schemas/keyArn'
                additionalEncryptionContext:
                  $ref: '#/components/schemas/EncryptionContextMap'
                deepLinkAllowed:
                  $ref: '#/components/schemas/EnabledType'
                toolbarConfiguration:
                  $ref: '#/components/schemas/ToolbarConfiguration'
      responses:
        '200': {}
        '403':
          description: |-
            Access is denied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There is a conflict.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            There is an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '402':
          description: |-
            The service quota has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            There is a throttling error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            There is a validation error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: ListUserSettings
      description: |-
        Retrieves a list of user settings.
      parameters:
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PaginationToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            Access is denied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            There is an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            There is a throttling error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            There is a validation error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /browserSettings/{browserSettingsArn+}:
    delete:
      operationId: DeleteBrowserSettings
      description: |-
        Deletes browser settings.
      parameters:
      - name: browserSettingsArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ARN'
      responses:
        '200': {}
        '403':
          description: |-
            Access is denied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There is a conflict.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            There is an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            There is a throttling error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            There is a validation error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetBrowserSettings
      description: |-
        Gets browser settings.
      parameters:
      - name: browserSettingsArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ARN'
      responses:
        '200': {}
        '403':
          description: |-
            Access is denied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            There is an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource cannot be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            There is a throttling error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            There is a validation error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    patch:
      operationId: UpdateBrowserSettings
      description: |-
        Updates browser settings.
      parameters:
      - name: browserSettingsArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ARN'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                browserPolicy:
                  $ref: '#/components/schemas/BrowserPolicy'
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '403':
          description: |-
            Access is denied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            There is an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource cannot be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            There is a throttling error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            There is a validation error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /dataProtectionSettings/{dataProtectionSettingsArn+}:
    delete:
      operationId: DeleteDataProtectionSettings
      description: |-
        Deletes data protection settings.
      parameters:
      - name: dataProtectionSettingsArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ARN'
      responses:
        '200': {}
        '403':
          description: |-
            Access is denied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There is a conflict.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            There is an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            There is a throttling error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            There is a validation error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetDataProtectionSettings
      description: |-
        Gets the data protection settings.
      parameters:
      - name: dataProtectionSettingsArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ARN'
      responses:
        '200': {}
        '403':
          description: |-
            Access is denied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            There is an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource cannot be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            There is a throttling error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            There is a validation error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    patch:
      operationId: UpdateDataProtectionSettings
      description: |-
        Updates data protection settings.
      parameters:
      - name: dataProtectionSettingsArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ARN'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                inlineRedactionConfiguration:
                  $ref: '#/components/schemas/InlineRedactionConfiguration'
                displayName:
                  $ref: '#/components/schemas/DisplayNameSafe'
                description:
                  $ref: '#/components/schemas/DescriptionSafe'
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '403':
          description: |-
            Access is denied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            There is an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource cannot be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            There is a throttling error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            There is a validation error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /identityProviders/{identityProviderArn+}:
    delete:
      operationId: DeleteIdentityProvider
      description: |-
        Deletes the identity provider.
      parameters:
      - name: identityProviderArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/SubresourceARN'
      responses:
        '200': {}
        '403':
          description: |-
            Access is denied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There is a conflict.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            There is an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            There is a throttling error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            There is a validation error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetIdentityProvider
      description: |-
        Gets the identity provider.
      parameters:
      - name: identityProviderArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/SubresourceARN'
      responses:
        '200': {}
        '403':
          description: |-
            Access is denied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            There is an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource cannot be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            There is a throttling error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            There is a validation error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    patch:
      operationId: UpdateIdentityProvider
      description: |-
        Updates the identity provider.
      parameters:
      - name: identityProviderArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/SubresourceARN'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                identityProviderName:
                  $ref: '#/components/schemas/IdentityProviderName'
                identityProviderType:
                  $ref: '#/components/schemas/IdentityProviderType'
                identityProviderDetails:
                  $ref: '#/components/schemas/IdentityProviderDetails'
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '403':
          description: |-
            Access is denied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            There is an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource cannot be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            There is a throttling error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            There is a validation error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /ipAccessSettings/{ipAccessSettingsArn+}:
    delete:
      operationId: DeleteIpAccessSettings
      description: |-
        Deletes IP access settings.
      parameters:
      - name: ipAccessSettingsArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ARN'
      responses:
        '200': {}
        '403':
          description: |-
            Access is denied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There is a conflict.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            There is an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            There is a throttling error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            There is a validation error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetIpAccessSettings
      description: |-
        Gets the IP access settings.
      parameters:
      - name: ipAccessSettingsArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ARN'
      responses:
        '200': {}
        '403':
          description: |-
            Access is denied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            There is an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource cannot be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            There is a throttling error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            There is a validation error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    patch:
      operationId: UpdateIpAccessSettings
      description: |-
        Updates IP access settings.
      parameters:
      - name: ipAccessSettingsArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ARN'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                displayName:
                  $ref: '#/components/schemas/DisplayName'
                description:
                  $ref: '#/components/schemas/Description'
                ipRules:
                  $ref: '#/components/schemas/IpRuleList'
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '403':
          description: |-
            Access is denied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            There is an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource cannot be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            There is a throttling error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            There is a validation error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /networkSettings/{networkSettingsArn+}:
    delete:
      operationId: DeleteNetworkSettings
      description: |-
        Deletes network settings.
      parameters:
      - name: networkSettingsArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ARN'
      responses:
        '200': {}
        '403':
          description: |-
            Access is denied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There is a conflict.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            There is an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            There is a throttling error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            There is a validation error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetNetworkSettings
      description: |-
        Gets the network settings.
      parameters:
      - name: networkSettingsArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ARN'
      responses:
        '200': {}
        '403':
          description: |-
            Access is denied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            There is an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource cannot be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            There is a throttling error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            There is a validation error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    patch:
      operationId: UpdateNetworkSettings
      description: |-
        Updates network settings.
      parameters:
      - name: networkSettingsArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ARN'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                vpcId:
                  $ref: '#/components/schemas/VpcId'
                subnetIds:
                  $ref: '#/components/schemas/SubnetIdList'
                securityGroupIds:
                  $ref: '#/components/schemas/SecurityGroupIdList'
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '403':
          description: |-
            Access is denied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            There is an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource cannot be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            There is a throttling error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            There is a validation error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /portals/{portalArn+}:
    delete:
      operationId: DeletePortal
      description: |-
        Deletes a web portal.
      parameters:
      - name: portalArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ARN'
      responses:
        '200': {}
        '403':
          description: |-
            Access is denied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There is a conflict.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            There is an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            There is a throttling error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            There is a validation error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetPortal
      description: |-
        Gets the web portal.
      parameters:
      - name: portalArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ARN'
      responses:
        '200': {}
        '403':
          description: |-
            Access is denied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            There is an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource cannot be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            There is a throttling error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            There is a validation error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    put:
      operationId: UpdatePortal
      description: |-
        Updates a web portal.
      parameters:
      - name: portalArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ARN'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                displayName:
                  $ref: '#/components/schemas/DisplayName'
                authenticationType:
                  $ref: '#/components/schemas/AuthenticationType'
                instanceType:
                  $ref: '#/components/schemas/InstanceType'
                maxConcurrentSessions:
                  $ref: '#/components/schemas/MaxConcurrentSessions'
      responses:
        '200': {}
        '403':
          description: |-
            Access is denied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There is a conflict.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            There is an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource cannot be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            The service quota has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            There is a throttling error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            There is a validation error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /trustStores/{trustStoreArn+}:
    delete:
      operationId: DeleteTrustStore
      description: |-
        Deletes the trust store.
      parameters:
      - name: trustStoreArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ARN'
      responses:
        '200': {}
        '403':
          description: |-
            Access is denied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There is a conflict.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            There is an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            There is a throttling error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            There is a validation error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetTrustStore
      description: |-
        Gets the trust store.
      parameters:
      - name: trustStoreArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ARN'
      responses:
        '200': {}
        '403':
          description: |-
            Access is denied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            There is an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource cannot be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            There is a throttling error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            There is a validation error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    patch:
      operationId: UpdateTrustStore
      description: |-
        Updates the trust store.
      parameters:
      - name: trustStoreArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ARN'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                certificatesToAdd:
                  $ref: '#/components/schemas/CertificateList'
                certificatesToDelete:
                  $ref: '#/components/schemas/CertificateThumbprintList'
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '403':
          description: |-
            Access is denied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            There is an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource cannot be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            The service quota has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            There is a throttling error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            There is a validation error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /userAccessLoggingSettings/{userAccessLoggingSettingsArn+}:
    delete:
      operationId: DeleteUserAccessLoggingSettings
      description: |-
        Deletes user access logging settings.
      parameters:
      - name: userAccessLoggingSettingsArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ARN'
      responses:
        '200': {}
        '403':
          description: |-
            Access is denied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There is a conflict.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            There is an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            There is a throttling error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            There is a validation error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetUserAccessLoggingSettings
      description: |-
        Gets user access logging settings.
      parameters:
      - name: userAccessLoggingSettingsArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ARN'
      responses:
        '200': {}
        '403':
          description: |-
            Access is denied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            There is an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource cannot be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            There is a throttling error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            There is a validation error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    patch:
      operationId: UpdateUserAccessLoggingSettings
      description: |-
        Updates the user access logging settings.
      parameters:
      - name: userAccessLoggingSettingsArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ARN'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                kinesisStreamArn:
                  $ref: '#/components/schemas/KinesisStreamArn'
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '403':
          description: |-
            Access is denied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            There is an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource cannot be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            There is a throttling error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            There is a validation error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /userSettings/{userSettingsArn+}:
    delete:
      operationId: DeleteUserSettings
      description: |-
        Deletes user settings.
      parameters:
      - name: userSettingsArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ARN'
      responses:
        '200': {}
        '403':
          description: |-
            Access is denied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            There is a conflict.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            There is an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            There is a throttling error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            There is a validation error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetUserSettings
      description: |-
        Gets user settings.
      parameters:
      - name: userSettingsArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ARN'
      responses:
        '200': {}
        '403':
          description: |-
            Access is denied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            There is an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource cannot be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            There is a throttling error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            There is a validation error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    patch:
      operationId: UpdateUserSettings
      description: |-
        Updates the user settings.
      parameters:
      - name: userSettingsArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ARN'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                copyAllowed:
                  $ref: '#/components/schemas/EnabledType'
                pasteAllowed:
                  $ref: '#/components/schemas/EnabledType'
                downloadAllowed:
                  $ref: '#/components/schemas/EnabledType'
                uploadAllowed:
                  $ref: '#/components/schemas/EnabledType'
                printAllowed:
                  $ref: '#/components/schemas/EnabledType'
                disconnectTimeoutInMinutes:
                  $ref: '#/components/schemas/DisconnectTimeoutInMinutes'
                idleDisconnectTimeoutInMinutes:
                  $ref: '#/components/schemas/IdleDisconnectTimeoutInMinutes'
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
                cookieSynchronizationConfiguration:
                  $ref: '#/components/schemas/CookieSynchronizationConfiguration'
                deepLinkAllowed:
                  $ref: '#/components/schemas/EnabledType'
                toolbarConfiguration:
                  $ref: '#/components/schemas/ToolbarConfiguration'
      responses:
        '200': {}
        '403':
          description: |-
            Access is denied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            There is an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource cannot be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            There is a throttling error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            There is a validation error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /portals/{portalId}/sessions/{sessionId}:
    delete:
      operationId: ExpireSession
      description: |-
        Expires an active secure browser session.
      parameters:
      - name: portalId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PortalId'
      - name: sessionId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/SessionId'
      responses:
        '200': {}
        '403':
          description: |-
            Access is denied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            There is an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource cannot be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            There is a throttling error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            There is a validation error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetSession
      description: |-
        Gets information for a secure browser session.
      parameters:
      - name: portalId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PortalId'
      - name: sessionId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/SessionId'
      responses:
        '200': {}
        '403':
          description: |-
            Access is denied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            There is an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource cannot be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            There is a throttling error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            There is a validation error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /portalIdp/{portalArn+}:
    get:
      operationId: GetPortalServiceProviderMetadata
      description: |-
        Gets the service provider metadata.
      parameters:
      - name: portalArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ARN'
      responses:
        '200': {}
        '403':
          description: |-
            Access is denied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            There is an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource cannot be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            There is a throttling error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            There is a validation error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /trustStores/{trustStoreArn+}/certificate:
    get:
      operationId: GetTrustStoreCertificate
      description: |-
        Gets the trust store certificate.
      parameters:
      - name: trustStoreArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ARN'
      - name: thumbprint
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/CertificateThumbprint'
      responses:
        '200': {}
        '403':
          description: |-
            Access is denied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            There is an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource cannot be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            There is a throttling error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            There is a validation error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /portals/{portalArn+}/identityProviders:
    get:
      operationId: ListIdentityProviders
      description: |-
        Retrieves a list of identity providers for a specific web portal.
      parameters:
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PaginationToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: portalArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ARN'
      responses:
        '200': {}
        '403':
          description: |-
            Access is denied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            There is an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            There is a throttling error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            There is a validation error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /portals/{portalId}/sessions:
    get:
      operationId: ListSessions
      description: |-
        Lists information for multiple secure browser sessions from a specific portal.
      parameters:
      - name: portalId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PortalId'
      - name: username
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Username'
      - name: sessionId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/SessionId'
      - name: sortBy
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/SessionSortBy'
      - name: status
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/SessionStatus'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PaginationToken'
      responses:
        '200': {}
        '403':
          description: |-
            Access is denied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            There is an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource cannot be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            There is a throttling error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            There is a validation error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /tags/{resourceArn+}:
    get:
      operationId: ListTagsForResource
      description: |-
        Retrieves a list of tags for a resource.
      parameters:
      - name: resourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ARN'
      responses:
        '200': {}
        '403':
          description: |-
            Access is denied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            There is an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource cannot be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            There is a throttling error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            There is a validation error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    post:
      operationId: TagResource
      description: |-
        Adds or overwrites one or more tags for the specified resource.
      parameters:
      - name: resourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ARN'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tags:
                  $ref: '#/components/schemas/TagList'
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '403':
          description: |-
            Access is denied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            There is an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource cannot be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            There is a throttling error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            There is a validation error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    delete:
      operationId: UntagResource
      description: |-
        Removes one or more tags from the specified resource.
      parameters:
      - name: resourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ARN'
      - name: tagKeys
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/TagKeyList'
      responses:
        '200': {}
        '403':
          description: |-
            Access is denied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            There is an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource cannot be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            There is a throttling error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            There is a validation error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /trustStores/{trustStoreArn+}/certificates:
    get:
      operationId: ListTrustStoreCertificates
      description: |-
        Retrieves a list of trust store certificates.
      parameters:
      - name: trustStoreArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ARN'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PaginationToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            Access is denied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            There is an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource cannot be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            There is a throttling error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            There is a validation error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
components:
  schemas:
    ARN:
      type: string
      pattern: ^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36})+$
      minLength: 20
      maxLength: 2048
    AccessDeniedException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ExceptionMessage'
      description: Access is denied.
    ArnList:
      type: array
      items:
        $ref: '#/components/schemas/ARN'
    AssociateBrowserSettingsRequest:
      type: object
      properties:
        portalArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the web portal.
        browserSettingsArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the browser settings.
      required:
      - portalArn
      - browserSettingsArn
    AssociateBrowserSettingsResponse:
      type: object
      properties:
        portalArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the web portal.
        browserSettingsArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the browser settings.
      required:
      - portalArn
      - browserSettingsArn
    AssociateDataProtectionSettingsRequest:
      type: object
      properties:
        portalArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the web portal.
        dataProtectionSettingsArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the data protection settings.
      required:
      - portalArn
      - dataProtectionSettingsArn
    AssociateDataProtectionSettingsResponse:
      type: object
      properties:
        portalArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the web portal.
        dataProtectionSettingsArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the data protection settings resource.
      required:
      - portalArn
      - dataProtectionSettingsArn
    AssociateIpAccessSettingsRequest:
      type: object
      properties:
        portalArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the web portal.
        ipAccessSettingsArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the IP access settings.
      required:
      - portalArn
      - ipAccessSettingsArn
    AssociateIpAccessSettingsResponse:
      type: object
      properties:
        portalArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the web portal.
        ipAccessSettingsArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the IP access settings resource.
      required:
      - portalArn
      - ipAccessSettingsArn
    AssociateNetworkSettingsRequest:
      type: object
      properties:
        portalArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the web portal.
        networkSettingsArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the network settings.
      required:
      - portalArn
      - networkSettingsArn
    AssociateNetworkSettingsResponse:
      type: object
      properties:
        portalArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the web portal.
        networkSettingsArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the network settings.
      required:
      - portalArn
      - networkSettingsArn
    AssociateTrustStoreRequest:
      type: object
      properties:
        portalArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the web portal.
        trustStoreArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the trust store.
      required:
      - portalArn
      - trustStoreArn
    AssociateTrustStoreResponse:
      type: object
      properties:
        portalArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the web portal.
        trustStoreArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the trust store.
      required:
      - portalArn
      - trustStoreArn
    AssociateUserAccessLoggingSettingsRequest:
      type: object
      properties:
        portalArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the web portal.
        userAccessLoggingSettingsArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the user access logging settings.
      required:
      - portalArn
      - userAccessLoggingSettingsArn
    AssociateUserAccessLoggingSettingsResponse:
      type: object
      properties:
        portalArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the web portal.
        userAccessLoggingSettingsArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the user access logging settings.
      required:
      - portalArn
      - userAccessLoggingSettingsArn
    AssociateUserSettingsRequest:
      type: object
      properties:
        portalArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the web portal.
        userSettingsArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the user settings.
      required:
      - portalArn
      - userSettingsArn
    AssociateUserSettingsResponse:
      type: object
      properties:
        portalArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the web portal.
        userSettingsArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the user settings.
      required:
      - portalArn
      - userSettingsArn
    AuthenticationType:
      type: string
      enum:
      - Standard
      - IAM_Identity_Center
    BrowserPolicy:
      type: string
      pattern: \{[\S\s]*\}\s*
      minLength: 2
      maxLength: 131072
    BrowserSettings:
      type: object
      properties:
        browserSettingsArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the browser settings.
        associatedPortalArns:
          allOf:
          - $ref: '#/components/schemas/ArnList'
          description: A list of web portal ARNs that this browser settings is associated
            with.
        browserPolicy:
          allOf:
          - $ref: '#/components/schemas/BrowserPolicy'
          description: A JSON string containing Chrome Enterprise policies that will
            be applied to all streaming sessions.
        customerManagedKey:
          allOf:
          - $ref: '#/components/schemas/keyArn'
          description: The customer managed key used to encrypt sensitive information
            in the browser settings.
        additionalEncryptionContext:
          allOf:
          - $ref: '#/components/schemas/EncryptionContextMap'
          description: The additional encryption context of the browser settings.
      required:
      - browserSettingsArn
      description: The browser settings resource that can be associated with a web
        portal. Once associated with a web portal, browser settings control how the
        browser will behave once a user starts a streaming session for the web portal.
    BrowserSettingsList:
      type: array
      items:
        $ref: '#/components/schemas/BrowserSettingsSummary'
    BrowserSettingsSummary:
      type: object
      properties:
        browserSettingsArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the browser settings.
      required:
      - browserSettingsArn
      description: The summary for browser settings.
    BrowserType:
      type: string
      enum:
      - Chrome
    BuiltInPatternId:
      type: string
      pattern: ^[_\-\d\w]+$
      minLength: 1
      maxLength: 50
    Certificate:
      type: object
      properties:
        thumbprint:
          allOf:
          - $ref: '#/components/schemas/CertificateThumbprint'
          description: A hexadecimal identifier for the certificate.
        subject:
          allOf:
          - $ref: '#/components/schemas/CertificatePrincipal'
          description: The entity the certificate belongs to.
        issuer:
          allOf:
          - $ref: '#/components/schemas/CertificatePrincipal'
          description: The entity that issued the certificate.
        notValidBefore:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The certificate is not valid before this date.
        notValidAfter:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The certificate is not valid after this date.
        body:
          allOf:
          - $ref: '#/components/schemas/CertificateAuthorityBody'
          description: The body of the certificate.
      description: The certificate.
    CertificateAuthorityBody:
      type: string
      format: byte
    CertificateList:
      type: array
      items:
        $ref: '#/components/schemas/CertificateAuthorityBody'
    CertificatePrincipal:
      type: string
      pattern: ^\S+$
      minLength: 1
      maxLength: 256
    CertificateSummary:
      type: object
      properties:
        thumbprint:
          allOf:
          - $ref: '#/components/schemas/CertificateThumbprint'
          description: A hexadecimal identifier for the certificate.
        subject:
          allOf:
          - $ref: '#/components/schemas/CertificatePrincipal'
          description: The entity the certificate belongs to.
        issuer:
          allOf:
          - $ref: '#/components/schemas/CertificatePrincipal'
          description: The entity that issued the certificate.
        notValidBefore:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The certificate is not valid before this date.
        notValidAfter:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The certificate is not valid after this date.
      description: The summary of the certificate.
    CertificateSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/CertificateSummary'
    CertificateThumbprint:
      type: string
      pattern: ^[A-Fa-f0-9]{64}$
      minLength: 64
      maxLength: 64
    CertificateThumbprintList:
      type: array
      items:
        $ref: '#/components/schemas/CertificateThumbprint'
    ClientToken:
      type: string
      minLength: 1
      maxLength: 512
    ConfidenceLevel:
      type: integer
      minimum: 1
      maximum: 3
    ConflictException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ExceptionMessage'
        resourceId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          description: Identifier of the resource affected.
        resourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          description: Type of the resource affected.
      description: There is a conflict.
    CookieDomain:
      type: string
      pattern: ^(\.?)(?:[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?\.)*[a-z0-9][a-z0-9-]{0,61}[a-z0-9]$
      minLength: 0
      maxLength: 253
    CookieName:
      type: string
      minLength: 0
      maxLength: 4096
    CookiePath:
      type: string
      pattern: ^/(\S)*$
      minLength: 0
      maxLength: 2000
    CookieSpecification:
      type: object
      properties:
        domain:
          allOf:
          - $ref: '#/components/schemas/CookieDomain'
          description: The domain of the cookie.
        name:
          allOf:
          - $ref: '#/components/schemas/CookieName'
          description: The name of the cookie.
        path:
          allOf:
          - $ref: '#/components/schemas/CookiePath'
          description: The path of the cookie.
      required:
      - domain
      description: Specifies a single cookie or set of cookies in an end user's browser.
    CookieSpecifications:
      type: array
      items:
        $ref: '#/components/schemas/CookieSpecification'
    CookieSynchronizationConfiguration:
      type: object
      properties:
        allowlist:
          allOf:
          - $ref: '#/components/schemas/CookieSpecifications'
          description: The list of cookie specifications that are allowed to be synchronized
            to the remote browser.
        blocklist:
          allOf:
          - $ref: '#/components/schemas/CookieSpecifications'
          description: The list of cookie specifications that are blocked from being
            synchronized to the remote browser.
      required:
      - allowlist
      description: The configuration that specifies which cookies should be synchronized
        from the end user's local browser to the remote browser.
    CreateBrowserSettingsRequest:
      type: object
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: The tags to add to the browser settings resource. A tag is
            a key-value pair.
        customerManagedKey:
          allOf:
          - $ref: '#/components/schemas/keyArn'
          description: The custom managed key of the browser settings.
        additionalEncryptionContext:
          allOf:
          - $ref: '#/components/schemas/EncryptionContextMap'
          description: Additional encryption context of the browser settings.
        browserPolicy:
          allOf:
          - $ref: '#/components/schemas/BrowserPolicy'
          description: A JSON string containing Chrome Enterprise policies that will
            be applied to all streaming sessions.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: 'A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. Idempotency ensures that an API request
            completes only once. With an idempotent request, if the original request
            completes successfully, subsequent retries with the same client token
            returns the result from the original successful request.


            If you do not specify a client token, one is automatically generated by
            the Amazon Web Services SDK.'
      required:
      - browserPolicy
    CreateBrowserSettingsResponse:
      type: object
      properties:
        browserSettingsArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the browser settings.
      required:
      - browserSettingsArn
    CreateDataProtectionSettingsRequest:
      type: object
      properties:
        displayName:
          allOf:
          - $ref: '#/components/schemas/DisplayNameSafe'
          description: The display name of the data protection settings.
        description:
          allOf:
          - $ref: '#/components/schemas/DescriptionSafe'
          description: The description of the data protection settings.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: The tags to add to the data protection settings resource. A
            tag is a key-value pair.
        customerManagedKey:
          allOf:
          - $ref: '#/components/schemas/keyArn'
          description: The custom managed key of the data protection settings.
        additionalEncryptionContext:
          allOf:
          - $ref: '#/components/schemas/EncryptionContextMap'
          description: Additional encryption context of the data protection settings.
        inlineRedactionConfiguration:
          allOf:
          - $ref: '#/components/schemas/InlineRedactionConfiguration'
          description: The inline redaction configuration of the data protection settings
            that will be applied to all sessions.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: 'A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. Idempotency ensures that an API request
            completes only once. With an idempotent request, if the original request
            completes successfully, subsequent retries with the same client token
            returns the result from the original successful request.


            If you do not specify a client token, one is automatically generated by
            the Amazon Web Services SDK.'
    CreateDataProtectionSettingsResponse:
      type: object
      properties:
        dataProtectionSettingsArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the data protection settings resource.
      required:
      - dataProtectionSettingsArn
    CreateIdentityProviderRequest:
      type: object
      properties:
        portalArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the web portal.
        identityProviderName:
          allOf:
          - $ref: '#/components/schemas/IdentityProviderName'
          description: The identity provider name.
        identityProviderType:
          allOf:
          - $ref: '#/components/schemas/IdentityProviderType'
          description: The identity provider type.
        identityProviderDetails:
          allOf:
          - $ref: '#/components/schemas/IdentityProviderDetails'
          description: "The identity provider details. The following list describes\
            \ the provider detail keys for each identity provider type.\n\n  * For\
            \ Google and Login with Amazon:\n\n    * `client_id`\n\n    * `client_secret`\n\
            \n    * `authorize_scopes`\n\n  * For Facebook:\n\n    * `client_id`\n\
            \n    * `client_secret`\n\n    * `authorize_scopes`\n\n    * `api_version`\n\
            \n  * For Sign in with Apple:\n\n    * `client_id`\n\n    * `team_id`\n\
            \n    * `key_id`\n\n    * `private_key`\n\n    * `authorize_scopes`\n\n\
            \  * For OIDC providers:\n\n    * `client_id`\n\n    * `client_secret`\n\
            \n    * `attributes_request_method`\n\n    * `oidc_issuer`\n\n    * `authorize_scopes`\n\
            \n    * `authorize_url` _if not available from discovery URL specified\
            \ by`oidc_issuer` key_\n\n    * `token_url` _if not available from discovery\
            \ URL specified by`oidc_issuer` key_\n\n    * `attributes_url` _if not\
            \ available from discovery URL specified by`oidc_issuer` key_\n\n    *\
            \ `jwks_uri` _if not available from discovery URL specified by`oidc_issuer`\
            \ key_\n\n  * For SAML providers:\n\n    * `MetadataFile` OR `MetadataURL`\n\
            \n    * `IDPSignout` (boolean) _optional_\n\n    * `IDPInit` (boolean)\
            \ _optional_\n\n    * `RequestSigningAlgorithm` (string) _optional_ \\\
            - Only accepts `rsa-sha256`\n\n    * `EncryptedResponses` (boolean) _optional_"
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: 'A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. Idempotency ensures that an API request
            completes only once. With an idempotent request, if the original request
            completes successfully, subsequent retries with the same client token
            returns the result from the original successful request.


            If you do not specify a client token, one is automatically generated by
            the Amazon Web Services SDK.'
        tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: The tags to add to the identity provider resource. A tag is
            a key-value pair.
      required:
      - portalArn
      - identityProviderName
      - identityProviderType
      - identityProviderDetails
    CreateIdentityProviderResponse:
      type: object
      properties:
        identityProviderArn:
          allOf:
          - $ref: '#/components/schemas/SubresourceARN'
          description: The ARN of the identity provider.
      required:
      - identityProviderArn
    CreateIpAccessSettingsRequest:
      type: object
      properties:
        displayName:
          allOf:
          - $ref: '#/components/schemas/DisplayName'
          description: The display name of the IP access settings.
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: The description of the IP access settings.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: The tags to add to the IP access settings resource. A tag is
            a key-value pair.
        customerManagedKey:
          allOf:
          - $ref: '#/components/schemas/keyArn'
          description: The custom managed key of the IP access settings.
        additionalEncryptionContext:
          allOf:
          - $ref: '#/components/schemas/EncryptionContextMap'
          description: Additional encryption context of the IP access settings.
        ipRules:
          allOf:
          - $ref: '#/components/schemas/IpRuleList'
          description: The IP rules of the IP access settings.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: 'A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. Idempotency ensures that an API request
            completes only once. With an idempotent request, if the original request
            completes successfully, subsequent retries with the same client token
            returns the result from the original successful request.


            If you do not specify a client token, one is automatically generated by
            the Amazon Web Services SDK.'
      required:
      - ipRules
    CreateIpAccessSettingsResponse:
      type: object
      properties:
        ipAccessSettingsArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the IP access settings resource.
      required:
      - ipAccessSettingsArn
    CreateNetworkSettingsRequest:
      type: object
      properties:
        vpcId:
          allOf:
          - $ref: '#/components/schemas/VpcId'
          description: The VPC that streaming instances will connect to.
        subnetIds:
          allOf:
          - $ref: '#/components/schemas/SubnetIdList'
          description: The subnets in which network interfaces are created to connect
            streaming instances to your VPC. At least two of these subnets must be
            in different availability zones.
        securityGroupIds:
          allOf:
          - $ref: '#/components/schemas/SecurityGroupIdList'
          description: One or more security groups used to control access from streaming
            instances to your VPC.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: The tags to add to the network settings resource. A tag is
            a key-value pair.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: 'A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. Idempotency ensures that an API request
            completes only once. With an idempotent request, if the original request
            completes successfully, subsequent retries with the same client token
            returns the result from the original successful request.


            If you do not specify a client token, one is automatically generated by
            the Amazon Web Services SDK.'
      required:
      - vpcId
      - subnetIds
      - securityGroupIds
    CreateNetworkSettingsResponse:
      type: object
      properties:
        networkSettingsArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the network settings.
      required:
      - networkSettingsArn
    CreatePortalRequest:
      type: object
      properties:
        displayName:
          allOf:
          - $ref: '#/components/schemas/DisplayName'
          description: The name of the web portal. This is not visible to users who
            log into the web portal.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: The tags to add to the web portal. A tag is a key-value pair.
        customerManagedKey:
          allOf:
          - $ref: '#/components/schemas/keyArn'
          description: The customer managed key of the web portal.
        additionalEncryptionContext:
          allOf:
          - $ref: '#/components/schemas/EncryptionContextMap'
          description: The additional encryption context of the portal.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: 'A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. Idempotency ensures that an API request
            completes only once. With an idempotent request, if the original request
            completes successfully, subsequent retries with the same client token
            returns the result from the original successful request.


            If you do not specify a client token, one is automatically generated by
            the Amazon Web Services SDK.'
        authenticationType:
          allOf:
          - $ref: '#/components/schemas/AuthenticationType'
          description: 'The type of authentication integration points used when signing
            into the web portal. Defaults to `Standard`.


            `Standard` web portals are authenticated directly through your identity
            provider. You need to call `CreateIdentityProvider` to integrate your
            identity provider with your web portal. User and group access to your
            web portal is controlled through your identity provider.


            `IAM Identity Center` web portals are authenticated through IAM Identity
            Center. Identity sources (including external identity provider integration),
            plus user and group access to your web portal, can be configured in the
            IAM Identity Center.'
        instanceType:
          allOf:
          - $ref: '#/components/schemas/InstanceType'
          description: The type and resources of the underlying instance.
        maxConcurrentSessions:
          allOf:
          - $ref: '#/components/schemas/MaxConcurrentSessions'
          description: The maximum number of concurrent sessions for the portal.
    CreatePortalResponse:
      type: object
      properties:
        portalArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the web portal.
        portalEndpoint:
          allOf:
          - $ref: '#/components/schemas/PortalEndpoint'
          description: The endpoint URL of the web portal that users access in order
            to start streaming sessions.
      required:
      - portalArn
      - portalEndpoint
    CreateTrustStoreRequest:
      type: object
      properties:
        certificateList:
          allOf:
          - $ref: '#/components/schemas/CertificateList'
          description: A list of CA certificates to be added to the trust store.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: The tags to add to the trust store. A tag is a key-value pair.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: 'A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. Idempotency ensures that an API request
            completes only once. With an idempotent request, if the original request
            completes successfully, subsequent retries with the same client token
            returns the result from the original successful request.


            If you do not specify a client token, one is automatically generated by
            the Amazon Web Services SDK.'
      required:
      - certificateList
    CreateTrustStoreResponse:
      type: object
      properties:
        trustStoreArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the trust store.
      required:
      - trustStoreArn
    CreateUserAccessLoggingSettingsRequest:
      type: object
      properties:
        kinesisStreamArn:
          allOf:
          - $ref: '#/components/schemas/KinesisStreamArn'
          description: The ARN of the Kinesis stream.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: The tags to add to the user settings resource. A tag is a key-value
            pair.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: 'A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. Idempotency ensures that an API request
            completes only once. With an idempotent request, if the original request
            completes successfully, subsequent retries with the same client token
            returns the result from the original successful request.


            If you do not specify a client token, one is automatically generated by
            the Amazon Web Services SDK.'
      required:
      - kinesisStreamArn
    CreateUserAccessLoggingSettingsResponse:
      type: object
      properties:
        userAccessLoggingSettingsArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the user access logging settings.
      required:
      - userAccessLoggingSettingsArn
    CreateUserSettingsRequest:
      type: object
      properties:
        copyAllowed:
          allOf:
          - $ref: '#/components/schemas/EnabledType'
          description: Specifies whether the user can copy text from the streaming
            session to the local device.
        pasteAllowed:
          allOf:
          - $ref: '#/components/schemas/EnabledType'
          description: Specifies whether the user can paste text from the local device
            to the streaming session.
        downloadAllowed:
          allOf:
          - $ref: '#/components/schemas/EnabledType'
          description: Specifies whether the user can download files from the streaming
            session to the local device.
        uploadAllowed:
          allOf:
          - $ref: '#/components/schemas/EnabledType'
          description: Specifies whether the user can upload files from the local
            device to the streaming session.
        printAllowed:
          allOf:
          - $ref: '#/components/schemas/EnabledType'
          description: Specifies whether the user can print to the local device.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: The tags to add to the user settings resource. A tag is a key-value
            pair.
        disconnectTimeoutInMinutes:
          allOf:
          - $ref: '#/components/schemas/DisconnectTimeoutInMinutes'
          description: The amount of time that a streaming session remains active
            after users disconnect.
        idleDisconnectTimeoutInMinutes:
          allOf:
          - $ref: '#/components/schemas/IdleDisconnectTimeoutInMinutes'
          description: The amount of time that users can be idle (inactive) before
            they are disconnected from their streaming session and the disconnect
            timeout interval begins.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: 'A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. Idempotency ensures that an API request
            completes only once. With an idempotent request, if the original request
            completes successfully, subsequent retries with the same client token
            returns the result from the original successful request.


            If you do not specify a client token, one is automatically generated by
            the Amazon Web Services SDK.'
        cookieSynchronizationConfiguration:
          allOf:
          - $ref: '#/components/schemas/CookieSynchronizationConfiguration'
          description: The configuration that specifies which cookies should be synchronized
            from the end user's local browser to the remote browser.
        customerManagedKey:
          allOf:
          - $ref: '#/components/schemas/keyArn'
          description: The customer managed key used to encrypt sensitive information
            in the user settings.
        additionalEncryptionContext:
          allOf:
          - $ref: '#/components/schemas/EncryptionContextMap'
          description: The additional encryption context of the user settings.
        deepLinkAllowed:
          allOf:
          - $ref: '#/components/schemas/EnabledType'
          description: Specifies whether the user can use deep links that open automatically
            when connecting to a session.
        toolbarConfiguration:
          allOf:
          - $ref: '#/components/schemas/ToolbarConfiguration'
          description: The configuration of the toolbar. This allows administrators
            to select the toolbar type and visual mode, set maximum display resolution
            for sessions, and choose which items are visible to end users during their
            sessions. If administrators do not modify these settings, end users retain
            control over their toolbar preferences.
      required:
      - copyAllowed
      - pasteAllowed
      - downloadAllowed
      - uploadAllowed
      - printAllowed
    CreateUserSettingsResponse:
      type: object
      properties:
        userSettingsArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the user settings.
      required:
      - userSettingsArn
    CustomPattern:
      type: object
      properties:
        patternName:
          allOf:
          - $ref: '#/components/schemas/PatternName'
          description: The pattern name for the custom pattern.
        patternRegex:
          allOf:
          - $ref: '#/components/schemas/Regex'
          description: 'The pattern regex for the customer pattern. The format must
            follow JavaScript regex format. The pattern must be enclosed between slashes,
            and can have flags behind the second slash. For example: “/ab+c/gi”.'
        patternDescription:
          allOf:
          - $ref: '#/components/schemas/DescriptionSafe'
          description: The pattern description for the customer pattern.
        keywordRegex:
          allOf:
          - $ref: '#/components/schemas/Regex'
          description: The keyword regex for the customer pattern. After there is
            a match to the pattern regex, the keyword regex is used to search within
            the proximity of the match. If there is a keyword match, then the match
            is confirmed. If no keyword regex is provided, the pattern regex match
            will automatically be confirmed. The format must follow JavaScript regex
            format. The pattern must be enclosed between slashes, and can have flags
            behind the second slash. For example, “/ab+c/gi”
      required:
      - patternName
      - patternRegex
      description: The pattern configuration for redacting custom data types in session.
    DataProtectionSettings:
      type: object
      properties:
        dataProtectionSettingsArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the data protection settings resource.
        inlineRedactionConfiguration:
          allOf:
          - $ref: '#/components/schemas/InlineRedactionConfiguration'
          description: The inline redaction configuration for the data protection
            settings.
        associatedPortalArns:
          allOf:
          - $ref: '#/components/schemas/ArnList'
          description: A list of web portal ARNs that this data protection settings
            resource is associated with.
        displayName:
          allOf:
          - $ref: '#/components/schemas/DisplayNameSafe'
          description: The display name of the data protection settings.
        description:
          allOf:
          - $ref: '#/components/schemas/DescriptionSafe'
          description: The description of the data protection settings.
        creationDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The creation date timestamp of the data protection settings.
        customerManagedKey:
          allOf:
          - $ref: '#/components/schemas/keyArn'
          description: The customer managed key used to encrypt sensitive information
            in the data protection settings.
        additionalEncryptionContext:
          allOf:
          - $ref: '#/components/schemas/EncryptionContextMap'
          description: The additional encryption context of the data protection settings.
      required:
      - dataProtectionSettingsArn
      description: The data protection settings resource that can be associated with
        a web portal.
    DataProtectionSettingsList:
      type: array
      items:
        $ref: '#/components/schemas/DataProtectionSettingsSummary'
    DataProtectionSettingsSummary:
      type: object
      properties:
        dataProtectionSettingsArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the data protection settings.
        displayName:
          allOf:
          - $ref: '#/components/schemas/DisplayNameSafe'
          description: The display name of the data protection settings.
        description:
          allOf:
          - $ref: '#/components/schemas/DescriptionSafe'
          description: The description of the data protection settings.
        creationDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The creation date timestamp of the data protection settings.
      required:
      - dataProtectionSettingsArn
      description: The summary of the data protection settings.
    DeleteBrowserSettingsRequest:
      type: object
      properties:
        browserSettingsArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the browser settings.
      required:
      - browserSettingsArn
    DeleteBrowserSettingsResponse:
      type: object
      properties: {}
    DeleteDataProtectionSettingsRequest:
      type: object
      properties:
        dataProtectionSettingsArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the data protection settings.
      required:
      - dataProtectionSettingsArn
    DeleteDataProtectionSettingsResponse:
      type: object
      properties: {}
    DeleteIdentityProviderRequest:
      type: object
      properties:
        identityProviderArn:
          allOf:
          - $ref: '#/components/schemas/SubresourceARN'
          description: The ARN of the identity provider.
      required:
      - identityProviderArn
    DeleteIdentityProviderResponse:
      type: object
      properties: {}
    DeleteIpAccessSettingsRequest:
      type: object
      properties:
        ipAccessSettingsArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the IP access settings.
      required:
      - ipAccessSettingsArn
    DeleteIpAccessSettingsResponse:
      type: object
      properties: {}
    DeleteNetworkSettingsRequest:
      type: object
      properties:
        networkSettingsArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the network settings.
      required:
      - networkSettingsArn
    DeleteNetworkSettingsResponse:
      type: object
      properties: {}
    DeletePortalRequest:
      type: object
      properties:
        portalArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the web portal.
      required:
      - portalArn
    DeletePortalResponse:
      type: object
      properties: {}
    DeleteTrustStoreRequest:
      type: object
      properties:
        trustStoreArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the trust store.
      required:
      - trustStoreArn
    DeleteTrustStoreResponse:
      type: object
      properties: {}
    DeleteUserAccessLoggingSettingsRequest:
      type: object
      properties:
        userAccessLoggingSettingsArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the user access logging settings.
      required:
      - userAccessLoggingSettingsArn
    DeleteUserAccessLoggingSettingsResponse:
      type: object
      properties: {}
    DeleteUserSettingsRequest:
      type: object
      properties:
        userSettingsArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the user settings.
      required:
      - userSettingsArn
    DeleteUserSettingsResponse:
      type: object
      properties: {}
    Description:
      type: string
      pattern: ^.+$
      minLength: 1
      maxLength: 256
    DescriptionSafe:
      type: string
      pattern: ^[ _\-\d\w]+$
      minLength: 1
      maxLength: 256
    DisassociateBrowserSettingsRequest:
      type: object
      properties:
        portalArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the web portal.
      required:
      - portalArn
    DisassociateBrowserSettingsResponse:
      type: object
      properties: {}
    DisassociateDataProtectionSettingsRequest:
      type: object
      properties:
        portalArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the web portal.
      required:
      - portalArn
    DisassociateDataProtectionSettingsResponse:
      type: object
      properties: {}
    DisassociateIpAccessSettingsRequest:
      type: object
      properties:
        portalArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the web portal.
      required:
      - portalArn
    DisassociateIpAccessSettingsResponse:
      type: object
      properties: {}
    DisassociateNetworkSettingsRequest:
      type: object
      properties:
        portalArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the web portal.
      required:
      - portalArn
    DisassociateNetworkSettingsResponse:
      type: object
      properties: {}
    DisassociateTrustStoreRequest:
      type: object
      properties:
        portalArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the web portal.
      required:
      - portalArn
    DisassociateTrustStoreResponse:
      type: object
      properties: {}
    DisassociateUserAccessLoggingSettingsRequest:
      type: object
      properties:
        portalArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the web portal.
      required:
      - portalArn
    DisassociateUserAccessLoggingSettingsResponse:
      type: object
      properties: {}
    DisassociateUserSettingsRequest:
      type: object
      properties:
        portalArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the web portal.
      required:
      - portalArn
    DisassociateUserSettingsResponse:
      type: object
      properties: {}
    DisconnectTimeoutInMinutes:
      type: integer
      minimum: 1
      maximum: 600
    DisplayName:
      type: string
      pattern: ^.+$
      minLength: 1
      maxLength: 64
    DisplayNameSafe:
      type: string
      pattern: ^[ _\-\d\w]+$
      minLength: 1
      maxLength: 64
    EnabledType:
      type: string
      enum:
      - Disabled
      - Enabled
    EncryptionContextMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/StringType'
    ExceptionMessage:
      type: string
    ExpireSessionRequest:
      type: object
      properties:
        portalId:
          allOf:
          - $ref: '#/components/schemas/PortalId'
          description: The ID of the web portal for the session.
        sessionId:
          allOf:
          - $ref: '#/components/schemas/SessionId'
          description: The ID of the session to expire.
      required:
      - portalId
      - sessionId
    ExpireSessionResponse:
      type: object
      properties: {}
    FieldName:
      type: string
    GetBrowserSettingsRequest:
      type: object
      properties:
        browserSettingsArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the browser settings.
      required:
      - browserSettingsArn
    GetBrowserSettingsResponse:
      type: object
      properties:
        browserSettings:
          allOf:
          - $ref: '#/components/schemas/BrowserSettings'
          description: The browser settings.
    GetDataProtectionSettingsRequest:
      type: object
      properties:
        dataProtectionSettingsArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the data protection settings.
      required:
      - dataProtectionSettingsArn
    GetDataProtectionSettingsResponse:
      type: object
      properties:
        dataProtectionSettings:
          allOf:
          - $ref: '#/components/schemas/DataProtectionSettings'
          description: The data protection settings.
    GetIdentityProviderRequest:
      type: object
      properties:
        identityProviderArn:
          allOf:
          - $ref: '#/components/schemas/SubresourceARN'
          description: The ARN of the identity provider.
      required:
      - identityProviderArn
    GetIdentityProviderResponse:
      type: object
      properties:
        identityProvider:
          allOf:
          - $ref: '#/components/schemas/IdentityProvider'
          description: The identity provider.
    GetIpAccessSettingsRequest:
      type: object
      properties:
        ipAccessSettingsArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the IP access settings.
      required:
      - ipAccessSettingsArn
    GetIpAccessSettingsResponse:
      type: object
      properties:
        ipAccessSettings:
          allOf:
          - $ref: '#/components/schemas/IpAccessSettings'
          description: The IP access settings.
    GetNetworkSettingsRequest:
      type: object
      properties:
        networkSettingsArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the network settings.
      required:
      - networkSettingsArn
    GetNetworkSettingsResponse:
      type: object
      properties:
        networkSettings:
          allOf:
          - $ref: '#/components/schemas/NetworkSettings'
          description: The network settings.
    GetPortalRequest:
      type: object
      properties:
        portalArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the web portal.
      required:
      - portalArn
    GetPortalResponse:
      type: object
      properties:
        portal:
          allOf:
          - $ref: '#/components/schemas/Portal'
          description: The web portal.
    GetPortalServiceProviderMetadataRequest:
      type: object
      properties:
        portalArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the web portal.
      required:
      - portalArn
    GetPortalServiceProviderMetadataResponse:
      type: object
      properties:
        portalArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the web portal.
        serviceProviderSamlMetadata:
          allOf:
          - $ref: '#/components/schemas/SamlMetadata'
          description: The service provider SAML metadata.
      required:
      - portalArn
    GetSessionRequest:
      type: object
      properties:
        portalId:
          allOf:
          - $ref: '#/components/schemas/PortalId'
          description: The ID of the web portal for the session.
        sessionId:
          allOf:
          - $ref: '#/components/schemas/SessionId'
          description: The ID of the session.
      required:
      - portalId
      - sessionId
    GetSessionResponse:
      type: object
      properties:
        session:
          allOf:
          - $ref: '#/components/schemas/Session'
          description: The sessions in a list.
    GetTrustStoreCertificateRequest:
      type: object
      properties:
        trustStoreArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the trust store certificate.
        thumbprint:
          allOf:
          - $ref: '#/components/schemas/CertificateThumbprint'
          description: The thumbprint of the trust store certificate.
      required:
      - trustStoreArn
      - thumbprint
    GetTrustStoreCertificateResponse:
      type: object
      properties:
        trustStoreArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the trust store certificate.
        certificate:
          allOf:
          - $ref: '#/components/schemas/Certificate'
          description: The certificate of the trust store certificate.
      required:
      - trustStoreArn
    GetTrustStoreRequest:
      type: object
      properties:
        trustStoreArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the trust store.
      required:
      - trustStoreArn
    GetTrustStoreResponse:
      type: object
      properties:
        trustStore:
          allOf:
          - $ref: '#/components/schemas/TrustStore'
          description: The trust store.
    GetUserAccessLoggingSettingsRequest:
      type: object
      properties:
        userAccessLoggingSettingsArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the user access logging settings.
      required:
      - userAccessLoggingSettingsArn
    GetUserAccessLoggingSettingsResponse:
      type: object
      properties:
        userAccessLoggingSettings:
          allOf:
          - $ref: '#/components/schemas/UserAccessLoggingSettings'
          description: The user access logging settings.
    GetUserSettingsRequest:
      type: object
      properties:
        userSettingsArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the user settings.
      required:
      - userSettingsArn
    GetUserSettingsResponse:
      type: object
      properties:
        userSettings:
          allOf:
          - $ref: '#/components/schemas/UserSettings'
          description: The user settings.
    GlobalInlineRedactionUrls:
      type: array
      items:
        $ref: '#/components/schemas/InlineRedactionUrl'
    HiddenToolbarItemList:
      type: array
      items:
        $ref: '#/components/schemas/ToolbarItem'
    IdentityProvider:
      type: object
      properties:
        identityProviderArn:
          allOf:
          - $ref: '#/components/schemas/SubresourceARN'
          description: The ARN of the identity provider.
        identityProviderName:
          allOf:
          - $ref: '#/components/schemas/IdentityProviderName'
          description: The identity provider name.
        identityProviderType:
          allOf:
          - $ref: '#/components/schemas/IdentityProviderType'
          description: The identity provider type.
        identityProviderDetails:
          allOf:
          - $ref: '#/components/schemas/IdentityProviderDetails'
          description: "The identity provider details. The following list describes\
            \ the provider detail keys for each identity provider type.\n\n  * For\
            \ Google and Login with Amazon:\n\n    * `client_id`\n\n    * `client_secret`\n\
            \n    * `authorize_scopes`\n\n  * For Facebook:\n\n    * `client_id`\n\
            \n    * `client_secret`\n\n    * `authorize_scopes`\n\n    * `api_version`\n\
            \n  * For Sign in with Apple:\n\n    * `client_id`\n\n    * `team_id`\n\
            \n    * `key_id`\n\n    * `private_key`\n\n    * `authorize_scopes`\n\n\
            \  * For OIDC providers:\n\n    * `client_id`\n\n    * `client_secret`\n\
            \n    * `attributes_request_method`\n\n    * `oidc_issuer`\n\n    * `authorize_scopes`\n\
            \n    * `authorize_url` _if not available from discovery URL specified\
            \ by oidc_issuer key_\n\n    * `token_url` _if not available from discovery\
            \ URL specified by oidc_issuer key_\n\n    * `attributes_url` _if not\
            \ available from discovery URL specified by oidc_issuer key_\n\n    *\
            \ `jwks_uri` _if not available from discovery URL specified by oidc_issuer\
            \ key_\n\n  * For SAML providers:\n\n    * `MetadataFile` OR `MetadataURL`\n\
            \n    * `IDPSignout` (boolean) _optional_\n\n    * `IDPInit` (boolean)\
            \ _optional_\n\n    * `RequestSigningAlgorithm` (string) _optional_ \\\
            - Only accepts `rsa-sha256`\n\n    * `EncryptedResponses` (boolean) _optional_"
      required:
      - identityProviderArn
      description: The identity provider.
    IdentityProviderDetails:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/StringType'
    IdentityProviderList:
      type: array
      items:
        $ref: '#/components/schemas/IdentityProviderSummary'
    IdentityProviderName:
      type: string
      pattern: ^[^_][\p{L}\p{M}\p{S}\p{N}\p{P}][^_]+$
      minLength: 1
      maxLength: 32
    IdentityProviderSummary:
      type: object
      properties:
        identityProviderArn:
          allOf:
          - $ref: '#/components/schemas/SubresourceARN'
          description: The ARN of the identity provider.
        identityProviderName:
          allOf:
          - $ref: '#/components/schemas/IdentityProviderName'
          description: The identity provider name.
        identityProviderType:
          allOf:
          - $ref: '#/components/schemas/IdentityProviderType'
          description: The identity provider type.
      required:
      - identityProviderArn
      description: The summary of the identity provider.
    IdentityProviderType:
      type: string
      enum:
      - SAML
      - Facebook
      - Google
      - LoginWithAmazon
      - SignInWithApple
      - OIDC
    IdleDisconnectTimeoutInMinutes:
      type: integer
      minimum: 0
      maximum: 60
    InlineRedactionConfiguration:
      type: object
      properties:
        inlineRedactionPatterns:
          allOf:
          - $ref: '#/components/schemas/InlineRedactionPatterns'
          description: The inline redaction patterns to be enabled for the inline
            redaction configuration.
        globalEnforcedUrls:
          allOf:
          - $ref: '#/components/schemas/GlobalInlineRedactionUrls'
          description: The global enforced URL configuration for the inline redaction
            configuration. This is applied to patterns that do not have a pattern-level
            enforced URL list.
        globalExemptUrls:
          allOf:
          - $ref: '#/components/schemas/GlobalInlineRedactionUrls'
          description: The global exempt URL configuration for the inline redaction
            configuration. This is applied to patterns that do not have a pattern-level
            exempt URL list.
        globalConfidenceLevel:
          allOf:
          - $ref: '#/components/schemas/ConfidenceLevel'
          description: The global confidence level for the inline redaction configuration.
            This indicates the certainty of data type matches in the redaction process.
            Confidence level 3 means high confidence, and requires a formatted text
            pattern match in order for content to be redacted. Confidence level 2
            means medium confidence, and redaction considers both formatted and unformatted
            text, and adds keyword associate to the logic. Confidence level 1 means
            low confidence, and redaction is enforced for both formatted pattern +
            unformatted pattern without keyword. This is applied to patterns that
            do not have a pattern-level confidence level. Defaults to confidence level
            2.
      required:
      - inlineRedactionPatterns
      description: The configuration for in-session inline redaction.
    InlineRedactionPattern:
      type: object
      properties:
        builtInPatternId:
          allOf:
          - $ref: '#/components/schemas/BuiltInPatternId'
          description: The built-in pattern from the list of preconfigured patterns.
            Either a customPattern or builtInPatternId is required.
        customPattern:
          allOf:
          - $ref: '#/components/schemas/CustomPattern'
          description: '>The configuration for a custom pattern. Either a customPattern
            or builtInPatternId is required.'
        redactionPlaceHolder:
          allOf:
          - $ref: '#/components/schemas/RedactionPlaceHolder'
          description: The redaction placeholder that will replace the redacted text
            in session for the inline redaction pattern.
        enforcedUrls:
          allOf:
          - $ref: '#/components/schemas/InlineRedactionUrls'
          description: The enforced URL configuration for the inline redaction pattern.
            This will override the global enforced URL configuration.
        exemptUrls:
          allOf:
          - $ref: '#/components/schemas/InlineRedactionUrls'
          description: The exempt URL configuration for the inline redaction pattern.
            This will override the global exempt URL configuration for the inline
            redaction pattern.
        confidenceLevel:
          allOf:
          - $ref: '#/components/schemas/ConfidenceLevel'
          description: The confidence level for inline redaction pattern. This indicates
            the certainty of data type matches in the redaction process. Confidence
            level 3 means high confidence, and requires a formatted text pattern match
            in order for content to be redacted. Confidence level 2 means medium confidence,
            and redaction considers both formatted and unformatted text, and adds
            keyword associate to the logic. Confidence level 1 means low confidence,
            and redaction is enforced for both formatted pattern + unformatted pattern
            without keyword. This overrides the global confidence level.
      required:
      - redactionPlaceHolder
      description: The set of patterns that determine the data types redacted in session.
    InlineRedactionPatterns:
      type: array
      items:
        $ref: '#/components/schemas/InlineRedactionPattern'
    InlineRedactionUrl:
      type: string
      pattern: ^((([a-zA-Z][a-zA-Z0-9+.-]*):\/\/(\*|[\w%._\-\+~#=@]+)?(\/[^@\s]*)?(?:\?([^*\s]+(?:\*?)))?)|(\*|[\w%._\-\+~#=@]+\.[\w%._\-\+~#=@]+)(?::(\d{1,5}))?(\/[^@\s]*)?(?:\?([^*\s]+(?:\*?)))?|(([a-zA-Z][a-zA-Z0-9+.-]*):(\/\/)?\*))$
    InlineRedactionUrls:
      type: array
      items:
        $ref: '#/components/schemas/InlineRedactionUrl'
    InstanceType:
      type: string
      enum:
      - standard.regular
      - standard.large
      - standard.xlarge
    InternalServerException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ExceptionMessage'
        retryAfterSeconds:
          allOf:
          - $ref: '#/components/schemas/RetryAfterSeconds'
          description: Advice to clients on when the call can be safely retried.
      description: There is an internal server error.
    IpAccessSettings:
      type: object
      properties:
        ipAccessSettingsArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the IP access settings resource.
        associatedPortalArns:
          allOf:
          - $ref: '#/components/schemas/ArnList'
          description: A list of web portal ARNs that this IP access settings resource
            is associated with.
        ipRules:
          allOf:
          - $ref: '#/components/schemas/IpRuleList'
          description: The IP rules of the IP access settings.
        displayName:
          allOf:
          - $ref: '#/components/schemas/DisplayName'
          description: The display name of the IP access settings.
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: The description of the IP access settings.
        creationDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The creation date timestamp of the IP access settings.
        customerManagedKey:
          allOf:
          - $ref: '#/components/schemas/keyArn'
          description: The customer managed key used to encrypt sensitive information
            in the IP access settings.
        additionalEncryptionContext:
          allOf:
          - $ref: '#/components/schemas/EncryptionContextMap'
          description: The additional encryption context of the IP access settings.
      required:
      - ipAccessSettingsArn
      description: The IP access settings resource that can be associated with a web
        portal.
    IpAccessSettingsList:
      type: array
      items:
        $ref: '#/components/schemas/IpAccessSettingsSummary'
    IpAccessSettingsSummary:
      type: object
      properties:
        ipAccessSettingsArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of IP access settings.
        displayName:
          allOf:
          - $ref: '#/components/schemas/DisplayName'
          description: The display name of the IP access settings.
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: The description of the IP access settings.
        creationDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The creation date timestamp of the IP access settings.
      required:
      - ipAccessSettingsArn
      description: The summary of IP access settings.
    IpAddress:
      type: string
      pattern: ^((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))$|^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$
      minLength: 1
      maxLength: 15
    IpAddressList:
      type: array
      items:
        $ref: '#/components/schemas/IpAddress'
    IpRange:
      type: string
      pattern: ^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}(?:/([0-9]|[12][0-9]|3[0-2])|)$
    IpRule:
      type: object
      properties:
        ipRange:
          allOf:
          - $ref: '#/components/schemas/IpRange'
          description: The IP range of the IP rule.
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: The description of the IP rule.
      required:
      - ipRange
      description: The IP rules of the IP access settings.
    IpRuleList:
      type: array
      items:
        $ref: '#/components/schemas/IpRule'
      x-sensitive: true
    KinesisStreamArn:
      type: string
      pattern: arn:[\w+=/,.@-]+:kinesis:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:stream/.+
      minLength: 20
      maxLength: 2048
    ListBrowserSettingsRequest:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: The pagination token used to retrieve the next page of results
            for this operation.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to be included in the next page.
    ListBrowserSettingsResponse:
      type: object
      properties:
        browserSettings:
          allOf:
          - $ref: '#/components/schemas/BrowserSettingsList'
          description: The browser settings.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: The pagination token used to retrieve the next page of results
            for this operation.
    ListDataProtectionSettingsRequest:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: The pagination token used to retrieve the next page of results
            for this operation.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to be included in the next page.
    ListDataProtectionSettingsResponse:
      type: object
      properties:
        dataProtectionSettings:
          allOf:
          - $ref: '#/components/schemas/DataProtectionSettingsList'
          description: The data protection settings.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: The pagination token used to retrieve the next page of results
            for this operation.
    ListIdentityProvidersRequest:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: The pagination token used to retrieve the next page of results
            for this operation.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to be included in the next page.
        portalArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the web portal.
      required:
      - portalArn
    ListIdentityProvidersResponse:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: The pagination token used to retrieve the next page of results
            for this operation.
        identityProviders:
          allOf:
          - $ref: '#/components/schemas/IdentityProviderList'
          description: The identity providers.
    ListIpAccessSettingsRequest:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: The pagination token used to retrieve the next page of results
            for this operation.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to be included in the next page.
    ListIpAccessSettingsResponse:
      type: object
      properties:
        ipAccessSettings:
          allOf:
          - $ref: '#/components/schemas/IpAccessSettingsList'
          description: The IP access settings.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: The pagination token used to retrieve the next page of results
            for this operation.
    ListNetworkSettingsRequest:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: The pagination token used to retrieve the next page of results
            for this operation.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to be included in the next page.
    ListNetworkSettingsResponse:
      type: object
      properties:
        networkSettings:
          allOf:
          - $ref: '#/components/schemas/NetworkSettingsList'
          description: The network settings.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: The pagination token used to retrieve the next page of results
            for this operation.
    ListPortalsRequest:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: The pagination token used to retrieve the next page of results
            for this operation.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to be included in the next page.
    ListPortalsResponse:
      type: object
      properties:
        portals:
          allOf:
          - $ref: '#/components/schemas/PortalList'
          description: The portals in the list.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: The pagination token used to retrieve the next page of results
            for this operation.
    ListSessionsRequest:
      type: object
      properties:
        portalId:
          allOf:
          - $ref: '#/components/schemas/PortalId'
          description: The ID of the web portal for the sessions.
        username:
          allOf:
          - $ref: '#/components/schemas/Username'
          description: The username of the session.
        sessionId:
          allOf:
          - $ref: '#/components/schemas/SessionId'
          description: The ID of the session.
        sortBy:
          allOf:
          - $ref: '#/components/schemas/SessionSortBy'
          description: The method in which the returned sessions should be sorted.
        status:
          allOf:
          - $ref: '#/components/schemas/SessionStatus'
          description: The status of the session.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to be included in the next page.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: The pagination token used to retrieve the next page of results
            for this operation.
      required:
      - portalId
    ListSessionsResponse:
      type: object
      properties:
        sessions:
          allOf:
          - $ref: '#/components/schemas/SessionSummaryList'
          description: The sessions in a list.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: The pagination token used to retrieve the next page of results
            for this operation.
      required:
      - sessions
    ListTagsForResourceRequest:
      type: object
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the resource.
      required:
      - resourceArn
    ListTagsForResourceResponse:
      type: object
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: The tags of the resource.
    ListTrustStoreCertificatesRequest:
      type: object
      properties:
        trustStoreArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the trust store
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: The pagination token used to retrieve the next page of results
            for this operation.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to be included in the next page.
      required:
      - trustStoreArn
    ListTrustStoreCertificatesResponse:
      type: object
      properties:
        certificateList:
          allOf:
          - $ref: '#/components/schemas/CertificateSummaryList'
          description: The certificate list.
        trustStoreArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the trust store.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: The pagination token used to retrieve the next page of results
            for this operation.>
      required:
      - trustStoreArn
    ListTrustStoresRequest:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: The pagination token used to retrieve the next page of results
            for this operation.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to be included in the next page.
    ListTrustStoresResponse:
      type: object
      properties:
        trustStores:
          allOf:
          - $ref: '#/components/schemas/TrustStoreSummaryList'
          description: The trust stores.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: The pagination token used to retrieve the next page of results
            for this operation.
    ListUserAccessLoggingSettingsRequest:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: The pagination token used to retrieve the next page of results
            for this operation.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to be included in the next page.
    ListUserAccessLoggingSettingsResponse:
      type: object
      properties:
        userAccessLoggingSettings:
          allOf:
          - $ref: '#/components/schemas/UserAccessLoggingSettingsList'
          description: The user access logging settings.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: The pagination token used to retrieve the next page of results
            for this operation.
    ListUserSettingsRequest:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: The pagination token used to retrieve the next page of results
            for this operation.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to be included in the next page.
    ListUserSettingsResponse:
      type: object
      properties:
        userSettings:
          allOf:
          - $ref: '#/components/schemas/UserSettingsList'
          description: The user settings.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: The pagination token used to retrieve the next page of results
            for this operation.
    MaxConcurrentSessions:
      type: integer
      minimum: 1
      maximum: 5000
    MaxDisplayResolution:
      type: string
      enum:
      - size4096X2160
      - size3840X2160
      - size3440X1440
      - size2560X1440
      - size1920X1080
      - size1280X720
      - size1024X768
      - size800X600
    MaxResults:
      type: integer
      minimum: 1
    NetworkSettings:
      type: object
      properties:
        networkSettingsArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the network settings.
        associatedPortalArns:
          allOf:
          - $ref: '#/components/schemas/ArnList'
          description: A list of web portal ARNs that this network settings is associated
            with.
        vpcId:
          allOf:
          - $ref: '#/components/schemas/VpcId'
          description: The VPC that streaming instances will connect to.
        subnetIds:
          allOf:
          - $ref: '#/components/schemas/SubnetIdList'
          description: The subnets in which network interfaces are created to connect
            streaming instances to your VPC. At least two of these subnets must be
            in different availability zones.
        securityGroupIds:
          allOf:
          - $ref: '#/components/schemas/SecurityGroupIdList'
          description: One or more security groups used to control access from streaming
            instances to your VPC.
      required:
      - networkSettingsArn
      description: A network settings resource that can be associated with a web portal.
        Once associated with a web portal, network settings define how streaming instances
        will connect with your specified VPC.
    NetworkSettingsList:
      type: array
      items:
        $ref: '#/components/schemas/NetworkSettingsSummary'
    NetworkSettingsSummary:
      type: object
      properties:
        networkSettingsArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the network settings.
        vpcId:
          allOf:
          - $ref: '#/components/schemas/VpcId'
          description: The VPC ID of the network settings.
      required:
      - networkSettingsArn
      description: The summary of network settings.
    PaginationToken:
      type: string
      pattern: ^\S+$
      minLength: 1
      maxLength: 2048
    PatternName:
      type: string
      pattern: ^[_\-\d\w]+$
      minLength: 1
      maxLength: 20
    Portal:
      type: object
      properties:
        portalArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the web portal.
        rendererType:
          allOf:
          - $ref: '#/components/schemas/RendererType'
          description: The renderer that is used in streaming sessions.
        browserType:
          allOf:
          - $ref: '#/components/schemas/BrowserType'
          description: The browser that users see when using a streaming session.
        portalStatus:
          allOf:
          - $ref: '#/components/schemas/PortalStatus'
          description: The status of the web portal.
        portalEndpoint:
          allOf:
          - $ref: '#/components/schemas/PortalEndpoint'
          description: The endpoint URL of the web portal that users access in order
            to start streaming sessions.
        displayName:
          allOf:
          - $ref: '#/components/schemas/DisplayName'
          description: The name of the web portal.
        creationDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The creation date of the web portal.
        browserSettingsArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the browser settings that is associated with this
            web portal.
        dataProtectionSettingsArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the data protection settings.
        userSettingsArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the user settings that is associated with the web
            portal.
        networkSettingsArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the network settings that is associated with the
            web portal.
        trustStoreArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the trust store that is associated with the web
            portal.
        statusReason:
          allOf:
          - $ref: '#/components/schemas/StatusReason'
          description: A message that explains why the web portal is in its current
            status.
        userAccessLoggingSettingsArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the user access logging settings that is associated
            with the web portal.
        authenticationType:
          allOf:
          - $ref: '#/components/schemas/AuthenticationType'
          description: 'The type of authentication integration points used when signing
            into the web portal. Defaults to `Standard`.


            `Standard` web portals are authenticated directly through your identity
            provider. You need to call `CreateIdentityProvider` to integrate your
            identity provider with your web portal. User and group access to your
            web portal is controlled through your identity provider.


            `IAM Identity Center` web portals are authenticated through IAM Identity
            Center. Identity sources (including external identity provider integration),
            plus user and group access to your web portal, can be configured in the
            IAM Identity Center.'
        ipAccessSettingsArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the IP access settings.
        customerManagedKey:
          allOf:
          - $ref: '#/components/schemas/keyArn'
          description: The customer managed key used to encrypt sensitive information
            in the portal.
        additionalEncryptionContext:
          allOf:
          - $ref: '#/components/schemas/EncryptionContextMap'
          description: The additional encryption context of the portal.
        instanceType:
          allOf:
          - $ref: '#/components/schemas/InstanceType'
          description: The type and resources of the underlying instance.
        maxConcurrentSessions:
          allOf:
          - $ref: '#/components/schemas/MaxConcurrentSessions'
          description: The maximum number of concurrent sessions for the portal.
      required:
      - portalArn
      description: The web portal.
    PortalEndpoint:
      type: string
      pattern: ^[a-zA-Z0-9]?((?!-)([A-Za-z0-9-]*[A-Za-z0-9])\.)+[a-zA-Z0-9]+$
      minLength: 1
      maxLength: 253
    PortalId:
      type: string
      pattern: ^[a-zA-Z0-9\-]+$
      minLength: 36
      maxLength: 36
    PortalList:
      type: array
      items:
        $ref: '#/components/schemas/PortalSummary'
    PortalStatus:
      type: string
      enum:
      - Incomplete
      - Pending
      - Active
    PortalSummary:
      type: object
      properties:
        portalArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the web portal.
        rendererType:
          allOf:
          - $ref: '#/components/schemas/RendererType'
          description: The renderer that is used in streaming sessions.
        browserType:
          allOf:
          - $ref: '#/components/schemas/BrowserType'
          description: The browser type of the web portal.
        portalStatus:
          allOf:
          - $ref: '#/components/schemas/PortalStatus'
          description: The status of the web portal.
        portalEndpoint:
          allOf:
          - $ref: '#/components/schemas/PortalEndpoint'
          description: The endpoint URL of the web portal that users access in order
            to start streaming sessions.
        displayName:
          allOf:
          - $ref: '#/components/schemas/DisplayName'
          description: The name of the web portal.
        creationDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The creation date of the web portal.
        browserSettingsArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the browser settings that is associated with the
            web portal.
        dataProtectionSettingsArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the data protection settings.
        userSettingsArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the user settings that is associated with the web
            portal.
        networkSettingsArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the network settings that is associated with the
            web portal.
        trustStoreArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the trust that is associated with this web portal.
        userAccessLoggingSettingsArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the user access logging settings that is associated
            with the web portal.
        authenticationType:
          allOf:
          - $ref: '#/components/schemas/AuthenticationType'
          description: 'The type of authentication integration points used when signing
            into the web portal. Defaults to `Standard`.


            `Standard` web portals are authenticated directly through your identity
            provider. You need to call `CreateIdentityProvider` to integrate your
            identity provider with your web portal. User and group access to your
            web portal is controlled through your identity provider.


            `IAM Identity Center` web portals are authenticated through IAM Identity
            Center. Identity sources (including external identity provider integration),
            plus user and group access to your web portal, can be configured in the
            IAM Identity Center.'
        ipAccessSettingsArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the IP access settings.
        instanceType:
          allOf:
          - $ref: '#/components/schemas/InstanceType'
          description: The type and resources of the underlying instance.
        maxConcurrentSessions:
          allOf:
          - $ref: '#/components/schemas/MaxConcurrentSessions'
          description: The maximum number of concurrent sessions for the portal.
      required:
      - portalArn
      description: The summary of the portal.
    QuotaCode:
      type: string
    RedactionPlaceHolder:
      type: object
      properties:
        redactionPlaceHolderType:
          allOf:
          - $ref: '#/components/schemas/RedactionPlaceHolderType'
          description: The redaction placeholder type that will replace the redacted
            text in session.
        redactionPlaceHolderText:
          allOf:
          - $ref: '#/components/schemas/RedactionPlaceHolderText'
          description: The redaction placeholder text that will replace the redacted
            text in session for the custom text redaction placeholder type.
      required:
      - redactionPlaceHolderType
      description: The redaction placeholder that will replace the redacted text in
        session.
    RedactionPlaceHolderText:
      type: string
      pattern: ^[*_\-\d\w]+$
      minLength: 1
      maxLength: 20
    RedactionPlaceHolderType:
      type: string
      enum:
      - CustomText
    Regex:
      type: string
      pattern: ^\/((?:[^\n])+)\/([gimsuyvd]{0,8})$
      minLength: 0
      maxLength: 300
    RendererType:
      type: string
      enum:
      - AppStream
    ResourceId:
      type: string
    ResourceNotFoundException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ExceptionMessage'
        resourceId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          description: Hypothetical identifier of the resource affected.
        resourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          description: Hypothetical type of the resource affected.
      description: The resource cannot be found.
    ResourceType:
      type: string
    RetryAfterSeconds:
      type: integer
      default: 0
    SamlMetadata:
      type: string
      pattern: ^.+$
      minLength: 1
      maxLength: 204800
    SecurityGroupId:
      type: string
      pattern: ^[\w+\-]+$
      minLength: 1
      maxLength: 128
    SecurityGroupIdList:
      type: array
      items:
        $ref: '#/components/schemas/SecurityGroupId'
    ServiceCode:
      type: string
    ServiceQuotaExceededException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ExceptionMessage'
        resourceId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          description: Identifier of the resource affected.
        resourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          description: Type of the resource affected.
        serviceCode:
          allOf:
          - $ref: '#/components/schemas/ServiceCode'
          description: The originating service.
        quotaCode:
          allOf:
          - $ref: '#/components/schemas/QuotaCode'
          description: The originating quota.
      description: The service quota has been exceeded.
    Session:
      type: object
      properties:
        portalArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the web portal.
        sessionId:
          allOf:
          - $ref: '#/components/schemas/StringType'
          description: The ID of the session.
        username:
          allOf:
          - $ref: '#/components/schemas/Username'
          description: The username of the session.
        clientIpAddresses:
          allOf:
          - $ref: '#/components/schemas/IpAddressList'
          description: The IP address of the client.
        status:
          allOf:
          - $ref: '#/components/schemas/SessionStatus'
          description: The status of the session.
        startTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The start time of the session.
        endTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The end time of the session.
      description: Information about a secure browser session.
    SessionId:
      type: string
      pattern: ^[a-zA-Z0-9\-]+$
      minLength: 36
      maxLength: 36
    SessionSortBy:
      type: string
      enum:
      - StartTimeAscending
      - StartTimeDescending
    SessionStatus:
      type: string
      enum:
      - Active
      - Terminated
    SessionSummary:
      type: object
      properties:
        portalArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the web portal.
        sessionId:
          allOf:
          - $ref: '#/components/schemas/StringType'
          description: The ID of the session.
        username:
          allOf:
          - $ref: '#/components/schemas/Username'
          description: The username of the session.
        status:
          allOf:
          - $ref: '#/components/schemas/SessionStatus'
          description: The status of the session.
        startTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The start time of the session.
        endTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The end time of the session.
      description: Summary information about a secure browser session.
    SessionSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/SessionSummary'
    StatusReason:
      type: string
      pattern: .*
      minLength: 1
      maxLength: 1024
    StringType:
      type: string
      pattern: ^[\s\S]*$
      minLength: 0
      maxLength: 131072
    SubnetId:
      type: string
      pattern: ^subnet-([0-9a-f]{8}|[0-9a-f]{17})$
      minLength: 1
      maxLength: 32
    SubnetIdList:
      type: array
      items:
        $ref: '#/components/schemas/SubnetId'
    SubresourceARN:
      type: string
      pattern: ^arn:[\w+=\/,.@-]+:[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\/[a-fA-F0-9\-]{36}){2,}$
      minLength: 20
      maxLength: 2048
    Tag:
      type: object
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/TagKey'
          description: The key of the tag.
        Value:
          allOf:
          - $ref: '#/components/schemas/TagValue'
          description: The value of the tag
      required:
      - Key
      - Value
      description: The tag.
    TagExceptionMessage:
      type: string
    TagKey:
      type: string
      pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
      minLength: 1
      maxLength: 128
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
    TagList:
      type: array
      items:
        $ref: '#/components/schemas/Tag'
    TagResourceRequest:
      type: object
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the resource.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: The tags of the resource.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: 'A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. Idempotency ensures that an API request
            completes only once. With an idempotent request, if the original request
            completes successfully, subsequent retries with the same client token
            returns the result from the original successful request.


            If you do not specify a client token, one is automatically generated by
            the Amazon Web Services SDK.'
      required:
      - resourceArn
      - tags
    TagResourceResponse:
      type: object
      properties: {}
    TagValue:
      type: string
      pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
      minLength: 0
      maxLength: 256
    ThrottlingException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ExceptionMessage'
        serviceCode:
          allOf:
          - $ref: '#/components/schemas/ServiceCode'
          description: The originating service.
        quotaCode:
          allOf:
          - $ref: '#/components/schemas/QuotaCode'
          description: The originating quota.
        retryAfterSeconds:
          allOf:
          - $ref: '#/components/schemas/RetryAfterSeconds'
          description: Advice to clients on when the call can be safely retried.
      description: There is a throttling error.
    Timestamp:
      type: string
      format: date-time
    TooManyTagsException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/TagExceptionMessage'
        resourceName:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: Name of the resource affected.
      description: There are too many tags.
    ToolbarConfiguration:
      type: object
      properties:
        toolbarType:
          allOf:
          - $ref: '#/components/schemas/ToolbarType'
          description: The type of toolbar displayed during the session.
        visualMode:
          allOf:
          - $ref: '#/components/schemas/VisualMode'
          description: The visual mode of the toolbar.
        hiddenToolbarItems:
          allOf:
          - $ref: '#/components/schemas/HiddenToolbarItemList'
          description: The list of toolbar items to be hidden.
        maxDisplayResolution:
          allOf:
          - $ref: '#/components/schemas/MaxDisplayResolution'
          description: The maximum display resolution that is allowed for the session.
      description: The configuration of the toolbar. This allows administrators to
        select the toolbar type and visual mode, set maximum display resolution for
        sessions, and choose which items are visible to end users during their sessions.
        If administrators do not modify these settings, end users retain control over
        their toolbar preferences.
    ToolbarItem:
      type: string
      enum:
      - Windows
      - DualMonitor
      - FullScreen
      - Webcam
      - Microphone
    ToolbarType:
      type: string
      enum:
      - Floating
      - Docked
    TrustStore:
      type: object
      properties:
        associatedPortalArns:
          allOf:
          - $ref: '#/components/schemas/ArnList'
          description: A list of web portal ARNs that this trust store is associated
            with.
        trustStoreArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the trust store.
      required:
      - trustStoreArn
      description: A trust store that can be associated with a web portal. A trust
        store contains certificate authority (CA) certificates. Once associated with
        a web portal, the browser in a streaming session will recognize certificates
        that have been issued using any of the CAs in the trust store. If your organization
        has internal websites that use certificates issued by private CAs, you should
        add the private CA certificate to the trust store.
    TrustStoreSummary:
      type: object
      properties:
        trustStoreArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the trust store.
      description: The summary of the trust store.
    TrustStoreSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/TrustStoreSummary'
    UntagResourceRequest:
      type: object
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the resource.
        tagKeys:
          allOf:
          - $ref: '#/components/schemas/TagKeyList'
          description: The list of tag keys to remove from the resource.
      required:
      - resourceArn
      - tagKeys
    UntagResourceResponse:
      type: object
      properties: {}
    UpdateBrowserSettingsRequest:
      type: object
      properties:
        browserSettingsArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the browser settings.
        browserPolicy:
          allOf:
          - $ref: '#/components/schemas/BrowserPolicy'
          description: A JSON string containing Chrome Enterprise policies that will
            be applied to all streaming sessions.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: 'A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. Idempotency ensures that an API request
            completes only once. With an idempotent request, if the original request
            completes successfully, subsequent retries with the same client token
            return the result from the original successful request.


            If you do not specify a client token, one is automatically generated by
            the Amazon Web Services SDK.'
      required:
      - browserSettingsArn
    UpdateBrowserSettingsResponse:
      type: object
      properties:
        browserSettings:
          allOf:
          - $ref: '#/components/schemas/BrowserSettings'
          description: The browser settings.
      required:
      - browserSettings
    UpdateDataProtectionSettingsRequest:
      type: object
      properties:
        dataProtectionSettingsArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the data protection settings.
        inlineRedactionConfiguration:
          allOf:
          - $ref: '#/components/schemas/InlineRedactionConfiguration'
          description: The inline redaction configuration of the data protection settings
            that will be applied to all sessions.
        displayName:
          allOf:
          - $ref: '#/components/schemas/DisplayNameSafe'
          description: The display name of the data protection settings.
        description:
          allOf:
          - $ref: '#/components/schemas/DescriptionSafe'
          description: The description of the data protection settings.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: 'A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. Idempotency ensures that an API request
            completes only once. With an idempotent request, if the original request
            completes successfully, subsequent retries with the same client token
            return the result from the original successful request.


            If you do not specify a client token, one is automatically generated by
            the Amazon Web Services SDK.'
      required:
      - dataProtectionSettingsArn
    UpdateDataProtectionSettingsResponse:
      type: object
      properties:
        dataProtectionSettings:
          allOf:
          - $ref: '#/components/schemas/DataProtectionSettings'
          description: The data protection settings.
      required:
      - dataProtectionSettings
    UpdateIdentityProviderRequest:
      type: object
      properties:
        identityProviderArn:
          allOf:
          - $ref: '#/components/schemas/SubresourceARN'
          description: The ARN of the identity provider.
        identityProviderName:
          allOf:
          - $ref: '#/components/schemas/IdentityProviderName'
          description: The name of the identity provider.
        identityProviderType:
          allOf:
          - $ref: '#/components/schemas/IdentityProviderType'
          description: The type of the identity provider.
        identityProviderDetails:
          allOf:
          - $ref: '#/components/schemas/IdentityProviderDetails'
          description: "The details of the identity provider. The following list describes\
            \ the provider detail keys for each identity provider type.\n\n  * For\
            \ Google and Login with Amazon:\n\n    * `client_id`\n\n    * `client_secret`\n\
            \n    * `authorize_scopes`\n\n  * For Facebook:\n\n    * `client_id`\n\
            \n    * `client_secret`\n\n    * `authorize_scopes`\n\n    * `api_version`\n\
            \n  * For Sign in with Apple:\n\n    * `client_id`\n\n    * `team_id`\n\
            \n    * `key_id`\n\n    * `private_key`\n\n    * `authorize_scopes`\n\n\
            \  * For OIDC providers:\n\n    * `client_id`\n\n    * `client_secret`\n\
            \n    * `attributes_request_method`\n\n    * `oidc_issuer`\n\n    * `authorize_scopes`\n\
            \n    * `authorize_url` _if not available from discovery URL specified\
            \ by`oidc_issuer` key_\n\n    * `token_url` _if not available from discovery\
            \ URL specified by`oidc_issuer` key_\n\n    * `attributes_url` _if not\
            \ available from discovery URL specified by`oidc_issuer` key_\n\n    *\
            \ `jwks_uri` _if not available from discovery URL specified by`oidc_issuer`\
            \ key_\n\n  * For SAML providers:\n\n    * `MetadataFile` OR `MetadataURL`\n\
            \n    * `IDPSignout` (boolean) _optional_\n\n    * `IDPInit` (boolean)\
            \ _optional_\n\n    * `RequestSigningAlgorithm` (string) _optional_ \\\
            - Only accepts `rsa-sha256`\n\n    * `EncryptedResponses` (boolean) _optional_"
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: 'A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. Idempotency ensures that an API request
            completes only once. With an idempotent request, if the original request
            completes successfully, subsequent retries with the same client token
            return the result from the original successful request.


            If you do not specify a client token, one is automatically generated by
            the Amazon Web Services SDK.'
      required:
      - identityProviderArn
    UpdateIdentityProviderResponse:
      type: object
      properties:
        identityProvider:
          allOf:
          - $ref: '#/components/schemas/IdentityProvider'
          description: The identity provider.
      required:
      - identityProvider
    UpdateIpAccessSettingsRequest:
      type: object
      properties:
        ipAccessSettingsArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the IP access settings.
        displayName:
          allOf:
          - $ref: '#/components/schemas/DisplayName'
          description: The display name of the IP access settings.
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: The description of the IP access settings.
        ipRules:
          allOf:
          - $ref: '#/components/schemas/IpRuleList'
          description: The updated IP rules of the IP access settings.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: 'A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. Idempotency ensures that an API request
            completes only once. With an idempotent request, if the original request
            completes successfully, subsequent retries with the same client token
            return the result from the original successful request.


            If you do not specify a client token, one is automatically generated by
            the Amazon Web Services SDK.'
      required:
      - ipAccessSettingsArn
    UpdateIpAccessSettingsResponse:
      type: object
      properties:
        ipAccessSettings:
          allOf:
          - $ref: '#/components/schemas/IpAccessSettings'
          description: The IP access settings.
      required:
      - ipAccessSettings
    UpdateNetworkSettingsRequest:
      type: object
      properties:
        networkSettingsArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the network settings.
        vpcId:
          allOf:
          - $ref: '#/components/schemas/VpcId'
          description: The VPC that streaming instances will connect to.
        subnetIds:
          allOf:
          - $ref: '#/components/schemas/SubnetIdList'
          description: The subnets in which network interfaces are created to connect
            streaming instances to your VPC. At least two of these subnets must be
            in different availability zones.
        securityGroupIds:
          allOf:
          - $ref: '#/components/schemas/SecurityGroupIdList'
          description: One or more security groups used to control access from streaming
            instances to your VPC.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: 'A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. Idempotency ensures that an API request
            completes only once. With an idempotent request, if the original request
            completes successfully, subsequent retries with the same client token
            return the result from the original successful request.


            If you do not specify a client token, one is automatically generated by
            the Amazon Web Services SDK.'
      required:
      - networkSettingsArn
    UpdateNetworkSettingsResponse:
      type: object
      properties:
        networkSettings:
          allOf:
          - $ref: '#/components/schemas/NetworkSettings'
          description: The network settings.
      required:
      - networkSettings
    UpdatePortalRequest:
      type: object
      properties:
        portalArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the web portal.
        displayName:
          allOf:
          - $ref: '#/components/schemas/DisplayName'
          description: The name of the web portal. This is not visible to users who
            log into the web portal.
        authenticationType:
          allOf:
          - $ref: '#/components/schemas/AuthenticationType'
          description: 'The type of authentication integration points used when signing
            into the web portal. Defaults to `Standard`.


            `Standard` web portals are authenticated directly through your identity
            provider. You need to call `CreateIdentityProvider` to integrate your
            identity provider with your web portal. User and group access to your
            web portal is controlled through your identity provider.


            `IAM Identity Center` web portals are authenticated through IAM Identity
            Center. Identity sources (including external identity provider integration),
            plus user and group access to your web portal, can be configured in the
            IAM Identity Center.'
        instanceType:
          allOf:
          - $ref: '#/components/schemas/InstanceType'
          description: The type and resources of the underlying instance.
        maxConcurrentSessions:
          allOf:
          - $ref: '#/components/schemas/MaxConcurrentSessions'
          description: The maximum number of concurrent sessions for the portal.
      required:
      - portalArn
    UpdatePortalResponse:
      type: object
      properties:
        portal:
          allOf:
          - $ref: '#/components/schemas/Portal'
          description: The web portal.
    UpdateTrustStoreRequest:
      type: object
      properties:
        trustStoreArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the trust store.
        certificatesToAdd:
          allOf:
          - $ref: '#/components/schemas/CertificateList'
          description: A list of CA certificates to add to the trust store.
        certificatesToDelete:
          allOf:
          - $ref: '#/components/schemas/CertificateThumbprintList'
          description: A list of CA certificates to delete from a trust store.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: 'A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. Idempotency ensures that an API request
            completes only once. With an idempotent request, if the original request
            completes successfully, subsequent retries with the same client token
            return the result from the original successful request.


            If you do not specify a client token, one is automatically generated by
            the Amazon Web Services SDK.'
      required:
      - trustStoreArn
    UpdateTrustStoreResponse:
      type: object
      properties:
        trustStoreArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the trust store.
      required:
      - trustStoreArn
    UpdateUserAccessLoggingSettingsRequest:
      type: object
      properties:
        userAccessLoggingSettingsArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the user access logging settings.
        kinesisStreamArn:
          allOf:
          - $ref: '#/components/schemas/KinesisStreamArn'
          description: The ARN of the Kinesis stream.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: 'A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. Idempotency ensures that an API request
            completes only once. With an idempotent request, if the original request
            completes successfully, subsequent retries with the same client token
            return the result from the original successful request.


            If you do not specify a client token, one is automatically generated by
            the Amazon Web Services SDK.'
      required:
      - userAccessLoggingSettingsArn
    UpdateUserAccessLoggingSettingsResponse:
      type: object
      properties:
        userAccessLoggingSettings:
          allOf:
          - $ref: '#/components/schemas/UserAccessLoggingSettings'
          description: The user access logging settings.
      required:
      - userAccessLoggingSettings
    UpdateUserSettingsRequest:
      type: object
      properties:
        userSettingsArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the user settings.
        copyAllowed:
          allOf:
          - $ref: '#/components/schemas/EnabledType'
          description: Specifies whether the user can copy text from the streaming
            session to the local device.
        pasteAllowed:
          allOf:
          - $ref: '#/components/schemas/EnabledType'
          description: Specifies whether the user can paste text from the local device
            to the streaming session.
        downloadAllowed:
          allOf:
          - $ref: '#/components/schemas/EnabledType'
          description: Specifies whether the user can download files from the streaming
            session to the local device.
        uploadAllowed:
          allOf:
          - $ref: '#/components/schemas/EnabledType'
          description: Specifies whether the user can upload files from the local
            device to the streaming session.
        printAllowed:
          allOf:
          - $ref: '#/components/schemas/EnabledType'
          description: Specifies whether the user can print to the local device.
        disconnectTimeoutInMinutes:
          allOf:
          - $ref: '#/components/schemas/DisconnectTimeoutInMinutes'
          description: The amount of time that a streaming session remains active
            after users disconnect.
        idleDisconnectTimeoutInMinutes:
          allOf:
          - $ref: '#/components/schemas/IdleDisconnectTimeoutInMinutes'
          description: The amount of time that users can be idle (inactive) before
            they are disconnected from their streaming session and the disconnect
            timeout interval begins.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: 'A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. Idempotency ensures that an API request
            completes only once. With an idempotent request, if the original request
            completes successfully, subsequent retries with the same client token
            return the result from the original successful request.


            If you do not specify a client token, one is automatically generated by
            the Amazon Web Services SDK.'
        cookieSynchronizationConfiguration:
          allOf:
          - $ref: '#/components/schemas/CookieSynchronizationConfiguration'
          description: 'The configuration that specifies which cookies should be synchronized
            from the end user''s local browser to the remote browser.


            If the allowlist and blocklist are empty, the configuration becomes null.'
        deepLinkAllowed:
          allOf:
          - $ref: '#/components/schemas/EnabledType'
          description: Specifies whether the user can use deep links that open automatically
            when connecting to a session.
        toolbarConfiguration:
          allOf:
          - $ref: '#/components/schemas/ToolbarConfiguration'
          description: The configuration of the toolbar. This allows administrators
            to select the toolbar type and visual mode, set maximum display resolution
            for sessions, and choose which items are visible to end users during their
            sessions. If administrators do not modify these settings, end users retain
            control over their toolbar preferences.
      required:
      - userSettingsArn
    UpdateUserSettingsResponse:
      type: object
      properties:
        userSettings:
          allOf:
          - $ref: '#/components/schemas/UserSettings'
          description: The user settings.
      required:
      - userSettings
    UserAccessLoggingSettings:
      type: object
      properties:
        userAccessLoggingSettingsArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the user access logging settings.
        associatedPortalArns:
          allOf:
          - $ref: '#/components/schemas/ArnList'
          description: A list of web portal ARNs that this user access logging settings
            is associated with.
        kinesisStreamArn:
          allOf:
          - $ref: '#/components/schemas/KinesisStreamArn'
          description: The ARN of the Kinesis stream.
      required:
      - userAccessLoggingSettingsArn
      description: A user access logging settings resource that can be associated
        with a web portal.
    UserAccessLoggingSettingsList:
      type: array
      items:
        $ref: '#/components/schemas/UserAccessLoggingSettingsSummary'
    UserAccessLoggingSettingsSummary:
      type: object
      properties:
        userAccessLoggingSettingsArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the user access logging settings.
        kinesisStreamArn:
          allOf:
          - $ref: '#/components/schemas/KinesisStreamArn'
          description: The ARN of the Kinesis stream.
      required:
      - userAccessLoggingSettingsArn
      description: The summary of user access logging settings.
    UserSettings:
      type: object
      properties:
        userSettingsArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the user settings.
        associatedPortalArns:
          allOf:
          - $ref: '#/components/schemas/ArnList'
          description: A list of web portal ARNs that this user settings is associated
            with.
        copyAllowed:
          allOf:
          - $ref: '#/components/schemas/EnabledType'
          description: Specifies whether the user can copy text from the streaming
            session to the local device.
        pasteAllowed:
          allOf:
          - $ref: '#/components/schemas/EnabledType'
          description: Specifies whether the user can paste text from the local device
            to the streaming session.
        downloadAllowed:
          allOf:
          - $ref: '#/components/schemas/EnabledType'
          description: Specifies whether the user can download files from the streaming
            session to the local device.
        uploadAllowed:
          allOf:
          - $ref: '#/components/schemas/EnabledType'
          description: Specifies whether the user can upload files from the local
            device to the streaming session.
        printAllowed:
          allOf:
          - $ref: '#/components/schemas/EnabledType'
          description: Specifies whether the user can print to the local device.
        disconnectTimeoutInMinutes:
          allOf:
          - $ref: '#/components/schemas/DisconnectTimeoutInMinutes'
          description: The amount of time that a streaming session remains active
            after users disconnect.
        idleDisconnectTimeoutInMinutes:
          allOf:
          - $ref: '#/components/schemas/IdleDisconnectTimeoutInMinutes'
          description: The amount of time that users can be idle (inactive) before
            they are disconnected from their streaming session and the disconnect
            timeout interval begins.
        cookieSynchronizationConfiguration:
          allOf:
          - $ref: '#/components/schemas/CookieSynchronizationConfiguration'
          description: The configuration that specifies which cookies should be synchronized
            from the end user's local browser to the remote browser.
        customerManagedKey:
          allOf:
          - $ref: '#/components/schemas/keyArn'
          description: The customer managed key used to encrypt sensitive information
            in the user settings.
        additionalEncryptionContext:
          allOf:
          - $ref: '#/components/schemas/EncryptionContextMap'
          description: The additional encryption context of the user settings.
        deepLinkAllowed:
          allOf:
          - $ref: '#/components/schemas/EnabledType'
          description: Specifies whether the user can use deep links that open automatically
            when connecting to a session.
        toolbarConfiguration:
          allOf:
          - $ref: '#/components/schemas/ToolbarConfiguration'
          description: The configuration of the toolbar. This allows administrators
            to select the toolbar type and visual mode, set maximum display resolution
            for sessions, and choose which items are visible to end users during their
            sessions. If administrators do not modify these settings, end users retain
            control over their toolbar preferences.
      required:
      - userSettingsArn
      description: A user settings resource that can be associated with a web portal.
        Once associated with a web portal, user settings control how users can transfer
        data between a streaming session and the their local devices.
    UserSettingsList:
      type: array
      items:
        $ref: '#/components/schemas/UserSettingsSummary'
    UserSettingsSummary:
      type: object
      properties:
        userSettingsArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the user settings.
        copyAllowed:
          allOf:
          - $ref: '#/components/schemas/EnabledType'
          description: Specifies whether the user can copy text from the streaming
            session to the local device.
        pasteAllowed:
          allOf:
          - $ref: '#/components/schemas/EnabledType'
          description: Specifies whether the user can paste text from the local device
            to the streaming session.
        downloadAllowed:
          allOf:
          - $ref: '#/components/schemas/EnabledType'
          description: Specifies whether the user can download files from the streaming
            session to the local device.
        uploadAllowed:
          allOf:
          - $ref: '#/components/schemas/EnabledType'
          description: Specifies whether the user can upload files from the local
            device to the streaming session.
        printAllowed:
          allOf:
          - $ref: '#/components/schemas/EnabledType'
          description: Specifies whether the user can print to the local device.
        disconnectTimeoutInMinutes:
          allOf:
          - $ref: '#/components/schemas/DisconnectTimeoutInMinutes'
          description: The amount of time that a streaming session remains active
            after users disconnect.
        idleDisconnectTimeoutInMinutes:
          allOf:
          - $ref: '#/components/schemas/IdleDisconnectTimeoutInMinutes'
          description: The amount of time that users can be idle (inactive) before
            they are disconnected from their streaming session and the disconnect
            timeout interval begins.
        cookieSynchronizationConfiguration:
          allOf:
          - $ref: '#/components/schemas/CookieSynchronizationConfiguration'
          description: The configuration that specifies which cookies should be synchronized
            from the end user's local browser to the remote browser.
        deepLinkAllowed:
          allOf:
          - $ref: '#/components/schemas/EnabledType'
          description: Specifies whether the user can use deep links that open automatically
            when connecting to a session.
        toolbarConfiguration:
          allOf:
          - $ref: '#/components/schemas/ToolbarConfiguration'
          description: The configuration of the toolbar. This allows administrators
            to select the toolbar type and visual mode, set maximum display resolution
            for sessions, and choose which items are visible to end users during their
            sessions. If administrators do not modify these settings, end users retain
            control over their toolbar preferences.
      required:
      - userSettingsArn
      description: The summary of user settings.
    Username:
      type: string
      pattern: ^[\s\S]*$
      minLength: 0
      maxLength: 256
    ValidationException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ExceptionMessage'
        reason:
          allOf:
          - $ref: '#/components/schemas/ValidationExceptionReason'
          description: Reason the request failed validation
        fieldList:
          allOf:
          - $ref: '#/components/schemas/ValidationExceptionFieldList'
          description: The field that caused the error.
      description: There is a validation error.
    ValidationExceptionField:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/FieldName'
          description: The name of the field that failed validation.
        message:
          allOf:
          - $ref: '#/components/schemas/ExceptionMessage'
          description: The message describing why the field failed validation.
      required:
      - name
      - message
      description: Information about a field passed inside a request that resulted
        in an exception.
    ValidationExceptionFieldList:
      type: array
      items:
        $ref: '#/components/schemas/ValidationExceptionField'
    ValidationExceptionReason:
      type: string
      enum:
      - unknownOperation
      - cannotParse
      - fieldValidationFailed
      - other
    VisualMode:
      type: string
      enum:
      - Dark
      - Light
    VpcId:
      type: string
      pattern: ^vpc-[0-9a-z]*$
      minLength: 1
      maxLength: 255
    keyArn:
      type: string
      pattern: ^arn:[\w+=\/,.@-]+:kms:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:key\/[a-zA-Z0-9-]+$
      minLength: 20
      maxLength: 2048
