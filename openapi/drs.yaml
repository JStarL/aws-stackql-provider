openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: drs
  x-aws-serviceName: drs
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-07'
  version: '2020-02-26'
  title: Elastic Disaster Recovery Service
  description: |-
    AWS Elastic Disaster Recovery Service.
servers:
- description: The Elastic Disaster Recovery Service regional endpoint
  url: https://drs.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths:
  /AssociateSourceNetworkStack:
    post:
      operationId: AssociateSourceNetworkStack
      description: |-
        Associate a Source Network to an existing CloudFormation Stack and modify launch templates to use this network. Can be used for reverting to previously deployed CloudFormation stacks.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sourceNetworkID:
                  $ref: '#/components/schemas/SourceNetworkID'
                cfnStackName:
                  $ref: '#/components/schemas/CfnStackName'
      responses:
        '202': {}
        '409':
          description: |-
            The request could not be completed due to a conflict with the current state of the target resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource for this operation was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            The request could not be completed because its exceeded the service quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /CreateExtendedSourceServer:
    post:
      operationId: CreateExtendedSourceServer
      description: |-
        Create an extended source server in the target Account based on the source server in staging account.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sourceServerArn:
                  $ref: '#/components/schemas/SourceServerARN'
                tags:
                  $ref: '#/components/schemas/TagsMap'
      responses:
        '201': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource for this operation was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            The request could not be completed because its exceeded the service quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /CreateLaunchConfigurationTemplate:
    post:
      operationId: CreateLaunchConfigurationTemplate
      description: |-
        Creates a new Launch Configuration Template.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tags:
                  $ref: '#/components/schemas/TagsMap'
                launchDisposition:
                  $ref: '#/components/schemas/LaunchDisposition'
                targetInstanceTypeRightSizingMethod:
                  $ref: '#/components/schemas/TargetInstanceTypeRightSizingMethod'
                copyPrivateIp:
                  $ref: '#/components/schemas/Boolean'
                copyTags:
                  $ref: '#/components/schemas/Boolean'
                licensing:
                  $ref: '#/components/schemas/Licensing'
                exportBucketArn:
                  $ref: '#/components/schemas/ARN'
                postLaunchEnabled:
                  $ref: '#/components/schemas/Boolean'
                launchIntoSourceInstance:
                  $ref: '#/components/schemas/Boolean'
      responses:
        '201': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '402':
          description: |-
            The request could not be completed because its exceeded the service quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /CreateReplicationConfigurationTemplate:
    post:
      operationId: CreateReplicationConfigurationTemplate
      description: |-
        Creates a new ReplicationConfigurationTemplate.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                stagingAreaSubnetId:
                  $ref: '#/components/schemas/SubnetID'
                associateDefaultSecurityGroup:
                  $ref: '#/components/schemas/Boolean'
                replicationServersSecurityGroupsIDs:
                  $ref: '#/components/schemas/ReplicationServersSecurityGroupsIDs'
                replicationServerInstanceType:
                  $ref: '#/components/schemas/EC2InstanceType'
                useDedicatedReplicationServer:
                  $ref: '#/components/schemas/Boolean'
                defaultLargeStagingDiskType:
                  $ref: '#/components/schemas/ReplicationConfigurationDefaultLargeStagingDiskType'
                ebsEncryption:
                  $ref: '#/components/schemas/ReplicationConfigurationEbsEncryption'
                ebsEncryptionKeyArn:
                  $ref: '#/components/schemas/ARN'
                bandwidthThrottling:
                  $ref: '#/components/schemas/PositiveInteger'
                dataPlaneRouting:
                  $ref: '#/components/schemas/ReplicationConfigurationDataPlaneRouting'
                createPublicIP:
                  $ref: '#/components/schemas/Boolean'
                stagingAreaTags:
                  $ref: '#/components/schemas/TagsMap'
                pitPolicy:
                  $ref: '#/components/schemas/PITPolicy'
                tags:
                  $ref: '#/components/schemas/TagsMap'
                autoReplicateNewDisks:
                  $ref: '#/components/schemas/Boolean'
      responses:
        '201': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '402':
          description: |-
            The request could not be completed because its exceeded the service quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /CreateSourceNetwork:
    post:
      operationId: CreateSourceNetwork
      description: |-
        Create a new Source Network resource for a provided VPC ID.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                vpcID:
                  $ref: '#/components/schemas/VpcID'
                originAccountID:
                  $ref: '#/components/schemas/AccountID'
                originRegion:
                  $ref: '#/components/schemas/AwsRegion'
                tags:
                  $ref: '#/components/schemas/TagsMap'
      responses:
        '201': {}
        '409':
          description: |-
            The request could not be completed due to a conflict with the current state of the target resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource for this operation was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            The request could not be completed because its exceeded the service quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /DeleteJob:
    post:
      operationId: DeleteJob
      description: |-
        Deletes a single Job by ID.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                jobID:
                  $ref: '#/components/schemas/JobID'
      responses:
        '204': {}
        '409':
          description: |-
            The request could not be completed due to a conflict with the current state of the target resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource for this operation was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The account performing the request has not been initialized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
  /DeleteLaunchAction:
    post:
      operationId: DeleteLaunchAction
      description: |-
        Deletes a resource launch action.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resourceId:
                  $ref: '#/components/schemas/LaunchActionResourceId'
                actionId:
                  $ref: '#/components/schemas/LaunchActionId'
      responses:
        '204': {}
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource for this operation was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /DeleteLaunchConfigurationTemplate:
    post:
      operationId: DeleteLaunchConfigurationTemplate
      description: |-
        Deletes a single Launch Configuration Template by ID.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                launchConfigurationTemplateID:
                  $ref: '#/components/schemas/LaunchConfigurationTemplateID'
      responses:
        '204': {}
        '409':
          description: |-
            The request could not be completed due to a conflict with the current state of the target resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource for this operation was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The account performing the request has not been initialized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
  /DeleteRecoveryInstance:
    post:
      operationId: DeleteRecoveryInstance
      description: |-
        Deletes a single Recovery Instance by ID. This deletes the Recovery Instance resource from Elastic Disaster Recovery. The Recovery Instance must be disconnected first in order to delete it.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                recoveryInstanceID:
                  $ref: '#/components/schemas/RecoveryInstanceID'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The request could not be completed due to a conflict with the current state of the target resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The account performing the request has not been initialized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
  /DeleteReplicationConfigurationTemplate:
    post:
      operationId: DeleteReplicationConfigurationTemplate
      description: |-
        Deletes a single Replication Configuration Template by ID
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                replicationConfigurationTemplateID:
                  $ref: '#/components/schemas/ReplicationConfigurationTemplateID'
      responses:
        '204': {}
        '409':
          description: |-
            The request could not be completed due to a conflict with the current state of the target resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource for this operation was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The account performing the request has not been initialized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
  /DeleteSourceNetwork:
    post:
      operationId: DeleteSourceNetwork
      description: |-
        Delete Source Network resource.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sourceNetworkID:
                  $ref: '#/components/schemas/SourceNetworkID'
      responses:
        '204': {}
        '409':
          description: |-
            The request could not be completed due to a conflict with the current state of the target resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource for this operation was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The account performing the request has not been initialized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
  /DeleteSourceServer:
    post:
      operationId: DeleteSourceServer
      description: |-
        Deletes a single Source Server by ID. The Source Server must be disconnected first.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sourceServerID:
                  $ref: '#/components/schemas/SourceServerID'
      responses:
        '204': {}
        '409':
          description: |-
            The request could not be completed due to a conflict with the current state of the target resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource for this operation was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The account performing the request has not been initialized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
  /DescribeJobLogItems:
    post:
      operationId: DescribeJobLogItems
      description: |-
        Retrieves a detailed Job log with pagination.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                jobID:
                  $ref: '#/components/schemas/JobID'
                maxResults:
                  $ref: '#/components/schemas/StrictlyPositiveInteger'
                nextToken:
                  $ref: '#/components/schemas/PaginationToken'
      responses:
        '200': {}
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /DescribeJobs:
    post:
      operationId: DescribeJobs
      description: |-
        Returns a list of Jobs. Use the JobsID and fromDate and toDate filters to limit which jobs are returned. The response is sorted by creationDataTime - latest date first. Jobs are created by the StartRecovery, TerminateRecoveryInstances and StartFailbackLaunch APIs. Jobs are also created by DiagnosticLaunch and TerminateDiagnosticInstances, which are APIs available only to *Support* and only used in response to relevant support tickets.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                filters:
                  $ref: '#/components/schemas/DescribeJobsRequestFilters'
                maxResults:
                  $ref: '#/components/schemas/StrictlyPositiveInteger'
                nextToken:
                  $ref: '#/components/schemas/PaginationToken'
      responses:
        '200': {}
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /DescribeLaunchConfigurationTemplates:
    post:
      operationId: DescribeLaunchConfigurationTemplates
      description: |-
        Lists all Launch Configuration Templates, filtered by Launch Configuration Template IDs
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                launchConfigurationTemplateIDs:
                  $ref: '#/components/schemas/LaunchConfigurationTemplateIDs'
                maxResults:
                  $ref: '#/components/schemas/MaxResultsType'
                nextToken:
                  $ref: '#/components/schemas/PaginationToken'
      responses:
        '200': {}
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource for this operation was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /DescribeRecoveryInstances:
    post:
      operationId: DescribeRecoveryInstances
      description: |-
        Lists all Recovery Instances or multiple Recovery Instances by ID.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                filters:
                  $ref: '#/components/schemas/DescribeRecoveryInstancesRequestFilters'
                maxResults:
                  $ref: '#/components/schemas/StrictlyPositiveInteger'
                nextToken:
                  $ref: '#/components/schemas/PaginationToken'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The account performing the request has not been initialized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
  /DescribeRecoverySnapshots:
    post:
      operationId: DescribeRecoverySnapshots
      description: |-
        Lists all Recovery Snapshots for a single Source Server.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sourceServerID:
                  $ref: '#/components/schemas/SourceServerID'
                filters:
                  $ref: '#/components/schemas/DescribeRecoverySnapshotsRequestFilters'
                order:
                  $ref: '#/components/schemas/RecoverySnapshotsOrder'
                maxResults:
                  $ref: '#/components/schemas/StrictlyPositiveInteger'
                nextToken:
                  $ref: '#/components/schemas/PaginationToken'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /DescribeReplicationConfigurationTemplates:
    post:
      operationId: DescribeReplicationConfigurationTemplates
      description: |-
        Lists all ReplicationConfigurationTemplates, filtered by Source Server IDs.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                replicationConfigurationTemplateIDs:
                  $ref: '#/components/schemas/ReplicationConfigurationTemplateIDs'
                maxResults:
                  $ref: '#/components/schemas/StrictlyPositiveInteger'
                nextToken:
                  $ref: '#/components/schemas/PaginationToken'
      responses:
        '200': {}
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource for this operation was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /DescribeSourceNetworks:
    post:
      operationId: DescribeSourceNetworks
      description: |-
        Lists all Source Networks or multiple Source Networks filtered by ID.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                filters:
                  $ref: '#/components/schemas/DescribeSourceNetworksRequestFilters'
                maxResults:
                  $ref: '#/components/schemas/StrictlyPositiveInteger'
                nextToken:
                  $ref: '#/components/schemas/PaginationToken'
      responses:
        '200': {}
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /DescribeSourceServers:
    post:
      operationId: DescribeSourceServers
      description: |-
        Lists all Source Servers or multiple Source Servers filtered by ID.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                filters:
                  $ref: '#/components/schemas/DescribeSourceServersRequestFilters'
                maxResults:
                  $ref: '#/components/schemas/StrictlyPositiveInteger'
                nextToken:
                  $ref: '#/components/schemas/PaginationToken'
      responses:
        '200': {}
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /DisconnectRecoveryInstance:
    post:
      operationId: DisconnectRecoveryInstance
      description: |-
        Disconnect a Recovery Instance from Elastic Disaster Recovery. Data replication is stopped immediately. All AWS resources created by Elastic Disaster Recovery for enabling the replication of the Recovery Instance will be terminated / deleted within 90 minutes. If the agent on the Recovery Instance has not been prevented from communicating with the Elastic Disaster Recovery service, then it will receive a command to uninstall itself (within approximately 10 minutes). The following properties of the Recovery Instance will be changed immediately: dataReplicationInfo.dataReplicationState will be set to DISCONNECTED; The totalStorageBytes property for each of dataReplicationInfo.replicatedDisks will be set to zero; dataReplicationInfo.lagDuration and dataReplicationInfo.lagDuration will be nullified.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                recoveryInstanceID:
                  $ref: '#/components/schemas/RecoveryInstanceID'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The request could not be completed due to a conflict with the current state of the target resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource for this operation was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The account performing the request has not been initialized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
  /DisconnectSourceServer:
    post:
      operationId: DisconnectSourceServer
      description: |-
        Disconnects a specific Source Server from Elastic Disaster Recovery. Data replication is stopped immediately. All AWS resources created by Elastic Disaster Recovery for enabling the replication of the Source Server will be terminated / deleted within 90 minutes. You cannot disconnect a Source Server if it has a Recovery Instance. If the agent on the Source Server has not been prevented from communicating with the Elastic Disaster Recovery service, then it will receive a command to uninstall itself (within approximately 10 minutes). The following properties of the SourceServer will be changed immediately: dataReplicationInfo.dataReplicationState will be set to DISCONNECTED; The totalStorageBytes property for each of dataReplicationInfo.replicatedDisks will be set to zero; dataReplicationInfo.lagDuration and dataReplicationInfo.lagDuration will be nullified.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sourceServerID:
                  $ref: '#/components/schemas/SourceServerID'
      responses:
        '200': {}
        '409':
          description: |-
            The request could not be completed due to a conflict with the current state of the target resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource for this operation was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The account performing the request has not been initialized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
  /ExportSourceNetworkCfnTemplate:
    post:
      operationId: ExportSourceNetworkCfnTemplate
      description: |-
        Export the Source Network CloudFormation template to an S3 bucket.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sourceNetworkID:
                  $ref: '#/components/schemas/SourceNetworkID'
      responses:
        '200': {}
        '409':
          description: |-
            The request could not be completed due to a conflict with the current state of the target resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource for this operation was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /GetFailbackReplicationConfiguration:
    post:
      operationId: GetFailbackReplicationConfiguration
      description: |-
        Lists all Failback ReplicationConfigurations, filtered by Recovery Instance ID.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                recoveryInstanceID:
                  $ref: '#/components/schemas/RecoveryInstanceID'
      responses:
        '200': {}
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource for this operation was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The account performing the request has not been initialized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
  /GetLaunchConfiguration:
    post:
      operationId: GetLaunchConfiguration
      description: |-
        Gets a LaunchConfiguration, filtered by Source Server IDs.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sourceServerID:
                  $ref: '#/components/schemas/SourceServerID'
      responses:
        '200': {}
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource for this operation was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The account performing the request has not been initialized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
  /GetReplicationConfiguration:
    post:
      operationId: GetReplicationConfiguration
      description: |-
        Gets a ReplicationConfiguration, filtered by Source Server ID.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sourceServerID:
                  $ref: '#/components/schemas/SourceServerID'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource for this operation was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The account performing the request has not been initialized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
  /InitializeService:
    post:
      operationId: InitializeService
      description: |-
        Initialize Elastic Disaster Recovery.
      parameters: []
      responses:
        '204': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /ListExtensibleSourceServers:
    post:
      operationId: ListExtensibleSourceServers
      description: |-
        Returns a list of source servers on a staging account that are extensible, which means that: a. The source server is not already extended into this Account. b. The source server on the Account we’re reading from is not an extension of another source server.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                stagingAccountID:
                  $ref: '#/components/schemas/AccountID'
                maxResults:
                  $ref: '#/components/schemas/MaxResultsReplicatingSourceServers'
                nextToken:
                  $ref: '#/components/schemas/PaginationToken'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /ListLaunchActions:
    post:
      operationId: ListLaunchActions
      description: |-
        Lists resource launch actions.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resourceId:
                  $ref: '#/components/schemas/LaunchActionResourceId'
                filters:
                  $ref: '#/components/schemas/LaunchActionsRequestFilters'
                maxResults:
                  $ref: '#/components/schemas/MaxResultsType'
                nextToken:
                  $ref: '#/components/schemas/PaginationToken'
      responses:
        '200': {}
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource for this operation was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            The request could not be completed because its exceeded the service quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The account performing the request has not been initialized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
  /ListStagingAccounts:
    get:
      operationId: ListStagingAccounts
      description: |-
        Returns an array of staging accounts for existing extended source servers.
      parameters:
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Integer'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PaginationToken'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /tags/{resourceArn}:
    get:
      operationId: ListTagsForResource
      description: |-
        List all tags for your Elastic Disaster Recovery resources.
      parameters:
      - name: resourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ARN'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource for this operation was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    post:
      operationId: TagResource
      description: |-
        Adds or overwrites only the specified tags for the specified Elastic Disaster Recovery resource or resources. When you specify an existing tag key, the value is overwritten with the new value. Each resource can have a maximum of 50 tags. Each tag consists of a key and optional value.
      parameters:
      - name: resourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ARN'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tags:
                  $ref: '#/components/schemas/TagsMap'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource for this operation was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    delete:
      operationId: UntagResource
      description: |-
        Deletes the specified set of tags from the specified set of Elastic Disaster Recovery resources.
      parameters:
      - name: resourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ARN'
      - name: tagKeys
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/TagKeys'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource for this operation was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /PutLaunchAction:
    post:
      operationId: PutLaunchAction
      description: |-
        Puts a resource launch action.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resourceId:
                  $ref: '#/components/schemas/LaunchActionResourceId'
                actionCode:
                  $ref: '#/components/schemas/SsmDocumentName'
                order:
                  $ref: '#/components/schemas/LaunchActionOrder'
                actionId:
                  $ref: '#/components/schemas/LaunchActionId'
                optional:
                  $ref: '#/components/schemas/Boolean'
                active:
                  $ref: '#/components/schemas/Boolean'
                name:
                  $ref: '#/components/schemas/LaunchActionName'
                actionVersion:
                  $ref: '#/components/schemas/LaunchActionVersion'
                category:
                  $ref: '#/components/schemas/LaunchActionCategory'
                parameters:
                  $ref: '#/components/schemas/LaunchActionParameters'
                description:
                  $ref: '#/components/schemas/LaunchActionDescription'
      responses:
        '200': {}
        '409':
          description: |-
            The request could not be completed due to a conflict with the current state of the target resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource for this operation was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /RetryDataReplication:
    post:
      operationId: RetryDataReplication
      description: |-
        WARNING: RetryDataReplication is deprecated. Causes the data replication initiation sequence to begin immediately upon next Handshake for the specified Source Server ID, regardless of when the previous initiation started. This command will work only if the Source Server is stalled or is in a DISCONNECTED or STOPPED state.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sourceServerID:
                  $ref: '#/components/schemas/SourceServerID'
      responses:
        '200': {}
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource for this operation was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /ReverseReplication:
    post:
      operationId: ReverseReplication
      description: |-
        Start replication to origin / target region - applies only to protected instances that originated in EC2. For recovery instances on target region - starts replication back to origin region. For failback instances on origin region - starts replication to target region to re-protect them.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                recoveryInstanceID:
                  $ref: '#/components/schemas/RecoveryInstanceID'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The request could not be completed due to a conflict with the current state of the target resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource for this operation was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /StartFailbackLaunch:
    post:
      operationId: StartFailbackLaunch
      description: |-
        Initiates a Job for launching the machine that is being failed back to from the specified Recovery Instance. This will run conversion on the failback client and will reboot your machine, thus completing the failback process.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                recoveryInstanceIDs:
                  $ref: '#/components/schemas/StartFailbackRequestRecoveryInstanceIDs'
                tags:
                  $ref: '#/components/schemas/TagsMap'
      responses:
        '200': {}
        '409':
          description: |-
            The request could not be completed due to a conflict with the current state of the target resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '402':
          description: |-
            The request could not be completed because its exceeded the service quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /StartRecovery:
    post:
      operationId: StartRecovery
      description: |-
        Launches Recovery Instances for the specified Source Servers. For each Source Server you may choose a point in time snapshot to launch from, or use an on demand snapshot.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sourceServers:
                  $ref: '#/components/schemas/StartRecoveryRequestSourceServers'
                isDrill:
                  $ref: '#/components/schemas/Boolean'
                tags:
                  $ref: '#/components/schemas/TagsMap'
      responses:
        '202': {}
        '409':
          description: |-
            The request could not be completed due to a conflict with the current state of the target resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '402':
          description: |-
            The request could not be completed because its exceeded the service quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The account performing the request has not been initialized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
  /StartReplication:
    post:
      operationId: StartReplication
      description: |-
        Starts replication for a stopped Source Server. This action would make the Source Server protected again and restart billing for it.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sourceServerID:
                  $ref: '#/components/schemas/SourceServerID'
      responses:
        '200': {}
        '409':
          description: |-
            The request could not be completed due to a conflict with the current state of the target resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource for this operation was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The account performing the request has not been initialized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
  /StartSourceNetworkRecovery:
    post:
      operationId: StartSourceNetworkRecovery
      description: |-
        Deploy VPC for the specified Source Network and modify launch templates to use this network. The VPC will be deployed using a dedicated CloudFormation stack.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sourceNetworks:
                  $ref: '#/components/schemas/StartSourceNetworkRecoveryRequestNetworkEntries'
                deployAsNew:
                  $ref: '#/components/schemas/Boolean'
                tags:
                  $ref: '#/components/schemas/TagsMap'
      responses:
        '202': {}
        '409':
          description: |-
            The request could not be completed due to a conflict with the current state of the target resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '402':
          description: |-
            The request could not be completed because its exceeded the service quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /StartSourceNetworkReplication:
    post:
      operationId: StartSourceNetworkReplication
      description: |-
        Starts replication for a Source Network. This action would make the Source Network protected.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sourceNetworkID:
                  $ref: '#/components/schemas/SourceNetworkID'
      responses:
        '200': {}
        '409':
          description: |-
            The request could not be completed due to a conflict with the current state of the target resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource for this operation was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The account performing the request has not been initialized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
  /StopFailback:
    post:
      operationId: StopFailback
      description: |-
        Stops the failback process for a specified Recovery Instance. This changes the Failback State of the Recovery Instance back to FAILBACK_NOT_STARTED.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                recoveryInstanceID:
                  $ref: '#/components/schemas/RecoveryInstanceID'
      responses:
        '200': {}
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource for this operation was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The account performing the request has not been initialized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
  /StopReplication:
    post:
      operationId: StopReplication
      description: |-
        Stops replication for a Source Server. This action would make the Source Server unprotected, delete its existing snapshots and stop billing for it.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sourceServerID:
                  $ref: '#/components/schemas/SourceServerID'
      responses:
        '200': {}
        '409':
          description: |-
            The request could not be completed due to a conflict with the current state of the target resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource for this operation was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The account performing the request has not been initialized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
  /StopSourceNetworkReplication:
    post:
      operationId: StopSourceNetworkReplication
      description: |-
        Stops replication for a Source Network. This action would make the Source Network unprotected.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sourceNetworkID:
                  $ref: '#/components/schemas/SourceNetworkID'
      responses:
        '200': {}
        '409':
          description: |-
            The request could not be completed due to a conflict with the current state of the target resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource for this operation was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /TerminateRecoveryInstances:
    post:
      operationId: TerminateRecoveryInstances
      description: |-
        Initiates a Job for terminating the EC2 resources associated with the specified Recovery Instances, and then will delete the Recovery Instances from the Elastic Disaster Recovery service.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                recoveryInstanceIDs:
                  $ref: '#/components/schemas/RecoveryInstancesForTerminationRequest'
      responses:
        '200': {}
        '409':
          description: |-
            The request could not be completed due to a conflict with the current state of the target resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '402':
          description: |-
            The request could not be completed because its exceeded the service quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The account performing the request has not been initialized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
  /UpdateFailbackReplicationConfiguration:
    post:
      operationId: UpdateFailbackReplicationConfiguration
      description: |-
        Allows you to update the failback replication configuration of a Recovery Instance by ID.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                recoveryInstanceID:
                  $ref: '#/components/schemas/RecoveryInstanceID'
                name:
                  $ref: '#/components/schemas/BoundedString'
                bandwidthThrottling:
                  $ref: '#/components/schemas/PositiveInteger'
                usePrivateIP:
                  $ref: '#/components/schemas/Boolean'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource for this operation was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The account performing the request has not been initialized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UninitializedAccountException'
  /UpdateLaunchConfiguration:
    post:
      operationId: UpdateLaunchConfiguration
      description: |-
        Updates a LaunchConfiguration by Source Server ID.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sourceServerID:
                  $ref: '#/components/schemas/SourceServerID'
                name:
                  $ref: '#/components/schemas/SmallBoundedString'
                launchDisposition:
                  $ref: '#/components/schemas/LaunchDisposition'
                targetInstanceTypeRightSizingMethod:
                  $ref: '#/components/schemas/TargetInstanceTypeRightSizingMethod'
                copyPrivateIp:
                  $ref: '#/components/schemas/Boolean'
                copyTags:
                  $ref: '#/components/schemas/Boolean'
                licensing:
                  $ref: '#/components/schemas/Licensing'
                postLaunchEnabled:
                  $ref: '#/components/schemas/Boolean'
                launchIntoInstanceProperties:
                  $ref: '#/components/schemas/LaunchIntoInstanceProperties'
      responses:
        '200': {}
        '409':
          description: |-
            The request could not be completed due to a conflict with the current state of the target resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource for this operation was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /UpdateLaunchConfigurationTemplate:
    post:
      operationId: UpdateLaunchConfigurationTemplate
      description: |-
        Updates an existing Launch Configuration Template by ID.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                launchConfigurationTemplateID:
                  $ref: '#/components/schemas/LaunchConfigurationTemplateID'
                launchDisposition:
                  $ref: '#/components/schemas/LaunchDisposition'
                targetInstanceTypeRightSizingMethod:
                  $ref: '#/components/schemas/TargetInstanceTypeRightSizingMethod'
                copyPrivateIp:
                  $ref: '#/components/schemas/Boolean'
                copyTags:
                  $ref: '#/components/schemas/Boolean'
                licensing:
                  $ref: '#/components/schemas/Licensing'
                exportBucketArn:
                  $ref: '#/components/schemas/ARN'
                postLaunchEnabled:
                  $ref: '#/components/schemas/Boolean'
                launchIntoSourceInstance:
                  $ref: '#/components/schemas/Boolean'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource for this operation was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /UpdateReplicationConfiguration:
    post:
      operationId: UpdateReplicationConfiguration
      description: |-
        Allows you to update a ReplicationConfiguration by Source Server ID.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sourceServerID:
                  $ref: '#/components/schemas/SourceServerID'
                name:
                  $ref: '#/components/schemas/SmallBoundedString'
                stagingAreaSubnetId:
                  $ref: '#/components/schemas/SubnetID'
                associateDefaultSecurityGroup:
                  $ref: '#/components/schemas/Boolean'
                replicationServersSecurityGroupsIDs:
                  $ref: '#/components/schemas/ReplicationServersSecurityGroupsIDs'
                replicationServerInstanceType:
                  $ref: '#/components/schemas/EC2InstanceType'
                useDedicatedReplicationServer:
                  $ref: '#/components/schemas/Boolean'
                defaultLargeStagingDiskType:
                  $ref: '#/components/schemas/ReplicationConfigurationDefaultLargeStagingDiskType'
                replicatedDisks:
                  $ref: '#/components/schemas/ReplicationConfigurationReplicatedDisks'
                ebsEncryption:
                  $ref: '#/components/schemas/ReplicationConfigurationEbsEncryption'
                ebsEncryptionKeyArn:
                  $ref: '#/components/schemas/ARN'
                bandwidthThrottling:
                  $ref: '#/components/schemas/PositiveInteger'
                dataPlaneRouting:
                  $ref: '#/components/schemas/ReplicationConfigurationDataPlaneRouting'
                createPublicIP:
                  $ref: '#/components/schemas/Boolean'
                stagingAreaTags:
                  $ref: '#/components/schemas/TagsMap'
                pitPolicy:
                  $ref: '#/components/schemas/PITPolicy'
                autoReplicateNewDisks:
                  $ref: '#/components/schemas/Boolean'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The request could not be completed due to a conflict with the current state of the target resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource for this operation was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /UpdateReplicationConfigurationTemplate:
    post:
      operationId: UpdateReplicationConfigurationTemplate
      description: |-
        Updates a ReplicationConfigurationTemplate by ID.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                replicationConfigurationTemplateID:
                  $ref: '#/components/schemas/ReplicationConfigurationTemplateID'
                arn:
                  $ref: '#/components/schemas/ARN'
                stagingAreaSubnetId:
                  $ref: '#/components/schemas/SubnetID'
                associateDefaultSecurityGroup:
                  $ref: '#/components/schemas/Boolean'
                replicationServersSecurityGroupsIDs:
                  $ref: '#/components/schemas/ReplicationServersSecurityGroupsIDs'
                replicationServerInstanceType:
                  $ref: '#/components/schemas/EC2InstanceType'
                useDedicatedReplicationServer:
                  $ref: '#/components/schemas/Boolean'
                defaultLargeStagingDiskType:
                  $ref: '#/components/schemas/ReplicationConfigurationDefaultLargeStagingDiskType'
                ebsEncryption:
                  $ref: '#/components/schemas/ReplicationConfigurationEbsEncryption'
                ebsEncryptionKeyArn:
                  $ref: '#/components/schemas/ARN'
                bandwidthThrottling:
                  $ref: '#/components/schemas/PositiveInteger'
                dataPlaneRouting:
                  $ref: '#/components/schemas/ReplicationConfigurationDataPlaneRouting'
                createPublicIP:
                  $ref: '#/components/schemas/Boolean'
                stagingAreaTags:
                  $ref: '#/components/schemas/TagsMap'
                pitPolicy:
                  $ref: '#/components/schemas/PITPolicy'
                autoReplicateNewDisks:
                  $ref: '#/components/schemas/Boolean'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource for this operation was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by the AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
components:
  schemas:
    ARN:
      type: string
      pattern: ^arn:.{16,2044}$
      minLength: 20
      maxLength: 2048
    AccessDeniedException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/LargeBoundedString'
        code:
          $ref: '#/components/schemas/LargeBoundedString'
      description: You do not have sufficient access to perform this action.
    Account:
      type: object
      properties:
        accountID:
          allOf:
          - $ref: '#/components/schemas/AccountID'
          description: Account ID of AWS account.
      description: AWS account.
    AccountID:
      type: string
      pattern: '[0-9]{12,}'
      minLength: 12
      maxLength: 12
    AccountIDs:
      type: array
      items:
        $ref: '#/components/schemas/AccountID'
    Accounts:
      type: array
      items:
        $ref: '#/components/schemas/Account'
    AgentVersion:
      type: string
      pattern: ^[0-9]{1,5}.[0-9]{1,5}.[0-9]{1,5}(.[0-9]{4}.[0-9]{3}.[0-9]{4})?$
    AssociateSourceNetworkStackRequest:
      type: object
      properties:
        sourceNetworkID:
          allOf:
          - $ref: '#/components/schemas/SourceNetworkID'
          description: The Source Network ID to associate with CloudFormation template.
        cfnStackName:
          allOf:
          - $ref: '#/components/schemas/CfnStackName'
          description: CloudFormation template to associate with a Source Network.
      required:
      - sourceNetworkID
      - cfnStackName
    AssociateSourceNetworkStackResponse:
      type: object
      properties:
        job:
          allOf:
          - $ref: '#/components/schemas/Job'
          description: The Source Network association Job.
    AwsAvailabilityZone:
      type: string
      pattern: ^(us(-gov)?|ap|ca|cn|eu|sa|af|me|il)-(central|north|(north(?:east|west))|south|south(?:east|west)|east|west)-[0-9][a-z]$
      minLength: 0
      maxLength: 255
    AwsRegion:
      type: string
      pattern: ^(us(-gov)?|ap|ca|cn|eu|sa|af|me|il)-(central|north|(north(?:east|west))|south|south(?:east|west)|east|west)-[0-9]$
      minLength: 0
      maxLength: 255
    BoundedString:
      type: string
      minLength: 0
      maxLength: 256
    CPU:
      type: object
      properties:
        cores:
          allOf:
          - $ref: '#/components/schemas/PositiveInteger'
          description: The number of CPU cores.
        modelName:
          allOf:
          - $ref: '#/components/schemas/BoundedString'
          description: The model name of the CPU.
      description: Information about a server's CPU.
    CfnStackName:
      type: string
      pattern: ^[a-zA-Z][-a-zA-Z0-9]*$
      minLength: 1
      maxLength: 128
    ConflictException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/LargeBoundedString'
        code:
          $ref: '#/components/schemas/LargeBoundedString'
        resourceId:
          allOf:
          - $ref: '#/components/schemas/LargeBoundedString'
          description: The ID of the resource.
        resourceType:
          allOf:
          - $ref: '#/components/schemas/LargeBoundedString'
          description: The type of the resource.
      description: The request could not be completed due to a conflict with the current
        state of the target resource.
    ConversionMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/EbsSnapshot'
    ConversionProperties:
      type: object
      properties:
        volumeToConversionMap:
          allOf:
          - $ref: '#/components/schemas/VolumeToConversionMap'
          description: A mapping between the volumes being converted and the converted
            snapshot ids
        rootVolumeName:
          allOf:
          - $ref: '#/components/schemas/LargeBoundedString'
          description: The root volume name of a conversion job
        forceUefi:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether the volume being converted uses UEFI or not
        dataTimestamp:
          allOf:
          - $ref: '#/components/schemas/LargeBoundedString'
          description: The timestamp of when the snapshot being converted was taken
        volumeToVolumeSize:
          allOf:
          - $ref: '#/components/schemas/VolumeToSizeMap'
          description: A mapping between the volumes and their sizes
        volumeToProductCodes:
          allOf:
          - $ref: '#/components/schemas/VolumeToProductCodes'
          description: A mapping between the volumes being converted and the product
            codes associated with them
      description: Properties of a conversion job
    Cpus:
      type: array
      items:
        $ref: '#/components/schemas/CPU'
    CreateExtendedSourceServerRequest:
      type: object
      properties:
        sourceServerArn:
          allOf:
          - $ref: '#/components/schemas/SourceServerARN'
          description: This defines the ARN of the source server in staging Account
            based on which you want to create an extended source server.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagsMap'
          description: A list of tags associated with the extended source server.
      required:
      - sourceServerArn
    CreateExtendedSourceServerResponse:
      type: object
      properties:
        sourceServer:
          allOf:
          - $ref: '#/components/schemas/SourceServer'
          description: Created extended source server.
    CreateLaunchConfigurationTemplateRequest:
      type: object
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/TagsMap'
          description: Request to associate tags during creation of a Launch Configuration
            Template.
        launchDisposition:
          allOf:
          - $ref: '#/components/schemas/LaunchDisposition'
          description: Launch disposition.
        targetInstanceTypeRightSizingMethod:
          allOf:
          - $ref: '#/components/schemas/TargetInstanceTypeRightSizingMethod'
          description: Target instance type right-sizing method.
        copyPrivateIp:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Copy private IP.
        copyTags:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Copy tags.
        licensing:
          allOf:
          - $ref: '#/components/schemas/Licensing'
          description: Licensing.
        exportBucketArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: S3 bucket ARN to export Source Network templates.
        postLaunchEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether we want to activate post-launch actions.
        launchIntoSourceInstance:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: DRS will set the 'launch into instance ID' of any source server
            when performing a drill, recovery or failback to the previous region or
            availability zone, using the instance ID of the source instance.
    CreateLaunchConfigurationTemplateResponse:
      type: object
      properties:
        launchConfigurationTemplate:
          allOf:
          - $ref: '#/components/schemas/LaunchConfigurationTemplate'
          description: Created Launch Configuration Template.
    CreateReplicationConfigurationTemplateRequest:
      type: object
      properties:
        stagingAreaSubnetId:
          allOf:
          - $ref: '#/components/schemas/SubnetID'
          description: The subnet to be used by the replication staging area.
        associateDefaultSecurityGroup:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether to associate the default Elastic Disaster Recovery
            Security group with the Replication Configuration Template.
        replicationServersSecurityGroupsIDs:
          allOf:
          - $ref: '#/components/schemas/ReplicationServersSecurityGroupsIDs'
          description: The security group IDs that will be used by the replication
            server.
        replicationServerInstanceType:
          allOf:
          - $ref: '#/components/schemas/EC2InstanceType'
          description: The instance type to be used for the replication server.
        useDedicatedReplicationServer:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether to use a dedicated Replication Server in the replication
            staging area.
        defaultLargeStagingDiskType:
          allOf:
          - $ref: '#/components/schemas/ReplicationConfigurationDefaultLargeStagingDiskType'
          description: The Staging Disk EBS volume type to be used during replication.
        ebsEncryption:
          allOf:
          - $ref: '#/components/schemas/ReplicationConfigurationEbsEncryption'
          description: The type of EBS encryption to be used during replication.
        ebsEncryptionKeyArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the EBS encryption key to be used during replication.
        bandwidthThrottling:
          allOf:
          - $ref: '#/components/schemas/PositiveInteger'
          description: Configure bandwidth throttling for the outbound data transfer
            rate of the Source Server in Mbps.
        dataPlaneRouting:
          allOf:
          - $ref: '#/components/schemas/ReplicationConfigurationDataPlaneRouting'
          description: The data plane routing mechanism that will be used for replication.
        createPublicIP:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether to create a Public IP for the Recovery Instance by
            default.
        stagingAreaTags:
          allOf:
          - $ref: '#/components/schemas/TagsMap'
          description: 'A set of tags to be associated with all resources created
            in the replication staging area: EC2 replication server, EBS volumes,
            EBS snapshots, etc.'
        pitPolicy:
          allOf:
          - $ref: '#/components/schemas/PITPolicy'
          description: The Point in time (PIT) policy to manage snapshots taken during
            replication.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagsMap'
          description: A set of tags to be associated with the Replication Configuration
            Template resource.
        autoReplicateNewDisks:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether to allow the AWS replication agent to automatically
            replicate newly added disks.
      required:
      - stagingAreaSubnetId
      - associateDefaultSecurityGroup
      - replicationServersSecurityGroupsIDs
      - replicationServerInstanceType
      - useDedicatedReplicationServer
      - defaultLargeStagingDiskType
      - ebsEncryption
      - bandwidthThrottling
      - dataPlaneRouting
      - createPublicIP
      - stagingAreaTags
      - pitPolicy
    CreateSourceNetworkRequest:
      type: object
      properties:
        vpcID:
          allOf:
          - $ref: '#/components/schemas/VpcID'
          description: Which VPC ID to protect.
        originAccountID:
          allOf:
          - $ref: '#/components/schemas/AccountID'
          description: Account containing the VPC to protect.
        originRegion:
          allOf:
          - $ref: '#/components/schemas/AwsRegion'
          description: Region containing the VPC to protect.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagsMap'
          description: A set of tags to be associated with the Source Network resource.
      required:
      - vpcID
      - originAccountID
      - originRegion
    CreateSourceNetworkResponse:
      type: object
      properties:
        sourceNetworkID:
          allOf:
          - $ref: '#/components/schemas/SourceNetworkID'
          description: ID of the created Source Network.
    DataReplicationError:
      type: object
      properties:
        error:
          allOf:
          - $ref: '#/components/schemas/DataReplicationErrorString'
          description: Error in data replication.
        rawError:
          allOf:
          - $ref: '#/components/schemas/LargeBoundedString'
          description: Error in data replication.
      description: Error in data replication.
    DataReplicationErrorString:
      type: string
      enum:
      - AGENT_NOT_SEEN
      - SNAPSHOTS_FAILURE
      - NOT_CONVERGING
      - UNSTABLE_NETWORK
      - FAILED_TO_CREATE_SECURITY_GROUP
      - FAILED_TO_LAUNCH_REPLICATION_SERVER
      - FAILED_TO_BOOT_REPLICATION_SERVER
      - FAILED_TO_AUTHENTICATE_WITH_SERVICE
      - FAILED_TO_DOWNLOAD_REPLICATION_SOFTWARE
      - FAILED_TO_CREATE_STAGING_DISKS
      - FAILED_TO_ATTACH_STAGING_DISKS
      - FAILED_TO_PAIR_REPLICATION_SERVER_WITH_AGENT
      - FAILED_TO_CONNECT_AGENT_TO_REPLICATION_SERVER
      - FAILED_TO_START_DATA_TRANSFER
    DataReplicationInfo:
      type: object
      properties:
        lagDuration:
          allOf:
          - $ref: '#/components/schemas/ISO8601DurationString'
          description: Data replication lag duration.
        etaDateTime:
          allOf:
          - $ref: '#/components/schemas/ISO8601DatetimeString'
          description: An estimate of when the data replication will be completed.
        replicatedDisks:
          allOf:
          - $ref: '#/components/schemas/DataReplicationInfoReplicatedDisks'
          description: The disks that should be replicated.
        dataReplicationState:
          allOf:
          - $ref: '#/components/schemas/DataReplicationState'
          description: The state of the data replication.
        dataReplicationInitiation:
          allOf:
          - $ref: '#/components/schemas/DataReplicationInitiation'
          description: Information about whether the data replication has been initiated.
        dataReplicationError:
          allOf:
          - $ref: '#/components/schemas/DataReplicationError'
          description: Error in data replication.
        stagingAvailabilityZone:
          allOf:
          - $ref: '#/components/schemas/AwsAvailabilityZone'
          description: AWS Availability zone into which data is being replicated.
        stagingOutpostArn:
          allOf:
          - $ref: '#/components/schemas/OutpostARN'
          description: The ARN of the staging Outpost
      description: Information about Data Replication
    DataReplicationInfoReplicatedDisk:
      type: object
      properties:
        deviceName:
          allOf:
          - $ref: '#/components/schemas/BoundedString'
          description: The name of the device.
        totalStorageBytes:
          allOf:
          - $ref: '#/components/schemas/PositiveInteger'
          description: The total amount of data to be replicated in bytes.
        replicatedStorageBytes:
          allOf:
          - $ref: '#/components/schemas/PositiveInteger'
          description: The amount of data replicated so far in bytes.
        rescannedStorageBytes:
          allOf:
          - $ref: '#/components/schemas/PositiveInteger'
          description: The amount of data to be rescanned in bytes.
        backloggedStorageBytes:
          allOf:
          - $ref: '#/components/schemas/PositiveInteger'
          description: The size of the replication backlog in bytes.
        volumeStatus:
          allOf:
          - $ref: '#/components/schemas/VolumeStatus'
          description: The status of the volume.
      description: A disk that should be replicated.
    DataReplicationInfoReplicatedDisks:
      type: array
      items:
        $ref: '#/components/schemas/DataReplicationInfoReplicatedDisk'
    DataReplicationInitiation:
      type: object
      properties:
        startDateTime:
          allOf:
          - $ref: '#/components/schemas/ISO8601DatetimeString'
          description: The date and time of the current attempt to initiate data replication.
        nextAttemptDateTime:
          allOf:
          - $ref: '#/components/schemas/ISO8601DatetimeString'
          description: The date and time of the next attempt to initiate data replication.
        steps:
          allOf:
          - $ref: '#/components/schemas/DataReplicationInitiationSteps'
          description: The steps of the current attempt to initiate data replication.
      description: Data replication initiation.
    DataReplicationInitiationStep:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/DataReplicationInitiationStepName'
          description: The name of the step.
        status:
          allOf:
          - $ref: '#/components/schemas/DataReplicationInitiationStepStatus'
          description: The status of the step.
      description: Data replication initiation step.
    DataReplicationInitiationStepName:
      type: string
      enum:
      - WAIT
      - CREATE_SECURITY_GROUP
      - LAUNCH_REPLICATION_SERVER
      - BOOT_REPLICATION_SERVER
      - AUTHENTICATE_WITH_SERVICE
      - DOWNLOAD_REPLICATION_SOFTWARE
      - CREATE_STAGING_DISKS
      - ATTACH_STAGING_DISKS
      - PAIR_REPLICATION_SERVER_WITH_AGENT
      - CONNECT_AGENT_TO_REPLICATION_SERVER
      - START_DATA_TRANSFER
    DataReplicationInitiationStepStatus:
      type: string
      enum:
      - NOT_STARTED
      - IN_PROGRESS
      - SUCCEEDED
      - FAILED
      - SKIPPED
    DataReplicationInitiationSteps:
      type: array
      items:
        $ref: '#/components/schemas/DataReplicationInitiationStep'
    DataReplicationState:
      type: string
      enum:
      - STOPPED
      - INITIATING
      - INITIAL_SYNC
      - BACKLOG
      - CREATING_SNAPSHOT
      - CONTINUOUS
      - PAUSED
      - RESCAN
      - STALLED
      - DISCONNECTED
    DeleteJobRequest:
      type: object
      properties:
        jobID:
          allOf:
          - $ref: '#/components/schemas/JobID'
          description: The ID of the Job to be deleted.
      required:
      - jobID
    DeleteJobResponse:
      type: object
      properties: {}
    DeleteLaunchActionRequest:
      type: object
      properties:
        resourceId:
          $ref: '#/components/schemas/LaunchActionResourceId'
        actionId:
          $ref: '#/components/schemas/LaunchActionId'
      required:
      - resourceId
      - actionId
    DeleteLaunchActionResponse:
      type: object
      properties: {}
    DeleteLaunchConfigurationTemplateRequest:
      type: object
      properties:
        launchConfigurationTemplateID:
          allOf:
          - $ref: '#/components/schemas/LaunchConfigurationTemplateID'
          description: The ID of the Launch Configuration Template to be deleted.
      required:
      - launchConfigurationTemplateID
    DeleteLaunchConfigurationTemplateResponse:
      type: object
      properties: {}
    DeleteRecoveryInstanceRequest:
      type: object
      properties:
        recoveryInstanceID:
          allOf:
          - $ref: '#/components/schemas/RecoveryInstanceID'
          description: The ID of the Recovery Instance to be deleted.
      required:
      - recoveryInstanceID
    DeleteReplicationConfigurationTemplateRequest:
      type: object
      properties:
        replicationConfigurationTemplateID:
          allOf:
          - $ref: '#/components/schemas/ReplicationConfigurationTemplateID'
          description: The ID of the Replication Configuration Template to be deleted.
      required:
      - replicationConfigurationTemplateID
    DeleteReplicationConfigurationTemplateResponse:
      type: object
      properties: {}
    DeleteSourceNetworkRequest:
      type: object
      properties:
        sourceNetworkID:
          allOf:
          - $ref: '#/components/schemas/SourceNetworkID'
          description: ID of the Source Network to delete.
      required:
      - sourceNetworkID
    DeleteSourceNetworkResponse:
      type: object
      properties: {}
    DeleteSourceServerRequest:
      type: object
      properties:
        sourceServerID:
          allOf:
          - $ref: '#/components/schemas/SourceServerID'
          description: The ID of the Source Server to be deleted.
      required:
      - sourceServerID
    DeleteSourceServerResponse:
      type: object
      properties: {}
    DescribeJobLogItemsRequest:
      type: object
      properties:
        jobID:
          allOf:
          - $ref: '#/components/schemas/JobID'
          description: The ID of the Job for which Job log items will be retrieved.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/StrictlyPositiveInteger'
          description: Maximum number of Job log items to retrieve.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: The token of the next Job log items to retrieve.
      required:
      - jobID
    DescribeJobLogItemsResponse:
      type: object
      properties:
        items:
          allOf:
          - $ref: '#/components/schemas/JobLogs'
          description: An array of Job log items.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: The token of the next Job log items to retrieve.
    DescribeJobsRequest:
      type: object
      properties:
        filters:
          allOf:
          - $ref: '#/components/schemas/DescribeJobsRequestFilters'
          description: A set of filters by which to return Jobs.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/StrictlyPositiveInteger'
          description: Maximum number of Jobs to retrieve.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: The token of the next Job to retrieve.
    DescribeJobsRequestFilters:
      type: object
      properties:
        jobIDs:
          allOf:
          - $ref: '#/components/schemas/DescribeJobsRequestFiltersJobIDs'
          description: An array of Job IDs that should be returned. An empty array
            means all jobs.
        fromDate:
          allOf:
          - $ref: '#/components/schemas/ISO8601DatetimeString'
          description: The start date in a date range query.
        toDate:
          allOf:
          - $ref: '#/components/schemas/ISO8601DatetimeString'
          description: The end date in a date range query.
      description: A set of filters by which to return Jobs.
    DescribeJobsRequestFiltersJobIDs:
      type: array
      items:
        $ref: '#/components/schemas/JobID'
    DescribeJobsResponse:
      type: object
      properties:
        items:
          allOf:
          - $ref: '#/components/schemas/JobsList'
          description: An array of Jobs.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: The token of the next Job to retrieve.
    DescribeLaunchConfigurationTemplatesRequest:
      type: object
      properties:
        launchConfigurationTemplateIDs:
          allOf:
          - $ref: '#/components/schemas/LaunchConfigurationTemplateIDs'
          description: Request to filter Launch Configuration Templates list by Launch
            Configuration Template ID.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResultsType'
          description: Maximum results to be returned in DescribeLaunchConfigurationTemplates.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: The token of the next Launch Configuration Template to retrieve.
    DescribeLaunchConfigurationTemplatesResponse:
      type: object
      properties:
        items:
          allOf:
          - $ref: '#/components/schemas/LaunchConfigurationTemplates'
          description: List of items returned by DescribeLaunchConfigurationTemplates.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: The token of the next Launch Configuration Template to retrieve.
    DescribeRecoveryInstancesItems:
      type: array
      items:
        $ref: '#/components/schemas/RecoveryInstance'
    DescribeRecoveryInstancesRequest:
      type: object
      properties:
        filters:
          allOf:
          - $ref: '#/components/schemas/DescribeRecoveryInstancesRequestFilters'
          description: A set of filters by which to return Recovery Instances.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/StrictlyPositiveInteger'
          description: Maximum number of Recovery Instances to retrieve.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: The token of the next Recovery Instance to retrieve.
    DescribeRecoveryInstancesRequestFilters:
      type: object
      properties:
        recoveryInstanceIDs:
          allOf:
          - $ref: '#/components/schemas/RecoveryInstanceIDs'
          description: An array of Recovery Instance IDs that should be returned.
            An empty array means all Recovery Instances.
        sourceServerIDs:
          allOf:
          - $ref: '#/components/schemas/SourceServerIDs'
          description: An array of Source Server IDs for which associated Recovery
            Instances should be returned.
      description: A set of filters by which to return Recovery Instances.
    DescribeRecoveryInstancesResponse:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: The token of the next Recovery Instance to retrieve.
        items:
          allOf:
          - $ref: '#/components/schemas/DescribeRecoveryInstancesItems'
          description: An array of Recovery Instances.
    DescribeRecoverySnapshotsRequest:
      type: object
      properties:
        sourceServerID:
          allOf:
          - $ref: '#/components/schemas/SourceServerID'
          description: Filter Recovery Snapshots by Source Server ID.
        filters:
          allOf:
          - $ref: '#/components/schemas/DescribeRecoverySnapshotsRequestFilters'
          description: A set of filters by which to return Recovery Snapshots.
        order:
          allOf:
          - $ref: '#/components/schemas/RecoverySnapshotsOrder'
          description: The sorted ordering by which to return Recovery Snapshots.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/StrictlyPositiveInteger'
          description: Maximum number of Recovery Snapshots to retrieve.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: The token of the next Recovery Snapshot to retrieve.
      required:
      - sourceServerID
    DescribeRecoverySnapshotsRequestFilters:
      type: object
      properties:
        fromDateTime:
          allOf:
          - $ref: '#/components/schemas/ISO8601DatetimeString'
          description: The start date in a date range query.
        toDateTime:
          allOf:
          - $ref: '#/components/schemas/ISO8601DatetimeString'
          description: The end date in a date range query.
      description: A set of filters by which to return Recovery Snapshots.
    DescribeRecoverySnapshotsResponse:
      type: object
      properties:
        items:
          allOf:
          - $ref: '#/components/schemas/RecoverySnapshotsList'
          description: An array of Recovery Snapshots.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: The token of the next Recovery Snapshot to retrieve.
    DescribeReplicationConfigurationTemplatesRequest:
      type: object
      properties:
        replicationConfigurationTemplateIDs:
          allOf:
          - $ref: '#/components/schemas/ReplicationConfigurationTemplateIDs'
          description: The IDs of the Replication Configuration Templates to retrieve.
            An empty list means all Replication Configuration Templates.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/StrictlyPositiveInteger'
          description: Maximum number of Replication Configuration Templates to retrieve.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: The token of the next Replication Configuration Template to
            retrieve.
    DescribeReplicationConfigurationTemplatesResponse:
      type: object
      properties:
        items:
          allOf:
          - $ref: '#/components/schemas/ReplicationConfigurationTemplates'
          description: An array of Replication Configuration Templates.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: The token of the next Replication Configuration Template to
            retrieve.
    DescribeSourceNetworksRequest:
      type: object
      properties:
        filters:
          allOf:
          - $ref: '#/components/schemas/DescribeSourceNetworksRequestFilters'
          description: A set of filters by which to return Source Networks.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/StrictlyPositiveInteger'
          description: Maximum number of Source Networks to retrieve.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: The token of the next Source Networks to retrieve.
    DescribeSourceNetworksRequestFilters:
      type: object
      properties:
        sourceNetworkIDs:
          allOf:
          - $ref: '#/components/schemas/DescribeSourceNetworksRequestFiltersIDs'
          description: An array of Source Network IDs that should be returned. An
            empty array means all Source Networks.
        originAccountID:
          allOf:
          - $ref: '#/components/schemas/AccountID'
          description: Filter Source Networks by account ID containing the protected
            VPCs.
        originRegion:
          allOf:
          - $ref: '#/components/schemas/AwsRegion'
          description: Filter Source Networks by the region containing the protected
            VPCs.
      description: A set of filters by which to return Source Networks.
    DescribeSourceNetworksRequestFiltersIDs:
      type: array
      items:
        $ref: '#/components/schemas/SourceNetworkID'
    DescribeSourceNetworksResponse:
      type: object
      properties:
        items:
          allOf:
          - $ref: '#/components/schemas/SourceNetworksList'
          description: An array of Source Networks.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: The token of the next Source Networks to retrieve.
    DescribeSourceServersRequest:
      type: object
      properties:
        filters:
          allOf:
          - $ref: '#/components/schemas/DescribeSourceServersRequestFilters'
          description: A set of filters by which to return Source Servers.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/StrictlyPositiveInteger'
          description: Maximum number of Source Servers to retrieve.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: The token of the next Source Server to retrieve.
    DescribeSourceServersRequestFilters:
      type: object
      properties:
        sourceServerIDs:
          allOf:
          - $ref: '#/components/schemas/DescribeSourceServersRequestFiltersIDs'
          description: An array of Source Servers IDs that should be returned. An
            empty array means all Source Servers.
        hardwareId:
          allOf:
          - $ref: '#/components/schemas/BoundedString'
          description: An ID that describes the hardware of the Source Server. This
            is either an EC2 instance id, a VMware uuid or a mac address.
        stagingAccountIDs:
          allOf:
          - $ref: '#/components/schemas/AccountIDs'
          description: An array of staging account IDs that extended source servers
            belong to. An empty array means all source servers will be shown.
      description: A set of filters by which to return Source Servers.
    DescribeSourceServersRequestFiltersIDs:
      type: array
      items:
        $ref: '#/components/schemas/SourceServerID'
    DescribeSourceServersResponse:
      type: object
      properties:
        items:
          allOf:
          - $ref: '#/components/schemas/SourceServersList'
          description: An array of Source Servers.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: The token of the next Source Server to retrieve.
    DisconnectRecoveryInstanceRequest:
      type: object
      properties:
        recoveryInstanceID:
          allOf:
          - $ref: '#/components/schemas/RecoveryInstanceID'
          description: The ID of the Recovery Instance to disconnect.
      required:
      - recoveryInstanceID
    DisconnectSourceServerRequest:
      type: object
      properties:
        sourceServerID:
          allOf:
          - $ref: '#/components/schemas/SourceServerID'
          description: The ID of the Source Server to disconnect.
      required:
      - sourceServerID
    Disk:
      type: object
      properties:
        deviceName:
          allOf:
          - $ref: '#/components/schemas/BoundedString'
          description: The disk or device name.
        bytes:
          allOf:
          - $ref: '#/components/schemas/PositiveInteger'
          description: The amount of storage on the disk in bytes.
      description: An object representing a data storage device on a server.
    Disks:
      type: array
      items:
        $ref: '#/components/schemas/Disk'
    EC2InstanceID:
      type: string
      pattern: ^i-[0-9a-fA-F]{8,}$
      minLength: 0
      maxLength: 255
    EC2InstanceState:
      type: string
      enum:
      - PENDING
      - RUNNING
      - STOPPING
      - STOPPED
      - SHUTTING-DOWN
      - TERMINATED
      - NOT_FOUND
    EC2InstanceType:
      type: string
      minLength: 0
      maxLength: 255
    EbsSnapshot:
      type: string
      pattern: ^snap-[0-9a-zA-Z]{17}$
    EbsSnapshotsList:
      type: array
      items:
        $ref: '#/components/schemas/EbsSnapshot'
    EbsVolumeID:
      type: string
      pattern: ^vol-([0-9a-fA-F]{8}|[0-9a-fA-F]{17})$
      minLength: 10
      maxLength: 19
    EventResourceData:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/SourceNetworkData'
        description: |-
          Source Network properties.
      description: |-
        Properties of resource related to a job event.
    ExportSourceNetworkCfnTemplateRequest:
      type: object
      properties:
        sourceNetworkID:
          allOf:
          - $ref: '#/components/schemas/SourceNetworkID'
          description: The Source Network ID to export its CloudFormation template
            to an S3 bucket.
      required:
      - sourceNetworkID
    ExportSourceNetworkCfnTemplateResponse:
      type: object
      properties:
        s3DestinationUrl:
          allOf:
          - $ref: '#/components/schemas/LargeBoundedString'
          description: S3 bucket URL where the Source Network CloudFormation template
            was exported to.
    ExtensionStatus:
      type: string
      enum:
      - EXTENDED
      - EXTENSION_ERROR
      - NOT_EXTENDED
    FailbackLaunchType:
      type: string
      enum:
      - RECOVERY
      - DRILL
    FailbackReplicationError:
      type: string
      enum:
      - AGENT_NOT_SEEN
      - FAILBACK_CLIENT_NOT_SEEN
      - NOT_CONVERGING
      - UNSTABLE_NETWORK
      - FAILED_TO_ESTABLISH_RECOVERY_INSTANCE_COMMUNICATION
      - FAILED_TO_DOWNLOAD_REPLICATION_SOFTWARE_TO_FAILBACK_CLIENT
      - FAILED_TO_CONFIGURE_REPLICATION_SOFTWARE
      - FAILED_TO_PAIR_AGENT_WITH_REPLICATION_SOFTWARE
      - FAILED_TO_ESTABLISH_AGENT_REPLICATOR_SOFTWARE_COMMUNICATION
      - FAILED_GETTING_REPLICATION_STATE
      - SNAPSHOTS_FAILURE
      - FAILED_TO_CREATE_SECURITY_GROUP
      - FAILED_TO_LAUNCH_REPLICATION_SERVER
      - FAILED_TO_BOOT_REPLICATION_SERVER
      - FAILED_TO_AUTHENTICATE_WITH_SERVICE
      - FAILED_TO_DOWNLOAD_REPLICATION_SOFTWARE
      - FAILED_TO_CREATE_STAGING_DISKS
      - FAILED_TO_ATTACH_STAGING_DISKS
      - FAILED_TO_PAIR_REPLICATION_SERVER_WITH_AGENT
      - FAILED_TO_CONNECT_AGENT_TO_REPLICATION_SERVER
      - FAILED_TO_START_DATA_TRANSFER
    FailbackState:
      type: string
      enum:
      - FAILBACK_NOT_STARTED
      - FAILBACK_IN_PROGRESS
      - FAILBACK_READY_FOR_LAUNCH
      - FAILBACK_COMPLETED
      - FAILBACK_ERROR
      - FAILBACK_NOT_READY_FOR_LAUNCH
      - FAILBACK_LAUNCH_STATE_NOT_AVAILABLE
    FailureReason:
      type: string
      pattern: ^[0-9a-zA-Z ():/.,'-_#*;]*$
      minLength: 0
      maxLength: 256
    GetFailbackReplicationConfigurationRequest:
      type: object
      properties:
        recoveryInstanceID:
          allOf:
          - $ref: '#/components/schemas/RecoveryInstanceID'
          description: The ID of the Recovery Instance whose failback replication
            configuration should be returned.
      required:
      - recoveryInstanceID
    GetFailbackReplicationConfigurationResponse:
      type: object
      properties:
        recoveryInstanceID:
          allOf:
          - $ref: '#/components/schemas/RecoveryInstanceID'
          description: The ID of the Recovery Instance.
        name:
          allOf:
          - $ref: '#/components/schemas/BoundedString'
          description: The name of the Failback Replication Configuration.
        bandwidthThrottling:
          allOf:
          - $ref: '#/components/schemas/PositiveInteger'
          description: Configure bandwidth throttling for the outbound data transfer
            rate of the Recovery Instance in Mbps.
        usePrivateIP:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether to use Private IP for the failback replication of the
            Recovery Instance.
      required:
      - recoveryInstanceID
    GetLaunchConfigurationRequest:
      type: object
      properties:
        sourceServerID:
          allOf:
          - $ref: '#/components/schemas/SourceServerID'
          description: The ID of the Source Server that we want to retrieve a Launch
            Configuration for.
      required:
      - sourceServerID
    GetReplicationConfigurationRequest:
      type: object
      properties:
        sourceServerID:
          allOf:
          - $ref: '#/components/schemas/SourceServerID'
          description: The ID of the Source Serve for this Replication Configuration.r
      required:
      - sourceServerID
    IPsList:
      type: array
      items:
        $ref: '#/components/schemas/BoundedString'
    ISO8601DatetimeString:
      type: string
      pattern: ^[1-9][0-9]*-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])T([0-1][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\.[0-9]+)?Z$
      minLength: 19
      maxLength: 32
    ISO8601DurationString:
      type: string
      minLength: 1
      maxLength: 64
    IdentificationHints:
      type: object
      properties:
        fqdn:
          allOf:
          - $ref: '#/components/schemas/BoundedString'
          description: Fully Qualified Domain Name identification hint.
        hostname:
          allOf:
          - $ref: '#/components/schemas/BoundedString'
          description: Hostname identification hint.
        vmWareUuid:
          allOf:
          - $ref: '#/components/schemas/BoundedString'
          description: vCenter VM path identification hint.
        awsInstanceID:
          allOf:
          - $ref: '#/components/schemas/EC2InstanceID'
          description: AWS Instance ID identification hint.
      description: Hints used to uniquely identify a machine.
    InitializeServiceRequest:
      type: object
      properties: {}
    InitializeServiceResponse:
      type: object
      properties: {}
    InitiatedBy:
      type: string
      enum:
      - START_RECOVERY
      - START_DRILL
      - FAILBACK
      - DIAGNOSTIC
      - TERMINATE_RECOVERY_INSTANCES
      - TARGET_ACCOUNT
      - CREATE_NETWORK_RECOVERY
      - UPDATE_NETWORK_RECOVERY
      - ASSOCIATE_NETWORK_RECOVERY
    InternalServerException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/LargeBoundedString'
        retryAfterSeconds:
          allOf:
          - $ref: '#/components/schemas/PositiveInteger'
          description: The number of seconds after which the request should be safe
            to retry.
      required:
      - message
      description: The request processing has failed because of an unknown error,
        exception or failure.
    Job:
      type: object
      properties:
        jobID:
          allOf:
          - $ref: '#/components/schemas/JobID'
          description: The ID of the Job.
        arn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of a Job.
        type:
          allOf:
          - $ref: '#/components/schemas/JobType'
          description: The type of the Job.
        initiatedBy:
          allOf:
          - $ref: '#/components/schemas/InitiatedBy'
          description: A string representing who initiated the Job.
        creationDateTime:
          allOf:
          - $ref: '#/components/schemas/ISO8601DatetimeString'
          description: The date and time of when the Job was created.
        endDateTime:
          allOf:
          - $ref: '#/components/schemas/ISO8601DatetimeString'
          description: The date and time of when the Job ended.
        status:
          allOf:
          - $ref: '#/components/schemas/JobStatus'
          description: The status of the Job.
        participatingServers:
          allOf:
          - $ref: '#/components/schemas/ParticipatingServers'
          description: A list of servers that the Job is acting upon.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagsMap'
          description: A list of tags associated with the Job.
        participatingResources:
          allOf:
          - $ref: '#/components/schemas/ParticipatingResources'
          description: A list of resources that the Job is acting upon.
      required:
      - jobID
      description: A job is an asynchronous workflow.
    JobID:
      type: string
      pattern: ^drsjob-[0-9a-zA-Z]{17}$
      minLength: 24
      maxLength: 24
    JobLog:
      type: object
      properties:
        logDateTime:
          allOf:
          - $ref: '#/components/schemas/ISO8601DatetimeString'
          description: The date and time the log was taken.
        event:
          allOf:
          - $ref: '#/components/schemas/JobLogEvent'
          description: The event represents the type of a log.
        eventData:
          allOf:
          - $ref: '#/components/schemas/JobLogEventData'
          description: Metadata associated with a Job log.
      description: A log outputted by a Job.
    JobLogEvent:
      type: string
      enum:
      - JOB_START
      - SERVER_SKIPPED
      - CLEANUP_START
      - CLEANUP_END
      - CLEANUP_FAIL
      - SNAPSHOT_START
      - SNAPSHOT_END
      - SNAPSHOT_FAIL
      - USING_PREVIOUS_SNAPSHOT
      - USING_PREVIOUS_SNAPSHOT_FAILED
      - CONVERSION_START
      - CONVERSION_END
      - CONVERSION_FAIL
      - LAUNCH_START
      - LAUNCH_FAILED
      - JOB_CANCEL
      - JOB_END
      - DEPLOY_NETWORK_CONFIGURATION_START
      - DEPLOY_NETWORK_CONFIGURATION_END
      - DEPLOY_NETWORK_CONFIGURATION_FAILED
      - UPDATE_NETWORK_CONFIGURATION_START
      - UPDATE_NETWORK_CONFIGURATION_END
      - UPDATE_NETWORK_CONFIGURATION_FAILED
      - UPDATE_LAUNCH_TEMPLATE_START
      - UPDATE_LAUNCH_TEMPLATE_END
      - UPDATE_LAUNCH_TEMPLATE_FAILED
      - NETWORK_RECOVERY_FAIL
    JobLogEventData:
      type: object
      properties:
        sourceServerID:
          allOf:
          - $ref: '#/components/schemas/SourceServerID'
          description: The ID of a Source Server.
        conversionServerID:
          allOf:
          - $ref: '#/components/schemas/EC2InstanceID'
          description: The ID of a conversion server.
        targetInstanceID:
          allOf:
          - $ref: '#/components/schemas/EC2InstanceID'
          description: The ID of a Recovery Instance.
        rawError:
          allOf:
          - $ref: '#/components/schemas/LargeBoundedString'
          description: A string representing a job error.
        conversionProperties:
          allOf:
          - $ref: '#/components/schemas/ConversionProperties'
          description: Properties of a conversion job
        eventResourceData:
          allOf:
          - $ref: '#/components/schemas/EventResourceData'
          description: Properties of resource related to a job event.
      description: Metadata associated with a Job log.
    JobLogs:
      type: array
      items:
        $ref: '#/components/schemas/JobLog'
    JobStatus:
      type: string
      enum:
      - PENDING
      - STARTED
      - COMPLETED
    JobType:
      type: string
      enum:
      - LAUNCH
      - TERMINATE
      - CREATE_CONVERTED_SNAPSHOT
    JobsList:
      type: array
      items:
        $ref: '#/components/schemas/Job'
    LargeBoundedString:
      type: string
      minLength: 0
      maxLength: 65536
    LastLaunchResult:
      type: string
      enum:
      - NOT_STARTED
      - PENDING
      - SUCCEEDED
      - FAILED
    LastLaunchType:
      type: string
      enum:
      - RECOVERY
      - DRILL
    LaunchAction:
      type: object
      properties:
        actionId:
          $ref: '#/components/schemas/LaunchActionId'
        actionCode:
          allOf:
          - $ref: '#/components/schemas/SsmDocumentName'
          description: Launch action code.
        type:
          allOf:
          - $ref: '#/components/schemas/LaunchActionType'
          description: Launch action type.
        name:
          $ref: '#/components/schemas/LaunchActionName'
        active:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether the launch action is active.
        order:
          $ref: '#/components/schemas/LaunchActionOrder'
        actionVersion:
          $ref: '#/components/schemas/LaunchActionVersion'
        optional:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether the launch will not be marked as failed if this action
            fails.
        parameters:
          $ref: '#/components/schemas/LaunchActionParameters'
        description:
          $ref: '#/components/schemas/LaunchActionDescription'
        category:
          $ref: '#/components/schemas/LaunchActionCategory'
      description: Launch action.
    LaunchActionCategory:
      type: string
      enum:
      - MONITORING
      - VALIDATION
      - CONFIGURATION
      - SECURITY
      - OTHER
    LaunchActionDescription:
      type: string
      pattern: '^[0-9a-zA-Z ():/.,''-_#*;

        ]*$'
      minLength: 0
      maxLength: 1024
    LaunchActionId:
      type: string
      pattern: ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$
      minLength: 1
      maxLength: 64
    LaunchActionIds:
      type: array
      items:
        $ref: '#/components/schemas/LaunchActionId'
    LaunchActionName:
      type: string
      pattern: ^[A-Za-z0-9][A-Za-z0-9 /_-]*$
      minLength: 1
      maxLength: 256
    LaunchActionOrder:
      type: integer
      minimum: 2
      maximum: 10000
      description: <p>Launch action order.</p>
    LaunchActionParameter:
      type: object
      properties:
        value:
          allOf:
          - $ref: '#/components/schemas/LaunchActionParameterValue'
          description: Value.
        type:
          allOf:
          - $ref: '#/components/schemas/LaunchActionParameterType'
          description: Type.
      description: Launch action parameter.
    LaunchActionParameterName:
      type: string
      pattern: ^([A-Za-z0-9])+$
      minLength: 1
      maxLength: 1011
    LaunchActionParameterType:
      type: string
      enum:
      - SSM_STORE
      - DYNAMIC
    LaunchActionParameterValue:
      type: string
      pattern: ^[A-Za-z0-9.-]+$
      minLength: 1
      maxLength: 1011
    LaunchActionParameters:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/LaunchActionParameter'
      description: <p>Launch action parameters.</p>
    LaunchActionResourceId:
      type: string
      pattern: ^(s-[0-9a-zA-Z]{17}$|lct-[0-9a-zA-Z]{17})$
    LaunchActionRun:
      type: object
      properties:
        action:
          allOf:
          - $ref: '#/components/schemas/LaunchAction'
          description: Action.
        runId:
          allOf:
          - $ref: '#/components/schemas/LaunchActionRunId'
          description: Run Id.
        status:
          allOf:
          - $ref: '#/components/schemas/LaunchActionRunStatus'
          description: Run status.
        failureReason:
          allOf:
          - $ref: '#/components/schemas/FailureReason'
          description: Failure reason.
      description: Launch action run.
    LaunchActionRunId:
      type: string
      pattern: ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$
      minLength: 1
      maxLength: 64
    LaunchActionRunStatus:
      type: string
      enum:
      - IN_PROGRESS
      - SUCCEEDED
      - FAILED
    LaunchActionRuns:
      type: array
      items:
        $ref: '#/components/schemas/LaunchActionRun'
    LaunchActionType:
      type: string
      enum:
      - SSM_AUTOMATION
      - SSM_COMMAND
    LaunchActionVersion:
      type: string
      pattern: ^(\$DEFAULT|\$LATEST|[0-9]+)$
      minLength: 1
      maxLength: 10
    LaunchActions:
      type: array
      items:
        $ref: '#/components/schemas/LaunchAction'
    LaunchActionsRequestFilters:
      type: object
      properties:
        actionIds:
          allOf:
          - $ref: '#/components/schemas/LaunchActionIds'
          description: Launch actions Ids.
      description: Resource launch actions filter.
    LaunchActionsStatus:
      type: object
      properties:
        ssmAgentDiscoveryDatetime:
          allOf:
          - $ref: '#/components/schemas/ISO8601DatetimeString'
          description: Time where the AWS Systems Manager was detected as running
            on the launched instance.
        runs:
          allOf:
          - $ref: '#/components/schemas/LaunchActionRuns'
          description: List of post launch action status.
      description: Launch actions status.
    LaunchConfiguration:
      type: object
      properties:
        sourceServerID:
          allOf:
          - $ref: '#/components/schemas/SourceServerID'
          description: The ID of the Source Server for this launch configuration.
        name:
          allOf:
          - $ref: '#/components/schemas/SmallBoundedString'
          description: The name of the launch configuration.
        ec2LaunchTemplateID:
          allOf:
          - $ref: '#/components/schemas/BoundedString'
          description: The EC2 launch template ID of this launch configuration.
        launchDisposition:
          allOf:
          - $ref: '#/components/schemas/LaunchDisposition'
          description: The state of the Recovery Instance in EC2 after the recovery
            operation.
        targetInstanceTypeRightSizingMethod:
          allOf:
          - $ref: '#/components/schemas/TargetInstanceTypeRightSizingMethod'
          description: Whether Elastic Disaster Recovery should try to automatically
            choose the instance type that best matches the OS, CPU, and RAM of your
            Source Server.
        copyPrivateIp:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether we should copy the Private IP of the Source Server
            to the Recovery Instance.
        copyTags:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether we want to copy the tags of the Source Server to the
            EC2 machine of the Recovery Instance.
        licensing:
          allOf:
          - $ref: '#/components/schemas/Licensing'
          description: The licensing configuration to be used for this launch configuration.
        postLaunchEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether we want to activate post-launch actions for the Source
            Server.
        launchIntoInstanceProperties:
          allOf:
          - $ref: '#/components/schemas/LaunchIntoInstanceProperties'
          description: Launch into existing instance properties.
    LaunchConfigurationTemplate:
      type: object
      properties:
        launchConfigurationTemplateID:
          allOf:
          - $ref: '#/components/schemas/LaunchConfigurationTemplateID'
          description: ID of the Launch Configuration Template.
        arn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: ARN of the Launch Configuration Template.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagsMap'
          description: Tags of the Launch Configuration Template.
        launchDisposition:
          allOf:
          - $ref: '#/components/schemas/LaunchDisposition'
          description: Launch disposition.
        targetInstanceTypeRightSizingMethod:
          allOf:
          - $ref: '#/components/schemas/TargetInstanceTypeRightSizingMethod'
          description: Target instance type right-sizing method.
        copyPrivateIp:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Copy private IP.
        copyTags:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Copy tags.
        licensing:
          allOf:
          - $ref: '#/components/schemas/Licensing'
          description: Licensing.
        exportBucketArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: S3 bucket ARN to export Source Network templates.
        postLaunchEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Post-launch actions activated.
        launchIntoSourceInstance:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: DRS will set the 'launch into instance ID' of any source server
            when performing a drill, recovery or failback to the previous region or
            availability zone, using the instance ID of the source instance.
      description: Account level Launch Configuration Template.
    LaunchConfigurationTemplateID:
      type: string
      pattern: ^lct-[0-9a-zA-Z]{17}$
      minLength: 21
      maxLength: 21
    LaunchConfigurationTemplateIDs:
      type: array
      items:
        $ref: '#/components/schemas/LaunchConfigurationTemplateID'
    LaunchConfigurationTemplates:
      type: array
      items:
        $ref: '#/components/schemas/LaunchConfigurationTemplate'
    LaunchDisposition:
      type: string
      enum:
      - STOPPED
      - STARTED
    LaunchIntoInstanceProperties:
      type: object
      properties:
        launchIntoEC2InstanceID:
          allOf:
          - $ref: '#/components/schemas/EC2InstanceID'
          description: Optionally holds EC2 instance ID of an instance to launch into,
            instead of launching a new instance during drill, recovery or failback.
      description: Launch into existing instance.
    LaunchStatus:
      type: string
      enum:
      - PENDING
      - IN_PROGRESS
      - LAUNCHED
      - FAILED
      - TERMINATED
    Licensing:
      type: object
      properties:
        osByol:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether to enable "Bring your own license" or not.
      description: Configuration of a machine's license.
    LifeCycle:
      type: object
      properties:
        addedToServiceDateTime:
          allOf:
          - $ref: '#/components/schemas/ISO8601DatetimeString'
          description: The date and time of when the Source Server was added to the
            service.
        firstByteDateTime:
          allOf:
          - $ref: '#/components/schemas/ISO8601DatetimeString'
          description: The date and time of the first byte that was replicated from
            the Source Server.
        elapsedReplicationDuration:
          allOf:
          - $ref: '#/components/schemas/ISO8601DurationString'
          description: The amount of time that the Source Server has been replicating
            for.
        lastSeenByServiceDateTime:
          allOf:
          - $ref: '#/components/schemas/ISO8601DatetimeString'
          description: The date and time this Source Server was last seen by the service.
        lastLaunch:
          allOf:
          - $ref: '#/components/schemas/LifeCycleLastLaunch'
          description: An object containing information regarding the last launch
            of the Source Server.
      description: An object representing the Source Server Lifecycle.
    LifeCycleLastLaunch:
      type: object
      properties:
        initiated:
          allOf:
          - $ref: '#/components/schemas/LifeCycleLastLaunchInitiated'
          description: An object containing information regarding the initiation of
            the last launch of a Source Server.
        status:
          allOf:
          - $ref: '#/components/schemas/LaunchStatus'
          description: Status of Source Server's last launch.
      description: An object containing information regarding the last launch of a
        Source Server.
    LifeCycleLastLaunchInitiated:
      type: object
      properties:
        apiCallDateTime:
          allOf:
          - $ref: '#/components/schemas/ISO8601DatetimeString'
          description: The date and time the last Source Server launch was initiated.
        jobID:
          allOf:
          - $ref: '#/components/schemas/JobID'
          description: The ID of the Job that was used to last launch the Source Server.
        type:
          allOf:
          - $ref: '#/components/schemas/LastLaunchType'
          description: The Job type that was used to last launch the Source Server.
      description: An object containing information regarding the initiation of the
        last launch of a Source Server.
    ListExtensibleSourceServersRequest:
      type: object
      properties:
        stagingAccountID:
          allOf:
          - $ref: '#/components/schemas/AccountID'
          description: The Id of the staging Account to retrieve extensible source
            servers from.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResultsReplicatingSourceServers'
          description: The maximum number of extensible source servers to retrieve.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: The token of the next extensible source server to retrieve.
      required:
      - stagingAccountID
    ListExtensibleSourceServersResponse:
      type: object
      properties:
        items:
          allOf:
          - $ref: '#/components/schemas/StagingSourceServersList'
          description: A list of source servers on a staging Account that are extensible.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: The token of the next extensible source server to retrieve.
    ListLaunchActionsRequest:
      type: object
      properties:
        resourceId:
          $ref: '#/components/schemas/LaunchActionResourceId'
        filters:
          allOf:
          - $ref: '#/components/schemas/LaunchActionsRequestFilters'
          description: Filters to apply when listing resource launch actions.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResultsType'
          description: Maximum amount of items to return when listing resource launch
            actions.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: Next token to use when listing resource launch actions.
      required:
      - resourceId
    ListLaunchActionsResponse:
      type: object
      properties:
        items:
          allOf:
          - $ref: '#/components/schemas/LaunchActions'
          description: List of resource launch actions.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: Next token returned when listing resource launch actions.
    ListStagingAccountsRequest:
      type: object
      properties:
        maxResults:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The maximum number of staging Accounts to retrieve.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: The token of the next staging Account to retrieve.
    ListStagingAccountsResponse:
      type: object
      properties:
        accounts:
          allOf:
          - $ref: '#/components/schemas/Accounts'
          description: An array of staging AWS Accounts.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: The token of the next staging Account to retrieve.
    ListTagsForResourceRequest:
      type: object
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the resource whose tags should be returned.
      required:
      - resourceArn
    ListTagsForResourceResponse:
      type: object
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/TagsMap'
          description: The tags of the requested resource.
    MaxResultsReplicatingSourceServers:
      type: integer
      minimum: 1
      maximum: 300
    MaxResultsType:
      type: integer
      minimum: 1
      maximum: 1000
    NetworkInterface:
      type: object
      properties:
        macAddress:
          allOf:
          - $ref: '#/components/schemas/BoundedString'
          description: The MAC address of the network interface.
        ips:
          allOf:
          - $ref: '#/components/schemas/IPsList'
          description: Network interface IPs.
        isPrimary:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether this is the primary network interface.
      description: Network interface.
    NetworkInterfaces:
      type: array
      items:
        $ref: '#/components/schemas/NetworkInterface'
    OS:
      type: object
      properties:
        fullString:
          allOf:
          - $ref: '#/components/schemas/BoundedString'
          description: The long name of the Operating System.
      description: Operating System.
    OriginEnvironment:
      type: string
      enum:
      - ON_PREMISES
      - AWS
    OutpostARN:
      type: string
      pattern: ^arn:aws([a-z-]+)?:outposts:[a-z\d-]+:\d{12}:outpost/op-[a-f0-9]{17}$
      minLength: 20
      maxLength: 255
    PITPolicy:
      type: array
      items:
        $ref: '#/components/schemas/PITPolicyRule'
    PITPolicyRule:
      type: object
      properties:
        ruleID:
          allOf:
          - $ref: '#/components/schemas/PositiveInteger'
          description: The ID of the rule.
        units:
          allOf:
          - $ref: '#/components/schemas/PITPolicyRuleUnits'
          description: The units used to measure the interval and retentionDuration.
        interval:
          allOf:
          - $ref: '#/components/schemas/StrictlyPositiveInteger'
          description: How often, in the chosen units, a snapshot should be taken.
        retentionDuration:
          allOf:
          - $ref: '#/components/schemas/StrictlyPositiveInteger'
          description: The duration to retain a snapshot for, in the chosen units.
        enabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether this rule is enabled or not.
      required:
      - units
      - interval
      - retentionDuration
      description: A rule in the Point in Time (PIT) policy representing when to take
        snapshots and how long to retain them for.
    PITPolicyRuleUnits:
      type: string
      enum:
      - MINUTE
      - HOUR
      - DAY
    PaginationToken:
      type: string
      minLength: 0
      maxLength: 2048
    ParticipatingResource:
      type: object
      properties:
        participatingResourceID:
          allOf:
          - $ref: '#/components/schemas/ParticipatingResourceID'
          description: The ID of a participating resource.
        launchStatus:
          allOf:
          - $ref: '#/components/schemas/LaunchStatus'
          description: The launch status of a participating resource.
      description: Represents a resource participating in an asynchronous Job.
    ParticipatingResourceID:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/SourceNetworkID'
        description: |-
          Source Network ID.
      description: |-
        ID of a resource participating in an asynchronous Job.
    ParticipatingResources:
      type: array
      items:
        $ref: '#/components/schemas/ParticipatingResource'
    ParticipatingServer:
      type: object
      properties:
        sourceServerID:
          allOf:
          - $ref: '#/components/schemas/SourceServerID'
          description: The Source Server ID of a participating server.
        recoveryInstanceID:
          allOf:
          - $ref: '#/components/schemas/RecoveryInstanceID'
          description: The Recovery Instance ID of a participating server.
        launchStatus:
          allOf:
          - $ref: '#/components/schemas/LaunchStatus'
          description: The launch status of a participating server.
        launchActionsStatus:
          allOf:
          - $ref: '#/components/schemas/LaunchActionsStatus'
          description: The post-launch action runs of a participating server.
      description: Represents a server participating in an asynchronous Job.
    ParticipatingServers:
      type: array
      items:
        $ref: '#/components/schemas/ParticipatingServer'
    PositiveInteger:
      type: integer
      format: int64
      default: 0
      minimum: 0
    ProductCode:
      type: object
      properties:
        productCodeId:
          allOf:
          - $ref: '#/components/schemas/ProductCodeId'
          description: Id of a product code associated with a volume.
        productCodeMode:
          allOf:
          - $ref: '#/components/schemas/ProductCodeMode'
          description: Mode of a product code associated with a volume.
      description: Properties of a product code associated with a volume.
    ProductCodeId:
      type: string
      pattern: ^([A-Za-z0-9])+$
      minLength: 25
      maxLength: 25
    ProductCodeMode:
      type: string
      enum:
      - ENABLED
      - DISABLED
    ProductCodes:
      type: array
      items:
        $ref: '#/components/schemas/ProductCode'
    PutLaunchActionRequest:
      type: object
      properties:
        resourceId:
          $ref: '#/components/schemas/LaunchActionResourceId'
        actionCode:
          allOf:
          - $ref: '#/components/schemas/SsmDocumentName'
          description: Launch action code.
        order:
          $ref: '#/components/schemas/LaunchActionOrder'
        actionId:
          $ref: '#/components/schemas/LaunchActionId'
        optional:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether the launch will not be marked as failed if this action
            fails.
        active:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether the launch action is active.
        name:
          $ref: '#/components/schemas/LaunchActionName'
        actionVersion:
          $ref: '#/components/schemas/LaunchActionVersion'
        category:
          $ref: '#/components/schemas/LaunchActionCategory'
        parameters:
          $ref: '#/components/schemas/LaunchActionParameters'
        description:
          $ref: '#/components/schemas/LaunchActionDescription'
      required:
      - resourceId
      - actionCode
      - order
      - actionId
      - optional
      - active
      - name
      - actionVersion
      - category
      - description
    PutLaunchActionResponse:
      type: object
      properties:
        resourceId:
          $ref: '#/components/schemas/LaunchActionResourceId'
        actionId:
          $ref: '#/components/schemas/LaunchActionId'
        actionCode:
          allOf:
          - $ref: '#/components/schemas/SsmDocumentName'
          description: Launch action code.
        type:
          allOf:
          - $ref: '#/components/schemas/LaunchActionType'
          description: Launch action type.
        name:
          $ref: '#/components/schemas/LaunchActionName'
        active:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether the launch action is active.
        order:
          $ref: '#/components/schemas/LaunchActionOrder'
        actionVersion:
          $ref: '#/components/schemas/LaunchActionVersion'
        optional:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether the launch will not be marked as failed if this action
            fails.
        parameters:
          $ref: '#/components/schemas/LaunchActionParameters'
        description:
          $ref: '#/components/schemas/LaunchActionDescription'
        category:
          $ref: '#/components/schemas/LaunchActionCategory'
    RecoveryInstance:
      type: object
      properties:
        ec2InstanceID:
          allOf:
          - $ref: '#/components/schemas/EC2InstanceID'
          description: The EC2 instance ID of the Recovery Instance.
        ec2InstanceState:
          allOf:
          - $ref: '#/components/schemas/EC2InstanceState'
          description: The state of the EC2 instance for this Recovery Instance.
        jobID:
          allOf:
          - $ref: '#/components/schemas/JobID'
          description: The ID of the Job that created the Recovery Instance.
        recoveryInstanceID:
          allOf:
          - $ref: '#/components/schemas/RecoveryInstanceID'
          description: The ID of the Recovery Instance.
        sourceServerID:
          allOf:
          - $ref: '#/components/schemas/SourceServerID'
          description: The Source Server ID that this Recovery Instance is associated
            with.
        arn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the Recovery Instance.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagsMap'
          description: An array of tags that are associated with the Recovery Instance.
        failback:
          allOf:
          - $ref: '#/components/schemas/RecoveryInstanceFailback'
          description: An object representing failback related information of the
            Recovery Instance.
        dataReplicationInfo:
          allOf:
          - $ref: '#/components/schemas/RecoveryInstanceDataReplicationInfo'
          description: The Data Replication Info of the Recovery Instance.
        recoveryInstanceProperties:
          allOf:
          - $ref: '#/components/schemas/RecoveryInstanceProperties'
          description: Properties of the Recovery Instance machine.
        pointInTimeSnapshotDateTime:
          allOf:
          - $ref: '#/components/schemas/ISO8601DatetimeString'
          description: The date and time of the Point in Time (PIT) snapshot that
            this Recovery Instance was launched from.
        isDrill:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether this Recovery Instance was created for a drill or for
            an actual Recovery event.
        originEnvironment:
          allOf:
          - $ref: '#/components/schemas/OriginEnvironment'
          description: Environment (On Premises / AWS) of the instance that the recovery
            instance originated from.
        originAvailabilityZone:
          allOf:
          - $ref: '#/components/schemas/AwsAvailabilityZone'
          description: AWS availability zone associated with the recovery instance.
        agentVersion:
          allOf:
          - $ref: '#/components/schemas/AgentVersion'
          description: The version of the DRS agent installed on the recovery instance
        sourceOutpostArn:
          allOf:
          - $ref: '#/components/schemas/OutpostARN'
          description: The ARN of the source Outpost
      description: A Recovery Instance is a replica of a Source Server running on
        EC2.
    RecoveryInstanceDataReplicationError:
      type: object
      properties:
        error:
          allOf:
          - $ref: '#/components/schemas/FailbackReplicationError'
          description: Error in data replication.
        rawError:
          allOf:
          - $ref: '#/components/schemas/LargeBoundedString'
          description: Error in data replication.
      description: Error in data replication.
    RecoveryInstanceDataReplicationInfo:
      type: object
      properties:
        lagDuration:
          allOf:
          - $ref: '#/components/schemas/ISO8601DatetimeString'
          description: Data replication lag duration.
        etaDateTime:
          allOf:
          - $ref: '#/components/schemas/ISO8601DatetimeString'
          description: An estimate of when the data replication will be completed.
        replicatedDisks:
          allOf:
          - $ref: '#/components/schemas/RecoveryInstanceDataReplicationInfoReplicatedDisks'
          description: The disks that should be replicated.
        dataReplicationState:
          allOf:
          - $ref: '#/components/schemas/RecoveryInstanceDataReplicationState'
          description: The state of the data replication.
        dataReplicationInitiation:
          allOf:
          - $ref: '#/components/schemas/RecoveryInstanceDataReplicationInitiation'
          description: Information about whether the data replication has been initiated.
        dataReplicationError:
          allOf:
          - $ref: '#/components/schemas/RecoveryInstanceDataReplicationError'
          description: Information about Data Replication
        stagingAvailabilityZone:
          allOf:
          - $ref: '#/components/schemas/AwsAvailabilityZone'
          description: AWS Availability zone into which data is being replicated.
        stagingOutpostArn:
          allOf:
          - $ref: '#/components/schemas/OutpostARN'
          description: The ARN of the staging Outpost
      description: Information about Data Replication
    RecoveryInstanceDataReplicationInfoReplicatedDisk:
      type: object
      properties:
        deviceName:
          allOf:
          - $ref: '#/components/schemas/BoundedString'
          description: The name of the device.
        totalStorageBytes:
          allOf:
          - $ref: '#/components/schemas/PositiveInteger'
          description: The total amount of data to be replicated in bytes.
        replicatedStorageBytes:
          allOf:
          - $ref: '#/components/schemas/PositiveInteger'
          description: The amount of data replicated so far in bytes.
        rescannedStorageBytes:
          allOf:
          - $ref: '#/components/schemas/PositiveInteger'
          description: The amount of data to be rescanned in bytes.
        backloggedStorageBytes:
          allOf:
          - $ref: '#/components/schemas/PositiveInteger'
          description: The size of the replication backlog in bytes.
      description: A disk that should be replicated.
    RecoveryInstanceDataReplicationInfoReplicatedDisks:
      type: array
      items:
        $ref: '#/components/schemas/RecoveryInstanceDataReplicationInfoReplicatedDisk'
    RecoveryInstanceDataReplicationInitiation:
      type: object
      properties:
        startDateTime:
          allOf:
          - $ref: '#/components/schemas/ISO8601DatetimeString'
          description: The date and time of the current attempt to initiate data replication.
        steps:
          allOf:
          - $ref: '#/components/schemas/RecoveryInstanceDataReplicationInitiationSteps'
          description: The steps of the current attempt to initiate data replication.
      description: Data replication initiation.
    RecoveryInstanceDataReplicationInitiationStep:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/RecoveryInstanceDataReplicationInitiationStepName'
          description: The name of the step.
        status:
          allOf:
          - $ref: '#/components/schemas/RecoveryInstanceDataReplicationInitiationStepStatus'
          description: The status of the step.
      description: Data replication initiation step.
    RecoveryInstanceDataReplicationInitiationStepName:
      type: string
      enum:
      - LINK_FAILBACK_CLIENT_WITH_RECOVERY_INSTANCE
      - COMPLETE_VOLUME_MAPPING
      - ESTABLISH_RECOVERY_INSTANCE_COMMUNICATION
      - DOWNLOAD_REPLICATION_SOFTWARE_TO_FAILBACK_CLIENT
      - CONFIGURE_REPLICATION_SOFTWARE
      - PAIR_AGENT_WITH_REPLICATION_SOFTWARE
      - ESTABLISH_AGENT_REPLICATOR_SOFTWARE_COMMUNICATION
      - WAIT
      - CREATE_SECURITY_GROUP
      - LAUNCH_REPLICATION_SERVER
      - BOOT_REPLICATION_SERVER
      - AUTHENTICATE_WITH_SERVICE
      - DOWNLOAD_REPLICATION_SOFTWARE
      - CREATE_STAGING_DISKS
      - ATTACH_STAGING_DISKS
      - PAIR_REPLICATION_SERVER_WITH_AGENT
      - CONNECT_AGENT_TO_REPLICATION_SERVER
      - START_DATA_TRANSFER
    RecoveryInstanceDataReplicationInitiationStepStatus:
      type: string
      enum:
      - NOT_STARTED
      - IN_PROGRESS
      - SUCCEEDED
      - FAILED
      - SKIPPED
    RecoveryInstanceDataReplicationInitiationSteps:
      type: array
      items:
        $ref: '#/components/schemas/RecoveryInstanceDataReplicationInitiationStep'
    RecoveryInstanceDataReplicationState:
      type: string
      enum:
      - STOPPED
      - INITIATING
      - INITIAL_SYNC
      - BACKLOG
      - CREATING_SNAPSHOT
      - CONTINUOUS
      - PAUSED
      - RESCAN
      - STALLED
      - DISCONNECTED
      - REPLICATION_STATE_NOT_AVAILABLE
      - NOT_STARTED
    RecoveryInstanceDisk:
      type: object
      properties:
        internalDeviceName:
          allOf:
          - $ref: '#/components/schemas/BoundedString'
          description: The internal device name of this disk. This is the name that
            is visible on the machine itself and not from the EC2 console.
        bytes:
          allOf:
          - $ref: '#/components/schemas/PositiveInteger'
          description: The amount of storage on the disk in bytes.
        ebsVolumeID:
          allOf:
          - $ref: '#/components/schemas/EbsVolumeID'
          description: The EBS Volume ID of this disk.
      description: An object representing a block storage device on the Recovery Instance.
    RecoveryInstanceDisks:
      type: array
      items:
        $ref: '#/components/schemas/RecoveryInstanceDisk'
    RecoveryInstanceFailback:
      type: object
      properties:
        failbackClientID:
          allOf:
          - $ref: '#/components/schemas/BoundedString'
          description: The ID of the failback client that this Recovery Instance is
            associated with.
        failbackJobID:
          allOf:
          - $ref: '#/components/schemas/JobID'
          description: The Job ID of the last failback log for this Recovery Instance.
        failbackInitiationTime:
          allOf:
          - $ref: '#/components/schemas/ISO8601DatetimeString'
          description: The date and time that the failback initiation started.
        state:
          allOf:
          - $ref: '#/components/schemas/FailbackState'
          description: The state of the failback process that this Recovery Instance
            is in.
        agentLastSeenByServiceDateTime:
          allOf:
          - $ref: '#/components/schemas/ISO8601DatetimeString'
          description: The date and time the agent on the Recovery Instance was last
            seen by the service.
        failbackClientLastSeenByServiceDateTime:
          allOf:
          - $ref: '#/components/schemas/ISO8601DatetimeString'
          description: The date and time that the failback client was last seen by
            the service.
        failbackToOriginalServer:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether we are failing back to the original Source Server for
            this Recovery Instance.
        firstByteDateTime:
          allOf:
          - $ref: '#/components/schemas/ISO8601DatetimeString'
          description: The date and time of the first byte that was replicated from
            the Recovery Instance.
        elapsedReplicationDuration:
          allOf:
          - $ref: '#/components/schemas/ISO8601DatetimeString'
          description: The amount of time that the Recovery Instance has been replicating
            for.
        failbackLaunchType:
          allOf:
          - $ref: '#/components/schemas/FailbackLaunchType'
          description: The launch type (Recovery / Drill) of the last launch for the
            failback replication of this recovery instance.
      description: An object representing failback related information of the Recovery
        Instance.
    RecoveryInstanceID:
      type: string
      pattern: ^i-[0-9a-fA-F]{8,}$
      minLength: 10
      maxLength: 19
    RecoveryInstanceIDs:
      type: array
      items:
        $ref: '#/components/schemas/RecoveryInstanceID'
    RecoveryInstanceProperties:
      type: object
      properties:
        lastUpdatedDateTime:
          allOf:
          - $ref: '#/components/schemas/ISO8601DatetimeString'
          description: The date and time the Recovery Instance properties were last
            updated on.
        identificationHints:
          allOf:
          - $ref: '#/components/schemas/IdentificationHints'
          description: Hints used to uniquely identify a machine.
        networkInterfaces:
          allOf:
          - $ref: '#/components/schemas/NetworkInterfaces'
          description: An array of network interfaces.
        disks:
          allOf:
          - $ref: '#/components/schemas/RecoveryInstanceDisks'
          description: An array of disks.
        cpus:
          allOf:
          - $ref: '#/components/schemas/Cpus'
          description: An array of CPUs.
        ramBytes:
          allOf:
          - $ref: '#/components/schemas/PositiveInteger'
          description: The amount of RAM in bytes.
        os:
          allOf:
          - $ref: '#/components/schemas/OS'
          description: Operating system.
      description: Properties of the Recovery Instance machine.
    RecoveryInstancesForTerminationRequest:
      type: array
      items:
        $ref: '#/components/schemas/RecoveryInstanceID'
    RecoveryLifeCycle:
      type: object
      properties:
        apiCallDateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time the last Source Network recovery was initiated.
        jobID:
          allOf:
          - $ref: '#/components/schemas/JobID'
          description: The ID of the Job that was used to last recover the Source
            Network.
        lastRecoveryResult:
          allOf:
          - $ref: '#/components/schemas/RecoveryResult'
          description: The status of the last recovery status of this Source Network.
      description: An object representing the Source Network recovery Lifecycle.
    RecoveryResult:
      type: string
      enum:
      - NOT_STARTED
      - IN_PROGRESS
      - SUCCESS
      - FAIL
      - PARTIAL_SUCCESS
      - ASSOCIATE_SUCCESS
      - ASSOCIATE_FAIL
    RecoverySnapshot:
      type: object
      properties:
        snapshotID:
          allOf:
          - $ref: '#/components/schemas/RecoverySnapshotID'
          description: The ID of the Recovery Snapshot.
        sourceServerID:
          allOf:
          - $ref: '#/components/schemas/SourceServerID'
          description: The ID of the Source Server that the snapshot was taken for.
        expectedTimestamp:
          allOf:
          - $ref: '#/components/schemas/ISO8601DatetimeString'
          description: The timestamp of when we expect the snapshot to be taken.
        timestamp:
          allOf:
          - $ref: '#/components/schemas/ISO8601DatetimeString'
          description: The actual timestamp that the snapshot was taken.
        ebsSnapshots:
          allOf:
          - $ref: '#/components/schemas/EbsSnapshotsList'
          description: A list of EBS snapshots.
      required:
      - snapshotID
      - sourceServerID
      - expectedTimestamp
      description: A snapshot of a Source Server used during recovery.
    RecoverySnapshotID:
      type: string
      pattern: ^pit-[0-9a-zA-Z]{17}$
      minLength: 21
      maxLength: 21
    RecoverySnapshotsList:
      type: array
      items:
        $ref: '#/components/schemas/RecoverySnapshot'
    RecoverySnapshotsOrder:
      type: string
      enum:
      - ASC
      - DESC
    ReplicationConfiguration:
      type: object
      properties:
        sourceServerID:
          allOf:
          - $ref: '#/components/schemas/SourceServerID'
          description: The ID of the Source Server for this Replication Configuration.
        name:
          allOf:
          - $ref: '#/components/schemas/SmallBoundedString'
          description: The name of the Replication Configuration.
        stagingAreaSubnetId:
          allOf:
          - $ref: '#/components/schemas/SubnetID'
          description: The subnet to be used by the replication staging area.
        associateDefaultSecurityGroup:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether to associate the default Elastic Disaster Recovery
            Security group with the Replication Configuration.
        replicationServersSecurityGroupsIDs:
          allOf:
          - $ref: '#/components/schemas/ReplicationServersSecurityGroupsIDs'
          description: The security group IDs that will be used by the replication
            server.
        replicationServerInstanceType:
          allOf:
          - $ref: '#/components/schemas/EC2InstanceType'
          description: The instance type to be used for the replication server.
        useDedicatedReplicationServer:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether to use a dedicated Replication Server in the replication
            staging area.
        defaultLargeStagingDiskType:
          allOf:
          - $ref: '#/components/schemas/ReplicationConfigurationDefaultLargeStagingDiskType'
          description: The Staging Disk EBS volume type to be used during replication.
        replicatedDisks:
          allOf:
          - $ref: '#/components/schemas/ReplicationConfigurationReplicatedDisks'
          description: The configuration of the disks of the Source Server to be replicated.
        ebsEncryption:
          allOf:
          - $ref: '#/components/schemas/ReplicationConfigurationEbsEncryption'
          description: The type of EBS encryption to be used during replication.
        ebsEncryptionKeyArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the EBS encryption key to be used during replication.
        bandwidthThrottling:
          allOf:
          - $ref: '#/components/schemas/PositiveInteger'
          description: Configure bandwidth throttling for the outbound data transfer
            rate of the Source Server in Mbps.
        dataPlaneRouting:
          allOf:
          - $ref: '#/components/schemas/ReplicationConfigurationDataPlaneRouting'
          description: The data plane routing mechanism that will be used for replication.
        createPublicIP:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether to create a Public IP for the Recovery Instance by
            default.
        stagingAreaTags:
          allOf:
          - $ref: '#/components/schemas/TagsMap'
          description: 'A set of tags to be associated with all resources created
            in the replication staging area: EC2 replication server, EBS volumes,
            EBS snapshots, etc.'
        pitPolicy:
          allOf:
          - $ref: '#/components/schemas/PITPolicy'
          description: The Point in time (PIT) policy to manage snapshots taken during
            replication.
        autoReplicateNewDisks:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether to allow the AWS replication agent to automatically
            replicate newly added disks.
    ReplicationConfigurationDataPlaneRouting:
      type: string
      enum:
      - PRIVATE_IP
      - PUBLIC_IP
    ReplicationConfigurationDefaultLargeStagingDiskType:
      type: string
      enum:
      - GP2
      - GP3
      - ST1
      - AUTO
    ReplicationConfigurationEbsEncryption:
      type: string
      enum:
      - DEFAULT
      - CUSTOM
      - NONE
    ReplicationConfigurationReplicatedDisk:
      type: object
      properties:
        deviceName:
          allOf:
          - $ref: '#/components/schemas/BoundedString'
          description: The name of the device.
        isBootDisk:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether to boot from this disk or not.
        stagingDiskType:
          allOf:
          - $ref: '#/components/schemas/ReplicationConfigurationReplicatedDiskStagingDiskType'
          description: The Staging Disk EBS volume type to be used during replication.
        iops:
          allOf:
          - $ref: '#/components/schemas/PositiveInteger'
          description: The requested number of I/O operations per second (IOPS).
        throughput:
          allOf:
          - $ref: '#/components/schemas/PositiveInteger'
          description: The throughput to use for the EBS volume in MiB/s. This parameter
            is valid only for gp3 volumes.
        optimizedStagingDiskType:
          allOf:
          - $ref: '#/components/schemas/ReplicationConfigurationReplicatedDiskStagingDiskType'
          description: The Staging Disk EBS volume type to be used during replication
            when `stagingDiskType` is set to Auto. This is a read-only field.
      description: The configuration of a disk of the Source Server to be replicated.
    ReplicationConfigurationReplicatedDiskStagingDiskType:
      type: string
      enum:
      - AUTO
      - GP2
      - GP3
      - IO1
      - SC1
      - ST1
      - STANDARD
    ReplicationConfigurationReplicatedDisks:
      type: array
      items:
        $ref: '#/components/schemas/ReplicationConfigurationReplicatedDisk'
    ReplicationConfigurationTemplate:
      type: object
      properties:
        replicationConfigurationTemplateID:
          allOf:
          - $ref: '#/components/schemas/ReplicationConfigurationTemplateID'
          description: The Replication Configuration Template ID.
        arn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Replication Configuration Template ARN.
        stagingAreaSubnetId:
          allOf:
          - $ref: '#/components/schemas/SubnetID'
          description: The subnet to be used by the replication staging area.
        associateDefaultSecurityGroup:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether to associate the default Elastic Disaster Recovery
            Security group with the Replication Configuration Template.
        replicationServersSecurityGroupsIDs:
          allOf:
          - $ref: '#/components/schemas/ReplicationServersSecurityGroupsIDs'
          description: The security group IDs that will be used by the replication
            server.
        replicationServerInstanceType:
          allOf:
          - $ref: '#/components/schemas/EC2InstanceType'
          description: The instance type to be used for the replication server.
        useDedicatedReplicationServer:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether to use a dedicated Replication Server in the replication
            staging area.
        defaultLargeStagingDiskType:
          allOf:
          - $ref: '#/components/schemas/ReplicationConfigurationDefaultLargeStagingDiskType'
          description: The Staging Disk EBS volume type to be used during replication.
        ebsEncryption:
          allOf:
          - $ref: '#/components/schemas/ReplicationConfigurationEbsEncryption'
          description: The type of EBS encryption to be used during replication.
        ebsEncryptionKeyArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the EBS encryption key to be used during replication.
        bandwidthThrottling:
          allOf:
          - $ref: '#/components/schemas/PositiveInteger'
          description: Configure bandwidth throttling for the outbound data transfer
            rate of the Source Server in Mbps.
        dataPlaneRouting:
          allOf:
          - $ref: '#/components/schemas/ReplicationConfigurationDataPlaneRouting'
          description: The data plane routing mechanism that will be used for replication.
        createPublicIP:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether to create a Public IP for the Recovery Instance by
            default.
        stagingAreaTags:
          allOf:
          - $ref: '#/components/schemas/TagsMap'
          description: 'A set of tags to be associated with all resources created
            in the replication staging area: EC2 replication server, EBS volumes,
            EBS snapshots, etc.'
        tags:
          allOf:
          - $ref: '#/components/schemas/TagsMap'
          description: A set of tags to be associated with the Replication Configuration
            Template resource.
        pitPolicy:
          allOf:
          - $ref: '#/components/schemas/PITPolicy'
          description: The Point in time (PIT) policy to manage snapshots taken during
            replication.
        autoReplicateNewDisks:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether to allow the AWS replication agent to automatically
            replicate newly added disks.
      required:
      - replicationConfigurationTemplateID
    ReplicationConfigurationTemplateID:
      type: string
      pattern: ^rct-[0-9a-zA-Z]{17}$
      minLength: 21
      maxLength: 21
    ReplicationConfigurationTemplateIDs:
      type: array
      items:
        $ref: '#/components/schemas/ReplicationConfigurationTemplateID'
    ReplicationConfigurationTemplates:
      type: array
      items:
        $ref: '#/components/schemas/ReplicationConfigurationTemplate'
    ReplicationDirection:
      type: string
      enum:
      - FAILOVER
      - FAILBACK
    ReplicationServersSecurityGroupsIDs:
      type: array
      items:
        $ref: '#/components/schemas/SecurityGroupID'
    ReplicationStatus:
      type: string
      enum:
      - STOPPED
      - IN_PROGRESS
      - PROTECTED
      - ERROR
    ResourceNotFoundException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/LargeBoundedString'
        code:
          $ref: '#/components/schemas/LargeBoundedString'
        resourceId:
          allOf:
          - $ref: '#/components/schemas/LargeBoundedString'
          description: The ID of the resource.
        resourceType:
          allOf:
          - $ref: '#/components/schemas/LargeBoundedString'
          description: The type of the resource.
      description: The resource for this operation was not found.
    RetryDataReplicationRequest:
      type: object
      properties:
        sourceServerID:
          allOf:
          - $ref: '#/components/schemas/SourceServerID'
          description: The ID of the Source Server whose data replication should be
            retried.
      required:
      - sourceServerID
    ReverseReplicationRequest:
      type: object
      properties:
        recoveryInstanceID:
          allOf:
          - $ref: '#/components/schemas/RecoveryInstanceID'
          description: The ID of the Recovery Instance that we want to reverse the
            replication for.
      required:
      - recoveryInstanceID
    ReverseReplicationResponse:
      type: object
      properties:
        reversedDirectionSourceServerArn:
          allOf:
          - $ref: '#/components/schemas/SourceServerARN'
          description: ARN of created SourceServer.
    SecurityGroupID:
      type: string
      pattern: ^sg-[0-9a-fA-F]{8,}$
      minLength: 0
      maxLength: 255
    SensitiveBoundedString:
      type: string
      minLength: 0
      maxLength: 256
    ServiceQuotaExceededException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/LargeBoundedString'
        code:
          $ref: '#/components/schemas/LargeBoundedString'
        resourceId:
          allOf:
          - $ref: '#/components/schemas/LargeBoundedString'
          description: The ID of the resource.
        resourceType:
          allOf:
          - $ref: '#/components/schemas/LargeBoundedString'
          description: The type of the resource.
        serviceCode:
          allOf:
          - $ref: '#/components/schemas/LargeBoundedString'
          description: Service code.
        quotaCode:
          allOf:
          - $ref: '#/components/schemas/LargeBoundedString'
          description: Quota code.
      description: The request could not be completed because its exceeded the service
        quota.
    SmallBoundedString:
      type: string
      minLength: 0
      maxLength: 128
    SourceCloudProperties:
      type: object
      properties:
        originAccountID:
          allOf:
          - $ref: '#/components/schemas/AccountID'
          description: AWS Account ID for an EC2-originated Source Server.
        originRegion:
          allOf:
          - $ref: '#/components/schemas/AwsRegion'
          description: AWS Region for an EC2-originated Source Server.
        originAvailabilityZone:
          allOf:
          - $ref: '#/components/schemas/AwsAvailabilityZone'
          description: AWS Availability Zone for an EC2-originated Source Server.
        sourceOutpostArn:
          allOf:
          - $ref: '#/components/schemas/OutpostARN'
          description: The ARN of the source Outpost
      description: Properties of the cloud environment where this Source Server originated
        from.
    SourceNetwork:
      type: object
      properties:
        sourceNetworkID:
          allOf:
          - $ref: '#/components/schemas/SourceNetworkID'
          description: Source Network ID.
        sourceVpcID:
          allOf:
          - $ref: '#/components/schemas/VpcID'
          description: VPC ID protected by the Source Network.
        arn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the Source Network.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagsMap'
          description: A list of tags associated with the Source Network.
        replicationStatus:
          allOf:
          - $ref: '#/components/schemas/ReplicationStatus'
          description: 'Status of Source Network Replication. Possible values: (a)
            STOPPED - Source Network is not replicating. (b) IN_PROGRESS - Source
            Network is being replicated. (c) PROTECTED - Source Network was replicated
            successfully and is being synchronized for changes. (d) ERROR - Source
            Network replication has failed'
        replicationStatusDetails:
          allOf:
          - $ref: '#/components/schemas/SensitiveBoundedString'
          description: Error details in case Source Network replication status is
            ERROR.
        cfnStackName:
          allOf:
          - $ref: '#/components/schemas/CfnStackName'
          description: CloudFormation stack name that was deployed for recovering
            the Source Network.
        sourceRegion:
          allOf:
          - $ref: '#/components/schemas/AwsRegion'
          description: Region containing the VPC protected by the Source Network.
        sourceAccountID:
          allOf:
          - $ref: '#/components/schemas/AccountID'
          description: Account ID containing the VPC protected by the Source Network.
        lastRecovery:
          allOf:
          - $ref: '#/components/schemas/RecoveryLifeCycle'
          description: An object containing information regarding the last recovery
            of the Source Network.
        launchedVpcID:
          allOf:
          - $ref: '#/components/schemas/VpcID'
          description: ID of the recovered VPC following Source Network recovery.
      description: The ARN of the Source Network.
    SourceNetworkData:
      type: object
      properties:
        sourceNetworkID:
          allOf:
          - $ref: '#/components/schemas/SourceNetworkID'
          description: Source Network ID.
        sourceVpc:
          allOf:
          - $ref: '#/components/schemas/VpcID'
          description: VPC ID protected by the Source Network.
        targetVpc:
          allOf:
          - $ref: '#/components/schemas/VpcID'
          description: ID of the recovered VPC following Source Network recovery.
        stackName:
          allOf:
          - $ref: '#/components/schemas/LargeBoundedString'
          description: CloudFormation stack name that was deployed for recovering
            the Source Network.
      description: Properties of Source Network related to a job event.
    SourceNetworkID:
      type: string
      pattern: ^sn-[0-9a-zA-Z]{17}$
      minLength: 20
      maxLength: 20
    SourceNetworksList:
      type: array
      items:
        $ref: '#/components/schemas/SourceNetwork'
    SourceProperties:
      type: object
      properties:
        lastUpdatedDateTime:
          allOf:
          - $ref: '#/components/schemas/ISO8601DatetimeString'
          description: The date and time the Source Properties were last updated on.
        recommendedInstanceType:
          allOf:
          - $ref: '#/components/schemas/EC2InstanceType'
          description: The recommended EC2 instance type that will be used when recovering
            the Source Server.
        identificationHints:
          allOf:
          - $ref: '#/components/schemas/IdentificationHints'
          description: Hints used to uniquely identify a machine.
        networkInterfaces:
          allOf:
          - $ref: '#/components/schemas/NetworkInterfaces'
          description: An array of network interfaces.
        disks:
          allOf:
          - $ref: '#/components/schemas/Disks'
          description: An array of disks.
        cpus:
          allOf:
          - $ref: '#/components/schemas/Cpus'
          description: An array of CPUs.
        ramBytes:
          allOf:
          - $ref: '#/components/schemas/PositiveInteger'
          description: The amount of RAM in bytes.
        os:
          allOf:
          - $ref: '#/components/schemas/OS'
          description: Operating system.
        supportsNitroInstances:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Are EC2 nitro instance types supported when recovering the
            Source Server.
      description: Properties of the Source Server machine.
    SourceServer:
      type: object
      properties:
        sourceServerID:
          allOf:
          - $ref: '#/components/schemas/SourceServerID'
          description: The ID of the Source Server.
        arn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the Source Server.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagsMap'
          description: The tags associated with the Source Server.
        recoveryInstanceId:
          allOf:
          - $ref: '#/components/schemas/RecoveryInstanceID'
          description: The ID of the Recovery Instance associated with this Source
            Server.
        lastLaunchResult:
          allOf:
          - $ref: '#/components/schemas/LastLaunchResult'
          description: The status of the last recovery launch of this Source Server.
        dataReplicationInfo:
          allOf:
          - $ref: '#/components/schemas/DataReplicationInfo'
          description: The Data Replication Info of the Source Server.
        lifeCycle:
          allOf:
          - $ref: '#/components/schemas/LifeCycle'
          description: The lifecycle information of this Source Server.
        sourceProperties:
          allOf:
          - $ref: '#/components/schemas/SourceProperties'
          description: The source properties of the Source Server.
        stagingArea:
          allOf:
          - $ref: '#/components/schemas/StagingArea'
          description: The staging area of the source server.
        sourceCloudProperties:
          allOf:
          - $ref: '#/components/schemas/SourceCloudProperties'
          description: Source cloud properties of the Source Server.
        replicationDirection:
          allOf:
          - $ref: '#/components/schemas/ReplicationDirection'
          description: Replication direction of the Source Server.
        reversedDirectionSourceServerArn:
          allOf:
          - $ref: '#/components/schemas/SourceServerARN'
          description: For EC2-originated Source Servers which have been failed over
            and then failed back, this value will mean the ARN of the Source Server
            on the opposite replication direction.
        sourceNetworkID:
          allOf:
          - $ref: '#/components/schemas/SourceNetworkID'
          description: ID of the Source Network which is protecting this Source Server's
            network.
        agentVersion:
          allOf:
          - $ref: '#/components/schemas/AgentVersion'
          description: The version of the DRS agent installed on the source server
    SourceServerARN:
      type: string
      pattern: ^arn:(?:[0-9a-zA-Z_-]+:){3}([0-9]{12,}):source-server/(s-[0-9a-zA-Z]{17})$
      minLength: 20
      maxLength: 2048
    SourceServerID:
      type: string
      pattern: ^s-[0-9a-zA-Z]{17}$
      minLength: 19
      maxLength: 19
    SourceServerIDs:
      type: array
      items:
        $ref: '#/components/schemas/SourceServerID'
    SourceServersList:
      type: array
      items:
        $ref: '#/components/schemas/SourceServer'
    SsmDocumentName:
      type: string
      pattern: ^([A-Za-z0-9-/:])+$
      minLength: 1
      maxLength: 1011
    StagingArea:
      type: object
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/ExtensionStatus'
          description: 'Status of Source server extension. Possible values: (a) NOT_EXTENDED
            - This is a source server that is replicating in the current account.
            (b) EXTENDED - Source server is extended from a staging source server.
            In this case, the value of stagingSourceServerArn is pointing to the Arn
            of the source server in the staging account. (c) EXTENSION_ERROR - Some
            issue occurred when accessing staging source server. In this case, errorMessage
            field will contain an error message that explains what happened.'
        stagingAccountID:
          allOf:
          - $ref: '#/components/schemas/AccountID'
          description: Account ID of the account to which source server belongs. If
            this source server is extended - shows Account ID of staging source server.
        stagingSourceServerArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: Arn of the staging source server if this source server is extended
        errorMessage:
          allOf:
          - $ref: '#/components/schemas/LargeBoundedString'
          description: Shows an error message that occurred when DRS tried to access
            the staging source server. In this case StagingArea$status will have value
            EXTENSION_ERROR
      description: Staging information related to source server.
    StagingSourceServer:
      type: object
      properties:
        hostname:
          allOf:
          - $ref: '#/components/schemas/BoundedString'
          description: Hostname of staging source server.
        arn:
          allOf:
          - $ref: '#/components/schemas/SourceServerARN'
          description: The ARN of the source server.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagsMap'
          description: A list of tags associated with the staging source server.
      description: Source server in staging account that extended source server connected
        to.
    StagingSourceServersList:
      type: array
      items:
        $ref: '#/components/schemas/StagingSourceServer'
    StartFailbackLaunchRequest:
      type: object
      properties:
        recoveryInstanceIDs:
          allOf:
          - $ref: '#/components/schemas/StartFailbackRequestRecoveryInstanceIDs'
          description: The IDs of the Recovery Instance whose failback launch we want
            to request.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagsMap'
          description: The tags to be associated with the failback launch Job.
      required:
      - recoveryInstanceIDs
    StartFailbackLaunchResponse:
      type: object
      properties:
        job:
          allOf:
          - $ref: '#/components/schemas/Job'
          description: The failback launch Job.
    StartFailbackRequestRecoveryInstanceIDs:
      type: array
      items:
        $ref: '#/components/schemas/RecoveryInstanceID'
    StartRecoveryRequest:
      type: object
      properties:
        sourceServers:
          allOf:
          - $ref: '#/components/schemas/StartRecoveryRequestSourceServers'
          description: The Source Servers that we want to start a Recovery Job for.
        isDrill:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether this Source Server Recovery operation is a drill or
            not.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagsMap'
          description: The tags to be associated with the Recovery Job.
      required:
      - sourceServers
    StartRecoveryRequestSourceServer:
      type: object
      properties:
        sourceServerID:
          allOf:
          - $ref: '#/components/schemas/SourceServerID'
          description: The ID of the Source Server you want to recover.
        recoverySnapshotID:
          allOf:
          - $ref: '#/components/schemas/RecoverySnapshotID'
          description: The ID of a Recovery Snapshot we want to recover from. Omit
            this field to launch from the latest data by taking an on-demand snapshot.
      required:
      - sourceServerID
      description: An object representing the Source Server to recover.
    StartRecoveryRequestSourceServers:
      type: array
      items:
        $ref: '#/components/schemas/StartRecoveryRequestSourceServer'
    StartRecoveryResponse:
      type: object
      properties:
        job:
          allOf:
          - $ref: '#/components/schemas/Job'
          description: The Recovery Job.
    StartReplicationRequest:
      type: object
      properties:
        sourceServerID:
          allOf:
          - $ref: '#/components/schemas/SourceServerID'
          description: The ID of the Source Server to start replication for.
      required:
      - sourceServerID
    StartReplicationResponse:
      type: object
      properties:
        sourceServer:
          allOf:
          - $ref: '#/components/schemas/SourceServer'
          description: The Source Server that this action was targeted on.
    StartSourceNetworkRecoveryRequest:
      type: object
      properties:
        sourceNetworks:
          allOf:
          - $ref: '#/components/schemas/StartSourceNetworkRecoveryRequestNetworkEntries'
          description: The Source Networks that we want to start a Recovery Job for.
        deployAsNew:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Don't update existing CloudFormation Stack, recover the network
            using a new stack.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagsMap'
          description: The tags to be associated with the Source Network recovery
            Job.
      required:
      - sourceNetworks
    StartSourceNetworkRecoveryRequestNetworkEntries:
      type: array
      items:
        $ref: '#/components/schemas/StartSourceNetworkRecoveryRequestNetworkEntry'
    StartSourceNetworkRecoveryRequestNetworkEntry:
      type: object
      properties:
        sourceNetworkID:
          allOf:
          - $ref: '#/components/schemas/SourceNetworkID'
          description: The ID of the Source Network you want to recover.
        cfnStackName:
          allOf:
          - $ref: '#/components/schemas/CfnStackName'
          description: CloudFormation stack name to be used for recovering the network.
      required:
      - sourceNetworkID
      description: An object representing the Source Network to recover.
    StartSourceNetworkRecoveryResponse:
      type: object
      properties:
        job:
          allOf:
          - $ref: '#/components/schemas/Job'
          description: The Source Network recovery Job.
    StartSourceNetworkReplicationRequest:
      type: object
      properties:
        sourceNetworkID:
          allOf:
          - $ref: '#/components/schemas/SourceNetworkID'
          description: ID of the Source Network to replicate.
      required:
      - sourceNetworkID
    StartSourceNetworkReplicationResponse:
      type: object
      properties:
        sourceNetwork:
          allOf:
          - $ref: '#/components/schemas/SourceNetwork'
          description: Source Network which was requested for replication.
    StopFailbackRequest:
      type: object
      properties:
        recoveryInstanceID:
          allOf:
          - $ref: '#/components/schemas/RecoveryInstanceID'
          description: The ID of the Recovery Instance we want to stop failback for.
      required:
      - recoveryInstanceID
    StopReplicationRequest:
      type: object
      properties:
        sourceServerID:
          allOf:
          - $ref: '#/components/schemas/SourceServerID'
          description: The ID of the Source Server to stop replication for.
      required:
      - sourceServerID
    StopReplicationResponse:
      type: object
      properties:
        sourceServer:
          allOf:
          - $ref: '#/components/schemas/SourceServer'
          description: The Source Server that this action was targeted on.
    StopSourceNetworkReplicationRequest:
      type: object
      properties:
        sourceNetworkID:
          allOf:
          - $ref: '#/components/schemas/SourceNetworkID'
          description: ID of the Source Network to stop replication.
      required:
      - sourceNetworkID
    StopSourceNetworkReplicationResponse:
      type: object
      properties:
        sourceNetwork:
          allOf:
          - $ref: '#/components/schemas/SourceNetwork'
          description: Source Network which was requested to stop replication.
    StrictlyPositiveInteger:
      type: integer
      minimum: 1
    SubnetID:
      type: string
      pattern: ^subnet-[0-9a-fA-F]{8,}$
      minLength: 0
      maxLength: 255
    TagKey:
      type: string
      minLength: 0
      maxLength: 256
    TagKeys:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
      x-sensitive: true
    TagResourceRequest:
      type: object
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: ARN of the resource for which tags are to be added or updated.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagsMap'
          description: Array of tags to be added or updated.
      required:
      - resourceArn
      - tags
    TagValue:
      type: string
      minLength: 0
      maxLength: 256
    TagsMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
    TargetInstanceTypeRightSizingMethod:
      type: string
      enum:
      - NONE
      - BASIC
      - IN_AWS
    TerminateRecoveryInstancesRequest:
      type: object
      properties:
        recoveryInstanceIDs:
          allOf:
          - $ref: '#/components/schemas/RecoveryInstancesForTerminationRequest'
          description: The IDs of the Recovery Instances that should be terminated.
      required:
      - recoveryInstanceIDs
    TerminateRecoveryInstancesResponse:
      type: object
      properties:
        job:
          allOf:
          - $ref: '#/components/schemas/Job'
          description: The Job for terminating the Recovery Instances.
    ThrottlingException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/LargeBoundedString'
        serviceCode:
          allOf:
          - $ref: '#/components/schemas/LargeBoundedString'
          description: Service code.
        quotaCode:
          allOf:
          - $ref: '#/components/schemas/LargeBoundedString'
          description: Quota code.
        retryAfterSeconds:
          allOf:
          - $ref: '#/components/schemas/LargeBoundedString'
          description: The number of seconds after which the request should be safe
            to retry.
      required:
      - message
      description: The request was denied due to request throttling.
    UninitializedAccountException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/LargeBoundedString'
        code:
          $ref: '#/components/schemas/LargeBoundedString'
      description: The account performing the request has not been initialized.
    UntagResourceRequest:
      type: object
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: ARN of the resource for which tags are to be removed.
        tagKeys:
          allOf:
          - $ref: '#/components/schemas/TagKeys'
          description: Array of tags to be removed.
      required:
      - resourceArn
      - tagKeys
    UpdateFailbackReplicationConfigurationRequest:
      type: object
      properties:
        recoveryInstanceID:
          allOf:
          - $ref: '#/components/schemas/RecoveryInstanceID'
          description: The ID of the Recovery Instance.
        name:
          allOf:
          - $ref: '#/components/schemas/BoundedString'
          description: The name of the Failback Replication Configuration.
        bandwidthThrottling:
          allOf:
          - $ref: '#/components/schemas/PositiveInteger'
          description: Configure bandwidth throttling for the outbound data transfer
            rate of the Recovery Instance in Mbps.
        usePrivateIP:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether to use Private IP for the failback replication of the
            Recovery Instance.
      required:
      - recoveryInstanceID
    UpdateLaunchConfigurationRequest:
      type: object
      properties:
        sourceServerID:
          allOf:
          - $ref: '#/components/schemas/SourceServerID'
          description: The ID of the Source Server that we want to retrieve a Launch
            Configuration for.
        name:
          allOf:
          - $ref: '#/components/schemas/SmallBoundedString'
          description: The name of the launch configuration.
        launchDisposition:
          allOf:
          - $ref: '#/components/schemas/LaunchDisposition'
          description: The state of the Recovery Instance in EC2 after the recovery
            operation.
        targetInstanceTypeRightSizingMethod:
          allOf:
          - $ref: '#/components/schemas/TargetInstanceTypeRightSizingMethod'
          description: Whether Elastic Disaster Recovery should try to automatically
            choose the instance type that best matches the OS, CPU, and RAM of your
            Source Server.
        copyPrivateIp:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether we should copy the Private IP of the Source Server
            to the Recovery Instance.
        copyTags:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether we want to copy the tags of the Source Server to the
            EC2 machine of the Recovery Instance.
        licensing:
          allOf:
          - $ref: '#/components/schemas/Licensing'
          description: The licensing configuration to be used for this launch configuration.
        postLaunchEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether we want to enable post-launch actions for the Source
            Server.
        launchIntoInstanceProperties:
          allOf:
          - $ref: '#/components/schemas/LaunchIntoInstanceProperties'
          description: Launch into existing instance properties.
      required:
      - sourceServerID
    UpdateLaunchConfigurationTemplateRequest:
      type: object
      properties:
        launchConfigurationTemplateID:
          allOf:
          - $ref: '#/components/schemas/LaunchConfigurationTemplateID'
          description: Launch Configuration Template ID.
        launchDisposition:
          allOf:
          - $ref: '#/components/schemas/LaunchDisposition'
          description: Launch disposition.
        targetInstanceTypeRightSizingMethod:
          allOf:
          - $ref: '#/components/schemas/TargetInstanceTypeRightSizingMethod'
          description: Target instance type right-sizing method.
        copyPrivateIp:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Copy private IP.
        copyTags:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Copy tags.
        licensing:
          allOf:
          - $ref: '#/components/schemas/Licensing'
          description: Licensing.
        exportBucketArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: S3 bucket ARN to export Source Network templates.
        postLaunchEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether we want to activate post-launch actions.
        launchIntoSourceInstance:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: DRS will set the 'launch into instance ID' of any source server
            when performing a drill, recovery or failback to the previous region or
            availability zone, using the instance ID of the source instance.
      required:
      - launchConfigurationTemplateID
    UpdateLaunchConfigurationTemplateResponse:
      type: object
      properties:
        launchConfigurationTemplate:
          allOf:
          - $ref: '#/components/schemas/LaunchConfigurationTemplate'
          description: Updated Launch Configuration Template.
    UpdateReplicationConfigurationRequest:
      type: object
      properties:
        sourceServerID:
          allOf:
          - $ref: '#/components/schemas/SourceServerID'
          description: The ID of the Source Server for this Replication Configuration.
        name:
          allOf:
          - $ref: '#/components/schemas/SmallBoundedString'
          description: The name of the Replication Configuration.
        stagingAreaSubnetId:
          allOf:
          - $ref: '#/components/schemas/SubnetID'
          description: The subnet to be used by the replication staging area.
        associateDefaultSecurityGroup:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether to associate the default Elastic Disaster Recovery
            Security group with the Replication Configuration.
        replicationServersSecurityGroupsIDs:
          allOf:
          - $ref: '#/components/schemas/ReplicationServersSecurityGroupsIDs'
          description: The security group IDs that will be used by the replication
            server.
        replicationServerInstanceType:
          allOf:
          - $ref: '#/components/schemas/EC2InstanceType'
          description: The instance type to be used for the replication server.
        useDedicatedReplicationServer:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether to use a dedicated Replication Server in the replication
            staging area.
        defaultLargeStagingDiskType:
          allOf:
          - $ref: '#/components/schemas/ReplicationConfigurationDefaultLargeStagingDiskType'
          description: The Staging Disk EBS volume type to be used during replication.
        replicatedDisks:
          allOf:
          - $ref: '#/components/schemas/ReplicationConfigurationReplicatedDisks'
          description: The configuration of the disks of the Source Server to be replicated.
        ebsEncryption:
          allOf:
          - $ref: '#/components/schemas/ReplicationConfigurationEbsEncryption'
          description: The type of EBS encryption to be used during replication.
        ebsEncryptionKeyArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the EBS encryption key to be used during replication.
        bandwidthThrottling:
          allOf:
          - $ref: '#/components/schemas/PositiveInteger'
          description: Configure bandwidth throttling for the outbound data transfer
            rate of the Source Server in Mbps.
        dataPlaneRouting:
          allOf:
          - $ref: '#/components/schemas/ReplicationConfigurationDataPlaneRouting'
          description: The data plane routing mechanism that will be used for replication.
        createPublicIP:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether to create a Public IP for the Recovery Instance by
            default.
        stagingAreaTags:
          allOf:
          - $ref: '#/components/schemas/TagsMap'
          description: 'A set of tags to be associated with all resources created
            in the replication staging area: EC2 replication server, EBS volumes,
            EBS snapshots, etc.'
        pitPolicy:
          allOf:
          - $ref: '#/components/schemas/PITPolicy'
          description: The Point in time (PIT) policy to manage snapshots taken during
            replication.
        autoReplicateNewDisks:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether to allow the AWS replication agent to automatically
            replicate newly added disks.
      required:
      - sourceServerID
    UpdateReplicationConfigurationTemplateRequest:
      type: object
      properties:
        replicationConfigurationTemplateID:
          allOf:
          - $ref: '#/components/schemas/ReplicationConfigurationTemplateID'
          description: The Replication Configuration Template ID.
        arn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Replication Configuration Template ARN.
        stagingAreaSubnetId:
          allOf:
          - $ref: '#/components/schemas/SubnetID'
          description: The subnet to be used by the replication staging area.
        associateDefaultSecurityGroup:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether to associate the default Elastic Disaster Recovery
            Security group with the Replication Configuration Template.
        replicationServersSecurityGroupsIDs:
          allOf:
          - $ref: '#/components/schemas/ReplicationServersSecurityGroupsIDs'
          description: The security group IDs that will be used by the replication
            server.
        replicationServerInstanceType:
          allOf:
          - $ref: '#/components/schemas/EC2InstanceType'
          description: The instance type to be used for the replication server.
        useDedicatedReplicationServer:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether to use a dedicated Replication Server in the replication
            staging area.
        defaultLargeStagingDiskType:
          allOf:
          - $ref: '#/components/schemas/ReplicationConfigurationDefaultLargeStagingDiskType'
          description: The Staging Disk EBS volume type to be used during replication.
        ebsEncryption:
          allOf:
          - $ref: '#/components/schemas/ReplicationConfigurationEbsEncryption'
          description: The type of EBS encryption to be used during replication.
        ebsEncryptionKeyArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN of the EBS encryption key to be used during replication.
        bandwidthThrottling:
          allOf:
          - $ref: '#/components/schemas/PositiveInteger'
          description: Configure bandwidth throttling for the outbound data transfer
            rate of the Source Server in Mbps.
        dataPlaneRouting:
          allOf:
          - $ref: '#/components/schemas/ReplicationConfigurationDataPlaneRouting'
          description: The data plane routing mechanism that will be used for replication.
        createPublicIP:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether to create a Public IP for the Recovery Instance by
            default.
        stagingAreaTags:
          allOf:
          - $ref: '#/components/schemas/TagsMap'
          description: 'A set of tags to be associated with all resources created
            in the replication staging area: EC2 replication server, EBS volumes,
            EBS snapshots, etc.'
        pitPolicy:
          allOf:
          - $ref: '#/components/schemas/PITPolicy'
          description: The Point in time (PIT) policy to manage snapshots taken during
            replication.
        autoReplicateNewDisks:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether to allow the AWS replication agent to automatically
            replicate newly added disks.
      required:
      - replicationConfigurationTemplateID
    ValidationException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/LargeBoundedString'
        code:
          $ref: '#/components/schemas/LargeBoundedString'
        reason:
          allOf:
          - $ref: '#/components/schemas/ValidationExceptionReason'
          description: Validation exception reason.
        fieldList:
          allOf:
          - $ref: '#/components/schemas/ValidationExceptionFieldList'
          description: A list of fields that failed validation.
      description: The input fails to satisfy the constraints specified by the AWS
        service.
    ValidationExceptionField:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/LargeBoundedString'
          description: Validate exception field name.
        message:
          allOf:
          - $ref: '#/components/schemas/LargeBoundedString'
          description: Validate exception field message.
      description: Validate exception field.
    ValidationExceptionFieldList:
      type: array
      items:
        $ref: '#/components/schemas/ValidationExceptionField'
    ValidationExceptionReason:
      type: string
      enum:
      - unknownOperation
      - cannotParse
      - fieldValidationFailed
      - other
    VolumeStatus:
      type: string
      enum:
      - REGULAR
      - CONTAINS_MARKETPLACE_PRODUCT_CODES
      - MISSING_VOLUME_ATTRIBUTES
      - MISSING_VOLUME_ATTRIBUTES_AND_PRECHECK_UNAVAILABLE
      - PENDING
    VolumeToConversionMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/ConversionMap'
    VolumeToProductCodes:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/ProductCodes'
    VolumeToSizeMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/PositiveInteger'
    VpcID:
      type: string
      pattern: ^vpc-[0-9a-fA-F]{8,}$
      minLength: 12
      maxLength: 21
