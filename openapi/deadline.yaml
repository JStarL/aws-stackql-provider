openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: deadline
  x-aws-serviceName: deadline
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-07'
  version: '2023-10-12'
  title: AWSDeadlineCloud
  description: |-
    The Amazon Web Services Deadline Cloud API provides infrastructure and centralized management for your projects. Use the Deadline Cloud API to onboard users, assign projects, and attach permissions specific to their job function.

    With Deadline Cloud, content production teams can deploy resources for their workforce securely in the cloud, reducing the costs of added physical infrastructure. Keep your content production operations secure, while allowing your contributors to access the tools they need, such as scalable high-speed storage, licenses, and cost management services.
servers:
- description: The AWSDeadlineCloud regional endpoint
  url: https://deadline.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths:
  /2023-10-12/farms/{farmId}/members/{principalId}:
    put:
      operationId: AssociateMemberToFarm
      description: |-
        Assigns a farm membership level to a member.
      parameters:
      - name: farmId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FarmId'
      - name: principalId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/IdentityCenterPrincipalId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                principalType:
                  $ref: '#/components/schemas/DeadlinePrincipalType'
                identityStoreId:
                  $ref: '#/components/schemas/IdentityStoreId'
                membershipLevel:
                  $ref: '#/components/schemas/MembershipLevel'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            You exceeded your service quota. Service quotas, also referred to as limits, are the maximum number of service resources or operations for your Amazon Web Services account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    delete:
      operationId: DisassociateMemberFromFarm
      description: |-
        Disassociates a member from a farm.
      parameters:
      - name: farmId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FarmId'
      - name: principalId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/IdentityCenterPrincipalId'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /2023-10-12/farms/{farmId}/fleets/{fleetId}/members/{principalId}:
    put:
      operationId: AssociateMemberToFleet
      description: |-
        Assigns a fleet membership level to a member.
      parameters:
      - name: farmId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FarmId'
      - name: fleetId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FleetId'
      - name: principalId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/IdentityCenterPrincipalId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                principalType:
                  $ref: '#/components/schemas/DeadlinePrincipalType'
                identityStoreId:
                  $ref: '#/components/schemas/IdentityStoreId'
                membershipLevel:
                  $ref: '#/components/schemas/MembershipLevel'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            You exceeded your service quota. Service quotas, also referred to as limits, are the maximum number of service resources or operations for your Amazon Web Services account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    delete:
      operationId: DisassociateMemberFromFleet
      description: |-
        Disassociates a member from a fleet.
      parameters:
      - name: farmId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FarmId'
      - name: fleetId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FleetId'
      - name: principalId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/IdentityCenterPrincipalId'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Your request has conflicting operations. This can occur if you're trying to perform more than one operation on the same resource at the same time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /2023-10-12/farms/{farmId}/queues/{queueId}/jobs/{jobId}/members/{principalId}:
    put:
      operationId: AssociateMemberToJob
      description: |-
        Assigns a job membership level to a member
      parameters:
      - name: farmId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FarmId'
      - name: queueId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/QueueId'
      - name: jobId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/JobId'
      - name: principalId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/IdentityCenterPrincipalId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                principalType:
                  $ref: '#/components/schemas/DeadlinePrincipalType'
                identityStoreId:
                  $ref: '#/components/schemas/IdentityStoreId'
                membershipLevel:
                  $ref: '#/components/schemas/MembershipLevel'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            You exceeded your service quota. Service quotas, also referred to as limits, are the maximum number of service resources or operations for your Amazon Web Services account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    delete:
      operationId: DisassociateMemberFromJob
      description: |-
        Disassociates a member from a job.
      parameters:
      - name: farmId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FarmId'
      - name: queueId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/QueueId'
      - name: jobId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/JobId'
      - name: principalId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/IdentityCenterPrincipalId'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /2023-10-12/farms/{farmId}/queues/{queueId}/members/{principalId}:
    put:
      operationId: AssociateMemberToQueue
      description: |-
        Assigns a queue membership level to a member
      parameters:
      - name: farmId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FarmId'
      - name: queueId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/QueueId'
      - name: principalId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/IdentityCenterPrincipalId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                principalType:
                  $ref: '#/components/schemas/DeadlinePrincipalType'
                identityStoreId:
                  $ref: '#/components/schemas/IdentityStoreId'
                membershipLevel:
                  $ref: '#/components/schemas/MembershipLevel'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            You exceeded your service quota. Service quotas, also referred to as limits, are the maximum number of service resources or operations for your Amazon Web Services account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    delete:
      operationId: DisassociateMemberFromQueue
      description: |-
        Disassociates a member from a queue.
      parameters:
      - name: farmId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FarmId'
      - name: queueId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/QueueId'
      - name: principalId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/IdentityCenterPrincipalId'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Your request has conflicting operations. This can occur if you're trying to perform more than one operation on the same resource at the same time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /2023-10-12/farms/{farmId}/fleets/{fleetId}/read-roles:
    get:
      operationId: AssumeFleetRoleForRead
      description: |-
        Get Amazon Web Services credentials from the fleet role. The IAM permissions of the credentials are scoped down to have read-only access.
      parameters:
      - name: farmId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FarmId'
      - name: fleetId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FleetId'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /2023-10-12/farms/{farmId}/fleets/{fleetId}/workers/{workerId}/fleet-roles:
    get:
      operationId: AssumeFleetRoleForWorker
      description: |-
        Get credentials from the fleet role for a worker.
      parameters:
      - name: farmId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FarmId'
      - name: fleetId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FleetId'
      - name: workerId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/WorkerId'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Your request has conflicting operations. This can occur if you're trying to perform more than one operation on the same resource at the same time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /2023-10-12/farms/{farmId}/queues/{queueId}/read-roles:
    get:
      operationId: AssumeQueueRoleForRead
      description: |-
        Gets Amazon Web Services credentials from the queue role. The IAM permissions of the credentials are scoped down to have read-only access.
      parameters:
      - name: farmId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FarmId'
      - name: queueId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/QueueId'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /2023-10-12/farms/{farmId}/queues/{queueId}/user-roles:
    get:
      operationId: AssumeQueueRoleForUser
      description: |-
        Allows a user to assume a role for a queue.
      parameters:
      - name: farmId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FarmId'
      - name: queueId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/QueueId'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /2023-10-12/farms/{farmId}/fleets/{fleetId}/workers/{workerId}/queue-roles:
    get:
      operationId: AssumeQueueRoleForWorker
      description: |-
        Allows a worker to assume a queue role.
      parameters:
      - name: farmId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FarmId'
      - name: fleetId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FleetId'
      - name: workerId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/WorkerId'
      - name: queueId
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/QueueId'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Your request has conflicting operations. This can occur if you're trying to perform more than one operation on the same resource at the same time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /2023-10-12/farms/{farmId}/fleets/{fleetId}/workers/{workerId}/batchGetJobEntity:
    post:
      operationId: BatchGetJobEntity
      description: |-
        Get batched job details for a worker.
      parameters:
      - name: farmId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FarmId'
      - name: fleetId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FleetId'
      - name: workerId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/WorkerId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                identifiers:
                  $ref: '#/components/schemas/JobEntityIdentifiers'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /2023-10-12/farms/{farmId}/queues/{queueId}/jobs/{jobId}/template:
    post:
      operationId: CopyJobTemplate
      description: |-
        Copies a job template to an Amazon S3 bucket.
      parameters:
      - name: farmId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FarmId'
      - name: jobId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/JobId'
      - name: queueId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/QueueId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                targetS3Location:
                  $ref: '#/components/schemas/S3Location'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /2023-10-12/farms/{farmId}/budgets:
    post:
      operationId: CreateBudget
      description: |-
        Creates a budget to set spending thresholds for your rendering activity.
      parameters:
      - name: X-Amz-Client-Token
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/ClientToken'
      - name: farmId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FarmId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                usageTrackingResource:
                  $ref: '#/components/schemas/UsageTrackingResource'
                displayName:
                  $ref: '#/components/schemas/ResourceName'
                description:
                  $ref: '#/components/schemas/Description'
                approximateDollarLimit:
                  $ref: '#/components/schemas/ConsumedUsageLimit'
                actions:
                  $ref: '#/components/schemas/BudgetActionsToAdd'
                schedule:
                  $ref: '#/components/schemas/BudgetSchedule'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            You exceeded your service quota. Service quotas, also referred to as limits, are the maximum number of service resources or operations for your Amazon Web Services account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: ListBudgets
      description: |-
        A list of budgets in a farm.
      parameters:
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      - name: farmId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FarmId'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: status
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/BudgetStatus'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /2023-10-12/farms:
    post:
      operationId: CreateFarm
      description: |-
        Creates a farm to allow space for queues and fleets. Farms are the space where the components of your renders gather and are pieced together in the cloud. Farms contain budgets and allow you to enforce permissions. Deadline Cloud farms are a useful container for large projects.
      parameters:
      - name: X-Amz-Client-Token
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/ClientToken'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                displayName:
                  $ref: '#/components/schemas/ResourceName'
                description:
                  $ref: '#/components/schemas/Description'
                kmsKeyArn:
                  $ref: '#/components/schemas/KmsKeyArn'
                tags:
                  $ref: '#/components/schemas/Tags'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            You exceeded your service quota. Service quotas, also referred to as limits, are the maximum number of service resources or operations for your Amazon Web Services account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: ListFarms
      description: |-
        Lists farms.
      parameters:
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      - name: principalId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/IdentityCenterPrincipalId'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /2023-10-12/farms/{farmId}/fleets:
    post:
      operationId: CreateFleet
      description: |-
        Creates a fleet. Fleets gather information relating to compute, or capacity, for renders within your farms. You can choose to manage your own capacity or opt to have fleets fully managed by Deadline Cloud.
      parameters:
      - name: X-Amz-Client-Token
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/ClientToken'
      - name: farmId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FarmId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                displayName:
                  $ref: '#/components/schemas/ResourceName'
                description:
                  $ref: '#/components/schemas/Description'
                roleArn:
                  $ref: '#/components/schemas/IamRoleArn'
                minWorkerCount:
                  $ref: '#/components/schemas/MinZeroMaxInteger'
                maxWorkerCount:
                  $ref: '#/components/schemas/MinZeroMaxInteger'
                configuration:
                  $ref: '#/components/schemas/FleetConfiguration'
                tags:
                  $ref: '#/components/schemas/Tags'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            You exceeded your service quota. Service quotas, also referred to as limits, are the maximum number of service resources or operations for your Amazon Web Services account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: ListFleets
      description: |-
        Lists fleets.
      parameters:
      - name: farmId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FarmId'
      - name: principalId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/IdentityCenterPrincipalId'
      - name: displayName
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ResourceName'
      - name: status
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/FleetStatus'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /2023-10-12/farms/{farmId}/queues/{queueId}/jobs:
    post:
      operationId: CreateJob
      description: |-
        Creates a job. A job is a set of instructions that Deadline Cloud uses to schedule and run work on available workers. For more information, see [Deadline Cloud jobs](https://docs.aws.amazon.com/deadline-cloud/latest/userguide/deadline-cloud-jobs.html).
      parameters:
      - name: farmId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FarmId'
      - name: queueId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/QueueId'
      - name: X-Amz-Client-Token
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/ClientToken'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                template:
                  $ref: '#/components/schemas/JobTemplate'
                templateType:
                  $ref: '#/components/schemas/JobTemplateType'
                priority:
                  $ref: '#/components/schemas/JobPriority'
                parameters:
                  $ref: '#/components/schemas/JobParameters'
                attachments:
                  $ref: '#/components/schemas/Attachments'
                storageProfileId:
                  $ref: '#/components/schemas/StorageProfileId'
                targetTaskRunStatus:
                  $ref: '#/components/schemas/CreateJobTargetTaskRunStatus'
                maxFailedTasksCount:
                  $ref: '#/components/schemas/MaxFailedTasksCount'
                maxRetriesPerTask:
                  $ref: '#/components/schemas/MaxRetriesPerTask'
                maxWorkerCount:
                  $ref: '#/components/schemas/MaxWorkerCount'
                sourceJobId:
                  $ref: '#/components/schemas/JobId'
      responses:
        '201': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            You exceeded your service quota. Service quotas, also referred to as limits, are the maximum number of service resources or operations for your Amazon Web Services account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: ListJobs
      description: |-
        Lists jobs.
      parameters:
      - name: farmId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FarmId'
      - name: principalId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/IdentityCenterPrincipalId'
      - name: queueId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/QueueId'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /2023-10-12/license-endpoints:
    post:
      operationId: CreateLicenseEndpoint
      description: |-
        Creates a license endpoint to integrate your various licensed software used for rendering on Deadline Cloud.
      parameters:
      - name: X-Amz-Client-Token
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/ClientToken'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                vpcId:
                  $ref: '#/components/schemas/VpcId'
                subnetIds:
                  $ref: '#/components/schemas/SubnetIdList'
                securityGroupIds:
                  $ref: '#/components/schemas/SecurityGroupIdList'
                tags:
                  $ref: '#/components/schemas/Tags'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Your request has conflicting operations. This can occur if you're trying to perform more than one operation on the same resource at the same time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '402':
          description: |-
            You exceeded your service quota. Service quotas, also referred to as limits, are the maximum number of service resources or operations for your Amazon Web Services account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: ListLicenseEndpoints
      description: |-
        Lists license endpoints.
      parameters:
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /2023-10-12/farms/{farmId}/limits:
    post:
      operationId: CreateLimit
      description: |-
        Creates a limit that manages the distribution of shared resources, such as floating licenses. A limit can throttle work assignments, help manage workloads, and track current usage. Before you use a limit, you must associate the limit with one or more queues.

        You must add the `amountRequirementName` to a step in a job template to declare the limit requirement.
      parameters:
      - name: X-Amz-Client-Token
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/ClientToken'
      - name: farmId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FarmId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                displayName:
                  $ref: '#/components/schemas/ResourceName'
                amountRequirementName:
                  $ref: '#/components/schemas/AmountRequirementName'
                maxCount:
                  $ref: '#/components/schemas/MaxCount'
                description:
                  $ref: '#/components/schemas/Description'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            You exceeded your service quota. Service quotas, also referred to as limits, are the maximum number of service resources or operations for your Amazon Web Services account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: ListLimits
      description: |-
        Gets a list of limits defined in the specified farm.
      parameters:
      - name: farmId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FarmId'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /2023-10-12/monitors:
    post:
      operationId: CreateMonitor
      description: |-
        Creates an Amazon Web Services Deadline Cloud monitor that you can use to view your farms, queues, and fleets. After you submit a job, you can track the progress of the tasks and steps that make up the job, and then download the job's results.
      parameters:
      - name: X-Amz-Client-Token
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/ClientToken'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                displayName:
                  $ref: '#/components/schemas/ResourceName'
                identityCenterInstanceArn:
                  $ref: '#/components/schemas/IdentityCenterInstanceArn'
                subdomain:
                  $ref: '#/components/schemas/Subdomain'
                roleArn:
                  $ref: '#/components/schemas/IamRoleArn'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '402':
          description: |-
            You exceeded your service quota. Service quotas, also referred to as limits, are the maximum number of service resources or operations for your Amazon Web Services account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: ListMonitors
      description: |-
        Gets a list of your monitors in Deadline Cloud.
      parameters:
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /2023-10-12/farms/{farmId}/queues:
    post:
      operationId: CreateQueue
      description: |-
        Creates a queue to coordinate the order in which jobs run on a farm. A queue can also specify where to pull resources and indicate where to output completed jobs.
      parameters:
      - name: X-Amz-Client-Token
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/ClientToken'
      - name: farmId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FarmId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                displayName:
                  $ref: '#/components/schemas/ResourceName'
                description:
                  $ref: '#/components/schemas/Description'
                defaultBudgetAction:
                  $ref: '#/components/schemas/DefaultQueueBudgetAction'
                jobAttachmentSettings:
                  $ref: '#/components/schemas/JobAttachmentSettings'
                roleArn:
                  $ref: '#/components/schemas/IamRoleArn'
                jobRunAsUser:
                  $ref: '#/components/schemas/JobRunAsUser'
                requiredFileSystemLocationNames:
                  $ref: '#/components/schemas/RequiredFileSystemLocationNames'
                allowedStorageProfileIds:
                  $ref: '#/components/schemas/AllowedStorageProfileIds'
                tags:
                  $ref: '#/components/schemas/Tags'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            You exceeded your service quota. Service quotas, also referred to as limits, are the maximum number of service resources or operations for your Amazon Web Services account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: ListQueues
      description: |-
        Lists queues.
      parameters:
      - name: farmId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FarmId'
      - name: principalId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/IdentityCenterPrincipalId'
      - name: status
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/QueueStatus'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /2023-10-12/farms/{farmId}/queues/{queueId}/environments:
    post:
      operationId: CreateQueueEnvironment
      description: |-
        Creates an environment for a queue that defines how jobs in the queue run.
      parameters:
      - name: X-Amz-Client-Token
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/ClientToken'
      - name: farmId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FarmId'
      - name: queueId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/QueueId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                priority:
                  $ref: '#/components/schemas/Priority'
                templateType:
                  $ref: '#/components/schemas/EnvironmentTemplateType'
                template:
                  $ref: '#/components/schemas/EnvironmentTemplate'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            You exceeded your service quota. Service quotas, also referred to as limits, are the maximum number of service resources or operations for your Amazon Web Services account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: ListQueueEnvironments
      description: |-
        Lists queue environments.
      parameters:
      - name: farmId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FarmId'
      - name: queueId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/QueueId'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /2023-10-12/farms/{farmId}/queue-fleet-associations:
    put:
      operationId: CreateQueueFleetAssociation
      description: |-
        Creates an association between a queue and a fleet.
      parameters:
      - name: farmId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FarmId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                queueId:
                  $ref: '#/components/schemas/QueueId'
                fleetId:
                  $ref: '#/components/schemas/FleetId'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: ListQueueFleetAssociations
      description: |-
        Lists queue-fleet associations.
      parameters:
      - name: farmId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FarmId'
      - name: queueId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/QueueId'
      - name: fleetId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/FleetId'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /2023-10-12/farms/{farmId}/queue-limit-associations:
    put:
      operationId: CreateQueueLimitAssociation
      description: |-
        Associates a limit with a particular queue. After the limit is associated, all workers for jobs that specify the limit associated with the queue are subject to the limit. You can't associate two limits with the same `amountRequirementName` to the same queue.
      parameters:
      - name: farmId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FarmId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                queueId:
                  $ref: '#/components/schemas/QueueId'
                limitId:
                  $ref: '#/components/schemas/LimitId'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: ListQueueLimitAssociations
      description: |-
        Gets a list of the associations between queues and limits defined in a farm.
      parameters:
      - name: farmId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FarmId'
      - name: queueId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/QueueId'
      - name: limitId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/LimitId'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /2023-10-12/farms/{farmId}/storage-profiles:
    post:
      operationId: CreateStorageProfile
      description: |-
        Creates a storage profile that specifies the operating system, file type, and file location of resources used on a farm.
      parameters:
      - name: X-Amz-Client-Token
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/ClientToken'
      - name: farmId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FarmId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                displayName:
                  $ref: '#/components/schemas/ResourceName'
                osFamily:
                  $ref: '#/components/schemas/StorageProfileOperatingSystemFamily'
                fileSystemLocations:
                  $ref: '#/components/schemas/FileSystemLocationsList'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            You exceeded your service quota. Service quotas, also referred to as limits, are the maximum number of service resources or operations for your Amazon Web Services account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: ListStorageProfiles
      description: |-
        Lists storage profiles.
      parameters:
      - name: farmId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FarmId'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /2023-10-12/farms/{farmId}/fleets/{fleetId}/workers:
    post:
      operationId: CreateWorker
      description: |-
        Creates a worker. A worker tells your instance how much processing power (vCPU), and memory (GiB) you’ll need to assemble the digital assets held within a particular instance. You can specify certain instance types to use, or let the worker know which instances types to exclude.
      parameters:
      - name: farmId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FarmId'
      - name: fleetId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FleetId'
      - name: X-Amz-Client-Token
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/ClientToken'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                hostProperties:
                  $ref: '#/components/schemas/HostPropertiesRequest'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Your request has conflicting operations. This can occur if you're trying to perform more than one operation on the same resource at the same time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: ListWorkers
      description: |-
        Lists workers.
      parameters:
      - name: farmId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FarmId'
      - name: fleetId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FleetId'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /2023-10-12/farms/{farmId}/budgets/{budgetId}:
    delete:
      operationId: DeleteBudget
      description: |-
        Deletes a budget.
      parameters:
      - name: farmId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FarmId'
      - name: budgetId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BudgetId'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetBudget
      description: |-
        Get a budget.
      parameters:
      - name: farmId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FarmId'
      - name: budgetId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BudgetId'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    patch:
      operationId: UpdateBudget
      description: |-
        Updates a budget that sets spending thresholds for rendering activity.
      parameters:
      - name: X-Amz-Client-Token
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/ClientToken'
      - name: farmId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FarmId'
      - name: budgetId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BudgetId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                displayName:
                  $ref: '#/components/schemas/ResourceName'
                description:
                  $ref: '#/components/schemas/Description'
                status:
                  $ref: '#/components/schemas/BudgetStatus'
                approximateDollarLimit:
                  $ref: '#/components/schemas/ConsumedUsageLimit'
                actionsToAdd:
                  $ref: '#/components/schemas/BudgetActionsToAdd'
                actionsToRemove:
                  $ref: '#/components/schemas/BudgetActionsToRemove'
                schedule:
                  $ref: '#/components/schemas/BudgetSchedule'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /2023-10-12/farms/{farmId}:
    delete:
      operationId: DeleteFarm
      description: |-
        Deletes a farm.
      parameters:
      - name: farmId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FarmId'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetFarm
      description: |-
        Get a farm.
      parameters:
      - name: farmId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FarmId'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    patch:
      operationId: UpdateFarm
      description: |-
        Updates a farm.
      parameters:
      - name: farmId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FarmId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                displayName:
                  $ref: '#/components/schemas/ResourceName'
                description:
                  $ref: '#/components/schemas/Description'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /2023-10-12/farms/{farmId}/fleets/{fleetId}:
    delete:
      operationId: DeleteFleet
      description: |-
        Deletes a fleet.
      parameters:
      - name: X-Amz-Client-Token
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/ClientToken'
      - name: farmId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FarmId'
      - name: fleetId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FleetId'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Your request has conflicting operations. This can occur if you're trying to perform more than one operation on the same resource at the same time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetFleet
      description: |-
        Get a fleet.
      parameters:
      - name: farmId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FarmId'
      - name: fleetId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FleetId'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    patch:
      operationId: UpdateFleet
      description: |-
        Updates a fleet.
      parameters:
      - name: X-Amz-Client-Token
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/ClientToken'
      - name: farmId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FarmId'
      - name: fleetId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FleetId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                displayName:
                  $ref: '#/components/schemas/ResourceName'
                description:
                  $ref: '#/components/schemas/Description'
                roleArn:
                  $ref: '#/components/schemas/IamRoleArn'
                minWorkerCount:
                  $ref: '#/components/schemas/MinZeroMaxInteger'
                maxWorkerCount:
                  $ref: '#/components/schemas/MinZeroMaxInteger'
                configuration:
                  $ref: '#/components/schemas/FleetConfiguration'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            You exceeded your service quota. Service quotas, also referred to as limits, are the maximum number of service resources or operations for your Amazon Web Services account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /2023-10-12/license-endpoints/{licenseEndpointId}:
    delete:
      operationId: DeleteLicenseEndpoint
      description: |-
        Deletes a license endpoint.
      parameters:
      - name: licenseEndpointId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/LicenseEndpointId'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Your request has conflicting operations. This can occur if you're trying to perform more than one operation on the same resource at the same time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetLicenseEndpoint
      description: |-
        Gets a licence endpoint.
      parameters:
      - name: licenseEndpointId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/LicenseEndpointId'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /2023-10-12/farms/{farmId}/limits/{limitId}:
    delete:
      operationId: DeleteLimit
      description: |-
        Removes a limit from the specified farm. Before you delete a limit you must use the `DeleteQueueLimitAssociation` operation to remove the association with any queues.
      parameters:
      - name: farmId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FarmId'
      - name: limitId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/LimitId'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetLimit
      description: |-
        Gets information about a specific limit.
      parameters:
      - name: farmId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FarmId'
      - name: limitId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/LimitId'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    patch:
      operationId: UpdateLimit
      description: |-
        Updates the properties of the specified limit.
      parameters:
      - name: farmId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FarmId'
      - name: limitId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/LimitId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                displayName:
                  $ref: '#/components/schemas/ResourceName'
                description:
                  $ref: '#/components/schemas/Description'
                maxCount:
                  $ref: '#/components/schemas/MaxCount'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /2023-10-12/license-endpoints/{licenseEndpointId}/metered-products/{productId}:
    delete:
      operationId: DeleteMeteredProduct
      description: |-
        Deletes a metered product.
      parameters:
      - name: licenseEndpointId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/LicenseEndpointId'
      - name: productId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MeteredProductId'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    put:
      operationId: PutMeteredProduct
      description: |-
        Adds a metered product.
      parameters:
      - name: licenseEndpointId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/LicenseEndpointId'
      - name: productId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MeteredProductId'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /2023-10-12/monitors/{monitorId}:
    delete:
      operationId: DeleteMonitor
      description: |-
        Removes a Deadline Cloud monitor. After you delete a monitor, you can create a new one and attach farms to the monitor.
      parameters:
      - name: monitorId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MonitorId'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetMonitor
      description: |-
        Gets information about the specified monitor.
      parameters:
      - name: monitorId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MonitorId'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    patch:
      operationId: UpdateMonitor
      description: |-
        Modifies the settings for a Deadline Cloud monitor. You can modify one or all of the settings when you call `UpdateMonitor`.
      parameters:
      - name: monitorId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MonitorId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                subdomain:
                  $ref: '#/components/schemas/Subdomain'
                displayName:
                  $ref: '#/components/schemas/ResourceName'
                roleArn:
                  $ref: '#/components/schemas/IamRoleArn'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /2023-10-12/farms/{farmId}/queues/{queueId}:
    delete:
      operationId: DeleteQueue
      description: |-
        Deletes a queue.

        You can't recover the jobs in a queue if you delete the queue. Deleting the queue also deletes the jobs in that queue.
      parameters:
      - name: farmId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FarmId'
      - name: queueId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/QueueId'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Your request has conflicting operations. This can occur if you're trying to perform more than one operation on the same resource at the same time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetQueue
      description: |-
        Gets a queue.
      parameters:
      - name: farmId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FarmId'
      - name: queueId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/QueueId'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    patch:
      operationId: UpdateQueue
      description: |-
        Updates a queue.
      parameters:
      - name: X-Amz-Client-Token
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/ClientToken'
      - name: farmId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FarmId'
      - name: queueId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/QueueId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                displayName:
                  $ref: '#/components/schemas/ResourceName'
                description:
                  $ref: '#/components/schemas/Description'
                defaultBudgetAction:
                  $ref: '#/components/schemas/DefaultQueueBudgetAction'
                jobAttachmentSettings:
                  $ref: '#/components/schemas/JobAttachmentSettings'
                roleArn:
                  $ref: '#/components/schemas/IamRoleArn'
                jobRunAsUser:
                  $ref: '#/components/schemas/JobRunAsUser'
                requiredFileSystemLocationNamesToAdd:
                  $ref: '#/components/schemas/RequiredFileSystemLocationNames'
                requiredFileSystemLocationNamesToRemove:
                  $ref: '#/components/schemas/RequiredFileSystemLocationNames'
                allowedStorageProfileIdsToAdd:
                  $ref: '#/components/schemas/AllowedStorageProfileIds'
                allowedStorageProfileIdsToRemove:
                  $ref: '#/components/schemas/AllowedStorageProfileIds'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /2023-10-12/farms/{farmId}/queues/{queueId}/environments/{queueEnvironmentId}:
    delete:
      operationId: DeleteQueueEnvironment
      description: |-
        Deletes a queue environment.
      parameters:
      - name: farmId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FarmId'
      - name: queueId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/QueueId'
      - name: queueEnvironmentId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/QueueEnvironmentId'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetQueueEnvironment
      description: |-
        Gets a queue environment.
      parameters:
      - name: farmId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FarmId'
      - name: queueId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/QueueId'
      - name: queueEnvironmentId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/QueueEnvironmentId'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    patch:
      operationId: UpdateQueueEnvironment
      description: |-
        Updates the queue environment.
      parameters:
      - name: X-Amz-Client-Token
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/ClientToken'
      - name: farmId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FarmId'
      - name: queueId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/QueueId'
      - name: queueEnvironmentId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/QueueEnvironmentId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                priority:
                  $ref: '#/components/schemas/Priority'
                templateType:
                  $ref: '#/components/schemas/EnvironmentTemplateType'
                template:
                  $ref: '#/components/schemas/EnvironmentTemplate'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /2023-10-12/farms/{farmId}/queue-fleet-associations/{queueId}/{fleetId}:
    delete:
      operationId: DeleteQueueFleetAssociation
      description: |-
        Deletes a queue-fleet association.
      parameters:
      - name: farmId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FarmId'
      - name: queueId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/QueueId'
      - name: fleetId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FleetId'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Your request has conflicting operations. This can occur if you're trying to perform more than one operation on the same resource at the same time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetQueueFleetAssociation
      description: |-
        Gets a queue-fleet association.
      parameters:
      - name: farmId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FarmId'
      - name: queueId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/QueueId'
      - name: fleetId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FleetId'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    patch:
      operationId: UpdateQueueFleetAssociation
      description: |-
        Updates a queue-fleet association.
      parameters:
      - name: farmId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FarmId'
      - name: queueId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/QueueId'
      - name: fleetId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FleetId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  $ref: '#/components/schemas/UpdateQueueFleetAssociationStatus'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /2023-10-12/farms/{farmId}/queue-limit-associations/{queueId}/{limitId}:
    delete:
      operationId: DeleteQueueLimitAssociation
      description: |-
        Removes the association between a queue and a limit. You must use the `UpdateQueueLimitAssociation` operation to set the status to `STOP_LIMIT_USAGE_AND_COMPLETE_TASKS` or `STOP_LIMIT_USAGE_AND_CANCEL_TASKS`. The status does not change immediately. Use the `GetQueueLimitAssociation` operation to see if the status changed to `STOPPED` before deleting the association.
      parameters:
      - name: farmId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FarmId'
      - name: queueId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/QueueId'
      - name: limitId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/LimitId'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Your request has conflicting operations. This can occur if you're trying to perform more than one operation on the same resource at the same time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetQueueLimitAssociation
      description: |-
        Gets information about a specific association between a queue and a limit.
      parameters:
      - name: farmId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FarmId'
      - name: queueId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/QueueId'
      - name: limitId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/LimitId'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    patch:
      operationId: UpdateQueueLimitAssociation
      description: |-
        Updates the status of the queue. If you set the status to one of the `STOP_LIMIT_USAGE*` values, there will be a delay before the status transitions to the `STOPPED` state.
      parameters:
      - name: farmId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FarmId'
      - name: queueId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/QueueId'
      - name: limitId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/LimitId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  $ref: '#/components/schemas/UpdateQueueLimitAssociationStatus'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /2023-10-12/farms/{farmId}/storage-profiles/{storageProfileId}:
    delete:
      operationId: DeleteStorageProfile
      description: |-
        Deletes a storage profile.
      parameters:
      - name: farmId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FarmId'
      - name: storageProfileId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/StorageProfileId'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetStorageProfile
      description: |-
        Gets a storage profile.
      parameters:
      - name: farmId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FarmId'
      - name: storageProfileId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/StorageProfileId'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    patch:
      operationId: UpdateStorageProfile
      description: |-
        Updates a storage profile.
      parameters:
      - name: X-Amz-Client-Token
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/ClientToken'
      - name: farmId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FarmId'
      - name: storageProfileId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/StorageProfileId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                displayName:
                  $ref: '#/components/schemas/ResourceName'
                osFamily:
                  $ref: '#/components/schemas/StorageProfileOperatingSystemFamily'
                fileSystemLocationsToAdd:
                  $ref: '#/components/schemas/FileSystemLocationsList'
                fileSystemLocationsToRemove:
                  $ref: '#/components/schemas/FileSystemLocationsList'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /2023-10-12/farms/{farmId}/fleets/{fleetId}/workers/{workerId}:
    delete:
      operationId: DeleteWorker
      description: |-
        Deletes a worker.
      parameters:
      - name: farmId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FarmId'
      - name: fleetId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FleetId'
      - name: workerId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/WorkerId'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Your request has conflicting operations. This can occur if you're trying to perform more than one operation on the same resource at the same time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetWorker
      description: |-
        Gets a worker.
      parameters:
      - name: farmId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FarmId'
      - name: fleetId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FleetId'
      - name: workerId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/WorkerId'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    patch:
      operationId: UpdateWorker
      description: |-
        Updates a worker.
      parameters:
      - name: farmId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FarmId'
      - name: fleetId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FleetId'
      - name: workerId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/WorkerId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  $ref: '#/components/schemas/UpdatedWorkerStatus'
                capabilities:
                  $ref: '#/components/schemas/WorkerCapabilities'
                hostProperties:
                  $ref: '#/components/schemas/HostPropertiesRequest'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Your request has conflicting operations. This can occur if you're trying to perform more than one operation on the same resource at the same time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /2023-10-12/farms/{farmId}/queues/{queueId}/jobs/{jobId}:
    get:
      operationId: GetJob
      description: |-
        Gets a Deadline Cloud job.
      parameters:
      - name: farmId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FarmId'
      - name: queueId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/QueueId'
      - name: jobId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/JobId'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    patch:
      operationId: UpdateJob
      description: |-
        Updates a job.

        When you change the status of the job to `ARCHIVED`, the job can't be scheduled or archived.

        An archived jobs and its steps and tasks are deleted after 120 days. The job can't be recovered.
      parameters:
      - name: X-Amz-Client-Token
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/ClientToken'
      - name: farmId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FarmId'
      - name: queueId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/QueueId'
      - name: jobId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/JobId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                targetTaskRunStatus:
                  $ref: '#/components/schemas/JobTargetTaskRunStatus'
                priority:
                  $ref: '#/components/schemas/JobPriority'
                maxFailedTasksCount:
                  $ref: '#/components/schemas/MaxFailedTasksCount'
                maxRetriesPerTask:
                  $ref: '#/components/schemas/MaxRetriesPerTask'
                lifecycleStatus:
                  $ref: '#/components/schemas/UpdateJobLifecycleStatus'
                maxWorkerCount:
                  $ref: '#/components/schemas/MaxWorkerCount'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Your request has conflicting operations. This can occur if you're trying to perform more than one operation on the same resource at the same time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /2023-10-12/farms/{farmId}/queues/{queueId}/jobs/{jobId}/sessions/{sessionId}:
    get:
      operationId: GetSession
      description: |-
        Gets a session.
      parameters:
      - name: farmId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FarmId'
      - name: queueId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/QueueId'
      - name: jobId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/JobId'
      - name: sessionId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/SessionId'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    patch:
      operationId: UpdateSession
      description: |-
        Updates a session.
      parameters:
      - name: X-Amz-Client-Token
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/ClientToken'
      - name: farmId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FarmId'
      - name: queueId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/QueueId'
      - name: jobId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/JobId'
      - name: sessionId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/SessionId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                targetLifecycleStatus:
                  $ref: '#/components/schemas/SessionLifecycleTargetStatus'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Your request has conflicting operations. This can occur if you're trying to perform more than one operation on the same resource at the same time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /2023-10-12/farms/{farmId}/queues/{queueId}/jobs/{jobId}/session-actions/{sessionActionId}:
    get:
      operationId: GetSessionAction
      description: |-
        Gets a session action for the job.
      parameters:
      - name: farmId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FarmId'
      - name: queueId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/QueueId'
      - name: jobId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/JobId'
      - name: sessionActionId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/SessionActionId'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /2023-10-12/farms/{farmId}/sessions-statistics-aggregation:
    get:
      operationId: GetSessionsStatisticsAggregation
      description: |-
        Gets a set of statistics for queues or farms. Before you can call the `GetSessionStatisticsAggregation` operation, you must first call the `StartSessionsStatisticsAggregation` operation. Statistics are available for 1 hour after you call the `StartSessionsStatisticsAggregation` operation.
      parameters:
      - name: farmId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FarmId'
      - name: aggregationId
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/AggregationId'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    post:
      operationId: StartSessionsStatisticsAggregation
      description: |-
        Starts an asynchronous request for getting aggregated statistics about queues and farms. Get the statistics using the `GetSessionsStatisticsAggregation` operation. You can only have one running aggregation for your Deadline Cloud farm. Call the `GetSessionsStatisticsAggregation` operation and check the `status` field to see if an aggregation is running. Statistics are available for 1 hour after you call the `StartSessionsStatisticsAggregation` operation.
      parameters:
      - name: farmId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FarmId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resourceIds:
                  $ref: '#/components/schemas/SessionsStatisticsResources'
                startTime:
                  $ref: '#/components/schemas/Timestamp'
                endTime:
                  $ref: '#/components/schemas/Timestamp'
                timezone:
                  $ref: '#/components/schemas/Timezone'
                period:
                  $ref: '#/components/schemas/Period'
                groupBy:
                  $ref: '#/components/schemas/UsageGroupBy'
                statistics:
                  $ref: '#/components/schemas/UsageStatistics'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /2023-10-12/farms/{farmId}/queues/{queueId}/jobs/{jobId}/steps/{stepId}:
    get:
      operationId: GetStep
      description: |-
        Gets a step.
      parameters:
      - name: farmId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FarmId'
      - name: queueId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/QueueId'
      - name: jobId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/JobId'
      - name: stepId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/StepId'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    patch:
      operationId: UpdateStep
      description: |-
        Updates a step.
      parameters:
      - name: X-Amz-Client-Token
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/ClientToken'
      - name: farmId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FarmId'
      - name: queueId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/QueueId'
      - name: jobId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/JobId'
      - name: stepId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/StepId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                targetTaskRunStatus:
                  $ref: '#/components/schemas/StepTargetTaskRunStatus'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Your request has conflicting operations. This can occur if you're trying to perform more than one operation on the same resource at the same time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /2023-10-12/farms/{farmId}/queues/{queueId}/storage-profiles/{storageProfileId}:
    get:
      operationId: GetStorageProfileForQueue
      description: |-
        Gets a storage profile for a queue.
      parameters:
      - name: farmId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FarmId'
      - name: queueId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/QueueId'
      - name: storageProfileId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/StorageProfileId'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /2023-10-12/farms/{farmId}/queues/{queueId}/jobs/{jobId}/steps/{stepId}/tasks/{taskId}:
    get:
      operationId: GetTask
      description: |-
        Gets a task.
      parameters:
      - name: farmId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FarmId'
      - name: queueId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/QueueId'
      - name: jobId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/JobId'
      - name: stepId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/StepId'
      - name: taskId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TaskId'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    patch:
      operationId: UpdateTask
      description: |-
        Updates a task.
      parameters:
      - name: X-Amz-Client-Token
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/ClientToken'
      - name: farmId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FarmId'
      - name: queueId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/QueueId'
      - name: jobId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/JobId'
      - name: stepId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/StepId'
      - name: taskId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TaskId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                targetRunStatus:
                  $ref: '#/components/schemas/TaskTargetRunStatus'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Your request has conflicting operations. This can occur if you're trying to perform more than one operation on the same resource at the same time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /2023-10-12/metered-products:
    get:
      operationId: ListAvailableMeteredProducts
      description: |-
        A list of the available metered products.
      parameters:
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /2023-10-12/farms/{farmId}/members:
    get:
      operationId: ListFarmMembers
      description: |-
        Lists the members of a farm.
      parameters:
      - name: farmId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FarmId'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /2023-10-12/farms/{farmId}/fleets/{fleetId}/members:
    get:
      operationId: ListFleetMembers
      description: |-
        Lists fleet members.
      parameters:
      - name: farmId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FarmId'
      - name: fleetId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FleetId'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /2023-10-12/farms/{farmId}/queues/{queueId}/jobs/{jobId}/members:
    get:
      operationId: ListJobMembers
      description: |-
        Lists members on a job.
      parameters:
      - name: farmId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FarmId'
      - name: queueId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/QueueId'
      - name: jobId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/JobId'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /2023-10-12/farms/{farmId}/queues/{queueId}/jobs/{jobId}/parameter-definitions:
    get:
      operationId: ListJobParameterDefinitions
      description: |-
        Lists parameter definitions of a job.
      parameters:
      - name: farmId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FarmId'
      - name: jobId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/JobId'
      - name: queueId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/QueueId'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /2023-10-12/license-endpoints/{licenseEndpointId}/metered-products:
    get:
      operationId: ListMeteredProducts
      description: |-
        Lists metered products.
      parameters:
      - name: licenseEndpointId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/LicenseEndpointId'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /2023-10-12/farms/{farmId}/queues/{queueId}/members:
    get:
      operationId: ListQueueMembers
      description: |-
        Lists the members in a queue.
      parameters:
      - name: farmId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FarmId'
      - name: queueId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/QueueId'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /2023-10-12/farms/{farmId}/queues/{queueId}/jobs/{jobId}/session-actions:
    get:
      operationId: ListSessionActions
      description: |-
        Lists session actions.
      parameters:
      - name: farmId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FarmId'
      - name: queueId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/QueueId'
      - name: jobId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/JobId'
      - name: sessionId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/SessionId'
      - name: taskId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/TaskId'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /2023-10-12/farms/{farmId}/queues/{queueId}/jobs/{jobId}/sessions:
    get:
      operationId: ListSessions
      description: |-
        Lists sessions.
      parameters:
      - name: farmId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FarmId'
      - name: queueId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/QueueId'
      - name: jobId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/JobId'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /2023-10-12/farms/{farmId}/fleets/{fleetId}/workers/{workerId}/sessions:
    get:
      operationId: ListSessionsForWorker
      description: |-
        Lists sessions for a worker.
      parameters:
      - name: farmId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FarmId'
      - name: fleetId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FleetId'
      - name: workerId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/WorkerId'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /2023-10-12/farms/{farmId}/queues/{queueId}/jobs/{jobId}/steps/{stepId}/consumers:
    get:
      operationId: ListStepConsumers
      description: |-
        Lists step consumers.
      parameters:
      - name: farmId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FarmId'
      - name: queueId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/QueueId'
      - name: jobId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/JobId'
      - name: stepId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/StepId'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Integer'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /2023-10-12/farms/{farmId}/queues/{queueId}/jobs/{jobId}/steps/{stepId}/dependencies:
    get:
      operationId: ListStepDependencies
      description: |-
        Lists the dependencies for a step.
      parameters:
      - name: farmId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FarmId'
      - name: queueId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/QueueId'
      - name: jobId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/JobId'
      - name: stepId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/StepId'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Integer'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /2023-10-12/farms/{farmId}/queues/{queueId}/jobs/{jobId}/steps:
    get:
      operationId: ListSteps
      description: |-
        Lists steps for a job.
      parameters:
      - name: farmId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FarmId'
      - name: queueId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/QueueId'
      - name: jobId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/JobId'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /2023-10-12/farms/{farmId}/queues/{queueId}/storage-profiles:
    get:
      operationId: ListStorageProfilesForQueue
      description: |-
        Lists storage profiles for a queue.
      parameters:
      - name: farmId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FarmId'
      - name: queueId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/QueueId'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /2023-10-12/tags/{resourceArn}:
    get:
      operationId: ListTagsForResource
      description: |-
        Lists tags for a resource.
      parameters:
      - name: resourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    post:
      operationId: TagResource
      description: |-
        Tags a resource using the resource's ARN and desired tags.
      parameters:
      - name: resourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tags:
                  $ref: '#/components/schemas/Tags'
      responses:
        '204': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Your request has conflicting operations. This can occur if you're trying to perform more than one operation on the same resource at the same time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    delete:
      operationId: UntagResource
      description: |-
        Removes a tag from a resource using the resource's ARN and tag to remove.
      parameters:
      - name: resourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: tagKeys
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/StringList'
      responses:
        '204': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Your request has conflicting operations. This can occur if you're trying to perform more than one operation on the same resource at the same time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /2023-10-12/farms/{farmId}/queues/{queueId}/jobs/{jobId}/steps/{stepId}/tasks:
    get:
      operationId: ListTasks
      description: |-
        Lists tasks for a job.
      parameters:
      - name: farmId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FarmId'
      - name: queueId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/QueueId'
      - name: jobId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/JobId'
      - name: stepId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/StepId'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /2023-10-12/farms/{farmId}/search/jobs:
    post:
      operationId: SearchJobs
      description: |-
        Searches for jobs.
      parameters:
      - name: farmId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FarmId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                queueIds:
                  $ref: '#/components/schemas/QueueIds'
                filterExpressions:
                  $ref: '#/components/schemas/SearchGroupedFilterExpressions'
                sortExpressions:
                  $ref: '#/components/schemas/SearchSortExpressions'
                itemOffset:
                  $ref: '#/components/schemas/Integer'
                pageSize:
                  $ref: '#/components/schemas/Integer'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /2023-10-12/farms/{farmId}/search/steps:
    post:
      operationId: SearchSteps
      description: |-
        Searches for steps.
      parameters:
      - name: farmId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FarmId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                queueIds:
                  $ref: '#/components/schemas/QueueIds'
                jobId:
                  $ref: '#/components/schemas/JobId'
                filterExpressions:
                  $ref: '#/components/schemas/SearchGroupedFilterExpressions'
                sortExpressions:
                  $ref: '#/components/schemas/SearchSortExpressions'
                itemOffset:
                  $ref: '#/components/schemas/Integer'
                pageSize:
                  $ref: '#/components/schemas/Integer'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /2023-10-12/farms/{farmId}/search/tasks:
    post:
      operationId: SearchTasks
      description: |-
        Searches for tasks.
      parameters:
      - name: farmId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FarmId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                queueIds:
                  $ref: '#/components/schemas/QueueIds'
                jobId:
                  $ref: '#/components/schemas/JobId'
                filterExpressions:
                  $ref: '#/components/schemas/SearchGroupedFilterExpressions'
                sortExpressions:
                  $ref: '#/components/schemas/SearchSortExpressions'
                itemOffset:
                  $ref: '#/components/schemas/Integer'
                pageSize:
                  $ref: '#/components/schemas/Integer'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /2023-10-12/farms/{farmId}/search/workers:
    post:
      operationId: SearchWorkers
      description: |-
        Searches for workers.
      parameters:
      - name: farmId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FarmId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fleetIds:
                  $ref: '#/components/schemas/FleetIds'
                filterExpressions:
                  $ref: '#/components/schemas/SearchGroupedFilterExpressions'
                sortExpressions:
                  $ref: '#/components/schemas/SearchSortExpressions'
                itemOffset:
                  $ref: '#/components/schemas/Integer'
                pageSize:
                  $ref: '#/components/schemas/Integer'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /2023-10-12/farms/{farmId}/fleets/{fleetId}/workers/{workerId}/schedule:
    patch:
      operationId: UpdateWorkerSchedule
      description: |-
        Updates the schedule for a worker.
      parameters:
      - name: farmId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FarmId'
      - name: fleetId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FleetId'
      - name: workerId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/WorkerId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                updatedSessionActions:
                  $ref: '#/components/schemas/UpdatedSessionActions'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permission to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Your request has conflicting operations. This can occur if you're trying to perform more than one operation on the same resource at the same time.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Deadline Cloud can't process your request right now. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            The requested resource can't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Your request exceeded a request rate quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request isn't valid. This can occur if your request contains malformed JSON or unsupported characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
components:
  schemas:
    StructureIdList:
      type: array
      items:
        type: string
    AcceleratorCapabilities:
      type: object
      properties:
        selections:
          allOf:
          - $ref: '#/components/schemas/AcceleratorSelections'
          description: A list of accelerator capabilities requested for this fleet.
            Only Amazon Elastic Compute Cloud instances that provide these capabilities
            will be used. For example, if you specify both L4 and T4 chips, Deadline
            Cloud will use Amazon EC2 instances that have either the L4 or the T4
            chip installed.
        count:
          allOf:
          - $ref: '#/components/schemas/AcceleratorCountRange'
          description: The number of GPU accelerators specified for worker hosts in
            this fleet.
      required:
      - selections
      description: Provides information about the GPU accelerators used for jobs processed
        by a fleet.
    AcceleratorCountRange:
      type: object
      properties:
        min:
          allOf:
          - $ref: '#/components/schemas/MinZeroMaxInteger'
          description: The minimum number of GPU accelerators in the worker host.
        max:
          allOf:
          - $ref: '#/components/schemas/MinZeroMaxInteger'
          description: The maximum number of GPU accelerators in the worker host.
      required:
      - min
      description: Defines the maximum and minimum number of GPU accelerators required
        for a worker instance..
    AcceleratorName:
      type: string
      enum:
      - t4
      - a10g
      - l4
      - l40s
    AcceleratorRuntime:
      type: string
      minLength: 1
      maxLength: 100
    AcceleratorSelection:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/AcceleratorName'
          description: "The name of the chip used by the GPU accelerator.\n\nIf you\
            \ specify `l4` as the name of the accelerator, you must specify `latest`\
            \ or `grid:r550` as the runtime.\n\nThe available GPU accelerators are:\n\
            \n  * `t4` \\- NVIDIA T4 Tensor Core GPU\n\n  * `a10g` \\- NVIDIA A10G\
            \ Tensor Core GPU\n\n  * `l4` \\- NVIDIA L4 Tensor Core GPU\n\n  * `l40s`\
            \ \\- NVIDIA L40S Tensor Core GPU"
        runtime:
          allOf:
          - $ref: '#/components/schemas/AcceleratorRuntime'
          description: "Specifies the runtime driver to use for the GPU accelerator.\
            \ You must use the same runtime for all GPUs.\n\nYou can choose from the\
            \ following runtimes:\n\n  * `latest` \\- Use the latest runtime available\
            \ for the chip. If you specify `latest` and a new version of the runtime\
            \ is released, the new version of the runtime is used.\n\n  * `grid:r550`\
            \ \\- [NVIDIA vGPU software 17](https://docs.nvidia.com/vgpu/17.0/index.html)\n\
            \n  * `grid:r535` \\- [NVIDIA vGPU software 16](https://docs.nvidia.com/vgpu/16.0/index.html)\n\
            \nIf you don't specify a runtime, Deadline Cloud uses `latest` as the\
            \ default. However, if you have multiple accelerators and specify `latest`\
            \ for some and leave others blank, Deadline Cloud raises an exception."
      required:
      - name
      description: Describes a specific GPU accelerator required for an Amazon Elastic
        Compute Cloud worker host.
    AcceleratorSelections:
      type: array
      items:
        $ref: '#/components/schemas/AcceleratorSelection'
    AcceleratorTotalMemoryMiBRange:
      type: object
      properties:
        min:
          allOf:
          - $ref: '#/components/schemas/MinZeroMaxInteger'
          description: The minimum amount of memory to use for the accelerator, measured
            in MiB.
        max:
          allOf:
          - $ref: '#/components/schemas/MinZeroMaxInteger'
          description: The maximum amount of memory to use for the accelerator, measured
            in MiB.
      required:
      - min
      description: Defines the maximum and minimum amount of memory, in MiB, to use
        for the accelerator.
    AcceleratorType:
      type: string
      enum:
      - gpu
    AcceleratorTypes:
      type: array
      items:
        $ref: '#/components/schemas/AcceleratorType'
    AccessDeniedException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
        context:
          allOf:
          - $ref: '#/components/schemas/ExceptionContext'
          description: Information about the resources in use when the exception was
            thrown.
      required:
      - message
      description: You don't have permission to perform the action.
    AccessKeyId:
      type: string
    AcquiredLimit:
      type: object
      properties:
        limitId:
          allOf:
          - $ref: '#/components/schemas/LimitId'
          description: The unique identifier of the limit.
        count:
          allOf:
          - $ref: '#/components/schemas/MinOneMaxInteger'
          description: The number of limit resources used.
      required:
      - limitId
      - count
      description: Provides information about the number of resources used.
    AcquiredLimits:
      type: array
      items:
        $ref: '#/components/schemas/AcquiredLimit'
    AggregationId:
      type: string
      pattern: ^[0-9a-f]{32}$
    AllowedStorageProfileIds:
      type: array
      items:
        $ref: '#/components/schemas/StorageProfileId'
    AmountCapabilityName:
      type: string
      pattern: ^([a-zA-Z][a-zA-Z0-9]{0,63}:)?amount(\.[a-zA-Z][a-zA-Z0-9]{0,63})+$
      minLength: 1
      maxLength: 100
    AmountRequirementName:
      type: string
      maxLength: 1024
    AssignedEnvironmentEnterSessionActionDefinition:
      type: object
      properties:
        environmentId:
          allOf:
          - $ref: '#/components/schemas/EnvironmentId'
          description: The environment ID of the assigned environment at the start
            of a session.
      required:
      - environmentId
      description: The assigned starting environment for a worker during session.
    AssignedEnvironmentExitSessionActionDefinition:
      type: object
      properties:
        environmentId:
          allOf:
          - $ref: '#/components/schemas/EnvironmentId'
          description: The environment ID of the assigned environment when exiting
            a session.
      required:
      - environmentId
      description: The assigned environment when a worker exits a session.
    AssignedSession:
      type: object
      properties:
        queueId:
          allOf:
          - $ref: '#/components/schemas/QueueId'
          description: The queue ID of the assigned session.
        jobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          description: The job ID for the assigned session.
        sessionActions:
          allOf:
          - $ref: '#/components/schemas/AssignedSessionActions'
          description: The session actions to apply to the assigned session.
        logConfiguration:
          allOf:
          - $ref: '#/components/schemas/LogConfiguration'
          description: The log configuration for the worker's assigned session.
      required:
      - queueId
      - jobId
      - sessionActions
      - logConfiguration
      description: The assigned session for the worker.
    AssignedSessionAction:
      type: object
      properties:
        sessionActionId:
          allOf:
          - $ref: '#/components/schemas/SessionActionId'
          description: The session action ID for the assigned session.
        definition:
          allOf:
          - $ref: '#/components/schemas/AssignedSessionActionDefinition'
          description: The definition of the assigned session action.
      required:
      - sessionActionId
      - definition
      description: The action for a session defined by the session action ID.
    AssignedSessionActionDefinition:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/AssignedEnvironmentEnterSessionActionDefinition'
        description: |-
          The environment a session starts on.
      - allOf:
        - $ref: '#/components/schemas/AssignedEnvironmentExitSessionActionDefinition'
        description: |-
          The environment a session exits from.
      - allOf:
        - $ref: '#/components/schemas/AssignedTaskRunSessionActionDefinition'
        description: |-
          The task run.
      - allOf:
        - $ref: '#/components/schemas/AssignedSyncInputJobAttachmentsSessionActionDefinition'
        description: |-
          The job attachment to sync with an assigned session action.
      description: |-
        The definition of the assigned session action.
    AssignedSessionActions:
      type: array
      items:
        $ref: '#/components/schemas/AssignedSessionAction'
    AssignedSessions:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/AssignedSession'
    AssignedSyncInputJobAttachmentsSessionActionDefinition:
      type: object
      properties:
        stepId:
          allOf:
          - $ref: '#/components/schemas/StepId'
          description: The step ID.
      description: The details for an assigned session action as it relates to a job
        attachment.
    AssignedTaskRunSessionActionDefinition:
      type: object
      properties:
        taskId:
          allOf:
          - $ref: '#/components/schemas/TaskId'
          description: The task ID.
        stepId:
          allOf:
          - $ref: '#/components/schemas/StepId'
          description: The step ID.
        parameters:
          allOf:
          - $ref: '#/components/schemas/TaskParameters'
          description: The parameters to include.
      required:
      - stepId
      - parameters
      description: The specific task, step, and parameters to include.
    AssociateMemberToFarmRequest:
      type: object
      properties:
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The ID of the farm to associate with the member.
        principalId:
          allOf:
          - $ref: '#/components/schemas/IdentityCenterPrincipalId'
          description: The member's principal ID to associate with the farm.
        principalType:
          allOf:
          - $ref: '#/components/schemas/DeadlinePrincipalType'
          description: The principal type of the member to associate with the farm.
        identityStoreId:
          allOf:
          - $ref: '#/components/schemas/IdentityStoreId'
          description: The identity store ID of the member to associate with the farm.
        membershipLevel:
          allOf:
          - $ref: '#/components/schemas/MembershipLevel'
          description: The principal's membership level for the associated farm.
      required:
      - farmId
      - principalId
      - principalType
      - identityStoreId
      - membershipLevel
    AssociateMemberToFarmResponse:
      type: object
      properties: {}
    AssociateMemberToFleetRequest:
      type: object
      properties:
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The farm ID of the fleet to associate with the member.
        fleetId:
          allOf:
          - $ref: '#/components/schemas/FleetId'
          description: The ID of the fleet to associate with a member.
        principalId:
          allOf:
          - $ref: '#/components/schemas/IdentityCenterPrincipalId'
          description: The member's principal ID to associate with a fleet.
        principalType:
          allOf:
          - $ref: '#/components/schemas/DeadlinePrincipalType'
          description: The member's principal type to associate with the fleet.
        identityStoreId:
          allOf:
          - $ref: '#/components/schemas/IdentityStoreId'
          description: The member's identity store ID to associate with the fleet.
        membershipLevel:
          allOf:
          - $ref: '#/components/schemas/MembershipLevel'
          description: The principal's membership level for the associated fleet.
      required:
      - farmId
      - fleetId
      - principalId
      - principalType
      - identityStoreId
      - membershipLevel
    AssociateMemberToFleetResponse:
      type: object
      properties: {}
    AssociateMemberToJobRequest:
      type: object
      properties:
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The farm ID of the job to associate with the member.
        queueId:
          allOf:
          - $ref: '#/components/schemas/QueueId'
          description: The queue ID to associate to the member.
        jobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          description: The job ID to associate with the member.
        principalId:
          allOf:
          - $ref: '#/components/schemas/IdentityCenterPrincipalId'
          description: The member's principal ID to associate with the job.
        principalType:
          allOf:
          - $ref: '#/components/schemas/DeadlinePrincipalType'
          description: The member's principal type to associate with the job.
        identityStoreId:
          allOf:
          - $ref: '#/components/schemas/IdentityStoreId'
          description: The member's identity store ID to associate with the job.
        membershipLevel:
          allOf:
          - $ref: '#/components/schemas/MembershipLevel'
          description: The principal's membership level for the associated job.
      required:
      - farmId
      - queueId
      - jobId
      - principalId
      - principalType
      - identityStoreId
      - membershipLevel
    AssociateMemberToJobResponse:
      type: object
      properties: {}
    AssociateMemberToQueueRequest:
      type: object
      properties:
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The farm ID of the queue to associate with the member.
        queueId:
          allOf:
          - $ref: '#/components/schemas/QueueId'
          description: The ID of the queue to associate to the member.
        principalId:
          allOf:
          - $ref: '#/components/schemas/IdentityCenterPrincipalId'
          description: The member's principal ID to associate with the queue.
        principalType:
          allOf:
          - $ref: '#/components/schemas/DeadlinePrincipalType'
          description: The member's principal type to associate with the queue.
        identityStoreId:
          allOf:
          - $ref: '#/components/schemas/IdentityStoreId'
          description: The member's identity store ID to associate with the queue.
        membershipLevel:
          allOf:
          - $ref: '#/components/schemas/MembershipLevel'
          description: The principal's membership level for the associated queue.
      required:
      - farmId
      - queueId
      - principalId
      - principalType
      - identityStoreId
      - membershipLevel
    AssociateMemberToQueueResponse:
      type: object
      properties: {}
    AssumeFleetRoleForReadRequest:
      type: object
      properties:
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The farm ID for the fleet's farm.
        fleetId:
          allOf:
          - $ref: '#/components/schemas/FleetId'
          description: The fleet ID.
      required:
      - farmId
      - fleetId
    AssumeFleetRoleForReadResponse:
      type: object
      properties:
        credentials:
          allOf:
          - $ref: '#/components/schemas/AwsCredentials'
          description: The credentials for the fleet role.
      required:
      - credentials
    AssumeFleetRoleForWorkerRequest:
      type: object
      properties:
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The farm ID for the fleet's farm.
        fleetId:
          allOf:
          - $ref: '#/components/schemas/FleetId'
          description: The fleet ID that contains the worker.
        workerId:
          allOf:
          - $ref: '#/components/schemas/WorkerId'
          description: The ID of the worker assuming the fleet role.
      required:
      - farmId
      - fleetId
      - workerId
    AssumeFleetRoleForWorkerResponse:
      type: object
      properties:
        credentials:
          allOf:
          - $ref: '#/components/schemas/AwsCredentials'
          description: The credentials for the worker.
      required:
      - credentials
    AssumeQueueRoleForReadRequest:
      type: object
      properties:
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The farm ID of the farm containing the queue.
        queueId:
          allOf:
          - $ref: '#/components/schemas/QueueId'
          description: The queue ID.
      required:
      - farmId
      - queueId
    AssumeQueueRoleForReadResponse:
      type: object
      properties:
        credentials:
          allOf:
          - $ref: '#/components/schemas/AwsCredentials'
          description: The credentials for the queue role.
      required:
      - credentials
    AssumeQueueRoleForUserRequest:
      type: object
      properties:
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The farm ID of the queue that the user assumes the role for.
        queueId:
          allOf:
          - $ref: '#/components/schemas/QueueId'
          description: The queue ID of the queue that the user assumes the role for.
      required:
      - farmId
      - queueId
    AssumeQueueRoleForUserResponse:
      type: object
      properties:
        credentials:
          allOf:
          - $ref: '#/components/schemas/AwsCredentials'
          description: The credentials for the queue role that a user has access to.
      required:
      - credentials
    AssumeQueueRoleForWorkerRequest:
      type: object
      properties:
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The farm ID of the worker assuming the queue role.
        fleetId:
          allOf:
          - $ref: '#/components/schemas/FleetId'
          description: The fleet ID of the worker assuming the queue role.
        workerId:
          allOf:
          - $ref: '#/components/schemas/WorkerId'
          description: The worker ID of the worker assuming the queue role.
        queueId:
          allOf:
          - $ref: '#/components/schemas/QueueId'
          description: The queue ID of the worker assuming the queue role.
      required:
      - farmId
      - fleetId
      - workerId
      - queueId
    AssumeQueueRoleForWorkerResponse:
      type: object
      properties:
        credentials:
          allOf:
          - $ref: '#/components/schemas/AwsCredentials'
          description: The Amazon Web Services credentials for the role that the worker
            is assuming.
    Attachments:
      type: object
      properties:
        manifests:
          allOf:
          - $ref: '#/components/schemas/ManifestPropertiesList'
          description: A list of manifests which describe job attachment configurations.
        fileSystem:
          allOf:
          - $ref: '#/components/schemas/JobAttachmentsFileSystem'
          description: The file system.
      required:
      - manifests
      description: The attachments for jobs.
    AttributeCapabilityName:
      type: string
      pattern: ^([a-zA-Z][a-zA-Z0-9]{0,63}:)?attr(\.[a-zA-Z][a-zA-Z0-9]{0,63})+$
      minLength: 1
      maxLength: 100
    AttributeCapabilityValue:
      type: string
      pattern: ^[a-zA-Z_]([a-zA-Z0-9_\-]{0,99})$
      minLength: 1
      maxLength: 100
    AttributeCapabilityValuesList:
      type: array
      items:
        $ref: '#/components/schemas/AttributeCapabilityValue'
    AutoScalingMode:
      type: string
      enum:
      - NO_SCALING
      - EVENT_BASED_AUTO_SCALING
    AutoScalingStatus:
      type: string
      enum:
      - GROWING
      - STEADY
      - SHRINKING
    AwsCredentials:
      type: object
      properties:
        accessKeyId:
          allOf:
          - $ref: '#/components/schemas/AccessKeyId'
          description: The IAM access key ID.
        secretAccessKey:
          allOf:
          - $ref: '#/components/schemas/SecretAccessKey'
          description: The IAM secret access key.
        sessionToken:
          allOf:
          - $ref: '#/components/schemas/SessionToken'
          description: The IAM session token
        expiration:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The expiration date and time of the IAM credentials.
      required:
      - accessKeyId
      - secretAccessKey
      - sessionToken
      - expiration
      description: The Identity and Access Management credentials.
    BatchGetJobEntityErrors:
      type: array
      items:
        $ref: '#/components/schemas/GetJobEntityError'
    BatchGetJobEntityList:
      type: array
      items:
        $ref: '#/components/schemas/JobEntity'
    BatchGetJobEntityRequest:
      type: object
      properties:
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The farm ID of the worker that's fetching job details. The
            worker must have an assignment on a job to fetch job details.
        fleetId:
          allOf:
          - $ref: '#/components/schemas/FleetId'
          description: The fleet ID of the worker that's fetching job details. The
            worker must have an assignment on a job to fetch job details.
        workerId:
          allOf:
          - $ref: '#/components/schemas/WorkerId'
          description: The worker ID of the worker containing the job details to get.
        identifiers:
          allOf:
          - $ref: '#/components/schemas/JobEntityIdentifiers'
          description: The job identifiers to include within the job entity batch
            details.
      required:
      - farmId
      - fleetId
      - workerId
      - identifiers
    BatchGetJobEntityResponse:
      type: object
      properties:
        entities:
          allOf:
          - $ref: '#/components/schemas/BatchGetJobEntityList'
          description: A list of the job entities, or details, in the batch.
        errors:
          allOf:
          - $ref: '#/components/schemas/BatchGetJobEntityErrors'
          description: A list of errors from the job error logs for the batch.
      required:
      - entities
      - errors
    BoundedString:
      type: string
      minLength: 1
      maxLength: 64
    BudgetActionToAdd:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/BudgetActionType'
          description: The type of budget action to add.
        thresholdPercentage:
          allOf:
          - $ref: '#/components/schemas/ThresholdPercentage'
          description: The percentage threshold for the budget action to add.
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: 'A description for the budget action to add.


            This field can store any content. Escape or encode this content before
            displaying it on a webpage or any other system that might interpret the
            content of this field.'
      required:
      - type
      - thresholdPercentage
      description: The budget action to add.
    BudgetActionToRemove:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/BudgetActionType'
          description: The type of budget action to remove.
        thresholdPercentage:
          allOf:
          - $ref: '#/components/schemas/ThresholdPercentage'
          description: The percentage threshold for the budget action to remove.
      required:
      - type
      - thresholdPercentage
      description: The budget action to remove.
    BudgetActionType:
      type: string
      enum:
      - STOP_SCHEDULING_AND_COMPLETE_TASKS
      - STOP_SCHEDULING_AND_CANCEL_TASKS
    BudgetActionsToAdd:
      type: array
      items:
        $ref: '#/components/schemas/BudgetActionToAdd'
    BudgetActionsToRemove:
      type: array
      items:
        $ref: '#/components/schemas/BudgetActionToRemove'
    BudgetId:
      type: string
      pattern: ^budget-[0-9a-f]{32}$
    BudgetSchedule:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/FixedBudgetSchedule'
        description: |-
          The fixed start and end time of the budget's schedule.
      description: |-
        The start and end time of the budget.
    BudgetStatus:
      type: string
      enum:
      - ACTIVE
      - INACTIVE
    BudgetSummaries:
      type: array
      items:
        $ref: '#/components/schemas/BudgetSummary'
    BudgetSummary:
      type: object
      properties:
        budgetId:
          allOf:
          - $ref: '#/components/schemas/BudgetId'
          description: The budget ID.
        usageTrackingResource:
          allOf:
          - $ref: '#/components/schemas/UsageTrackingResource'
          description: The resource used to track expenditure in the budget.
        status:
          allOf:
          - $ref: '#/components/schemas/BudgetStatus'
          description: "The status of the budget.\n\n  * `ACTIVE`–The budget is being\
            \ evaluated.\n\n  * `INACTIVE`–The budget is inactive. This can include\
            \ Expired, Canceled, or deleted Deleted statuses."
        displayName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: 'The display name of the budget summary to update.


            This field can store any content. Escape or encode this content before
            displaying it on a webpage or any other system that might interpret the
            content of this field.'
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: 'The description of the budget summary.


            This field can store any content. Escape or encode this content before
            displaying it on a webpage or any other system that might interpret the
            content of this field.'
        approximateDollarLimit:
          allOf:
          - $ref: '#/components/schemas/ConsumedUsageLimit'
          description: The approximate dollar limit of the budget.
        usages:
          allOf:
          - $ref: '#/components/schemas/ConsumedUsages'
          description: The consumed usage for the budget.
        createdBy:
          allOf:
          - $ref: '#/components/schemas/CreatedBy'
          description: The user or system that created this resource.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/CreatedAt'
          description: The date and time the resource was created.
        updatedBy:
          allOf:
          - $ref: '#/components/schemas/UpdatedBy'
          description: The user or system that updated this resource.
        updatedAt:
          allOf:
          - $ref: '#/components/schemas/UpdatedAt'
          description: The date and time the resource was updated.
      required:
      - budgetId
      - usageTrackingResource
      - status
      - displayName
      - approximateDollarLimit
      - usages
      - createdBy
      - createdAt
      description: The budget summary.
    CancelSessionActions:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/SessionActionIdList'
    ClientToken:
      type: string
      minLength: 1
      maxLength: 64
    CombinationExpression:
      type: string
      minLength: 1
      maxLength: 1280
    ComparisonOperator:
      type: string
      enum:
      - EQUAL
      - NOT_EQUAL
      - GREATER_THAN_EQUAL_TO
      - GREATER_THAN
      - LESS_THAN_EQUAL_TO
      - LESS_THAN
    CompletedStatus:
      type: string
      enum:
      - SUCCEEDED
      - FAILED
      - INTERRUPTED
      - CANCELED
      - NEVER_ATTEMPTED
    ConflictException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
        reason:
          allOf:
          - $ref: '#/components/schemas/ConflictExceptionReason'
          description: A description of the error.
        resourceId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The identifier of the resource in use.
        resourceType:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The type of the resource in use.
        context:
          allOf:
          - $ref: '#/components/schemas/ExceptionContext'
          description: Information about the resources in use when the exception was
            thrown.
      required:
      - message
      - reason
      - resourceId
      - resourceType
      description: Your request has conflicting operations. This can occur if you're
        trying to perform more than one operation on the same resource at the same
        time.
    ConflictExceptionReason:
      type: string
      enum:
      - CONFLICT_EXCEPTION
      - CONCURRENT_MODIFICATION
      - RESOURCE_ALREADY_EXISTS
      - RESOURCE_IN_USE
      - STATUS_CONFLICT
    ConsumedUsageLimit:
      type: number
      format: float
      minimum: 0.01
    ConsumedUsages:
      type: object
      properties:
        approximateDollarUsage:
          allOf:
          - $ref: '#/components/schemas/Float'
          description: The amount of the budget consumed.
      required:
      - approximateDollarUsage
      description: The consumed usage for the resource.
    CopyJobTemplateRequest:
      type: object
      properties:
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The farm ID to copy.
        jobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          description: The job ID to copy.
        queueId:
          allOf:
          - $ref: '#/components/schemas/QueueId'
          description: The queue ID to copy.
        targetS3Location:
          allOf:
          - $ref: '#/components/schemas/S3Location'
          description: The Amazon S3 bucket name and key where you would like to add
            a copy of the job template.
      required:
      - farmId
      - jobId
      - queueId
      - targetS3Location
    CopyJobTemplateResponse:
      type: object
      properties:
        templateType:
          allOf:
          - $ref: '#/components/schemas/JobTemplateType'
          description: The format of the job template, either `JSON` or `YAML`.
      required:
      - templateType
    CpuArchitectureType:
      type: string
      enum:
      - x86_64
      - arm64
    CreateBudgetRequest:
      type: object
      properties:
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: The unique token which the server uses to recognize retries
            of the same request.
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The farm ID to include in this budget.
        usageTrackingResource:
          allOf:
          - $ref: '#/components/schemas/UsageTrackingResource'
          description: The queue ID provided to this budget to track usage.
        displayName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: 'The display name of the budget.


            This field can store any content. Escape or encode this content before
            displaying it on a webpage or any other system that might interpret the
            content of this field.'
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: 'The description of the budget.


            This field can store any content. Escape or encode this content before
            displaying it on a webpage or any other system that might interpret the
            content of this field.'
        approximateDollarLimit:
          allOf:
          - $ref: '#/components/schemas/ConsumedUsageLimit'
          description: The dollar limit based on consumed usage.
        actions:
          allOf:
          - $ref: '#/components/schemas/BudgetActionsToAdd'
          description: The budget actions to specify what happens when the budget
            runs out.
        schedule:
          allOf:
          - $ref: '#/components/schemas/BudgetSchedule'
          description: The schedule to associate with this budget.
      required:
      - farmId
      - usageTrackingResource
      - displayName
      - approximateDollarLimit
      - actions
      - schedule
    CreateBudgetResponse:
      type: object
      properties:
        budgetId:
          allOf:
          - $ref: '#/components/schemas/BudgetId'
          description: The budget ID.
      required:
      - budgetId
    CreateFarmRequest:
      type: object
      properties:
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: The unique token which the server uses to recognize retries
            of the same request.
        displayName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: 'The display name of the farm.


            This field can store any content. Escape or encode this content before
            displaying it on a webpage or any other system that might interpret the
            content of this field.'
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: 'The description of the farm.


            This field can store any content. Escape or encode this content before
            displaying it on a webpage or any other system that might interpret the
            content of this field.'
        kmsKeyArn:
          allOf:
          - $ref: '#/components/schemas/KmsKeyArn'
          description: The ARN of the KMS key to use on the farm.
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: The tags to add to your farm. Each tag consists of a tag key
            and a tag value. Tag keys and values are both required, but tag values
            can be empty strings.
      required:
      - displayName
    CreateFarmResponse:
      type: object
      properties:
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The farm ID.
      required:
      - farmId
    CreateFleetRequest:
      type: object
      properties:
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: The unique token which the server uses to recognize retries
            of the same request.
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The farm ID of the farm to connect to the fleet.
        displayName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: 'The display name of the fleet.


            This field can store any content. Escape or encode this content before
            displaying it on a webpage or any other system that might interpret the
            content of this field.'
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: 'The description of the fleet.


            This field can store any content. Escape or encode this content before
            displaying it on a webpage or any other system that might interpret the
            content of this field.'
        roleArn:
          allOf:
          - $ref: '#/components/schemas/IamRoleArn'
          description: The IAM role ARN for the role that the fleet's workers will
            use.
        minWorkerCount:
          allOf:
          - $ref: '#/components/schemas/MinZeroMaxInteger'
          description: The minimum number of workers for the fleet.
        maxWorkerCount:
          allOf:
          - $ref: '#/components/schemas/MinZeroMaxInteger'
          description: The maximum number of workers for the fleet.
        configuration:
          allOf:
          - $ref: '#/components/schemas/FleetConfiguration'
          description: The configuration settings for the fleet. Customer managed
            fleets are self-managed. Service managed Amazon EC2 fleets are managed
            by Deadline Cloud.
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: Each tag consists of a tag key and a tag value. Tag keys and
            values are both required, but tag values can be empty strings.
      required:
      - farmId
      - displayName
      - roleArn
      - maxWorkerCount
      - configuration
    CreateFleetResponse:
      type: object
      properties:
        fleetId:
          allOf:
          - $ref: '#/components/schemas/FleetId'
          description: The fleet ID.
      required:
      - fleetId
    CreateJobRequest:
      type: object
      properties:
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The farm ID of the farm to connect to the job.
        queueId:
          allOf:
          - $ref: '#/components/schemas/QueueId'
          description: The ID of the queue that the job is submitted to.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: The unique token which the server uses to recognize retries
            of the same request.
        template:
          allOf:
          - $ref: '#/components/schemas/JobTemplate'
          description: The job template to use for this job.
        templateType:
          allOf:
          - $ref: '#/components/schemas/JobTemplateType'
          description: The file type for the job template.
        priority:
          allOf:
          - $ref: '#/components/schemas/JobPriority'
          description: The priority of the job. The highest priority (first scheduled)
            is 100. When two jobs have the same priority, the oldest job is scheduled
            first.
        parameters:
          allOf:
          - $ref: '#/components/schemas/JobParameters'
          description: The parameters for the job.
        attachments:
          allOf:
          - $ref: '#/components/schemas/Attachments'
          description: The attachments for the job. Attach files required for the
            job to run to a render job.
        storageProfileId:
          allOf:
          - $ref: '#/components/schemas/StorageProfileId'
          description: The storage profile ID for the storage profile to connect to
            the job.
        targetTaskRunStatus:
          allOf:
          - $ref: '#/components/schemas/CreateJobTargetTaskRunStatus'
          description: The initial job status when it is created. Jobs that are created
            with a `SUSPENDED` status will not run until manually requeued.
        maxFailedTasksCount:
          allOf:
          - $ref: '#/components/schemas/MaxFailedTasksCount'
          description: The number of task failures before the job stops running and
            is marked as `FAILED`.
        maxRetriesPerTask:
          allOf:
          - $ref: '#/components/schemas/MaxRetriesPerTask'
          description: The maximum number of retries for each task.
        maxWorkerCount:
          allOf:
          - $ref: '#/components/schemas/MaxWorkerCount'
          description: 'The maximum number of worker hosts that can concurrently process
            a job. When the `maxWorkerCount` is reached, no more workers will be assigned
            to process the job, even if the fleets assigned to the job''s queue has
            available workers.


            You can''t set the `maxWorkerCount` to 0. If you set it to -1, there is
            no maximum number of workers.


            If you don''t specify the `maxWorkerCount`, Deadline Cloud won''t throttle
            the number of workers used to process the job.'
        sourceJobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          description: The job ID for the source job.
      required:
      - farmId
      - queueId
      - priority
    CreateJobResponse:
      type: object
      properties:
        jobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          description: The job ID.
      required:
      - jobId
    CreateJobTargetTaskRunStatus:
      type: string
      enum:
      - READY
      - SUSPENDED
    CreateLicenseEndpointRequest:
      type: object
      properties:
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: The unique token which the server uses to recognize retries
            of the same request.
        vpcId:
          allOf:
          - $ref: '#/components/schemas/VpcId'
          description: The VPC (virtual private cloud) ID to use with the license
            endpoint.
        subnetIds:
          allOf:
          - $ref: '#/components/schemas/SubnetIdList'
          description: The subnet IDs.
        securityGroupIds:
          allOf:
          - $ref: '#/components/schemas/SecurityGroupIdList'
          description: The security group IDs.
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: Each tag consists of a tag key and a tag value. Tag keys and
            values are both required, but tag values can be empty strings.
      required:
      - vpcId
      - subnetIds
      - securityGroupIds
    CreateLicenseEndpointResponse:
      type: object
      properties:
        licenseEndpointId:
          allOf:
          - $ref: '#/components/schemas/LicenseEndpointId'
          description: The license endpoint ID.
      required:
      - licenseEndpointId
    CreateLimitRequest:
      type: object
      properties:
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: The unique token which the server uses to recognize retries
            of the same request.
        displayName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: 'The display name of the limit.


            This field can store any content. Escape or encode this content before
            displaying it on a webpage or any other system that might interpret the
            content of this field.'
        amountRequirementName:
          allOf:
          - $ref: '#/components/schemas/AmountRequirementName'
          description: The value that you specify as the `name` in the `amounts` field
            of the `hostRequirements` in a step of a job template to declare the limit
            requirement.
        maxCount:
          allOf:
          - $ref: '#/components/schemas/MaxCount'
          description: 'The maximum number of resources constrained by this limit.
            When all of the resources are in use, steps that require the limit won''t
            be scheduled until the resource is available.


            The `maxCount` must not be 0. If the value is -1, there is no restriction
            on the number of resources that can be acquired for this limit.'
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The farm ID of the farm that contains the limit.
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: 'A description of the limit. A description helps you identify
            the purpose of the limit.


            This field can store any content. Escape or encode this content before
            displaying it on a webpage or any other system that might interpret the
            content of this field.'
      required:
      - displayName
      - amountRequirementName
      - maxCount
      - farmId
    CreateLimitResponse:
      type: object
      properties:
        limitId:
          allOf:
          - $ref: '#/components/schemas/LimitId'
          description: A unique identifier for the limit. Use this identifier in other
            operations, such as `CreateQueueLimitAssociation` and `DeleteLimit`.
      required:
      - limitId
    CreateMonitorRequest:
      type: object
      properties:
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: The unique token which the server uses to recognize retries
            of the same request.
        displayName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: 'The name that you give the monitor that is displayed in the
            Deadline Cloud console.


            This field can store any content. Escape or encode this content before
            displaying it on a webpage or any other system that might interpret the
            content of this field.'
        identityCenterInstanceArn:
          allOf:
          - $ref: '#/components/schemas/IdentityCenterInstanceArn'
          description: The Amazon Resource Name (ARN) of the IAM Identity Center instance
            that authenticates monitor users.
        subdomain:
          allOf:
          - $ref: '#/components/schemas/Subdomain'
          description: The subdomain to use when creating the monitor URL. The full
            URL of the monitor is subdomain.Region.deadlinecloud.amazonaws.com.
        roleArn:
          allOf:
          - $ref: '#/components/schemas/IamRoleArn'
          description: The Amazon Resource Name (ARN) of the IAM role that the monitor
            uses to connect to Deadline Cloud. Every user that signs in to the monitor
            using IAM Identity Center uses this role to access Deadline Cloud resources.
      required:
      - displayName
      - identityCenterInstanceArn
      - subdomain
      - roleArn
    CreateMonitorResponse:
      type: object
      properties:
        monitorId:
          allOf:
          - $ref: '#/components/schemas/MonitorId'
          description: The unique identifier of the monitor.
        identityCenterApplicationArn:
          allOf:
          - $ref: '#/components/schemas/IdentityCenterApplicationArn'
          description: The Amazon Resource Name (ARN) that IAM Identity Center assigns
            to the monitor.
      required:
      - monitorId
      - identityCenterApplicationArn
    CreateQueueEnvironmentRequest:
      type: object
      properties:
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: The unique token which the server uses to recognize retries
            of the same request.
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The farm ID of the farm to connect to the environment.
        queueId:
          allOf:
          - $ref: '#/components/schemas/QueueId'
          description: The queue ID to connect the queue and environment.
        priority:
          allOf:
          - $ref: '#/components/schemas/Priority'
          description: Sets the priority of the environments in the queue from 0 to
            10,000, where 0 is the highest priority (activated first and deactivated
            last). If two environments share the same priority value, the environment
            created first takes higher priority.
        templateType:
          allOf:
          - $ref: '#/components/schemas/EnvironmentTemplateType'
          description: The template's file type, `JSON` or `YAML`.
        template:
          allOf:
          - $ref: '#/components/schemas/EnvironmentTemplate'
          description: The environment template to use in the queue.
      required:
      - farmId
      - queueId
      - priority
      - templateType
      - template
    CreateQueueEnvironmentResponse:
      type: object
      properties:
        queueEnvironmentId:
          allOf:
          - $ref: '#/components/schemas/QueueEnvironmentId'
          description: The queue environment ID.
      required:
      - queueEnvironmentId
    CreateQueueFleetAssociationRequest:
      type: object
      properties:
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The ID of the farm that the queue and fleet belong to.
        queueId:
          allOf:
          - $ref: '#/components/schemas/QueueId'
          description: The queue ID.
        fleetId:
          allOf:
          - $ref: '#/components/schemas/FleetId'
          description: The fleet ID.
      required:
      - farmId
      - queueId
      - fleetId
    CreateQueueFleetAssociationResponse:
      type: object
      properties: {}
    CreateQueueLimitAssociationRequest:
      type: object
      properties:
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The unique identifier of the farm that contains the queue and
            limit to associate.
        queueId:
          allOf:
          - $ref: '#/components/schemas/QueueId'
          description: The unique identifier of the queue to associate with the limit.
        limitId:
          allOf:
          - $ref: '#/components/schemas/LimitId'
          description: The unique identifier of the limit to associate with the queue.
      required:
      - farmId
      - queueId
      - limitId
    CreateQueueLimitAssociationResponse:
      type: object
      properties: {}
    CreateQueueRequest:
      type: object
      properties:
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: The unique token which the server uses to recognize retries
            of the same request.
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The farm ID of the farm to connect to the queue.
        displayName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: 'The display name of the queue.


            This field can store any content. Escape or encode this content before
            displaying it on a webpage or any other system that might interpret the
            content of this field.'
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: 'The description of the queue.


            This field can store any content. Escape or encode this content before
            displaying it on a webpage or any other system that might interpret the
            content of this field.'
        defaultBudgetAction:
          allOf:
          - $ref: '#/components/schemas/DefaultQueueBudgetAction'
          description: The default action to take on a queue if a budget isn't configured.
        jobAttachmentSettings:
          allOf:
          - $ref: '#/components/schemas/JobAttachmentSettings'
          description: The job attachment settings for the queue. These are the Amazon
            S3 bucket name and the Amazon S3 prefix.
        roleArn:
          allOf:
          - $ref: '#/components/schemas/IamRoleArn'
          description: The IAM role ARN that workers will use while running jobs for
            this queue.
        jobRunAsUser:
          allOf:
          - $ref: '#/components/schemas/JobRunAsUser'
          description: The jobs in the queue run as the specified POSIX user.
        requiredFileSystemLocationNames:
          allOf:
          - $ref: '#/components/schemas/RequiredFileSystemLocationNames'
          description: The file system location name to include in the queue.
        allowedStorageProfileIds:
          allOf:
          - $ref: '#/components/schemas/AllowedStorageProfileIds'
          description: The storage profile IDs to include in the queue.
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: Each tag consists of a tag key and a tag value. Tag keys and
            values are both required, but tag values can be empty strings.
      required:
      - farmId
      - displayName
    CreateQueueResponse:
      type: object
      properties:
        queueId:
          allOf:
          - $ref: '#/components/schemas/QueueId'
          description: The queue ID.
      required:
      - queueId
    CreateStorageProfileRequest:
      type: object
      properties:
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: The unique token which the server uses to recognize retries
            of the same request.
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The farm ID of the farm to connect to the storage profile.
        displayName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: 'The display name of the storage profile.


            This field can store any content. Escape or encode this content before
            displaying it on a webpage or any other system that might interpret the
            content of this field.'
        osFamily:
          allOf:
          - $ref: '#/components/schemas/StorageProfileOperatingSystemFamily'
          description: The type of operating system (OS) for the storage profile.
        fileSystemLocations:
          allOf:
          - $ref: '#/components/schemas/FileSystemLocationsList'
          description: File system paths to include in the storage profile.
      required:
      - farmId
      - displayName
      - osFamily
    CreateStorageProfileResponse:
      type: object
      properties:
        storageProfileId:
          allOf:
          - $ref: '#/components/schemas/StorageProfileId'
          description: The storage profile ID.
      required:
      - storageProfileId
    CreateWorkerRequest:
      type: object
      properties:
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The farm ID of the farm to connect to the worker.
        fleetId:
          allOf:
          - $ref: '#/components/schemas/FleetId'
          description: The fleet ID to connect to the worker.
        hostProperties:
          allOf:
          - $ref: '#/components/schemas/HostPropertiesRequest'
          description: The IP address and host name of the worker.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: The unique token which the server uses to recognize retries
            of the same request.
      required:
      - farmId
      - fleetId
    CreateWorkerResponse:
      type: object
      properties:
        workerId:
          allOf:
          - $ref: '#/components/schemas/WorkerId'
          description: The worker ID.
      required:
      - workerId
    CreatedAt:
      type: string
      format: date-time
    CreatedBy:
      type: string
    CustomFleetAmountCapabilities:
      type: array
      items:
        $ref: '#/components/schemas/FleetAmountCapability'
    CustomFleetAttributeCapabilities:
      type: array
      items:
        $ref: '#/components/schemas/FleetAttributeCapability'
    CustomerManagedFleetConfiguration:
      type: object
      properties:
        mode:
          allOf:
          - $ref: '#/components/schemas/AutoScalingMode'
          description: The Auto Scaling mode for the customer managed fleet configuration.
        workerCapabilities:
          allOf:
          - $ref: '#/components/schemas/CustomerManagedWorkerCapabilities'
          description: The worker capabilities for a customer managed fleet configuration.
        storageProfileId:
          allOf:
          - $ref: '#/components/schemas/StorageProfileId'
          description: The storage profile ID.
      required:
      - mode
      - workerCapabilities
      description: The details of a customer managed fleet configuration.
    CustomerManagedFleetOperatingSystemFamily:
      type: string
      enum:
      - WINDOWS
      - LINUX
      - MACOS
    CustomerManagedWorkerCapabilities:
      type: object
      properties:
        vCpuCount:
          allOf:
          - $ref: '#/components/schemas/VCpuCountRange'
          description: The vCPU count for the customer manged worker capabilities.
        memoryMiB:
          allOf:
          - $ref: '#/components/schemas/MemoryMiBRange'
          description: The memory (MiB).
        acceleratorTypes:
          allOf:
          - $ref: '#/components/schemas/AcceleratorTypes'
          description: The accelerator types for the customer managed worker capabilities.
        acceleratorCount:
          allOf:
          - $ref: '#/components/schemas/AcceleratorCountRange'
          description: The range of the accelerator.
        acceleratorTotalMemoryMiB:
          allOf:
          - $ref: '#/components/schemas/AcceleratorTotalMemoryMiBRange'
          description: The total memory (MiB) for the customer managed worker capabilities.
        osFamily:
          allOf:
          - $ref: '#/components/schemas/CustomerManagedFleetOperatingSystemFamily'
          description: The operating system (OS) family.
        cpuArchitectureType:
          allOf:
          - $ref: '#/components/schemas/CpuArchitectureType'
          description: The CPU architecture type for the customer managed worker capabilities.
        customAmounts:
          allOf:
          - $ref: '#/components/schemas/CustomFleetAmountCapabilities'
          description: Custom requirement ranges for customer managed worker capabilities.
        customAttributes:
          allOf:
          - $ref: '#/components/schemas/CustomFleetAttributeCapabilities'
          description: Custom attributes for the customer manged worker capabilities.
      required:
      - vCpuCount
      - memoryMiB
      - osFamily
      - cpuArchitectureType
      description: The worker capabilities for a customer managed workflow.
    DateTimeFilterExpression:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the date-time field to filter on.
        operator:
          allOf:
          - $ref: '#/components/schemas/ComparisonOperator'
          description: The type of comparison to use to filter the results.
        dateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time.
      required:
      - name
      - operator
      - dateTime
      description: The time stamp in date-time format.
    DeadlinePrincipalType:
      type: string
      enum:
      - USER
      - GROUP
    DefaultQueueBudgetAction:
      type: string
      enum:
      - NONE
      - STOP_SCHEDULING_AND_COMPLETE_TASKS
      - STOP_SCHEDULING_AND_CANCEL_TASKS
    DeleteBudgetRequest:
      type: object
      properties:
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The farm ID of the farm to remove from the budget.
        budgetId:
          allOf:
          - $ref: '#/components/schemas/BudgetId'
          description: The budget ID of the budget to delete.
      required:
      - farmId
      - budgetId
    DeleteBudgetResponse:
      type: object
      properties: {}
    DeleteFarmRequest:
      type: object
      properties:
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The farm ID of the farm to delete.
      required:
      - farmId
    DeleteFarmResponse:
      type: object
      properties: {}
    DeleteFleetRequest:
      type: object
      properties:
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: The unique token which the server uses to recognize retries
            of the same request.
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The farm ID of the farm to remove from the fleet.
        fleetId:
          allOf:
          - $ref: '#/components/schemas/FleetId'
          description: The fleet ID of the fleet to delete.
      required:
      - farmId
      - fleetId
    DeleteFleetResponse:
      type: object
      properties: {}
    DeleteLicenseEndpointRequest:
      type: object
      properties:
        licenseEndpointId:
          allOf:
          - $ref: '#/components/schemas/LicenseEndpointId'
          description: The license endpoint ID of the license endpoint to delete.
      required:
      - licenseEndpointId
    DeleteLicenseEndpointResponse:
      type: object
      properties: {}
    DeleteLimitRequest:
      type: object
      properties:
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The unique identifier of the farm that contains the limit to
            delete.
        limitId:
          allOf:
          - $ref: '#/components/schemas/LimitId'
          description: The unique identifier of the limit to delete.
      required:
      - farmId
      - limitId
    DeleteLimitResponse:
      type: object
      properties: {}
    DeleteMeteredProductRequest:
      type: object
      properties:
        licenseEndpointId:
          allOf:
          - $ref: '#/components/schemas/LicenseEndpointId'
          description: The ID of the license endpoint from which to remove the metered
            product.
        productId:
          allOf:
          - $ref: '#/components/schemas/MeteredProductId'
          description: The product ID to remove from the license endpoint.
      required:
      - licenseEndpointId
      - productId
    DeleteMeteredProductResponse:
      type: object
      properties: {}
    DeleteMonitorRequest:
      type: object
      properties:
        monitorId:
          allOf:
          - $ref: '#/components/schemas/MonitorId'
          description: The unique identifier of the monitor to delete. This ID is
            returned by the `CreateMonitor` operation, and is included in the response
            to the `GetMonitor` operation.
      required:
      - monitorId
    DeleteMonitorResponse:
      type: object
      properties: {}
    DeleteQueueEnvironmentRequest:
      type: object
      properties:
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The farm ID of the farm from which to remove the queue environment.
        queueId:
          allOf:
          - $ref: '#/components/schemas/QueueId'
          description: The queue ID of the queue environment to delete.
        queueEnvironmentId:
          allOf:
          - $ref: '#/components/schemas/QueueEnvironmentId'
          description: The queue environment ID of the queue environment to delete.
      required:
      - farmId
      - queueId
      - queueEnvironmentId
    DeleteQueueEnvironmentResponse:
      type: object
      properties: {}
    DeleteQueueFleetAssociationRequest:
      type: object
      properties:
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The farm ID of the farm that holds the queue-fleet association.
        queueId:
          allOf:
          - $ref: '#/components/schemas/QueueId'
          description: The queue ID of the queue-fleet association.
        fleetId:
          allOf:
          - $ref: '#/components/schemas/FleetId'
          description: The fleet ID of the queue-fleet association.
      required:
      - farmId
      - queueId
      - fleetId
    DeleteQueueFleetAssociationResponse:
      type: object
      properties: {}
    DeleteQueueLimitAssociationRequest:
      type: object
      properties:
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The unique identifier of the farm that contains the queue and
            limit to disassociate.
        queueId:
          allOf:
          - $ref: '#/components/schemas/QueueId'
          description: The unique identifier of the queue to disassociate.
        limitId:
          allOf:
          - $ref: '#/components/schemas/LimitId'
          description: The unique identifier of the limit to disassociate.
      required:
      - farmId
      - queueId
      - limitId
    DeleteQueueLimitAssociationResponse:
      type: object
      properties: {}
    DeleteQueueRequest:
      type: object
      properties:
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The ID of the farm from which to remove the queue.
        queueId:
          allOf:
          - $ref: '#/components/schemas/QueueId'
          description: The queue ID of the queue to delete.
      required:
      - farmId
      - queueId
    DeleteQueueResponse:
      type: object
      properties: {}
    DeleteStorageProfileRequest:
      type: object
      properties:
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The farm ID of the farm from which to remove the storage profile.
        storageProfileId:
          allOf:
          - $ref: '#/components/schemas/StorageProfileId'
          description: The storage profile ID of the storage profile to delete.
      required:
      - farmId
      - storageProfileId
    DeleteStorageProfileResponse:
      type: object
      properties: {}
    DeleteWorkerRequest:
      type: object
      properties:
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The farm ID of the worker to delete.
        fleetId:
          allOf:
          - $ref: '#/components/schemas/FleetId'
          description: The fleet ID of the worker to delete.
        workerId:
          allOf:
          - $ref: '#/components/schemas/WorkerId'
          description: The worker ID of the worker to delete.
      required:
      - farmId
      - fleetId
      - workerId
    DeleteWorkerResponse:
      type: object
      properties: {}
    DependenciesList:
      type: array
      items:
        $ref: '#/components/schemas/StepId'
    DependencyConsumerResolutionStatus:
      type: string
      enum:
      - RESOLVED
      - UNRESOLVED
    DependencyCounts:
      type: object
      properties:
        dependenciesResolved:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of resolved dependencies.
        dependenciesUnresolved:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of unresolved dependencies.
        consumersResolved:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of consumers resolved.
        consumersUnresolved:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of unresolved consumers.
      required:
      - dependenciesResolved
      - dependenciesUnresolved
      - consumersResolved
      - consumersUnresolved
      description: The number of dependencies for the consumer.
    Description:
      type: string
      minLength: 0
      maxLength: 100
    DesiredWorkerStatus:
      type: string
      enum:
      - STOPPED
    DisassociateMemberFromFarmRequest:
      type: object
      properties:
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The farm ID of the farm to disassociate from the member.
        principalId:
          allOf:
          - $ref: '#/components/schemas/IdentityCenterPrincipalId'
          description: A member's principal ID to disassociate from a farm.
      required:
      - farmId
      - principalId
    DisassociateMemberFromFarmResponse:
      type: object
      properties: {}
    DisassociateMemberFromFleetRequest:
      type: object
      properties:
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The farm ID of the fleet to disassociate a member from.
        fleetId:
          allOf:
          - $ref: '#/components/schemas/FleetId'
          description: The fleet ID of the fleet to from which to disassociate a member.
        principalId:
          allOf:
          - $ref: '#/components/schemas/IdentityCenterPrincipalId'
          description: A member's principal ID to disassociate from a fleet.
      required:
      - farmId
      - fleetId
      - principalId
    DisassociateMemberFromFleetResponse:
      type: object
      properties: {}
    DisassociateMemberFromJobRequest:
      type: object
      properties:
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The farm ID for the job to disassociate from the member.
        queueId:
          allOf:
          - $ref: '#/components/schemas/QueueId'
          description: The queue ID connected to a job for which you're disassociating
            a member.
        jobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          description: The job ID to disassociate from a member in a job.
        principalId:
          allOf:
          - $ref: '#/components/schemas/IdentityCenterPrincipalId'
          description: A member's principal ID to disassociate from a job.
      required:
      - farmId
      - queueId
      - jobId
      - principalId
    DisassociateMemberFromJobResponse:
      type: object
      properties: {}
    DisassociateMemberFromQueueRequest:
      type: object
      properties:
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The farm ID for the queue to disassociate from a member.
        queueId:
          allOf:
          - $ref: '#/components/schemas/QueueId'
          description: The queue ID of the queue in which you're disassociating from
            a member.
        principalId:
          allOf:
          - $ref: '#/components/schemas/IdentityCenterPrincipalId'
          description: A member's principal ID to disassociate from a queue.
      required:
      - farmId
      - queueId
      - principalId
    DisassociateMemberFromQueueResponse:
      type: object
      properties: {}
    DnsName:
      type: string
    Document:
      type: object
      additionalProperties: true
      x-sensitive: true
    Double:
      type: number
      format: double
    EbsIops:
      type: integer
      minimum: 3000
      maximum: 16000
    EbsThroughputMiB:
      type: integer
      minimum: 125
      maximum: 1000
    Ec2EbsVolume:
      type: object
      properties:
        sizeGiB:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The EBS volume size in GiB.
        iops:
          allOf:
          - $ref: '#/components/schemas/EbsIops'
          description: The IOPS per volume.
        throughputMiB:
          allOf:
          - $ref: '#/components/schemas/EbsThroughputMiB'
          description: The throughput per volume in MiB.
      description: Specifies the EBS volume.
    Ec2MarketType:
      type: string
      enum:
      - on-demand
      - spot
    EndedAt:
      type: string
      format: date-time
    EndsAt:
      type: string
      format: date-time
    EnvironmentDetailsEntity:
      type: object
      properties:
        jobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          description: The job ID.
        environmentId:
          allOf:
          - $ref: '#/components/schemas/EnvironmentId'
          description: The environment ID.
        schemaVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The schema version in the environment.
        template:
          allOf:
          - $ref: '#/components/schemas/Document'
          description: The template used for the environment.
      required:
      - jobId
      - environmentId
      - schemaVersion
      - template
      description: The details of a specified environment.
    EnvironmentDetailsError:
      type: object
      properties:
        jobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          description: The job ID.
        environmentId:
          allOf:
          - $ref: '#/components/schemas/EnvironmentId'
          description: The environment ID.
        code:
          allOf:
          - $ref: '#/components/schemas/JobEntityErrorCode'
          description: The error code.
        message:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The error message detailing the error's cause.
      required:
      - jobId
      - environmentId
      - code
      - message
      description: The error details for the environment.
    EnvironmentDetailsIdentifiers:
      type: object
      properties:
        jobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          description: The job ID.
        environmentId:
          allOf:
          - $ref: '#/components/schemas/EnvironmentId'
          description: The environment ID.
      required:
      - jobId
      - environmentId
      description: The IDs of the job and environment.
    EnvironmentEnterSessionActionDefinition:
      type: object
      properties:
        environmentId:
          allOf:
          - $ref: '#/components/schemas/EnvironmentId'
          description: The environment ID.
      required:
      - environmentId
      description: The environment ID to use to enter a session action.
    EnvironmentEnterSessionActionDefinitionSummary:
      type: object
      properties:
        environmentId:
          allOf:
          - $ref: '#/components/schemas/EnvironmentId'
          description: The environment ID.
      required:
      - environmentId
      description: Defines the environment a session action enters in.
    EnvironmentExitSessionActionDefinition:
      type: object
      properties:
        environmentId:
          allOf:
          - $ref: '#/components/schemas/EnvironmentId'
          description: The environment ID.
      required:
      - environmentId
      description: Defines the environment a session action exits from.
    EnvironmentExitSessionActionDefinitionSummary:
      type: object
      properties:
        environmentId:
          allOf:
          - $ref: '#/components/schemas/EnvironmentId'
          description: The environment ID.
      required:
      - environmentId
      description: A summary of the environment details for which a session action
        to exits.
    EnvironmentId:
      type: string
      pattern: ^(STEP:step-[0-9a-f]{32}:.*)|(JOB:job-[0-9a-f]{32}:.*)$
      minLength: 1
      maxLength: 1024
    EnvironmentName:
      type: string
    EnvironmentTemplate:
      type: string
      minLength: 1
      maxLength: 15000
    EnvironmentTemplateType:
      type: string
      enum:
      - JSON
      - YAML
    ExceptionContext:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/String'
    FarmId:
      type: string
      pattern: ^farm-[0-9a-f]{32}$
    FarmMember:
      type: object
      properties:
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The farm ID of the farm member.
        principalId:
          allOf:
          - $ref: '#/components/schemas/IdentityCenterPrincipalId'
          description: The principal ID of the farm member.
        principalType:
          allOf:
          - $ref: '#/components/schemas/DeadlinePrincipalType'
          description: The principal type of the farm member.
        identityStoreId:
          allOf:
          - $ref: '#/components/schemas/IdentityStoreId'
          description: The identity store ID of the farm member.
        membershipLevel:
          allOf:
          - $ref: '#/components/schemas/MembershipLevel'
          description: The farm member's membership level.
      required:
      - farmId
      - principalId
      - principalType
      - identityStoreId
      - membershipLevel
      description: The member of a farm.
    FarmMembers:
      type: array
      items:
        $ref: '#/components/schemas/FarmMember'
    FarmSummaries:
      type: array
      items:
        $ref: '#/components/schemas/FarmSummary'
    FarmSummary:
      type: object
      properties:
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The farm ID.
        displayName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: 'The display name of the farm.


            This field can store any content. Escape or encode this content before
            displaying it on a webpage or any other system that might interpret the
            content of this field.'
        kmsKeyArn:
          allOf:
          - $ref: '#/components/schemas/KmsKeyArn'
          description: The ARN for the KMS key.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/CreatedAt'
          description: The date and time the resource was created.
        createdBy:
          allOf:
          - $ref: '#/components/schemas/CreatedBy'
          description: The user or system that created this resource.
        updatedAt:
          allOf:
          - $ref: '#/components/schemas/UpdatedAt'
          description: The date and time the resource was updated.
        updatedBy:
          allOf:
          - $ref: '#/components/schemas/UpdatedBy'
          description: The user or system that updated this resource.
      required:
      - farmId
      - displayName
      - createdAt
      - createdBy
      description: The summary of details for a farm.
    FieldSortExpression:
      type: object
      properties:
        sortOrder:
          allOf:
          - $ref: '#/components/schemas/SortOrder'
          description: The sort order for the field.
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the field.
      required:
      - sortOrder
      - name
      description: The field sorting order and name of the field.
    FileSystemLocation:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/FileSystemLocationName'
          description: The location name.
        path:
          allOf:
          - $ref: '#/components/schemas/PathString'
          description: The file path.
        type:
          allOf:
          - $ref: '#/components/schemas/FileSystemLocationType'
          description: The type of file.
      required:
      - name
      - path
      - type
      description: The details of the file system location for the resource.
    FileSystemLocationName:
      type: string
      pattern: ^[0-9A-Za-z ]*$
      minLength: 1
      maxLength: 64
    FileSystemLocationType:
      type: string
      enum:
      - SHARED
      - LOCAL
    FileSystemLocationsList:
      type: array
      items:
        $ref: '#/components/schemas/FileSystemLocation'
    FixedBudgetSchedule:
      type: object
      properties:
        startTime:
          allOf:
          - $ref: '#/components/schemas/StartsAt'
          description: When the budget starts.
        endTime:
          allOf:
          - $ref: '#/components/schemas/EndsAt'
          description: When the budget ends.
      required:
      - startTime
      - endTime
      description: The details of a fixed budget schedule.
    FleetAmountCapabilities:
      type: array
      items:
        $ref: '#/components/schemas/FleetAmountCapability'
    FleetAmountCapability:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/AmountCapabilityName'
          description: The name of the fleet capability.
        min:
          allOf:
          - $ref: '#/components/schemas/Float'
          description: The minimum amount of fleet worker capability.
        max:
          allOf:
          - $ref: '#/components/schemas/Float'
          description: The maximum amount of the fleet worker capability.
      required:
      - name
      - min
      description: The fleet amount and attribute capabilities.
    FleetAttributeCapabilities:
      type: array
      items:
        $ref: '#/components/schemas/FleetAttributeCapability'
    FleetAttributeCapability:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/AttributeCapabilityName'
          description: The name of the fleet attribute capability for the worker.
        values:
          allOf:
          - $ref: '#/components/schemas/AttributeCapabilityValuesList'
          description: The number of fleet attribute capabilities.
      required:
      - name
      - values
      description: Defines the fleet's capability name, minimum, and maximum.
    FleetCapabilities:
      type: object
      properties:
        amounts:
          allOf:
          - $ref: '#/components/schemas/FleetAmountCapabilities'
          description: Amount capabilities of the fleet.
        attributes:
          allOf:
          - $ref: '#/components/schemas/FleetAttributeCapabilities'
          description: Attribute capabilities of the fleet.
      description: The amounts and attributes of fleets.
    FleetConfiguration:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/CustomerManagedFleetConfiguration'
        description: |-
          The customer managed fleets within a fleet configuration.
      - allOf:
        - $ref: '#/components/schemas/ServiceManagedEc2FleetConfiguration'
        description: |-
          The service managed Amazon EC2 instances for a fleet configuration.
      description: |-
        Fleet configuration details.
    FleetId:
      type: string
      pattern: ^fleet-[0-9a-f]{32}$
    FleetIds:
      type: array
      items:
        $ref: '#/components/schemas/FleetId'
    FleetMember:
      type: object
      properties:
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The farm ID.
        fleetId:
          allOf:
          - $ref: '#/components/schemas/FleetId'
          description: The fleet ID.
        principalId:
          allOf:
          - $ref: '#/components/schemas/IdentityCenterPrincipalId'
          description: The principal ID of the fleet member.
        principalType:
          allOf:
          - $ref: '#/components/schemas/DeadlinePrincipalType'
          description: The principal type of the fleet member.
        identityStoreId:
          allOf:
          - $ref: '#/components/schemas/IdentityStoreId'
          description: The identity store ID.
        membershipLevel:
          allOf:
          - $ref: '#/components/schemas/MembershipLevel'
          description: The fleet member's membership level.
      required:
      - farmId
      - fleetId
      - principalId
      - principalType
      - identityStoreId
      - membershipLevel
      description: The fleet member.
    FleetMembers:
      type: array
      items:
        $ref: '#/components/schemas/FleetMember'
    FleetStatus:
      type: string
      enum:
      - ACTIVE
      - CREATE_IN_PROGRESS
      - UPDATE_IN_PROGRESS
      - CREATE_FAILED
      - UPDATE_FAILED
    FleetSummaries:
      type: array
      items:
        $ref: '#/components/schemas/FleetSummary'
    FleetSummary:
      type: object
      properties:
        fleetId:
          allOf:
          - $ref: '#/components/schemas/FleetId'
          description: The fleet ID.
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The farm ID.
        displayName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: 'The display name of the fleet summary to update.


            This field can store any content. Escape or encode this content before
            displaying it on a webpage or any other system that might interpret the
            content of this field.'
        status:
          allOf:
          - $ref: '#/components/schemas/FleetStatus'
          description: The status of the fleet.
        autoScalingStatus:
          allOf:
          - $ref: '#/components/schemas/AutoScalingStatus'
          description: The Auto Scaling status of a fleet.
        targetWorkerCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The target number of workers in a fleet.
        workerCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of workers in the fleet summary.
        minWorkerCount:
          allOf:
          - $ref: '#/components/schemas/MinZeroMaxInteger'
          description: The minimum number of workers in the fleet.
        maxWorkerCount:
          allOf:
          - $ref: '#/components/schemas/MinZeroMaxInteger'
          description: The maximum number of workers specified in the fleet.
        configuration:
          allOf:
          - $ref: '#/components/schemas/FleetConfiguration'
          description: The configuration details for the fleet.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/CreatedAt'
          description: The date and time the resource was created.
        createdBy:
          allOf:
          - $ref: '#/components/schemas/CreatedBy'
          description: The user or system that created this resource.
        updatedAt:
          allOf:
          - $ref: '#/components/schemas/UpdatedAt'
          description: The date and time the resource was updated.
        updatedBy:
          allOf:
          - $ref: '#/components/schemas/UpdatedBy'
          description: The user or system that updated this resource.
      required:
      - fleetId
      - farmId
      - displayName
      - status
      - workerCount
      - minWorkerCount
      - maxWorkerCount
      - configuration
      - createdAt
      - createdBy
      description: The details of a fleet.
    FloatString:
      type: string
      pattern: ^[-]?(0|[1-9][0-9]*)([.][0-9]+)?([eE][+-]?[0-9]+)?$
      minLength: 1
      maxLength: 26
    GetBudgetRequest:
      type: object
      properties:
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The farm ID of the farm connected to the budget.
        budgetId:
          allOf:
          - $ref: '#/components/schemas/BudgetId'
          description: The budget ID.
      required:
      - farmId
      - budgetId
    GetBudgetResponse:
      type: object
      properties:
        budgetId:
          allOf:
          - $ref: '#/components/schemas/BudgetId'
          description: The budget ID.
        usageTrackingResource:
          allOf:
          - $ref: '#/components/schemas/UsageTrackingResource'
          description: The resource that the budget is tracking usage for.
        status:
          allOf:
          - $ref: '#/components/schemas/BudgetStatus'
          description: "The status of the budget.\n\n  * `ACTIVE`–Get a budget being\
            \ evaluated.\n\n  * `INACTIVE`–Get an inactive budget. This can include\
            \ expired, canceled, or deleted statuses."
        displayName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: 'The display name of the budget.


            This field can store any content. Escape or encode this content before
            displaying it on a webpage or any other system that might interpret the
            content of this field.'
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: 'The description of the budget.


            This field can store any content. Escape or encode this content before
            displaying it on a webpage or any other system that might interpret the
            content of this field.'
        approximateDollarLimit:
          allOf:
          - $ref: '#/components/schemas/ConsumedUsageLimit'
          description: The consumed usage limit for the budget.
        usages:
          allOf:
          - $ref: '#/components/schemas/ConsumedUsages'
          description: The usages of the budget.
        actions:
          allOf:
          - $ref: '#/components/schemas/ResponseBudgetActionList'
          description: The budget actions for the budget.
        schedule:
          allOf:
          - $ref: '#/components/schemas/BudgetSchedule'
          description: The budget schedule.
        createdBy:
          allOf:
          - $ref: '#/components/schemas/CreatedBy'
          description: The user or system that created this resource.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/CreatedAt'
          description: The date and time the resource was created.
        updatedBy:
          allOf:
          - $ref: '#/components/schemas/UpdatedBy'
          description: The user or system that updated this resource.
        updatedAt:
          allOf:
          - $ref: '#/components/schemas/UpdatedAt'
          description: The date and time the resource was updated.
        queueStoppedAt:
          allOf:
          - $ref: '#/components/schemas/UpdatedAt'
          description: The date and time the queue stopped.
      required:
      - budgetId
      - usageTrackingResource
      - status
      - displayName
      - approximateDollarLimit
      - usages
      - actions
      - schedule
      - createdBy
      - createdAt
    GetFarmRequest:
      type: object
      properties:
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The farm ID of the farm.
      required:
      - farmId
    GetFarmResponse:
      type: object
      properties:
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The farm ID of the farm to get.
        displayName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: 'The display name of the farm.


            This field can store any content. Escape or encode this content before
            displaying it on a webpage or any other system that might interpret the
            content of this field.'
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: 'The description of the farm.


            This field can store any content. Escape or encode this content before
            displaying it on a webpage or any other system that might interpret the
            content of this field.'
        kmsKeyArn:
          allOf:
          - $ref: '#/components/schemas/KmsKeyArn'
          description: The ARN of the KMS key used on the farm.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/CreatedAt'
          description: The date and time the resource was created.
        createdBy:
          allOf:
          - $ref: '#/components/schemas/CreatedBy'
          description: The user or system that created this resource.
        updatedAt:
          allOf:
          - $ref: '#/components/schemas/UpdatedAt'
          description: The date and time the resource was updated.
        updatedBy:
          allOf:
          - $ref: '#/components/schemas/UpdatedBy'
          description: The user or system that updated this resource.
      required:
      - farmId
      - displayName
      - kmsKeyArn
      - createdAt
      - createdBy
    GetFleetRequest:
      type: object
      properties:
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The farm ID of the farm in the fleet.
        fleetId:
          allOf:
          - $ref: '#/components/schemas/FleetId'
          description: The fleet ID of the fleet to get.
      required:
      - farmId
      - fleetId
    GetFleetResponse:
      type: object
      properties:
        fleetId:
          allOf:
          - $ref: '#/components/schemas/FleetId'
          description: The fleet ID.
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The farm ID of the farm in the fleet.
        displayName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: 'The display name of the fleet.


            This field can store any content. Escape or encode this content before
            displaying it on a webpage or any other system that might interpret the
            content of this field.'
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: 'The description of the fleet.


            This field can store any content. Escape or encode this content before
            displaying it on a webpage or any other system that might interpret the
            content of this field.'
        status:
          allOf:
          - $ref: '#/components/schemas/FleetStatus'
          description: The Auto Scaling status of the fleet.
        autoScalingStatus:
          allOf:
          - $ref: '#/components/schemas/AutoScalingStatus'
          description: The Auto Scaling status of the fleet. Either `GROWING`, `STEADY`,
            or `SHRINKING`.
        targetWorkerCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of target workers in the fleet.
        workerCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of workers in the fleet.
        minWorkerCount:
          allOf:
          - $ref: '#/components/schemas/MinZeroMaxInteger'
          description: The minimum number of workers specified in the fleet.
        maxWorkerCount:
          allOf:
          - $ref: '#/components/schemas/MinZeroMaxInteger'
          description: The maximum number of workers specified in the fleet.
        configuration:
          allOf:
          - $ref: '#/components/schemas/FleetConfiguration'
          description: The configuration setting for the fleet.
        capabilities:
          allOf:
          - $ref: '#/components/schemas/FleetCapabilities'
          description: Outlines what the fleet is capable of for minimums, maximums,
            and naming, in addition to attribute names and values.
        roleArn:
          allOf:
          - $ref: '#/components/schemas/IamRoleArn'
          description: The IAM role ARN.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/CreatedAt'
          description: The date and time the resource was created.
        createdBy:
          allOf:
          - $ref: '#/components/schemas/CreatedBy'
          description: The user or system that created this resource.
        updatedAt:
          allOf:
          - $ref: '#/components/schemas/UpdatedAt'
          description: The date and time the resource was updated.
        updatedBy:
          allOf:
          - $ref: '#/components/schemas/UpdatedBy'
          description: The user or system that updated this resource.
      required:
      - fleetId
      - farmId
      - displayName
      - status
      - workerCount
      - minWorkerCount
      - maxWorkerCount
      - configuration
      - roleArn
      - createdAt
      - createdBy
    GetJobEntityError:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/JobDetailsError'
        description: |-
          The job details for the failed job entity.
      - allOf:
        - $ref: '#/components/schemas/JobAttachmentDetailsError'
        description: |-
          The job attachment details for the failed job entity.
      - allOf:
        - $ref: '#/components/schemas/StepDetailsError'
        description: |-
          The step details for the failed job entity.
      - allOf:
        - $ref: '#/components/schemas/EnvironmentDetailsError'
        description: |-
          The environment details for the failed job entity.
      description: |-
        The error for the job entity.
    GetJobRequest:
      type: object
      properties:
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The farm ID of the farm in the job.
        queueId:
          allOf:
          - $ref: '#/components/schemas/QueueId'
          description: The queue ID associated with the job.
        jobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          description: The job ID.
      required:
      - farmId
      - queueId
      - jobId
    GetJobResponse:
      type: object
      properties:
        jobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          description: The job ID.
        name:
          allOf:
          - $ref: '#/components/schemas/JobName'
          description: The name of the job.
        lifecycleStatus:
          allOf:
          - $ref: '#/components/schemas/JobLifecycleStatus'
          description: The life cycle status for the job.
        lifecycleStatusMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A message that communicates the status of the life cycle for
            the job.
        priority:
          allOf:
          - $ref: '#/components/schemas/JobPriority'
          description: The job priority.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/CreatedAt'
          description: The date and time the resource was created.
        createdBy:
          allOf:
          - $ref: '#/components/schemas/CreatedBy'
          description: The user or system that created this resource.
        updatedAt:
          allOf:
          - $ref: '#/components/schemas/UpdatedAt'
          description: The date and time the resource was updated.
        updatedBy:
          allOf:
          - $ref: '#/components/schemas/UpdatedBy'
          description: The user or system that updated this resource.
        startedAt:
          allOf:
          - $ref: '#/components/schemas/StartedAt'
          description: The date and time the resource started running.
        endedAt:
          allOf:
          - $ref: '#/components/schemas/EndedAt'
          description: The date and time the resource ended running.
        taskRunStatus:
          allOf:
          - $ref: '#/components/schemas/TaskRunStatus'
          description: The task run status for the job.
        targetTaskRunStatus:
          allOf:
          - $ref: '#/components/schemas/JobTargetTaskRunStatus'
          description: The task status with which the job started.
        taskRunStatusCounts:
          allOf:
          - $ref: '#/components/schemas/TaskRunStatusCounts'
          description: The number of tasks running on the job.
        storageProfileId:
          allOf:
          - $ref: '#/components/schemas/StorageProfileId'
          description: The storage profile ID associated with the job.
        maxFailedTasksCount:
          allOf:
          - $ref: '#/components/schemas/MaxFailedTasksCount'
          description: The number of task failures before the job stops running and
            is marked as `FAILED`.
        maxRetriesPerTask:
          allOf:
          - $ref: '#/components/schemas/MaxRetriesPerTask'
          description: The maximum number of retries per failed tasks.
        parameters:
          allOf:
          - $ref: '#/components/schemas/JobParameters'
          description: The parameters for the job.
        attachments:
          allOf:
          - $ref: '#/components/schemas/Attachments'
          description: The attachments for the job.
        description:
          allOf:
          - $ref: '#/components/schemas/JobDescription'
          description: 'The description of the job.


            This field can store any content. Escape or encode this content before
            displaying it on a webpage or any other system that might interpret the
            content of this field.'
        maxWorkerCount:
          allOf:
          - $ref: '#/components/schemas/MaxWorkerCount'
          description: 'The maximum number of worker hosts that can concurrently process
            a job. When the `maxWorkerCount` is reached, no more workers will be assigned
            to process the job, even if the fleets assigned to the job''s queue has
            available workers.


            If you don''t set the `maxWorkerCount` when you create a job, this value
            is not returned in the response.'
        sourceJobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          description: The job ID for the source job.
      required:
      - jobId
      - name
      - lifecycleStatus
      - lifecycleStatusMessage
      - priority
      - createdAt
      - createdBy
    GetLicenseEndpointRequest:
      type: object
      properties:
        licenseEndpointId:
          allOf:
          - $ref: '#/components/schemas/LicenseEndpointId'
          description: The license endpoint ID.
      required:
      - licenseEndpointId
    GetLicenseEndpointResponse:
      type: object
      properties:
        licenseEndpointId:
          allOf:
          - $ref: '#/components/schemas/LicenseEndpointId'
          description: The license endpoint ID.
        status:
          allOf:
          - $ref: '#/components/schemas/LicenseEndpointStatus'
          description: The status of the license endpoint.
        statusMessage:
          allOf:
          - $ref: '#/components/schemas/StatusMessage'
          description: The status message of the license endpoint.
        vpcId:
          allOf:
          - $ref: '#/components/schemas/VpcId'
          description: The VCP(virtual private cloud) ID associated with the license
            endpoint.
        dnsName:
          allOf:
          - $ref: '#/components/schemas/DnsName'
          description: The DNS name.
        subnetIds:
          allOf:
          - $ref: '#/components/schemas/SubnetIdList'
          description: The subnet IDs.
        securityGroupIds:
          allOf:
          - $ref: '#/components/schemas/SecurityGroupIdList'
          description: The security group IDs for the license endpoint.
      required:
      - licenseEndpointId
      - status
      - statusMessage
    GetLimitRequest:
      type: object
      properties:
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The unique identifier of the farm that contains the limit.
        limitId:
          allOf:
          - $ref: '#/components/schemas/LimitId'
          description: The unique identifier of the limit to return.
      required:
      - farmId
      - limitId
    GetLimitResponse:
      type: object
      properties:
        displayName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: 'The display name of the limit.


            This field can store any content. Escape or encode this content before
            displaying it on a webpage or any other system that might interpret the
            content of this field.'
        amountRequirementName:
          allOf:
          - $ref: '#/components/schemas/AmountRequirementName'
          description: The value that you specify as the `name` in the `amounts` field
            of the `hostRequirements` in a step of a job template to declare the limit
            requirement.
        maxCount:
          allOf:
          - $ref: '#/components/schemas/MaxCount'
          description: 'The maximum number of resources constrained by this limit.
            When all of the resources are in use, steps that require the limit won''t
            be scheduled until the resource is available.


            The `maxValue` must not be 0. If the value is -1, there is no restriction
            on the number of resources that can be acquired for this limit.'
        createdAt:
          allOf:
          - $ref: '#/components/schemas/CreatedAt'
          description: The Unix timestamp of the date and time that the limit was
            created.
        createdBy:
          allOf:
          - $ref: '#/components/schemas/CreatedBy'
          description: The user identifier of the person that created the limit.
        updatedAt:
          allOf:
          - $ref: '#/components/schemas/UpdatedAt'
          description: The Unix timestamp of the date and time that the limit was
            last updated.
        updatedBy:
          allOf:
          - $ref: '#/components/schemas/UpdatedBy'
          description: The user identifier of the person that last updated the limit.
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The unique identifier of the farm that contains the limit.
        limitId:
          allOf:
          - $ref: '#/components/schemas/LimitId'
          description: The unique identifier of the limit.
        currentCount:
          allOf:
          - $ref: '#/components/schemas/MinZeroMaxInteger'
          description: The number of resources from the limit that are being used
            by jobs. The result is delayed and may not be the count at the time that
            you called the operation.
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: 'The description of the limit that helps identify what the
            limit is used for.


            This field can store any content. Escape or encode this content before
            displaying it on a webpage or any other system that might interpret the
            content of this field.'
      required:
      - displayName
      - amountRequirementName
      - maxCount
      - createdAt
      - createdBy
      - farmId
      - limitId
      - currentCount
    GetMonitorRequest:
      type: object
      properties:
        monitorId:
          allOf:
          - $ref: '#/components/schemas/MonitorId'
          description: The unique identifier for the monitor. This ID is returned
            by the `CreateMonitor` operation.
      required:
      - monitorId
    GetMonitorResponse:
      type: object
      properties:
        monitorId:
          allOf:
          - $ref: '#/components/schemas/MonitorId'
          description: The unique identifier for the monitor.
        displayName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: 'The name used to identify the monitor on the Deadline Cloud
            console.


            This field can store any content. Escape or encode this content before
            displaying it on a webpage or any other system that might interpret the
            content of this field.'
        subdomain:
          allOf:
          - $ref: '#/components/schemas/Subdomain'
          description: The subdomain used for the monitor URL. The full URL of the
            monitor is subdomain.Region.deadlinecloud.amazonaws.com.
        url:
          allOf:
          - $ref: '#/components/schemas/Url'
          description: The complete URL of the monitor. The full URL of the monitor
            is subdomain.Region.deadlinecloud.amazonaws.com.
        roleArn:
          allOf:
          - $ref: '#/components/schemas/IamRoleArn'
          description: The Amazon Resource Name (ARN) of the IAM role for the monitor.
            Users of the monitor use this role to access Deadline Cloud resources.
        identityCenterInstanceArn:
          allOf:
          - $ref: '#/components/schemas/IdentityCenterInstanceArn'
          description: The Amazon Resource Name (ARN) of the IAM Identity Center instance
            responsible for authenticating monitor users.
        identityCenterApplicationArn:
          allOf:
          - $ref: '#/components/schemas/IdentityCenterApplicationArn'
          description: The Amazon Resource Name (ARN) that the IAM Identity Center
            assigned to the monitor when it was created.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/CreatedAt'
          description: The UNIX timestamp of the date and time that the monitor was
            created.
        createdBy:
          allOf:
          - $ref: '#/components/schemas/CreatedBy'
          description: The user name of the person that created the monitor.
        updatedAt:
          allOf:
          - $ref: '#/components/schemas/UpdatedAt'
          description: The UNIX timestamp of the last date and time that the monitor
            was updated.
        updatedBy:
          allOf:
          - $ref: '#/components/schemas/UpdatedBy'
          description: The user name of the person that last updated the monitor.
      required:
      - monitorId
      - displayName
      - subdomain
      - url
      - roleArn
      - identityCenterInstanceArn
      - identityCenterApplicationArn
      - createdAt
      - createdBy
    GetQueueEnvironmentRequest:
      type: object
      properties:
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The farm ID for the queue environment.
        queueId:
          allOf:
          - $ref: '#/components/schemas/QueueId'
          description: The queue ID for the queue environment.
        queueEnvironmentId:
          allOf:
          - $ref: '#/components/schemas/QueueEnvironmentId'
          description: The queue environment ID.
      required:
      - farmId
      - queueId
      - queueEnvironmentId
    GetQueueEnvironmentResponse:
      type: object
      properties:
        queueEnvironmentId:
          allOf:
          - $ref: '#/components/schemas/QueueEnvironmentId'
          description: The queue environment ID.
        name:
          allOf:
          - $ref: '#/components/schemas/EnvironmentName'
          description: The name of the queue environment.
        priority:
          allOf:
          - $ref: '#/components/schemas/Priority'
          description: The priority of the queue environment.
        templateType:
          allOf:
          - $ref: '#/components/schemas/EnvironmentTemplateType'
          description: The type of template for the queue environment.
        template:
          allOf:
          - $ref: '#/components/schemas/EnvironmentTemplate'
          description: The template for the queue environment.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/CreatedAt'
          description: The date and time the resource was created.
        createdBy:
          allOf:
          - $ref: '#/components/schemas/CreatedBy'
          description: The user or system that created this resource.>
        updatedAt:
          allOf:
          - $ref: '#/components/schemas/UpdatedAt'
          description: The date and time the resource was updated.
        updatedBy:
          allOf:
          - $ref: '#/components/schemas/UpdatedBy'
          description: The user or system that updated this resource.
      required:
      - queueEnvironmentId
      - name
      - priority
      - templateType
      - template
      - createdAt
      - createdBy
    GetQueueFleetAssociationRequest:
      type: object
      properties:
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The farm ID of the farm that contains the queue-fleet association.
        queueId:
          allOf:
          - $ref: '#/components/schemas/QueueId'
          description: The queue ID for the queue-fleet association.
        fleetId:
          allOf:
          - $ref: '#/components/schemas/FleetId'
          description: The fleet ID for the queue-fleet association.
      required:
      - farmId
      - queueId
      - fleetId
    GetQueueFleetAssociationResponse:
      type: object
      properties:
        queueId:
          allOf:
          - $ref: '#/components/schemas/QueueId'
          description: The queue ID for the queue-fleet association.
        fleetId:
          allOf:
          - $ref: '#/components/schemas/FleetId'
          description: The fleet ID for the queue-fleet association.
        status:
          allOf:
          - $ref: '#/components/schemas/QueueFleetAssociationStatus'
          description: The status of the queue-fleet association.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/CreatedAt'
          description: The date and time the resource was created.
        createdBy:
          allOf:
          - $ref: '#/components/schemas/CreatedBy'
          description: The user or system that created this resource.
        updatedAt:
          allOf:
          - $ref: '#/components/schemas/UpdatedAt'
          description: The date and time the resource was updated.
        updatedBy:
          allOf:
          - $ref: '#/components/schemas/UpdatedBy'
          description: The user or system that updated this resource.
      required:
      - queueId
      - fleetId
      - status
      - createdAt
      - createdBy
    GetQueueLimitAssociationRequest:
      type: object
      properties:
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The unique identifier of the farm that contains the associated
            queue and limit.
        queueId:
          allOf:
          - $ref: '#/components/schemas/QueueId'
          description: The unique identifier of the queue associated with the limit.
        limitId:
          allOf:
          - $ref: '#/components/schemas/LimitId'
          description: The unique identifier of the limit associated with the queue.
      required:
      - farmId
      - queueId
      - limitId
    GetQueueLimitAssociationResponse:
      type: object
      properties:
        createdAt:
          allOf:
          - $ref: '#/components/schemas/CreatedAt'
          description: The Unix timestamp of the date and time that the association
            was created.
        createdBy:
          allOf:
          - $ref: '#/components/schemas/CreatedBy'
          description: The user identifier of the person that created the association.
        updatedAt:
          allOf:
          - $ref: '#/components/schemas/UpdatedAt'
          description: The Unix timestamp of the date and time that the association
            was last updated.
        updatedBy:
          allOf:
          - $ref: '#/components/schemas/UpdatedBy'
          description: The user identifier of the person that last updated the association.
        queueId:
          allOf:
          - $ref: '#/components/schemas/QueueId'
          description: The unique identifier of the queue associated with the limit.
        limitId:
          allOf:
          - $ref: '#/components/schemas/LimitId'
          description: The unique identifier of the limit associated with the queue.
        status:
          allOf:
          - $ref: '#/components/schemas/QueueLimitAssociationStatus'
          description: The current status of the limit.
      required:
      - createdAt
      - createdBy
      - queueId
      - limitId
      - status
    GetQueueRequest:
      type: object
      properties:
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The farm ID of the farm in the queue.
        queueId:
          allOf:
          - $ref: '#/components/schemas/QueueId'
          description: The queue ID for the queue to retrieve.
      required:
      - farmId
      - queueId
    GetQueueResponse:
      type: object
      properties:
        queueId:
          allOf:
          - $ref: '#/components/schemas/QueueId'
          description: The queue ID.
        displayName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: 'The display name of the queue.


            This field can store any content. Escape or encode this content before
            displaying it on a webpage or any other system that might interpret the
            content of this field.'
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: 'The description of the queue.


            This field can store any content. Escape or encode this content before
            displaying it on a webpage or any other system that might interpret the
            content of this field.'
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The farm ID for the queue.
        status:
          allOf:
          - $ref: '#/components/schemas/QueueStatus'
          description: "The status of the queue.\n\n  * `ACTIVE`–The queue is active.\n\
            \n  * `SCHEDULING`–The queue is scheduling.\n\n  * `SCHEDULING_BLOCKED`–The\
            \ queue scheduling is blocked. See the provided reason."
        defaultBudgetAction:
          allOf:
          - $ref: '#/components/schemas/DefaultQueueBudgetAction'
          description: The default action taken on a queue if a budget wasn't configured.
        blockedReason:
          allOf:
          - $ref: '#/components/schemas/QueueBlockedReason'
          description: The reason the queue was blocked.
        jobAttachmentSettings:
          allOf:
          - $ref: '#/components/schemas/JobAttachmentSettings'
          description: The job attachment settings for the queue.
        roleArn:
          allOf:
          - $ref: '#/components/schemas/IamRoleArn'
          description: The IAM role ARN.
        requiredFileSystemLocationNames:
          allOf:
          - $ref: '#/components/schemas/RequiredFileSystemLocationNames'
          description: A list of the required file system location names in the queue.
        allowedStorageProfileIds:
          allOf:
          - $ref: '#/components/schemas/AllowedStorageProfileIds'
          description: The storage profile IDs for the queue.
        jobRunAsUser:
          allOf:
          - $ref: '#/components/schemas/JobRunAsUser'
          description: The jobs in the queue ran as this specified POSIX user.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/CreatedAt'
          description: The date and time the resource was created.
        createdBy:
          allOf:
          - $ref: '#/components/schemas/CreatedBy'
          description: The user or system that created this resource.
        updatedAt:
          allOf:
          - $ref: '#/components/schemas/UpdatedAt'
          description: The date and time the resource was updated.
        updatedBy:
          allOf:
          - $ref: '#/components/schemas/UpdatedBy'
          description: The user or system that updated this resource.
      required:
      - queueId
      - displayName
      - farmId
      - status
      - defaultBudgetAction
      - createdAt
      - createdBy
    GetSessionActionRequest:
      type: object
      properties:
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The farm ID for the session action.
        queueId:
          allOf:
          - $ref: '#/components/schemas/QueueId'
          description: The queue ID for the session action.
        jobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          description: The job ID for the session.
        sessionActionId:
          allOf:
          - $ref: '#/components/schemas/SessionActionId'
          description: The session action ID for the session.
      required:
      - farmId
      - queueId
      - jobId
      - sessionActionId
    GetSessionActionResponse:
      type: object
      properties:
        sessionActionId:
          allOf:
          - $ref: '#/components/schemas/SessionActionId'
          description: The session action ID.
        status:
          allOf:
          - $ref: '#/components/schemas/SessionActionStatus'
          description: The status of the session action.
        startedAt:
          allOf:
          - $ref: '#/components/schemas/StartedAt'
          description: The date and time the resource started running.
        endedAt:
          allOf:
          - $ref: '#/components/schemas/EndedAt'
          description: The date and time the resource ended running.
        workerUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The Linux timestamp of the date and time the session action
            was last updated.
        progressPercent:
          allOf:
          - $ref: '#/components/schemas/SessionActionProgressPercent'
          description: The percentage completed for a session action.
        sessionId:
          allOf:
          - $ref: '#/components/schemas/SessionId'
          description: The session ID for the session action.
        processExitCode:
          allOf:
          - $ref: '#/components/schemas/ProcessExitCode'
          description: The process exit code. The default Deadline Cloud worker agent
            converts unsigned 32-bit exit codes to signed 32-bit exit codes.
        progressMessage:
          allOf:
          - $ref: '#/components/schemas/SessionActionProgressMessage'
          description: The message that communicates the progress of the session action.
        definition:
          allOf:
          - $ref: '#/components/schemas/SessionActionDefinition'
          description: The session action definition.
        acquiredLimits:
          allOf:
          - $ref: '#/components/schemas/AcquiredLimits'
          description: The limits and their amounts acquired during a session action.
            If no limits were acquired during the session, this field isn't returned.
      required:
      - sessionActionId
      - status
      - sessionId
      - definition
    GetSessionRequest:
      type: object
      properties:
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The farm ID for the session.
        queueId:
          allOf:
          - $ref: '#/components/schemas/QueueId'
          description: The queue ID for the session.
        jobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          description: The job ID for the session.
        sessionId:
          allOf:
          - $ref: '#/components/schemas/SessionId'
          description: The session ID.
      required:
      - farmId
      - queueId
      - jobId
      - sessionId
    GetSessionResponse:
      type: object
      properties:
        sessionId:
          allOf:
          - $ref: '#/components/schemas/SessionId'
          description: The session ID.
        fleetId:
          allOf:
          - $ref: '#/components/schemas/FleetId'
          description: The fleet ID for the session.
        workerId:
          allOf:
          - $ref: '#/components/schemas/WorkerId'
          description: The worker ID for the session.
        startedAt:
          allOf:
          - $ref: '#/components/schemas/StartedAt'
          description: The date and time the resource started running.
        log:
          allOf:
          - $ref: '#/components/schemas/LogConfiguration'
          description: The session log.
        lifecycleStatus:
          allOf:
          - $ref: '#/components/schemas/SessionLifecycleStatus'
          description: The life cycle status of the session.
        endedAt:
          allOf:
          - $ref: '#/components/schemas/EndedAt'
          description: The date and time the resource ended running.
        updatedAt:
          allOf:
          - $ref: '#/components/schemas/UpdatedAt'
          description: The date and time the resource was updated.
        updatedBy:
          allOf:
          - $ref: '#/components/schemas/UpdatedBy'
          description: The user or system that updated this resource.
        targetLifecycleStatus:
          allOf:
          - $ref: '#/components/schemas/SessionLifecycleTargetStatus'
          description: The life cycle status with which the session started.
        hostProperties:
          allOf:
          - $ref: '#/components/schemas/HostPropertiesResponse'
          description: Provides the Amazon EC2 properties of the host.
        workerLog:
          allOf:
          - $ref: '#/components/schemas/LogConfiguration'
          description: The worker log for the session.
      required:
      - sessionId
      - fleetId
      - workerId
      - startedAt
      - log
      - lifecycleStatus
    GetSessionsStatisticsAggregationRequest:
      type: object
      properties:
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The identifier of the farm to include in the statistics. This
            should be the same as the farm ID used in the call to the `StartSessionsStatisticsAggregation`
            operation.
        aggregationId:
          allOf:
          - $ref: '#/components/schemas/AggregationId'
          description: The identifier returned by the `StartSessionsStatisticsAggregation`
            operation that identifies the aggregated statistics.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return. Use this parameter
            with `NextToken` to get results as a set of sequential pages.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The token for the next set of results, or `null` to start from
            the beginning.
      required:
      - farmId
      - aggregationId
    GetSessionsStatisticsAggregationResponse:
      type: object
      properties:
        statistics:
          allOf:
          - $ref: '#/components/schemas/StatisticsList'
          description: The statistics for the specified fleets or queues.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: If Deadline Cloud returns `nextToken`, then there are more
            results available. The value of `nextToken` is a unique pagination token
            for each page. To retrieve the next page, call the operation again using
            the returned token. Keep all other arguments unchanged. If no results
            remain, then `nextToken` is set to `null`. Each pagination token expires
            after 24 hours. If you provide a token that isn't valid, then you receive
            an HTTP 400 `ValidationException` error.
        status:
          allOf:
          - $ref: '#/components/schemas/SessionsStatisticsAggregationStatus'
          description: 'The status of the aggregated results. An aggregation may fail
            or time out if the results are too large. If this happens, you can call
            the `StartSessionsStatisticsAggregation` operation after you reduce the
            aggregation time frame, reduce the number of queues or fleets in the aggregation,
            or increase the period length.


            If you call the `StartSessionsStatisticsAggregation ` operation when the
            status is `IN_PROGRESS`, you will receive a `ThrottlingException`.'
        statusMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A message that describes the status.
      required:
      - status
    GetStepRequest:
      type: object
      properties:
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The farm ID for the step.
        queueId:
          allOf:
          - $ref: '#/components/schemas/QueueId'
          description: The queue ID for the step.
        jobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          description: The job ID for the step.
        stepId:
          allOf:
          - $ref: '#/components/schemas/StepId'
          description: The step ID.
      required:
      - farmId
      - queueId
      - jobId
      - stepId
    GetStepResponse:
      type: object
      properties:
        stepId:
          allOf:
          - $ref: '#/components/schemas/StepId'
          description: The step ID.
        name:
          allOf:
          - $ref: '#/components/schemas/StepName'
          description: The name of the step.
        lifecycleStatus:
          allOf:
          - $ref: '#/components/schemas/StepLifecycleStatus'
          description: The life cycle status of the step.
        lifecycleStatusMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A message that describes the lifecycle status of the step.
        taskRunStatus:
          allOf:
          - $ref: '#/components/schemas/TaskRunStatus'
          description: The task run status for the job.
        taskRunStatusCounts:
          allOf:
          - $ref: '#/components/schemas/TaskRunStatusCounts'
          description: The number of tasks running on the job.
        targetTaskRunStatus:
          allOf:
          - $ref: '#/components/schemas/StepTargetTaskRunStatus'
          description: The task status with which the job started.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/CreatedAt'
          description: The date and time the resource was created.
        createdBy:
          allOf:
          - $ref: '#/components/schemas/CreatedBy'
          description: The user or system that created this resource.
        updatedAt:
          allOf:
          - $ref: '#/components/schemas/UpdatedAt'
          description: The date and time the resource was updated.
        updatedBy:
          allOf:
          - $ref: '#/components/schemas/UpdatedBy'
          description: The user or system that updated this resource.
        startedAt:
          allOf:
          - $ref: '#/components/schemas/StartedAt'
          description: The date and time the resource started running.
        endedAt:
          allOf:
          - $ref: '#/components/schemas/EndedAt'
          description: The date and time the resource ended running.
        dependencyCounts:
          allOf:
          - $ref: '#/components/schemas/DependencyCounts'
          description: The number of dependencies in the step.
        requiredCapabilities:
          allOf:
          - $ref: '#/components/schemas/StepRequiredCapabilities'
          description: The required capabilities of the step.
        parameterSpace:
          allOf:
          - $ref: '#/components/schemas/ParameterSpace'
          description: A list of step parameters and the combination expression for
            the step.
        description:
          allOf:
          - $ref: '#/components/schemas/StepDescription'
          description: 'The description of the step.


            This field can store any content. Escape or encode this content before
            displaying it on a webpage or any other system that might interpret the
            content of this field.'
      required:
      - stepId
      - name
      - lifecycleStatus
      - taskRunStatus
      - taskRunStatusCounts
      - createdAt
      - createdBy
    GetStorageProfileForQueueRequest:
      type: object
      properties:
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The farm ID for the queue in storage profile.
        queueId:
          allOf:
          - $ref: '#/components/schemas/QueueId'
          description: The queue ID the queue in the storage profile.
        storageProfileId:
          allOf:
          - $ref: '#/components/schemas/StorageProfileId'
          description: The storage profile ID for the storage profile in the queue.
      required:
      - farmId
      - queueId
      - storageProfileId
    GetStorageProfileForQueueResponse:
      type: object
      properties:
        storageProfileId:
          allOf:
          - $ref: '#/components/schemas/StorageProfileId'
          description: The storage profile ID.
        displayName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: 'The display name of the storage profile connected to a queue.


            This field can store any content. Escape or encode this content before
            displaying it on a webpage or any other system that might interpret the
            content of this field.'
        osFamily:
          allOf:
          - $ref: '#/components/schemas/StorageProfileOperatingSystemFamily'
          description: The operating system of the storage profile in the queue.
        fileSystemLocations:
          allOf:
          - $ref: '#/components/schemas/FileSystemLocationsList'
          description: The location of the files for the storage profile within the
            queue.
      required:
      - storageProfileId
      - displayName
      - osFamily
    GetStorageProfileRequest:
      type: object
      properties:
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The farm ID for the storage profile.
        storageProfileId:
          allOf:
          - $ref: '#/components/schemas/StorageProfileId'
          description: The storage profile ID.
      required:
      - farmId
      - storageProfileId
    GetStorageProfileResponse:
      type: object
      properties:
        storageProfileId:
          allOf:
          - $ref: '#/components/schemas/StorageProfileId'
          description: The storage profile ID.
        displayName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: 'The display name of the storage profile.


            This field can store any content. Escape or encode this content before
            displaying it on a webpage or any other system that might interpret the
            content of this field.'
        osFamily:
          allOf:
          - $ref: '#/components/schemas/StorageProfileOperatingSystemFamily'
          description: The operating system (OS) for the storage profile.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/CreatedAt'
          description: The date and time the resource was created.
        createdBy:
          allOf:
          - $ref: '#/components/schemas/CreatedBy'
          description: The user or system that created this resource.
        updatedAt:
          allOf:
          - $ref: '#/components/schemas/UpdatedAt'
          description: The date and time the resource was updated.
        updatedBy:
          allOf:
          - $ref: '#/components/schemas/UpdatedBy'
          description: The user or system that updated this resource.
        fileSystemLocations:
          allOf:
          - $ref: '#/components/schemas/FileSystemLocationsList'
          description: The location of the files for the storage profile.
      required:
      - storageProfileId
      - displayName
      - osFamily
      - createdAt
      - createdBy
    GetTaskRequest:
      type: object
      properties:
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The farm ID of the farm connected to the task.
        queueId:
          allOf:
          - $ref: '#/components/schemas/QueueId'
          description: The queue ID for the queue connected to the task.
        jobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          description: The job ID of the job connected to the task.
        stepId:
          allOf:
          - $ref: '#/components/schemas/StepId'
          description: The step ID for the step connected to the task.
        taskId:
          allOf:
          - $ref: '#/components/schemas/TaskId'
          description: The task ID.
      required:
      - farmId
      - queueId
      - jobId
      - stepId
      - taskId
    GetTaskResponse:
      type: object
      properties:
        taskId:
          allOf:
          - $ref: '#/components/schemas/TaskId'
          description: The task ID.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/CreatedAt'
          description: The date and time the resource was created.
        createdBy:
          allOf:
          - $ref: '#/components/schemas/CreatedBy'
          description: The user or system that created this resource.
        runStatus:
          allOf:
          - $ref: '#/components/schemas/TaskRunStatus'
          description: The run status for the task.
        targetRunStatus:
          allOf:
          - $ref: '#/components/schemas/TaskTargetRunStatus'
          description: The run status with which to start the task.
        failureRetryCount:
          allOf:
          - $ref: '#/components/schemas/TaskRetryCount'
          description: The number of times that the task failed and was retried.
        parameters:
          allOf:
          - $ref: '#/components/schemas/TaskParameters'
          description: The parameters for the task.
        startedAt:
          allOf:
          - $ref: '#/components/schemas/StartedAt'
          description: The date and time the resource started running.
        endedAt:
          allOf:
          - $ref: '#/components/schemas/EndedAt'
          description: The date and time the resource ended running.
        updatedAt:
          allOf:
          - $ref: '#/components/schemas/UpdatedAt'
          description: The date and time the resource was updated.
        updatedBy:
          allOf:
          - $ref: '#/components/schemas/UpdatedBy'
          description: The user or system that updated this resource.
        latestSessionActionId:
          allOf:
          - $ref: '#/components/schemas/SessionActionId'
          description: The latest session ID for the task.
      required:
      - taskId
      - createdAt
      - createdBy
      - runStatus
    GetWorkerRequest:
      type: object
      properties:
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The farm ID for the worker.
        fleetId:
          allOf:
          - $ref: '#/components/schemas/FleetId'
          description: The fleet ID of the worker.
        workerId:
          allOf:
          - $ref: '#/components/schemas/WorkerId'
          description: The worker ID.
      required:
      - farmId
      - fleetId
      - workerId
    GetWorkerResponse:
      type: object
      properties:
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The farm ID.
        fleetId:
          allOf:
          - $ref: '#/components/schemas/FleetId'
          description: The fleet ID.
        workerId:
          allOf:
          - $ref: '#/components/schemas/WorkerId'
          description: The worker ID.
        hostProperties:
          allOf:
          - $ref: '#/components/schemas/HostPropertiesResponse'
          description: The host properties for the worker.
        status:
          allOf:
          - $ref: '#/components/schemas/WorkerStatus'
          description: The status of the worker.
        log:
          allOf:
          - $ref: '#/components/schemas/LogConfiguration'
          description: The logs for the associated worker.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/CreatedAt'
          description: The date and time the resource was created.
        createdBy:
          allOf:
          - $ref: '#/components/schemas/CreatedBy'
          description: The user or system that created this resource.
        updatedAt:
          allOf:
          - $ref: '#/components/schemas/UpdatedAt'
          description: The date and time the resource was updated.
        updatedBy:
          allOf:
          - $ref: '#/components/schemas/UpdatedBy'
          description: The user or system that updated this resource.
      required:
      - farmId
      - fleetId
      - workerId
      - status
      - createdAt
      - createdBy
    HostName:
      type: string
      pattern: ^[a-zA-Z0-9_\.\-]{0,255}$
    HostPropertiesRequest:
      type: object
      properties:
        ipAddresses:
          allOf:
          - $ref: '#/components/schemas/IpAddresses'
          description: The IP address of the host.
        hostName:
          allOf:
          - $ref: '#/components/schemas/HostName'
          description: The host name.
      description: The host property details.
    HostPropertiesResponse:
      type: object
      properties:
        ipAddresses:
          allOf:
          - $ref: '#/components/schemas/IpAddresses'
          description: The IP address of the host.
        hostName:
          allOf:
          - $ref: '#/components/schemas/HostName'
          description: The host name.
        ec2InstanceArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ARN of the host EC2 instance.
        ec2InstanceType:
          allOf:
          - $ref: '#/components/schemas/InstanceType'
          description: The instance type of the host EC2 instance.
      description: The host property details.
    IamRoleArn:
      type: string
      pattern: ^arn:(aws[a-zA-Z-]*):iam::\d{12}:role(/[!-.0-~]+)*/[\w+=,.@-]+$
    IdentityCenterApplicationArn:
      type: string
    IdentityCenterInstanceArn:
      type: string
      pattern: ^arn:(aws|aws-us-gov|aws-cn|aws-iso|aws-iso-b):sso:::instance/(sso)?ins-[a-zA-Z0-9-.]{16}$
    IdentityCenterPrincipalId:
      type: string
      pattern: ^([0-9a-f]{10}-|)[A-Fa-f0-9]{8}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{12}$
      minLength: 1
      maxLength: 47
    IdentityStoreId:
      type: string
      pattern: ^d-[0-9a-f]{10}$|^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
      minLength: 1
      maxLength: 36
    InstanceType:
      type: string
      pattern: ^[a-zA-Z0-9]+\.[a-zA-Z0-9]+$
    InstanceTypes:
      type: array
      items:
        $ref: '#/components/schemas/InstanceType'
    IntString:
      type: string
      pattern: ^[-]?(0|[1-9][0-9]*)$
      minLength: 1
      maxLength: 20
    Integer:
      type: integer
    InternalServerErrorException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
        retryAfterSeconds:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of seconds a client should wait before retrying
            the request.
      required:
      - message
      description: Deadline Cloud can't process your request right now. Try again
        later.
    IpAddresses:
      type: object
      properties:
        ipV4Addresses:
          allOf:
          - $ref: '#/components/schemas/IpV4Addresses'
          description: The IpV4 address of the network.
        ipV6Addresses:
          allOf:
          - $ref: '#/components/schemas/IpV6Addresses'
          description: The IpV6 address for the network and node component.
      description: The IP addresses for a host.
    IpV4Address:
      type: string
      pattern: ^(?:[0-9]{1,3}\.){3}[0-9]{1,3}$
    IpV4Addresses:
      type: array
      items:
        $ref: '#/components/schemas/IpV4Address'
    IpV6Address:
      type: string
      pattern: ^(?:[A-F0-9]{1,4}:){7}[A-F0-9]{1,4}$
    IpV6Addresses:
      type: array
      items:
        $ref: '#/components/schemas/IpV6Address'
    JobAttachmentDetailsEntity:
      type: object
      properties:
        jobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          description: The job ID.
        attachments:
          allOf:
          - $ref: '#/components/schemas/Attachments'
          description: The job attachments.
      required:
      - jobId
      - attachments
      description: The job attachments.
    JobAttachmentDetailsError:
      type: object
      properties:
        jobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          description: The job ID.
        code:
          allOf:
          - $ref: '#/components/schemas/JobEntityErrorCode'
          description: The error code.
        message:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The error message detailing the error's cause.
      required:
      - jobId
      - code
      - message
      description: The error details for job attachments.
    JobAttachmentDetailsIdentifiers:
      type: object
      properties:
        jobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          description: The job ID.
      required:
      - jobId
      description: Identifier details for job attachments.
    JobAttachmentSettings:
      type: object
      properties:
        s3BucketName:
          allOf:
          - $ref: '#/components/schemas/S3BucketName'
          description: The Amazon S3 bucket name.
        rootPrefix:
          allOf:
          - $ref: '#/components/schemas/S3Prefix'
          description: The root prefix.
      required:
      - s3BucketName
      - rootPrefix
      description: The job attachment settings. These are the Amazon S3 bucket name
        and the Amazon S3 prefix.
    JobAttachmentsFileSystem:
      type: string
      enum:
      - COPIED
      - VIRTUAL
    JobDescription:
      type: string
      minLength: 1
      maxLength: 2048
    JobDetailsEntity:
      type: object
      properties:
        jobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          description: The job ID.
        jobAttachmentSettings:
          allOf:
          - $ref: '#/components/schemas/JobAttachmentSettings'
          description: The job attachment settings.
        jobRunAsUser:
          allOf:
          - $ref: '#/components/schemas/JobRunAsUser'
          description: The user name and group that the job uses when run.
        logGroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The log group name.
        queueRoleArn:
          allOf:
          - $ref: '#/components/schemas/IamRoleArn'
          description: The queue role ARN.
        parameters:
          allOf:
          - $ref: '#/components/schemas/JobParameters'
          description: The parameters.
        schemaVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The schema version.
        pathMappingRules:
          allOf:
          - $ref: '#/components/schemas/PathMappingRules'
          description: The path mapping rules.
      required:
      - jobId
      - logGroupName
      - schemaVersion
      description: The job details for a specific job.
    JobDetailsError:
      type: object
      properties:
        jobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          description: The job ID.
        code:
          allOf:
          - $ref: '#/components/schemas/JobEntityErrorCode'
          description: The error code.
        message:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The error message detailing the error's cause.
      required:
      - jobId
      - code
      - message
      description: The details of a job error.
    JobDetailsIdentifiers:
      type: object
      properties:
        jobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          description: The job ID.
      required:
      - jobId
      description: The identifiers for a job.
    JobEntity:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/JobDetailsEntity'
        description: |-
          The job details.
      - allOf:
        - $ref: '#/components/schemas/JobAttachmentDetailsEntity'
        description: |-
          The job attachment details.
      - allOf:
        - $ref: '#/components/schemas/StepDetailsEntity'
        description: |-
          The step details.
      - allOf:
        - $ref: '#/components/schemas/EnvironmentDetailsEntity'
        description: |-
          The environment details for the job entity.
      description: |-
        The details of a job entity.
    JobEntityErrorCode:
      type: string
      enum:
      - AccessDeniedException
      - InternalServerException
      - ValidationException
      - ResourceNotFoundException
      - MaxPayloadSizeExceeded
      - ConflictException
    JobEntityIdentifiers:
      type: array
      items:
        $ref: '#/components/schemas/JobEntityIdentifiersUnion'
    JobEntityIdentifiersUnion:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/JobDetailsIdentifiers'
        description: |-
          The job details.
      - allOf:
        - $ref: '#/components/schemas/JobAttachmentDetailsIdentifiers'
        description: |-
          The job attachment details.
      - allOf:
        - $ref: '#/components/schemas/StepDetailsIdentifiers'
        description: |-
          The step details.
      - allOf:
        - $ref: '#/components/schemas/EnvironmentDetailsIdentifiers'
        description: |-
          The environment details.
      description: |-
        The details of a job entity identifier.
    JobId:
      type: string
      pattern: ^job-[0-9a-f]{32}$
    JobLifecycleStatus:
      type: string
      enum:
      - CREATE_IN_PROGRESS
      - CREATE_FAILED
      - CREATE_COMPLETE
      - UPLOAD_IN_PROGRESS
      - UPLOAD_FAILED
      - UPDATE_IN_PROGRESS
      - UPDATE_FAILED
      - UPDATE_SUCCEEDED
      - ARCHIVED
    JobMember:
      type: object
      properties:
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The farm ID.
        queueId:
          allOf:
          - $ref: '#/components/schemas/QueueId'
          description: The queue ID.
        jobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          description: The job ID.
        principalId:
          allOf:
          - $ref: '#/components/schemas/IdentityCenterPrincipalId'
          description: The principal ID of the job member.
        principalType:
          allOf:
          - $ref: '#/components/schemas/DeadlinePrincipalType'
          description: The principal type of the job member.
        identityStoreId:
          allOf:
          - $ref: '#/components/schemas/IdentityStoreId'
          description: The identity store ID.
        membershipLevel:
          allOf:
          - $ref: '#/components/schemas/MembershipLevel'
          description: The job member's membership level.
      required:
      - farmId
      - queueId
      - jobId
      - principalId
      - principalType
      - identityStoreId
      - membershipLevel
      description: The details for a job member.
    JobMembers:
      type: array
      items:
        $ref: '#/components/schemas/JobMember'
    JobName:
      type: string
      minLength: 1
      maxLength: 128
    JobParameter:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/IntString'
        description: |-
          A signed integer represented as a string.
      - allOf:
        - $ref: '#/components/schemas/FloatString'
        description: |-
          A double precision IEEE-754 floating point number represented as a string.
      - allOf:
        - $ref: '#/components/schemas/ParameterString'
        description: |-
          A UTF-8 string.
      - allOf:
        - $ref: '#/components/schemas/PathString'
        description: |-
          A file system path represented as a string.
      description: |-
        The details of job parameters.
    JobParameterDefinition:
      type: object
      additionalProperties: true
    JobParameterDefinitions:
      type: array
      items:
        $ref: '#/components/schemas/JobParameterDefinition'
    JobParameters:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/JobParameter'
    JobPriority:
      type: integer
      minimum: 0
      maximum: 100
    JobRunAsUser:
      type: object
      properties:
        posix:
          allOf:
          - $ref: '#/components/schemas/PosixUser'
          description: The user and group that the jobs in the queue run as.
        windows:
          allOf:
          - $ref: '#/components/schemas/WindowsUser'
          description: Identifies a Microsoft Windows user.
        runAs:
          allOf:
          - $ref: '#/components/schemas/RunAs'
          description: Specifies whether the job should run using the queue's system
            user or if the job should run using the worker agent system user.
      required:
      - runAs
      description: Identifies the user for a job.
    JobSearchSummaries:
      type: array
      items:
        $ref: '#/components/schemas/JobSearchSummary'
    JobSearchSummary:
      type: object
      properties:
        jobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          description: The job ID.
        queueId:
          allOf:
          - $ref: '#/components/schemas/QueueId'
          description: The queue ID.
        name:
          allOf:
          - $ref: '#/components/schemas/JobName'
          description: The job name.
        lifecycleStatus:
          allOf:
          - $ref: '#/components/schemas/JobLifecycleStatus'
          description: The life cycle status.
        lifecycleStatusMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The life cycle status message.
        taskRunStatus:
          allOf:
          - $ref: '#/components/schemas/TaskRunStatus'
          description: "The task run status for the job.\n\n  * `PENDING`–pending\
            \ and waiting for resources.\n\n  * `READY`–ready to be processed.\n\n\
            \  * `ASSIGNED`–assigned and will run next on a worker.\n\n  * `SCHEDULED`–scheduled\
            \ to be run on a worker.\n\n  * `INTERRUPTING`–being interrupted.\n\n\
            \  * `RUNNING`–running on a worker.\n\n  * `SUSPENDED`–the task is suspended.\n\
            \n  * `CANCELED`–the task has been canceled.\n\n  * `FAILED`–the task\
            \ has failed.\n\n  * `SUCCEEDED`–the task has succeeded."
        targetTaskRunStatus:
          allOf:
          - $ref: '#/components/schemas/JobTargetTaskRunStatus'
          description: The task status to start with on the job.
        taskRunStatusCounts:
          allOf:
          - $ref: '#/components/schemas/TaskRunStatusCounts'
          description: The number of tasks running on the job.
        priority:
          allOf:
          - $ref: '#/components/schemas/JobPriority'
          description: The job priority.
        maxFailedTasksCount:
          allOf:
          - $ref: '#/components/schemas/MaxFailedTasksCount'
          description: The number of task failures before the job stops running and
            is marked as `FAILED`.
        maxRetriesPerTask:
          allOf:
          - $ref: '#/components/schemas/MaxRetriesPerTask'
          description: The maximum number of retries for a job.
        createdBy:
          allOf:
          - $ref: '#/components/schemas/CreatedBy'
          description: The user or system that created this resource.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/CreatedAt'
          description: The date and time the resource was created.
        endedAt:
          allOf:
          - $ref: '#/components/schemas/EndedAt'
          description: The date and time the resource ended running.
        startedAt:
          allOf:
          - $ref: '#/components/schemas/StartedAt'
          description: The date and time the resource started running.
        jobParameters:
          allOf:
          - $ref: '#/components/schemas/JobParameters'
          description: The job parameters.
        maxWorkerCount:
          allOf:
          - $ref: '#/components/schemas/MaxWorkerCount'
          description: 'The maximum number of worker hosts that can concurrently process
            a job. When the `maxWorkerCount` is reached, no more workers will be assigned
            to process the job, even if the fleets assigned to the job''s queue has
            available workers.


            You can''t set the `maxWorkerCount` to 0. If you set it to -1, there is
            no maximum number of workers.


            If you don''t specify the `maxWorkerCount`, the default is -1.'
        sourceJobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          description: The job ID for the source job.
      description: The details of a job search.
    JobSummaries:
      type: array
      items:
        $ref: '#/components/schemas/JobSummary'
    JobSummary:
      type: object
      properties:
        jobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          description: The job ID.
        name:
          allOf:
          - $ref: '#/components/schemas/JobName'
          description: The job name.
        lifecycleStatus:
          allOf:
          - $ref: '#/components/schemas/JobLifecycleStatus'
          description: The life cycle status.
        lifecycleStatusMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The life cycle status message.
        priority:
          allOf:
          - $ref: '#/components/schemas/JobPriority'
          description: The job priority.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/CreatedAt'
          description: The date and time the resource was created.
        createdBy:
          allOf:
          - $ref: '#/components/schemas/CreatedBy'
          description: The user or system that created this resource.
        updatedAt:
          allOf:
          - $ref: '#/components/schemas/UpdatedAt'
          description: The date and time the resource was updated.
        updatedBy:
          allOf:
          - $ref: '#/components/schemas/UpdatedBy'
          description: The user or system that updated this resource.
        startedAt:
          allOf:
          - $ref: '#/components/schemas/StartedAt'
          description: The date and time the resource started running.
        endedAt:
          allOf:
          - $ref: '#/components/schemas/EndedAt'
          description: The date and time the resource ended running.
        taskRunStatus:
          allOf:
          - $ref: '#/components/schemas/TaskRunStatus'
          description: "The task run status for the job.\n\n  * `PENDING`–pending\
            \ and waiting for resources.\n\n  * `READY`–ready to be processed.\n\n\
            \  * `ASSIGNED`–assigned and will run next on a worker.\n\n  * `SCHEDULED`–scheduled\
            \ to be run on a worker.\n\n  * `INTERRUPTING`–being interrupted.\n\n\
            \  * `RUNNING`–running on a worker.\n\n  * `SUSPENDED`–the task is suspended.\n\
            \n  * `CANCELED`–the task has been canceled.\n\n  * `FAILED`–the task\
            \ has failed.\n\n  * `SUCCEEDED`–the task has succeeded."
        targetTaskRunStatus:
          allOf:
          - $ref: '#/components/schemas/JobTargetTaskRunStatus'
          description: The task status to start with on the job.
        taskRunStatusCounts:
          allOf:
          - $ref: '#/components/schemas/TaskRunStatusCounts'
          description: The number of tasks running on the job.
        maxFailedTasksCount:
          allOf:
          - $ref: '#/components/schemas/MaxFailedTasksCount'
          description: The number of task failures before the job stops running and
            is marked as `FAILED`.
        maxRetriesPerTask:
          allOf:
          - $ref: '#/components/schemas/MaxRetriesPerTask'
          description: The maximum number of retries for a job.
        maxWorkerCount:
          allOf:
          - $ref: '#/components/schemas/MaxWorkerCount'
          description: 'The maximum number of worker hosts that can concurrently process
            a job. When the `maxWorkerCount` is reached, no more workers will be assigned
            to process the job, even if the fleets assigned to the job''s queue has
            available workers.


            You can''t set the `maxWorkerCount` to 0. If you set it to -1, there is
            no maximum number of workers.


            If you don''t specify the `maxWorkerCount`, the default is -1.'
        sourceJobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          description: The job ID for the source job.
      required:
      - jobId
      - name
      - lifecycleStatus
      - lifecycleStatusMessage
      - priority
      - createdAt
      - createdBy
      description: A summary of job details.
    JobTargetTaskRunStatus:
      type: string
      enum:
      - READY
      - FAILED
      - SUCCEEDED
      - CANCELED
      - SUSPENDED
      - PENDING
    JobTemplate:
      type: string
      minLength: 1
      maxLength: 300000
    JobTemplateType:
      type: string
      enum:
      - JSON
      - YAML
    KmsKeyArn:
      type: string
      pattern: ^arn:(aws[a-zA-Z-]*):kms:[a-z]{2}((-gov)|(-iso(b?)))?-[a-z]+-\d{1}:\d{12}:key/[\w-]{1,120}$
    LicenseEndpointId:
      type: string
      pattern: ^le-[0-9a-f]{32}$
    LicenseEndpointStatus:
      type: string
      enum:
      - CREATE_IN_PROGRESS
      - DELETE_IN_PROGRESS
      - READY
      - NOT_READY
    LicenseEndpointSummaries:
      type: array
      items:
        $ref: '#/components/schemas/LicenseEndpointSummary'
    LicenseEndpointSummary:
      type: object
      properties:
        licenseEndpointId:
          allOf:
          - $ref: '#/components/schemas/LicenseEndpointId'
          description: The license endpoint ID.
        status:
          allOf:
          - $ref: '#/components/schemas/LicenseEndpointStatus'
          description: The status of the license endpoint.
        statusMessage:
          allOf:
          - $ref: '#/components/schemas/StatusMessage'
          description: The status message of the license endpoint.
        vpcId:
          allOf:
          - $ref: '#/components/schemas/VpcId'
          description: The VCP(virtual private cloud) ID associated with the license
            endpoint.
      description: The details for a license endpoint.
    LicenseProduct:
      type: string
    LimitId:
      type: string
      pattern: ^limit-[0-9a-f]{32}$
    LimitSummaries:
      type: array
      items:
        $ref: '#/components/schemas/LimitSummary'
    LimitSummary:
      type: object
      properties:
        displayName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: 'The name of the limit used in lists to identify the limit.


            This field can store any content. Escape or encode this content before
            displaying it on a webpage or any other system that might interpret the
            content of this field.'
        amountRequirementName:
          allOf:
          - $ref: '#/components/schemas/AmountRequirementName'
          description: The value that you specify as the `name` in the `amounts` field
            of the `hostRequirements` in a step of a job template to declare the limit
            requirement.
        maxCount:
          allOf:
          - $ref: '#/components/schemas/MaxCount'
          description: 'The maximum number of resources constrained by this limit.
            When all of the resources are in use, steps that require the limit won''t
            be scheduled until the resource is available.


            The `maxValue` must not be 0. If the value is -1, there is no restriction
            on the number of resources that can be acquired for this limit.'
        createdAt:
          allOf:
          - $ref: '#/components/schemas/CreatedAt'
          description: The Unix timestamp of the date and time that the limit was
            created.
        createdBy:
          allOf:
          - $ref: '#/components/schemas/CreatedBy'
          description: The user identifier of the person that created the limit.
        updatedAt:
          allOf:
          - $ref: '#/components/schemas/UpdatedAt'
          description: The Unix timestamp of the date and time that the limit was
            last updated.
        updatedBy:
          allOf:
          - $ref: '#/components/schemas/UpdatedBy'
          description: The user identifier of the person that last updated the limit.
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The unique identifier of the farm that contains the limit.
        limitId:
          allOf:
          - $ref: '#/components/schemas/LimitId'
          description: The unique identifier of the limit.
        currentCount:
          allOf:
          - $ref: '#/components/schemas/MinZeroMaxInteger'
          description: The number of resources from the limit that are being used
            by jobs. The result is delayed and may not be the count at the time that
            you called the operation.
      required:
      - displayName
      - amountRequirementName
      - maxCount
      - createdAt
      - createdBy
      - farmId
      - limitId
      - currentCount
      description: Provides information about a specific limit.
    ListAttributeCapabilityValue:
      type: array
      items:
        $ref: '#/components/schemas/AttributeCapabilityValue'
    ListAvailableMeteredProductsRequest:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The token for the next set of results, or `null` to start from
            the beginning.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return. Use this parameter
            with `NextToken` to get results as a set of sequential pages.
    ListAvailableMeteredProductsResponse:
      type: object
      properties:
        meteredProducts:
          allOf:
          - $ref: '#/components/schemas/MeteredProductSummaryList'
          description: The metered products.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: If Deadline Cloud returns `nextToken`, then there are more
            results available. The value of `nextToken` is a unique pagination token
            for each page. To retrieve the next page, call the operation again using
            the returned token. Keep all other arguments unchanged. If no results
            remain, then `nextToken` is set to `null`. Each pagination token expires
            after 24 hours. If you provide a token that isn't valid, then you receive
            an HTTP 400 `ValidationException` error.
      required:
      - meteredProducts
    ListBudgetsRequest:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The token for the next set of results, or `null` to start from
            the beginning.
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The farm ID associated with the budgets.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return. Use this parameter
            with `NextToken` to get results as a set of sequential pages.
        status:
          allOf:
          - $ref: '#/components/schemas/BudgetStatus'
          description: The status to list for the budgets.
      required:
      - farmId
    ListBudgetsResponse:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: If Deadline Cloud returns `nextToken`, then there are more
            results available. The value of `nextToken` is a unique pagination token
            for each page. To retrieve the next page, call the operation again using
            the returned token. Keep all other arguments unchanged. If no results
            remain, then `nextToken` is set to `null`. Each pagination token expires
            after 24 hours. If you provide a token that isn't valid, then you receive
            an HTTP 400 `ValidationException` error.
        budgets:
          allOf:
          - $ref: '#/components/schemas/BudgetSummaries'
          description: The budgets to include on the list.
      required:
      - budgets
    ListFarmMembersRequest:
      type: object
      properties:
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The farm ID.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The token for the next set of results, or `null` to start from
            the beginning.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return. Use this parameter
            with `NextToken` to get results as a set of sequential pages.
      required:
      - farmId
    ListFarmMembersResponse:
      type: object
      properties:
        members:
          allOf:
          - $ref: '#/components/schemas/FarmMembers'
          description: The members on the list.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: If Deadline Cloud returns `nextToken`, then there are more
            results available. The value of `nextToken` is a unique pagination token
            for each page. To retrieve the next page, call the operation again using
            the returned token. Keep all other arguments unchanged. If no results
            remain, then `nextToken` is set to `null`. Each pagination token expires
            after 24 hours. If you provide a token that isn't valid, then you receive
            an HTTP 400 `ValidationException` error.
      required:
      - members
    ListFarmsRequest:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The token for the next set of results, or `null` to start from
            the beginning.
        principalId:
          allOf:
          - $ref: '#/components/schemas/IdentityCenterPrincipalId'
          description: The principal ID of the member to list on the farm.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return. Use this parameter
            with `NextToken` to get results as a set of sequential pages.
    ListFarmsResponse:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: If Deadline Cloud returns `nextToken`, then there are more
            results available. The value of `nextToken` is a unique pagination token
            for each page. To retrieve the next page, call the operation again using
            the returned token. Keep all other arguments unchanged. If no results
            remain, then `nextToken` is set to `null`. Each pagination token expires
            after 24 hours. If you provide a token that isn't valid, then you receive
            an HTTP 400 `ValidationException` error.
        farms:
          allOf:
          - $ref: '#/components/schemas/FarmSummaries'
          description: Farms on the list.
      required:
      - farms
    ListFleetMembersRequest:
      type: object
      properties:
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The farm ID of the fleet.
        fleetId:
          allOf:
          - $ref: '#/components/schemas/FleetId'
          description: The fleet ID to include on the list.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The token for the next set of results, or `null` to start from
            the beginning.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return. Use this parameter
            with `NextToken` to get results as a set of sequential pages.
      required:
      - farmId
      - fleetId
    ListFleetMembersResponse:
      type: object
      properties:
        members:
          allOf:
          - $ref: '#/components/schemas/FleetMembers'
          description: The members on the list.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: If Deadline Cloud returns `nextToken`, then there are more
            results available. The value of `nextToken` is a unique pagination token
            for each page. To retrieve the next page, call the operation again using
            the returned token. Keep all other arguments unchanged. If no results
            remain, then `nextToken` is set to `null`. Each pagination token expires
            after 24 hours. If you provide a token that isn't valid, then you receive
            an HTTP 400 `ValidationException` error.
      required:
      - members
    ListFleetsRequest:
      type: object
      properties:
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The farm ID of the fleets.
        principalId:
          allOf:
          - $ref: '#/components/schemas/IdentityCenterPrincipalId'
          description: The principal ID of the members to include in the fleet.
        displayName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: 'The display names of a list of fleets.


            This field can store any content. Escape or encode this content before
            displaying it on a webpage or any other system that might interpret the
            content of this field.'
        status:
          allOf:
          - $ref: '#/components/schemas/FleetStatus'
          description: The status of the fleet.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The token for the next set of results, or `null` to start from
            the beginning.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return. Use this parameter
            with `NextToken` to get results as a set of sequential pages.
      required:
      - farmId
    ListFleetsResponse:
      type: object
      properties:
        fleets:
          allOf:
          - $ref: '#/components/schemas/FleetSummaries'
          description: The fleets on the list.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: If Deadline Cloud returns `nextToken`, then there are more
            results available. The value of `nextToken` is a unique pagination token
            for each page. To retrieve the next page, call the operation again using
            the returned token. Keep all other arguments unchanged. If no results
            remain, then `nextToken` is set to `null`. Each pagination token expires
            after 24 hours. If you provide a token that isn't valid, then you receive
            an HTTP 400 `ValidationException` error.
      required:
      - fleets
    ListJobMembersRequest:
      type: object
      properties:
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The farm ID of the job to list.
        queueId:
          allOf:
          - $ref: '#/components/schemas/QueueId'
          description: The queue ID to include on the list.
        jobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          description: The job ID to include on the list.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The token for the next set of results, or `null` to start from
            the beginning.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return. Use this parameter
            with `NextToken` to get results as a set of sequential pages.
      required:
      - farmId
      - queueId
      - jobId
    ListJobMembersResponse:
      type: object
      properties:
        members:
          allOf:
          - $ref: '#/components/schemas/JobMembers'
          description: The members on the list.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: If Deadline Cloud returns `nextToken`, then there are more
            results available. The value of `nextToken` is a unique pagination token
            for each page. To retrieve the next page, call the operation again using
            the returned token. Keep all other arguments unchanged. If no results
            remain, then `nextToken` is set to `null`. Each pagination token expires
            after 24 hours. If you provide a token that isn't valid, then you receive
            an HTTP 400 `ValidationException` error.
      required:
      - members
    ListJobParameterDefinitionsRequest:
      type: object
      properties:
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The farm ID of the job to list.
        jobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          description: The job ID to include on the list.
        queueId:
          allOf:
          - $ref: '#/components/schemas/QueueId'
          description: The queue ID to include on the list.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The token for the next set of results, or `null` to start from
            the beginning.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return. Use this parameter
            with `NextToken` to get results as a set of sequential pages.
      required:
      - farmId
      - jobId
      - queueId
    ListJobParameterDefinitionsResponse:
      type: object
      properties:
        jobParameterDefinitions:
          allOf:
          - $ref: '#/components/schemas/JobParameterDefinitions'
          description: Lists parameter definitions of a job.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: If Deadline Cloud returns `nextToken`, then there are more
            results available. The value of `nextToken` is a unique pagination token
            for each page. To retrieve the next page, call the operation again using
            the returned token. Keep all other arguments unchanged. If no results
            remain, then `nextToken` is set to `null`. Each pagination token expires
            after 24 hours. If you provide a token that isn't valid, then you receive
            an HTTP 400 `ValidationException` error.
      required:
      - jobParameterDefinitions
    ListJobsRequest:
      type: object
      properties:
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The farm ID for the jobs.
        principalId:
          allOf:
          - $ref: '#/components/schemas/IdentityCenterPrincipalId'
          description: The principal ID of the members on the jobs.
        queueId:
          allOf:
          - $ref: '#/components/schemas/QueueId'
          description: The queue ID for the job.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The token for the next set of results, or `null` to start from
            the beginning.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return. Use this parameter
            with `NextToken` to get results as a set of sequential pages.
      required:
      - farmId
      - queueId
    ListJobsResponse:
      type: object
      properties:
        jobs:
          allOf:
          - $ref: '#/components/schemas/JobSummaries'
          description: The jobs on the list.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: If Deadline Cloud returns `nextToken`, then there are more
            results available. The value of `nextToken` is a unique pagination token
            for each page. To retrieve the next page, call the operation again using
            the returned token. Keep all other arguments unchanged. If no results
            remain, then `nextToken` is set to `null`. Each pagination token expires
            after 24 hours. If you provide a token that isn't valid, then you receive
            an HTTP 400 `ValidationException` error.
      required:
      - jobs
    ListLicenseEndpointsRequest:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The token for the next set of results, or `null` to start from
            the beginning.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return. Use this parameter
            with `NextToken` to get results as a set of sequential pages.
    ListLicenseEndpointsResponse:
      type: object
      properties:
        licenseEndpoints:
          allOf:
          - $ref: '#/components/schemas/LicenseEndpointSummaries'
          description: The license endpoints.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: If Deadline Cloud returns `nextToken`, then there are more
            results available. The value of `nextToken` is a unique pagination token
            for each page. To retrieve the next page, call the operation again using
            the returned token. Keep all other arguments unchanged. If no results
            remain, then `nextToken` is set to `null`. Each pagination token expires
            after 24 hours. If you provide a token that isn't valid, then you receive
            an HTTP 400 `ValidationException` error.
      required:
      - licenseEndpoints
    ListLimitsRequest:
      type: object
      properties:
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The unique identifier of the farm that contains the limits.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The token for the next set of results, or `null` to start from
            the beginning.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of limits to return in each page of results.
      required:
      - farmId
    ListLimitsResponse:
      type: object
      properties:
        limits:
          allOf:
          - $ref: '#/components/schemas/LimitSummaries'
          description: A list of limits that the farm contains.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: If Deadline Cloud returns `nextToken`, then there are more
            results available. The value of `nextToken` is a unique pagination token
            for each page. To retrieve the next page, call the operation again using
            the returned token. Keep all other arguments unchanged. If no results
            remain, then `nextToken` is set to `null`. Each pagination token expires
            after 24 hours. If you provide a token that isn't valid, then you receive
            an HTTP 400 `ValidationException` error.
      required:
      - limits
    ListMeteredProductsRequest:
      type: object
      properties:
        licenseEndpointId:
          allOf:
          - $ref: '#/components/schemas/LicenseEndpointId'
          description: The license endpoint ID to include on the list of metered products.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The token for the next set of results, or `null` to start from
            the beginning.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return. Use this parameter
            with `NextToken` to get results as a set of sequential pages.
      required:
      - licenseEndpointId
    ListMeteredProductsResponse:
      type: object
      properties:
        meteredProducts:
          allOf:
          - $ref: '#/components/schemas/MeteredProductSummaryList'
          description: The metered products to list.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: If Deadline Cloud returns `nextToken`, then there are more
            results available. The value of `nextToken` is a unique pagination token
            for each page. To retrieve the next page, call the operation again using
            the returned token. Keep all other arguments unchanged. If no results
            remain, then `nextToken` is set to `null`. Each pagination token expires
            after 24 hours. If you provide a token that isn't valid, then you receive
            an HTTP 400 `ValidationException` error.
      required:
      - meteredProducts
    ListMonitorsRequest:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The token for the next set of results, or `null` to start from
            the beginning.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return. Use this parameter
            with `NextToken` to get results as a set of sequential pages.
    ListMonitorsResponse:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: If Deadline Cloud returns `nextToken`, then there are more
            results available. The value of `nextToken` is a unique pagination token
            for each page. To retrieve the next page, call the operation again using
            the returned token. Keep all other arguments unchanged. If no results
            remain, then `nextToken` is set to `null`. Each pagination token expires
            after 24 hours. If you provide a token that isn't valid, then you receive
            an HTTP 400 `ValidationException` error.
        monitors:
          allOf:
          - $ref: '#/components/schemas/MonitorSummaries'
          description: A list of `MonitorSummary` objects that describe your monitors
            in the Deadline Cloud.
      required:
      - monitors
    ListQueueEnvironmentsRequest:
      type: object
      properties:
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The farm ID for the queue environment list.
        queueId:
          allOf:
          - $ref: '#/components/schemas/QueueId'
          description: The queue ID for the queue environment list.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The token for the next set of results, or `null` to start from
            the beginning.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return. Use this parameter
            with `NextToken` to get results as a set of sequential pages.
      required:
      - farmId
      - queueId
    ListQueueEnvironmentsResponse:
      type: object
      properties:
        environments:
          allOf:
          - $ref: '#/components/schemas/QueueEnvironmentSummaries'
          description: The environments to include in the queue environments list.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: If Deadline Cloud returns `nextToken`, then there are more
            results available. The value of `nextToken` is a unique pagination token
            for each page. To retrieve the next page, call the operation again using
            the returned token. Keep all other arguments unchanged. If no results
            remain, then `nextToken` is set to `null`. Each pagination token expires
            after 24 hours. If you provide a token that isn't valid, then you receive
            an HTTP 400 `ValidationException` error.
      required:
      - environments
    ListQueueFleetAssociationsRequest:
      type: object
      properties:
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The farm ID for the queue-fleet association list.
        queueId:
          allOf:
          - $ref: '#/components/schemas/QueueId'
          description: The queue ID for the queue-fleet association list.
        fleetId:
          allOf:
          - $ref: '#/components/schemas/FleetId'
          description: The fleet ID for the queue-fleet association list.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The token for the next set of results, or `null` to start from
            the beginning.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return. Use this parameter
            with `NextToken` to get results as a set of sequential pages.
      required:
      - farmId
    ListQueueFleetAssociationsResponse:
      type: object
      properties:
        queueFleetAssociations:
          allOf:
          - $ref: '#/components/schemas/QueueFleetAssociationSummaries'
          description: The queue-fleet associations on the list.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: If Deadline Cloud returns `nextToken`, then there are more
            results available. The value of `nextToken` is a unique pagination token
            for each page. To retrieve the next page, call the operation again using
            the returned token. Keep all other arguments unchanged. If no results
            remain, then `nextToken` is set to `null`. Each pagination token expires
            after 24 hours. If you provide a token that isn't valid, then you receive
            an HTTP 400 `ValidationException` error.
      required:
      - queueFleetAssociations
    ListQueueLimitAssociationsRequest:
      type: object
      properties:
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The unique identifier of the farm that contains the limits
            and associations.
        queueId:
          allOf:
          - $ref: '#/components/schemas/QueueId'
          description: Specifies that the operation should return only the queue limit
            associations for the specified queue. If you specify both the `queueId`
            and the `limitId`, only the specified limit is returned if it exists.
        limitId:
          allOf:
          - $ref: '#/components/schemas/LimitId'
          description: Specifies that the operation should return only the queue limit
            associations for the specified limit. If you specify both the `queueId`
            and the `limitId`, only the specified limit is returned if it exists.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The token for the next set of results, or `null` to start from
            the beginning.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of associations to return in each page of
            results.
      required:
      - farmId
    ListQueueLimitAssociationsResponse:
      type: object
      properties:
        queueLimitAssociations:
          allOf:
          - $ref: '#/components/schemas/QueueLimitAssociationSummaries'
          description: A list of associations between limits and queues in the farm
            specified in the request.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: If Deadline Cloud returns `nextToken`, then there are more
            results available. The value of `nextToken` is a unique pagination token
            for each page. To retrieve the next page, call the operation again using
            the returned token. Keep all other arguments unchanged. If no results
            remain, then `nextToken` is set to `null`. Each pagination token expires
            after 24 hours. If you provide a token that isn't valid, then you receive
            an HTTP 400 `ValidationException` error.
      required:
      - queueLimitAssociations
    ListQueueMembersRequest:
      type: object
      properties:
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The farm ID for the queue.
        queueId:
          allOf:
          - $ref: '#/components/schemas/QueueId'
          description: The queue ID to include on the list.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The token for the next set of results, or `null` to start from
            the beginning.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return. Use this parameter
            with `NextToken` to get results as a set of sequential pages.
      required:
      - farmId
      - queueId
    ListQueueMembersResponse:
      type: object
      properties:
        members:
          allOf:
          - $ref: '#/components/schemas/QueueMemberList'
          description: The members on the list.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: If Deadline Cloud returns `nextToken`, then there are more
            results available. The value of `nextToken` is a unique pagination token
            for each page. To retrieve the next page, call the operation again using
            the returned token. Keep all other arguments unchanged. If no results
            remain, then `nextToken` is set to `null`. Each pagination token expires
            after 24 hours. If you provide a token that isn't valid, then you receive
            an HTTP 400 `ValidationException` error.
      required:
      - members
    ListQueuesRequest:
      type: object
      properties:
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The farm ID of the queue.
        principalId:
          allOf:
          - $ref: '#/components/schemas/IdentityCenterPrincipalId'
          description: The principal IDs to include in the list of queues.
        status:
          allOf:
          - $ref: '#/components/schemas/QueueStatus'
          description: "The status of the queues listed.\n\n  * `ACTIVE`–The queues\
            \ are active.\n\n  * `SCHEDULING`–The queues are scheduling.\n\n  * `SCHEDULING_BLOCKED`–The\
            \ queue scheduling is blocked for these queues."
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The token for the next set of results, or `null` to start from
            the beginning.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return. Use this parameter
            with `NextToken` to get results as a set of sequential pages.
      required:
      - farmId
    ListQueuesResponse:
      type: object
      properties:
        queues:
          allOf:
          - $ref: '#/components/schemas/QueueSummaries'
          description: The queues on the list.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: If Deadline Cloud returns `nextToken`, then there are more
            results available. The value of `nextToken` is a unique pagination token
            for each page. To retrieve the next page, call the operation again using
            the returned token. Keep all other arguments unchanged. If no results
            remain, then `nextToken` is set to `null`. Each pagination token expires
            after 24 hours. If you provide a token that isn't valid, then you receive
            an HTTP 400 `ValidationException` error.
      required:
      - queues
    ListSessionActionsRequest:
      type: object
      properties:
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The farm ID for the session actions list.
        queueId:
          allOf:
          - $ref: '#/components/schemas/QueueId'
          description: The queue ID for the session actions list.
        jobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          description: The job ID for the session actions list.
        sessionId:
          allOf:
          - $ref: '#/components/schemas/SessionId'
          description: The session ID to include on the sessions action list.
        taskId:
          allOf:
          - $ref: '#/components/schemas/TaskId'
          description: The task ID for the session actions list.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The token for the next set of results, or `null` to start from
            the beginning.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return. Use this parameter
            with `NextToken` to get results as a set of sequential pages.
      required:
      - farmId
      - queueId
      - jobId
    ListSessionActionsResponse:
      type: object
      properties:
        sessionActions:
          allOf:
          - $ref: '#/components/schemas/SessionActionSummaries'
          description: The session actions.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: If Deadline Cloud returns `nextToken`, then there are more
            results available. The value of `nextToken` is a unique pagination token
            for each page. To retrieve the next page, call the operation again using
            the returned token. Keep all other arguments unchanged. If no results
            remain, then `nextToken` is set to `null`. Each pagination token expires
            after 24 hours. If you provide a token that isn't valid, then you receive
            an HTTP 400 `ValidationException` error.
      required:
      - sessionActions
    ListSessionsForWorkerRequest:
      type: object
      properties:
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The farm ID for the session.
        fleetId:
          allOf:
          - $ref: '#/components/schemas/FleetId'
          description: The fleet ID for the session.
        workerId:
          allOf:
          - $ref: '#/components/schemas/WorkerId'
          description: The worker ID for the session.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The token for the next set of results, or `null` to start from
            the beginning.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return. Use this parameter
            with `NextToken` to get results as a set of sequential pages.
      required:
      - farmId
      - fleetId
      - workerId
    ListSessionsForWorkerResponse:
      type: object
      properties:
        sessions:
          allOf:
          - $ref: '#/components/schemas/ListSessionsForWorkerSummaries'
          description: The sessions in the response.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The token for the next set of results, or `null` to start from
            the beginning.
      required:
      - sessions
    ListSessionsForWorkerSummaries:
      type: array
      items:
        $ref: '#/components/schemas/WorkerSessionSummary'
    ListSessionsRequest:
      type: object
      properties:
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The farm ID for the list of sessions.
        queueId:
          allOf:
          - $ref: '#/components/schemas/QueueId'
          description: The queue ID for the list of sessions
        jobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          description: The job ID for the list of sessions.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The token for the next set of results, or `null` to start from
            the beginning.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return. Use this parameter
            with `NextToken` to get results as a set of sequential pages.
      required:
      - farmId
      - queueId
      - jobId
    ListSessionsResponse:
      type: object
      properties:
        sessions:
          allOf:
          - $ref: '#/components/schemas/SessionSummaries'
          description: The sessions on the list.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: If Deadline Cloud returns `nextToken`, then there are more
            results available. The value of `nextToken` is a unique pagination token
            for each page. To retrieve the next page, call the operation again using
            the returned token. Keep all other arguments unchanged. If no results
            remain, then `nextToken` is set to `null`. Each pagination token expires
            after 24 hours. If you provide a token that isn't valid, then you receive
            an HTTP 400 `ValidationException` error.
      required:
      - sessions
    ListStepConsumersRequest:
      type: object
      properties:
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The farm ID for the list of step consumers.
        queueId:
          allOf:
          - $ref: '#/components/schemas/QueueId'
          description: The queue ID for the step consumer.
        jobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          description: The job ID for the step consumer.
        stepId:
          allOf:
          - $ref: '#/components/schemas/StepId'
          description: The step ID to include on the list.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The token for the next set of results, or `null` to start from
            the beginning.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The maximum number of results to return. Use this parameter
            with `NextToken` to get results as a set of sequential pages.
      required:
      - farmId
      - queueId
      - jobId
      - stepId
    ListStepConsumersResponse:
      type: object
      properties:
        consumers:
          allOf:
          - $ref: '#/components/schemas/StepConsumers'
          description: The consumers on the list.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: If Deadline Cloud returns `nextToken`, then there are more
            results available. The value of `nextToken` is a unique pagination token
            for each page. To retrieve the next page, call the operation again using
            the returned token. Keep all other arguments unchanged. If no results
            remain, then `nextToken` is set to `null`. Each pagination token expires
            after 24 hours. If you provide a token that isn't valid, then you receive
            an HTTP 400 `ValidationException` error.
      required:
      - consumers
    ListStepDependenciesRequest:
      type: object
      properties:
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The farm ID for the step dependencies list.
        queueId:
          allOf:
          - $ref: '#/components/schemas/QueueId'
          description: The queue ID for the step dependencies list.
        jobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          description: The job ID for the step dependencies list.
        stepId:
          allOf:
          - $ref: '#/components/schemas/StepId'
          description: The step ID to include on the list.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The token for the next set of results, or `null` to start from
            the beginning.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The maximum number of results to return. Use this parameter
            with `NextToken` to get results as a set of sequential pages.
      required:
      - farmId
      - queueId
      - jobId
      - stepId
    ListStepDependenciesResponse:
      type: object
      properties:
        dependencies:
          allOf:
          - $ref: '#/components/schemas/StepDependencies'
          description: The dependencies on the list.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: If Deadline Cloud returns `nextToken`, then there are more
            results available. The value of `nextToken` is a unique pagination token
            for each page. To retrieve the next page, call the operation again using
            the returned token. Keep all other arguments unchanged. If no results
            remain, then `nextToken` is set to `null`. Each pagination token expires
            after 24 hours. If you provide a token that isn't valid, then you receive
            an HTTP 400 `ValidationException` error.
      required:
      - dependencies
    ListStepsRequest:
      type: object
      properties:
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The farm ID to include on the list of steps.
        queueId:
          allOf:
          - $ref: '#/components/schemas/QueueId'
          description: The queue ID to include on the list of steps.
        jobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          description: The job ID to include on the list of steps.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The token for the next set of results, or `null` to start from
            the beginning.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return. Use this parameter
            with `NextToken` to get results as a set of sequential pages.
      required:
      - farmId
      - queueId
      - jobId
    ListStepsResponse:
      type: object
      properties:
        steps:
          allOf:
          - $ref: '#/components/schemas/StepSummaries'
          description: The steps on the list.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: If Deadline Cloud returns `nextToken`, then there are more
            results available. The value of `nextToken` is a unique pagination token
            for each page. To retrieve the next page, call the operation again using
            the returned token. Keep all other arguments unchanged. If no results
            remain, then `nextToken` is set to `null`. Each pagination token expires
            after 24 hours. If you provide a token that isn't valid, then you receive
            an HTTP 400 `ValidationException` error.
      required:
      - steps
    ListStorageProfilesForQueueRequest:
      type: object
      properties:
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The farm ID of the queue's storage profile.
        queueId:
          allOf:
          - $ref: '#/components/schemas/QueueId'
          description: The queue ID for the storage profile.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The token for the next set of results, or `null` to start from
            the beginning.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return. Use this parameter
            with `NextToken` to get results as a set of sequential pages.
      required:
      - farmId
      - queueId
    ListStorageProfilesForQueueResponse:
      type: object
      properties:
        storageProfiles:
          allOf:
          - $ref: '#/components/schemas/StorageProfileSummaries'
          description: The storage profiles in the queue.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: If Deadline Cloud returns `nextToken`, then there are more
            results available. The value of `nextToken` is a unique pagination token
            for each page. To retrieve the next page, call the operation again using
            the returned token. Keep all other arguments unchanged. If no results
            remain, then `nextToken` is set to `null`. Each pagination token expires
            after 24 hours. If you provide a token that isn't valid, then you receive
            an HTTP 400 `ValidationException` error.
      required:
      - storageProfiles
    ListStorageProfilesRequest:
      type: object
      properties:
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The farm ID of the storage profile.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The token for the next set of results, or `null` to start from
            the beginning.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return. Use this parameter
            with `NextToken` to get results as a set of sequential pages.
      required:
      - farmId
    ListStorageProfilesResponse:
      type: object
      properties:
        storageProfiles:
          allOf:
          - $ref: '#/components/schemas/StorageProfileSummaries'
          description: The storage profiles.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: If Deadline Cloud returns `nextToken`, then there are more
            results available. The value of `nextToken` is a unique pagination token
            for each page. To retrieve the next page, call the operation again using
            the returned token. Keep all other arguments unchanged. If no results
            remain, then `nextToken` is set to `null`. Each pagination token expires
            after 24 hours. If you provide a token that isn't valid, then you receive
            an HTTP 400 `ValidationException` error.
      required:
      - storageProfiles
    ListTagsForResourceRequest:
      type: object
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The resource ARN to list tags for.
      required:
      - resourceArn
    ListTagsForResourceResponse:
      type: object
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: Each tag consists of a tag key and a tag value. Tag keys and
            values are both required, but tag values can be empty strings.
    ListTasksRequest:
      type: object
      properties:
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The farm ID connected to the tasks.
        queueId:
          allOf:
          - $ref: '#/components/schemas/QueueId'
          description: The queue ID connected to the tasks.
        jobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          description: The job ID for the tasks.
        stepId:
          allOf:
          - $ref: '#/components/schemas/StepId'
          description: The step ID for the tasks.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The token for the next set of results, or `null` to start from
            the beginning.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return. Use this parameter
            with `NextToken` to get results as a set of sequential pages.
      required:
      - farmId
      - queueId
      - jobId
      - stepId
    ListTasksResponse:
      type: object
      properties:
        tasks:
          allOf:
          - $ref: '#/components/schemas/TaskSummaries'
          description: Tasks for the job.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: If Deadline Cloud returns `nextToken`, then there are more
            results available. The value of `nextToken` is a unique pagination token
            for each page. To retrieve the next page, call the operation again using
            the returned token. Keep all other arguments unchanged. If no results
            remain, then `nextToken` is set to `null`. Each pagination token expires
            after 24 hours. If you provide a token that isn't valid, then you receive
            an HTTP 400 `ValidationException` error.
      required:
      - tasks
    ListWorkersRequest:
      type: object
      properties:
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The farm ID connected to the workers.
        fleetId:
          allOf:
          - $ref: '#/components/schemas/FleetId'
          description: The fleet ID of the workers.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The token for the next set of results, or `null` to start from
            the beginning.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return. Use this parameter
            with `NextToken` to get results as a set of sequential pages.
      required:
      - farmId
      - fleetId
    ListWorkersResponse:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: If Deadline Cloud returns `nextToken`, then there are more
            results available. The value of `nextToken` is a unique pagination token
            for each page. To retrieve the next page, call the operation again using
            the returned token. Keep all other arguments unchanged. If no results
            remain, then `nextToken` is set to `null`. Each pagination token expires
            after 24 hours. If you provide a token that isn't valid, then you receive
            an HTTP 400 `ValidationException` error.
        workers:
          allOf:
          - $ref: '#/components/schemas/WorkerSummaries'
          description: The workers on the list.
      required:
      - workers
    LogConfiguration:
      type: object
      properties:
        logDriver:
          allOf:
          - $ref: '#/components/schemas/LogDriver'
          description: The log drivers for worker related logs.
        options:
          allOf:
          - $ref: '#/components/schemas/LogOptions'
          description: The options for a log driver.
        parameters:
          allOf:
          - $ref: '#/components/schemas/LogParameters'
          description: The parameters for the log configuration.
        error:
          allOf:
          - $ref: '#/components/schemas/LogError'
          description: The log configuration error details.
      required:
      - logDriver
      description: Log configuration details.
    LogDriver:
      type: string
      minLength: 1
      maxLength: 512
    LogError:
      type: string
      minLength: 1
      maxLength: 512
    LogOptions:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/String'
    LogParameters:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/String'
    LogicalOperator:
      type: string
      enum:
      - AND
      - OR
    ManifestProperties:
      type: object
      properties:
        fileSystemLocationName:
          allOf:
          - $ref: '#/components/schemas/FileSystemLocationName'
          description: The file system location name.
        rootPath:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The file's root path.
        rootPathFormat:
          allOf:
          - $ref: '#/components/schemas/PathFormat'
          description: The format of the root path.
        outputRelativeDirectories:
          allOf:
          - $ref: '#/components/schemas/OutputRelativeDirectoriesList'
          description: The file path relative to the directory.
        inputManifestPath:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The file path.
        inputManifestHash:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The hash value of the file.
      required:
      - rootPath
      - rootPathFormat
      description: The details of the manifest that links a job's source information.
    ManifestPropertiesList:
      type: array
      items:
        $ref: '#/components/schemas/ManifestProperties'
    MaxCount:
      type: integer
      minimum: -1
      maximum: 2147483647
    MaxFailedTasksCount:
      type: integer
      minimum: 0
      maximum: 2147483647
    MaxResults:
      type: integer
      default: 100
      minimum: 1
      maximum: 100
    MaxRetriesPerTask:
      type: integer
      minimum: 0
      maximum: 2147483647
    MaxWorkerCount:
      type: integer
      minimum: -1
      maximum: 2147483647
    MembershipLevel:
      type: string
      enum:
      - VIEWER
      - CONTRIBUTOR
      - OWNER
      - MANAGER
    MemoryAmountMiB:
      type: integer
      minimum: 512
      maximum: 2147483647
    MemoryMiBRange:
      type: object
      properties:
        min:
          allOf:
          - $ref: '#/components/schemas/MemoryAmountMiB'
          description: The minimum amount of memory (in MiB).
        max:
          allOf:
          - $ref: '#/components/schemas/MemoryAmountMiB'
          description: The maximum amount of memory (in MiB).
      required:
      - min
      description: The range of memory in MiB.
    MeteredProductId:
      type: string
      pattern: ^[0-9a-z]{1,32}-[.0-9a-z]{1,32}$
    MeteredProductSummary:
      type: object
      properties:
        productId:
          allOf:
          - $ref: '#/components/schemas/MeteredProductId'
          description: The product ID.
        family:
          allOf:
          - $ref: '#/components/schemas/BoundedString'
          description: The family to which the metered product belongs.
        vendor:
          allOf:
          - $ref: '#/components/schemas/BoundedString'
          description: The vendor.
        port:
          allOf:
          - $ref: '#/components/schemas/PortNumber'
          description: The port on which the metered product should run.
      required:
      - productId
      - family
      - vendor
      - port
      description: The details of a metered product.
    MeteredProductSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/MeteredProductSummary'
    MinOneMaxInteger:
      type: integer
      minimum: 1
      maximum: 2147483647
    MinOneMaxTenThousand:
      type: integer
      minimum: 1
      maximum: 10000
    MinZeroMaxInteger:
      type: integer
      minimum: 0
      maximum: 2147483647
    MonitorId:
      type: string
      pattern: ^monitor-[0-9a-f]{32}$
    MonitorSummaries:
      type: array
      items:
        $ref: '#/components/schemas/MonitorSummary'
    MonitorSummary:
      type: object
      properties:
        monitorId:
          allOf:
          - $ref: '#/components/schemas/MonitorId'
          description: The unique identifier for the monitor.
        displayName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: 'The name of the monitor that displays on the Deadline Cloud
            console.


            This field can store any content. Escape or encode this content before
            displaying it on a webpage or any other system that might interpret the
            content of this field.'
        subdomain:
          allOf:
          - $ref: '#/components/schemas/Subdomain'
          description: The subdomain used for the monitor URL. The full URL of the
            monitor is subdomain.Region.deadlinecloud.amazonaws.com.
        url:
          allOf:
          - $ref: '#/components/schemas/Url'
          description: The complete URL of the monitor. The full URL of the monitor
            is subdomain.Region.deadlinecloud.amazonaws.com.
        roleArn:
          allOf:
          - $ref: '#/components/schemas/IamRoleArn'
          description: The Amazon Resource Name (ARN) of the IAM role for the monitor.
            Users of the monitor use this role to access Deadline Cloud resources.
        identityCenterInstanceArn:
          allOf:
          - $ref: '#/components/schemas/IdentityCenterInstanceArn'
          description: The Amazon Resource Name (ARN) of the IAM Identity Center instance
            responsible for authenticating monitor users.
        identityCenterApplicationArn:
          allOf:
          - $ref: '#/components/schemas/IdentityCenterApplicationArn'
          description: The Amazon Resource Name (ARN) that the IAM Identity Center
            assigned to the monitor when it was created.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/CreatedAt'
          description: The UNIX timestamp of the date and time that the monitor was
            created.
        createdBy:
          allOf:
          - $ref: '#/components/schemas/CreatedBy'
          description: The user name of the person that created the monitor.
        updatedAt:
          allOf:
          - $ref: '#/components/schemas/UpdatedAt'
          description: The UNIX timestamp of the date and time that the monitor was
            last updated.
        updatedBy:
          allOf:
          - $ref: '#/components/schemas/UpdatedBy'
          description: The user name of the person that last updated the monitor.
      required:
      - monitorId
      - displayName
      - subdomain
      - url
      - roleArn
      - identityCenterInstanceArn
      - identityCenterApplicationArn
      - createdAt
      - createdBy
      description: Provides information about a monitor in Deadline Cloud.
    NextItemOffset:
      type: integer
      minimum: 0
      maximum: 10000
    OutputRelativeDirectoriesList:
      type: array
      items:
        $ref: '#/components/schemas/String'
    ParameterFilterExpression:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the parameter to filter on.
        operator:
          allOf:
          - $ref: '#/components/schemas/ComparisonOperator'
          description: The type of comparison to use to filter results.
        value:
          allOf:
          - $ref: '#/components/schemas/ParameterValue'
          description: The parameter's value.
      required:
      - name
      - operator
      - value
      description: The details of a filtered search for parameters.
    ParameterSortExpression:
      type: object
      properties:
        sortOrder:
          allOf:
          - $ref: '#/components/schemas/SortOrder'
          description: The sort order for the parameter.
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The parameter name to sort by.
      required:
      - sortOrder
      - name
      description: Organizes parameters according to your specifications.
    ParameterSpace:
      type: object
      properties:
        parameters:
          allOf:
          - $ref: '#/components/schemas/StepParameterList'
          description: The parameters to search for.
        combination:
          allOf:
          - $ref: '#/components/schemas/CombinationExpression'
          description: The combination expression to use in the search.
      required:
      - parameters
      description: The details of a search for two or more step parameters.
    ParameterString:
      type: string
      minLength: 0
      maxLength: 1024
    ParameterValue:
      type: string
      minLength: 1
      maxLength: 256
    PathFormat:
      type: string
      enum:
      - windows
      - posix
    PathMappingRule:
      type: object
      properties:
        sourcePathFormat:
          allOf:
          - $ref: '#/components/schemas/PathFormat'
          description: The source path format.
        sourcePath:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The source path.
        destinationPath:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The destination path.
      required:
      - sourcePathFormat
      - sourcePath
      - destinationPath
      description: The details of a source and destination path.
    PathMappingRules:
      type: array
      items:
        $ref: '#/components/schemas/PathMappingRule'
    PathString:
      type: string
      minLength: 0
      maxLength: 1024
    Period:
      type: string
      enum:
      - HOURLY
      - DAILY
      - WEEKLY
      - MONTHLY
    PortNumber:
      type: integer
      minimum: 1024
      maximum: 65535
    PosixUser:
      type: object
      properties:
        user:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the POSIX user.
        group:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the POSIX user's group.
      required:
      - user
      - group
      description: The POSIX user.
    Priority:
      type: integer
      minimum: 0
      maximum: 10000
    ProcessExitCode:
      type: integer
      minimum: -2147483648
      maximum: 2147483647
    PutMeteredProductRequest:
      type: object
      properties:
        licenseEndpointId:
          allOf:
          - $ref: '#/components/schemas/LicenseEndpointId'
          description: The license endpoint ID to add to the metered product.
        productId:
          allOf:
          - $ref: '#/components/schemas/MeteredProductId'
          description: The product ID to add to the metered product.
      required:
      - licenseEndpointId
      - productId
    PutMeteredProductResponse:
      type: object
      properties: {}
    QueueBlockedReason:
      type: string
      enum:
      - NO_BUDGET_CONFIGURED
      - BUDGET_THRESHOLD_REACHED
    QueueEnvironmentId:
      type: string
      pattern: ^queueenv-[0-9a-f]{32}$
    QueueEnvironmentSummaries:
      type: array
      items:
        $ref: '#/components/schemas/QueueEnvironmentSummary'
    QueueEnvironmentSummary:
      type: object
      properties:
        queueEnvironmentId:
          allOf:
          - $ref: '#/components/schemas/QueueEnvironmentId'
          description: The queue environment ID.
        name:
          allOf:
          - $ref: '#/components/schemas/EnvironmentName'
          description: The name of the queue environment.
        priority:
          allOf:
          - $ref: '#/components/schemas/Priority'
          description: The queue environment's priority.
      required:
      - queueEnvironmentId
      - name
      - priority
      description: The summary of a queue environment.
    QueueFleetAssociationStatus:
      type: string
      enum:
      - ACTIVE
      - STOP_SCHEDULING_AND_COMPLETE_TASKS
      - STOP_SCHEDULING_AND_CANCEL_TASKS
      - STOPPED
    QueueFleetAssociationSummaries:
      type: array
      items:
        $ref: '#/components/schemas/QueueFleetAssociationSummary'
    QueueFleetAssociationSummary:
      type: object
      properties:
        queueId:
          allOf:
          - $ref: '#/components/schemas/QueueId'
          description: The queue ID.
        fleetId:
          allOf:
          - $ref: '#/components/schemas/FleetId'
          description: The fleet ID.
        status:
          allOf:
          - $ref: '#/components/schemas/QueueFleetAssociationStatus'
          description: "The status of task scheduling in the queue-fleet association.\n\
            \n  * `ACTIVE`–Association is active.\n\n  * `STOP_SCHEDULING_AND_COMPLETE_TASKS`–Association\
            \ has stopped scheduling new tasks and is completing current tasks.\n\n\
            \  * `STOP_SCHEDULING_AND_CANCEL_TASKS`–Association has stopped scheduling\
            \ new tasks and is canceling current tasks.\n\n  * `STOPPED`–Association\
            \ has been stopped."
        createdAt:
          allOf:
          - $ref: '#/components/schemas/CreatedAt'
          description: The date and time the resource was created.
        createdBy:
          allOf:
          - $ref: '#/components/schemas/CreatedBy'
          description: The user or system that created this resource.
        updatedAt:
          allOf:
          - $ref: '#/components/schemas/UpdatedAt'
          description: The date and time the resource was updated.
        updatedBy:
          allOf:
          - $ref: '#/components/schemas/UpdatedBy'
          description: The user or system that updated this resource.
      required:
      - queueId
      - fleetId
      - status
      - createdAt
      - createdBy
      description: The details of a queue-fleet association.
    QueueId:
      type: string
      pattern: ^queue-[0-9a-f]{32}$
    QueueIds:
      type: array
      items:
        $ref: '#/components/schemas/QueueId'
    QueueLimitAssociationStatus:
      type: string
      enum:
      - ACTIVE
      - STOP_LIMIT_USAGE_AND_COMPLETE_TASKS
      - STOP_LIMIT_USAGE_AND_CANCEL_TASKS
      - STOPPED
    QueueLimitAssociationSummaries:
      type: array
      items:
        $ref: '#/components/schemas/QueueLimitAssociationSummary'
    QueueLimitAssociationSummary:
      type: object
      properties:
        createdAt:
          allOf:
          - $ref: '#/components/schemas/CreatedAt'
          description: The Unix timestamp of the date and time that the association
            was created.
        createdBy:
          allOf:
          - $ref: '#/components/schemas/CreatedBy'
          description: The user identifier of the person that created the association.
        updatedAt:
          allOf:
          - $ref: '#/components/schemas/UpdatedAt'
          description: The Unix timestamp of the date and time that the association
            was last updated.
        updatedBy:
          allOf:
          - $ref: '#/components/schemas/UpdatedBy'
          description: The user identifier of the person that updated the association.
        queueId:
          allOf:
          - $ref: '#/components/schemas/QueueId'
          description: The unique identifier of the queue in the association.
        limitId:
          allOf:
          - $ref: '#/components/schemas/LimitId'
          description: The unique identifier of the limit in the association.
        status:
          allOf:
          - $ref: '#/components/schemas/QueueLimitAssociationStatus'
          description: "The status of task scheduling in the queue-limit association.\n\
            \n  * `ACTIVE` \\- Association is active.\n\n  * `STOP_LIMIT_USAGE_AND_COMPLETE_TASKS`\
            \ \\- Association has stopped scheduling new tasks and is completing current\
            \ tasks.\n\n  * `STOP_LIMIT_USAGE_AND_CANCEL_TASKS` \\- Association has\
            \ stopped scheduling new tasks and is canceling current tasks.\n\n  *\
            \ `STOPPED` \\- Association has been stopped."
      required:
      - createdAt
      - createdBy
      - queueId
      - limitId
      - status
      description: Provides information about the association between a queue and
        a limit.
    QueueMember:
      type: object
      properties:
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The farm ID.
        queueId:
          allOf:
          - $ref: '#/components/schemas/QueueId'
          description: The queue ID.
        principalId:
          allOf:
          - $ref: '#/components/schemas/IdentityCenterPrincipalId'
          description: The principal ID of the queue member.
        principalType:
          allOf:
          - $ref: '#/components/schemas/DeadlinePrincipalType'
          description: The principal type of the queue member.
        identityStoreId:
          allOf:
          - $ref: '#/components/schemas/IdentityStoreId'
          description: The identity store ID.
        membershipLevel:
          allOf:
          - $ref: '#/components/schemas/MembershipLevel'
          description: The queue member's membership level.
      required:
      - farmId
      - queueId
      - principalId
      - principalType
      - identityStoreId
      - membershipLevel
      description: The details of a queue member.
    QueueMemberList:
      type: array
      items:
        $ref: '#/components/schemas/QueueMember'
    QueueStatus:
      type: string
      enum:
      - IDLE
      - SCHEDULING
      - SCHEDULING_BLOCKED
    QueueSummaries:
      type: array
      items:
        $ref: '#/components/schemas/QueueSummary'
    QueueSummary:
      type: object
      properties:
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The farm ID.
        queueId:
          allOf:
          - $ref: '#/components/schemas/QueueId'
          description: The queue ID.
        displayName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: 'The display name of the queue summary to update.


            This field can store any content. Escape or encode this content before
            displaying it on a webpage or any other system that might interpret the
            content of this field.'
        status:
          allOf:
          - $ref: '#/components/schemas/QueueStatus'
          description: That status of the queue.
        defaultBudgetAction:
          allOf:
          - $ref: '#/components/schemas/DefaultQueueBudgetAction'
          description: The default action taken on a queue summary if a budget wasn't
            configured.
        blockedReason:
          allOf:
          - $ref: '#/components/schemas/QueueBlockedReason'
          description: The reason the queue is blocked, if applicable.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/CreatedAt'
          description: The date and time the resource was created.
        createdBy:
          allOf:
          - $ref: '#/components/schemas/CreatedBy'
          description: The user or system that created this resource.
        updatedAt:
          allOf:
          - $ref: '#/components/schemas/UpdatedAt'
          description: The date and time the resource was updated.
        updatedBy:
          allOf:
          - $ref: '#/components/schemas/UpdatedBy'
          description: The user or system that updated this resource.
      required:
      - farmId
      - queueId
      - displayName
      - status
      - defaultBudgetAction
      - createdAt
      - createdBy
      description: The details of a queue summary.
    RequiredFileSystemLocationNames:
      type: array
      items:
        $ref: '#/components/schemas/FileSystemLocationName'
    ResourceName:
      type: string
      minLength: 1
      maxLength: 100
    ResourceNotFoundException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
        resourceId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The identifier of the resource that couldn't be found.
        resourceType:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The type of the resource that couldn't be found.
        context:
          allOf:
          - $ref: '#/components/schemas/ExceptionContext'
          description: Information about the resources in use when the exception was
            thrown.
      required:
      - message
      - resourceId
      - resourceType
      description: The requested resource can't be found.
    ResponseBudgetAction:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/BudgetActionType'
          description: The action taken on the budget once scheduling stops.
        thresholdPercentage:
          allOf:
          - $ref: '#/components/schemas/ThresholdPercentage'
          description: The percentage threshold for the budget.
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: 'The budget action description.


            This field can store any content. Escape or encode this content before
            displaying it on a webpage or any other system that might interpret the
            content of this field.'
      required:
      - type
      - thresholdPercentage
      description: The details of a budget action.
    ResponseBudgetActionList:
      type: array
      items:
        $ref: '#/components/schemas/ResponseBudgetAction'
    RunAs:
      type: string
      enum:
      - QUEUE_CONFIGURED_USER
      - WORKER_AGENT_USER
    S3BucketName:
      type: string
      minLength: 1
      maxLength: 255
    S3Key:
      type: string
      minLength: 1
      maxLength: 1024
    S3Location:
      type: object
      properties:
        bucketName:
          allOf:
          - $ref: '#/components/schemas/S3BucketName'
          description: The name of the Amazon S3 bucket.
        key:
          allOf:
          - $ref: '#/components/schemas/S3Key'
          description: The Amazon S3 object key that uniquely identifies the Amazon
            S3 bucket.
      required:
      - bucketName
      - key
      description: The Amazon S3 location information.
    S3Prefix:
      type: string
      pattern: ^[a-zA-Z0-9-_/]+$
      minLength: 1
      maxLength: 63
    SearchFilterExpression:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/DateTimeFilterExpression'
        description: |-
          Filters based on date and time.
      - allOf:
        - $ref: '#/components/schemas/ParameterFilterExpression'
        description: |-
          Filters by parameter.
      - allOf:
        - $ref: '#/components/schemas/SearchTermFilterExpression'
        description: |-
          Filters by a specified search term.
      - allOf:
        - $ref: '#/components/schemas/StringFilterExpression'
        description: |-
          Filters by a string.
      - allOf:
        - $ref: '#/components/schemas/SearchGroupedFilterExpressions'
        description: |-
          Filters by group.
      description: |-
        The type of search filter to apply.
    SearchFilterExpressions:
      type: array
      items:
        $ref: '#/components/schemas/SearchFilterExpression'
    SearchGroupedFilterExpressions:
      type: object
      properties:
        filters:
          allOf:
          - $ref: '#/components/schemas/SearchFilterExpressions'
          description: The filters to use for the search.
        operator:
          allOf:
          - $ref: '#/components/schemas/LogicalOperator'
          description: The operators to include in the search.
      required:
      - filters
      - operator
      description: The filter expression, `AND` or `OR`, to use when searching among
        a group of search strings in a resource. You can use two groupings per search
        each within parenthesis `()`.
    SearchJobsRequest:
      type: object
      properties:
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The farm ID of the job.
        queueIds:
          allOf:
          - $ref: '#/components/schemas/QueueIds'
          description: The queue ID to use in the job search.
        filterExpressions:
          allOf:
          - $ref: '#/components/schemas/SearchGroupedFilterExpressions'
          description: The filter expression, `AND` or `OR`, to use when searching
            among a group of search strings in a resource. You can use two groupings
            per search each within parenthesis `()`.
        sortExpressions:
          allOf:
          - $ref: '#/components/schemas/SearchSortExpressions'
          description: The search terms for a resource.
        itemOffset:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: Defines how far into the scrollable list to start the return
            of results.
        pageSize:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: Specifies the number of items per page for the resource.
      required:
      - farmId
      - queueIds
      - itemOffset
    SearchJobsResponse:
      type: object
      properties:
        jobs:
          allOf:
          - $ref: '#/components/schemas/JobSearchSummaries'
          description: The jobs in the search.
        nextItemOffset:
          allOf:
          - $ref: '#/components/schemas/NextItemOffset'
          description: The next incremental starting point after the defined `itemOffset`.
        totalResults:
          allOf:
          - $ref: '#/components/schemas/TotalResults'
          description: The total number of results in the search.
      required:
      - jobs
      - totalResults
    SearchSortExpression:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/UserJobsFirst'
        description: |-
          Options for sorting a particular user's jobs first.
      - allOf:
        - $ref: '#/components/schemas/FieldSortExpression'
        description: |-
          Options for sorting by a field.
      - allOf:
        - $ref: '#/components/schemas/ParameterSortExpression'
        description: |-
          Options for sorting by a parameter.
      description: |-
        The resources to search.
    SearchSortExpressions:
      type: array
      items:
        $ref: '#/components/schemas/SearchSortExpression'
    SearchStepsRequest:
      type: object
      properties:
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The farm ID to use for the step search.
        queueIds:
          allOf:
          - $ref: '#/components/schemas/QueueIds'
          description: The queue IDs in the step search.
        jobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          description: The job ID to use in the step search.
        filterExpressions:
          allOf:
          - $ref: '#/components/schemas/SearchGroupedFilterExpressions'
          description: The filter expression, `AND` or `OR`, to use when searching
            among a group of search strings in a resource. You can use two groupings
            per search each within parenthesis `()`.
        sortExpressions:
          allOf:
          - $ref: '#/components/schemas/SearchSortExpressions'
          description: The search terms for a resource.
        itemOffset:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: Defines how far into the scrollable list to start the return
            of results.
        pageSize:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: Specifies the number of items per page for the resource.
      required:
      - farmId
      - queueIds
      - itemOffset
    SearchStepsResponse:
      type: object
      properties:
        steps:
          allOf:
          - $ref: '#/components/schemas/StepSearchSummaries'
          description: The steps in the search.
        nextItemOffset:
          allOf:
          - $ref: '#/components/schemas/NextItemOffset'
          description: The next incremental starting point after the defined `itemOffset`.
        totalResults:
          allOf:
          - $ref: '#/components/schemas/TotalResults'
          description: The total number of results in the search.
      required:
      - steps
      - totalResults
    SearchTasksRequest:
      type: object
      properties:
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The farm ID of the task.
        queueIds:
          allOf:
          - $ref: '#/components/schemas/QueueIds'
          description: The queue IDs to include in the search.
        jobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          description: The job ID for the task search.
        filterExpressions:
          allOf:
          - $ref: '#/components/schemas/SearchGroupedFilterExpressions'
          description: The filter expression, `AND` or `OR`, to use when searching
            among a group of search strings in a resource. You can use two groupings
            per search each within parenthesis `()`.
        sortExpressions:
          allOf:
          - $ref: '#/components/schemas/SearchSortExpressions'
          description: The search terms for a resource.
        itemOffset:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: Defines how far into the scrollable list to start the return
            of results.
        pageSize:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: Specifies the number of items per page for the resource.
      required:
      - farmId
      - queueIds
      - itemOffset
    SearchTasksResponse:
      type: object
      properties:
        tasks:
          allOf:
          - $ref: '#/components/schemas/TaskSearchSummaries'
          description: Tasks in the search.
        nextItemOffset:
          allOf:
          - $ref: '#/components/schemas/NextItemOffset'
          description: The next incremental starting point after the defined `itemOffset`.
        totalResults:
          allOf:
          - $ref: '#/components/schemas/TotalResults'
          description: The total number of results in the search.
      required:
      - tasks
      - totalResults
    SearchTerm:
      type: string
      minLength: 1
      maxLength: 256
    SearchTermFilterExpression:
      type: object
      properties:
        searchTerm:
          allOf:
          - $ref: '#/components/schemas/SearchTerm'
          description: The term to search for.
        matchType:
          allOf:
          - $ref: '#/components/schemas/SearchTermMatchingType'
          description: "Specifies how Deadline Cloud matches your search term in the\
            \ results. If you don't specify a `matchType` the default is `FUZZY_MATCH`.\n\
            \n  * `FUZZY_MATCH` \\- Matches if a portion of the search term is found\
            \ in the result.\n\n  * `CONTAINS` \\- Matches if the exact search term\
            \ is contained in the result."
      required:
      - searchTerm
      description: Searches for a particular search term.
    SearchTermMatchingType:
      type: string
      enum:
      - FUZZY_MATCH
      - CONTAINS
    SearchWorkersRequest:
      type: object
      properties:
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The farm ID in the workers search.
        fleetIds:
          allOf:
          - $ref: '#/components/schemas/FleetIds'
          description: The fleet ID of the workers to search for.
        filterExpressions:
          allOf:
          - $ref: '#/components/schemas/SearchGroupedFilterExpressions'
          description: The filter expression, `AND` or `OR`, to use when searching
            among a group of search strings in a resource. You can use two groupings
            per search each within parenthesis `()`.
        sortExpressions:
          allOf:
          - $ref: '#/components/schemas/SearchSortExpressions'
          description: The search terms for a resource.
        itemOffset:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: Defines how far into the scrollable list to start the return
            of results.
        pageSize:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: Specifies the number of items per page for the resource.
      required:
      - farmId
      - fleetIds
      - itemOffset
    SearchWorkersResponse:
      type: object
      properties:
        workers:
          allOf:
          - $ref: '#/components/schemas/WorkerSearchSummaries'
          description: The workers for the search.
        nextItemOffset:
          allOf:
          - $ref: '#/components/schemas/NextItemOffset'
          description: The next incremental starting point after the defined `itemOffset`.
        totalResults:
          allOf:
          - $ref: '#/components/schemas/TotalResults'
          description: The total number of results in the search.
      required:
      - workers
      - totalResults
    SecretAccessKey:
      type: string
    SecurityGroupId:
      type: string
      pattern: ^sg-[\w]{1,120}$
    SecurityGroupIdList:
      type: array
      items:
        $ref: '#/components/schemas/SecurityGroupId'
    ServiceManagedEc2FleetConfiguration:
      type: object
      properties:
        instanceCapabilities:
          allOf:
          - $ref: '#/components/schemas/ServiceManagedEc2InstanceCapabilities'
          description: The Amazon EC2 instance capabilities.
        instanceMarketOptions:
          allOf:
          - $ref: '#/components/schemas/ServiceManagedEc2InstanceMarketOptions'
          description: The Amazon EC2 market type.
      required:
      - instanceCapabilities
      - instanceMarketOptions
      description: The configuration details for a service managed Amazon EC2 fleet.
    ServiceManagedEc2InstanceCapabilities:
      type: object
      properties:
        vCpuCount:
          allOf:
          - $ref: '#/components/schemas/VCpuCountRange'
          description: The amount of vCPU to require for instances in this fleet.
        memoryMiB:
          allOf:
          - $ref: '#/components/schemas/MemoryMiBRange'
          description: The memory, as MiB, for the Amazon EC2 instance type.
        osFamily:
          allOf:
          - $ref: '#/components/schemas/ServiceManagedFleetOperatingSystemFamily'
          description: The operating system (OS) family.
        cpuArchitectureType:
          allOf:
          - $ref: '#/components/schemas/CpuArchitectureType'
          description: The CPU architecture type.
        rootEbsVolume:
          allOf:
          - $ref: '#/components/schemas/Ec2EbsVolume'
          description: The root EBS volume.
        acceleratorCapabilities:
          allOf:
          - $ref: '#/components/schemas/AcceleratorCapabilities'
          description: Describes the GPU accelerator capabilities required for worker
            host instances in this fleet.
        allowedInstanceTypes:
          allOf:
          - $ref: '#/components/schemas/InstanceTypes'
          description: The allowable Amazon EC2 instance types.
        excludedInstanceTypes:
          allOf:
          - $ref: '#/components/schemas/InstanceTypes'
          description: The instance types to exclude from the fleet.
        customAmounts:
          allOf:
          - $ref: '#/components/schemas/CustomFleetAmountCapabilities'
          description: The custom capability amounts to require for instances in this
            fleet.
        customAttributes:
          allOf:
          - $ref: '#/components/schemas/CustomFleetAttributeCapabilities'
          description: The custom capability attributes to require for instances in
            this fleet.
      required:
      - vCpuCount
      - memoryMiB
      - osFamily
      - cpuArchitectureType
      description: The Amazon EC2 instance capabilities.
    ServiceManagedEc2InstanceMarketOptions:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/Ec2MarketType'
          description: The Amazon EC2 instance type.
      required:
      - type
      description: The details of the Amazon EC2 instance market options for a service
        managed fleet.
    ServiceManagedFleetOperatingSystemFamily:
      type: string
      enum:
      - WINDOWS
      - LINUX
    ServiceQuotaExceededException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
        reason:
          allOf:
          - $ref: '#/components/schemas/ServiceQuotaExceededExceptionReason'
          description: A string that describes the reason the quota was exceeded.
        resourceType:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The type of the affected resource
        serviceCode:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Identifies the service that exceeded the quota.
        quotaCode:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Identifies the quota that has been exceeded.
        resourceId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The identifier of the affected resource.
        context:
          allOf:
          - $ref: '#/components/schemas/ExceptionContext'
          description: Information about the resources in use when the exception was
            thrown.
      required:
      - message
      - reason
      - resourceType
      - serviceCode
      - quotaCode
      description: You exceeded your service quota. Service quotas, also referred
        to as limits, are the maximum number of service resources or operations for
        your Amazon Web Services account.
    ServiceQuotaExceededExceptionReason:
      type: string
      enum:
      - SERVICE_QUOTA_EXCEEDED_EXCEPTION
      - KMS_KEY_LIMIT_EXCEEDED
    SessionActionDefinition:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/EnvironmentEnterSessionActionDefinition'
        description: |-
          The environment to enter into.
      - allOf:
        - $ref: '#/components/schemas/EnvironmentExitSessionActionDefinition'
        description: |-
          The environment to exit from.
      - allOf:
        - $ref: '#/components/schemas/TaskRunSessionActionDefinition'
        description: |-
          The task run in the session.
      - allOf:
        - $ref: '#/components/schemas/SyncInputJobAttachmentsSessionActionDefinition'
        description: |-
          The job attachments to sync with a session action.
      description: |-
        The definition of the session action.
    SessionActionDefinitionSummary:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/EnvironmentEnterSessionActionDefinitionSummary'
        description: |-
          The environment to enter into.
      - allOf:
        - $ref: '#/components/schemas/EnvironmentExitSessionActionDefinitionSummary'
        description: |-
          The environment to exit from.
      - allOf:
        - $ref: '#/components/schemas/TaskRunSessionActionDefinitionSummary'
        description: |-
          The task run.
      - allOf:
        - $ref: '#/components/schemas/SyncInputJobAttachmentsSessionActionDefinitionSummary'
        description: |-
          The job attachments to sync with the session action definition.
      description: |-
        The details of a session action definition.
    SessionActionId:
      type: string
      pattern: ^sessionaction-[0-9a-f]{32}-(0|([1-9][0-9]{0,9}))$
    SessionActionIdList:
      type: array
      items:
        $ref: '#/components/schemas/SessionActionId'
    SessionActionProgressMessage:
      type: string
      minLength: 0
      maxLength: 4096
    SessionActionProgressPercent:
      type: number
      format: float
      minimum: 0
      maximum: 100
    SessionActionStatus:
      type: string
      enum:
      - ASSIGNED
      - RUNNING
      - CANCELING
      - SUCCEEDED
      - FAILED
      - INTERRUPTED
      - CANCELED
      - NEVER_ATTEMPTED
      - SCHEDULED
      - RECLAIMING
      - RECLAIMED
    SessionActionSummaries:
      type: array
      items:
        $ref: '#/components/schemas/SessionActionSummary'
    SessionActionSummary:
      type: object
      properties:
        sessionActionId:
          allOf:
          - $ref: '#/components/schemas/SessionActionId'
          description: The session action ID.
        status:
          allOf:
          - $ref: '#/components/schemas/SessionActionStatus'
          description: The status of the session action.
        startedAt:
          allOf:
          - $ref: '#/components/schemas/StartedAt'
          description: The date and time the resource started running.
        endedAt:
          allOf:
          - $ref: '#/components/schemas/EndedAt'
          description: The date and time the resource ended running.
        workerUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The Linux timestamp of the last date and time that the session
            action was updated.
        progressPercent:
          allOf:
          - $ref: '#/components/schemas/SessionActionProgressPercent'
          description: The completion percentage for the session action.
        definition:
          allOf:
          - $ref: '#/components/schemas/SessionActionDefinitionSummary'
          description: The session action definition.
      required:
      - sessionActionId
      - status
      - definition
      description: The details of a session action.
    SessionId:
      type: string
      pattern: ^session-[0-9a-f]{32}$
    SessionLifecycleStatus:
      type: string
      enum:
      - STARTED
      - UPDATE_IN_PROGRESS
      - UPDATE_SUCCEEDED
      - UPDATE_FAILED
      - ENDED
    SessionLifecycleTargetStatus:
      type: string
      enum:
      - ENDED
    SessionSummaries:
      type: array
      items:
        $ref: '#/components/schemas/SessionSummary'
    SessionSummary:
      type: object
      properties:
        sessionId:
          allOf:
          - $ref: '#/components/schemas/SessionId'
          description: The session ID.
        fleetId:
          allOf:
          - $ref: '#/components/schemas/FleetId'
          description: The fleet ID.
        workerId:
          allOf:
          - $ref: '#/components/schemas/WorkerId'
          description: The worker ID.
        startedAt:
          allOf:
          - $ref: '#/components/schemas/StartedAt'
          description: The date and time the resource started running.
        lifecycleStatus:
          allOf:
          - $ref: '#/components/schemas/SessionLifecycleStatus'
          description: The life cycle status for the session.
        endedAt:
          allOf:
          - $ref: '#/components/schemas/EndedAt'
          description: The date and time the resource ended running.
        updatedAt:
          allOf:
          - $ref: '#/components/schemas/UpdatedAt'
          description: The date and time the resource was updated.
        updatedBy:
          allOf:
          - $ref: '#/components/schemas/UpdatedBy'
          description: The user or system that updated this resource.
        targetLifecycleStatus:
          allOf:
          - $ref: '#/components/schemas/SessionLifecycleTargetStatus'
          description: The target life cycle status for the session.
      required:
      - sessionId
      - fleetId
      - workerId
      - startedAt
      - lifecycleStatus
      description: The summary of a session.
    SessionToken:
      type: string
    SessionsStatisticsAggregationStatus:
      type: string
      enum:
      - IN_PROGRESS
      - TIMEOUT
      - FAILED
      - COMPLETED
    SessionsStatisticsResources:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/QueueIds'
        description: |-
          One to 10 queue IDs that specify the queues to return statistics for. If you specify the `queueIds` field, you can't specify the `fleetIds` field.
      - allOf:
        - $ref: '#/components/schemas/FleetIds'
        description: |-
          One to 10 fleet IDs that specify the fleets to return statistics for. If you specify the `fleetIds` field, you can't specify the `queueIds` field.
      description: |-
        Specifies the fleet IDs or queue IDs to return statistics. You can specify only fleet IDs or queue IDS, not both.
    SortOrder:
      type: string
      enum:
      - ASCENDING
      - DESCENDING
    StartSessionsStatisticsAggregationRequest:
      type: object
      properties:
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The identifier of the farm that contains queues or fleets to
            return statistics for.
        resourceIds:
          allOf:
          - $ref: '#/components/schemas/SessionsStatisticsResources'
          description: A list of fleet IDs or queue IDs to gather statistics for.
        startTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The Linux timestamp of the date and time that the statistics
            start.
        endTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The Linux timestamp of the date and time that the statistics
            end.
        timezone:
          allOf:
          - $ref: '#/components/schemas/Timezone'
          description: The timezone to use for the statistics. Use UTC notation such
            as "UTC+8."
        period:
          allOf:
          - $ref: '#/components/schemas/Period'
          description: The period to aggregate the statistics.
        groupBy:
          allOf:
          - $ref: '#/components/schemas/UsageGroupBy'
          description: The field to use to group the statistics.
        statistics:
          allOf:
          - $ref: '#/components/schemas/UsageStatistics'
          description: One to four statistics to return.
      required:
      - farmId
      - resourceIds
      - startTime
      - endTime
      - groupBy
      - statistics
    StartSessionsStatisticsAggregationResponse:
      type: object
      properties:
        aggregationId:
          allOf:
          - $ref: '#/components/schemas/AggregationId'
          description: A unique identifier for the aggregated statistics. Use this
            identifier with the `GetAggregatedStatisticsForSessions` operation to
            return the statistics.
      required:
      - aggregationId
    StartedAt:
      type: string
      format: date-time
    StartsAt:
      type: string
      format: date-time
    Statistics:
      type: object
      properties:
        queueId:
          allOf:
          - $ref: '#/components/schemas/QueueId'
          description: The queue ID.
        fleetId:
          allOf:
          - $ref: '#/components/schemas/FleetId'
          description: The fleet ID.
        jobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          description: The job ID.
        jobName:
          allOf:
          - $ref: '#/components/schemas/JobName'
          description: The job name.
        userId:
          allOf:
          - $ref: '#/components/schemas/UserId'
          description: The user ID.
        usageType:
          allOf:
          - $ref: '#/components/schemas/UsageType'
          description: The type of usage for the statistics.
        licenseProduct:
          allOf:
          - $ref: '#/components/schemas/LicenseProduct'
          description: The licensed product.
        instanceType:
          allOf:
          - $ref: '#/components/schemas/InstanceType'
          description: The type of instance.
        count:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of instances in a list of statistics.
        costInUsd:
          allOf:
          - $ref: '#/components/schemas/Stats'
          description: 'How the statistics should appear in USD. Options include:
            minimum, maximum, average or sum.'
        runtimeInSeconds:
          allOf:
          - $ref: '#/components/schemas/Stats'
          description: The total aggregated runtime.
        aggregationStartTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The start time for the aggregation.
        aggregationEndTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The end time for the aggregation.
      required:
      - count
      - costInUsd
      - runtimeInSeconds
      description: A list of statistics for a session.
    StatisticsList:
      type: array
      items:
        $ref: '#/components/schemas/Statistics'
    Stats:
      type: object
      properties:
        min:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: The minimum of the usage statistics.
        max:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: The maximum among the usage statistics.
        avg:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: The average of the usage statistics.
        sum:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: The sum of the usage statistics.
      description: The minimum, maximum, average, and sum.
    StatusMessage:
      type: string
      minLength: 0
      maxLength: 1024
    StepAmountCapabilities:
      type: array
      items:
        $ref: '#/components/schemas/StepAmountCapability'
    StepAmountCapability:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/AmountCapabilityName'
          description: The name of the step.
        min:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: The minimum amount.
        max:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: The maximum amount.
        value:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: The amount value.
      required:
      - name
      description: The details outlining the minimum and maximum capability of a step.
    StepAttributeCapabilities:
      type: array
      items:
        $ref: '#/components/schemas/StepAttributeCapability'
    StepAttributeCapability:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/AttributeCapabilityName'
          description: The name of the step attribute.
        anyOf:
          allOf:
          - $ref: '#/components/schemas/ListAttributeCapabilityValue'
          description: Requires any of the step attributes in a given list.
        allOf:
          allOf:
          - $ref: '#/components/schemas/ListAttributeCapabilityValue'
          description: Requires all of the step attribute values.
      required:
      - name
      description: The list of step attributes.
    StepConsumer:
      type: object
      properties:
        stepId:
          allOf:
          - $ref: '#/components/schemas/StepId'
          description: The step ID.
        status:
          allOf:
          - $ref: '#/components/schemas/DependencyConsumerResolutionStatus'
          description: The step consumer status.
      required:
      - stepId
      - status
      description: The details of a step consumer.
    StepConsumers:
      type: array
      items:
        $ref: '#/components/schemas/StepConsumer'
    StepDependencies:
      type: array
      items:
        $ref: '#/components/schemas/StepDependency'
    StepDependency:
      type: object
      properties:
        stepId:
          allOf:
          - $ref: '#/components/schemas/StepId'
          description: The step ID.
        status:
          allOf:
          - $ref: '#/components/schemas/DependencyConsumerResolutionStatus'
          description: The step dependency status.
      required:
      - stepId
      - status
      description: The details of step dependency.
    StepDescription:
      type: string
      minLength: 1
      maxLength: 2048
    StepDetailsEntity:
      type: object
      properties:
        jobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          description: The job ID.
        stepId:
          allOf:
          - $ref: '#/components/schemas/StepId'
          description: The step ID.
        schemaVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The schema version for a step template.
        template:
          allOf:
          - $ref: '#/components/schemas/Document'
          description: The template for a step.
        dependencies:
          allOf:
          - $ref: '#/components/schemas/DependenciesList'
          description: The dependencies for a step.
      required:
      - jobId
      - stepId
      - schemaVersion
      - template
      - dependencies
      description: The details of a step entity.
    StepDetailsError:
      type: object
      properties:
        jobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          description: The job ID.
        stepId:
          allOf:
          - $ref: '#/components/schemas/StepId'
          description: The step ID.
        code:
          allOf:
          - $ref: '#/components/schemas/JobEntityErrorCode'
          description: The error code.
        message:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The error message detailing the error's cause.
      required:
      - jobId
      - stepId
      - code
      - message
      description: The details of the step error.
    StepDetailsIdentifiers:
      type: object
      properties:
        jobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          description: The job ID.
        stepId:
          allOf:
          - $ref: '#/components/schemas/StepId'
          description: The step ID.
      required:
      - jobId
      - stepId
      description: The details of identifiers for a step.
    StepId:
      type: string
      pattern: ^step-[0-9a-f]{32}$
    StepLifecycleStatus:
      type: string
      enum:
      - CREATE_COMPLETE
      - UPDATE_IN_PROGRESS
      - UPDATE_FAILED
      - UPDATE_SUCCEEDED
    StepName:
      type: string
      minLength: 1
      maxLength: 64
    StepParameter:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/StepParameterName'
          description: The name of the parameter.
        type:
          allOf:
          - $ref: '#/components/schemas/StepParameterType'
          description: The data type of the parameter.
      required:
      - name
      - type
      description: The details of a step parameter.
    StepParameterList:
      type: array
      items:
        $ref: '#/components/schemas/StepParameter'
    StepParameterName:
      type: string
      minLength: 1
      maxLength: 64
    StepParameterType:
      type: string
      enum:
      - INT
      - FLOAT
      - STRING
      - PATH
    StepRequiredCapabilities:
      type: object
      properties:
        attributes:
          allOf:
          - $ref: '#/components/schemas/StepAttributeCapabilities'
          description: The capability attributes that the step requires.
        amounts:
          allOf:
          - $ref: '#/components/schemas/StepAmountCapabilities'
          description: The capability amounts that the step requires.
      required:
      - attributes
      - amounts
      description: The details of required step capabilities.
    StepSearchSummaries:
      type: array
      items:
        $ref: '#/components/schemas/StepSearchSummary'
    StepSearchSummary:
      type: object
      properties:
        stepId:
          allOf:
          - $ref: '#/components/schemas/StepId'
          description: The step ID.
        jobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          description: The job ID.
        queueId:
          allOf:
          - $ref: '#/components/schemas/QueueId'
          description: The queue ID.
        name:
          allOf:
          - $ref: '#/components/schemas/StepName'
          description: The step name.
        lifecycleStatus:
          allOf:
          - $ref: '#/components/schemas/StepLifecycleStatus'
          description: The life cycle status.
        lifecycleStatusMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The life cycle status message.
        taskRunStatus:
          allOf:
          - $ref: '#/components/schemas/TaskRunStatus'
          description: "The task run status for the job.\n\n  * `PENDING`–pending\
            \ and waiting for resources.\n\n  * `READY`–ready to be processed.\n\n\
            \  * `ASSIGNED`–assigned and will run next on a worker.\n\n  * `SCHEDULED`–scheduled\
            \ to be run on a worker.\n\n  * `INTERRUPTING`–being interrupted.\n\n\
            \  * `RUNNING`–running on a worker.\n\n  * `SUSPENDED`–the task is suspended.\n\
            \n  * `CANCELED`–the task has been canceled.\n\n  * `FAILED`–the task\
            \ has failed.\n\n  * `SUCCEEDED`–the task has succeeded."
        targetTaskRunStatus:
          allOf:
          - $ref: '#/components/schemas/StepTargetTaskRunStatus'
          description: The task status to start with on the job.
        taskRunStatusCounts:
          allOf:
          - $ref: '#/components/schemas/TaskRunStatusCounts'
          description: The number of tasks running on the job.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/CreatedAt'
          description: The date and time the resource was created.
        startedAt:
          allOf:
          - $ref: '#/components/schemas/StartedAt'
          description: The date and time the resource started running.
        endedAt:
          allOf:
          - $ref: '#/components/schemas/EndedAt'
          description: The date and time the resource ended running.
        parameterSpace:
          allOf:
          - $ref: '#/components/schemas/ParameterSpace'
          description: The parameters and combination expressions for the search.
      description: The details of a step search.
    StepSummaries:
      type: array
      items:
        $ref: '#/components/schemas/StepSummary'
    StepSummary:
      type: object
      properties:
        stepId:
          allOf:
          - $ref: '#/components/schemas/StepId'
          description: The step ID.
        name:
          allOf:
          - $ref: '#/components/schemas/StepName'
          description: The name of the step.
        lifecycleStatus:
          allOf:
          - $ref: '#/components/schemas/StepLifecycleStatus'
          description: The life cycle status.
        lifecycleStatusMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A message that describes the lifecycle of the step.
        taskRunStatus:
          allOf:
          - $ref: '#/components/schemas/TaskRunStatus'
          description: "The task run status for the job.\n\n  * `PENDING`–pending\
            \ and waiting for resources.\n\n  * `READY`–ready to process.\n\n  * `ASSIGNED`–assigned\
            \ and will run next on a worker.\n\n  * `SCHEDULED`–scheduled to run on\
            \ a worker.\n\n  * `INTERRUPTING`–being interrupted.\n\n  * `RUNNING`–running\
            \ on a worker.\n\n  * `SUSPENDED`–the task is suspended.\n\n  * `CANCELED`–the\
            \ task has been canceled.\n\n  * `FAILED`–the task has failed.\n\n  *\
            \ `SUCCEEDED`–the task has succeeded."
        taskRunStatusCounts:
          allOf:
          - $ref: '#/components/schemas/TaskRunStatusCounts'
          description: The number of tasks running on the job.
        targetTaskRunStatus:
          allOf:
          - $ref: '#/components/schemas/StepTargetTaskRunStatus'
          description: The task status to start with on the job.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/CreatedAt'
          description: The date and time the resource was created.
        createdBy:
          allOf:
          - $ref: '#/components/schemas/CreatedBy'
          description: The user or system that created this resource.
        updatedAt:
          allOf:
          - $ref: '#/components/schemas/UpdatedAt'
          description: The date and time the resource was updated.
        updatedBy:
          allOf:
          - $ref: '#/components/schemas/UpdatedBy'
          description: The user or system that updated this resource.
        startedAt:
          allOf:
          - $ref: '#/components/schemas/StartedAt'
          description: The date and time the resource started running.
        endedAt:
          allOf:
          - $ref: '#/components/schemas/EndedAt'
          description: The date and time the resource ended running.
        dependencyCounts:
          allOf:
          - $ref: '#/components/schemas/DependencyCounts'
          description: The number of dependencies for the step.
      required:
      - stepId
      - name
      - lifecycleStatus
      - taskRunStatus
      - taskRunStatusCounts
      - createdAt
      - createdBy
      description: The details for a step.
    StepTargetTaskRunStatus:
      type: string
      enum:
      - READY
      - FAILED
      - SUCCEEDED
      - CANCELED
      - SUSPENDED
      - PENDING
    StorageProfileId:
      type: string
      pattern: ^sp-[0-9a-f]{32}$
    StorageProfileOperatingSystemFamily:
      type: string
      enum:
      - WINDOWS
      - LINUX
      - MACOS
    StorageProfileSummaries:
      type: array
      items:
        $ref: '#/components/schemas/StorageProfileSummary'
    StorageProfileSummary:
      type: object
      properties:
        storageProfileId:
          allOf:
          - $ref: '#/components/schemas/StorageProfileId'
          description: The storage profile ID.
        displayName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: 'The display name of the storage profile summary to update.


            This field can store any content. Escape or encode this content before
            displaying it on a webpage or any other system that might interpret the
            content of this field.'
        osFamily:
          allOf:
          - $ref: '#/components/schemas/StorageProfileOperatingSystemFamily'
          description: The operating system (OS) family.
      required:
      - storageProfileId
      - displayName
      - osFamily
      description: The details of a storage profile.
    String:
      type: string
    StringFilter:
      type: string
      minLength: 1
      maxLength: 256
    StringFilterExpression:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The field name to search.
        operator:
          allOf:
          - $ref: '#/components/schemas/ComparisonOperator'
          description: The type of comparison to use for this search.
        value:
          allOf:
          - $ref: '#/components/schemas/StringFilter'
          description: The string to search for.
      required:
      - name
      - operator
      - value
      description: Searches for a particular string.
    StringList:
      type: array
      items:
        $ref: '#/components/schemas/String'
    Subdomain:
      type: string
      pattern: ^[a-z0-9-]{1,100}$
    SubnetId:
      type: string
      pattern: ^subnet-[\w]{1,120}$
      minLength: 1
      maxLength: 32
    SubnetIdList:
      type: array
      items:
        $ref: '#/components/schemas/SubnetId'
    SyncInputJobAttachmentsSessionActionDefinition:
      type: object
      properties:
        stepId:
          allOf:
          - $ref: '#/components/schemas/StepId'
          description: The step ID for the step in the job attachment.
      description: The job attachment in a session action to sync.
    SyncInputJobAttachmentsSessionActionDefinitionSummary:
      type: object
      properties:
        stepId:
          allOf:
          - $ref: '#/components/schemas/StepId'
          description: The step ID of the step in the job attachment.
      description: The details of a synced job attachment.
    TagResourceRequest:
      type: object
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ARN of the resource to apply tags to.
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: Each tag consists of a tag key and a tag value. Tag keys and
            values are both required, but tag values can be empty strings.
      required:
      - resourceArn
    TagResourceResponse:
      type: object
      properties: {}
    Tags:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/String'
    TaskId:
      type: string
      pattern: ^task-[0-9a-f]{32}-(0|([1-9][0-9]{0,9}))$
    TaskParameterValue:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/IntString'
        description: |-
          A signed integer represented as a string.
      - allOf:
        - $ref: '#/components/schemas/FloatString'
        description: |-
          A double precision IEEE-754 floating point number represented as a string.
      - allOf:
        - $ref: '#/components/schemas/ParameterString'
        description: |-
          A UTF-8 string.
      - allOf:
        - $ref: '#/components/schemas/PathString'
        description: |-
          A file system path represented as a string.
      description: |-
        The data types for the task parameters.
      x-sensitive: true
    TaskParameters:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/TaskParameterValue'
    TaskRetryCount:
      type: integer
      minimum: 0
      maximum: 2147483647
    TaskRunSessionActionDefinition:
      type: object
      properties:
        taskId:
          allOf:
          - $ref: '#/components/schemas/TaskId'
          description: The task ID.
        stepId:
          allOf:
          - $ref: '#/components/schemas/StepId'
          description: The step ID.
        parameters:
          allOf:
          - $ref: '#/components/schemas/TaskParameters'
          description: The task parameters.
      required:
      - stepId
      - parameters
      description: The task, step, and parameters for the task run in the session
        action.
    TaskRunSessionActionDefinitionSummary:
      type: object
      properties:
        taskId:
          allOf:
          - $ref: '#/components/schemas/TaskId'
          description: The task ID.
        stepId:
          allOf:
          - $ref: '#/components/schemas/StepId'
          description: The step ID.
      required:
      - stepId
      description: The details of a task run in a session action.
    TaskRunStatus:
      type: string
      enum:
      - PENDING
      - READY
      - ASSIGNED
      - STARTING
      - SCHEDULED
      - INTERRUPTING
      - RUNNING
      - SUSPENDED
      - CANCELED
      - FAILED
      - SUCCEEDED
      - NOT_COMPATIBLE
    TaskRunStatusCounts:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Integer'
    TaskSearchSummaries:
      type: array
      items:
        $ref: '#/components/schemas/TaskSearchSummary'
    TaskSearchSummary:
      type: object
      properties:
        taskId:
          allOf:
          - $ref: '#/components/schemas/TaskId'
          description: The task ID.
        stepId:
          allOf:
          - $ref: '#/components/schemas/StepId'
          description: The step ID.
        jobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          description: The job ID.
        queueId:
          allOf:
          - $ref: '#/components/schemas/QueueId'
          description: The queue ID.
        runStatus:
          allOf:
          - $ref: '#/components/schemas/TaskRunStatus'
          description: The run status of the task.
        targetRunStatus:
          allOf:
          - $ref: '#/components/schemas/TaskTargetRunStatus'
          description: The run status that the task is being updated to.
        parameters:
          allOf:
          - $ref: '#/components/schemas/TaskParameters'
          description: The parameters to search for.
        failureRetryCount:
          allOf:
          - $ref: '#/components/schemas/TaskRetryCount'
          description: The number of times that the task failed and was retried.
        startedAt:
          allOf:
          - $ref: '#/components/schemas/StartedAt'
          description: The date and time the resource started running.
        endedAt:
          allOf:
          - $ref: '#/components/schemas/EndedAt'
          description: The date and time the resource ended running.
      description: The details of a task search.
    TaskSummaries:
      type: array
      items:
        $ref: '#/components/schemas/TaskSummary'
    TaskSummary:
      type: object
      properties:
        taskId:
          allOf:
          - $ref: '#/components/schemas/TaskId'
          description: The task ID.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/CreatedAt'
          description: The date and time the resource was created.
        createdBy:
          allOf:
          - $ref: '#/components/schemas/CreatedBy'
          description: The user or system that created this resource.
        runStatus:
          allOf:
          - $ref: '#/components/schemas/TaskRunStatus'
          description: The run status of the task.
        targetRunStatus:
          allOf:
          - $ref: '#/components/schemas/TaskTargetRunStatus'
          description: The run status on which the started.
        failureRetryCount:
          allOf:
          - $ref: '#/components/schemas/TaskRetryCount'
          description: The number of times that the task failed and was retried.
        parameters:
          allOf:
          - $ref: '#/components/schemas/TaskParameters'
          description: The task parameters.
        startedAt:
          allOf:
          - $ref: '#/components/schemas/StartedAt'
          description: The date and time the resource started running.
        endedAt:
          allOf:
          - $ref: '#/components/schemas/EndedAt'
          description: The date and time the resource ended running.
        updatedAt:
          allOf:
          - $ref: '#/components/schemas/UpdatedAt'
          description: The date and time the resource was updated.
        updatedBy:
          allOf:
          - $ref: '#/components/schemas/UpdatedBy'
          description: The user or system that updated this resource.
        latestSessionActionId:
          allOf:
          - $ref: '#/components/schemas/SessionActionId'
          description: The latest session action for the task.
      required:
      - taskId
      - createdAt
      - createdBy
      - runStatus
      description: The details of a task.
    TaskTargetRunStatus:
      type: string
      enum:
      - READY
      - FAILED
      - SUCCEEDED
      - CANCELED
      - SUSPENDED
      - PENDING
    ThresholdPercentage:
      type: number
      format: float
      minimum: 0
      maximum: 100
    ThrottlingException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
        serviceCode:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Identifies the service that is being throttled.
        quotaCode:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Identifies the quota that is being throttled.
        retryAfterSeconds:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of seconds a client should wait before retrying
            the request.
        context:
          allOf:
          - $ref: '#/components/schemas/ExceptionContext'
          description: Information about the resources in use when the exception was
            thrown.
      required:
      - message
      description: Your request exceeded a request rate quota.
    Timestamp:
      type: string
      format: date-time
    Timezone:
      type: string
      pattern: ^UTC[-+][01][0-9]:(30|00)$
      minLength: 9
      maxLength: 9
    TotalResults:
      type: integer
      minimum: 0
      maximum: 10000
    UntagResourceRequest:
      type: object
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ARN of the resource to remove the tag from.
        tagKeys:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: They keys of the tag.
      required:
      - resourceArn
      - tagKeys
    UntagResourceResponse:
      type: object
      properties: {}
    UpdateBudgetRequest:
      type: object
      properties:
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: The unique token which the server uses to recognize retries
            of the same request.
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The farm ID of the budget to update.
        budgetId:
          allOf:
          - $ref: '#/components/schemas/BudgetId'
          description: The budget ID to update.
        displayName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: 'The display name of the budget to update.


            This field can store any content. Escape or encode this content before
            displaying it on a webpage or any other system that might interpret the
            content of this field.'
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: 'The description of the budget to update.


            This field can store any content. Escape or encode this content before
            displaying it on a webpage or any other system that might interpret the
            content of this field.'
        status:
          allOf:
          - $ref: '#/components/schemas/BudgetStatus'
          description: "Updates the status of the budget.\n\n  * `ACTIVE`–The budget\
            \ is being evaluated.\n\n  * `INACTIVE`–The budget is inactive. This can\
            \ include Expired, Canceled, or deleted Deleted statuses."
        approximateDollarLimit:
          allOf:
          - $ref: '#/components/schemas/ConsumedUsageLimit'
          description: The dollar limit to update on the budget. Based on consumed
            usage.
        actionsToAdd:
          allOf:
          - $ref: '#/components/schemas/BudgetActionsToAdd'
          description: The budget actions to add. Budget actions specify what happens
            when the budget runs out.
        actionsToRemove:
          allOf:
          - $ref: '#/components/schemas/BudgetActionsToRemove'
          description: The budget actions to remove from the budget.
        schedule:
          allOf:
          - $ref: '#/components/schemas/BudgetSchedule'
          description: The schedule to update.
      required:
      - farmId
      - budgetId
    UpdateBudgetResponse:
      type: object
      properties: {}
    UpdateFarmRequest:
      type: object
      properties:
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The farm ID to update.
        displayName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: 'The display name of the farm to update.


            This field can store any content. Escape or encode this content before
            displaying it on a webpage or any other system that might interpret the
            content of this field.'
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: 'The description of the farm to update.


            This field can store any content. Escape or encode this content before
            displaying it on a webpage or any other system that might interpret the
            content of this field.'
      required:
      - farmId
    UpdateFarmResponse:
      type: object
      properties: {}
    UpdateFleetRequest:
      type: object
      properties:
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: The unique token which the server uses to recognize retries
            of the same request.
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The farm ID to update.
        fleetId:
          allOf:
          - $ref: '#/components/schemas/FleetId'
          description: The fleet ID to update.
        displayName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: 'The display name of the fleet to update.


            This field can store any content. Escape or encode this content before
            displaying it on a webpage or any other system that might interpret the
            content of this field.'
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: 'The description of the fleet to update.


            This field can store any content. Escape or encode this content before
            displaying it on a webpage or any other system that might interpret the
            content of this field.'
        roleArn:
          allOf:
          - $ref: '#/components/schemas/IamRoleArn'
          description: The IAM role ARN that the fleet's workers assume while running
            jobs.
        minWorkerCount:
          allOf:
          - $ref: '#/components/schemas/MinZeroMaxInteger'
          description: The minimum number of workers in the fleet.
        maxWorkerCount:
          allOf:
          - $ref: '#/components/schemas/MinZeroMaxInteger'
          description: The maximum number of workers in the fleet.
        configuration:
          allOf:
          - $ref: '#/components/schemas/FleetConfiguration'
          description: The fleet configuration to update.
      required:
      - farmId
      - fleetId
    UpdateFleetResponse:
      type: object
      properties: {}
    UpdateJobLifecycleStatus:
      type: string
      enum:
      - ARCHIVED
    UpdateJobRequest:
      type: object
      properties:
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: The unique token which the server uses to recognize retries
            of the same request.
        targetTaskRunStatus:
          allOf:
          - $ref: '#/components/schemas/JobTargetTaskRunStatus'
          description: The task status to update the job's tasks to.
        priority:
          allOf:
          - $ref: '#/components/schemas/JobPriority'
          description: The job priority to update.
        maxFailedTasksCount:
          allOf:
          - $ref: '#/components/schemas/MaxFailedTasksCount'
          description: The number of task failures before the job stops running and
            is marked as `FAILED`.
        maxRetriesPerTask:
          allOf:
          - $ref: '#/components/schemas/MaxRetriesPerTask'
          description: The maximum number of retries for a job.
        lifecycleStatus:
          allOf:
          - $ref: '#/components/schemas/UpdateJobLifecycleStatus'
          description: 'The status of a job in its lifecycle. When you change the
            status of the job to `ARCHIVED`, the job can''t be scheduled or archived.


            An archived jobs and its steps and tasks are deleted after 120 days. The
            job can''t be recovered.'
        maxWorkerCount:
          allOf:
          - $ref: '#/components/schemas/MaxWorkerCount'
          description: 'The maximum number of worker hosts that can concurrently process
            a job. When the `maxWorkerCount` is reached, no more workers will be assigned
            to process the job, even if the fleets assigned to the job''s queue has
            available workers.


            You can''t set the `maxWorkerCount` to 0. If you set it to -1, there is
            no maximum number of workers.


            If you don''t specify the `maxWorkerCount`, the default is -1.


            The maximum number of workers that can process tasks in the job.'
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The farm ID of the job to update.
        queueId:
          allOf:
          - $ref: '#/components/schemas/QueueId'
          description: The queue ID of the job to update.
        jobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          description: The job ID to update.
      required:
      - farmId
      - queueId
      - jobId
    UpdateJobResponse:
      type: object
      properties: {}
    UpdateLimitRequest:
      type: object
      properties:
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The unique identifier of the farm that contains the limit.
        limitId:
          allOf:
          - $ref: '#/components/schemas/LimitId'
          description: The unique identifier of the limit to update.
        displayName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: 'The new display name of the limit.


            This field can store any content. Escape or encode this content before
            displaying it on a webpage or any other system that might interpret the
            content of this field.'
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: 'The new description of the limit.


            This field can store any content. Escape or encode this content before
            displaying it on a webpage or any other system that might interpret the
            content of this field.'
        maxCount:
          allOf:
          - $ref: '#/components/schemas/MaxCount'
          description: 'The maximum number of resources constrained by this limit.
            When all of the resources are in use, steps that require the limit won''t
            be scheduled until the resource is available.


            If more than the new maximum number is currently in use, running jobs
            finish but no new jobs are started until the number of resources in use
            is below the new maximum number.


            The `maxCount` must not be 0. If the value is -1, there is no restriction
            on the number of resources that can be acquired for this limit.'
      required:
      - farmId
      - limitId
    UpdateLimitResponse:
      type: object
      properties: {}
    UpdateMonitorRequest:
      type: object
      properties:
        monitorId:
          allOf:
          - $ref: '#/components/schemas/MonitorId'
          description: The unique identifier of the monitor to update.
        subdomain:
          allOf:
          - $ref: '#/components/schemas/Subdomain'
          description: The new value of the subdomain to use when forming the monitor
            URL.
        displayName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: 'The new value to use for the monitor''s display name.


            This field can store any content. Escape or encode this content before
            displaying it on a webpage or any other system that might interpret the
            content of this field.'
        roleArn:
          allOf:
          - $ref: '#/components/schemas/IamRoleArn'
          description: The Amazon Resource Name (ARN) of the new IAM role to use with
            the monitor.
      required:
      - monitorId
    UpdateMonitorResponse:
      type: object
      properties: {}
    UpdateQueueEnvironmentRequest:
      type: object
      properties:
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: The unique token which the server uses to recognize retries
            of the same request.
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The farm ID of the queue environment to update.
        queueId:
          allOf:
          - $ref: '#/components/schemas/QueueId'
          description: The queue ID of the queue environment to update.
        queueEnvironmentId:
          allOf:
          - $ref: '#/components/schemas/QueueEnvironmentId'
          description: The queue environment ID to update.
        priority:
          allOf:
          - $ref: '#/components/schemas/Priority'
          description: The priority to update.
        templateType:
          allOf:
          - $ref: '#/components/schemas/EnvironmentTemplateType'
          description: The template type to update.
        template:
          allOf:
          - $ref: '#/components/schemas/EnvironmentTemplate'
          description: The template to update.
      required:
      - farmId
      - queueId
      - queueEnvironmentId
    UpdateQueueEnvironmentResponse:
      type: object
      properties: {}
    UpdateQueueFleetAssociationRequest:
      type: object
      properties:
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The farm ID to update.
        queueId:
          allOf:
          - $ref: '#/components/schemas/QueueId'
          description: The queue ID to update.
        fleetId:
          allOf:
          - $ref: '#/components/schemas/FleetId'
          description: The fleet ID to update.
        status:
          allOf:
          - $ref: '#/components/schemas/UpdateQueueFleetAssociationStatus'
          description: The status to update.
      required:
      - farmId
      - queueId
      - fleetId
      - status
    UpdateQueueFleetAssociationResponse:
      type: object
      properties: {}
    UpdateQueueFleetAssociationStatus:
      type: string
      enum:
      - ACTIVE
      - STOP_SCHEDULING_AND_COMPLETE_TASKS
      - STOP_SCHEDULING_AND_CANCEL_TASKS
    UpdateQueueLimitAssociationRequest:
      type: object
      properties:
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The unique identifier of the farm that contains the associated
            queues and limits.
        queueId:
          allOf:
          - $ref: '#/components/schemas/QueueId'
          description: The unique identifier of the queue associated to the limit.
        limitId:
          allOf:
          - $ref: '#/components/schemas/LimitId'
          description: The unique identifier of the limit associated to the queue.
        status:
          allOf:
          - $ref: '#/components/schemas/UpdateQueueLimitAssociationStatus'
          description: Sets the status of the limit. You can mark the limit active,
            or you can stop usage of the limit and either complete existing tasks
            or cancel any existing tasks immediately.
      required:
      - farmId
      - queueId
      - limitId
      - status
    UpdateQueueLimitAssociationResponse:
      type: object
      properties: {}
    UpdateQueueLimitAssociationStatus:
      type: string
      enum:
      - ACTIVE
      - STOP_LIMIT_USAGE_AND_COMPLETE_TASKS
      - STOP_LIMIT_USAGE_AND_CANCEL_TASKS
    UpdateQueueRequest:
      type: object
      properties:
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: The idempotency token to update in the queue.
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The farm ID to update in the queue.
        queueId:
          allOf:
          - $ref: '#/components/schemas/QueueId'
          description: The queue ID to update.
        displayName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: 'The display name of the queue to update.


            This field can store any content. Escape or encode this content before
            displaying it on a webpage or any other system that might interpret the
            content of this field.'
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: 'The description of the queue to update.


            This field can store any content. Escape or encode this content before
            displaying it on a webpage or any other system that might interpret the
            content of this field.'
        defaultBudgetAction:
          allOf:
          - $ref: '#/components/schemas/DefaultQueueBudgetAction'
          description: The default action to take for a queue update if a budget isn't
            configured.
        jobAttachmentSettings:
          allOf:
          - $ref: '#/components/schemas/JobAttachmentSettings'
          description: The job attachment settings to update for the queue.
        roleArn:
          allOf:
          - $ref: '#/components/schemas/IamRoleArn'
          description: The IAM role ARN that's used to run jobs from this queue.
        jobRunAsUser:
          allOf:
          - $ref: '#/components/schemas/JobRunAsUser'
          description: Update the jobs in the queue to run as a specified POSIX user.
        requiredFileSystemLocationNamesToAdd:
          allOf:
          - $ref: '#/components/schemas/RequiredFileSystemLocationNames'
          description: The required file system location names to add to the queue.
        requiredFileSystemLocationNamesToRemove:
          allOf:
          - $ref: '#/components/schemas/RequiredFileSystemLocationNames'
          description: The required file system location names to remove from the
            queue.
        allowedStorageProfileIdsToAdd:
          allOf:
          - $ref: '#/components/schemas/AllowedStorageProfileIds'
          description: The storage profile IDs to add.
        allowedStorageProfileIdsToRemove:
          allOf:
          - $ref: '#/components/schemas/AllowedStorageProfileIds'
          description: The storage profile ID to remove.
      required:
      - farmId
      - queueId
    UpdateQueueResponse:
      type: object
      properties: {}
    UpdateSessionRequest:
      type: object
      properties:
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: The unique token which the server uses to recognize retries
            of the same request.
        targetLifecycleStatus:
          allOf:
          - $ref: '#/components/schemas/SessionLifecycleTargetStatus'
          description: The life cycle status to update in the session.
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The farm ID to update in the session.
        queueId:
          allOf:
          - $ref: '#/components/schemas/QueueId'
          description: The queue ID to update in the session.
        jobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          description: The job ID to update in the session.
        sessionId:
          allOf:
          - $ref: '#/components/schemas/SessionId'
          description: The session ID to update.
      required:
      - targetLifecycleStatus
      - farmId
      - queueId
      - jobId
      - sessionId
    UpdateSessionResponse:
      type: object
      properties: {}
    UpdateStepRequest:
      type: object
      properties:
        targetTaskRunStatus:
          allOf:
          - $ref: '#/components/schemas/StepTargetTaskRunStatus'
          description: The task status to update the step's tasks to.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: The unique token which the server uses to recognize retries
            of the same request.
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The farm ID to update.
        queueId:
          allOf:
          - $ref: '#/components/schemas/QueueId'
          description: The queue ID to update.
        jobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          description: The job ID to update.
        stepId:
          allOf:
          - $ref: '#/components/schemas/StepId'
          description: The step ID to update.
      required:
      - targetTaskRunStatus
      - farmId
      - queueId
      - jobId
      - stepId
    UpdateStepResponse:
      type: object
      properties: {}
    UpdateStorageProfileRequest:
      type: object
      properties:
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: The unique token which the server uses to recognize retries
            of the same request.
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The farm ID to update.
        storageProfileId:
          allOf:
          - $ref: '#/components/schemas/StorageProfileId'
          description: The storage profile ID to update.
        displayName:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: 'The display name of the storage profile to update.


            This field can store any content. Escape or encode this content before
            displaying it on a webpage or any other system that might interpret the
            content of this field.'
        osFamily:
          allOf:
          - $ref: '#/components/schemas/StorageProfileOperatingSystemFamily'
          description: The OS system to update.
        fileSystemLocationsToAdd:
          allOf:
          - $ref: '#/components/schemas/FileSystemLocationsList'
          description: The file system location names to add.
        fileSystemLocationsToRemove:
          allOf:
          - $ref: '#/components/schemas/FileSystemLocationsList'
          description: The file system location names to remove.
      required:
      - farmId
      - storageProfileId
    UpdateStorageProfileResponse:
      type: object
      properties: {}
    UpdateTaskRequest:
      type: object
      properties:
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: The unique token which the server uses to recognize retries
            of the same request.
        targetRunStatus:
          allOf:
          - $ref: '#/components/schemas/TaskTargetRunStatus'
          description: The run status with which to start the task.
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The farm ID to update.
        queueId:
          allOf:
          - $ref: '#/components/schemas/QueueId'
          description: The queue ID to update.
        jobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          description: The job ID to update.
        stepId:
          allOf:
          - $ref: '#/components/schemas/StepId'
          description: The step ID to update.
        taskId:
          allOf:
          - $ref: '#/components/schemas/TaskId'
          description: The task ID to update.
      required:
      - targetRunStatus
      - farmId
      - queueId
      - jobId
      - stepId
      - taskId
    UpdateTaskResponse:
      type: object
      properties: {}
    UpdateWorkerRequest:
      type: object
      properties:
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The farm ID to update.
        fleetId:
          allOf:
          - $ref: '#/components/schemas/FleetId'
          description: The fleet ID to update.
        workerId:
          allOf:
          - $ref: '#/components/schemas/WorkerId'
          description: The worker ID to update.
        status:
          allOf:
          - $ref: '#/components/schemas/UpdatedWorkerStatus'
          description: The worker status to update.
        capabilities:
          allOf:
          - $ref: '#/components/schemas/WorkerCapabilities'
          description: The worker capabilities to update.
        hostProperties:
          allOf:
          - $ref: '#/components/schemas/HostPropertiesRequest'
          description: The host properties to update.
      required:
      - farmId
      - fleetId
      - workerId
    UpdateWorkerResponse:
      type: object
      properties:
        log:
          allOf:
          - $ref: '#/components/schemas/LogConfiguration'
          description: The worker log to update.
    UpdateWorkerScheduleInterval:
      type: integer
      minimum: 0
    UpdateWorkerScheduleRequest:
      type: object
      properties:
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The farm ID to update.
        fleetId:
          allOf:
          - $ref: '#/components/schemas/FleetId'
          description: The fleet ID to update.
        workerId:
          allOf:
          - $ref: '#/components/schemas/WorkerId'
          description: The worker ID to update.
        updatedSessionActions:
          allOf:
          - $ref: '#/components/schemas/UpdatedSessionActions'
          description: The session actions associated with the worker schedule to
            update.
      required:
      - farmId
      - fleetId
      - workerId
    UpdateWorkerScheduleResponse:
      type: object
      properties:
        assignedSessions:
          allOf:
          - $ref: '#/components/schemas/AssignedSessions'
          description: The assigned sessions to update.
        cancelSessionActions:
          allOf:
          - $ref: '#/components/schemas/CancelSessionActions'
          description: The session actions associated with the worker schedule to
            cancel.
        desiredWorkerStatus:
          allOf:
          - $ref: '#/components/schemas/DesiredWorkerStatus'
          description: The status to update the worker to.
        updateIntervalSeconds:
          allOf:
          - $ref: '#/components/schemas/UpdateWorkerScheduleInterval'
          description: Updates the time interval (in seconds) for the schedule.
      required:
      - assignedSessions
      - cancelSessionActions
      - updateIntervalSeconds
    UpdatedAt:
      type: string
      format: date-time
    UpdatedBy:
      type: string
    UpdatedSessionActionInfo:
      type: object
      properties:
        completedStatus:
          allOf:
          - $ref: '#/components/schemas/CompletedStatus'
          description: The status of the session upon completion.
        processExitCode:
          allOf:
          - $ref: '#/components/schemas/ProcessExitCode'
          description: The process exit code. The default Deadline Cloud worker agent
            converts unsigned 32-bit exit codes to signed 32-bit exit codes.
        progressMessage:
          allOf:
          - $ref: '#/components/schemas/SessionActionProgressMessage'
          description: A message to indicate the progress of the updated session action.
        startedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time the resource started running.
        endedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time the resource ended running.
        updatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The updated time.
        progressPercent:
          allOf:
          - $ref: '#/components/schemas/SessionActionProgressPercent'
          description: The percentage completed.
      description: The updated session action information as it relates to completion
        and progress of the session.
    UpdatedSessionActions:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/UpdatedSessionActionInfo'
    UpdatedWorkerStatus:
      type: string
      enum:
      - STARTED
      - STOPPING
      - STOPPED
    Url:
      type: string
    UsageGroupBy:
      type: array
      items:
        $ref: '#/components/schemas/UsageGroupByField'
    UsageGroupByField:
      type: string
      enum:
      - QUEUE_ID
      - FLEET_ID
      - JOB_ID
      - USER_ID
      - USAGE_TYPE
      - INSTANCE_TYPE
      - LICENSE_PRODUCT
    UsageStatistic:
      type: string
      enum:
      - SUM
      - MIN
      - MAX
      - AVG
    UsageStatistics:
      type: array
      items:
        $ref: '#/components/schemas/UsageStatistic'
    UsageTrackingResource:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/QueueId'
        description: |-
          The queue ID.
      description: |-
        The usage details of the allotted budget.
    UsageType:
      type: string
      enum:
      - COMPUTE
      - LICENSE
    UserId:
      type: string
    UserJobsFirst:
      type: object
      properties:
        userIdentityId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The user's ID.
      required:
      - userIdentityId
      description: Allows setting a specific user's job to run first.
    VCpuCountRange:
      type: object
      properties:
        min:
          allOf:
          - $ref: '#/components/schemas/MinOneMaxTenThousand'
          description: The minimum amount of vCPU.
        max:
          allOf:
          - $ref: '#/components/schemas/MinOneMaxTenThousand'
          description: The maximum amount of vCPU.
      required:
      - min
      description: The allowable range of vCPU processing power for the fleet.
    ValidationException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
        reason:
          allOf:
          - $ref: '#/components/schemas/ValidationExceptionReason'
          description: The reason that the request failed validation.
        fieldList:
          allOf:
          - $ref: '#/components/schemas/ValidationExceptionFieldList'
          description: A list of fields that failed validation.
        context:
          allOf:
          - $ref: '#/components/schemas/ExceptionContext'
          description: Information about the resources in use when the exception was
            thrown.
      required:
      - message
      - reason
      description: The request isn't valid. This can occur if your request contains
        malformed JSON or unsupported characters.
    ValidationExceptionField:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the validation exception.
        message:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The error message for the validation exception.
      required:
      - name
      - message
      description: The details of a validation exception.
    ValidationExceptionFieldList:
      type: array
      items:
        $ref: '#/components/schemas/ValidationExceptionField'
    ValidationExceptionReason:
      type: string
      enum:
      - UNKNOWN_OPERATION
      - CANNOT_PARSE
      - FIELD_VALIDATION_FAILED
      - OTHER
    VpcId:
      type: string
      pattern: ^vpc-[\w]{1,120}$
      minLength: 1
      maxLength: 32
    WindowsUser:
      type: object
      properties:
        user:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The user.
        passwordArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The password ARN for the Windows user.
      required:
      - user
      - passwordArn
      description: The Windows user details.
    WorkerAmountCapability:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/AmountCapabilityName'
          description: The name of the worker amount capability.
        value:
          allOf:
          - $ref: '#/components/schemas/Float'
          description: The value of the worker amount capability.
      required:
      - name
      - value
      description: The details of the worker amount capability.
    WorkerAmountCapabilityList:
      type: array
      items:
        $ref: '#/components/schemas/WorkerAmountCapability'
    WorkerAttributeCapability:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/AttributeCapabilityName'
          description: The name of the worker attribute capability.
        values:
          allOf:
          - $ref: '#/components/schemas/AttributeCapabilityValuesList'
          description: The values of the worker amount capability.
      required:
      - name
      - values
      description: The details of the worker attribute capability.
    WorkerAttributeCapabilityList:
      type: array
      items:
        $ref: '#/components/schemas/WorkerAttributeCapability'
    WorkerCapabilities:
      type: object
      properties:
        amounts:
          allOf:
          - $ref: '#/components/schemas/WorkerAmountCapabilityList'
          description: The worker capabilities amounts on a list of worker capabilities.
        attributes:
          allOf:
          - $ref: '#/components/schemas/WorkerAttributeCapabilityList'
          description: The worker attribute capabilities in the list of attribute
            capabilities.
      required:
      - amounts
      - attributes
      description: The details for worker capabilities.
    WorkerId:
      type: string
      pattern: ^worker-[0-9a-f]{32}$
    WorkerSearchSummaries:
      type: array
      items:
        $ref: '#/components/schemas/WorkerSearchSummary'
    WorkerSearchSummary:
      type: object
      properties:
        fleetId:
          allOf:
          - $ref: '#/components/schemas/FleetId'
          description: The fleet ID.
        workerId:
          allOf:
          - $ref: '#/components/schemas/WorkerId'
          description: The worker ID.
        status:
          allOf:
          - $ref: '#/components/schemas/WorkerStatus'
          description: The status of the worker search.
        hostProperties:
          allOf:
          - $ref: '#/components/schemas/HostPropertiesResponse'
          description: Provides the Amazon EC2 instance properties of the worker host.
        createdBy:
          allOf:
          - $ref: '#/components/schemas/CreatedBy'
          description: The user or system that created this resource.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/CreatedAt'
          description: The date and time the resource was created.
        updatedBy:
          allOf:
          - $ref: '#/components/schemas/UpdatedBy'
          description: The user or system that updated this resource.
        updatedAt:
          allOf:
          - $ref: '#/components/schemas/UpdatedAt'
          description: The date and time the resource was updated.
      description: The details of a worker search.
    WorkerSessionSummary:
      type: object
      properties:
        sessionId:
          allOf:
          - $ref: '#/components/schemas/SessionId'
          description: The session ID for the session action.
        queueId:
          allOf:
          - $ref: '#/components/schemas/QueueId'
          description: The queue ID for the queue associated to the worker.
        jobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          description: The job ID for the job associated with the worker's session.
        startedAt:
          allOf:
          - $ref: '#/components/schemas/StartedAt'
          description: The date and time the resource started running.
        lifecycleStatus:
          allOf:
          - $ref: '#/components/schemas/SessionLifecycleStatus'
          description: The life cycle status for the worker's session.
        endedAt:
          allOf:
          - $ref: '#/components/schemas/EndedAt'
          description: The date and time the resource ended running.
        targetLifecycleStatus:
          allOf:
          - $ref: '#/components/schemas/SessionLifecycleTargetStatus'
          description: The life cycle status
      required:
      - sessionId
      - queueId
      - jobId
      - startedAt
      - lifecycleStatus
      description: Summarizes the session for a particular worker.
    WorkerStatus:
      type: string
      enum:
      - CREATED
      - STARTED
      - STOPPING
      - STOPPED
      - NOT_RESPONDING
      - NOT_COMPATIBLE
      - RUNNING
      - IDLE
    WorkerSummaries:
      type: array
      items:
        $ref: '#/components/schemas/WorkerSummary'
    WorkerSummary:
      type: object
      properties:
        workerId:
          allOf:
          - $ref: '#/components/schemas/WorkerId'
          description: The worker ID.
        farmId:
          allOf:
          - $ref: '#/components/schemas/FarmId'
          description: The farm ID.
        fleetId:
          allOf:
          - $ref: '#/components/schemas/FleetId'
          description: The fleet ID.
        status:
          allOf:
          - $ref: '#/components/schemas/WorkerStatus'
          description: The status of the worker.
        hostProperties:
          allOf:
          - $ref: '#/components/schemas/HostPropertiesResponse'
          description: The host properties of the worker.
        log:
          allOf:
          - $ref: '#/components/schemas/LogConfiguration'
          description: The log configuration for the worker.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/CreatedAt'
          description: The date and time the resource was created.
        createdBy:
          allOf:
          - $ref: '#/components/schemas/CreatedBy'
          description: The user or system that created this resource.
        updatedAt:
          allOf:
          - $ref: '#/components/schemas/UpdatedAt'
          description: The date and time the resource was updated.
        updatedBy:
          allOf:
          - $ref: '#/components/schemas/UpdatedBy'
          description: The user or system that updated this resource.
      required:
      - workerId
      - farmId
      - fleetId
      - status
      - createdAt
      - createdBy
      description: The summary of details for a worker.
