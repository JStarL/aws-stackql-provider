openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: eks
  x-aws-serviceName: eks
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-07'
  version: '2017-11-01'
  title: Amazon Elastic Kubernetes Service
  description: |-
    Amazon Elastic Kubernetes Service (Amazon EKS) is a managed service that makes it easy for you to run Kubernetes on Amazon Web Services without needing to setup or maintain your own Kubernetes control plane. Kubernetes is an open-source system for automating the deployment, scaling, and management of containerized applications.

    Amazon EKS runs up-to-date versions of the open-source Kubernetes software, so you can use all the existing plugins and tooling from the Kubernetes community. Applications running on Amazon EKS are fully compatible with applications running on any standard Kubernetes environment, whether running in on-premises data centers or public clouds. This means that you can easily migrate any standard Kubernetes application to Amazon EKS without any code modification required.
servers:
- description: The Amazon Elastic Kubernetes Service regional endpoint
  url: https://eks.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths:
  /clusters/{clusterName}/access-entries/{principalArn}/access-policies:
    post:
      operationId: AssociateAccessPolicy
      description: |-
        Associates an access policy and its scope to an access entry. For more information about associating access policies, see [Associating and disassociating access policies to and from access entries](https://docs.aws.amazon.com/eks/latest/userguide/access-policies.html) in the _Amazon EKS User Guide_.
      parameters:
      - name: clusterName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: principalArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                policyArn:
                  $ref: '#/components/schemas/String'
                accessScope:
                  $ref: '#/components/schemas/AccessScope'
      responses:
        '200': {}
        '400':
          description: |-
            The request is invalid given the state of the cluster. Check the state of the cluster and the associated operations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource could not be found. You can view your available clusters with `ListClusters`. You can view your available managed node groups with `ListNodegroups`. Amazon EKS clusters and node groups are Amazon Web Services Region specific.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '500':
          description: |-
            These errors are usually caused by a server-side issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerException'
    get:
      operationId: ListAssociatedAccessPolicies
      description: |-
        Lists the access policies associated with an access entry.
      parameters:
      - name: clusterName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: principalArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ListAssociatedAccessPoliciesRequestMaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '400':
          description: |-
            The request is invalid given the state of the cluster. Check the state of the cluster and the associated operations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource could not be found. You can view your available clusters with `ListClusters`. You can view your available managed node groups with `ListNodegroups`. Amazon EKS clusters and node groups are Amazon Web Services Region specific.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '500':
          description: |-
            These errors are usually caused by a server-side issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerException'
  /clusters/{clusterName}/encryption-config/associate:
    post:
      operationId: AssociateEncryptionConfig
      description: |-
        Associates an encryption configuration to an existing cluster.

        Use this API to enable encryption on existing clusters that don't already have encryption enabled. This allows you to implement a defense-in-depth security strategy without migrating applications to new Amazon EKS clusters.
      parameters:
      - name: clusterName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                encryptionConfig:
                  $ref: '#/components/schemas/EncryptionConfigList'
                clientRequestToken:
                  $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '400':
          description: |-
            The request is invalid given the state of the cluster. Check the state of the cluster and the associated operations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '409':
          description: |-
            The specified resource is in use.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
        '404':
          description: |-
            The specified resource could not be found. You can view your available clusters with `ListClusters`. You can view your available managed node groups with `ListNodegroups`. Amazon EKS clusters and node groups are Amazon Web Services Region specific.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '500':
          description: |-
            These errors are usually caused by a server-side issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerException'
        '429':
          description: |-
            The request or operation couldn't be performed because a service is throttling requests.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /clusters/{clusterName}/identity-provider-configs/associate:
    post:
      operationId: AssociateIdentityProviderConfig
      description: |-
        Associates an identity provider configuration to a cluster.

        If you want to authenticate identities using an identity provider, you can create an identity provider configuration and associate it to your cluster. After configuring authentication to your cluster you can create Kubernetes `Role` and `ClusterRole` objects, assign permissions to them, and then bind them to the identities using Kubernetes `RoleBinding` and `ClusterRoleBinding` objects. For more information see [Using RBAC Authorization](https://kubernetes.io/docs/reference/access-authn-authz/rbac/) in the Kubernetes documentation.
      parameters:
      - name: clusterName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                oidc:
                  $ref: '#/components/schemas/OidcIdentityProviderConfigRequest'
                tags:
                  $ref: '#/components/schemas/TagMap'
                clientRequestToken:
                  $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '400':
          description: |-
            The request is invalid given the state of the cluster. Check the state of the cluster and the associated operations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '409':
          description: |-
            The specified resource is in use.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
        '404':
          description: |-
            The specified resource could not be found. You can view your available clusters with `ListClusters`. You can view your available managed node groups with `ListNodegroups`. Amazon EKS clusters and node groups are Amazon Web Services Region specific.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '500':
          description: |-
            These errors are usually caused by a server-side issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerException'
        '429':
          description: |-
            The request or operation couldn't be performed because a service is throttling requests.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /clusters/{clusterName}/access-entries:
    post:
      operationId: CreateAccessEntry
      description: |-
        Creates an access entry.

        An access entry allows an IAM principal to access your cluster. Access entries can replace the need to maintain entries in the `aws-auth` `ConfigMap` for authentication. You have the following options for authorizing an IAM principal to access Kubernetes objects on your cluster: Kubernetes role-based access control (RBAC), Amazon EKS, or both. Kubernetes RBAC authorization requires you to create and manage Kubernetes `Role`, `ClusterRole`, `RoleBinding`, and `ClusterRoleBinding` objects, in addition to managing access entries. If you use Amazon EKS authorization exclusively, you don't need to create and manage Kubernetes `Role`, `ClusterRole`, `RoleBinding`, and `ClusterRoleBinding` objects.

        For more information about access entries, see [Access entries](https://docs.aws.amazon.com/eks/latest/userguide/access-entries.html) in the _Amazon EKS User Guide_.
      parameters:
      - name: clusterName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                principalArn:
                  $ref: '#/components/schemas/String'
                kubernetesGroups:
                  $ref: '#/components/schemas/StringList'
                tags:
                  $ref: '#/components/schemas/TagMap'
                clientRequestToken:
                  $ref: '#/components/schemas/String'
                username:
                  $ref: '#/components/schemas/String'
                type:
                  $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '400':
          description: |-
            You have encountered a service limit on the specified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '409':
          description: |-
            The specified resource is in use.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
        '404':
          description: |-
            The specified resource could not be found. You can view your available clusters with `ListClusters`. You can view your available managed node groups with `ListNodegroups`. Amazon EKS clusters and node groups are Amazon Web Services Region specific.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '500':
          description: |-
            These errors are usually caused by a server-side issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerException'
    get:
      operationId: ListAccessEntries
      description: |-
        Lists the access entries for your cluster.
      parameters:
      - name: clusterName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: associatedPolicyArn
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ListAccessEntriesRequestMaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '400':
          description: |-
            The request is invalid given the state of the cluster. Check the state of the cluster and the associated operations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource could not be found. You can view your available clusters with `ListClusters`. You can view your available managed node groups with `ListNodegroups`. Amazon EKS clusters and node groups are Amazon Web Services Region specific.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '500':
          description: |-
            These errors are usually caused by a server-side issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerException'
  /clusters/{clusterName}/addons:
    post:
      operationId: CreateAddon
      description: |-
        Creates an Amazon EKS add-on.

        Amazon EKS add-ons help to automate the provisioning and lifecycle management of common operational software for Amazon EKS clusters. For more information, see [Amazon EKS add-ons](https://docs.aws.amazon.com/eks/latest/userguide/eks-add-ons.html) in the _Amazon EKS User Guide_.
      parameters:
      - name: clusterName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ClusterName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                addonName:
                  $ref: '#/components/schemas/String'
                addonVersion:
                  $ref: '#/components/schemas/String'
                serviceAccountRoleArn:
                  $ref: '#/components/schemas/RoleArn'
                resolveConflicts:
                  $ref: '#/components/schemas/ResolveConflicts'
                clientRequestToken:
                  $ref: '#/components/schemas/String'
                tags:
                  $ref: '#/components/schemas/TagMap'
                configurationValues:
                  $ref: '#/components/schemas/String'
                podIdentityAssociations:
                  $ref: '#/components/schemas/AddonPodIdentityAssociationsList'
      responses:
        '200': {}
        '400':
          description: |-
            The request is invalid given the state of the cluster. Check the state of the cluster and the associated operations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '409':
          description: |-
            The specified resource is in use.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
        '404':
          description: |-
            The specified resource could not be found. You can view your available clusters with `ListClusters`. You can view your available managed node groups with `ListNodegroups`. Amazon EKS clusters and node groups are Amazon Web Services Region specific.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '500':
          description: |-
            These errors are usually caused by a server-side issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerException'
    get:
      operationId: ListAddons
      description: |-
        Lists the installed add-ons.
      parameters:
      - name: clusterName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ClusterName'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ListAddonsRequestMaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '400':
          description: |-
            The request is invalid given the state of the cluster. Check the state of the cluster and the associated operations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource could not be found. You can view your available clusters with `ListClusters`. You can view your available managed node groups with `ListNodegroups`. Amazon EKS clusters and node groups are Amazon Web Services Region specific.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '500':
          description: |-
            These errors are usually caused by a server-side issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerException'
  /clusters:
    post:
      operationId: CreateCluster
      description: |-
        Creates an Amazon EKS control plane.

        The Amazon EKS control plane consists of control plane instances that run the Kubernetes software, such as `etcd` and the API server. The control plane runs in an account managed by Amazon Web Services, and the Kubernetes API is exposed by the Amazon EKS API server endpoint. Each Amazon EKS cluster control plane is single tenant and unique. It runs on its own set of Amazon EC2 instances.

        The cluster control plane is provisioned across multiple Availability Zones and fronted by an Elastic Load Balancing Network Load Balancer. Amazon EKS also provisions elastic network interfaces in your VPC subnets to provide connectivity from the control plane instances to the nodes (for example, to support `kubectl exec`, `logs`, and `proxy` data flows).

        Amazon EKS nodes run in your Amazon Web Services account and connect to your cluster's control plane over the Kubernetes API server endpoint and a certificate file that is created for your cluster.

        You can use the `endpointPublicAccess` and `endpointPrivateAccess` parameters to enable or disable public and private access to your cluster's Kubernetes API server endpoint. By default, public access is enabled, and private access is disabled. For more information, see [Amazon EKS Cluster Endpoint Access Control](https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html) in the __Amazon EKS User Guide_ _.

        You can use the `logging` parameter to enable or disable exporting the Kubernetes control plane logs for your cluster to CloudWatch Logs. By default, cluster control plane logs aren't exported to CloudWatch Logs. For more information, see [Amazon EKS Cluster Control Plane Logs](https://docs.aws.amazon.com/eks/latest/userguide/control-plane-logs.html) in the __Amazon EKS User Guide_ _.

        CloudWatch Logs ingestion, archive storage, and data scanning rates apply to exported control plane logs. For more information, see [CloudWatch Pricing](http://aws.amazon.com/cloudwatch/pricing/).

        In most cases, it takes several minutes to create a cluster. After you create an Amazon EKS cluster, you must configure your Kubernetes tooling to communicate with the API server and launch nodes into your cluster. For more information, see [Allowing users to access your cluster](https://docs.aws.amazon.com/eks/latest/userguide/cluster-auth.html) and [Launching Amazon EKS nodes](https://docs.aws.amazon.com/eks/latest/userguide/launch-workers.html) in the _Amazon EKS User Guide_.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  $ref: '#/components/schemas/ClusterName'
                version:
                  $ref: '#/components/schemas/String'
                roleArn:
                  $ref: '#/components/schemas/String'
                resourcesVpcConfig:
                  $ref: '#/components/schemas/VpcConfigRequest'
                kubernetesNetworkConfig:
                  $ref: '#/components/schemas/KubernetesNetworkConfigRequest'
                logging:
                  $ref: '#/components/schemas/Logging'
                clientRequestToken:
                  $ref: '#/components/schemas/String'
                tags:
                  $ref: '#/components/schemas/TagMap'
                encryptionConfig:
                  $ref: '#/components/schemas/EncryptionConfigList'
                outpostConfig:
                  $ref: '#/components/schemas/OutpostConfigRequest'
                accessConfig:
                  $ref: '#/components/schemas/CreateAccessConfigRequest'
                bootstrapSelfManagedAddons:
                  $ref: '#/components/schemas/BoxedBoolean'
                upgradePolicy:
                  $ref: '#/components/schemas/UpgradePolicyRequest'
                zonalShiftConfig:
                  $ref: '#/components/schemas/ZonalShiftConfigRequest'
                remoteNetworkConfig:
                  $ref: '#/components/schemas/RemoteNetworkConfigRequest'
                computeConfig:
                  $ref: '#/components/schemas/ComputeConfigRequest'
                storageConfig:
                  $ref: '#/components/schemas/StorageConfigRequest'
      responses:
        '200': {}
        '400':
          description: |-
            At least one of your specified cluster subnets is in an Availability Zone that does not support Amazon EKS. The exception output specifies the supported Availability Zones for your account, from which you can choose subnets for your cluster.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedAvailabilityZoneException'
        '409':
          description: |-
            The specified resource is in use.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
        '500':
          description: |-
            These errors are usually caused by a server-side issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerException'
        '503':
          description: |-
            The service is unavailable. Back off and retry the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
    get:
      operationId: ListClusters
      description: |-
        Lists the Amazon EKS clusters in your Amazon Web Services account in the specified Amazon Web Services Region.
      parameters:
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ListClustersRequestMaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      - name: include
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/IncludeClustersList'
      responses:
        '200': {}
        '400':
          description: |-
            The specified parameter is invalid. Review the available parameters for the API request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '500':
          description: |-
            These errors are usually caused by a server-side issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerException'
        '503':
          description: |-
            The service is unavailable. Back off and retry the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /eks-anywhere-subscriptions:
    post:
      operationId: CreateEksAnywhereSubscription
      description: |-
        Creates an EKS Anywhere subscription. When a subscription is created, it is a contract agreement for the length of the term specified in the request. Licenses that are used to validate support are provisioned in Amazon Web Services License Manager and the caller account is granted access to EKS Anywhere Curated Packages.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  $ref: '#/components/schemas/EksAnywhereSubscriptionName'
                term:
                  $ref: '#/components/schemas/EksAnywhereSubscriptionTerm'
                licenseQuantity:
                  $ref: '#/components/schemas/Integer'
                licenseType:
                  $ref: '#/components/schemas/EksAnywhereSubscriptionLicenseType'
                autoRenew:
                  $ref: '#/components/schemas/Boolean'
                clientRequestToken:
                  $ref: '#/components/schemas/String'
                tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '200': {}
        '400':
          description: |-
            You have encountered a service limit on the specified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '500':
          description: |-
            These errors are usually caused by a server-side issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerException'
        '503':
          description: |-
            The service is unavailable. Back off and retry the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
    get:
      operationId: ListEksAnywhereSubscriptions
      description: |-
        Displays the full description of the subscription.
      parameters:
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ListEksAnywhereSubscriptionsRequestMaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      - name: includeStatus
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/EksAnywhereSubscriptionStatusValues'
      responses:
        '200': {}
        '400':
          description: |-
            The specified parameter is invalid. Review the available parameters for the API request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '500':
          description: |-
            These errors are usually caused by a server-side issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerException'
        '503':
          description: |-
            The service is unavailable. Back off and retry the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /clusters/{clusterName}/fargate-profiles:
    post:
      operationId: CreateFargateProfile
      description: |-
        Creates an Fargate profile for your Amazon EKS cluster. You must have at least one Fargate profile in a cluster to be able to run pods on Fargate.

        The Fargate profile allows an administrator to declare which pods run on Fargate and specify which pods run on which Fargate profile. This declaration is done through the profile's selectors. Each profile can have up to five selectors that contain a namespace and labels. A namespace is required for every selector. The label field consists of multiple optional key-value pairs. Pods that match the selectors are scheduled on Fargate. If a to-be-scheduled pod matches any of the selectors in the Fargate profile, then that pod is run on Fargate.

        When you create a Fargate profile, you must specify a pod execution role to use with the pods that are scheduled with the profile. This role is added to the cluster's Kubernetes [Role Based Access Control](https://kubernetes.io/docs/reference/access-authn-authz/rbac/) (RBAC) for authorization so that the `kubelet` that is running on the Fargate infrastructure can register with your Amazon EKS cluster so that it can appear in your cluster as a node. The pod execution role also provides IAM permissions to the Fargate infrastructure to allow read access to Amazon ECR image repositories. For more information, see [Pod Execution Role](https://docs.aws.amazon.com/eks/latest/userguide/pod-execution-role.html) in the _Amazon EKS User Guide_.

        Fargate profiles are immutable. However, you can create a new updated profile to replace an existing profile and then delete the original after the updated profile has finished creating.

        If any Fargate profiles in a cluster are in the `DELETING` status, you must wait for that Fargate profile to finish deleting before you can create any other profiles in that cluster.

        For more information, see [Fargate profile](https://docs.aws.amazon.com/eks/latest/userguide/fargate-profile.html) in the _Amazon EKS User Guide_.
      parameters:
      - name: clusterName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fargateProfileName:
                  $ref: '#/components/schemas/String'
                podExecutionRoleArn:
                  $ref: '#/components/schemas/String'
                subnets:
                  $ref: '#/components/schemas/StringList'
                selectors:
                  $ref: '#/components/schemas/FargateProfileSelectors'
                clientRequestToken:
                  $ref: '#/components/schemas/String'
                tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '200': {}
        '400':
          description: |-
            At least one of your specified cluster subnets is in an Availability Zone that does not support Amazon EKS. The exception output specifies the supported Availability Zones for your account, from which you can choose subnets for your cluster.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedAvailabilityZoneException'
        '500':
          description: |-
            These errors are usually caused by a server-side issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerException'
    get:
      operationId: ListFargateProfiles
      description: |-
        Lists the Fargate profiles associated with the specified cluster in your Amazon Web Services account in the specified Amazon Web Services Region.
      parameters:
      - name: clusterName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/FargateProfilesRequestMaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '400':
          description: |-
            The specified parameter is invalid. Review the available parameters for the API request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '404':
          description: |-
            The specified resource could not be found. You can view your available clusters with `ListClusters`. You can view your available managed node groups with `ListNodegroups`. Amazon EKS clusters and node groups are Amazon Web Services Region specific.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '500':
          description: |-
            These errors are usually caused by a server-side issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerException'
  /clusters/{clusterName}/node-groups:
    post:
      operationId: CreateNodegroup
      description: |-
        Creates a managed node group for an Amazon EKS cluster.

        You can only create a node group for your cluster that is equal to the current Kubernetes version for the cluster. All node groups are created with the latest AMI release version for the respective minor Kubernetes version of the cluster, unless you deploy a custom AMI using a launch template.

        For later updates, you will only be able to update a node group using a launch template only if it was originally deployed with a launch template. Additionally, the launch template ID or name must match what was used when the node group was created. You can update the launch template version with necessary changes. For more information about using launch templates, see [Customizing managed nodes with launch templates](https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html).

        An Amazon EKS managed node group is an Amazon EC2 Auto Scaling group and associated Amazon EC2 instances that are managed by Amazon Web Services for an Amazon EKS cluster. For more information, see [Managed node groups](https://docs.aws.amazon.com/eks/latest/userguide/managed-node-groups.html) in the _Amazon EKS User Guide_.

        Windows AMI types are only supported for commercial Amazon Web Services Regions that support Windows on Amazon EKS.
      parameters:
      - name: clusterName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nodegroupName:
                  $ref: '#/components/schemas/String'
                scalingConfig:
                  $ref: '#/components/schemas/NodegroupScalingConfig'
                diskSize:
                  $ref: '#/components/schemas/BoxedInteger'
                subnets:
                  $ref: '#/components/schemas/StringList'
                instanceTypes:
                  $ref: '#/components/schemas/StringList'
                amiType:
                  $ref: '#/components/schemas/AMITypes'
                remoteAccess:
                  $ref: '#/components/schemas/RemoteAccessConfig'
                nodeRole:
                  $ref: '#/components/schemas/String'
                labels:
                  $ref: '#/components/schemas/labelsMap'
                taints:
                  $ref: '#/components/schemas/taintsList'
                tags:
                  $ref: '#/components/schemas/TagMap'
                clientRequestToken:
                  $ref: '#/components/schemas/String'
                launchTemplate:
                  $ref: '#/components/schemas/LaunchTemplateSpecification'
                updateConfig:
                  $ref: '#/components/schemas/NodegroupUpdateConfig'
                nodeRepairConfig:
                  $ref: '#/components/schemas/NodeRepairConfig'
                capacityType:
                  $ref: '#/components/schemas/CapacityTypes'
                version:
                  $ref: '#/components/schemas/String'
                releaseVersion:
                  $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '400':
          description: |-
            You have encountered a service limit on the specified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '409':
          description: |-
            The specified resource is in use.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
        '500':
          description: |-
            These errors are usually caused by a server-side issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerException'
        '503':
          description: |-
            The service is unavailable. Back off and retry the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
    get:
      operationId: ListNodegroups
      description: |-
        Lists the managed node groups associated with the specified cluster in your Amazon Web Services account in the specified Amazon Web Services Region. Self-managed node groups aren't listed.
      parameters:
      - name: clusterName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ListNodegroupsRequestMaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '400':
          description: |-
            The specified parameter is invalid. Review the available parameters for the API request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '404':
          description: |-
            The specified resource could not be found. You can view your available clusters with `ListClusters`. You can view your available managed node groups with `ListNodegroups`. Amazon EKS clusters and node groups are Amazon Web Services Region specific.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '500':
          description: |-
            These errors are usually caused by a server-side issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerException'
        '503':
          description: |-
            The service is unavailable. Back off and retry the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /clusters/{clusterName}/pod-identity-associations:
    post:
      operationId: CreatePodIdentityAssociation
      description: |-
        Creates an EKS Pod Identity association between a service account in an Amazon EKS cluster and an IAM role with _EKS Pod Identity_. Use EKS Pod Identity to give temporary IAM credentials to pods and the credentials are rotated automatically.

        Amazon EKS Pod Identity associations provide the ability to manage credentials for your applications, similar to the way that Amazon EC2 instance profiles provide credentials to Amazon EC2 instances.

        If a pod uses a service account that has an association, Amazon EKS sets environment variables in the containers of the pod. The environment variables configure the Amazon Web Services SDKs, including the Command Line Interface, to use the EKS Pod Identity credentials.

        Pod Identity is a simpler method than _IAM roles for service accounts_ , as this method doesn't use OIDC identity providers. Additionally, you can configure a role for Pod Identity once, and reuse it across clusters.
      parameters:
      - name: clusterName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                namespace:
                  $ref: '#/components/schemas/String'
                serviceAccount:
                  $ref: '#/components/schemas/String'
                roleArn:
                  $ref: '#/components/schemas/String'
                clientRequestToken:
                  $ref: '#/components/schemas/String'
                tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '200': {}
        '400':
          description: |-
            You have encountered a service limit on the specified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '409':
          description: |-
            The specified resource is in use.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
        '404':
          description: |-
            The specified resource could not be found. You can view your available clusters with `ListClusters`. You can view your available managed node groups with `ListNodegroups`. Amazon EKS clusters and node groups are Amazon Web Services Region specific.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '500':
          description: |-
            These errors are usually caused by a server-side issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerException'
    get:
      operationId: ListPodIdentityAssociations
      description: |-
        List the EKS Pod Identity associations in a cluster. You can filter the list by the namespace that the association is in or the service account that the association uses.
      parameters:
      - name: clusterName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: namespace
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      - name: serviceAccount
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ListPodIdentityAssociationsMaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '400':
          description: |-
            The request is invalid given the state of the cluster. Check the state of the cluster and the associated operations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource could not be found. You can view your available clusters with `ListClusters`. You can view your available managed node groups with `ListNodegroups`. Amazon EKS clusters and node groups are Amazon Web Services Region specific.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '500':
          description: |-
            These errors are usually caused by a server-side issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerException'
  /clusters/{clusterName}/access-entries/{principalArn}:
    delete:
      operationId: DeleteAccessEntry
      description: |-
        Deletes an access entry.

        Deleting an access entry of a type other than `Standard` can cause your cluster to function improperly. If you delete an access entry in error, you can recreate it.
      parameters:
      - name: clusterName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: principalArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '400':
          description: |-
            The request is invalid given the state of the cluster. Check the state of the cluster and the associated operations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource could not be found. You can view your available clusters with `ListClusters`. You can view your available managed node groups with `ListNodegroups`. Amazon EKS clusters and node groups are Amazon Web Services Region specific.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '500':
          description: |-
            These errors are usually caused by a server-side issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerException'
    get:
      operationId: DescribeAccessEntry
      description: |-
        Describes an access entry.
      parameters:
      - name: clusterName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: principalArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '400':
          description: |-
            The request is invalid given the state of the cluster. Check the state of the cluster and the associated operations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource could not be found. You can view your available clusters with `ListClusters`. You can view your available managed node groups with `ListNodegroups`. Amazon EKS clusters and node groups are Amazon Web Services Region specific.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '500':
          description: |-
            These errors are usually caused by a server-side issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerException'
    post:
      operationId: UpdateAccessEntry
      description: |-
        Updates an access entry.
      parameters:
      - name: clusterName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: principalArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                kubernetesGroups:
                  $ref: '#/components/schemas/StringList'
                clientRequestToken:
                  $ref: '#/components/schemas/String'
                username:
                  $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '400':
          description: |-
            The request is invalid given the state of the cluster. Check the state of the cluster and the associated operations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource could not be found. You can view your available clusters with `ListClusters`. You can view your available managed node groups with `ListNodegroups`. Amazon EKS clusters and node groups are Amazon Web Services Region specific.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '500':
          description: |-
            These errors are usually caused by a server-side issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerException'
  /clusters/{clusterName}/addons/{addonName}:
    delete:
      operationId: DeleteAddon
      description: |-
        Deletes an Amazon EKS add-on.

        When you remove an add-on, it's deleted from the cluster. You can always manually start an add-on on the cluster using the Kubernetes API.
      parameters:
      - name: clusterName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ClusterName'
      - name: addonName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: preserve
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Boolean'
      responses:
        '200': {}
        '400':
          description: |-
            The request is invalid given the state of the cluster. Check the state of the cluster and the associated operations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource could not be found. You can view your available clusters with `ListClusters`. You can view your available managed node groups with `ListNodegroups`. Amazon EKS clusters and node groups are Amazon Web Services Region specific.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '500':
          description: |-
            These errors are usually caused by a server-side issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerException'
    get:
      operationId: DescribeAddon
      description: |-
        Describes an Amazon EKS add-on.
      parameters:
      - name: clusterName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ClusterName'
      - name: addonName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '400':
          description: |-
            The request is invalid given the state of the cluster. Check the state of the cluster and the associated operations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource could not be found. You can view your available clusters with `ListClusters`. You can view your available managed node groups with `ListNodegroups`. Amazon EKS clusters and node groups are Amazon Web Services Region specific.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '500':
          description: |-
            These errors are usually caused by a server-side issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerException'
  /clusters/{name}:
    delete:
      operationId: DeleteCluster
      description: |-
        Deletes an Amazon EKS cluster control plane.

        If you have active services in your cluster that are associated with a load balancer, you must delete those services before deleting the cluster so that the load balancers are deleted properly. Otherwise, you can have orphaned resources in your VPC that prevent you from being able to delete the VPC. For more information, see [Deleting a cluster](https://docs.aws.amazon.com/eks/latest/userguide/delete-cluster.html) in the _Amazon EKS User Guide_.

        If you have managed node groups or Fargate profiles attached to the cluster, you must delete them first. For more information, see `DeleteNodgroup` and `DeleteFargateProfile`.
      parameters:
      - name: name
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '400':
          description: |-
            These errors are usually caused by a client action. Actions can include using an action or resource on behalf of an [IAM principal](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_terms-and-concepts.html) that doesn't have permissions to use the action or resource or specifying an identifier that is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientException'
        '409':
          description: |-
            The specified resource is in use.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
        '404':
          description: |-
            The specified resource could not be found. You can view your available clusters with `ListClusters`. You can view your available managed node groups with `ListNodegroups`. Amazon EKS clusters and node groups are Amazon Web Services Region specific.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '500':
          description: |-
            These errors are usually caused by a server-side issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerException'
        '503':
          description: |-
            The service is unavailable. Back off and retry the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
    get:
      operationId: DescribeCluster
      description: |-
        Describes an Amazon EKS cluster.

        The API server endpoint and certificate authority data returned by this operation are required for `kubelet` and `kubectl` to communicate with your Kubernetes API server. For more information, see [Creating or updating a `kubeconfig` file for an Amazon EKS cluster](https://docs.aws.amazon.com/eks/latest/userguide/create-kubeconfig.html).

        The API server endpoint and certificate authority data aren't available until the cluster reaches the `ACTIVE` state.
      parameters:
      - name: name
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '400':
          description: |-
            These errors are usually caused by a client action. Actions can include using an action or resource on behalf of an [IAM principal](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_terms-and-concepts.html) that doesn't have permissions to use the action or resource or specifying an identifier that is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientException'
        '404':
          description: |-
            The specified resource could not be found. You can view your available clusters with `ListClusters`. You can view your available managed node groups with `ListNodegroups`. Amazon EKS clusters and node groups are Amazon Web Services Region specific.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '500':
          description: |-
            These errors are usually caused by a server-side issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerException'
        '503':
          description: |-
            The service is unavailable. Back off and retry the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /eks-anywhere-subscriptions/{id}:
    delete:
      operationId: DeleteEksAnywhereSubscription
      description: |-
        Deletes an expired or inactive subscription. Deleting inactive subscriptions removes them from the Amazon Web Services Management Console view and from list/describe API responses. Subscriptions can only be cancelled within 7 days of creation and are cancelled by creating a ticket in the Amazon Web Services Support Center.
      parameters:
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '400':
          description: |-
            The request is invalid given the state of the cluster. Check the state of the cluster and the associated operations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource could not be found. You can view your available clusters with `ListClusters`. You can view your available managed node groups with `ListNodegroups`. Amazon EKS clusters and node groups are Amazon Web Services Region specific.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '500':
          description: |-
            These errors are usually caused by a server-side issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerException'
    get:
      operationId: DescribeEksAnywhereSubscription
      description: |-
        Returns descriptive information about a subscription.
      parameters:
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '400':
          description: |-
            These errors are usually caused by a client action. Actions can include using an action or resource on behalf of an [IAM principal](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_terms-and-concepts.html) that doesn't have permissions to use the action or resource or specifying an identifier that is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientException'
        '404':
          description: |-
            The specified resource could not be found. You can view your available clusters with `ListClusters`. You can view your available managed node groups with `ListNodegroups`. Amazon EKS clusters and node groups are Amazon Web Services Region specific.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '500':
          description: |-
            These errors are usually caused by a server-side issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerException'
        '503':
          description: |-
            The service is unavailable. Back off and retry the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
    post:
      operationId: UpdateEksAnywhereSubscription
      description: |-
        Update an EKS Anywhere Subscription. Only auto renewal and tags can be updated after subscription creation.
      parameters:
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                autoRenew:
                  $ref: '#/components/schemas/Boolean'
                clientRequestToken:
                  $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '400':
          description: |-
            The request is invalid given the state of the cluster. Check the state of the cluster and the associated operations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource could not be found. You can view your available clusters with `ListClusters`. You can view your available managed node groups with `ListNodegroups`. Amazon EKS clusters and node groups are Amazon Web Services Region specific.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '500':
          description: |-
            These errors are usually caused by a server-side issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerException'
  /clusters/{clusterName}/fargate-profiles/{fargateProfileName}:
    delete:
      operationId: DeleteFargateProfile
      description: |-
        Deletes an Fargate profile.

        When you delete a Fargate profile, any `Pod` running on Fargate that was created with the profile is deleted. If the `Pod` matches another Fargate profile, then it is scheduled on Fargate with that profile. If it no longer matches any Fargate profiles, then it's not scheduled on Fargate and may remain in a pending state.

        Only one Fargate profile in a cluster can be in the `DELETING` status at a time. You must wait for a Fargate profile to finish deleting before you can delete any other profiles in that cluster.
      parameters:
      - name: clusterName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: fargateProfileName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '400':
          description: |-
            The specified parameter is invalid. Review the available parameters for the API request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '404':
          description: |-
            The specified resource could not be found. You can view your available clusters with `ListClusters`. You can view your available managed node groups with `ListNodegroups`. Amazon EKS clusters and node groups are Amazon Web Services Region specific.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '500':
          description: |-
            These errors are usually caused by a server-side issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerException'
    get:
      operationId: DescribeFargateProfile
      description: |-
        Describes an Fargate profile.
      parameters:
      - name: clusterName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: fargateProfileName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '400':
          description: |-
            The specified parameter is invalid. Review the available parameters for the API request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '404':
          description: |-
            The specified resource could not be found. You can view your available clusters with `ListClusters`. You can view your available managed node groups with `ListNodegroups`. Amazon EKS clusters and node groups are Amazon Web Services Region specific.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '500':
          description: |-
            These errors are usually caused by a server-side issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerException'
  /clusters/{clusterName}/node-groups/{nodegroupName}:
    delete:
      operationId: DeleteNodegroup
      description: |-
        Deletes a managed node group.
      parameters:
      - name: clusterName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: nodegroupName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '400':
          description: |-
            The specified parameter is invalid. Review the available parameters for the API request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '409':
          description: |-
            The specified resource is in use.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
        '404':
          description: |-
            The specified resource could not be found. You can view your available clusters with `ListClusters`. You can view your available managed node groups with `ListNodegroups`. Amazon EKS clusters and node groups are Amazon Web Services Region specific.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '500':
          description: |-
            These errors are usually caused by a server-side issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerException'
        '503':
          description: |-
            The service is unavailable. Back off and retry the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
    get:
      operationId: DescribeNodegroup
      description: |-
        Describes a managed node group.
      parameters:
      - name: clusterName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: nodegroupName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '400':
          description: |-
            The specified parameter is invalid. Review the available parameters for the API request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '404':
          description: |-
            The specified resource could not be found. You can view your available clusters with `ListClusters`. You can view your available managed node groups with `ListNodegroups`. Amazon EKS clusters and node groups are Amazon Web Services Region specific.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '500':
          description: |-
            These errors are usually caused by a server-side issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerException'
        '503':
          description: |-
            The service is unavailable. Back off and retry the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /clusters/{clusterName}/pod-identity-associations/{associationId}:
    delete:
      operationId: DeletePodIdentityAssociation
      description: |-
        Deletes a EKS Pod Identity association.

        The temporary Amazon Web Services credentials from the previous IAM role session might still be valid until the session expiry. If you need to immediately revoke the temporary session credentials, then go to the role in the IAM console.
      parameters:
      - name: clusterName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: associationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '400':
          description: |-
            The request is invalid given the state of the cluster. Check the state of the cluster and the associated operations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource could not be found. You can view your available clusters with `ListClusters`. You can view your available managed node groups with `ListNodegroups`. Amazon EKS clusters and node groups are Amazon Web Services Region specific.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '500':
          description: |-
            These errors are usually caused by a server-side issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerException'
    get:
      operationId: DescribePodIdentityAssociation
      description: |-
        Returns descriptive information about an EKS Pod Identity association.

        This action requires the ID of the association. You can get the ID from the response to the `CreatePodIdentityAssocation` for newly created associations. Or, you can list the IDs for associations with `ListPodIdentityAssociations` and filter the list by namespace or service account.
      parameters:
      - name: clusterName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: associationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '400':
          description: |-
            The request is invalid given the state of the cluster. Check the state of the cluster and the associated operations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource could not be found. You can view your available clusters with `ListClusters`. You can view your available managed node groups with `ListNodegroups`. Amazon EKS clusters and node groups are Amazon Web Services Region specific.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '500':
          description: |-
            These errors are usually caused by a server-side issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerException'
    post:
      operationId: UpdatePodIdentityAssociation
      description: |-
        Updates a EKS Pod Identity association. Only the IAM role can be changed; an association can't be moved between clusters, namespaces, or service accounts. If you need to edit the namespace or service account, you need to delete the association and then create a new association with your desired settings.
      parameters:
      - name: clusterName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: associationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                roleArn:
                  $ref: '#/components/schemas/String'
                clientRequestToken:
                  $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '400':
          description: |-
            The request is invalid given the state of the cluster. Check the state of the cluster and the associated operations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource could not be found. You can view your available clusters with `ListClusters`. You can view your available managed node groups with `ListNodegroups`. Amazon EKS clusters and node groups are Amazon Web Services Region specific.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '500':
          description: |-
            These errors are usually caused by a server-side issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerException'
  /cluster-registrations/{name}:
    delete:
      operationId: DeregisterCluster
      description: |-
        Deregisters a connected cluster to remove it from the Amazon EKS control plane.

        A connected cluster is a Kubernetes cluster that you've connected to your control plane using the [Amazon EKS Connector](https://docs.aws.amazon.com/eks/latest/userguide/eks-connector.html).
      parameters:
      - name: name
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The [IAM principal](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_terms-and-concepts.html) making the request must have at least one IAM permissions policy attached that grants the required permissions. For more information, see [Access management](https://docs.aws.amazon.com/IAM/latest/UserGuide/access.html) in the _IAM User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            These errors are usually caused by a client action. Actions can include using an action or resource on behalf of an [IAM principal](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_terms-and-concepts.html) that doesn't have permissions to use the action or resource or specifying an identifier that is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientException'
        '409':
          description: |-
            The specified resource is in use.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
        '404':
          description: |-
            The specified resource could not be found. You can view your available clusters with `ListClusters`. You can view your available managed node groups with `ListNodegroups`. Amazon EKS clusters and node groups are Amazon Web Services Region specific.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '500':
          description: |-
            These errors are usually caused by a server-side issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerException'
        '503':
          description: |-
            The service is unavailable. Back off and retry the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /addons/configuration-schemas:
    get:
      operationId: DescribeAddonConfiguration
      description: |-
        Returns configuration options.
      parameters:
      - name: addonName
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: addonVersion
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '400':
          description: |-
            The specified parameter is invalid. Review the available parameters for the API request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '404':
          description: |-
            The specified resource could not be found. You can view your available clusters with `ListClusters`. You can view your available managed node groups with `ListNodegroups`. Amazon EKS clusters and node groups are Amazon Web Services Region specific.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '500':
          description: |-
            These errors are usually caused by a server-side issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerException'
  /addons/supported-versions:
    get:
      operationId: DescribeAddonVersions
      description: |-
        Describes the versions for an add-on.

        Information such as the Kubernetes versions that you can use the add-on with, the `owner`, `publisher`, and the `type` of the add-on are returned.
      parameters:
      - name: kubernetesVersion
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/DescribeAddonVersionsRequestMaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      - name: addonName
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      - name: types
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/StringList'
      - name: publishers
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/StringList'
      - name: owners
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/StringList'
      responses:
        '200': {}
        '400':
          description: |-
            The specified parameter is invalid. Review the available parameters for the API request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '404':
          description: |-
            The specified resource could not be found. You can view your available clusters with `ListClusters`. You can view your available managed node groups with `ListNodegroups`. Amazon EKS clusters and node groups are Amazon Web Services Region specific.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '500':
          description: |-
            These errors are usually caused by a server-side issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerException'
  /cluster-versions:
    get:
      operationId: DescribeClusterVersions
      description: |-
        Lists available Kubernetes versions for Amazon EKS clusters.
      parameters:
      - name: clusterType
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/DescribeClusterVersionMaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      - name: defaultOnly
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/BoxedBoolean'
      - name: includeAll
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/BoxedBoolean'
      - name: clusterVersions
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/StringList'
      - name: status
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ClusterVersionStatus'
      - name: versionStatus
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/VersionStatus'
      responses:
        '200': {}
        '400':
          description: |-
            The request is invalid given the state of the cluster. Check the state of the cluster and the associated operations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '500':
          description: |-
            These errors are usually caused by a server-side issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerException'
  /clusters/{clusterName}/identity-provider-configs/describe:
    post:
      operationId: DescribeIdentityProviderConfig
      description: |-
        Describes an identity provider configuration.
      parameters:
      - name: clusterName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                identityProviderConfig:
                  $ref: '#/components/schemas/IdentityProviderConfig'
      responses:
        '200': {}
        '400':
          description: |-
            The specified parameter is invalid. Review the available parameters for the API request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '404':
          description: |-
            The specified resource could not be found. You can view your available clusters with `ListClusters`. You can view your available managed node groups with `ListNodegroups`. Amazon EKS clusters and node groups are Amazon Web Services Region specific.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '500':
          description: |-
            These errors are usually caused by a server-side issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerException'
        '503':
          description: |-
            The service is unavailable. Back off and retry the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /clusters/{clusterName}/insights/{id}:
    get:
      operationId: DescribeInsight
      description: |-
        Returns details about an insight that you specify using its ID.
      parameters:
      - name: clusterName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '400':
          description: |-
            The request is invalid given the state of the cluster. Check the state of the cluster and the associated operations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource could not be found. You can view your available clusters with `ListClusters`. You can view your available managed node groups with `ListNodegroups`. Amazon EKS clusters and node groups are Amazon Web Services Region specific.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '500':
          description: |-
            These errors are usually caused by a server-side issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerException'
  /clusters/{name}/updates/{updateId}:
    get:
      operationId: DescribeUpdate
      description: |-
        Describes an update to an Amazon EKS resource.

        When the status of the update is `Successful`, the update is complete. If an update fails, the status is `Failed`, and an error detail explains the reason for the failure.
      parameters:
      - name: name
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: updateId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: nodegroupName
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      - name: addonName
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '400':
          description: |-
            The specified parameter is invalid. Review the available parameters for the API request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '404':
          description: |-
            The specified resource could not be found. You can view your available clusters with `ListClusters`. You can view your available managed node groups with `ListNodegroups`. Amazon EKS clusters and node groups are Amazon Web Services Region specific.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '500':
          description: |-
            These errors are usually caused by a server-side issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerException'
  /clusters/{clusterName}/access-entries/{principalArn}/access-policies/{policyArn}:
    delete:
      operationId: DisassociateAccessPolicy
      description: |-
        Disassociates an access policy from an access entry.
      parameters:
      - name: clusterName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: principalArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: policyArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '400':
          description: |-
            The request is invalid given the state of the cluster. Check the state of the cluster and the associated operations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource could not be found. You can view your available clusters with `ListClusters`. You can view your available managed node groups with `ListNodegroups`. Amazon EKS clusters and node groups are Amazon Web Services Region specific.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '500':
          description: |-
            These errors are usually caused by a server-side issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerException'
  /clusters/{clusterName}/identity-provider-configs/disassociate:
    post:
      operationId: DisassociateIdentityProviderConfig
      description: |-
        Disassociates an identity provider configuration from a cluster.

        If you disassociate an identity provider from your cluster, users included in the provider can no longer access the cluster. However, you can still access the cluster with IAM principals.
      parameters:
      - name: clusterName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                identityProviderConfig:
                  $ref: '#/components/schemas/IdentityProviderConfig'
                clientRequestToken:
                  $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '400':
          description: |-
            The request is invalid given the state of the cluster. Check the state of the cluster and the associated operations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '409':
          description: |-
            The specified resource is in use.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
        '404':
          description: |-
            The specified resource could not be found. You can view your available clusters with `ListClusters`. You can view your available managed node groups with `ListNodegroups`. Amazon EKS clusters and node groups are Amazon Web Services Region specific.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '500':
          description: |-
            These errors are usually caused by a server-side issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerException'
        '429':
          description: |-
            The request or operation couldn't be performed because a service is throttling requests.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /access-policies:
    get:
      operationId: ListAccessPolicies
      description: |-
        Lists the available access policies.
      parameters:
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ListAccessPoliciesRequestMaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '500':
          description: |-
            These errors are usually caused by a server-side issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerException'
  /clusters/{clusterName}/identity-provider-configs:
    get:
      operationId: ListIdentityProviderConfigs
      description: |-
        Lists the identity provider configurations for your cluster.
      parameters:
      - name: clusterName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ListIdentityProviderConfigsRequestMaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '400':
          description: |-
            The specified parameter is invalid. Review the available parameters for the API request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '404':
          description: |-
            The specified resource could not be found. You can view your available clusters with `ListClusters`. You can view your available managed node groups with `ListNodegroups`. Amazon EKS clusters and node groups are Amazon Web Services Region specific.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '500':
          description: |-
            These errors are usually caused by a server-side issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerException'
        '503':
          description: |-
            The service is unavailable. Back off and retry the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /clusters/{clusterName}/insights:
    post:
      operationId: ListInsights
      description: |-
        Returns a list of all insights checked for against the specified cluster. You can filter which insights are returned by category, associated Kubernetes version, and status.
      parameters:
      - name: clusterName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                filter:
                  $ref: '#/components/schemas/InsightsFilter'
                maxResults:
                  $ref: '#/components/schemas/ListInsightsMaxResults'
                nextToken:
                  $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '400':
          description: |-
            The request is invalid given the state of the cluster. Check the state of the cluster and the associated operations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource could not be found. You can view your available clusters with `ListClusters`. You can view your available managed node groups with `ListNodegroups`. Amazon EKS clusters and node groups are Amazon Web Services Region specific.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '500':
          description: |-
            These errors are usually caused by a server-side issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerException'
  /tags/{resourceArn}:
    get:
      operationId: ListTagsForResource
      description: |-
        List the tags for an Amazon EKS resource.
      parameters:
      - name: resourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '400':
          description: |-
            This exception is thrown if the request contains a semantic error. The precise meaning will depend on the API, and will be documented in the error message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '404':
          description: |-
            A service resource associated with the request could not be found. Clients should not retry such requests.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
    post:
      operationId: TagResource
      description: |-
        Associates the specified tags to an Amazon EKS resource with the specified `resourceArn`. If existing tags on a resource are not specified in the request parameters, they aren't changed. When a resource is deleted, the tags associated with that resource are also deleted. Tags that you create for Amazon EKS resources don't propagate to any other resources associated with the cluster. For example, if you tag a cluster with this operation, that tag doesn't automatically propagate to the subnets and nodes associated with the cluster.
      parameters:
      - name: resourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '200': {}
        '400':
          description: |-
            This exception is thrown if the request contains a semantic error. The precise meaning will depend on the API, and will be documented in the error message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '404':
          description: |-
            A service resource associated with the request could not be found. Clients should not retry such requests.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
    delete:
      operationId: UntagResource
      description: |-
        Deletes specified tags from an Amazon EKS resource.
      parameters:
      - name: resourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: tagKeys
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/TagKeyList'
      responses:
        '200': {}
        '400':
          description: |-
            This exception is thrown if the request contains a semantic error. The precise meaning will depend on the API, and will be documented in the error message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '404':
          description: |-
            A service resource associated with the request could not be found. Clients should not retry such requests.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
  /clusters/{name}/updates:
    get:
      operationId: ListUpdates
      description: |-
        Lists the updates associated with an Amazon EKS resource in your Amazon Web Services account, in the specified Amazon Web Services Region.
      parameters:
      - name: name
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: nodegroupName
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      - name: addonName
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ListUpdatesRequestMaxResults'
      responses:
        '200': {}
        '400':
          description: |-
            The specified parameter is invalid. Review the available parameters for the API request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '404':
          description: |-
            The specified resource could not be found. You can view your available clusters with `ListClusters`. You can view your available managed node groups with `ListNodegroups`. Amazon EKS clusters and node groups are Amazon Web Services Region specific.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '500':
          description: |-
            These errors are usually caused by a server-side issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerException'
    post:
      operationId: UpdateClusterVersion
      description: |-
        Updates an Amazon EKS cluster to the specified Kubernetes version. Your cluster continues to function during the update. The response output includes an update ID that you can use to track the status of your cluster update with the [ `DescribeUpdate` ](https://docs.aws.amazon.com/eks/latest/APIReference/API_DescribeUpdate.html) API operation.

        Cluster updates are asynchronous, and they should finish within a few minutes. During an update, the cluster status moves to `UPDATING` (this status transition is eventually consistent). When the update is complete (either `Failed` or `Successful`), the cluster status moves to `Active`.

        If your cluster has managed node groups attached to it, all of your node groups' Kubernetes versions must match the cluster's Kubernetes version in order to update the cluster to a new Kubernetes version.
      parameters:
      - name: name
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                version:
                  $ref: '#/components/schemas/String'
                clientRequestToken:
                  $ref: '#/components/schemas/String'
                force:
                  $ref: '#/components/schemas/Boolean'
      responses:
        '200': {}
        '400':
          description: |-
            Amazon EKS detected upgrade readiness issues. Call the [ `ListInsights` ](https://docs.aws.amazon.com/eks/latest/APIReference/API_ListInsights.html) API to view detected upgrade blocking issues. Pass the [ `force` ](https://docs.aws.amazon.com/eks/latest/APIReference/API_UpdateClusterVersion.html#API_UpdateClusterVersion_RequestBody) flag when updating to override upgrade readiness errors.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidStateException'
        '409':
          description: |-
            The specified resource is in use.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
        '404':
          description: |-
            The specified resource could not be found. You can view your available clusters with `ListClusters`. You can view your available managed node groups with `ListNodegroups`. Amazon EKS clusters and node groups are Amazon Web Services Region specific.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '500':
          description: |-
            These errors are usually caused by a server-side issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerException'
        '429':
          description: |-
            The request or operation couldn't be performed because a service is throttling requests.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /cluster-registrations:
    post:
      operationId: RegisterCluster
      description: |-
        Connects a Kubernetes cluster to the Amazon EKS control plane.

        Any Kubernetes cluster can be connected to the Amazon EKS control plane to view current information about the cluster and its nodes.

        Cluster connection requires two steps. First, send a [ `RegisterClusterRequest` ](https://docs.aws.amazon.com/eks/latest/APIReference/API_RegisterClusterRequest.html) to add it to the Amazon EKS control plane.

        Second, a [Manifest](https://amazon-eks.s3.us-west-2.amazonaws.com/eks-connector/manifests/eks-connector/latest/eks-connector.yaml) containing the `activationID` and `activationCode` must be applied to the Kubernetes cluster through it's native provider to provide visibility.

        After the manifest is updated and applied, the connected cluster is visible to the Amazon EKS control plane. If the manifest isn't applied within three days, the connected cluster will no longer be visible and must be deregistered using `DeregisterCluster`.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  $ref: '#/components/schemas/ClusterName'
                connectorConfig:
                  $ref: '#/components/schemas/ConnectorConfigRequest'
                clientRequestToken:
                  $ref: '#/components/schemas/String'
                tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to perform the requested operation. The [IAM principal](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_terms-and-concepts.html) making the request must have at least one IAM permissions policy attached that grants the required permissions. For more information, see [Access management](https://docs.aws.amazon.com/IAM/latest/UserGuide/access.html) in the _IAM User Guide_.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            You have encountered a service limit on the specified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '409':
          description: |-
            The specified resource is in use.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
        '428':
          description: |-
            Required resources (such as service-linked roles) were created and are still propagating. Retry later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourcePropagationDelayException'
        '500':
          description: |-
            These errors are usually caused by a server-side issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerException'
        '503':
          description: |-
            The service is unavailable. Back off and retry the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /clusters/{clusterName}/addons/{addonName}/update:
    post:
      operationId: UpdateAddon
      description: |-
        Updates an Amazon EKS add-on.
      parameters:
      - name: clusterName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ClusterName'
      - name: addonName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                addonVersion:
                  $ref: '#/components/schemas/String'
                serviceAccountRoleArn:
                  $ref: '#/components/schemas/RoleArn'
                resolveConflicts:
                  $ref: '#/components/schemas/ResolveConflicts'
                clientRequestToken:
                  $ref: '#/components/schemas/String'
                configurationValues:
                  $ref: '#/components/schemas/String'
                podIdentityAssociations:
                  $ref: '#/components/schemas/AddonPodIdentityAssociationsList'
      responses:
        '200': {}
        '400':
          description: |-
            The request is invalid given the state of the cluster. Check the state of the cluster and the associated operations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '409':
          description: |-
            The specified resource is in use.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
        '404':
          description: |-
            The specified resource could not be found. You can view your available clusters with `ListClusters`. You can view your available managed node groups with `ListNodegroups`. Amazon EKS clusters and node groups are Amazon Web Services Region specific.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '500':
          description: |-
            These errors are usually caused by a server-side issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerException'
  /clusters/{name}/update-config:
    post:
      operationId: UpdateClusterConfig
      description: |-
        Updates an Amazon EKS cluster configuration. Your cluster continues to function during the update. The response output includes an update ID that you can use to track the status of your cluster update with `DescribeUpdate`.

        You can use this operation to do the following actions:

          * You can use this API operation to enable or disable exporting the Kubernetes control plane logs for your cluster to CloudWatch Logs. By default, cluster control plane logs aren't exported to CloudWatch Logs. For more information, see [Amazon EKS Cluster control plane logs](https://docs.aws.amazon.com/eks/latest/userguide/control-plane-logs.html) in the __Amazon EKS User Guide_ _.

        CloudWatch Logs ingestion, archive storage, and data scanning rates apply to exported control plane logs. For more information, see [CloudWatch Pricing](http://aws.amazon.com/cloudwatch/pricing/).

          * You can also use this API operation to enable or disable public and private access to your cluster's Kubernetes API server endpoint. By default, public access is enabled, and private access is disabled. For more information, see [Amazon EKS cluster endpoint access control](https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html) in the __Amazon EKS User Guide_ _.

          * You can also use this API operation to choose different subnets and security groups for the cluster. You must specify at least two subnets that are in different Availability Zones. You can't change which VPC the subnets are from, the subnets must be in the same VPC as the subnets that the cluster was created with. For more information about the VPC requirements, see <https://docs.aws.amazon.com/eks/latest/userguide/network_reqs.html> in the __Amazon EKS User Guide_ _.

          * You can also use this API operation to enable or disable ARC zonal shift. If zonal shift is enabled, Amazon Web Services configures zonal autoshift for the cluster.

          * You can also use this API operation to add, change, or remove the configuration in the cluster for EKS Hybrid Nodes. To remove the configuration, use the `remoteNetworkConfig` key with an object containing both subkeys with empty arrays for each. Here is an inline example: `"remoteNetworkConfig": { "remoteNodeNetworks": [], "remotePodNetworks": [] }`.

        Cluster updates are asynchronous, and they should finish within a few minutes. During an update, the cluster status moves to `UPDATING` (this status transition is eventually consistent). When the update is complete (either `Failed` or `Successful`), the cluster status moves to `Active`.
      parameters:
      - name: name
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resourcesVpcConfig:
                  $ref: '#/components/schemas/VpcConfigRequest'
                logging:
                  $ref: '#/components/schemas/Logging'
                clientRequestToken:
                  $ref: '#/components/schemas/String'
                accessConfig:
                  $ref: '#/components/schemas/UpdateAccessConfigRequest'
                upgradePolicy:
                  $ref: '#/components/schemas/UpgradePolicyRequest'
                zonalShiftConfig:
                  $ref: '#/components/schemas/ZonalShiftConfigRequest'
                computeConfig:
                  $ref: '#/components/schemas/ComputeConfigRequest'
                kubernetesNetworkConfig:
                  $ref: '#/components/schemas/KubernetesNetworkConfigRequest'
                storageConfig:
                  $ref: '#/components/schemas/StorageConfigRequest'
                remoteNetworkConfig:
                  $ref: '#/components/schemas/RemoteNetworkConfigRequest'
      responses:
        '200': {}
        '400':
          description: |-
            The request is invalid given the state of the cluster. Check the state of the cluster and the associated operations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '409':
          description: |-
            The specified resource is in use.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
        '404':
          description: |-
            The specified resource could not be found. You can view your available clusters with `ListClusters`. You can view your available managed node groups with `ListNodegroups`. Amazon EKS clusters and node groups are Amazon Web Services Region specific.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '500':
          description: |-
            These errors are usually caused by a server-side issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerException'
        '429':
          description: |-
            The request or operation couldn't be performed because a service is throttling requests.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /clusters/{clusterName}/node-groups/{nodegroupName}/update-config:
    post:
      operationId: UpdateNodegroupConfig
      description: |-
        Updates an Amazon EKS managed node group configuration. Your node group continues to function during the update. The response output includes an update ID that you can use to track the status of your node group update with the [ `DescribeUpdate` ](https://docs.aws.amazon.com/eks/latest/APIReference/API_DescribeUpdate.html) API operation. You can update the Kubernetes labels and taints for a node group and the scaling and version update configuration.
      parameters:
      - name: clusterName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: nodegroupName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                labels:
                  $ref: '#/components/schemas/UpdateLabelsPayload'
                taints:
                  $ref: '#/components/schemas/UpdateTaintsPayload'
                scalingConfig:
                  $ref: '#/components/schemas/NodegroupScalingConfig'
                updateConfig:
                  $ref: '#/components/schemas/NodegroupUpdateConfig'
                nodeRepairConfig:
                  $ref: '#/components/schemas/NodeRepairConfig'
                clientRequestToken:
                  $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '400':
          description: |-
            The request is invalid given the state of the cluster. Check the state of the cluster and the associated operations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '409':
          description: |-
            The specified resource is in use.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
        '404':
          description: |-
            The specified resource could not be found. You can view your available clusters with `ListClusters`. You can view your available managed node groups with `ListNodegroups`. Amazon EKS clusters and node groups are Amazon Web Services Region specific.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '500':
          description: |-
            These errors are usually caused by a server-side issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerException'
  /clusters/{clusterName}/node-groups/{nodegroupName}/update-version:
    post:
      operationId: UpdateNodegroupVersion
      description: |-
        Updates the Kubernetes version or AMI version of an Amazon EKS managed node group.

        You can update a node group using a launch template only if the node group was originally deployed with a launch template. Additionally, the launch template ID or name must match what was used when the node group was created. You can update the launch template version with necessary changes.

        If you need to update a custom AMI in a node group that was deployed with a launch template, then update your custom AMI, specify the new ID in a new version of the launch template, and then update the node group to the new version of the launch template.

        If you update without a launch template, then you can update to the latest available AMI version of a node group's current Kubernetes version by not specifying a Kubernetes version in the request. You can update to the latest AMI version of your cluster's current Kubernetes version by specifying your cluster's Kubernetes version in the request. For information about Linux versions, see [Amazon EKS optimized Amazon Linux AMI versions](https://docs.aws.amazon.com/eks/latest/userguide/eks-linux-ami-versions.html) in the _Amazon EKS User Guide_. For information about Windows versions, see [Amazon EKS optimized Windows AMI versions](https://docs.aws.amazon.com/eks/latest/userguide/eks-ami-versions-windows.html) in the _Amazon EKS User Guide_.

        You cannot roll back a node group to an earlier Kubernetes version or AMI version.

        When a node in a managed node group is terminated due to a scaling action or update, every `Pod` on that node is drained first. Amazon EKS attempts to drain the nodes gracefully and will fail if it is unable to do so. You can `force` the update if Amazon EKS is unable to drain the nodes as a result of a `Pod` disruption budget issue.
      parameters:
      - name: clusterName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: nodegroupName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                version:
                  $ref: '#/components/schemas/String'
                releaseVersion:
                  $ref: '#/components/schemas/String'
                launchTemplate:
                  $ref: '#/components/schemas/LaunchTemplateSpecification'
                force:
                  $ref: '#/components/schemas/Boolean'
                clientRequestToken:
                  $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '400':
          description: |-
            The request is invalid given the state of the cluster. Check the state of the cluster and the associated operations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '409':
          description: |-
            The specified resource is in use.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceInUseException'
        '404':
          description: |-
            The specified resource could not be found. You can view your available clusters with `ListClusters`. You can view your available managed node groups with `ListNodegroups`. Amazon EKS clusters and node groups are Amazon Web Services Region specific.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '500':
          description: |-
            These errors are usually caused by a server-side issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerException'
components:
  schemas:
    AMITypes:
      type: string
      enum:
      - AL2_x86_64
      - AL2_x86_64_GPU
      - AL2_ARM_64
      - CUSTOM
      - BOTTLEROCKET_ARM_64
      - BOTTLEROCKET_x86_64
      - BOTTLEROCKET_ARM_64_FIPS
      - BOTTLEROCKET_x86_64_FIPS
      - BOTTLEROCKET_ARM_64_NVIDIA
      - BOTTLEROCKET_x86_64_NVIDIA
      - WINDOWS_CORE_2019_x86_64
      - WINDOWS_FULL_2019_x86_64
      - WINDOWS_CORE_2022_x86_64
      - WINDOWS_FULL_2022_x86_64
      - AL2023_x86_64_STANDARD
      - AL2023_ARM_64_STANDARD
      - AL2023_x86_64_NEURON
      - AL2023_x86_64_NVIDIA
      - AL2023_ARM_64_NVIDIA
    AccessConfigResponse:
      type: object
      properties:
        bootstrapClusterCreatorAdminPermissions:
          allOf:
          - $ref: '#/components/schemas/BoxedBoolean'
          description: Specifies whether or not the cluster creator IAM principal
            was set as a cluster admin access entry during cluster creation time.
        authenticationMode:
          allOf:
          - $ref: '#/components/schemas/AuthenticationMode'
          description: The current authentication mode of the cluster.
      description: The access configuration for the cluster.
    AccessDeniedException:
      type: object
      properties:
        message:
          allOf:
          - $ref: '#/components/schemas/String'
          description: You do not have sufficient access to perform this action.
      description: You don't have permissions to perform the requested operation.
        The [IAM principal](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_terms-and-concepts.html)
        making the request must have at least one IAM permissions policy attached
        that grants the required permissions. For more information, see [Access management](https://docs.aws.amazon.com/IAM/latest/UserGuide/access.html)
        in the _IAM User Guide_.
    AccessEntry:
      type: object
      properties:
        clusterName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of your cluster.
        principalArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ARN of the IAM principal for the access entry. If you ever
            delete the IAM principal with this ARN, the access entry isn't automatically
            deleted. We recommend that you delete the access entry with an ARN for
            an IAM principal that you delete. If you don't delete the access entry
            and ever recreate the IAM principal, even if it has the same ARN, the
            access entry won't work. This is because even though the ARN is the same
            for the recreated IAM principal, the `roleID` or `userID` (you can see
            this with the Security Token Service `GetCallerIdentity` API) is different
            for the recreated IAM principal than it was for the original IAM principal.
            Even though you don't see the IAM principal's `roleID` or `userID` for
            an access entry, Amazon EKS stores it with the access entry.
        kubernetesGroups:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: A `name` that you've specified in a Kubernetes `RoleBinding`
            or `ClusterRoleBinding` object so that Kubernetes authorizes the `principalARN`
            access to cluster objects.
        accessEntryArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ARN of the access entry.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The Unix epoch timestamp at object creation.
        modifiedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The Unix epoch timestamp for the last modification to the object.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: Metadata that assists with categorization and organization.
            Each tag consists of a key and an optional value. You define both. Tags
            don't propagate to any other cluster or Amazon Web Services resources.
        username:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The `name` of a user that can authenticate to your cluster.
        type:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The type of the access entry.
      description: An access entry allows an IAM principal (user or role) to access
        your cluster. Access entries can replace the need to maintain the `aws-auth`
        `ConfigMap` for authentication. For more information about access entries,
        see [Access entries](https://docs.aws.amazon.com/eks/latest/userguide/access-entries.html)
        in the _Amazon EKS User Guide_.
    AccessPoliciesList:
      type: array
      items:
        $ref: '#/components/schemas/AccessPolicy'
    AccessPolicy:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the access policy.
        arn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ARN of the access policy.
      description: An access policy includes permissions that allow Amazon EKS to
        authorize an IAM principal to work with Kubernetes objects on your cluster.
        The policies are managed by Amazon EKS, but they're not IAM policies. You
        can't view the permissions in the policies using the API. The permissions
        for many of the policies are similar to the Kubernetes `cluster-admin`, `admin`,
        `edit`, and `view` cluster roles. For more information about these cluster
        roles, see [User-facing roles](https://kubernetes.io/docs/reference/access-authn-authz/rbac/#user-facing-roles)
        in the Kubernetes documentation. To view the contents of the policies, see
        [Access policy permissions](https://docs.aws.amazon.com/eks/latest/userguide/access-policies.html#access-policy-permissions)
        in the _Amazon EKS User Guide_.
    AccessScope:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/AccessScopeType'
          description: The scope type of an access policy.
        namespaces:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: A Kubernetes `namespace` that an access policy is scoped to.
            A value is required if you specified `namespace` for `Type`.
      description: The scope of an `AccessPolicy` that's associated to an `AccessEntry`.
    AccessScopeType:
      type: string
      enum:
      - cluster
      - namespace
    AdditionalInfoMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/String'
    Addon:
      type: object
      properties:
        addonName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the add-on.
        clusterName:
          allOf:
          - $ref: '#/components/schemas/ClusterName'
          description: The name of your cluster.
        status:
          allOf:
          - $ref: '#/components/schemas/AddonStatus'
          description: The status of the add-on.
        addonVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The version of the add-on.
        health:
          allOf:
          - $ref: '#/components/schemas/AddonHealth'
          description: An object that represents the health of the add-on.
        addonArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) of the add-on.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The Unix epoch timestamp at object creation.
        modifiedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The Unix epoch timestamp for the last modification to the object.
        serviceAccountRoleArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) of the IAM role that's bound
            to the Kubernetes `ServiceAccount` object that the add-on uses.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: Metadata that assists with categorization and organization.
            Each tag consists of a key and an optional value. You define both. Tags
            don't propagate to any other cluster or Amazon Web Services resources.
        publisher:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The publisher of the add-on.
        owner:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The owner of the add-on.
        marketplaceInformation:
          allOf:
          - $ref: '#/components/schemas/MarketplaceInformation'
          description: Information about an Amazon EKS add-on from the Amazon Web
            Services Marketplace.
        configurationValues:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The configuration values that you provided.
        podIdentityAssociations:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: 'An array of Pod Identity Assocations owned by the Addon. Each
            EKS Pod Identity association maps a role to a service account in a namespace
            in the cluster.


            For more information, see [Attach an IAM Role to an Amazon EKS add-on
            using Pod Identity](https://docs.aws.amazon.com/eks/latest/userguide/add-ons-iam.html)
            in the _Amazon EKS User Guide_.'
      description: An Amazon EKS add-on. For more information, see [Amazon EKS add-ons](https://docs.aws.amazon.com/eks/latest/userguide/eks-add-ons.html)
        in the _Amazon EKS User Guide_.
    AddonCompatibilityDetail:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the Amazon EKS add-on.
        compatibleVersions:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: The list of compatible Amazon EKS add-on versions for the next
            Kubernetes version.
      description: The summary information about the Amazon EKS add-on compatibility
        for the next Kubernetes version for an insight check in the `UPGRADE_READINESS`
        category.
    AddonCompatibilityDetails:
      type: array
      items:
        $ref: '#/components/schemas/AddonCompatibilityDetail'
    AddonHealth:
      type: object
      properties:
        issues:
          allOf:
          - $ref: '#/components/schemas/AddonIssueList'
          description: An object representing the health issues for an add-on.
      description: The health of the add-on.
    AddonInfo:
      type: object
      properties:
        addonName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the add-on.
        type:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The type of the add-on.
        addonVersions:
          allOf:
          - $ref: '#/components/schemas/AddonVersionInfoList'
          description: An object representing information about available add-on versions
            and compatible Kubernetes versions.
        publisher:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The publisher of the add-on.
        owner:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The owner of the add-on.
        marketplaceInformation:
          allOf:
          - $ref: '#/components/schemas/MarketplaceInformation'
          description: Information about the add-on from the Amazon Web Services Marketplace.
      description: Information about an add-on.
    AddonIssue:
      type: object
      properties:
        code:
          allOf:
          - $ref: '#/components/schemas/AddonIssueCode'
          description: A code that describes the type of issue.
        message:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A message that provides details about the issue and what might
            cause it.
        resourceIds:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: The resource IDs of the issue.
      description: An issue related to an add-on.
    AddonIssueCode:
      type: string
      enum:
      - AccessDenied
      - InternalFailure
      - ClusterUnreachable
      - InsufficientNumberOfReplicas
      - ConfigurationConflict
      - AdmissionRequestDenied
      - UnsupportedAddonModification
      - K8sResourceNotFound
      - AddonSubscriptionNeeded
      - AddonPermissionFailure
    AddonIssueList:
      type: array
      items:
        $ref: '#/components/schemas/AddonIssue'
    AddonPodIdentityAssociations:
      type: object
      properties:
        serviceAccount:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of a Kubernetes Service Account.
        roleArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ARN of an IAM Role.
      required:
      - serviceAccount
      - roleArn
      description: 'A type of Pod Identity Association owned by an Amazon EKS Add-on.


        Each EKS Pod Identity Association maps a role to a service account in a namespace
        in the cluster.


        For more information, see [Attach an IAM Role to an Amazon EKS add-on using
        Pod Identity](https://docs.aws.amazon.com/eks/latest/userguide/add-ons-iam.html)
        in the _Amazon EKS User Guide_.'
    AddonPodIdentityAssociationsList:
      type: array
      items:
        $ref: '#/components/schemas/AddonPodIdentityAssociations'
    AddonPodIdentityConfiguration:
      type: object
      properties:
        serviceAccount:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Kubernetes Service Account name used by the addon.
        recommendedManagedPolicies:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: A suggested IAM Policy for the addon.
      description: Information about how to configure IAM for an Addon.
    AddonPodIdentityConfigurationList:
      type: array
      items:
        $ref: '#/components/schemas/AddonPodIdentityConfiguration'
    AddonStatus:
      type: string
      enum:
      - CREATING
      - ACTIVE
      - CREATE_FAILED
      - UPDATING
      - DELETING
      - DELETE_FAILED
      - DEGRADED
      - UPDATE_FAILED
    AddonVersionInfo:
      type: object
      properties:
        addonVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The version of the add-on.
        architecture:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: The architectures that the version supports.
        computeTypes:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: Indicates the compute type of the addon version.
        compatibilities:
          allOf:
          - $ref: '#/components/schemas/Compatibilities'
          description: An object representing the compatibilities of a version.
        requiresConfiguration:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether the add-on requires configuration.
        requiresIamPermissions:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates if the Addon requires IAM Permissions to operate,
            such as networking permissions.
      description: Information about an add-on version.
    AddonVersionInfoList:
      type: array
      items:
        $ref: '#/components/schemas/AddonVersionInfo'
    Addons:
      type: array
      items:
        $ref: '#/components/schemas/AddonInfo'
    AssociateAccessPolicyRequest:
      type: object
      properties:
        clusterName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of your cluster.
        principalArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) of the IAM user or role for
            the `AccessEntry` that you're associating the access policy to.
        policyArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ARN of the `AccessPolicy` that you're associating. For
            a list of ARNs, use `ListAccessPolicies`.
        accessScope:
          allOf:
          - $ref: '#/components/schemas/AccessScope'
          description: The scope for the `AccessPolicy`. You can scope access policies
            to an entire cluster or to specific Kubernetes namespaces.
      required:
      - clusterName
      - principalArn
      - policyArn
      - accessScope
    AssociateAccessPolicyResponse:
      type: object
      properties:
        clusterName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of your cluster.
        principalArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ARN of the IAM principal for the `AccessEntry`.
        associatedAccessPolicy:
          allOf:
          - $ref: '#/components/schemas/AssociatedAccessPolicy'
          description: The `AccessPolicy` and scope associated to the `AccessEntry`.
    AssociateEncryptionConfigRequest:
      type: object
      properties:
        clusterName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of your cluster.
        encryptionConfig:
          allOf:
          - $ref: '#/components/schemas/EncryptionConfigList'
          description: The configuration you are using for encryption.
        clientRequestToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request.
      required:
      - clusterName
      - encryptionConfig
    AssociateEncryptionConfigResponse:
      type: object
      properties:
        update:
          $ref: '#/components/schemas/Update'
    AssociateIdentityProviderConfigRequest:
      type: object
      properties:
        clusterName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of your cluster.
        oidc:
          allOf:
          - $ref: '#/components/schemas/OidcIdentityProviderConfigRequest'
          description: An object representing an OpenID Connect (OIDC) identity provider
            configuration.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: Metadata that assists with categorization and organization.
            Each tag consists of a key and an optional value. You define both. Tags
            don't propagate to any other cluster or Amazon Web Services resources.
        clientRequestToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request.
      required:
      - clusterName
      - oidc
    AssociateIdentityProviderConfigResponse:
      type: object
      properties:
        update:
          $ref: '#/components/schemas/Update'
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The tags for the resource.
    AssociatedAccessPoliciesList:
      type: array
      items:
        $ref: '#/components/schemas/AssociatedAccessPolicy'
    AssociatedAccessPolicy:
      type: object
      properties:
        policyArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ARN of the `AccessPolicy`.
        accessScope:
          allOf:
          - $ref: '#/components/schemas/AccessScope'
          description: The scope of the access policy.
        associatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time the `AccessPolicy` was associated with an
            `AccessEntry`.
        modifiedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The Unix epoch timestamp for the last modification to the object.
      description: An access policy association.
    AuthenticationMode:
      type: string
      enum:
      - API
      - API_AND_CONFIG_MAP
      - CONFIG_MAP
    AutoScalingGroup:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the Auto Scaling group associated with an Amazon
            EKS managed node group.
      description: An Auto Scaling group that is associated with an Amazon EKS managed
        node group.
    AutoScalingGroupList:
      type: array
      items:
        $ref: '#/components/schemas/AutoScalingGroup'
    BadRequestException:
      type: object
      properties:
        message:
          allOf:
          - $ref: '#/components/schemas/String'
          description: This exception is thrown if the request contains a semantic
            error. The precise meaning will depend on the API, and will be documented
            in the error message.
      description: This exception is thrown if the request contains a semantic error.
        The precise meaning will depend on the API, and will be documented in the
        error message.
    BlockStorage:
      type: object
      properties:
        enabled:
          allOf:
          - $ref: '#/components/schemas/BoxedBoolean'
          description: Indicates if the block storage capability is enabled on your
            EKS Auto Mode cluster. If the block storage capability is enabled, EKS
            Auto Mode will create and delete EBS volumes in your Amazon Web Services
            account.
      description: Indicates the current configuration of the block storage capability
        on your EKS Auto Mode cluster. For example, if the capability is enabled or
        disabled. If the block storage capability is enabled, EKS Auto Mode will create
        and delete EBS volumes in your Amazon Web Services account. For more information,
        see EKS Auto Mode block storage capability in the _Amazon EKS User Guide_.
    Boolean:
      type: boolean
      default: false
    BoxedBoolean:
      type: boolean
    BoxedInteger:
      type: integer
    Capacity:
      type: integer
      minimum: 1
    CapacityTypes:
      type: string
      enum:
      - ON_DEMAND
      - SPOT
      - CAPACITY_BLOCK
    Category:
      type: string
      enum:
      - UPGRADE_READINESS
    CategoryList:
      type: array
      items:
        $ref: '#/components/schemas/Category'
    Certificate:
      type: object
      properties:
        data:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Base64-encoded certificate data required to communicate
            with your cluster. Add this to the `certificate-authority-data` section
            of the `kubeconfig` file for your cluster.
      description: An object representing the `certificate-authority-data` for your
        cluster.
    ClientException:
      type: object
      properties:
        clusterName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon EKS cluster associated with the exception.
        nodegroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon EKS managed node group associated with the exception.
        addonName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon EKS add-on name associated with the exception.
        subscriptionId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon EKS subscription ID with the exception.
        message:
          allOf:
          - $ref: '#/components/schemas/String'
          description: These errors are usually caused by a client action. Actions
            can include using an action or resource on behalf of an [IAM principal](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_terms-and-concepts.html)
            that doesn't have permissions to use the action or resource or specifying
            an identifier that is not valid.
      description: These errors are usually caused by a client action. Actions can
        include using an action or resource on behalf of an [IAM principal](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_terms-and-concepts.html)
        that doesn't have permissions to use the action or resource or specifying
        an identifier that is not valid.
    ClientStat:
      type: object
      properties:
        userAgent:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The user agent of the Kubernetes client using the deprecated
            resource.
        numberOfRequestsLast30Days:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of requests from the Kubernetes client seen over
            the last 30 days.
        lastRequestTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp of the last request seen from the Kubernetes
            client.
      description: Details about clients using the deprecated resources.
    ClientStats:
      type: array
      items:
        $ref: '#/components/schemas/ClientStat'
    Cluster:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of your cluster.
        arn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) of the cluster.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The Unix epoch timestamp at object creation.
        version:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Kubernetes server version for the cluster.
        endpoint:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The endpoint for your Kubernetes API server.
        roleArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) of the IAM role that provides
            permissions for the Kubernetes control plane to make calls to Amazon Web
            Services API operations on your behalf.
        resourcesVpcConfig:
          allOf:
          - $ref: '#/components/schemas/VpcConfigResponse'
          description: The VPC configuration used by the cluster control plane. Amazon
            EKS VPC resources have specific requirements to work properly with Kubernetes.
            For more information, see [Cluster VPC considerations](https://docs.aws.amazon.com/eks/latest/userguide/network_reqs.html)
            and [Cluster security group considerations](https://docs.aws.amazon.com/eks/latest/userguide/sec-group-reqs.html)
            in the _Amazon EKS User Guide_.
        kubernetesNetworkConfig:
          allOf:
          - $ref: '#/components/schemas/KubernetesNetworkConfigResponse'
          description: The Kubernetes network configuration for the cluster.
        logging:
          allOf:
          - $ref: '#/components/schemas/Logging'
          description: The logging configuration for your cluster.
        identity:
          allOf:
          - $ref: '#/components/schemas/Identity'
          description: The identity provider information for the cluster.
        status:
          allOf:
          - $ref: '#/components/schemas/ClusterStatus'
          description: The current status of the cluster.
        certificateAuthority:
          allOf:
          - $ref: '#/components/schemas/Certificate'
          description: The `certificate-authority-data` for your cluster.
        clientRequestToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request.
        platformVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The platform version of your Amazon EKS cluster. For more information
            about clusters deployed on the Amazon Web Services Cloud, see [Platform
            versions](https://docs.aws.amazon.com/eks/latest/userguide/platform-versions.html)
            in the __Amazon EKS User Guide_ _. For more information about local clusters
            deployed on an Outpost, see [Amazon EKS local cluster platform versions](https://docs.aws.amazon.com/eks/latest/userguide/eks-outposts-platform-versions.html)
            in the __Amazon EKS User Guide_ _.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: Metadata that assists with categorization and organization.
            Each tag consists of a key and an optional value. You define both. Tags
            don't propagate to any other cluster or Amazon Web Services resources.
        encryptionConfig:
          allOf:
          - $ref: '#/components/schemas/EncryptionConfigList'
          description: The encryption configuration for the cluster.
        connectorConfig:
          allOf:
          - $ref: '#/components/schemas/ConnectorConfigResponse'
          description: The configuration used to connect to a cluster for registration.
        id:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of your local Amazon EKS cluster on an Amazon Web Services
            Outpost. This property isn't available for an Amazon EKS cluster on the
            Amazon Web Services cloud.
        health:
          allOf:
          - $ref: '#/components/schemas/ClusterHealth'
          description: An object representing the health of your Amazon EKS cluster.
        outpostConfig:
          allOf:
          - $ref: '#/components/schemas/OutpostConfigResponse'
          description: An object representing the configuration of your local Amazon
            EKS cluster on an Amazon Web Services Outpost. This object isn't available
            for clusters on the Amazon Web Services cloud.
        accessConfig:
          allOf:
          - $ref: '#/components/schemas/AccessConfigResponse'
          description: The access configuration for the cluster.
        upgradePolicy:
          allOf:
          - $ref: '#/components/schemas/UpgradePolicyResponse'
          description: 'This value indicates if extended support is enabled or disabled
            for the cluster.


            [Learn more about EKS Extended Support in the _Amazon EKS User Guide_.](https://docs.aws.amazon.com/eks/latest/userguide/extended-support-control.html)'
        zonalShiftConfig:
          allOf:
          - $ref: '#/components/schemas/ZonalShiftConfigResponse'
          description: The configuration for zonal shift for the cluster.
        remoteNetworkConfig:
          allOf:
          - $ref: '#/components/schemas/RemoteNetworkConfigResponse'
          description: The configuration in the cluster for EKS Hybrid Nodes. You
            can add, change, or remove this configuration after the cluster is created.
        computeConfig:
          allOf:
          - $ref: '#/components/schemas/ComputeConfigResponse'
          description: Indicates the current configuration of the compute capability
            on your EKS Auto Mode cluster. For example, if the capability is enabled
            or disabled. If the compute capability is enabled, EKS Auto Mode will
            create and delete EC2 Managed Instances in your Amazon Web Services account.
            For more information, see EKS Auto Mode compute capability in the _Amazon
            EKS User Guide_.
        storageConfig:
          allOf:
          - $ref: '#/components/schemas/StorageConfigResponse'
          description: Indicates the current configuration of the block storage capability
            on your EKS Auto Mode cluster. For example, if the capability is enabled
            or disabled. If the block storage capability is enabled, EKS Auto Mode
            will create and delete EBS volumes in your Amazon Web Services account.
            For more information, see EKS Auto Mode block storage capability in the
            _Amazon EKS User Guide_.
      description: An object representing an Amazon EKS cluster.
    ClusterHealth:
      type: object
      properties:
        issues:
          allOf:
          - $ref: '#/components/schemas/ClusterIssueList'
          description: An object representing the health issues of your Amazon EKS
            cluster.
      description: An object representing the health of your Amazon EKS cluster.
    ClusterIssue:
      type: object
      properties:
        code:
          allOf:
          - $ref: '#/components/schemas/ClusterIssueCode'
          description: The error code of the issue.
        message:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A description of the issue.
        resourceIds:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: The resource IDs that the issue relates to.
      description: An issue with your Amazon EKS cluster.
    ClusterIssueCode:
      type: string
      enum:
      - AccessDenied
      - ClusterUnreachable
      - ConfigurationConflict
      - InternalFailure
      - ResourceLimitExceeded
      - ResourceNotFound
      - IamRoleNotFound
      - VpcNotFound
      - InsufficientFreeAddresses
      - Ec2ServiceNotSubscribed
      - Ec2SubnetNotFound
      - Ec2SecurityGroupNotFound
      - KmsGrantRevoked
      - KmsKeyNotFound
      - KmsKeyMarkedForDeletion
      - KmsKeyDisabled
      - StsRegionalEndpointDisabled
      - UnsupportedVersion
      - Other
    ClusterIssueList:
      type: array
      items:
        $ref: '#/components/schemas/ClusterIssue'
    ClusterName:
      type: string
      pattern: ^[0-9A-Za-z][A-Za-z0-9\-_]*$
      minLength: 1
      maxLength: 100
    ClusterStatus:
      type: string
      enum:
      - CREATING
      - ACTIVE
      - DELETING
      - FAILED
      - UPDATING
      - PENDING
    ClusterVersionInformation:
      type: object
      properties:
        clusterVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Kubernetes version for the cluster.
        clusterType:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The type of cluster this version is for.
        defaultPlatformVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Default platform version for this Kubernetes version.
        defaultVersion:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates if this is a default version.
        releaseDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The release date of this cluster version.
        endOfStandardSupportDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: Date when standard support ends for this version.
        endOfExtendedSupportDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: Date when extended support ends for this version.
        status:
          allOf:
          - $ref: '#/components/schemas/ClusterVersionStatus'
          description: 'This field is deprecated. Use `versionStatus` instead, as
            that field matches for input and output of this action.


            Current status of this cluster version.'
        versionStatus:
          allOf:
          - $ref: '#/components/schemas/VersionStatus'
          description: Current status of this cluster version.
        kubernetesPatchVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The patch version of Kubernetes for this cluster version.
      description: Contains details about a specific EKS cluster version.
    ClusterVersionList:
      type: array
      items:
        $ref: '#/components/schemas/ClusterVersionInformation'
    ClusterVersionStatus:
      type: string
      enum:
      - unsupported
      - standard-support
      - extended-support
    Compatibilities:
      type: array
      items:
        $ref: '#/components/schemas/Compatibility'
    Compatibility:
      type: object
      properties:
        clusterVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The supported Kubernetes version of the cluster.
        platformVersions:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: The supported compute platform.
        defaultVersion:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: The supported default version.
      description: Compatibility information.
    ComputeConfigRequest:
      type: object
      properties:
        enabled:
          allOf:
          - $ref: '#/components/schemas/BoxedBoolean'
          description: Request to enable or disable the compute capability on your
            EKS Auto Mode cluster. If the compute capability is enabled, EKS Auto
            Mode will create and delete EC2 Managed Instances in your Amazon Web Services
            account.
        nodePools:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: Configuration for node pools that defines the compute resources
            for your EKS Auto Mode cluster. For more information, see EKS Auto Mode
            Node Pools in the _Amazon EKS User Guide_.
        nodeRoleArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ARN of the IAM Role EKS will assign to EC2 Managed Instances
            in your EKS Auto Mode cluster. This value cannot be changed after the
            compute capability of EKS Auto Mode is enabled. For more information,
            see the IAM Reference in the _Amazon EKS User Guide_.
      description: Request to update the configuration of the compute capability of
        your EKS Auto Mode cluster. For example, enable the capability. For more information,
        see EKS Auto Mode compute capability in the _Amazon EKS User Guide_.
    ComputeConfigResponse:
      type: object
      properties:
        enabled:
          allOf:
          - $ref: '#/components/schemas/BoxedBoolean'
          description: Indicates if the compute capability is enabled on your EKS
            Auto Mode cluster. If the compute capability is enabled, EKS Auto Mode
            will create and delete EC2 Managed Instances in your Amazon Web Services
            account.
        nodePools:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: Indicates the current configuration of node pools in your EKS
            Auto Mode cluster. For more information, see EKS Auto Mode Node Pools
            in the _Amazon EKS User Guide_.
        nodeRoleArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ARN of the IAM Role EKS will assign to EC2 Managed Instances
            in your EKS Auto Mode cluster.
      description: Indicates the status of the request to update the compute capability
        of your EKS Auto Mode cluster.
    ConnectorConfigProvider:
      type: string
      enum:
      - EKS_ANYWHERE
      - ANTHOS
      - GKE
      - AKS
      - OPENSHIFT
      - TANZU
      - RANCHER
      - EC2
      - OTHER
    ConnectorConfigRequest:
      type: object
      properties:
        roleArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) of the role that is authorized
            to request the connector configuration.
        provider:
          allOf:
          - $ref: '#/components/schemas/ConnectorConfigProvider'
          description: The cloud provider for the target cluster to connect.
      required:
      - roleArn
      - provider
      description: The configuration sent to a cluster for configuration.
    ConnectorConfigResponse:
      type: object
      properties:
        activationId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A unique ID associated with the cluster for registration purposes.
        activationCode:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A unique code associated with the cluster for registration
            purposes.
        activationExpiry:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The expiration time of the connected cluster. The cluster's
            YAML file must be applied through the native provider.
        provider:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The cluster's cloud service provider.
        roleArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) of the role to communicate with
            services from the connected Kubernetes cluster.
      description: The full description of your connected cluster.
    ControlPlanePlacementRequest:
      type: object
      properties:
        groupName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the placement group for the Kubernetes control
            plane instances. This setting can't be changed after cluster creation.
      description: The placement configuration for all the control plane instances
        of your local Amazon EKS cluster on an Amazon Web Services Outpost. For more
        information, see [Capacity considerations](https://docs.aws.amazon.com/eks/latest/userguide/eks-outposts-capacity-considerations.html)
        in the _Amazon EKS User Guide_.
    ControlPlanePlacementResponse:
      type: object
      properties:
        groupName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the placement group for the Kubernetes control
            plane instances.
      description: The placement configuration for all the control plane instances
        of your local Amazon EKS cluster on an Amazon Web Services Outpost. For more
        information, see [Capacity considerations](https://docs.aws.amazon.com/eks/latest/userguide/eks-outposts-capacity-considerations.html)
        in the _Amazon EKS User Guide_.
    CreateAccessConfigRequest:
      type: object
      properties:
        bootstrapClusterCreatorAdminPermissions:
          allOf:
          - $ref: '#/components/schemas/BoxedBoolean'
          description: Specifies whether or not the cluster creator IAM principal
            was set as a cluster admin access entry during cluster creation time.
            The default value is `true`.
        authenticationMode:
          allOf:
          - $ref: '#/components/schemas/AuthenticationMode'
          description: The desired authentication mode for the cluster. If you create
            a cluster by using the EKS API, Amazon Web Services SDKs, or CloudFormation,
            the default is `CONFIG_MAP`. If you create the cluster by using the Amazon
            Web Services Management Console, the default value is `API_AND_CONFIG_MAP`.
      description: The access configuration information for the cluster.
    CreateAccessEntryRequest:
      type: object
      properties:
        clusterName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of your cluster.
        principalArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'The ARN of the IAM principal for the `AccessEntry`. You can
            specify one ARN for each access entry. You can''t specify the same ARN
            in more than one access entry. This value can''t be changed after access
            entry creation.


            The valid principals differ depending on the type of the access entry
            in the `type` field. For `STANDARD` access entries, you can use every
            IAM principal type. For nodes (`EC2` (for EKS Auto Mode), `EC2_LINUX`,
            `EC2_WINDOWS`, `FARGATE_LINUX`, and `HYBRID_LINUX`), the only valid ARN
            is IAM roles. You can''t use the STS session principal type with access
            entries because this is a temporary principal for each session and not
            a permanent identity that can be assigned permissions.


            [IAM best practices](https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html#bp-users-federation-idp)
            recommend using IAM roles with temporary credentials, rather than IAM
            users with long-term credentials.'
        kubernetesGroups:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: 'The value for `name` that you''ve specified for `kind: Group`
            as a `subject` in a Kubernetes `RoleBinding` or `ClusterRoleBinding` object.
            Amazon EKS doesn''t confirm that the value for `name` exists in any bindings
            on your cluster. You can specify one or more names.


            Kubernetes authorizes the `principalArn` of the access entry to access
            any cluster objects that you''ve specified in a Kubernetes `Role` or `ClusterRole`
            object that is also specified in a binding''s `roleRef`. For more information
            about creating Kubernetes `RoleBinding`, `ClusterRoleBinding`, `Role`,
            or `ClusterRole` objects, see [Using RBAC Authorization in the Kubernetes
            documentation](https://kubernetes.io/docs/reference/access-authn-authz/rbac/).


            If you want Amazon EKS to authorize the `principalArn` (instead of, or
            in addition to Kubernetes authorizing the `principalArn`), you can associate
            one or more access policies to the access entry using `AssociateAccessPolicy`.
            If you associate any access policies, the `principalARN` has all permissions
            assigned in the associated access policies and all permissions in any
            Kubernetes `Role` or `ClusterRole` objects that the group names are bound
            to.'
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: Metadata that assists with categorization and organization.
            Each tag consists of a key and an optional value. You define both. Tags
            don't propagate to any other cluster or Amazon Web Services resources.
        clientRequestToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request.
        username:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The username to authenticate to Kubernetes with. We recommend
            not specifying a username and letting Amazon EKS specify it for you. For
            more information about the value Amazon EKS specifies for you, or constraints
            before specifying your own username, see [Creating access entries](https://docs.aws.amazon.com/eks/latest/userguide/access-entries.html#creating-access-entries)
            in the _Amazon EKS User Guide_.
        type:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'The type of the new access entry. Valid values are `STANDARD`,
            `FARGATE_LINUX`, `EC2_LINUX`, `EC2_WINDOWS`, `EC2` (for EKS Auto Mode),
            `HYBRID_LINUX`, and `HYPERPOD_LINUX`.


            If the `principalArn` is for an IAM role that''s used for self-managed
            Amazon EC2 nodes, specify `EC2_LINUX` or `EC2_WINDOWS`. Amazon EKS grants
            the necessary permissions to the node for you. If the `principalArn` is
            for any other purpose, specify `STANDARD`. If you don''t specify a value,
            Amazon EKS sets the value to `STANDARD`. If you have the access mode of
            the cluster set to `API_AND_CONFIG_MAP`, it''s unnecessary to create access
            entries for IAM roles used with Fargate profiles or managed Amazon EC2
            nodes, because Amazon EKS creates entries in the `aws-auth` `ConfigMap`
            for the roles. You can''t change this value once you''ve created the access
            entry.


            If you set the value to `EC2_LINUX` or `EC2_WINDOWS`, you can''t specify
            values for `kubernetesGroups`, or associate an `AccessPolicy` to the access
            entry.'
      required:
      - clusterName
      - principalArn
    CreateAccessEntryResponse:
      type: object
      properties:
        accessEntry:
          $ref: '#/components/schemas/AccessEntry'
    CreateAddonRequest:
      type: object
      properties:
        clusterName:
          allOf:
          - $ref: '#/components/schemas/ClusterName'
          description: The name of your cluster.
        addonName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the add-on. The name must match one of the names
            returned by `DescribeAddonVersions`.
        addonVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The version of the add-on. The version must match one of the
            versions returned by [ `DescribeAddonVersions` ](https://docs.aws.amazon.com/eks/latest/APIReference/API_DescribeAddonVersions.html).
        serviceAccountRoleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          description: 'The Amazon Resource Name (ARN) of an existing IAM role to
            bind to the add-on''s service account. The role must be assigned the IAM
            permissions required by the add-on. If you don''t specify an existing
            IAM role, then the add-on uses the permissions assigned to the node IAM
            role. For more information, see [Amazon EKS node IAM role](https://docs.aws.amazon.com/eks/latest/userguide/create-node-role.html)
            in the _Amazon EKS User Guide_.


            To specify an existing IAM role, you must have an IAM OpenID Connect (OIDC)
            provider created for your cluster. For more information, see [Enabling
            IAM roles for service accounts on your cluster](https://docs.aws.amazon.com/eks/latest/userguide/enable-iam-roles-for-service-accounts.html)
            in the _Amazon EKS User Guide_.'
        resolveConflicts:
          allOf:
          - $ref: '#/components/schemas/ResolveConflicts'
          description: "How to resolve field value conflicts for an Amazon EKS add-on.\
            \ Conflicts are handled based on the value you choose:\n\n  * **None**\
            \ – If the self-managed version of the add-on is installed on your cluster,\
            \ Amazon EKS doesn't change the value. Creation of the add-on might fail.\n\
            \n  * **Overwrite** – If the self-managed version of the add-on is installed\
            \ on your cluster and the Amazon EKS default value is different than the\
            \ existing value, Amazon EKS changes the value to the Amazon EKS default\
            \ value.\n\n  * **Preserve** – This is similar to the NONE option. If\
            \ the self-managed version of the add-on is installed on your cluster\
            \ Amazon EKS doesn't change the add-on resource properties. Creation of\
            \ the add-on might fail if conflicts are detected. This option works differently\
            \ during the update operation. For more information, see [ `UpdateAddon`\
            \ ](https://docs.aws.amazon.com/eks/latest/APIReference/API_UpdateAddon.html).\n\
            \nIf you don't currently have the self-managed version of the add-on installed\
            \ on your cluster, the Amazon EKS add-on is installed. Amazon EKS sets\
            \ all values to default values, regardless of the option that you specify."
        clientRequestToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: Metadata that assists with categorization and organization.
            Each tag consists of a key and an optional value. You define both. Tags
            don't propagate to any other cluster or Amazon Web Services resources.
        configurationValues:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The set of configuration values for the add-on that's created.
            The values that you provide are validated against the schema returned
            by `DescribeAddonConfiguration`.
        podIdentityAssociations:
          allOf:
          - $ref: '#/components/schemas/AddonPodIdentityAssociationsList'
          description: 'An array of Pod Identity Assocations to be created. Each EKS
            Pod Identity association maps a Kubernetes service account to an IAM Role.


            For more information, see [Attach an IAM Role to an Amazon EKS add-on
            using Pod Identity](https://docs.aws.amazon.com/eks/latest/userguide/add-ons-iam.html)
            in the _Amazon EKS User Guide_.'
      required:
      - clusterName
      - addonName
    CreateAddonResponse:
      type: object
      properties:
        addon:
          $ref: '#/components/schemas/Addon'
    CreateClusterRequest:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/ClusterName'
          description: The unique name to give to your cluster. The name can contain
            only alphanumeric characters (case-sensitive), hyphens, and underscores.
            It must start with an alphanumeric character and can't be longer than
            100 characters. The name must be unique within the Amazon Web Services
            Region and Amazon Web Services account that you're creating the cluster
            in.
        version:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'The desired Kubernetes version for your cluster. If you don''t
            specify a value here, the default version available in Amazon EKS is used.


            The default version might not be the latest version available.'
        roleArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) of the IAM role that provides
            permissions for the Kubernetes control plane to make calls to Amazon Web
            Services API operations on your behalf. For more information, see [Amazon
            EKS Service IAM Role](https://docs.aws.amazon.com/eks/latest/userguide/service_IAM_role.html)
            in the __Amazon EKS User Guide_ _.
        resourcesVpcConfig:
          allOf:
          - $ref: '#/components/schemas/VpcConfigRequest'
          description: The VPC configuration that's used by the cluster control plane.
            Amazon EKS VPC resources have specific requirements to work properly with
            Kubernetes. For more information, see [Cluster VPC Considerations](https://docs.aws.amazon.com/eks/latest/userguide/network_reqs.html)
            and [Cluster Security Group Considerations](https://docs.aws.amazon.com/eks/latest/userguide/sec-group-reqs.html)
            in the _Amazon EKS User Guide_. You must specify at least two subnets.
            You can specify up to five security groups. However, we recommend that
            you use a dedicated security group for your cluster control plane.
        kubernetesNetworkConfig:
          allOf:
          - $ref: '#/components/schemas/KubernetesNetworkConfigRequest'
          description: The Kubernetes network configuration for the cluster.
        logging:
          allOf:
          - $ref: '#/components/schemas/Logging'
          description: 'Enable or disable exporting the Kubernetes control plane logs
            for your cluster to CloudWatch Logs . By default, cluster control plane
            logs aren''t exported to CloudWatch Logs . For more information, see [Amazon
            EKS Cluster control plane logs](https://docs.aws.amazon.com/eks/latest/userguide/control-plane-logs.html)
            in the __Amazon EKS User Guide_ _.


            CloudWatch Logs ingestion, archive storage, and data scanning rates apply
            to exported control plane logs. For more information, see [CloudWatch
            Pricing](http://aws.amazon.com/cloudwatch/pricing/).'
        clientRequestToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: Metadata that assists with categorization and organization.
            Each tag consists of a key and an optional value. You define both. Tags
            don't propagate to any other cluster or Amazon Web Services resources.
        encryptionConfig:
          allOf:
          - $ref: '#/components/schemas/EncryptionConfigList'
          description: The encryption configuration for the cluster.
        outpostConfig:
          allOf:
          - $ref: '#/components/schemas/OutpostConfigRequest'
          description: An object representing the configuration of your local Amazon
            EKS cluster on an Amazon Web Services Outpost. Before creating a local
            cluster on an Outpost, review [Local clusters for Amazon EKS on Amazon
            Web Services Outposts](https://docs.aws.amazon.com/eks/latest/userguide/eks-outposts-local-cluster-overview.html)
            in the _Amazon EKS User Guide_. This object isn't available for creating
            Amazon EKS clusters on the Amazon Web Services cloud.
        accessConfig:
          allOf:
          - $ref: '#/components/schemas/CreateAccessConfigRequest'
          description: The access configuration for the cluster.
        bootstrapSelfManagedAddons:
          allOf:
          - $ref: '#/components/schemas/BoxedBoolean'
          description: 'If you set this value to `False` when creating a cluster,
            the default networking add-ons will not be installed.


            The default networking addons include vpc-cni, coredns, and kube-proxy.


            Use this option when you plan to install third-party alternative add-ons
            or self-manage the default networking add-ons.'
        upgradePolicy:
          allOf:
          - $ref: '#/components/schemas/UpgradePolicyRequest'
          description: New clusters, by default, have extended support enabled. You
            can disable extended support when creating a cluster by setting this value
            to `STANDARD`.
        zonalShiftConfig:
          allOf:
          - $ref: '#/components/schemas/ZonalShiftConfigRequest'
          description: 'Enable or disable ARC zonal shift for the cluster. If zonal
            shift is enabled, Amazon Web Services configures zonal autoshift for the
            cluster.


            Zonal shift is a feature of Amazon Application Recovery Controller (ARC).
            ARC zonal shift is designed to be a temporary measure that allows you
            to move traffic for a resource away from an impaired AZ until the zonal
            shift expires or you cancel it. You can extend the zonal shift if necessary.


            You can start a zonal shift for an Amazon EKS cluster, or you can allow
            Amazon Web Services to do it for you by enabling _zonal autoshift_. This
            shift updates the flow of east-to-west network traffic in your cluster
            to only consider network endpoints for Pods running on worker nodes in
            healthy AZs. Additionally, any ALB or NLB handling ingress traffic for
            applications in your Amazon EKS cluster will automatically route traffic
            to targets in the healthy AZs. For more information about zonal shift
            in EKS, see [Learn about Amazon Application Recovery Controller (ARC)
            Zonal Shift in Amazon EKS](https://docs.aws.amazon.com/eks/latest/userguide/zone-shift.html)
            in the __Amazon EKS User Guide_ _.'
        remoteNetworkConfig:
          allOf:
          - $ref: '#/components/schemas/RemoteNetworkConfigRequest'
          description: The configuration in the cluster for EKS Hybrid Nodes. You
            can add, change, or remove this configuration after the cluster is created.
        computeConfig:
          allOf:
          - $ref: '#/components/schemas/ComputeConfigRequest'
          description: Enable or disable the compute capability of EKS Auto Mode when
            creating your EKS Auto Mode cluster. If the compute capability is enabled,
            EKS Auto Mode will create and delete EC2 Managed Instances in your Amazon
            Web Services account
        storageConfig:
          allOf:
          - $ref: '#/components/schemas/StorageConfigRequest'
          description: Enable or disable the block storage capability of EKS Auto
            Mode when creating your EKS Auto Mode cluster. If the block storage capability
            is enabled, EKS Auto Mode will create and delete EBS volumes in your Amazon
            Web Services account.
      required:
      - name
      - roleArn
      - resourcesVpcConfig
    CreateClusterResponse:
      type: object
      properties:
        cluster:
          allOf:
          - $ref: '#/components/schemas/Cluster'
          description: The full description of your new cluster.
    CreateEksAnywhereSubscriptionRequest:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/EksAnywhereSubscriptionName'
          description: The unique name for your subscription. It must be unique in
            your Amazon Web Services account in the Amazon Web Services Region you're
            creating the subscription in. The name can contain only alphanumeric characters
            (case-sensitive), hyphens, and underscores. It must start with an alphabetic
            character and can't be longer than 100 characters.
        term:
          allOf:
          - $ref: '#/components/schemas/EksAnywhereSubscriptionTerm'
          description: An object representing the term duration and term unit type
            of your subscription. This determines the term length of your subscription.
            Valid values are MONTHS for term unit and 12 or 36 for term duration,
            indicating a 12 month or 36 month subscription. This value cannot be changed
            after creating the subscription.
        licenseQuantity:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of licenses to purchase with the subscription. Valid
            values are between 1 and 100. This value can't be changed after creating
            the subscription.
        licenseType:
          allOf:
          - $ref: '#/components/schemas/EksAnywhereSubscriptionLicenseType'
          description: The license type for all licenses in the subscription. Valid
            value is CLUSTER. With the CLUSTER license type, each license covers support
            for a single EKS Anywhere cluster.
        autoRenew:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: A boolean indicating whether the subscription auto renews at
            the end of the term.
        clientRequestToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The metadata for a subscription to assist with categorization
            and organization. Each tag consists of a key and an optional value. Subscription
            tags don't propagate to any other resources associated with the subscription.
      required:
      - name
      - term
    CreateEksAnywhereSubscriptionResponse:
      type: object
      properties:
        subscription:
          allOf:
          - $ref: '#/components/schemas/EksAnywhereSubscription'
          description: The full description of the subscription.
    CreateFargateProfileRequest:
      type: object
      properties:
        fargateProfileName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the Fargate profile.
        clusterName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of your cluster.
        podExecutionRoleArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) of the `Pod` execution role
            to use for a `Pod` that matches the selectors in the Fargate profile.
            The `Pod` execution role allows Fargate infrastructure to register with
            your cluster as a node, and it provides read access to Amazon ECR image
            repositories. For more information, see [ `Pod` execution role](https://docs.aws.amazon.com/eks/latest/userguide/pod-execution-role.html)
            in the _Amazon EKS User Guide_.
        subnets:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: The IDs of subnets to launch a `Pod` into. A `Pod` running
            on Fargate isn't assigned a public IP address, so only private subnets
            (with no direct route to an Internet Gateway) are accepted for this parameter.
        selectors:
          allOf:
          - $ref: '#/components/schemas/FargateProfileSelectors'
          description: The selectors to match for a `Pod` to use this Fargate profile.
            Each selector must have an associated Kubernetes `namespace`. Optionally,
            you can also specify `labels` for a `namespace`. You may specify up to
            five selectors in a Fargate profile.
        clientRequestToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: Metadata that assists with categorization and organization.
            Each tag consists of a key and an optional value. You define both. Tags
            don't propagate to any other cluster or Amazon Web Services resources.
      required:
      - fargateProfileName
      - clusterName
      - podExecutionRoleArn
    CreateFargateProfileResponse:
      type: object
      properties:
        fargateProfile:
          allOf:
          - $ref: '#/components/schemas/FargateProfile'
          description: The full description of your new Fargate profile.
    CreateNodegroupRequest:
      type: object
      properties:
        clusterName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of your cluster.
        nodegroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique name to give your node group.
        scalingConfig:
          allOf:
          - $ref: '#/components/schemas/NodegroupScalingConfig'
          description: The scaling configuration details for the Auto Scaling group
            that is created for your node group.
        diskSize:
          allOf:
          - $ref: '#/components/schemas/BoxedInteger'
          description: The root device disk size (in GiB) for your node group instances.
            The default disk size is 20 GiB for Linux and Bottlerocket. The default
            disk size is 50 GiB for Windows. If you specify `launchTemplate`, then
            don't specify `diskSize`, or the node group deployment will fail. For
            more information about using launch templates with Amazon EKS, see [Customizing
            managed nodes with launch templates](https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html)
            in the _Amazon EKS User Guide_.
        subnets:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: The subnets to use for the Auto Scaling group that is created
            for your node group. If you specify `launchTemplate`, then don't specify
            ` [SubnetId](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateNetworkInterface.html)
            ` in your launch template, or the node group deployment will fail. For
            more information about using launch templates with Amazon EKS, see [Customizing
            managed nodes with launch templates](https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html)
            in the _Amazon EKS User Guide_.
        instanceTypes:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: Specify the instance types for a node group. If you specify
            a GPU instance type, make sure to also specify an applicable GPU AMI type
            with the `amiType` parameter. If you specify `launchTemplate`, then you
            can specify zero or one instance type in your launch template _or_ you
            can specify 0-20 instance types for `instanceTypes`. If however, you specify
            an instance type in your launch template _and_ specify any `instanceTypes`,
            the node group deployment will fail. If you don't specify an instance
            type in a launch template or for `instanceTypes`, then `t3.medium` is
            used, by default. If you specify `Spot` for `capacityType`, then we recommend
            specifying multiple values for `instanceTypes`. For more information,
            see [Managed node group capacity types](https://docs.aws.amazon.com/eks/latest/userguide/managed-node-groups.html#managed-node-group-capacity-types)
            and [Customizing managed nodes with launch templates](https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html)
            in the _Amazon EKS User Guide_.
        amiType:
          allOf:
          - $ref: '#/components/schemas/AMITypes'
          description: The AMI type for your node group. If you specify `launchTemplate`,
            and your launch template uses a custom AMI, then don't specify `amiType`,
            or the node group deployment will fail. If your launch template uses a
            Windows custom AMI, then add `eks:kube-proxy-windows` to your Windows
            nodes `rolearn` in the `aws-auth` `ConfigMap`. For more information about
            using launch templates with Amazon EKS, see [Customizing managed nodes
            with launch templates](https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html)
            in the _Amazon EKS User Guide_.
        remoteAccess:
          allOf:
          - $ref: '#/components/schemas/RemoteAccessConfig'
          description: The remote access configuration to use with your node group.
            For Linux, the protocol is SSH. For Windows, the protocol is RDP. If you
            specify `launchTemplate`, then don't specify `remoteAccess`, or the node
            group deployment will fail. For more information about using launch templates
            with Amazon EKS, see [Customizing managed nodes with launch templates](https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html)
            in the _Amazon EKS User Guide_.
        nodeRole:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) of the IAM role to associate
            with your node group. The Amazon EKS worker node `kubelet` daemon makes
            calls to Amazon Web Services APIs on your behalf. Nodes receive permissions
            for these API calls through an IAM instance profile and associated policies.
            Before you can launch nodes and register them into a cluster, you must
            create an IAM role for those nodes to use when they are launched. For
            more information, see [Amazon EKS node IAM role](https://docs.aws.amazon.com/eks/latest/userguide/create-node-role.html)
            in the __Amazon EKS User Guide_ _. If you specify `launchTemplate`, then
            don't specify ` [IamInstanceProfile](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_IamInstanceProfile.html)
            ` in your launch template, or the node group deployment will fail. For
            more information about using launch templates with Amazon EKS, see [Customizing
            managed nodes with launch templates](https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html)
            in the _Amazon EKS User Guide_.
        labels:
          allOf:
          - $ref: '#/components/schemas/labelsMap'
          description: The Kubernetes `labels` to apply to the nodes in the node group
            when they are created.
        taints:
          allOf:
          - $ref: '#/components/schemas/taintsList'
          description: The Kubernetes taints to be applied to the nodes in the node
            group. For more information, see [Node taints on managed node groups](https://docs.aws.amazon.com/eks/latest/userguide/node-taints-managed-node-groups.html).
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: Metadata that assists with categorization and organization.
            Each tag consists of a key and an optional value. You define both. Tags
            don't propagate to any other cluster or Amazon Web Services resources.
        clientRequestToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request.
        launchTemplate:
          allOf:
          - $ref: '#/components/schemas/LaunchTemplateSpecification'
          description: 'An object representing a node group''s launch template specification.
            When using this object, don''t directly specify `instanceTypes`, `diskSize`,
            or `remoteAccess`. You cannot later specify a different launch template
            ID or name than what was used to create the node group.


            Make sure that the launch template meets the requirements in `launchTemplateSpecification`.
            Also refer to [Customizing managed nodes with launch templates](https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html)
            in the _Amazon EKS User Guide_.'
        updateConfig:
          allOf:
          - $ref: '#/components/schemas/NodegroupUpdateConfig'
          description: The node group update configuration.
        nodeRepairConfig:
          allOf:
          - $ref: '#/components/schemas/NodeRepairConfig'
          description: The node auto repair configuration for the node group.
        capacityType:
          allOf:
          - $ref: '#/components/schemas/CapacityTypes'
          description: The capacity type for your node group.
        version:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Kubernetes version to use for your managed nodes. By default,
            the Kubernetes version of the cluster is used, and this is the only accepted
            specified value. If you specify `launchTemplate`, and your launch template
            uses a custom AMI, then don't specify `version`, or the node group deployment
            will fail. For more information about using launch templates with Amazon
            EKS, see [Customizing managed nodes with launch templates](https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html)
            in the _Amazon EKS User Guide_.
        releaseVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'The AMI version of the Amazon EKS optimized AMI to use with
            your node group. By default, the latest available AMI version for the
            node group''s current Kubernetes version is used. For information about
            Linux versions, see [Amazon EKS optimized Amazon Linux AMI versions](https://docs.aws.amazon.com/eks/latest/userguide/eks-linux-ami-versions.html)
            in the _Amazon EKS User Guide_. Amazon EKS managed node groups support
            the November 2022 and later releases of the Windows AMIs. For information
            about Windows versions, see [Amazon EKS optimized Windows AMI versions](https://docs.aws.amazon.com/eks/latest/userguide/eks-ami-versions-windows.html)
            in the _Amazon EKS User Guide_.


            If you specify `launchTemplate`, and your launch template uses a custom
            AMI, then don''t specify `releaseVersion`, or the node group deployment
            will fail. For more information about using launch templates with Amazon
            EKS, see [Customizing managed nodes with launch templates](https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html)
            in the _Amazon EKS User Guide_.'
      required:
      - clusterName
      - nodegroupName
      - subnets
      - nodeRole
    CreateNodegroupResponse:
      type: object
      properties:
        nodegroup:
          allOf:
          - $ref: '#/components/schemas/Nodegroup'
          description: The full description of your new node group.
    CreatePodIdentityAssociationRequest:
      type: object
      properties:
        clusterName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the cluster to create the association in.
        namespace:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the Kubernetes namespace inside the cluster to
            create the association in. The service account and the pods that use the
            service account must be in this namespace.
        serviceAccount:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the Kubernetes service account inside the cluster
            to associate the IAM credentials with.
        roleArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) of the IAM role to associate
            with the service account. The EKS Pod Identity agent manages credentials
            to assume this role for applications in the containers in the pods that
            use this service account.
        clientRequestToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: "Metadata that assists with categorization and organization.\
            \ Each tag consists of a key and an optional value. You define both. Tags\
            \ don't propagate to any other cluster or Amazon Web Services resources.\n\
            \nThe following basic restrictions apply to tags:\n\n  * Maximum number\
            \ of tags per resource – 50\n\n  * For each resource, each tag key must\
            \ be unique, and each tag key can have only one value.\n\n  * Maximum\
            \ key length – 128 Unicode characters in UTF-8\n\n  * Maximum value length\
            \ – 256 Unicode characters in UTF-8\n\n  * If your tagging schema is used\
            \ across multiple services and resources, remember that other services\
            \ may have restrictions on allowed characters. Generally allowed characters\
            \ are: letters, numbers, and spaces representable in UTF-8, and the following\
            \ characters: + - = . _ : / @.\n\n  * Tag keys and values are case-sensitive.\n\
            \n  * Do not use `aws:`, `AWS:`, or any upper or lowercase combination\
            \ of such as a prefix for either keys or values as it is reserved for\
            \ Amazon Web Services use. You cannot edit or delete tag keys or values\
            \ with this prefix. Tags with this prefix do not count against your tags\
            \ per resource limit."
      required:
      - clusterName
      - namespace
      - serviceAccount
      - roleArn
    CreatePodIdentityAssociationResponse:
      type: object
      properties:
        association:
          allOf:
          - $ref: '#/components/schemas/PodIdentityAssociation'
          description: 'The full description of your new association.


            The description includes an ID for the association. Use the ID of the
            association in further actions to manage the association.'
    DeleteAccessEntryRequest:
      type: object
      properties:
        clusterName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of your cluster.
        principalArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ARN of the IAM principal for the `AccessEntry`.
      required:
      - clusterName
      - principalArn
    DeleteAccessEntryResponse:
      type: object
      properties: {}
    DeleteAddonRequest:
      type: object
      properties:
        clusterName:
          allOf:
          - $ref: '#/components/schemas/ClusterName'
          description: The name of your cluster.
        addonName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the add-on. The name must match one of the names
            returned by [ `ListAddons` ](https://docs.aws.amazon.com/eks/latest/APIReference/API_ListAddons.html).
        preserve:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Specifying this option preserves the add-on software on your
            cluster but Amazon EKS stops managing any settings for the add-on. If
            an IAM account is associated with the add-on, it isn't removed.
      required:
      - clusterName
      - addonName
    DeleteAddonResponse:
      type: object
      properties:
        addon:
          $ref: '#/components/schemas/Addon'
    DeleteClusterRequest:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the cluster to delete.
      required:
      - name
    DeleteClusterResponse:
      type: object
      properties:
        cluster:
          allOf:
          - $ref: '#/components/schemas/Cluster'
          description: The full description of the cluster to delete.
    DeleteEksAnywhereSubscriptionRequest:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the subscription.
      required:
      - id
    DeleteEksAnywhereSubscriptionResponse:
      type: object
      properties:
        subscription:
          allOf:
          - $ref: '#/components/schemas/EksAnywhereSubscription'
          description: The full description of the subscription to be deleted.
    DeleteFargateProfileRequest:
      type: object
      properties:
        clusterName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of your cluster.
        fargateProfileName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the Fargate profile to delete.
      required:
      - clusterName
      - fargateProfileName
    DeleteFargateProfileResponse:
      type: object
      properties:
        fargateProfile:
          allOf:
          - $ref: '#/components/schemas/FargateProfile'
          description: The deleted Fargate profile.
    DeleteNodegroupRequest:
      type: object
      properties:
        clusterName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of your cluster.
        nodegroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the node group to delete.
      required:
      - clusterName
      - nodegroupName
    DeleteNodegroupResponse:
      type: object
      properties:
        nodegroup:
          allOf:
          - $ref: '#/components/schemas/Nodegroup'
          description: The full description of your deleted node group.
    DeletePodIdentityAssociationRequest:
      type: object
      properties:
        clusterName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The cluster name that
        associationId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the association to be deleted.
      required:
      - clusterName
      - associationId
    DeletePodIdentityAssociationResponse:
      type: object
      properties:
        association:
          allOf:
          - $ref: '#/components/schemas/PodIdentityAssociation'
          description: The full description of the EKS Pod Identity association that
            was deleted.
    DeprecationDetail:
      type: object
      properties:
        usage:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The deprecated version of the resource.
        replacedWith:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The newer version of the resource to migrate to if applicable.
        stopServingVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The version of the software where the deprecated resource version
            will stop being served.
        startServingReplacementVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The version of the software where the newer resource version
            became available to migrate to if applicable.
        clientStats:
          allOf:
          - $ref: '#/components/schemas/ClientStats'
          description: Details about Kubernetes clients using the deprecated resources.
      description: The summary information about deprecated resource usage for an
        insight check in the `UPGRADE_READINESS` category.
    DeprecationDetails:
      type: array
      items:
        $ref: '#/components/schemas/DeprecationDetail'
    DeregisterClusterRequest:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the connected cluster to deregister.
      required:
      - name
    DeregisterClusterResponse:
      type: object
      properties:
        cluster:
          $ref: '#/components/schemas/Cluster'
    DescribeAccessEntryRequest:
      type: object
      properties:
        clusterName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of your cluster.
        principalArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ARN of the IAM principal for the `AccessEntry`.
      required:
      - clusterName
      - principalArn
    DescribeAccessEntryResponse:
      type: object
      properties:
        accessEntry:
          allOf:
          - $ref: '#/components/schemas/AccessEntry'
          description: Information about the access entry.
    DescribeAddonConfigurationRequest:
      type: object
      properties:
        addonName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the add-on. The name must match one of the names
            returned by `DescribeAddonVersions`.
        addonVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The version of the add-on. The version must match one of the
            versions returned by [ `DescribeAddonVersions` ](https://docs.aws.amazon.com/eks/latest/APIReference/API_DescribeAddonVersions.html).
      required:
      - addonName
      - addonVersion
    DescribeAddonConfigurationResponse:
      type: object
      properties:
        addonName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the add-on.
        addonVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The version of the add-on. The version must match one of the
            versions returned by [ `DescribeAddonVersions` ](https://docs.aws.amazon.com/eks/latest/APIReference/API_DescribeAddonVersions.html).
        configurationSchema:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A JSON schema that's used to validate the configuration values
            you provide when an add-on is created or updated.
        podIdentityConfiguration:
          allOf:
          - $ref: '#/components/schemas/AddonPodIdentityConfigurationList'
          description: The Kubernetes service account name used by the addon, and
            any suggested IAM policies. Use this information to create an IAM Role
            for the Addon.
    DescribeAddonRequest:
      type: object
      properties:
        clusterName:
          allOf:
          - $ref: '#/components/schemas/ClusterName'
          description: The name of your cluster.
        addonName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the add-on. The name must match one of the names
            returned by [ `ListAddons` ](https://docs.aws.amazon.com/eks/latest/APIReference/API_ListAddons.html).
      required:
      - clusterName
      - addonName
    DescribeAddonResponse:
      type: object
      properties:
        addon:
          $ref: '#/components/schemas/Addon'
    DescribeAddonVersionsRequest:
      type: object
      properties:
        kubernetesVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Kubernetes versions that you can use the add-on with.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/DescribeAddonVersionsRequestMaxResults'
          description: The maximum number of results, returned in paginated output.
            You receive `maxResults` in a single page, along with a `nextToken` response
            element. You can see the remaining results of the initial request by sending
            another request with the returned `nextToken` value. This value can be
            between 1 and 100. If you don't use this parameter, 100 results and a
            `nextToken` value, if applicable, are returned.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'The `nextToken` value returned from a previous paginated request,
            where `maxResults` was used and the results exceeded the value of that
            parameter. Pagination continues from the end of the previous results that
            returned the `nextToken` value. This value is null when there are no more
            results to return.


            This token should be treated as an opaque identifier that is used only
            to retrieve the next items in a list and not for other programmatic purposes.'
        addonName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the add-on. The name must match one of the names
            returned by [ `ListAddons` ](https://docs.aws.amazon.com/eks/latest/APIReference/API_ListAddons.html).
        types:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: The type of the add-on. For valid `types`, don't specify a
            value for this property.
        publishers:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: The publisher of the add-on. For valid `publishers`, don't
            specify a value for this property.
        owners:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: The owner of the add-on. For valid `owners`, don't specify
            a value for this property.
    DescribeAddonVersionsRequestMaxResults:
      type: integer
      minimum: 1
      maximum: 100
    DescribeAddonVersionsResponse:
      type: object
      properties:
        addons:
          allOf:
          - $ref: '#/components/schemas/Addons'
          description: The list of available versions with Kubernetes version compatibility
            and other properties.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'The `nextToken` value to include in a future `DescribeAddonVersions`
            request. When the results of a `DescribeAddonVersions` request exceed
            `maxResults`, you can use this value to retrieve the next page of results.
            This value is `null` when there are no more results to return.


            This token should be treated as an opaque identifier that is used only
            to retrieve the next items in a list and not for other programmatic purposes.'
    DescribeClusterRequest:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of your cluster.
      required:
      - name
    DescribeClusterResponse:
      type: object
      properties:
        cluster:
          allOf:
          - $ref: '#/components/schemas/Cluster'
          description: The full description of your specified cluster.
    DescribeClusterVersionMaxResults:
      type: integer
      minimum: 1
      maximum: 100
    DescribeClusterVersionsRequest:
      type: object
      properties:
        clusterType:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The type of cluster to filter versions by.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/DescribeClusterVersionMaxResults'
          description: Maximum number of results to return.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Pagination token for the next set of results.
        defaultOnly:
          allOf:
          - $ref: '#/components/schemas/BoxedBoolean'
          description: Filter to show only default versions.
        includeAll:
          allOf:
          - $ref: '#/components/schemas/BoxedBoolean'
          description: Include all available versions in the response.
        clusterVersions:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: List of specific cluster versions to describe.
        status:
          allOf:
          - $ref: '#/components/schemas/ClusterVersionStatus'
          description: 'This field is deprecated. Use `versionStatus` instead, as
            that field matches for input and output of this action.


            Filter versions by their current status.'
        versionStatus:
          allOf:
          - $ref: '#/components/schemas/VersionStatus'
          description: Filter versions by their current status.
    DescribeClusterVersionsResponse:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Pagination token for the next set of results.
        clusterVersions:
          allOf:
          - $ref: '#/components/schemas/ClusterVersionList'
          description: List of cluster version information objects.
    DescribeEksAnywhereSubscriptionRequest:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the subscription.
      required:
      - id
    DescribeEksAnywhereSubscriptionResponse:
      type: object
      properties:
        subscription:
          allOf:
          - $ref: '#/components/schemas/EksAnywhereSubscription'
          description: The full description of the subscription.
    DescribeFargateProfileRequest:
      type: object
      properties:
        clusterName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of your cluster.
        fargateProfileName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the Fargate profile to describe.
      required:
      - clusterName
      - fargateProfileName
    DescribeFargateProfileResponse:
      type: object
      properties:
        fargateProfile:
          allOf:
          - $ref: '#/components/schemas/FargateProfile'
          description: The full description of your Fargate profile.
    DescribeIdentityProviderConfigRequest:
      type: object
      properties:
        clusterName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of your cluster.
        identityProviderConfig:
          allOf:
          - $ref: '#/components/schemas/IdentityProviderConfig'
          description: An object representing an identity provider configuration.
      required:
      - clusterName
      - identityProviderConfig
    DescribeIdentityProviderConfigResponse:
      type: object
      properties:
        identityProviderConfig:
          allOf:
          - $ref: '#/components/schemas/IdentityProviderConfigResponse'
          description: The object that represents an OpenID Connect (OIDC) identity
            provider configuration.
    DescribeInsightRequest:
      type: object
      properties:
        clusterName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the cluster to describe the insight for.
        id:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The identity of the insight to describe.
      required:
      - clusterName
      - id
    DescribeInsightResponse:
      type: object
      properties:
        insight:
          allOf:
          - $ref: '#/components/schemas/Insight'
          description: The full description of the insight.
    DescribeNodegroupRequest:
      type: object
      properties:
        clusterName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of your cluster.
        nodegroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the node group to describe.
      required:
      - clusterName
      - nodegroupName
    DescribeNodegroupResponse:
      type: object
      properties:
        nodegroup:
          allOf:
          - $ref: '#/components/schemas/Nodegroup'
          description: The full description of your node group.
    DescribePodIdentityAssociationRequest:
      type: object
      properties:
        clusterName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the cluster that the association is in.
        associationId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the association that you want the description of.
      required:
      - clusterName
      - associationId
    DescribePodIdentityAssociationResponse:
      type: object
      properties:
        association:
          allOf:
          - $ref: '#/components/schemas/PodIdentityAssociation'
          description: The full description of the EKS Pod Identity association.
    DescribeUpdateRequest:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the Amazon EKS cluster associated with the update.
        updateId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the update to describe.
        nodegroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the Amazon EKS node group associated with the update.
            This parameter is required if the update is a node group update.
        addonName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the add-on. The name must match one of the names
            returned by [ `ListAddons` ](https://docs.aws.amazon.com/eks/latest/APIReference/API_ListAddons.html).
            This parameter is required if the update is an add-on update.
      required:
      - name
      - updateId
      description: Describes an update request.
    DescribeUpdateResponse:
      type: object
      properties:
        update:
          allOf:
          - $ref: '#/components/schemas/Update'
          description: The full description of the specified update.
    DisassociateAccessPolicyRequest:
      type: object
      properties:
        clusterName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of your cluster.
        principalArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ARN of the IAM principal for the `AccessEntry`.
        policyArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ARN of the policy to disassociate from the access entry.
            For a list of associated policies ARNs, use `ListAssociatedAccessPolicies`.
      required:
      - clusterName
      - principalArn
      - policyArn
    DisassociateAccessPolicyResponse:
      type: object
      properties: {}
    DisassociateIdentityProviderConfigRequest:
      type: object
      properties:
        clusterName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of your cluster.
        identityProviderConfig:
          allOf:
          - $ref: '#/components/schemas/IdentityProviderConfig'
          description: An object representing an identity provider configuration.
        clientRequestToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request.
      required:
      - clusterName
      - identityProviderConfig
    DisassociateIdentityProviderConfigResponse:
      type: object
      properties:
        update:
          $ref: '#/components/schemas/Update'
    EksAnywhereSubscription:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/String'
          description: UUID identifying a subscription.
        arn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) for the subscription.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The Unix timestamp in seconds for when the subscription was
            created.
        effectiveDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The Unix timestamp in seconds for when the subscription is
            effective.
        expirationDate:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The Unix timestamp in seconds for when the subscription will
            expire or auto renew, depending on the auto renew configuration of the
            subscription object.
        licenseQuantity:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of licenses included in a subscription. Valid values
            are between 1 and 100.
        licenseType:
          allOf:
          - $ref: '#/components/schemas/EksAnywhereSubscriptionLicenseType'
          description: The type of licenses included in the subscription. Valid value
            is CLUSTER. With the CLUSTER license type, each license covers support
            for a single EKS Anywhere cluster.
        term:
          allOf:
          - $ref: '#/components/schemas/EksAnywhereSubscriptionTerm'
          description: An EksAnywhereSubscriptionTerm object.
        status:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The status of a subscription.
        autoRenew:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: A boolean indicating whether or not a subscription will auto
            renew when it expires.
        licenseArns:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: Amazon Web Services License Manager ARN associated with the
            subscription.
        licenses:
          allOf:
          - $ref: '#/components/schemas/LicenseList'
          description: Includes all of the claims in the license token necessary to
            validate the license for extended support.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The metadata for a subscription to assist with categorization
            and organization. Each tag consists of a key and an optional value. Subscription
            tags do not propagate to any other resources associated with the subscription.
      description: An EKS Anywhere subscription authorizing the customer to support
        for licensed clusters and access to EKS Anywhere Curated Packages.
    EksAnywhereSubscriptionLicenseType:
      type: string
      enum:
      - Cluster
    EksAnywhereSubscriptionList:
      type: array
      items:
        $ref: '#/components/schemas/EksAnywhereSubscription'
    EksAnywhereSubscriptionName:
      type: string
      pattern: ^[0-9A-Za-z][A-Za-z0-9\-_]*$
      minLength: 1
      maxLength: 100
    EksAnywhereSubscriptionStatus:
      type: string
      enum:
      - CREATING
      - ACTIVE
      - UPDATING
      - EXPIRING
      - EXPIRED
      - DELETING
    EksAnywhereSubscriptionStatusValues:
      type: array
      items:
        $ref: '#/components/schemas/EksAnywhereSubscriptionStatus'
    EksAnywhereSubscriptionTerm:
      type: object
      properties:
        duration:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The duration of the subscription term. Valid values are 12
            and 36, indicating a 12 month or 36 month subscription.
        unit:
          allOf:
          - $ref: '#/components/schemas/EksAnywhereSubscriptionTermUnit'
          description: The term unit of the subscription. Valid value is `MONTHS`.
      description: An object representing the term duration and term unit type of
        your subscription. This determines the term length of your subscription. Valid
        values are MONTHS for term unit and 12 or 36 for term duration, indicating
        a 12 month or 36 month subscription.
    EksAnywhereSubscriptionTermUnit:
      type: string
      enum:
      - MONTHS
    ElasticLoadBalancing:
      type: object
      properties:
        enabled:
          allOf:
          - $ref: '#/components/schemas/BoxedBoolean'
          description: Indicates if the load balancing capability is enabled on your
            EKS Auto Mode cluster. If the load balancing capability is enabled, EKS
            Auto Mode will create and delete load balancers in your Amazon Web Services
            account.
      description: Indicates the current configuration of the load balancing capability
        on your EKS Auto Mode cluster. For example, if the capability is enabled or
        disabled. For more information, see EKS Auto Mode load balancing capability
        in the _Amazon EKS User Guide_.
    EncryptionConfig:
      type: object
      properties:
        resources:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: Specifies the resources to be encrypted. The only supported
            value is `secrets`.
        provider:
          allOf:
          - $ref: '#/components/schemas/Provider'
          description: Key Management Service (KMS) key. Either the ARN or the alias
            can be used.
      description: The encryption configuration for the cluster.
    EncryptionConfigList:
      type: array
      items:
        $ref: '#/components/schemas/EncryptionConfig'
    ErrorCode:
      type: string
      enum:
      - SubnetNotFound
      - SecurityGroupNotFound
      - EniLimitReached
      - IpNotAvailable
      - AccessDenied
      - OperationNotPermitted
      - VpcIdNotFound
      - Unknown
      - NodeCreationFailure
      - PodEvictionFailure
      - InsufficientFreeAddresses
      - ClusterUnreachable
      - InsufficientNumberOfReplicas
      - ConfigurationConflict
      - AdmissionRequestDenied
      - UnsupportedAddonModification
      - K8sResourceNotFound
    ErrorDetail:
      type: object
      properties:
        errorCode:
          allOf:
          - $ref: '#/components/schemas/ErrorCode'
          description: "A brief description of the error.\n\n  * **SubnetNotFound**\
            \ : We couldn't find one of the subnets associated with the cluster.\n\
            \n  * **SecurityGroupNotFound** : We couldn't find one of the security\
            \ groups associated with the cluster.\n\n  * **EniLimitReached** : You\
            \ have reached the elastic network interface limit for your account.\n\
            \n  * **IpNotAvailable** : A subnet associated with the cluster doesn't\
            \ have any available IP addresses.\n\n  * **AccessDenied** : You don't\
            \ have permissions to perform the specified operation.\n\n  * **OperationNotPermitted**\
            \ : The service role associated with the cluster doesn't have the required\
            \ access permissions for Amazon EKS.\n\n  * **VpcIdNotFound** : We couldn't\
            \ find the VPC associated with the cluster."
        errorMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A more complete description of the error.
        resourceIds:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: An optional field that contains the resource IDs associated
            with the error.
      description: An object representing an error when an asynchronous operation
        fails.
    ErrorDetails:
      type: array
      items:
        $ref: '#/components/schemas/ErrorDetail'
    FargateProfile:
      type: object
      properties:
        fargateProfileName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the Fargate profile.
        fargateProfileArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The full Amazon Resource Name (ARN) of the Fargate profile.
        clusterName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of your cluster.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The Unix epoch timestamp at object creation.
        podExecutionRoleArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) of the `Pod` execution role
            to use for any `Pod` that matches the selectors in the Fargate profile.
            For more information, see [ `Pod` execution role](https://docs.aws.amazon.com/eks/latest/userguide/pod-execution-role.html)
            in the _Amazon EKS User Guide_.
        subnets:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: The IDs of subnets to launch a `Pod` into.
        selectors:
          allOf:
          - $ref: '#/components/schemas/FargateProfileSelectors'
          description: The selectors to match for a `Pod` to use this Fargate profile.
        status:
          allOf:
          - $ref: '#/components/schemas/FargateProfileStatus'
          description: The current status of the Fargate profile.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: Metadata that assists with categorization and organization.
            Each tag consists of a key and an optional value. You define both. Tags
            don't propagate to any other cluster or Amazon Web Services resources.
        health:
          allOf:
          - $ref: '#/components/schemas/FargateProfileHealth'
          description: The health status of the Fargate profile. If there are issues
            with your Fargate profile's health, they are listed here.
      description: An object representing an Fargate profile.
    FargateProfileHealth:
      type: object
      properties:
        issues:
          allOf:
          - $ref: '#/components/schemas/FargateProfileIssueList'
          description: Any issues that are associated with the Fargate profile.
      description: The health status of the Fargate profile. If there are issues with
        your Fargate profile's health, they are listed here.
    FargateProfileIssue:
      type: object
      properties:
        code:
          allOf:
          - $ref: '#/components/schemas/FargateProfileIssueCode'
          description: A brief description of the error.
        message:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The error message associated with the issue.
        resourceIds:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: The Amazon Web Services resources that are affected by this
            issue.
      description: An issue that is associated with the Fargate profile.
    FargateProfileIssueCode:
      type: string
      enum:
      - PodExecutionRoleAlreadyInUse
      - AccessDenied
      - ClusterUnreachable
      - InternalFailure
    FargateProfileIssueList:
      type: array
      items:
        $ref: '#/components/schemas/FargateProfileIssue'
    FargateProfileLabel:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/String'
    FargateProfileSelector:
      type: object
      properties:
        namespace:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Kubernetes `namespace` that the selector should match.
        labels:
          allOf:
          - $ref: '#/components/schemas/FargateProfileLabel'
          description: The Kubernetes labels that the selector should match. A pod
            must contain all of the labels that are specified in the selector for
            it to be considered a match.
      description: An object representing an Fargate profile selector.
    FargateProfileSelectors:
      type: array
      items:
        $ref: '#/components/schemas/FargateProfileSelector'
    FargateProfileStatus:
      type: string
      enum:
      - CREATING
      - ACTIVE
      - DELETING
      - CREATE_FAILED
      - DELETE_FAILED
    FargateProfilesRequestMaxResults:
      type: integer
      minimum: 1
      maximum: 100
    Identity:
      type: object
      properties:
        oidc:
          allOf:
          - $ref: '#/components/schemas/OIDC'
          description: An object representing the [OpenID Connect](https://openid.net/connect/)
            identity provider information.
      description: An object representing an identity provider.
    IdentityProviderConfig:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The type of the identity provider configuration. The only type
            available is `oidc`.
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the identity provider configuration.
      required:
      - type
      - name
      description: An object representing an identity provider configuration.
    IdentityProviderConfigResponse:
      type: object
      properties:
        oidc:
          allOf:
          - $ref: '#/components/schemas/OidcIdentityProviderConfig'
          description: An object representing an OpenID Connect (OIDC) identity provider
            configuration.
      description: The full description of your identity configuration.
    IdentityProviderConfigs:
      type: array
      items:
        $ref: '#/components/schemas/IdentityProviderConfig'
    IncludeClustersList:
      type: array
      items:
        $ref: '#/components/schemas/String'
    Insight:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the insight.
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the insight.
        category:
          allOf:
          - $ref: '#/components/schemas/Category'
          description: The category of the insight.
        kubernetesVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Kubernetes minor version associated with an insight if
            applicable.
        lastRefreshTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time Amazon EKS last successfully completed a refresh of
            this insight check on the cluster.
        lastTransitionTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time the status of the insight last changed.
        description:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The description of the insight which includes alert criteria,
            remediation recommendation, and additional resources (contains Markdown).
        insightStatus:
          allOf:
          - $ref: '#/components/schemas/InsightStatus'
          description: An object containing more detail on the status of the insight
            resource.
        recommendation:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A summary of how to remediate the finding of this insight if
            applicable.
        additionalInfo:
          allOf:
          - $ref: '#/components/schemas/AdditionalInfoMap'
          description: Links to sources that provide additional context on the insight.
        resources:
          allOf:
          - $ref: '#/components/schemas/InsightResourceDetails'
          description: The details about each resource listed in the insight check
            result.
        categorySpecificSummary:
          allOf:
          - $ref: '#/components/schemas/InsightCategorySpecificSummary'
          description: Summary information that relates to the category of the insight.
            Currently only returned with certain insights having category `UPGRADE_READINESS`.
      description: A check that provides recommendations to remedy potential upgrade-impacting
        issues.
    InsightCategorySpecificSummary:
      type: object
      properties:
        deprecationDetails:
          allOf:
          - $ref: '#/components/schemas/DeprecationDetails'
          description: The summary information about deprecated resource usage for
            an insight check in the `UPGRADE_READINESS` category.
        addonCompatibilityDetails:
          allOf:
          - $ref: '#/components/schemas/AddonCompatibilityDetails'
          description: A list of `AddonCompatibilityDetail` objects for Amazon EKS
            add-ons.
      description: Summary information that relates to the category of the insight.
        Currently only returned with certain insights having category `UPGRADE_READINESS`.
    InsightResourceDetail:
      type: object
      properties:
        insightStatus:
          allOf:
          - $ref: '#/components/schemas/InsightStatus'
          description: An object containing more detail on the status of the insight
            resource.
        kubernetesResourceUri:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Kubernetes resource URI if applicable.
        arn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) if applicable.
      description: Returns information about the resource being evaluated.
    InsightResourceDetails:
      type: array
      items:
        $ref: '#/components/schemas/InsightResourceDetail'
    InsightStatus:
      type: object
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/InsightStatusValue'
          description: The status of the resource.
        reason:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Explanation on the reasoning for the status of the resource.
      description: The status of the insight.
    InsightStatusValue:
      type: string
      enum:
      - PASSING
      - WARNING
      - ERROR
      - UNKNOWN
    InsightStatusValueList:
      type: array
      items:
        $ref: '#/components/schemas/InsightStatusValue'
    InsightSummaries:
      type: array
      items:
        $ref: '#/components/schemas/InsightSummary'
    InsightSummary:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the insight.
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the insight.
        category:
          allOf:
          - $ref: '#/components/schemas/Category'
          description: The category of the insight.
        kubernetesVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Kubernetes minor version associated with an insight if
            applicable.
        lastRefreshTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time Amazon EKS last successfully completed a refresh of
            this insight check on the cluster.
        lastTransitionTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time the status of the insight last changed.
        description:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The description of the insight which includes alert criteria,
            remediation recommendation, and additional resources (contains Markdown).
        insightStatus:
          allOf:
          - $ref: '#/components/schemas/InsightStatus'
          description: An object containing more detail on the status of the insight.
      description: The summarized description of the insight.
    InsightsFilter:
      type: object
      properties:
        categories:
          allOf:
          - $ref: '#/components/schemas/CategoryList'
          description: The categories to use to filter insights.
        kubernetesVersions:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: The Kubernetes versions to use to filter the insights.
        statuses:
          allOf:
          - $ref: '#/components/schemas/InsightStatusValueList'
          description: The statuses to use to filter the insights.
      description: The criteria to use for the insights.
    Integer:
      type: integer
      default: 0
    InvalidParameterException:
      type: object
      properties:
        clusterName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon EKS cluster associated with the exception.
        nodegroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon EKS managed node group associated with the exception.
        fargateProfileName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Fargate profile associated with the exception.
        addonName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The specified parameter for the add-on name is invalid. Review
            the available parameters for the API request
        subscriptionId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon EKS subscription ID with the exception.
        message:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The specified parameter is invalid. Review the available parameters
            for the API request.
      description: The specified parameter is invalid. Review the available parameters
        for the API request.
    InvalidRequestException:
      type: object
      properties:
        clusterName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon EKS cluster associated with the exception.
        nodegroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon EKS managed node group associated with the exception.
        addonName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The request is invalid given the state of the add-on name.
            Check the state of the cluster and the associated operations.
        subscriptionId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon EKS subscription ID with the exception.
        message:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon EKS add-on name associated with the exception.
      description: The request is invalid given the state of the cluster. Check the
        state of the cluster and the associated operations.
    InvalidStateException:
      type: object
      properties:
        clusterName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon EKS cluster associated with the exception.
        message:
          $ref: '#/components/schemas/String'
      description: Amazon EKS detected upgrade readiness issues. Call the [ `ListInsights`
        ](https://docs.aws.amazon.com/eks/latest/APIReference/API_ListInsights.html)
        API to view detected upgrade blocking issues. Pass the [ `force` ](https://docs.aws.amazon.com/eks/latest/APIReference/API_UpdateClusterVersion.html#API_UpdateClusterVersion_RequestBody)
        flag when updating to override upgrade readiness errors.
    IpFamily:
      type: string
      enum:
      - ipv4
      - ipv6
    Issue:
      type: object
      properties:
        code:
          allOf:
          - $ref: '#/components/schemas/NodegroupIssueCode'
          description: "A brief description of the error.\n\n  * **AccessDenied**\
            \ : Amazon EKS or one or more of your managed nodes is failing to authenticate\
            \ or authorize with your Kubernetes cluster API server.\n\n  * **AsgInstanceLaunchFailures**\
            \ : Your Auto Scaling group is experiencing failures while attempting\
            \ to launch instances.\n\n  * **AutoScalingGroupNotFound** : We couldn't\
            \ find the Auto Scaling group associated with the managed node group.\
            \ You may be able to recreate an Auto Scaling group with the same settings\
            \ to recover.\n\n  * **ClusterUnreachable** : Amazon EKS or one or more\
            \ of your managed nodes is unable to to communicate with your Kubernetes\
            \ cluster API server. This can happen if there are network disruptions\
            \ or if API servers are timing out processing requests. \n\n  * **Ec2InstanceTypeDoesNotExist**\
            \ : One or more of the supplied Amazon EC2 instance types do not exist.\
            \ Amazon EKS checked for the instance types that you provided in this\
            \ Amazon Web Services Region, and one or more aren't available.\n\n  *\
            \ **Ec2LaunchTemplateNotFound** : We couldn't find the Amazon EC2 launch\
            \ template for your managed node group. You may be able to recreate a\
            \ launch template with the same settings to recover.\n\n  * **Ec2LaunchTemplateVersionMismatch**\
            \ : The Amazon EC2 launch template version for your managed node group\
            \ does not match the version that Amazon EKS created. You may be able\
            \ to revert to the version that Amazon EKS created to recover.\n\n  *\
            \ **Ec2SecurityGroupDeletionFailure** : We could not delete the remote\
            \ access security group for your managed node group. Remove any dependencies\
            \ from the security group.\n\n  * **Ec2SecurityGroupNotFound** : We couldn't\
            \ find the cluster security group for the cluster. You must recreate your\
            \ cluster.\n\n  * **Ec2SubnetInvalidConfiguration** : One or more Amazon\
            \ EC2 subnets specified for a node group do not automatically assign public\
            \ IP addresses to instances launched into it. If you want your instances\
            \ to be assigned a public IP address, then you need to enable the `auto-assign\
            \ public IP address` setting for the subnet. See [Modifying the public\
            \ `IPv4` addressing attribute for your subnet](https://docs.aws.amazon.com/vpc/latest/userguide/vpc-ip-addressing.html#subnet-public-ip)\
            \ in the _Amazon VPC User Guide_.\n\n  * **IamInstanceProfileNotFound**\
            \ : We couldn't find the IAM instance profile for your managed node group.\
            \ You may be able to recreate an instance profile with the same settings\
            \ to recover.\n\n  * **IamNodeRoleNotFound** : We couldn't find the IAM\
            \ role for your managed node group. You may be able to recreate an IAM\
            \ role with the same settings to recover.\n\n  * **InstanceLimitExceeded**\
            \ : Your Amazon Web Services account is unable to launch any more instances\
            \ of the specified instance type. You may be able to request an Amazon\
            \ EC2 instance limit increase to recover.\n\n  * **InsufficientFreeAddresses**\
            \ : One or more of the subnets associated with your managed node group\
            \ does not have enough available IP addresses for new nodes.\n\n  * **InternalFailure**\
            \ : These errors are usually caused by an Amazon EKS server-side issue.\n\
            \n  * **NodeCreationFailure** : Your launched instances are unable to\
            \ register with your Amazon EKS cluster. Common causes of this failure\
            \ are insufficient [node IAM role](https://docs.aws.amazon.com/eks/latest/userguide/create-node-role.html)\
            \ permissions or lack of outbound internet access for the nodes."
        message:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The error message associated with the issue.
        resourceIds:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: The Amazon Web Services resources that are afflicted by this
            issue.
      description: An object representing an issue with an Amazon EKS resource.
    IssueList:
      type: array
      items:
        $ref: '#/components/schemas/Issue'
    KubernetesNetworkConfigRequest:
      type: object
      properties:
        serviceIpv4Cidr:
          allOf:
          - $ref: '#/components/schemas/String'
          description: "Don't specify a value if you select `ipv6` for **ipFamily**.\
            \ The CIDR block to assign Kubernetes service IP addresses from. If you\
            \ don't specify a block, Kubernetes assigns addresses from either the\
            \ `10.100.0.0/16` or `172.20.0.0/16` CIDR blocks. We recommend that you\
            \ specify a block that does not overlap with resources in other networks\
            \ that are peered or connected to your VPC. The block must meet the following\
            \ requirements:\n\n  * Within one of the following private IP address\
            \ blocks: `10.0.0.0/8`, `172.16.0.0/12`, or `192.168.0.0/16`.\n\n  * Doesn't\
            \ overlap with any CIDR block assigned to the VPC that you selected for\
            \ VPC.\n\n  * Between `/24` and `/12`.\n\nYou can only specify a custom\
            \ CIDR block when you create a cluster. You can't change this value after\
            \ the cluster is created."
        ipFamily:
          allOf:
          - $ref: '#/components/schemas/IpFamily'
          description: 'Specify which IP family is used to assign Kubernetes pod and
            service IP addresses. If you don''t specify a value, `ipv4` is used by
            default. You can only specify an IP family when you create a cluster and
            can''t change this value once the cluster is created. If you specify `ipv6`,
            the VPC and subnets that you specify for cluster creation must have both
            `IPv4` and `IPv6` CIDR blocks assigned to them. You can''t specify `ipv6`
            for clusters in China Regions.


            You can only specify `ipv6` for `1.21` and later clusters that use version
            `1.10.1` or later of the Amazon VPC CNI add-on. If you specify `ipv6`,
            then ensure that your VPC meets the requirements listed in the considerations
            listed in [Assigning IPv6 addresses to pods and services](https://docs.aws.amazon.com/eks/latest/userguide/cni-ipv6.html)
            in the _Amazon EKS User Guide_. Kubernetes assigns services `IPv6` addresses
            from the unique local address range `(fc00::/7)`. You can''t specify a
            custom `IPv6` CIDR block. Pod addresses are assigned from the subnet''s
            `IPv6` CIDR.'
        elasticLoadBalancing:
          allOf:
          - $ref: '#/components/schemas/ElasticLoadBalancing'
          description: Request to enable or disable the load balancing capability
            on your EKS Auto Mode cluster. For more information, see EKS Auto Mode
            load balancing capability in the _Amazon EKS User Guide_.
      description: The Kubernetes network configuration for the cluster.
    KubernetesNetworkConfigResponse:
      type: object
      properties:
        serviceIpv4Cidr:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The CIDR block that Kubernetes `Pod` and `Service` object IP
            addresses are assigned from. Kubernetes assigns addresses from an `IPv4`
            CIDR block assigned to a subnet that the node is in. If you didn't specify
            a CIDR block when you created the cluster, then Kubernetes assigns addresses
            from either the `10.100.0.0/16` or `172.20.0.0/16` CIDR blocks. If this
            was specified, then it was specified when the cluster was created and
            it can't be changed.
        serviceIpv6Cidr:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The CIDR block that Kubernetes pod and service IP addresses
            are assigned from if you created a 1.21 or later cluster with version
            1.10.1 or later of the Amazon VPC CNI add-on and specified `ipv6` for
            **ipFamily** when you created the cluster. Kubernetes assigns service
            addresses from the unique local address range (`fc00::/7`) because you
            can't specify a custom IPv6 CIDR block when you create the cluster.
        ipFamily:
          allOf:
          - $ref: '#/components/schemas/IpFamily'
          description: The IP family used to assign Kubernetes `Pod` and `Service`
            objects IP addresses. The IP family is always `ipv4`, unless you have
            a `1.21` or later cluster running version `1.10.1` or later of the Amazon
            VPC CNI plugin for Kubernetes and specified `ipv6` when you created the
            cluster.
        elasticLoadBalancing:
          allOf:
          - $ref: '#/components/schemas/ElasticLoadBalancing'
          description: Indicates the current configuration of the load balancing capability
            on your EKS Auto Mode cluster. For example, if the capability is enabled
            or disabled.
      description: The Kubernetes network configuration for the cluster. The response
        contains a value for **serviceIpv6Cidr** or **serviceIpv4Cidr** , but not
        both.
    LaunchTemplateSpecification:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'The name of the launch template.


            You must specify either the launch template name or the launch template
            ID in the request, but not both. After node group creation, you cannot
            use a different name.'
        version:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The version number of the launch template to use. If no version
            is specified, then the template's default version is used. You can use
            a different version for node group updates.
        id:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'The ID of the launch template.


            You must specify either the launch template ID or the launch template
            name in the request, but not both. After node group creation, you cannot
            use a different ID.'
      description: 'An object representing a node group launch template specification.
        The launch template can''t include [ `SubnetId` ](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateNetworkInterface.html),
        [ `IamInstanceProfile` ](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_IamInstanceProfile.html),
        [ `RequestSpotInstances` ](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RequestSpotInstances.html),
        [ `HibernationOptions` ](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_HibernationOptionsRequest.html),
        or [ `TerminateInstances` ](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_TerminateInstances.html),
        or the node group deployment or update will fail. For more information about
        launch templates, see [ `CreateLaunchTemplate` ](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateLaunchTemplate.html)
        in the Amazon EC2 API Reference. For more information about using launch templates
        with Amazon EKS, see [Customizing managed nodes with launch templates](https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html)
        in the _Amazon EKS User Guide_.


        You must specify either the launch template ID or the launch template name
        in the request, but not both.'
    License:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/String'
          description: An id associated with an EKS Anywhere subscription license.
        token:
          allOf:
          - $ref: '#/components/schemas/String'
          description: An optional license token that can be used for extended support
            verification.
      description: An EKS Anywhere license associated with a subscription.
    LicenseList:
      type: array
      items:
        $ref: '#/components/schemas/License'
    ListAccessEntriesRequest:
      type: object
      properties:
        clusterName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of your cluster.
        associatedPolicyArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ARN of an `AccessPolicy`. When you specify an access policy
            ARN, only the access entries associated to that access policy are returned.
            For a list of available policy ARNs, use `ListAccessPolicies`.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/ListAccessEntriesRequestMaxResults'
          description: The maximum number of results, returned in paginated output.
            You receive `maxResults` in a single page, along with a `nextToken` response
            element. You can see the remaining results of the initial request by sending
            another request with the returned `nextToken` value. This value can be
            between 1 and 100. If you don't use this parameter, 100 results and a
            `nextToken` value, if applicable, are returned.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'The `nextToken` value returned from a previous paginated request,
            where `maxResults` was used and the results exceeded the value of that
            parameter. Pagination continues from the end of the previous results that
            returned the `nextToken` value. This value is null when there are no more
            results to return.


            This token should be treated as an opaque identifier that is used only
            to retrieve the next items in a list and not for other programmatic purposes.'
      required:
      - clusterName
    ListAccessEntriesRequestMaxResults:
      type: integer
      minimum: 1
      maximum: 100
    ListAccessEntriesResponse:
      type: object
      properties:
        accessEntries:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: The list of access entries that exist for the cluster.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'The `nextToken` value returned from a previous paginated request,
            where `maxResults` was used and the results exceeded the value of that
            parameter. Pagination continues from the end of the previous results that
            returned the `nextToken` value. This value is null when there are no more
            results to return.


            This token should be treated as an opaque identifier that is used only
            to retrieve the next items in a list and not for other programmatic purposes.'
    ListAccessPoliciesRequest:
      type: object
      properties:
        maxResults:
          allOf:
          - $ref: '#/components/schemas/ListAccessPoliciesRequestMaxResults'
          description: The maximum number of results, returned in paginated output.
            You receive `maxResults` in a single page, along with a `nextToken` response
            element. You can see the remaining results of the initial request by sending
            another request with the returned `nextToken` value. This value can be
            between 1 and 100. If you don't use this parameter, 100 results and a
            `nextToken` value, if applicable, are returned.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'The `nextToken` value returned from a previous paginated request,
            where `maxResults` was used and the results exceeded the value of that
            parameter. Pagination continues from the end of the previous results that
            returned the `nextToken` value. This value is null when there are no more
            results to return.


            This token should be treated as an opaque identifier that is used only
            to retrieve the next items in a list and not for other programmatic purposes.'
    ListAccessPoliciesRequestMaxResults:
      type: integer
      minimum: 1
      maximum: 100
    ListAccessPoliciesResponse:
      type: object
      properties:
        accessPolicies:
          allOf:
          - $ref: '#/components/schemas/AccessPoliciesList'
          description: The list of available access policies. You can't view the contents
            of an access policy using the API. To view the contents, see [Access policy
            permissions](https://docs.aws.amazon.com/eks/latest/userguide/access-policies.html#access-policy-permissions)
            in the _Amazon EKS User Guide_.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'The `nextToken` value returned from a previous paginated request,
            where `maxResults` was used and the results exceeded the value of that
            parameter. Pagination continues from the end of the previous results that
            returned the `nextToken` value. This value is null when there are no more
            results to return.


            This token should be treated as an opaque identifier that is used only
            to retrieve the next items in a list and not for other programmatic purposes.'
    ListAddonsRequest:
      type: object
      properties:
        clusterName:
          allOf:
          - $ref: '#/components/schemas/ClusterName'
          description: The name of your cluster.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/ListAddonsRequestMaxResults'
          description: The maximum number of results, returned in paginated output.
            You receive `maxResults` in a single page, along with a `nextToken` response
            element. You can see the remaining results of the initial request by sending
            another request with the returned `nextToken` value. This value can be
            between 1 and 100. If you don't use this parameter, 100 results and a
            `nextToken` value, if applicable, are returned.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'The `nextToken` value returned from a previous paginated request,
            where `maxResults` was used and the results exceeded the value of that
            parameter. Pagination continues from the end of the previous results that
            returned the `nextToken` value. This value is null when there are no more
            results to return.


            This token should be treated as an opaque identifier that is used only
            to retrieve the next items in a list and not for other programmatic purposes.'
      required:
      - clusterName
    ListAddonsRequestMaxResults:
      type: integer
      minimum: 1
      maximum: 100
    ListAddonsResponse:
      type: object
      properties:
        addons:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: A list of installed add-ons.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'The `nextToken` value to include in a future `ListAddons`
            request. When the results of a `ListAddons` request exceed `maxResults`,
            you can use this value to retrieve the next page of results. This value
            is `null` when there are no more results to return.


            This token should be treated as an opaque identifier that is used only
            to retrieve the next items in a list and not for other programmatic purposes.'
    ListAssociatedAccessPoliciesRequest:
      type: object
      properties:
        clusterName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of your cluster.
        principalArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ARN of the IAM principal for the `AccessEntry`.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/ListAssociatedAccessPoliciesRequestMaxResults'
          description: The maximum number of results, returned in paginated output.
            You receive `maxResults` in a single page, along with a `nextToken` response
            element. You can see the remaining results of the initial request by sending
            another request with the returned `nextToken` value. This value can be
            between 1 and 100. If you don't use this parameter, 100 results and a
            `nextToken` value, if applicable, are returned.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'The `nextToken` value returned from a previous paginated request,
            where `maxResults` was used and the results exceeded the value of that
            parameter. Pagination continues from the end of the previous results that
            returned the `nextToken` value. This value is null when there are no more
            results to return.


            This token should be treated as an opaque identifier that is used only
            to retrieve the next items in a list and not for other programmatic purposes.'
      required:
      - clusterName
      - principalArn
    ListAssociatedAccessPoliciesRequestMaxResults:
      type: integer
      minimum: 1
      maximum: 100
    ListAssociatedAccessPoliciesResponse:
      type: object
      properties:
        clusterName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of your cluster.
        principalArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ARN of the IAM principal for the `AccessEntry`.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'The `nextToken` value returned from a previous paginated request,
            where `maxResults` was used and the results exceeded the value of that
            parameter. Pagination continues from the end of the previous results that
            returned the `nextToken` value. This value is null when there are no more
            results to return.


            This token should be treated as an opaque identifier that is used only
            to retrieve the next items in a list and not for other programmatic purposes.'
        associatedAccessPolicies:
          allOf:
          - $ref: '#/components/schemas/AssociatedAccessPoliciesList'
          description: The list of access policies associated with the access entry.
    ListClustersRequest:
      type: object
      properties:
        maxResults:
          allOf:
          - $ref: '#/components/schemas/ListClustersRequestMaxResults'
          description: The maximum number of results, returned in paginated output.
            You receive `maxResults` in a single page, along with a `nextToken` response
            element. You can see the remaining results of the initial request by sending
            another request with the returned `nextToken` value. This value can be
            between 1 and 100. If you don't use this parameter, 100 results and a
            `nextToken` value, if applicable, are returned.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'The `nextToken` value returned from a previous paginated request,
            where `maxResults` was used and the results exceeded the value of that
            parameter. Pagination continues from the end of the previous results that
            returned the `nextToken` value. This value is null when there are no more
            results to return.


            This token should be treated as an opaque identifier that is used only
            to retrieve the next items in a list and not for other programmatic purposes.'
        include:
          allOf:
          - $ref: '#/components/schemas/IncludeClustersList'
          description: Indicates whether external clusters are included in the returned
            list. Use '`all`' to return <https://docs.aws.amazon.com/eks/latest/userguide/eks-connector.html>connected
            clusters, or blank to return only Amazon EKS clusters. '`all`' must be
            in lowercase otherwise an error occurs.
    ListClustersRequestMaxResults:
      type: integer
      minimum: 1
      maximum: 100
    ListClustersResponse:
      type: object
      properties:
        clusters:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: A list of all of the clusters for your account in the specified
            Amazon Web Services Region .
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'The `nextToken` value returned from a previous paginated request,
            where `maxResults` was used and the results exceeded the value of that
            parameter. Pagination continues from the end of the previous results that
            returned the `nextToken` value. This value is null when there are no more
            results to return.


            This token should be treated as an opaque identifier that is used only
            to retrieve the next items in a list and not for other programmatic purposes.'
    ListEksAnywhereSubscriptionsRequest:
      type: object
      properties:
        maxResults:
          allOf:
          - $ref: '#/components/schemas/ListEksAnywhereSubscriptionsRequestMaxResults'
          description: The maximum number of cluster results returned by ListEksAnywhereSubscriptions
            in paginated output. When you use this parameter, ListEksAnywhereSubscriptions
            returns only maxResults results in a single page along with a nextToken
            response element. You can see the remaining results of the initial request
            by sending another ListEksAnywhereSubscriptions request with the returned
            nextToken value. This value can be between 1 and 100. If you don't use
            this parameter, ListEksAnywhereSubscriptions returns up to 10 results
            and a nextToken value if applicable.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The `nextToken` value returned from a previous paginated `ListEksAnywhereSubscriptions`
            request where `maxResults` was used and the results exceeded the value
            of that parameter. Pagination continues from the end of the previous results
            that returned the `nextToken` value.
        includeStatus:
          allOf:
          - $ref: '#/components/schemas/EksAnywhereSubscriptionStatusValues'
          description: An array of subscription statuses to filter on.
    ListEksAnywhereSubscriptionsRequestMaxResults:
      type: integer
      minimum: 1
      maximum: 100
    ListEksAnywhereSubscriptionsResponse:
      type: object
      properties:
        subscriptions:
          allOf:
          - $ref: '#/components/schemas/EksAnywhereSubscriptionList'
          description: A list of all subscription objects in the region, filtered
            by includeStatus and paginated by nextToken and maxResults.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The nextToken value to include in a future ListEksAnywhereSubscriptions
            request. When the results of a ListEksAnywhereSubscriptions request exceed
            maxResults, you can use this value to retrieve the next page of results.
            This value is null when there are no more results to return.
    ListFargateProfilesRequest:
      type: object
      properties:
        clusterName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of your cluster.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/FargateProfilesRequestMaxResults'
          description: The maximum number of results, returned in paginated output.
            You receive `maxResults` in a single page, along with a `nextToken` response
            element. You can see the remaining results of the initial request by sending
            another request with the returned `nextToken` value. This value can be
            between 1 and 100. If you don't use this parameter, 100 results and a
            `nextToken` value, if applicable, are returned.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'The `nextToken` value returned from a previous paginated request,
            where `maxResults` was used and the results exceeded the value of that
            parameter. Pagination continues from the end of the previous results that
            returned the `nextToken` value. This value is null when there are no more
            results to return.


            This token should be treated as an opaque identifier that is used only
            to retrieve the next items in a list and not for other programmatic purposes.'
      required:
      - clusterName
    ListFargateProfilesResponse:
      type: object
      properties:
        fargateProfileNames:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: A list of all of the Fargate profiles associated with the specified
            cluster.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'The `nextToken` value returned from a previous paginated request,
            where `maxResults` was used and the results exceeded the value of that
            parameter. Pagination continues from the end of the previous results that
            returned the `nextToken` value. This value is null when there are no more
            results to return.


            This token should be treated as an opaque identifier that is used only
            to retrieve the next items in a list and not for other programmatic purposes.'
    ListIdentityProviderConfigsRequest:
      type: object
      properties:
        clusterName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of your cluster.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/ListIdentityProviderConfigsRequestMaxResults'
          description: The maximum number of results, returned in paginated output.
            You receive `maxResults` in a single page, along with a `nextToken` response
            element. You can see the remaining results of the initial request by sending
            another request with the returned `nextToken` value. This value can be
            between 1 and 100. If you don't use this parameter, 100 results and a
            `nextToken` value, if applicable, are returned.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'The `nextToken` value returned from a previous paginated request,
            where `maxResults` was used and the results exceeded the value of that
            parameter. Pagination continues from the end of the previous results that
            returned the `nextToken` value. This value is null when there are no more
            results to return.


            This token should be treated as an opaque identifier that is used only
            to retrieve the next items in a list and not for other programmatic purposes.'
      required:
      - clusterName
    ListIdentityProviderConfigsRequestMaxResults:
      type: integer
      minimum: 1
      maximum: 100
    ListIdentityProviderConfigsResponse:
      type: object
      properties:
        identityProviderConfigs:
          allOf:
          - $ref: '#/components/schemas/IdentityProviderConfigs'
          description: The identity provider configurations for the cluster.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'The `nextToken` value to include in a future `ListIdentityProviderConfigsResponse`
            request. When the results of a `ListIdentityProviderConfigsResponse` request
            exceed `maxResults`, you can use this value to retrieve the next page
            of results. This value is `null` when there are no more results to return.


            This token should be treated as an opaque identifier that is used only
            to retrieve the next items in a list and not for other programmatic purposes.'
    ListInsightsMaxResults:
      type: integer
      minimum: 1
      maximum: 100
    ListInsightsRequest:
      type: object
      properties:
        clusterName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the Amazon EKS cluster associated with the insights.
        filter:
          allOf:
          - $ref: '#/components/schemas/InsightsFilter'
          description: The criteria to filter your list of insights for your cluster.
            You can filter which insights are returned by category, associated Kubernetes
            version, and status.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/ListInsightsMaxResults'
          description: The maximum number of identity provider configurations returned
            by `ListInsights` in paginated output. When you use this parameter, `ListInsights`
            returns only `maxResults` results in a single page along with a `nextToken`
            response element. You can see the remaining results of the initial request
            by sending another `ListInsights` request with the returned `nextToken`
            value. This value can be between 1 and 100. If you don't use this parameter,
            `ListInsights` returns up to 100 results and a `nextToken` value, if applicable.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The `nextToken` value returned from a previous paginated `ListInsights`
            request. When the results of a `ListInsights` request exceed `maxResults`,
            you can use this value to retrieve the next page of results. This value
            is `null` when there are no more results to return.
      required:
      - clusterName
    ListInsightsResponse:
      type: object
      properties:
        insights:
          allOf:
          - $ref: '#/components/schemas/InsightSummaries'
          description: The returned list of insights.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The `nextToken` value to include in a future `ListInsights`
            request. When the results of a `ListInsights` request exceed `maxResults`,
            you can use this value to retrieve the next page of results. This value
            is `null` when there are no more results to return.
    ListNodegroupsRequest:
      type: object
      properties:
        clusterName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of your cluster.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/ListNodegroupsRequestMaxResults'
          description: The maximum number of results, returned in paginated output.
            You receive `maxResults` in a single page, along with a `nextToken` response
            element. You can see the remaining results of the initial request by sending
            another request with the returned `nextToken` value. This value can be
            between 1 and 100. If you don't use this parameter, 100 results and a
            `nextToken` value, if applicable, are returned.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'The `nextToken` value returned from a previous paginated request,
            where `maxResults` was used and the results exceeded the value of that
            parameter. Pagination continues from the end of the previous results that
            returned the `nextToken` value. This value is null when there are no more
            results to return.


            This token should be treated as an opaque identifier that is used only
            to retrieve the next items in a list and not for other programmatic purposes.'
      required:
      - clusterName
    ListNodegroupsRequestMaxResults:
      type: integer
      minimum: 1
      maximum: 100
    ListNodegroupsResponse:
      type: object
      properties:
        nodegroups:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: A list of all of the node groups associated with the specified
            cluster.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'The `nextToken` value returned from a previous paginated request,
            where `maxResults` was used and the results exceeded the value of that
            parameter. Pagination continues from the end of the previous results that
            returned the `nextToken` value. This value is null when there are no more
            results to return.


            This token should be treated as an opaque identifier that is used only
            to retrieve the next items in a list and not for other programmatic purposes.'
    ListPodIdentityAssociationsMaxResults:
      type: integer
      minimum: 1
      maximum: 100
    ListPodIdentityAssociationsRequest:
      type: object
      properties:
        clusterName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the cluster that the associations are in.
        namespace:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the Kubernetes namespace inside the cluster that
            the associations are in.
        serviceAccount:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the Kubernetes service account that the associations
            use.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/ListPodIdentityAssociationsMaxResults'
          description: The maximum number of EKS Pod Identity association results
            returned by `ListPodIdentityAssociations` in paginated output. When you
            use this parameter, `ListPodIdentityAssociations` returns only `maxResults`
            results in a single page along with a `nextToken` response element. You
            can see the remaining results of the initial request by sending another
            `ListPodIdentityAssociations` request with the returned `nextToken` value.
            This value can be between 1 and 100\. If you don't use this parameter,
            `ListPodIdentityAssociations` returns up to 100 results and a `nextToken`
            value if applicable.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'The `nextToken` value returned from a previous paginated `ListUpdates`
            request where `maxResults` was used and the results exceeded the value
            of that parameter. Pagination continues from the end of the previous results
            that returned the `nextToken` value.


            This token should be treated as an opaque identifier that is used only
            to retrieve the next items in a list and not for other programmatic purposes.'
      required:
      - clusterName
    ListPodIdentityAssociationsResponse:
      type: object
      properties:
        associations:
          allOf:
          - $ref: '#/components/schemas/PodIdentityAssociationSummaries'
          description: "The list of summarized descriptions of the associations that\
            \ are in the cluster and match any filters that you provided.\n\nEach\
            \ summary is simplified by removing these fields compared to the full\
            \ [ `PodIdentityAssociation` ](https://docs.aws.amazon.com/eks/latest/APIReference/API_PodIdentityAssociation.html):\n\
            \n  * The IAM role: `roleArn`\n\n  * The timestamp that the association\
            \ was created at: `createdAt`\n\n  * The most recent timestamp that the\
            \ association was modified at:. `modifiedAt`\n\n  * The tags on the association:\
            \ `tags`"
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'The `nextToken` value to include in a future `ListPodIdentityAssociations`
            request. When the results of a `ListPodIdentityAssociations` request exceed
            `maxResults`, you can use this value to retrieve the next page of results.
            This value is `null` when there are no more results to return.


            This token should be treated as an opaque identifier that is used only
            to retrieve the next items in a list and not for other programmatic purposes.'
    ListTagsForResourceRequest:
      type: object
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) that identifies the resource
            to list tags for.
      required:
      - resourceArn
    ListTagsForResourceResponse:
      type: object
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The tags for the resource.
    ListUpdatesRequest:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the Amazon EKS cluster to list updates for.
        nodegroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the Amazon EKS managed node group to list updates
            for.
        addonName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The names of the installed add-ons that have available updates.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'The `nextToken` value returned from a previous paginated request,
            where `maxResults` was used and the results exceeded the value of that
            parameter. Pagination continues from the end of the previous results that
            returned the `nextToken` value. This value is null when there are no more
            results to return.


            This token should be treated as an opaque identifier that is used only
            to retrieve the next items in a list and not for other programmatic purposes.'
        maxResults:
          allOf:
          - $ref: '#/components/schemas/ListUpdatesRequestMaxResults'
          description: The maximum number of results, returned in paginated output.
            You receive `maxResults` in a single page, along with a `nextToken` response
            element. You can see the remaining results of the initial request by sending
            another request with the returned `nextToken` value. This value can be
            between 1 and 100. If you don't use this parameter, 100 results and a
            `nextToken` value, if applicable, are returned.
      required:
      - name
    ListUpdatesRequestMaxResults:
      type: integer
      minimum: 1
      maximum: 100
    ListUpdatesResponse:
      type: object
      properties:
        updateIds:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: A list of all the updates for the specified cluster and Region.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'The `nextToken` value returned from a previous paginated request,
            where `maxResults` was used and the results exceeded the value of that
            parameter. Pagination continues from the end of the previous results that
            returned the `nextToken` value. This value is null when there are no more
            results to return.


            This token should be treated as an opaque identifier that is used only
            to retrieve the next items in a list and not for other programmatic purposes.'
    LogSetup:
      type: object
      properties:
        types:
          allOf:
          - $ref: '#/components/schemas/LogTypes'
          description: The available cluster control plane log types.
        enabled:
          allOf:
          - $ref: '#/components/schemas/BoxedBoolean'
          description: If a log type is enabled, that log type exports its control
            plane logs to CloudWatch Logs . If a log type isn't enabled, that log
            type doesn't export its control plane logs. Each individual log type can
            be enabled or disabled independently.
      description: An object representing the enabled or disabled Kubernetes control
        plane logs for your cluster.
    LogSetups:
      type: array
      items:
        $ref: '#/components/schemas/LogSetup'
    LogType:
      type: string
      enum:
      - api
      - audit
      - authenticator
      - controllerManager
      - scheduler
    LogTypes:
      type: array
      items:
        $ref: '#/components/schemas/LogType'
    Logging:
      type: object
      properties:
        clusterLogging:
          allOf:
          - $ref: '#/components/schemas/LogSetups'
          description: The cluster control plane logging configuration for your cluster.
      description: An object representing the logging configuration for resources
        in your cluster.
    MarketplaceInformation:
      type: object
      properties:
        productId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The product ID from the Amazon Web Services Marketplace.
        productUrl:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The product URL from the Amazon Web Services Marketplace.
      description: Information about an Amazon EKS add-on from the Amazon Web Services
        Marketplace.
    NodeRepairConfig:
      type: object
      properties:
        enabled:
          allOf:
          - $ref: '#/components/schemas/BoxedBoolean'
          description: Specifies whether to enable node auto repair for the node group.
            Node auto repair is disabled by default.
      description: The node auto repair configuration for the node group.
    Nodegroup:
      type: object
      properties:
        nodegroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name associated with an Amazon EKS managed node group.
        nodegroupArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) associated with the managed
            node group.
        clusterName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of your cluster.
        version:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Kubernetes version of the managed node group.
        releaseVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          description: If the node group was deployed using a launch template with
            a custom AMI, then this is the AMI ID that was specified in the launch
            template. For node groups that weren't deployed using a launch template,
            this is the version of the Amazon EKS optimized AMI that the node group
            was deployed with.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The Unix epoch timestamp at object creation.
        modifiedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The Unix epoch timestamp for the last modification to the object.
        status:
          allOf:
          - $ref: '#/components/schemas/NodegroupStatus'
          description: The current status of the managed node group.
        capacityType:
          allOf:
          - $ref: '#/components/schemas/CapacityTypes'
          description: The capacity type of your managed node group.
        scalingConfig:
          allOf:
          - $ref: '#/components/schemas/NodegroupScalingConfig'
          description: The scaling configuration details for the Auto Scaling group
            that is associated with your node group.
        instanceTypes:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: If the node group wasn't deployed with a launch template, then
            this is the instance type that is associated with the node group. If the
            node group was deployed with a launch template, then this is `null`.
        subnets:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: The subnets that were specified for the Auto Scaling group
            that is associated with your node group.
        remoteAccess:
          allOf:
          - $ref: '#/components/schemas/RemoteAccessConfig'
          description: If the node group wasn't deployed with a launch template, then
            this is the remote access configuration that is associated with the node
            group. If the node group was deployed with a launch template, then this
            is `null`.
        amiType:
          allOf:
          - $ref: '#/components/schemas/AMITypes'
          description: If the node group was deployed using a launch template with
            a custom AMI, then this is `CUSTOM`. For node groups that weren't deployed
            using a launch template, this is the AMI type that was specified in the
            node group configuration.
        nodeRole:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The IAM role associated with your node group. The Amazon EKS
            node `kubelet` daemon makes calls to Amazon Web Services APIs on your
            behalf. Nodes receive permissions for these API calls through an IAM instance
            profile and associated policies.
        labels:
          allOf:
          - $ref: '#/components/schemas/labelsMap'
          description: 'The Kubernetes `labels` applied to the nodes in the node group.


            Only `labels` that are applied with the Amazon EKS API are shown here.
            There may be other Kubernetes `labels` applied to the nodes in this group.'
        taints:
          allOf:
          - $ref: '#/components/schemas/taintsList'
          description: The Kubernetes taints to be applied to the nodes in the node
            group when they are created. Effect is one of `No_Schedule`, `Prefer_No_Schedule`,
            or `No_Execute`. Kubernetes taints can be used together with tolerations
            to control how workloads are scheduled to your nodes. For more information,
            see [Node taints on managed node groups](https://docs.aws.amazon.com/eks/latest/userguide/node-taints-managed-node-groups.html).
        resources:
          allOf:
          - $ref: '#/components/schemas/NodegroupResources'
          description: The resources associated with the node group, such as Auto
            Scaling groups and security groups for remote access.
        diskSize:
          allOf:
          - $ref: '#/components/schemas/BoxedInteger'
          description: If the node group wasn't deployed with a launch template, then
            this is the disk size in the node group configuration. If the node group
            was deployed with a launch template, then this is `null`.
        health:
          allOf:
          - $ref: '#/components/schemas/NodegroupHealth'
          description: The health status of the node group. If there are issues with
            your node group's health, they are listed here.
        updateConfig:
          allOf:
          - $ref: '#/components/schemas/NodegroupUpdateConfig'
          description: The node group update configuration.
        nodeRepairConfig:
          allOf:
          - $ref: '#/components/schemas/NodeRepairConfig'
          description: The node auto repair configuration for the node group.
        launchTemplate:
          allOf:
          - $ref: '#/components/schemas/LaunchTemplateSpecification'
          description: If a launch template was used to create the node group, then
            this is the launch template that was used.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: Metadata that assists with categorization and organization.
            Each tag consists of a key and an optional value. You define both. Tags
            don't propagate to any other cluster or Amazon Web Services resources.
      description: An object representing an Amazon EKS managed node group.
    NodegroupHealth:
      type: object
      properties:
        issues:
          allOf:
          - $ref: '#/components/schemas/IssueList'
          description: Any issues that are associated with the node group.
      description: An object representing the health status of the node group.
    NodegroupIssueCode:
      type: string
      enum:
      - AutoScalingGroupNotFound
      - AutoScalingGroupInvalidConfiguration
      - Ec2SecurityGroupNotFound
      - Ec2SecurityGroupDeletionFailure
      - Ec2LaunchTemplateNotFound
      - Ec2LaunchTemplateVersionMismatch
      - Ec2SubnetNotFound
      - Ec2SubnetInvalidConfiguration
      - IamInstanceProfileNotFound
      - Ec2SubnetMissingIpv6Assignment
      - IamLimitExceeded
      - IamNodeRoleNotFound
      - NodeCreationFailure
      - AsgInstanceLaunchFailures
      - InstanceLimitExceeded
      - InsufficientFreeAddresses
      - AccessDenied
      - InternalFailure
      - ClusterUnreachable
      - AmiIdNotFound
      - AutoScalingGroupOptInRequired
      - AutoScalingGroupRateLimitExceeded
      - Ec2LaunchTemplateDeletionFailure
      - Ec2LaunchTemplateInvalidConfiguration
      - Ec2LaunchTemplateMaxLimitExceeded
      - Ec2SubnetListTooLong
      - IamThrottling
      - NodeTerminationFailure
      - PodEvictionFailure
      - SourceEc2LaunchTemplateNotFound
      - LimitExceeded
      - Unknown
      - AutoScalingGroupInstanceRefreshActive
      - KubernetesLabelInvalid
      - Ec2LaunchTemplateVersionMaxLimitExceeded
      - Ec2InstanceTypeDoesNotExist
    NodegroupResources:
      type: object
      properties:
        autoScalingGroups:
          allOf:
          - $ref: '#/components/schemas/AutoScalingGroupList'
          description: The Auto Scaling groups associated with the node group.
        remoteAccessSecurityGroup:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The remote access security group associated with the node group.
            This security group controls SSH access to the nodes.
      description: An object representing the resources associated with the node group,
        such as Auto Scaling groups and security groups for remote access.
    NodegroupScalingConfig:
      type: object
      properties:
        minSize:
          allOf:
          - $ref: '#/components/schemas/ZeroCapacity'
          description: The minimum number of nodes that the managed node group can
            scale in to.
        maxSize:
          allOf:
          - $ref: '#/components/schemas/Capacity'
          description: The maximum number of nodes that the managed node group can
            scale out to. For information about the maximum number that you can specify,
            see [Amazon EKS service quotas](https://docs.aws.amazon.com/eks/latest/userguide/service-quotas.html)
            in the _Amazon EKS User Guide_.
        desiredSize:
          allOf:
          - $ref: '#/components/schemas/ZeroCapacity'
          description: 'The current number of nodes that the managed node group should
            maintain.


            If you use the Kubernetes [Cluster Autoscaler](https://github.com/kubernetes/autoscaler#kubernetes-autoscaler),
            you shouldn''t change the `desiredSize` value directly, as this can cause
            the Cluster Autoscaler to suddenly scale up or scale down.


            Whenever this parameter changes, the number of worker nodes in the node
            group is updated to the specified size. If this parameter is given a value
            that is smaller than the current number of running worker nodes, the necessary
            number of worker nodes are terminated to match the given value. When using
            CloudFormation, no action occurs if you remove this parameter from your
            CFN template.


            This parameter can be different from `minSize` in some cases, such as
            when starting with extra hosts for testing. This parameter can also be
            different when you want to start with an estimated number of needed hosts,
            but let the Cluster Autoscaler reduce the number if there are too many.
            When the Cluster Autoscaler is used, the `desiredSize` parameter is altered
            by the Cluster Autoscaler (but can be out-of-date for short periods of
            time). the Cluster Autoscaler doesn''t scale a managed node group lower
            than `minSize` or higher than `maxSize`.'
      description: An object representing the scaling configuration details for the
        Auto Scaling group that is associated with your node group. When creating
        a node group, you must specify all or none of the properties. When updating
        a node group, you can specify any or none of the properties.
    NodegroupStatus:
      type: string
      enum:
      - CREATING
      - ACTIVE
      - UPDATING
      - DELETING
      - CREATE_FAILED
      - DELETE_FAILED
      - DEGRADED
    NodegroupUpdateConfig:
      type: object
      properties:
        maxUnavailable:
          allOf:
          - $ref: '#/components/schemas/NonZeroInteger'
          description: The maximum number of nodes unavailable at once during a version
            update. Nodes are updated in parallel. This value or `maxUnavailablePercentage`
            is required to have a value.The maximum number is 100.
        maxUnavailablePercentage:
          allOf:
          - $ref: '#/components/schemas/PercentCapacity'
          description: The maximum percentage of nodes unavailable during a version
            update. This percentage of nodes are updated in parallel, up to 100 nodes
            at once. This value or `maxUnavailable` is required to have a value.
        updateStrategy:
          allOf:
          - $ref: '#/components/schemas/NodegroupUpdateStrategies'
          description: 'The configuration for the behavior to follow during a node
            group version update of this managed node group. You choose between two
            possible strategies for replacing nodes during an [ `UpdateNodegroupVersion`
            ](https://docs.aws.amazon.com/eks/latest/APIReference/API_UpdateNodegroupVersion.html)
            action.


            An Amazon EKS managed node group updates by replacing nodes with new nodes
            of newer AMI versions in parallel. The _update strategy_ changes the managed
            node update behavior of the managed node group for each quantity. The
            _default_ strategy has guardrails to protect you from misconfiguration
            and launches the new instances first, before terminating the old instances.
            The _minimal_ strategy removes the guardrails and terminates the old instances
            before launching the new instances. This minimal strategy is useful in
            scenarios where you are constrained to resources or costs (for example,
            with hardware accelerators such as GPUs).'
      description: The node group update configuration. An Amazon EKS managed node
        group updates by replacing nodes with new nodes of newer AMI versions in parallel.
        You choose the _maximum unavailable_ and the _update strategy_.
    NodegroupUpdateStrategies:
      type: string
      enum:
      - DEFAULT
      - MINIMAL
    NonZeroInteger:
      type: integer
      minimum: 1
    NotFoundException:
      type: object
      properties:
        message:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A service resource associated with the request could not be
            found. Clients should not retry such requests.
      description: A service resource associated with the request could not be found.
        Clients should not retry such requests.
    OIDC:
      type: object
      properties:
        issuer:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The issuer URL for the OIDC identity provider.
      description: An object representing the [OpenID Connect](https://openid.net/connect/)
        (OIDC) identity provider information for the cluster.
    OidcIdentityProviderConfig:
      type: object
      properties:
        identityProviderConfigName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the configuration.
        identityProviderConfigArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ARN of the configuration.
        clusterName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of your cluster.
        issuerUrl:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The URL of the OIDC identity provider that allows the API server
            to discover public signing keys for verifying tokens.
        clientId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: This is also known as _audience_. The ID of the client application
            that makes authentication requests to the OIDC identity provider.
        usernameClaim:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The JSON Web token (JWT) claim that is used as the username.
        usernamePrefix:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The prefix that is prepended to username claims to prevent
            clashes with existing names. The prefix can't contain `system:`
        groupsClaim:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The JSON web token (JWT) claim that the provider uses to return
            your groups.
        groupsPrefix:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The prefix that is prepended to group claims to prevent clashes
            with existing names (such as `system:` groups). For example, the value`
            oidc:` creates group names like `oidc:engineering` and `oidc:infra`. The
            prefix can't contain `system:`
        requiredClaims:
          allOf:
          - $ref: '#/components/schemas/requiredClaimsMap'
          description: The key-value pairs that describe required claims in the identity
            token. If set, each claim is verified to be present in the token with
            a matching value.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: Metadata that assists with categorization and organization.
            Each tag consists of a key and an optional value. You define both. Tags
            don't propagate to any other cluster or Amazon Web Services resources.
        status:
          allOf:
          - $ref: '#/components/schemas/configStatus'
          description: The status of the OIDC identity provider.
      description: An object representing the configuration for an OpenID Connect
        (OIDC) identity provider.
    OidcIdentityProviderConfigRequest:
      type: object
      properties:
        identityProviderConfigName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the OIDC provider configuration.
        issuerUrl:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The URL of the OIDC identity provider that allows the API server
            to discover public signing keys for verifying tokens. The URL must begin
            with `https://` and should correspond to the `iss` claim in the provider's
            OIDC ID tokens. Based on the OIDC standard, path components are allowed
            but query parameters are not. Typically the URL consists of only a hostname,
            like `https://server.example.org` or `https://example.com`. This URL should
            point to the level below `.well-known/openid-configuration` and must be
            publicly accessible over the internet.
        clientId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: This is also known as _audience_. The ID for the client application
            that makes authentication requests to the OIDC identity provider.
        usernameClaim:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The JSON Web Token (JWT) claim to use as the username. The
            default is `sub`, which is expected to be a unique identifier of the end
            user. You can choose other claims, such as `email` or `name`, depending
            on the OIDC identity provider. Claims other than `email` are prefixed
            with the issuer URL to prevent naming clashes with other plug-ins.
        usernamePrefix:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The prefix that is prepended to username claims to prevent
            clashes with existing names. If you do not provide this field, and `username`
            is a value other than `email`, the prefix defaults to `issuerurl#`. You
            can use the value `-` to disable all prefixing.
        groupsClaim:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The JWT claim that the provider uses to return your groups.
        groupsPrefix:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The prefix that is prepended to group claims to prevent clashes
            with existing names (such as `system:` groups). For example, the value`
            oidc:` will create group names like `oidc:engineering` and `oidc:infra`.
        requiredClaims:
          allOf:
          - $ref: '#/components/schemas/requiredClaimsMap'
          description: The key value pairs that describe required claims in the identity
            token. If set, each claim is verified to be present in the token with
            a matching value. For the maximum number of claims that you can require,
            see [Amazon EKS service quotas](https://docs.aws.amazon.com/eks/latest/userguide/service-quotas.html)
            in the _Amazon EKS User Guide_.
      required:
      - identityProviderConfigName
      - issuerUrl
      - clientId
      description: An object representing an OpenID Connect (OIDC) configuration.
        Before associating an OIDC identity provider to your cluster, review the considerations
        in [Authenticating users for your cluster from an OIDC identity provider](https://docs.aws.amazon.com/eks/latest/userguide/authenticate-oidc-identity-provider.html)
        in the _Amazon EKS User Guide_.
    OutpostConfigRequest:
      type: object
      properties:
        outpostArns:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: The ARN of the Outpost that you want to use for your local
            Amazon EKS cluster on Outposts. Only a single Outpost ARN is supported.
        controlPlaneInstanceType:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'The Amazon EC2 instance type that you want to use for your
            local Amazon EKS cluster on Outposts. Choose an instance type based on
            the number of nodes that your cluster will have. For more information,
            see [Capacity considerations](https://docs.aws.amazon.com/eks/latest/userguide/eks-outposts-capacity-considerations.html)
            in the _Amazon EKS User Guide_.


            The instance type that you specify is used for all Kubernetes control
            plane instances. The instance type can''t be changed after cluster creation.
            The control plane is not automatically scaled by Amazon EKS.'
        controlPlanePlacement:
          allOf:
          - $ref: '#/components/schemas/ControlPlanePlacementRequest'
          description: An object representing the placement configuration for all
            the control plane instances of your local Amazon EKS cluster on an Amazon
            Web Services Outpost. For more information, see [Capacity considerations](https://docs.aws.amazon.com/eks/latest/userguide/eks-outposts-capacity-considerations.html)
            in the _Amazon EKS User Guide_.
      required:
      - outpostArns
      - controlPlaneInstanceType
      description: The configuration of your local Amazon EKS cluster on an Amazon
        Web Services Outpost. Before creating a cluster on an Outpost, review [Creating
        a local cluster on an Outpost](https://docs.aws.amazon.com/eks/latest/userguide/eks-outposts-local-cluster-create.html)
        in the _Amazon EKS User Guide_. This API isn't available for Amazon EKS clusters
        on the Amazon Web Services cloud.
    OutpostConfigResponse:
      type: object
      properties:
        outpostArns:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: The ARN of the Outpost that you specified for use with your
            local Amazon EKS cluster on Outposts.
        controlPlaneInstanceType:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon EC2 instance type used for the control plane. The
            instance type is the same for all control plane instances.
        controlPlanePlacement:
          allOf:
          - $ref: '#/components/schemas/ControlPlanePlacementResponse'
          description: An object representing the placement configuration for all
            the control plane instances of your local Amazon EKS cluster on an Amazon
            Web Services Outpost. For more information, see [Capacity considerations](https://docs.aws.amazon.com/eks/latest/userguide/eks-outposts-capacity-considerations.html)
            in the _Amazon EKS User Guide_.
      required:
      - outpostArns
      - controlPlaneInstanceType
      description: An object representing the configuration of your local Amazon EKS
        cluster on an Amazon Web Services Outpost. This API isn't available for Amazon
        EKS clusters on the Amazon Web Services cloud.
    PercentCapacity:
      type: integer
      minimum: 1
      maximum: 100
    PodIdentityAssociation:
      type: object
      properties:
        clusterName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the cluster that the association is in.
        namespace:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the Kubernetes namespace inside the cluster to
            create the association in. The service account and the pods that use the
            service account must be in this namespace.
        serviceAccount:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the Kubernetes service account inside the cluster
            to associate the IAM credentials with.
        roleArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) of the IAM role to associate
            with the service account. The EKS Pod Identity agent manages credentials
            to assume this role for applications in the containers in the pods that
            use this service account.
        associationArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) of the association.
        associationId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the association.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: "Metadata that assists with categorization and organization.\
            \ Each tag consists of a key and an optional value. You define both. Tags\
            \ don't propagate to any other cluster or Amazon Web Services resources.\n\
            \nThe following basic restrictions apply to tags:\n\n  * Maximum number\
            \ of tags per resource – 50\n\n  * For each resource, each tag key must\
            \ be unique, and each tag key can have only one value.\n\n  * Maximum\
            \ key length – 128 Unicode characters in UTF-8\n\n  * Maximum value length\
            \ – 256 Unicode characters in UTF-8\n\n  * If your tagging schema is used\
            \ across multiple services and resources, remember that other services\
            \ may have restrictions on allowed characters. Generally allowed characters\
            \ are: letters, numbers, and spaces representable in UTF-8, and the following\
            \ characters: + - = . _ : / @.\n\n  * Tag keys and values are case-sensitive.\n\
            \n  * Do not use `aws:`, `AWS:`, or any upper or lowercase combination\
            \ of such as a prefix for either keys or values as it is reserved for\
            \ Amazon Web Services use. You cannot edit or delete tag keys or values\
            \ with this prefix. Tags with this prefix do not count against your tags\
            \ per resource limit."
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp that the association was created at.
        modifiedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The most recent timestamp that the association was modified
            at
        ownerArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: If defined, the Pod Identity Association is owned by an Amazon
            EKS Addon.
      description: Amazon EKS Pod Identity associations provide the ability to manage
        credentials for your applications, similar to the way that Amazon EC2 instance
        profiles provide credentials to Amazon EC2 instances.
    PodIdentityAssociationSummaries:
      type: array
      items:
        $ref: '#/components/schemas/PodIdentityAssociationSummary'
    PodIdentityAssociationSummary:
      type: object
      properties:
        clusterName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the cluster that the association is in.
        namespace:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the Kubernetes namespace inside the cluster to
            create the association in. The service account and the pods that use the
            service account must be in this namespace.
        serviceAccount:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the Kubernetes service account inside the cluster
            to associate the IAM credentials with.
        associationArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) of the association.
        associationId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the association.
        ownerArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: If defined, the Pod Identity Association is owned by an Amazon
            EKS Addon.
      description: "The summarized description of the association.\n\nEach summary\
        \ is simplified by removing these fields compared to the full [ `PodIdentityAssociation`\
        \ ](https://docs.aws.amazon.com/eks/latest/APIReference/API_PodIdentityAssociation.html):\n\
        \n  * The IAM role: `roleArn`\n\n  * The timestamp that the association was\
        \ created at: `createdAt`\n\n  * The most recent timestamp that the association\
        \ was modified at:. `modifiedAt`\n\n  * The tags on the association: `tags`"
    Provider:
      type: object
      properties:
        keyArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Amazon Resource Name (ARN) or alias of the KMS key. The KMS
            key must be symmetric and created in the same Amazon Web Services Region
            as the cluster. If the KMS key was created in a different account, the
            [IAM principal](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_terms-and-concepts.html)
            must have access to the KMS key. For more information, see [Allowing users
            in other accounts to use a KMS key](https://docs.aws.amazon.com/kms/latest/developerguide/key-policy-modifying-external-accounts.html)
            in the _Key Management Service Developer Guide_.
      description: Identifies the Key Management Service (KMS) key used to encrypt
        the secrets.
    RegisterClusterRequest:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/ClusterName'
          description: A unique name for this cluster in your Amazon Web Services
            Region.
        connectorConfig:
          allOf:
          - $ref: '#/components/schemas/ConnectorConfigRequest'
          description: The configuration settings required to connect the Kubernetes
            cluster to the Amazon EKS control plane.
        clientRequestToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: Metadata that assists with categorization and organization.
            Each tag consists of a key and an optional value. You define both. Tags
            don't propagate to any other cluster or Amazon Web Services resources.
      required:
      - name
      - connectorConfig
    RegisterClusterResponse:
      type: object
      properties:
        cluster:
          $ref: '#/components/schemas/Cluster'
    RemoteAccessConfig:
      type: object
      properties:
        ec2SshKey:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon EC2 SSH key name that provides access for SSH communication
            with the nodes in the managed node group. For more information, see [Amazon
            EC2 key pairs and Linux instances](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html)
            in the _Amazon Elastic Compute Cloud User Guide for Linux Instances_.
            For Windows, an Amazon EC2 SSH key is used to obtain the RDP password.
            For more information, see [Amazon EC2 key pairs and Windows instances](https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/ec2-key-pairs.html)
            in the _Amazon Elastic Compute Cloud User Guide for Windows Instances_.
        sourceSecurityGroups:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: The security group IDs that are allowed SSH access (port 22)
            to the nodes. For Windows, the port is 3389. If you specify an Amazon
            EC2 SSH key but don't specify a source security group when you create
            a managed node group, then the port on the nodes is opened to the internet
            (`0.0.0.0/0`). For more information, see [Security Groups for Your VPC](https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html)
            in the _Amazon Virtual Private Cloud User Guide_.
      description: An object representing the remote access configuration for the
        managed node group.
    RemoteNetworkConfigRequest:
      type: object
      properties:
        remoteNodeNetworks:
          allOf:
          - $ref: '#/components/schemas/RemoteNodeNetworkList'
          description: "The list of network CIDRs that can contain hybrid nodes.\n\
            \nThese CIDR blocks define the expected IP address range of the hybrid\
            \ nodes that join the cluster. These blocks are typically determined by\
            \ your network administrator.\n\nEnter one or more IPv4 CIDR blocks in\
            \ decimal dotted-quad notation (for example, ` 10.2.0.0/16`).\n\nIt must\
            \ satisfy the following requirements:\n\n  * Each block must be within\
            \ an `IPv4` RFC-1918 network range. Minimum allowed size is /24, maximum\
            \ allowed size is /8. Publicly-routable addresses aren't supported.\n\n\
            \  * Each block cannot overlap with the range of the VPC CIDR blocks for\
            \ your EKS resources, or the block of the Kubernetes service IP range.\n\
            \n  * Each block must have a route to the VPC that uses the VPC CIDR blocks,\
            \ not public IPs or Elastic IPs. There are many options including Transit\
            \ Gateway, Site-to-Site VPN, or Direct Connect.\n\n  * Each host must\
            \ allow outbound connection to the EKS cluster control plane on TCP ports\
            \ `443` and `10250`.\n\n  * Each host must allow inbound connection from\
            \ the EKS cluster control plane on TCP port 10250 for logs, exec and port-forward\
            \ operations.\n\n  * Each host must allow TCP and UDP network connectivity\
            \ to and from other hosts that are running `CoreDNS` on UDP port `53`\
            \ for service and pod DNS names."
        remotePodNetworks:
          allOf:
          - $ref: '#/components/schemas/RemotePodNetworkList'
          description: "The list of network CIDRs that can contain pods that run Kubernetes\
            \ webhooks on hybrid nodes.\n\nThese CIDR blocks are determined by configuring\
            \ your Container Network Interface (CNI) plugin. We recommend the Calico\
            \ CNI or Cilium CNI. Note that the Amazon VPC CNI plugin for Kubernetes\
            \ isn't available for on-premises and edge locations.\n\nEnter one or\
            \ more IPv4 CIDR blocks in decimal dotted-quad notation (for example,\
            \ ` 10.2.0.0/16`).\n\nIt must satisfy the following requirements:\n\n\
            \  * Each block must be within an `IPv4` RFC-1918 network range. Minimum\
            \ allowed size is /24, maximum allowed size is /8. Publicly-routable addresses\
            \ aren't supported.\n\n  * Each block cannot overlap with the range of\
            \ the VPC CIDR blocks for your EKS resources, or the block of the Kubernetes\
            \ service IP range."
      description: The configuration in the cluster for EKS Hybrid Nodes. You can
        add, change, or remove this configuration after the cluster is created.
    RemoteNetworkConfigResponse:
      type: object
      properties:
        remoteNodeNetworks:
          allOf:
          - $ref: '#/components/schemas/RemoteNodeNetworkList'
          description: The list of network CIDRs that can contain hybrid nodes.
        remotePodNetworks:
          allOf:
          - $ref: '#/components/schemas/RemotePodNetworkList'
          description: The list of network CIDRs that can contain pods that run Kubernetes
            webhooks on hybrid nodes.
      description: The configuration in the cluster for EKS Hybrid Nodes. You can
        add, change, or remove this configuration after the cluster is created.
    RemoteNodeNetwork:
      type: object
      properties:
        cidrs:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: "A network CIDR that can contain hybrid nodes.\n\nThese CIDR\
            \ blocks define the expected IP address range of the hybrid nodes that\
            \ join the cluster. These blocks are typically determined by your network\
            \ administrator.\n\nEnter one or more IPv4 CIDR blocks in decimal dotted-quad\
            \ notation (for example, ` 10.2.0.0/16`).\n\nIt must satisfy the following\
            \ requirements:\n\n  * Each block must be within an `IPv4` RFC-1918 network\
            \ range. Minimum allowed size is /24, maximum allowed size is /8. Publicly-routable\
            \ addresses aren't supported.\n\n  * Each block cannot overlap with the\
            \ range of the VPC CIDR blocks for your EKS resources, or the block of\
            \ the Kubernetes service IP range.\n\n  * Each block must have a route\
            \ to the VPC that uses the VPC CIDR blocks, not public IPs or Elastic\
            \ IPs. There are many options including Transit Gateway, Site-to-Site\
            \ VPN, or Direct Connect.\n\n  * Each host must allow outbound connection\
            \ to the EKS cluster control plane on TCP ports `443` and `10250`.\n\n\
            \  * Each host must allow inbound connection from the EKS cluster control\
            \ plane on TCP port 10250 for logs, exec and port-forward operations.\n\
            \n  * Each host must allow TCP and UDP network connectivity to and from\
            \ other hosts that are running `CoreDNS` on UDP port `53` for service\
            \ and pod DNS names."
      description: "A network CIDR that can contain hybrid nodes.\n\nThese CIDR blocks\
        \ define the expected IP address range of the hybrid nodes that join the cluster.\
        \ These blocks are typically determined by your network administrator.\n\n\
        Enter one or more IPv4 CIDR blocks in decimal dotted-quad notation (for example,\
        \ ` 10.2.0.0/16`).\n\nIt must satisfy the following requirements:\n\n  * Each\
        \ block must be within an `IPv4` RFC-1918 network range. Minimum allowed size\
        \ is /24, maximum allowed size is /8. Publicly-routable addresses aren't supported.\n\
        \n  * Each block cannot overlap with the range of the VPC CIDR blocks for\
        \ your EKS resources, or the block of the Kubernetes service IP range.\n\n\
        \  * Each block must have a route to the VPC that uses the VPC CIDR blocks,\
        \ not public IPs or Elastic IPs. There are many options including Transit\
        \ Gateway, Site-to-Site VPN, or Direct Connect.\n\n  * Each host must allow\
        \ outbound connection to the EKS cluster control plane on TCP ports `443`\
        \ and `10250`.\n\n  * Each host must allow inbound connection from the EKS\
        \ cluster control plane on TCP port 10250 for logs, exec and port-forward\
        \ operations.\n\n  * Each host must allow TCP and UDP network connectivity\
        \ to and from other hosts that are running `CoreDNS` on UDP port `53` for\
        \ service and pod DNS names."
    RemoteNodeNetworkList:
      type: array
      items:
        $ref: '#/components/schemas/RemoteNodeNetwork'
    RemotePodNetwork:
      type: object
      properties:
        cidrs:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: "A network CIDR that can contain pods that run Kubernetes webhooks\
            \ on hybrid nodes.\n\nThese CIDR blocks are determined by configuring\
            \ your Container Network Interface (CNI) plugin. We recommend the Calico\
            \ CNI or Cilium CNI. Note that the Amazon VPC CNI plugin for Kubernetes\
            \ isn't available for on-premises and edge locations.\n\nEnter one or\
            \ more IPv4 CIDR blocks in decimal dotted-quad notation (for example,\
            \ ` 10.2.0.0/16`).\n\nIt must satisfy the following requirements:\n\n\
            \  * Each block must be within an `IPv4` RFC-1918 network range. Minimum\
            \ allowed size is /24, maximum allowed size is /8. Publicly-routable addresses\
            \ aren't supported.\n\n  * Each block cannot overlap with the range of\
            \ the VPC CIDR blocks for your EKS resources, or the block of the Kubernetes\
            \ service IP range."
      description: "A network CIDR that can contain pods that run Kubernetes webhooks\
        \ on hybrid nodes.\n\nThese CIDR blocks are determined by configuring your\
        \ Container Network Interface (CNI) plugin. We recommend the Calico CNI or\
        \ Cilium CNI. Note that the Amazon VPC CNI plugin for Kubernetes isn't available\
        \ for on-premises and edge locations.\n\nEnter one or more IPv4 CIDR blocks\
        \ in decimal dotted-quad notation (for example, ` 10.2.0.0/16`).\n\nIt must\
        \ satisfy the following requirements:\n\n  * Each block must be within an\
        \ `IPv4` RFC-1918 network range. Minimum allowed size is /24, maximum allowed\
        \ size is /8. Publicly-routable addresses aren't supported.\n\n  * Each block\
        \ cannot overlap with the range of the VPC CIDR blocks for your EKS resources,\
        \ or the block of the Kubernetes service IP range."
    RemotePodNetworkList:
      type: array
      items:
        $ref: '#/components/schemas/RemotePodNetwork'
    ResolveConflicts:
      type: string
      enum:
      - OVERWRITE
      - NONE
      - PRESERVE
    ResourceInUseException:
      type: object
      properties:
        clusterName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon EKS cluster associated with the exception.
        nodegroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon EKS managed node group associated with the exception.
        addonName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The specified add-on name is in use.
        message:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon EKS message associated with the exception.
      description: The specified resource is in use.
    ResourceLimitExceededException:
      type: object
      properties:
        clusterName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon EKS cluster associated with the exception.
        nodegroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon EKS managed node group associated with the exception.
        subscriptionId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon EKS subscription ID with the exception.
        message:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon EKS message associated with the exception.
      description: You have encountered a service limit on the specified resource.
    ResourceNotFoundException:
      type: object
      properties:
        clusterName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon EKS cluster associated with the exception.
        nodegroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon EKS managed node group associated with the exception.
        fargateProfileName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Fargate profile associated with the exception.
        addonName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon EKS add-on name associated with the exception.
        subscriptionId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon EKS subscription ID with the exception.
        message:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon EKS message associated with the exception.
      description: The specified resource could not be found. You can view your available
        clusters with `ListClusters`. You can view your available managed node groups
        with `ListNodegroups`. Amazon EKS clusters and node groups are Amazon Web
        Services Region specific.
    ResourcePropagationDelayException:
      type: object
      properties:
        message:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Required resources (such as service-linked roles) were created
            and are still propagating. Retry later.
      description: Required resources (such as service-linked roles) were created
        and are still propagating. Retry later.
    RoleArn:
      type: string
      minLength: 1
      maxLength: 255
    ServerException:
      type: object
      properties:
        clusterName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon EKS cluster associated with the exception.
        nodegroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon EKS managed node group associated with the exception.
        addonName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon EKS add-on name associated with the exception.
        subscriptionId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon EKS subscription ID with the exception.
        message:
          allOf:
          - $ref: '#/components/schemas/String'
          description: These errors are usually caused by a server-side issue.
      description: These errors are usually caused by a server-side issue.
    ServiceUnavailableException:
      type: object
      properties:
        message:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The request has failed due to a temporary failure of the server.
      description: The service is unavailable. Back off and retry the operation.
    StorageConfigRequest:
      type: object
      properties:
        blockStorage:
          allOf:
          - $ref: '#/components/schemas/BlockStorage'
          description: Request to configure EBS Block Storage settings for your EKS
            Auto Mode cluster.
      description: Request to update the configuration of the storage capability of
        your EKS Auto Mode cluster. For example, enable the capability. For more information,
        see EKS Auto Mode block storage capability in the _Amazon EKS User Guide_.
    StorageConfigResponse:
      type: object
      properties:
        blockStorage:
          allOf:
          - $ref: '#/components/schemas/BlockStorage'
          description: Indicates the current configuration of the block storage capability
            on your EKS Auto Mode cluster. For example, if the capability is enabled
            or disabled.
      description: Indicates the status of the request to update the block storage
        capability of your EKS Auto Mode cluster.
    String:
      type: string
    StringList:
      type: array
      items:
        $ref: '#/components/schemas/String'
    SupportType:
      type: string
      enum:
      - STANDARD
      - EXTENDED
    TagKey:
      type: string
      minLength: 1
      maxLength: 128
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
    TagMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
      description: "<p>The metadata that you apply to a resource to help you categorize\
        \ and organize them.\n            Each tag consists of a key and an optional\
        \ value. You define them.</p>\n         <p>The following basic restrictions\
        \ apply to tags:</p>\n         <ul>\n            <li>\n               <p>Maximum\
        \ number of tags per resource – 50</p>\n            </li>\n            <li>\n\
        \               <p>For each resource, each tag key must be unique, and each\
        \ tag key can have only\n                    one value.</p>\n            </li>\n\
        \            <li>\n               <p>Maximum key length – 128 Unicode characters\
        \ in UTF-8</p>\n            </li>\n            <li>\n               <p>Maximum\
        \ value length – 256 Unicode characters in UTF-8</p>\n            </li>\n\
        \            <li>\n               <p>If your tagging schema is used across\
        \ multiple services and resources,\n                    remember that other\
        \ services may have restrictions on allowed characters.\n                \
        \    Generally allowed characters are: letters, numbers, and spaces representable\
        \ in\n                    UTF-8, and the following characters: + - = . _ :\
        \ / @.</p>\n            </li>\n            <li>\n               <p>Tag keys\
        \ and values are case-sensitive.</p>\n            </li>\n            <li>\n\
        \               <p>Do not use <code>aws:</code>, <code>AWS:</code>, or any\
        \ upper or lowercase\n                    combination of such as a prefix\
        \ for either keys or values as it is reserved for\n                    Amazon\
        \ Web Services use. You cannot edit or delete tag keys or values with this\
        \ prefix. Tags with\n                    this prefix do not count against\
        \ your tags per resource limit.</p>\n            </li>\n         </ul>"
    TagResourceRequest:
      type: object
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) of the resource to add tags
            to.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: Metadata that assists with categorization and organization.
            Each tag consists of a key and an optional value. You define both. Tags
            don't propagate to any other cluster or Amazon Web Services resources.
      required:
      - resourceArn
      - tags
    TagResourceResponse:
      type: object
      properties: {}
    TagValue:
      type: string
      minLength: 0
      maxLength: 256
    Taint:
      type: object
      properties:
        key:
          allOf:
          - $ref: '#/components/schemas/taintKey'
          description: The key of the taint.
        value:
          allOf:
          - $ref: '#/components/schemas/taintValue'
          description: The value of the taint.
        effect:
          allOf:
          - $ref: '#/components/schemas/TaintEffect'
          description: The effect of the taint.
      description: A property that allows a node to repel a `Pod`. For more information,
        see [Node taints on managed node groups](https://docs.aws.amazon.com/eks/latest/userguide/node-taints-managed-node-groups.html)
        in the _Amazon EKS User Guide_.
    TaintEffect:
      type: string
      enum:
      - NO_SCHEDULE
      - NO_EXECUTE
      - PREFER_NO_SCHEDULE
    ThrottlingException:
      type: object
      properties:
        clusterName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon EKS cluster associated with the exception.
        message:
          $ref: '#/components/schemas/String'
      description: The request or operation couldn't be performed because a service
        is throttling requests.
    Timestamp:
      type: string
      format: date-time
    UnsupportedAvailabilityZoneException:
      type: object
      properties:
        message:
          allOf:
          - $ref: '#/components/schemas/String'
          description: At least one of your specified cluster subnets is in an Availability
            Zone that does not support Amazon EKS. The exception output specifies
            the supported Availability Zones for your account, from which you can
            choose subnets for your cluster.
        clusterName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon EKS cluster associated with the exception.
        nodegroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon EKS managed node group associated with the exception.
        validZones:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: The supported Availability Zones for your account. Choose subnets
            in these Availability Zones for your cluster.
      description: At least one of your specified cluster subnets is in an Availability
        Zone that does not support Amazon EKS. The exception output specifies the
        supported Availability Zones for your account, from which you can choose subnets
        for your cluster.
    UntagResourceRequest:
      type: object
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) of the resource to delete tags
            from.
        tagKeys:
          allOf:
          - $ref: '#/components/schemas/TagKeyList'
          description: The keys of the tags to remove.
      required:
      - resourceArn
      - tagKeys
    UntagResourceResponse:
      type: object
      properties: {}
    Update:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A UUID that is used to track the update.
        status:
          allOf:
          - $ref: '#/components/schemas/UpdateStatus'
          description: The current status of the update.
        type:
          allOf:
          - $ref: '#/components/schemas/UpdateType'
          description: The type of the update.
        params:
          allOf:
          - $ref: '#/components/schemas/UpdateParams'
          description: A key-value map that contains the parameters associated with
            the update.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The Unix epoch timestamp at object creation.
        errors:
          allOf:
          - $ref: '#/components/schemas/ErrorDetails'
          description: Any errors associated with a `Failed` update.
      description: An object representing an asynchronous update.
    UpdateAccessConfigRequest:
      type: object
      properties:
        authenticationMode:
          allOf:
          - $ref: '#/components/schemas/AuthenticationMode'
          description: The desired authentication mode for the cluster.
      description: The access configuration information for the cluster.
    UpdateAccessEntryRequest:
      type: object
      properties:
        clusterName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of your cluster.
        principalArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ARN of the IAM principal for the `AccessEntry`.
        kubernetesGroups:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: 'The value for `name` that you''ve specified for `kind: Group`
            as a `subject` in a Kubernetes `RoleBinding` or `ClusterRoleBinding` object.
            Amazon EKS doesn''t confirm that the value for `name` exists in any bindings
            on your cluster. You can specify one or more names.


            Kubernetes authorizes the `principalArn` of the access entry to access
            any cluster objects that you''ve specified in a Kubernetes `Role` or `ClusterRole`
            object that is also specified in a binding''s `roleRef`. For more information
            about creating Kubernetes `RoleBinding`, `ClusterRoleBinding`, `Role`,
            or `ClusterRole` objects, see [Using RBAC Authorization in the Kubernetes
            documentation](https://kubernetes.io/docs/reference/access-authn-authz/rbac/).


            If you want Amazon EKS to authorize the `principalArn` (instead of, or
            in addition to Kubernetes authorizing the `principalArn`), you can associate
            one or more access policies to the access entry using `AssociateAccessPolicy`.
            If you associate any access policies, the `principalARN` has all permissions
            assigned in the associated access policies and all permissions in any
            Kubernetes `Role` or `ClusterRole` objects that the group names are bound
            to.'
        clientRequestToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request.
        username:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The username to authenticate to Kubernetes with. We recommend
            not specifying a username and letting Amazon EKS specify it for you. For
            more information about the value Amazon EKS specifies for you, or constraints
            before specifying your own username, see [Creating access entries](https://docs.aws.amazon.com/eks/latest/userguide/access-entries.html#creating-access-entries)
            in the _Amazon EKS User Guide_.
      required:
      - clusterName
      - principalArn
    UpdateAccessEntryResponse:
      type: object
      properties:
        accessEntry:
          allOf:
          - $ref: '#/components/schemas/AccessEntry'
          description: The ARN of the IAM principal for the `AccessEntry`.
    UpdateAddonRequest:
      type: object
      properties:
        clusterName:
          allOf:
          - $ref: '#/components/schemas/ClusterName'
          description: The name of your cluster.
        addonName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the add-on. The name must match one of the names
            returned by [ `ListAddons` ](https://docs.aws.amazon.com/eks/latest/APIReference/API_ListAddons.html).
        addonVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The version of the add-on. The version must match one of the
            versions returned by [ `DescribeAddonVersions` ](https://docs.aws.amazon.com/eks/latest/APIReference/API_DescribeAddonVersions.html).
        serviceAccountRoleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          description: 'The Amazon Resource Name (ARN) of an existing IAM role to
            bind to the add-on''s service account. The role must be assigned the IAM
            permissions required by the add-on. If you don''t specify an existing
            IAM role, then the add-on uses the permissions assigned to the node IAM
            role. For more information, see [Amazon EKS node IAM role](https://docs.aws.amazon.com/eks/latest/userguide/create-node-role.html)
            in the _Amazon EKS User Guide_.


            To specify an existing IAM role, you must have an IAM OpenID Connect (OIDC)
            provider created for your cluster. For more information, see [Enabling
            IAM roles for service accounts on your cluster](https://docs.aws.amazon.com/eks/latest/userguide/enable-iam-roles-for-service-accounts.html)
            in the _Amazon EKS User Guide_.'
        resolveConflicts:
          allOf:
          - $ref: '#/components/schemas/ResolveConflicts'
          description: "How to resolve field value conflicts for an Amazon EKS add-on\
            \ if you've changed a value from the Amazon EKS default value. Conflicts\
            \ are handled based on the option you choose:\n\n  * **None** – Amazon\
            \ EKS doesn't change the value. The update might fail.\n\n  * **Overwrite**\
            \ – Amazon EKS overwrites the changed value back to the Amazon EKS default\
            \ value.\n\n  * **Preserve** – Amazon EKS preserves the value. If you\
            \ choose this option, we recommend that you test any field and value changes\
            \ on a non-production cluster before updating the add-on on your production\
            \ cluster."
        clientRequestToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request.
        configurationValues:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The set of configuration values for the add-on that's created.
            The values that you provide are validated against the schema returned
            by `DescribeAddonConfiguration`.
        podIdentityAssociations:
          allOf:
          - $ref: '#/components/schemas/AddonPodIdentityAssociationsList'
          description: 'An array of Pod Identity Assocations to be updated. Each EKS
            Pod Identity association maps a Kubernetes service account to an IAM Role.
            If this value is left blank, no change. If an empty array is provided,
            existing Pod Identity Assocations owned by the Addon are deleted.


            For more information, see [Attach an IAM Role to an Amazon EKS add-on
            using Pod Identity](https://docs.aws.amazon.com/eks/latest/userguide/add-ons-iam.html)
            in the _Amazon EKS User Guide_.'
      required:
      - clusterName
      - addonName
    UpdateAddonResponse:
      type: object
      properties:
        update:
          $ref: '#/components/schemas/Update'
    UpdateClusterConfigRequest:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the Amazon EKS cluster to update.
        resourcesVpcConfig:
          $ref: '#/components/schemas/VpcConfigRequest'
        logging:
          allOf:
          - $ref: '#/components/schemas/Logging'
          description: 'Enable or disable exporting the Kubernetes control plane logs
            for your cluster to CloudWatch Logs . By default, cluster control plane
            logs aren''t exported to CloudWatch Logs . For more information, see [Amazon
            EKS cluster control plane logs](https://docs.aws.amazon.com/eks/latest/userguide/control-plane-logs.html)
            in the __Amazon EKS User Guide_ _.


            CloudWatch Logs ingestion, archive storage, and data scanning rates apply
            to exported control plane logs. For more information, see [CloudWatch
            Pricing](http://aws.amazon.com/cloudwatch/pricing/).'
        clientRequestToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request.
        accessConfig:
          allOf:
          - $ref: '#/components/schemas/UpdateAccessConfigRequest'
          description: The access configuration for the cluster.
        upgradePolicy:
          allOf:
          - $ref: '#/components/schemas/UpgradePolicyRequest'
          description: You can enable or disable extended support for clusters currently
            on standard support. You cannot disable extended support once it starts.
            You must enable extended support before your cluster exits standard support.
        zonalShiftConfig:
          allOf:
          - $ref: '#/components/schemas/ZonalShiftConfigRequest'
          description: 'Enable or disable ARC zonal shift for the cluster. If zonal
            shift is enabled, Amazon Web Services configures zonal autoshift for the
            cluster.


            Zonal shift is a feature of Amazon Application Recovery Controller (ARC).
            ARC zonal shift is designed to be a temporary measure that allows you
            to move traffic for a resource away from an impaired AZ until the zonal
            shift expires or you cancel it. You can extend the zonal shift if necessary.


            You can start a zonal shift for an EKS cluster, or you can allow Amazon
            Web Services to do it for you by enabling _zonal autoshift_. This shift
            updates the flow of east-to-west network traffic in your cluster to only
            consider network endpoints for Pods running on worker nodes in healthy
            AZs. Additionally, any ALB or NLB handling ingress traffic for applications
            in your EKS cluster will automatically route traffic to targets in the
            healthy AZs. For more information about zonal shift in EKS, see [Learn
            about Amazon Application Recovery Controller (ARC) Zonal Shift in Amazon
            EKS](https://docs.aws.amazon.com/eks/latest/userguide/zone-shift.html)
            in the __Amazon EKS User Guide_ _.'
        computeConfig:
          allOf:
          - $ref: '#/components/schemas/ComputeConfigRequest'
          description: Update the configuration of the compute capability of your
            EKS Auto Mode cluster. For example, enable the capability.
        kubernetesNetworkConfig:
          $ref: '#/components/schemas/KubernetesNetworkConfigRequest'
        storageConfig:
          allOf:
          - $ref: '#/components/schemas/StorageConfigRequest'
          description: Update the configuration of the block storage capability of
            your EKS Auto Mode cluster. For example, enable the capability.
        remoteNetworkConfig:
          $ref: '#/components/schemas/RemoteNetworkConfigRequest'
      required:
      - name
    UpdateClusterConfigResponse:
      type: object
      properties:
        update:
          $ref: '#/components/schemas/Update'
    UpdateClusterVersionRequest:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the Amazon EKS cluster to update.
        version:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The desired Kubernetes version following a successful update.
        clientRequestToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request.
        force:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Set this value to `true` to override upgrade-blocking readiness
            checks when updating a cluster.
      required:
      - name
      - version
    UpdateClusterVersionResponse:
      type: object
      properties:
        update:
          allOf:
          - $ref: '#/components/schemas/Update'
          description: The full description of the specified update
    UpdateEksAnywhereSubscriptionRequest:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the subscription.
        autoRenew:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: A boolean indicating whether or not to automatically renew
            the subscription.
        clientRequestToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Unique, case-sensitive identifier to ensure the idempotency
            of the request.
      required:
      - id
      - autoRenew
    UpdateEksAnywhereSubscriptionResponse:
      type: object
      properties:
        subscription:
          allOf:
          - $ref: '#/components/schemas/EksAnywhereSubscription'
          description: The full description of the updated subscription.
    UpdateLabelsPayload:
      type: object
      properties:
        addOrUpdateLabels:
          allOf:
          - $ref: '#/components/schemas/labelsMap'
          description: The Kubernetes `labels` to add or update.
        removeLabels:
          allOf:
          - $ref: '#/components/schemas/labelsKeyList'
          description: The Kubernetes `labels` to remove.
      description: An object representing a Kubernetes `label` change for a managed
        node group.
    UpdateNodegroupConfigRequest:
      type: object
      properties:
        clusterName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of your cluster.
        nodegroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the managed node group to update.
        labels:
          allOf:
          - $ref: '#/components/schemas/UpdateLabelsPayload'
          description: The Kubernetes `labels` to apply to the nodes in the node group
            after the update.
        taints:
          allOf:
          - $ref: '#/components/schemas/UpdateTaintsPayload'
          description: The Kubernetes taints to be applied to the nodes in the node
            group after the update. For more information, see [Node taints on managed
            node groups](https://docs.aws.amazon.com/eks/latest/userguide/node-taints-managed-node-groups.html).
        scalingConfig:
          allOf:
          - $ref: '#/components/schemas/NodegroupScalingConfig'
          description: The scaling configuration details for the Auto Scaling group
            after the update.
        updateConfig:
          allOf:
          - $ref: '#/components/schemas/NodegroupUpdateConfig'
          description: The node group update configuration.
        nodeRepairConfig:
          allOf:
          - $ref: '#/components/schemas/NodeRepairConfig'
          description: The node auto repair configuration for the node group.
        clientRequestToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request.
      required:
      - clusterName
      - nodegroupName
    UpdateNodegroupConfigResponse:
      type: object
      properties:
        update:
          $ref: '#/components/schemas/Update'
    UpdateNodegroupVersionRequest:
      type: object
      properties:
        clusterName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of your cluster.
        nodegroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the managed node group to update.
        version:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Kubernetes version to update to. If no version is specified,
            then the Kubernetes version of the node group does not change. You can
            specify the Kubernetes version of the cluster to update the node group
            to the latest AMI version of the cluster's Kubernetes version. If you
            specify `launchTemplate`, and your launch template uses a custom AMI,
            then don't specify `version`, or the node group update will fail. For
            more information about using launch templates with Amazon EKS, see [Customizing
            managed nodes with launch templates](https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html)
            in the _Amazon EKS User Guide_.
        releaseVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'The AMI version of the Amazon EKS optimized AMI to use for
            the update. By default, the latest available AMI version for the node
            group''s Kubernetes version is used. For information about Linux versions,
            see [Amazon EKS optimized Amazon Linux AMI versions](https://docs.aws.amazon.com/eks/latest/userguide/eks-linux-ami-versions.html)
            in the _Amazon EKS User Guide_. Amazon EKS managed node groups support
            the November 2022 and later releases of the Windows AMIs. For information
            about Windows versions, see [Amazon EKS optimized Windows AMI versions](https://docs.aws.amazon.com/eks/latest/userguide/eks-ami-versions-windows.html)
            in the _Amazon EKS User Guide_.


            If you specify `launchTemplate`, and your launch template uses a custom
            AMI, then don''t specify `releaseVersion`, or the node group update will
            fail. For more information about using launch templates with Amazon EKS,
            see [Customizing managed nodes with launch templates](https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html)
            in the _Amazon EKS User Guide_.'
        launchTemplate:
          allOf:
          - $ref: '#/components/schemas/LaunchTemplateSpecification'
          description: An object representing a node group's launch template specification.
            You can only update a node group using a launch template if the node group
            was originally deployed with a launch template. When updating, you must
            specify the same launch template ID or name that was used to create the
            node group.
        force:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Force the update if any `Pod` on the existing node group can't
            be drained due to a `Pod` disruption budget issue. If an update fails
            because all Pods can't be drained, you can force the update after it fails
            to terminate the old node whether or not any `Pod` is running on the node.
        clientRequestToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request.
      required:
      - clusterName
      - nodegroupName
    UpdateNodegroupVersionResponse:
      type: object
      properties:
        update:
          $ref: '#/components/schemas/Update'
    UpdateParam:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/UpdateParamType'
          description: The keys associated with an update request.
        value:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The value of the keys submitted as part of an update request.
      description: An object representing the details of an update request.
    UpdateParamType:
      type: string
      enum:
      - Version
      - PlatformVersion
      - EndpointPrivateAccess
      - EndpointPublicAccess
      - ClusterLogging
      - DesiredSize
      - LabelsToAdd
      - LabelsToRemove
      - TaintsToAdd
      - TaintsToRemove
      - MaxSize
      - MinSize
      - ReleaseVersion
      - PublicAccessCidrs
      - LaunchTemplateName
      - LaunchTemplateVersion
      - IdentityProviderConfig
      - EncryptionConfig
      - AddonVersion
      - ServiceAccountRoleArn
      - ResolveConflicts
      - MaxUnavailable
      - MaxUnavailablePercentage
      - NodeRepairEnabled
      - UpdateStrategy
      - ConfigurationValues
      - SecurityGroups
      - Subnets
      - AuthenticationMode
      - PodIdentityAssociations
      - UpgradePolicy
      - ZonalShiftConfig
      - ComputeConfig
      - StorageConfig
      - KubernetesNetworkConfig
      - RemoteNetworkConfig
    UpdateParams:
      type: array
      items:
        $ref: '#/components/schemas/UpdateParam'
    UpdatePodIdentityAssociationRequest:
      type: object
      properties:
        clusterName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the cluster that you want to update the association
            in.
        associationId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the association to be updated.
        roleArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The new IAM role to change the
        clientRequestToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request.
      required:
      - clusterName
      - associationId
    UpdatePodIdentityAssociationResponse:
      type: object
      properties:
        association:
          allOf:
          - $ref: '#/components/schemas/PodIdentityAssociation'
          description: The full description of the EKS Pod Identity association that
            was updated.
    UpdateStatus:
      type: string
      enum:
      - InProgress
      - Failed
      - Cancelled
      - Successful
    UpdateTaintsPayload:
      type: object
      properties:
        addOrUpdateTaints:
          allOf:
          - $ref: '#/components/schemas/taintsList'
          description: Kubernetes taints to be added or updated.
        removeTaints:
          allOf:
          - $ref: '#/components/schemas/taintsList'
          description: Kubernetes taints to remove.
      description: An object representing the details of an update to a taints payload.
        For more information, see [Node taints on managed node groups](https://docs.aws.amazon.com/eks/latest/userguide/node-taints-managed-node-groups.html)
        in the _Amazon EKS User Guide_.
    UpdateType:
      type: string
      enum:
      - VersionUpdate
      - EndpointAccessUpdate
      - LoggingUpdate
      - ConfigUpdate
      - AssociateIdentityProviderConfig
      - DisassociateIdentityProviderConfig
      - AssociateEncryptionConfig
      - AddonUpdate
      - VpcConfigUpdate
      - AccessConfigUpdate
      - UpgradePolicyUpdate
      - ZonalShiftConfigUpdate
      - AutoModeUpdate
      - RemoteNetworkConfigUpdate
    UpgradePolicyRequest:
      type: object
      properties:
        supportType:
          allOf:
          - $ref: '#/components/schemas/SupportType'
          description: 'If the cluster is set to `EXTENDED`, it will enter extended
            support at the end of standard support. If the cluster is set to `STANDARD`,
            it will be automatically upgraded at the end of standard support.


            [Learn more about EKS Extended Support in the _Amazon EKS User Guide_.](https://docs.aws.amazon.com/eks/latest/userguide/extended-support-control.html)'
      description: 'The support policy to use for the cluster. Extended support allows
        you to remain on specific Kubernetes versions for longer. Clusters in extended
        support have higher costs. The default value is `EXTENDED`. Use `STANDARD`
        to disable extended support.


        [Learn more about EKS Extended Support in the _Amazon EKS User Guide_.](https://docs.aws.amazon.com/eks/latest/userguide/extended-support-control.html)'
    UpgradePolicyResponse:
      type: object
      properties:
        supportType:
          allOf:
          - $ref: '#/components/schemas/SupportType'
          description: 'If the cluster is set to `EXTENDED`, it will enter extended
            support at the end of standard support. If the cluster is set to `STANDARD`,
            it will be automatically upgraded at the end of standard support.


            [Learn more about EKS Extended Support in the _Amazon EKS User Guide_.](https://docs.aws.amazon.com/eks/latest/userguide/extended-support-control.html)'
      description: 'This value indicates if extended support is enabled or disabled
        for the cluster.


        [Learn more about EKS Extended Support in the _Amazon EKS User Guide_.](https://docs.aws.amazon.com/eks/latest/userguide/extended-support-control.html)'
    VersionStatus:
      type: string
      enum:
      - UNSUPPORTED
      - STANDARD_SUPPORT
      - EXTENDED_SUPPORT
    VpcConfigRequest:
      type: object
      properties:
        subnetIds:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: Specify subnets for your Amazon EKS nodes. Amazon EKS creates
            cross-account elastic network interfaces in these subnets to allow communication
            between your nodes and the Kubernetes control plane.
        securityGroupIds:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: Specify one or more security groups for the cross-account elastic
            network interfaces that Amazon EKS creates to use that allow communication
            between your nodes and the Kubernetes control plane. If you don't specify
            any security groups, then familiarize yourself with the difference between
            Amazon EKS defaults for clusters deployed with Kubernetes. For more information,
            see [Amazon EKS security group considerations](https://docs.aws.amazon.com/eks/latest/userguide/sec-group-reqs.html)
            in the __Amazon EKS User Guide_ _.
        endpointPublicAccess:
          allOf:
          - $ref: '#/components/schemas/BoxedBoolean'
          description: Set this value to `false` to disable public access to your
            cluster's Kubernetes API server endpoint. If you disable public access,
            your cluster's Kubernetes API server can only receive requests from within
            the cluster VPC. The default value for this parameter is `true`, which
            enables public access for your Kubernetes API server. For more information,
            see [Amazon EKS cluster endpoint access control](https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html)
            in the __Amazon EKS User Guide_ _.
        endpointPrivateAccess:
          allOf:
          - $ref: '#/components/schemas/BoxedBoolean'
          description: Set this value to `true` to enable private access for your
            cluster's Kubernetes API server endpoint. If you enable private access,
            Kubernetes API requests from within your cluster's VPC use the private
            VPC endpoint. The default value for this parameter is `false`, which disables
            private access for your Kubernetes API server. If you disable private
            access and you have nodes or Fargate pods in the cluster, then ensure
            that `publicAccessCidrs` includes the necessary CIDR blocks for communication
            with the nodes or Fargate pods. For more information, see [Amazon EKS
            cluster endpoint access control](https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html)
            in the __Amazon EKS User Guide_ _.
        publicAccessCidrs:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: The CIDR blocks that are allowed access to your cluster's public
            Kubernetes API server endpoint. Communication to the endpoint from addresses
            outside of the CIDR blocks that you specify is denied. The default value
            is `0.0.0.0/0`. If you've disabled private endpoint access, make sure
            that you specify the necessary CIDR blocks for every node and Fargate
            `Pod` in the cluster. For more information, see [Amazon EKS cluster endpoint
            access control](https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html)
            in the __Amazon EKS User Guide_ _.
      description: An object representing the VPC configuration to use for an Amazon
        EKS cluster.
    VpcConfigResponse:
      type: object
      properties:
        subnetIds:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: The subnets associated with your cluster.
        securityGroupIds:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: The security groups associated with the cross-account elastic
            network interfaces that are used to allow communication between your nodes
            and the Kubernetes control plane.
        clusterSecurityGroupId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The cluster security group that was created by Amazon EKS for
            the cluster. Managed node groups use this security group for control-plane-to-data-plane
            communication.
        vpcId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The VPC associated with your cluster.
        endpointPublicAccess:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether the public API server endpoint is enabled.
        endpointPrivateAccess:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: This parameter indicates whether the Amazon EKS private API
            server endpoint is enabled. If the Amazon EKS private API server endpoint
            is enabled, Kubernetes API requests that originate from within your cluster's
            VPC use the private VPC endpoint instead of traversing the internet. If
            this value is disabled and you have nodes or Fargate pods in the cluster,
            then ensure that `publicAccessCidrs` includes the necessary CIDR blocks
            for communication with the nodes or Fargate pods. For more information,
            see [Amazon EKS cluster endpoint access control](https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html)
            in the __Amazon EKS User Guide_ _.
        publicAccessCidrs:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: The CIDR blocks that are allowed access to your cluster's public
            Kubernetes API server endpoint.
      description: An object representing an Amazon EKS cluster VPC configuration
        response.
    ZeroCapacity:
      type: integer
      minimum: 0
    ZonalShiftConfigRequest:
      type: object
      properties:
        enabled:
          allOf:
          - $ref: '#/components/schemas/BoxedBoolean'
          description: If zonal shift is enabled, Amazon Web Services configures zonal
            autoshift for the cluster.
      description: The configuration for zonal shift for the cluster.
    ZonalShiftConfigResponse:
      type: object
      properties:
        enabled:
          allOf:
          - $ref: '#/components/schemas/BoxedBoolean'
          description: Whether the zonal shift is enabled.
      description: The status of zonal shift configuration for the cluster
    configStatus:
      type: string
      enum:
      - CREATING
      - DELETING
      - ACTIVE
    labelKey:
      type: string
      minLength: 1
      maxLength: 63
    labelValue:
      type: string
      minLength: 1
      maxLength: 63
    labelsKeyList:
      type: array
      items:
        $ref: '#/components/schemas/String'
    labelsMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/labelValue'
    requiredClaimsKey:
      type: string
      minLength: 1
      maxLength: 63
    requiredClaimsMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/requiredClaimsValue'
    requiredClaimsValue:
      type: string
      minLength: 1
      maxLength: 253
    taintKey:
      type: string
      minLength: 1
      maxLength: 63
    taintValue:
      type: string
      minLength: 0
      maxLength: 63
    taintsList:
      type: array
      items:
        $ref: '#/components/schemas/Taint'
