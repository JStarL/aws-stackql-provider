openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: bedrock_data_automation
  x-aws-serviceName: bedrockdataautomation
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-07'
  version: '2023-07-26'
  title: Data Automation for Amazon Bedrock
  description: |-
    Amazon Bedrock Data Automation BuildTime
servers:
- description: The Data Automation for Amazon Bedrock regional endpoint
  url: https://bedrock-data-automation.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths:
  /blueprints/:
    put:
      operationId: CreateBlueprint
      description: |-
        Creates an Amazon Bedrock Data Automation Blueprint
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                blueprintName:
                  $ref: '#/components/schemas/BlueprintName'
                type:
                  $ref: '#/components/schemas/Type'
                blueprintStage:
                  $ref: '#/components/schemas/BlueprintStage'
                schema:
                  $ref: '#/components/schemas/BlueprintSchema'
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
                encryptionConfiguration:
                  $ref: '#/components/schemas/EncryptionConfiguration'
                tags:
                  $ref: '#/components/schemas/TagList'
      responses:
        '201': {}
        '403':
          description: |-
            This exception is thrown when a request is denied per access permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            This exception is thrown when there is a conflict performing an operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            This exception is thrown if there was an unexpected error during processing of request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '402':
          description: |-
            This exception is thrown when a request is made beyond the service quota
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            This exception is thrown when the number of requests exceeds the limit
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            This exception is thrown when the request's input validation fails
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    post:
      operationId: ListBlueprints
      description: |-
        Lists all existing Amazon Bedrock Data Automation Blueprints
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                blueprintArn:
                  $ref: '#/components/schemas/BlueprintArn'
                resourceOwner:
                  $ref: '#/components/schemas/ResourceOwner'
                blueprintStageFilter:
                  $ref: '#/components/schemas/BlueprintStageFilter'
                maxResults:
                  $ref: '#/components/schemas/MaxResults'
                nextToken:
                  $ref: '#/components/schemas/NextToken'
                projectFilter:
                  $ref: '#/components/schemas/DataAutomationProjectFilter'
      responses:
        '200': {}
        '403':
          description: |-
            This exception is thrown when a request is denied per access permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            This exception is thrown if there was an unexpected error during processing of request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            This exception is thrown when a resource referenced by the operation does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            This exception is thrown when the number of requests exceeds the limit
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            This exception is thrown when the request's input validation fails
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /blueprints/{blueprintArn}/versions/:
    post:
      operationId: CreateBlueprintVersion
      description: |-
        Creates a new version of an existing Amazon Bedrock Data Automation Blueprint
      parameters:
      - name: blueprintArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BlueprintArn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
      responses:
        '201': {}
        '403':
          description: |-
            This exception is thrown when a request is denied per access permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            This exception is thrown if there was an unexpected error during processing of request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            This exception is thrown when a resource referenced by the operation does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            This exception is thrown when a request is made beyond the service quota
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            This exception is thrown when the number of requests exceeds the limit
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            This exception is thrown when the request's input validation fails
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /data-automation-projects/:
    put:
      operationId: CreateDataAutomationProject
      description: |-
        Creates an Amazon Bedrock Data Automation Project
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                projectName:
                  $ref: '#/components/schemas/DataAutomationProjectName'
                projectDescription:
                  $ref: '#/components/schemas/DataAutomationProjectDescription'
                projectStage:
                  $ref: '#/components/schemas/DataAutomationProjectStage'
                standardOutputConfiguration:
                  $ref: '#/components/schemas/StandardOutputConfiguration'
                customOutputConfiguration:
                  $ref: '#/components/schemas/CustomOutputConfiguration'
                overrideConfiguration:
                  $ref: '#/components/schemas/OverrideConfiguration'
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
                encryptionConfiguration:
                  $ref: '#/components/schemas/EncryptionConfiguration'
                tags:
                  $ref: '#/components/schemas/TagList'
      responses:
        '201': {}
        '403':
          description: |-
            This exception is thrown when a request is denied per access permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            This exception is thrown when there is a conflict performing an operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            This exception is thrown if there was an unexpected error during processing of request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '402':
          description: |-
            This exception is thrown when a request is made beyond the service quota
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            This exception is thrown when the number of requests exceeds the limit
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            This exception is thrown when the request's input validation fails
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    post:
      operationId: ListDataAutomationProjects
      description: |-
        Lists all existing Amazon Bedrock Data Automation Projects
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                maxResults:
                  $ref: '#/components/schemas/MaxResults'
                nextToken:
                  $ref: '#/components/schemas/NextToken'
                projectStageFilter:
                  $ref: '#/components/schemas/DataAutomationProjectStageFilter'
                blueprintFilter:
                  $ref: '#/components/schemas/BlueprintFilter'
                resourceOwner:
                  $ref: '#/components/schemas/ResourceOwner'
      responses:
        '200': {}
        '403':
          description: |-
            This exception is thrown when a request is denied per access permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            This exception is thrown if there was an unexpected error during processing of request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            This exception is thrown when a resource referenced by the operation does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            This exception is thrown when the number of requests exceeds the limit
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            This exception is thrown when the request's input validation fails
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /blueprints/{blueprintArn}/:
    delete:
      operationId: DeleteBlueprint
      description: |-
        Deletes an existing Amazon Bedrock Data Automation Blueprint
      parameters:
      - name: blueprintArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BlueprintArn'
      - name: blueprintVersion
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/BlueprintVersion'
      responses:
        '200': {}
        '403':
          description: |-
            This exception is thrown when a request is denied per access permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            This exception is thrown if there was an unexpected error during processing of request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            This exception is thrown when a resource referenced by the operation does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            This exception is thrown when the number of requests exceeds the limit
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            This exception is thrown when the request's input validation fails
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    post:
      operationId: GetBlueprint
      description: |-
        Gets an existing Amazon Bedrock Data Automation Blueprint
      parameters:
      - name: blueprintArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BlueprintArn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                blueprintVersion:
                  $ref: '#/components/schemas/BlueprintVersion'
                blueprintStage:
                  $ref: '#/components/schemas/BlueprintStage'
      responses:
        '200': {}
        '403':
          description: |-
            This exception is thrown when a request is denied per access permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            This exception is thrown if there was an unexpected error during processing of request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            This exception is thrown when a resource referenced by the operation does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            This exception is thrown when the number of requests exceeds the limit
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            This exception is thrown when the request's input validation fails
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    put:
      operationId: UpdateBlueprint
      description: |-
        Updates an existing Amazon Bedrock Data Automation Blueprint
      parameters:
      - name: blueprintArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BlueprintArn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                schema:
                  $ref: '#/components/schemas/BlueprintSchema'
                blueprintStage:
                  $ref: '#/components/schemas/BlueprintStage'
                encryptionConfiguration:
                  $ref: '#/components/schemas/EncryptionConfiguration'
      responses:
        '200': {}
        '403':
          description: |-
            This exception is thrown when a request is denied per access permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            This exception is thrown when there is a conflict performing an operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            This exception is thrown if there was an unexpected error during processing of request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            This exception is thrown when a resource referenced by the operation does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            This exception is thrown when the number of requests exceeds the limit
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            This exception is thrown when the request's input validation fails
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /data-automation-projects/{projectArn}/:
    delete:
      operationId: DeleteDataAutomationProject
      description: |-
        Deletes an existing Amazon Bedrock Data Automation Project
      parameters:
      - name: projectArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DataAutomationProjectArn'
      responses:
        '200': {}
        '403':
          description: |-
            This exception is thrown when a request is denied per access permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            This exception is thrown if there was an unexpected error during processing of request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            This exception is thrown when a resource referenced by the operation does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            This exception is thrown when the number of requests exceeds the limit
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            This exception is thrown when the request's input validation fails
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    post:
      operationId: GetDataAutomationProject
      description: |-
        Gets an existing Amazon Bedrock Data Automation Project
      parameters:
      - name: projectArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DataAutomationProjectArn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                projectStage:
                  $ref: '#/components/schemas/DataAutomationProjectStage'
      responses:
        '200': {}
        '403':
          description: |-
            This exception is thrown when a request is denied per access permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            This exception is thrown if there was an unexpected error during processing of request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            This exception is thrown when a resource referenced by the operation does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            This exception is thrown when the number of requests exceeds the limit
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            This exception is thrown when the request's input validation fails
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    put:
      operationId: UpdateDataAutomationProject
      description: |-
        Updates an existing Amazon Bedrock Data Automation Project
      parameters:
      - name: projectArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DataAutomationProjectArn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                projectStage:
                  $ref: '#/components/schemas/DataAutomationProjectStage'
                projectDescription:
                  $ref: '#/components/schemas/DataAutomationProjectDescription'
                standardOutputConfiguration:
                  $ref: '#/components/schemas/StandardOutputConfiguration'
                customOutputConfiguration:
                  $ref: '#/components/schemas/CustomOutputConfiguration'
                overrideConfiguration:
                  $ref: '#/components/schemas/OverrideConfiguration'
                encryptionConfiguration:
                  $ref: '#/components/schemas/EncryptionConfiguration'
      responses:
        '200': {}
        '403':
          description: |-
            This exception is thrown when a request is denied per access permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            This exception is thrown when there is a conflict performing an operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            This exception is thrown if there was an unexpected error during processing of request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            This exception is thrown when a resource referenced by the operation does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            This exception is thrown when a request is made beyond the service quota
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            This exception is thrown when the number of requests exceeds the limit
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            This exception is thrown when the request's input validation fails
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /listTagsForResource:
    post:
      operationId: ListTagsForResource
      description: |-
        List tags for an Amazon Bedrock Data Automation resource
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resourceARN:
                  $ref: '#/components/schemas/TaggableResourceArn'
      responses:
        '200': {}
        '403':
          description: |-
            This exception is thrown when a request is denied per access permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            This exception is thrown if there was an unexpected error during processing of request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            This exception is thrown when a resource referenced by the operation does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            This exception is thrown when the number of requests exceeds the limit
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            This exception is thrown when the request's input validation fails
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /tagResource:
    post:
      operationId: TagResource
      description: |-
        Tag an Amazon Bedrock Data Automation resource
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resourceARN:
                  $ref: '#/components/schemas/TaggableResourceArn'
                tags:
                  $ref: '#/components/schemas/TagList'
      responses:
        '200': {}
        '403':
          description: |-
            This exception is thrown when a request is denied per access permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            This exception is thrown if there was an unexpected error during processing of request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            This exception is thrown when a resource referenced by the operation does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            This exception is thrown when a request is made beyond the service quota
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            This exception is thrown when the number of requests exceeds the limit
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            This exception is thrown when the request's input validation fails
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /untagResource:
    post:
      operationId: UntagResource
      description: |-
        Untag an Amazon Bedrock Data Automation resource
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resourceARN:
                  $ref: '#/components/schemas/TaggableResourceArn'
                tagKeys:
                  $ref: '#/components/schemas/TagKeyList'
      responses:
        '200': {}
        '403':
          description: |-
            This exception is thrown when a request is denied per access permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            This exception is thrown if there was an unexpected error during processing of request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            This exception is thrown when a resource referenced by the operation does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            This exception is thrown when the number of requests exceeds the limit
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            This exception is thrown when the request's input validation fails
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
components:
  schemas:
    AccessDeniedException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/NonBlankString'
      description: This exception is thrown when a request is denied per access permissions
    AudioExtractionCategory:
      type: object
      properties:
        state:
          $ref: '#/components/schemas/State'
        types:
          $ref: '#/components/schemas/AudioExtractionCategoryTypes'
      required:
      - state
      description: Category of Audio Extraction
    AudioExtractionCategoryType:
      type: string
      enum:
      - AUDIO_CONTENT_MODERATION
      - TRANSCRIPT
      - TOPIC_CONTENT_MODERATION
    AudioExtractionCategoryTypes:
      type: array
      items:
        $ref: '#/components/schemas/AudioExtractionCategoryType'
      description: List of Audio Extraction Category Type
    AudioOverrideConfiguration:
      type: object
      properties:
        modalityProcessing:
          $ref: '#/components/schemas/ModalityProcessingConfiguration'
      description: Override Configuration of Audio
    AudioStandardExtraction:
      type: object
      properties:
        category:
          $ref: '#/components/schemas/AudioExtractionCategory'
      required:
      - category
      description: Standard Extraction Configuration of Audio
    AudioStandardGenerativeField:
      type: object
      properties:
        state:
          $ref: '#/components/schemas/State'
        types:
          $ref: '#/components/schemas/AudioStandardGenerativeFieldTypes'
      required:
      - state
      description: Standard Generative Field Configuration of Audio
    AudioStandardGenerativeFieldType:
      type: string
      enum:
      - AUDIO_SUMMARY
      - IAB
      - TOPIC_SUMMARY
    AudioStandardGenerativeFieldTypes:
      type: array
      items:
        $ref: '#/components/schemas/AudioStandardGenerativeFieldType'
      description: List of Audio Standard Generative Field Type
    AudioStandardOutputConfiguration:
      type: object
      properties:
        extraction:
          $ref: '#/components/schemas/AudioStandardExtraction'
        generativeField:
          $ref: '#/components/schemas/AudioStandardGenerativeField'
      description: Standard Output Configuration of Audio
    Blueprint:
      type: object
      properties:
        blueprintArn:
          $ref: '#/components/schemas/BlueprintArn'
        schema:
          $ref: '#/components/schemas/BlueprintSchema'
        type:
          $ref: '#/components/schemas/Type'
        creationTime:
          $ref: '#/components/schemas/DateTimestamp'
        lastModifiedTime:
          $ref: '#/components/schemas/DateTimestamp'
        blueprintName:
          $ref: '#/components/schemas/BlueprintName'
        blueprintVersion:
          $ref: '#/components/schemas/BlueprintVersion'
        blueprintStage:
          $ref: '#/components/schemas/BlueprintStage'
        kmsKeyId:
          $ref: '#/components/schemas/KmsKeyId'
        kmsEncryptionContext:
          $ref: '#/components/schemas/KmsEncryptionContext'
      required:
      - blueprintArn
      - schema
      - type
      - creationTime
      - lastModifiedTime
      - blueprintName
      description: Contains the information of a Blueprint.
    BlueprintArn:
      type: string
      pattern: ^arn:aws(|-cn|-us-gov):bedrock:[a-zA-Z0-9-]*:(aws|[0-9]{12}):blueprint/(bedrock-data-automation-public-[a-zA-Z0-9-_]{1,30}|[a-zA-Z0-9-]{12,36})$
      maxLength: 128
    BlueprintFilter:
      type: object
      properties:
        blueprintArn:
          $ref: '#/components/schemas/BlueprintArn'
        blueprintVersion:
          $ref: '#/components/schemas/BlueprintVersion'
        blueprintStage:
          $ref: '#/components/schemas/BlueprintStage'
      required:
      - blueprintArn
      description: Blueprint Filter
    BlueprintItem:
      type: object
      properties:
        blueprintArn:
          $ref: '#/components/schemas/BlueprintArn'
        blueprintVersion:
          $ref: '#/components/schemas/BlueprintVersion'
        blueprintStage:
          $ref: '#/components/schemas/BlueprintStage'
      required:
      - blueprintArn
      description: Blueprint Item
    BlueprintItems:
      type: array
      items:
        $ref: '#/components/schemas/BlueprintItem'
      description: List of Blueprint Item
    BlueprintName:
      type: string
      pattern: ^[a-zA-Z0-9-_]+$
      minLength: 1
      maxLength: 128
    BlueprintSchema:
      type: string
      minLength: 1
      maxLength: 100000
    BlueprintStage:
      type: string
      enum:
      - DEVELOPMENT
      - LIVE
      description: Stage of the Blueprint
    BlueprintStageFilter:
      type: string
      enum:
      - DEVELOPMENT
      - LIVE
      - ALL
      description: Blueprint Stage filter
    BlueprintSummary:
      type: object
      properties:
        blueprintArn:
          $ref: '#/components/schemas/BlueprintArn'
        blueprintVersion:
          $ref: '#/components/schemas/BlueprintVersion'
        blueprintStage:
          $ref: '#/components/schemas/BlueprintStage'
        blueprintName:
          $ref: '#/components/schemas/BlueprintName'
        creationTime:
          $ref: '#/components/schemas/DateTimestamp'
        lastModifiedTime:
          $ref: '#/components/schemas/DateTimestamp'
      required:
      - blueprintArn
      - creationTime
      description: Summary of a Blueprint
    BlueprintVersion:
      type: string
      pattern: ^[0-9]*$
      minLength: 1
      maxLength: 128
    Blueprints:
      type: array
      items:
        $ref: '#/components/schemas/BlueprintSummary'
      description: List of Blueprints
    ClientToken:
      type: string
      pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,256}$
      minLength: 33
      maxLength: 256
    ConflictException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/NonBlankString'
      description: This exception is thrown when there is a conflict performing an
        operation
    CreateBlueprintRequest:
      type: object
      properties:
        blueprintName:
          $ref: '#/components/schemas/BlueprintName'
        type:
          $ref: '#/components/schemas/Type'
        blueprintStage:
          $ref: '#/components/schemas/BlueprintStage'
        schema:
          $ref: '#/components/schemas/BlueprintSchema'
        clientToken:
          $ref: '#/components/schemas/ClientToken'
        encryptionConfiguration:
          $ref: '#/components/schemas/EncryptionConfiguration'
        tags:
          $ref: '#/components/schemas/TagList'
      required:
      - blueprintName
      - type
      - schema
      description: Create Blueprint Request
    CreateBlueprintResponse:
      type: object
      properties:
        blueprint:
          $ref: '#/components/schemas/Blueprint'
      required:
      - blueprint
      description: Create Blueprint Response
    CreateBlueprintVersionRequest:
      type: object
      properties:
        blueprintArn:
          allOf:
          - $ref: '#/components/schemas/BlueprintArn'
          description: ARN generated at the server side when a Blueprint is created
        clientToken:
          $ref: '#/components/schemas/ClientToken'
      required:
      - blueprintArn
      description: Create Blueprint Version Request
    CreateBlueprintVersionResponse:
      type: object
      properties:
        blueprint:
          $ref: '#/components/schemas/Blueprint'
      required:
      - blueprint
      description: Create Blueprint Version Response
    CreateDataAutomationProjectRequest:
      type: object
      properties:
        projectName:
          $ref: '#/components/schemas/DataAutomationProjectName'
        projectDescription:
          $ref: '#/components/schemas/DataAutomationProjectDescription'
        projectStage:
          $ref: '#/components/schemas/DataAutomationProjectStage'
        standardOutputConfiguration:
          $ref: '#/components/schemas/StandardOutputConfiguration'
        customOutputConfiguration:
          $ref: '#/components/schemas/CustomOutputConfiguration'
        overrideConfiguration:
          $ref: '#/components/schemas/OverrideConfiguration'
        clientToken:
          $ref: '#/components/schemas/ClientToken'
        encryptionConfiguration:
          $ref: '#/components/schemas/EncryptionConfiguration'
        tags:
          $ref: '#/components/schemas/TagList'
      required:
      - projectName
      - standardOutputConfiguration
      description: Create DataAutomationProject Request
    CreateDataAutomationProjectResponse:
      type: object
      properties:
        projectArn:
          $ref: '#/components/schemas/DataAutomationProjectArn'
        projectStage:
          $ref: '#/components/schemas/DataAutomationProjectStage'
        status:
          $ref: '#/components/schemas/DataAutomationProjectStatus'
      required:
      - projectArn
      description: Create DataAutomationProject Response
    CustomOutputConfiguration:
      type: object
      properties:
        blueprints:
          $ref: '#/components/schemas/BlueprintItems'
      description: Custom output configuration
    DataAutomationProject:
      type: object
      properties:
        projectArn:
          $ref: '#/components/schemas/DataAutomationProjectArn'
        creationTime:
          $ref: '#/components/schemas/DateTimestamp'
        lastModifiedTime:
          $ref: '#/components/schemas/DateTimestamp'
        projectName:
          $ref: '#/components/schemas/DataAutomationProjectName'
        projectStage:
          $ref: '#/components/schemas/DataAutomationProjectStage'
        projectDescription:
          $ref: '#/components/schemas/DataAutomationProjectDescription'
        standardOutputConfiguration:
          $ref: '#/components/schemas/StandardOutputConfiguration'
        customOutputConfiguration:
          $ref: '#/components/schemas/CustomOutputConfiguration'
        overrideConfiguration:
          $ref: '#/components/schemas/OverrideConfiguration'
        status:
          $ref: '#/components/schemas/DataAutomationProjectStatus'
        kmsKeyId:
          $ref: '#/components/schemas/KmsKeyId'
        kmsEncryptionContext:
          $ref: '#/components/schemas/KmsEncryptionContext'
      required:
      - projectArn
      - creationTime
      - lastModifiedTime
      - projectName
      - status
      description: Contains the information of a DataAutomationProject.
    DataAutomationProjectArn:
      type: string
      pattern: ^arn:aws(|-cn|-us-gov):bedrock:[a-zA-Z0-9-]*:(aws|[0-9]{12}):data-automation-project/[a-zA-Z0-9-]{12,36}$
      maxLength: 128
    DataAutomationProjectDescription:
      type: string
      minLength: 0
      maxLength: 300
    DataAutomationProjectFilter:
      type: object
      properties:
        projectArn:
          $ref: '#/components/schemas/DataAutomationProjectArn'
        projectStage:
          $ref: '#/components/schemas/DataAutomationProjectStage'
      required:
      - projectArn
      description: Data Automation Project Filter
    DataAutomationProjectName:
      type: string
      pattern: ^[a-zA-Z0-9-_]+$
      minLength: 1
      maxLength: 128
    DataAutomationProjectStage:
      type: string
      enum:
      - DEVELOPMENT
      - LIVE
      description: Stage of the Project
    DataAutomationProjectStageFilter:
      type: string
      enum:
      - DEVELOPMENT
      - LIVE
      - ALL
      description: Project Stage filter
    DataAutomationProjectStatus:
      type: string
      enum:
      - COMPLETED
      - IN_PROGRESS
      - FAILED
      description: Status of Data Automation Project
    DataAutomationProjectSummaries:
      type: array
      items:
        $ref: '#/components/schemas/DataAutomationProjectSummary'
      description: List of DataAutomationProjectSummary
    DataAutomationProjectSummary:
      type: object
      properties:
        projectArn:
          $ref: '#/components/schemas/DataAutomationProjectArn'
        projectStage:
          $ref: '#/components/schemas/DataAutomationProjectStage'
        projectName:
          $ref: '#/components/schemas/DataAutomationProjectName'
        creationTime:
          $ref: '#/components/schemas/DateTimestamp'
      required:
      - projectArn
      - creationTime
      description: Summary of a DataAutomationProject
    DateTimestamp:
      type: string
      format: date-time
      description: Time Stamp
    DeleteBlueprintRequest:
      type: object
      properties:
        blueprintArn:
          allOf:
          - $ref: '#/components/schemas/BlueprintArn'
          description: ARN generated at the server side when a Blueprint is created
        blueprintVersion:
          allOf:
          - $ref: '#/components/schemas/BlueprintVersion'
          description: Optional field to delete a specific Blueprint version
      required:
      - blueprintArn
      description: Delete Blueprint Request
    DeleteBlueprintResponse:
      type: object
      properties: {}
      description: Delete Blueprint Response
    DeleteDataAutomationProjectRequest:
      type: object
      properties:
        projectArn:
          allOf:
          - $ref: '#/components/schemas/DataAutomationProjectArn'
          description: ARN generated at the server side when a DataAutomationProject
            is created
      required:
      - projectArn
      description: Delete DataAutomationProject Request
    DeleteDataAutomationProjectResponse:
      type: object
      properties:
        projectArn:
          $ref: '#/components/schemas/DataAutomationProjectArn'
        status:
          $ref: '#/components/schemas/DataAutomationProjectStatus'
      required:
      - projectArn
      description: Delete DataAutomationProject Response
    DesiredModality:
      type: string
      enum:
      - IMAGE
      - DOCUMENT
      - AUDIO
      - VIDEO
      description: Desired Modality types
    DocumentBoundingBox:
      type: object
      properties:
        state:
          $ref: '#/components/schemas/State'
      required:
      - state
      description: Bounding Box Configuration of Document Extraction
    DocumentExtractionGranularity:
      type: object
      properties:
        types:
          $ref: '#/components/schemas/DocumentExtractionGranularityTypes'
      description: Granularity of Document Extraction
    DocumentExtractionGranularityType:
      type: string
      enum:
      - DOCUMENT
      - PAGE
      - ELEMENT
      - WORD
      - LINE
    DocumentExtractionGranularityTypes:
      type: array
      items:
        $ref: '#/components/schemas/DocumentExtractionGranularityType'
      description: List of Document Extraction Granularity Type
    DocumentOutputAdditionalFileFormat:
      type: object
      properties:
        state:
          $ref: '#/components/schemas/State'
      required:
      - state
      description: Additional File Format of Document Output
    DocumentOutputFormat:
      type: object
      properties:
        textFormat:
          $ref: '#/components/schemas/DocumentOutputTextFormat'
        additionalFileFormat:
          $ref: '#/components/schemas/DocumentOutputAdditionalFileFormat'
      required:
      - textFormat
      - additionalFileFormat
      description: Output Format of Document
    DocumentOutputTextFormat:
      type: object
      properties:
        types:
          $ref: '#/components/schemas/DocumentOutputTextFormatTypes'
      description: Text Format of Document Output
    DocumentOutputTextFormatType:
      type: string
      enum:
      - PLAIN_TEXT
      - MARKDOWN
      - HTML
      - CSV
    DocumentOutputTextFormatTypes:
      type: array
      items:
        $ref: '#/components/schemas/DocumentOutputTextFormatType'
      description: List of Document Output Text Format Type
    DocumentOverrideConfiguration:
      type: object
      properties:
        splitter:
          $ref: '#/components/schemas/SplitterConfiguration'
        modalityProcessing:
          $ref: '#/components/schemas/ModalityProcessingConfiguration'
      description: Override Configuration of Document
    DocumentStandardExtraction:
      type: object
      properties:
        granularity:
          $ref: '#/components/schemas/DocumentExtractionGranularity'
        boundingBox:
          $ref: '#/components/schemas/DocumentBoundingBox'
      required:
      - granularity
      - boundingBox
      description: Standard Extraction Configuration of Document
    DocumentStandardGenerativeField:
      type: object
      properties:
        state:
          $ref: '#/components/schemas/State'
      required:
      - state
      description: Standard Generative Field Configuration of Document
    DocumentStandardOutputConfiguration:
      type: object
      properties:
        extraction:
          $ref: '#/components/schemas/DocumentStandardExtraction'
        generativeField:
          $ref: '#/components/schemas/DocumentStandardGenerativeField'
        outputFormat:
          $ref: '#/components/schemas/DocumentOutputFormat'
      description: Standard Output Configuration of Document
    EncryptionConfiguration:
      type: object
      properties:
        kmsKeyId:
          $ref: '#/components/schemas/KmsKeyId'
        kmsEncryptionContext:
          $ref: '#/components/schemas/KmsEncryptionContext'
      required:
      - kmsKeyId
      description: KMS Encryption Configuration
    EncryptionContextKey:
      type: string
      pattern: ^.*\S.*$
      minLength: 1
      maxLength: 2000
    EncryptionContextValue:
      type: string
      pattern: ^.*\S.*$
      minLength: 1
      maxLength: 2000
    GetBlueprintRequest:
      type: object
      properties:
        blueprintArn:
          allOf:
          - $ref: '#/components/schemas/BlueprintArn'
          description: ARN generated at the server side when a Blueprint is created
        blueprintVersion:
          allOf:
          - $ref: '#/components/schemas/BlueprintVersion'
          description: Optional field to get a specific Blueprint version
        blueprintStage:
          allOf:
          - $ref: '#/components/schemas/BlueprintStage'
          description: Optional field to get a specific Blueprint stage
      required:
      - blueprintArn
      description: Get Blueprint Request
    GetBlueprintResponse:
      type: object
      properties:
        blueprint:
          $ref: '#/components/schemas/Blueprint'
      required:
      - blueprint
      description: Get Blueprint Response
    GetDataAutomationProjectRequest:
      type: object
      properties:
        projectArn:
          allOf:
          - $ref: '#/components/schemas/DataAutomationProjectArn'
          description: ARN generated at the server side when a DataAutomationProject
            is created
        projectStage:
          allOf:
          - $ref: '#/components/schemas/DataAutomationProjectStage'
          description: Optional field to delete a specific DataAutomationProject stage
      required:
      - projectArn
      description: Get DataAutomationProject Request
    GetDataAutomationProjectResponse:
      type: object
      properties:
        project:
          $ref: '#/components/schemas/DataAutomationProject'
      required:
      - project
      description: Get DataAutomationProject Response
    ImageBoundingBox:
      type: object
      properties:
        state:
          $ref: '#/components/schemas/State'
      required:
      - state
      description: Bounding Box Configuration of Image Extraction
    ImageExtractionCategory:
      type: object
      properties:
        state:
          $ref: '#/components/schemas/State'
        types:
          $ref: '#/components/schemas/ImageExtractionCategoryTypes'
      required:
      - state
      description: Category of Image Extraction
    ImageExtractionCategoryType:
      type: string
      enum:
      - CONTENT_MODERATION
      - TEXT_DETECTION
      - LOGOS
    ImageExtractionCategoryTypes:
      type: array
      items:
        $ref: '#/components/schemas/ImageExtractionCategoryType'
      description: List of Image Extraction Category
    ImageOverrideConfiguration:
      type: object
      properties:
        modalityProcessing:
          $ref: '#/components/schemas/ModalityProcessingConfiguration'
      description: Override Configuration of Image
    ImageStandardExtraction:
      type: object
      properties:
        category:
          $ref: '#/components/schemas/ImageExtractionCategory'
        boundingBox:
          $ref: '#/components/schemas/ImageBoundingBox'
      required:
      - category
      - boundingBox
      description: Standard Extraction Configuration of Image
    ImageStandardGenerativeField:
      type: object
      properties:
        state:
          $ref: '#/components/schemas/State'
        types:
          $ref: '#/components/schemas/ImageStandardGenerativeFieldTypes'
      required:
      - state
      description: Standard Generative Field Configuration of Image
    ImageStandardGenerativeFieldType:
      type: string
      enum:
      - IMAGE_SUMMARY
      - IAB
    ImageStandardGenerativeFieldTypes:
      type: array
      items:
        $ref: '#/components/schemas/ImageStandardGenerativeFieldType'
      description: List of Image Standard Generative Field Type
    ImageStandardOutputConfiguration:
      type: object
      properties:
        extraction:
          $ref: '#/components/schemas/ImageStandardExtraction'
        generativeField:
          $ref: '#/components/schemas/ImageStandardGenerativeField'
      description: Standard Output Configuration of Image
    InternalServerException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/NonBlankString'
      description: This exception is thrown if there was an unexpected error during
        processing of request
    KmsEncryptionContext:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/EncryptionContextValue'
      description: KMS Encryption Context
    KmsKeyId:
      type: string
      pattern: ^[A-Za-z0-9][A-Za-z0-9:_/+=,@.-]+$
      minLength: 1
      maxLength: 2048
    ListBlueprintsRequest:
      type: object
      properties:
        blueprintArn:
          $ref: '#/components/schemas/BlueprintArn'
        resourceOwner:
          $ref: '#/components/schemas/ResourceOwner'
        blueprintStageFilter:
          $ref: '#/components/schemas/BlueprintStageFilter'
        maxResults:
          $ref: '#/components/schemas/MaxResults'
        nextToken:
          $ref: '#/components/schemas/NextToken'
        projectFilter:
          $ref: '#/components/schemas/DataAutomationProjectFilter'
      description: List Blueprint Request
    ListBlueprintsResponse:
      type: object
      properties:
        blueprints:
          $ref: '#/components/schemas/Blueprints'
        nextToken:
          $ref: '#/components/schemas/NextToken'
      required:
      - blueprints
      description: List Blueprint Response
    ListDataAutomationProjectsRequest:
      type: object
      properties:
        maxResults:
          $ref: '#/components/schemas/MaxResults'
        nextToken:
          $ref: '#/components/schemas/NextToken'
        projectStageFilter:
          $ref: '#/components/schemas/DataAutomationProjectStageFilter'
        blueprintFilter:
          $ref: '#/components/schemas/BlueprintFilter'
        resourceOwner:
          $ref: '#/components/schemas/ResourceOwner'
      description: List DataAutomationProject Request
    ListDataAutomationProjectsResponse:
      type: object
      properties:
        projects:
          $ref: '#/components/schemas/DataAutomationProjectSummaries'
        nextToken:
          $ref: '#/components/schemas/NextToken'
      required:
      - projects
      description: List DataAutomationProject Response
    ListTagsForResourceRequest:
      type: object
      properties:
        resourceARN:
          $ref: '#/components/schemas/TaggableResourceArn'
      required:
      - resourceARN
    ListTagsForResourceResponse:
      type: object
      properties:
        tags:
          $ref: '#/components/schemas/TagList'
    MaxResults:
      type: integer
      minimum: 1
      maximum: 1000
      description: Max Results
    ModalityProcessingConfiguration:
      type: object
      properties:
        state:
          $ref: '#/components/schemas/State'
      description: Configuration to enable/disable processing of modality
    ModalityRoutingConfiguration:
      type: object
      properties:
        jpeg:
          $ref: '#/components/schemas/DesiredModality'
        png:
          $ref: '#/components/schemas/DesiredModality'
        mp4:
          $ref: '#/components/schemas/DesiredModality'
        mov:
          $ref: '#/components/schemas/DesiredModality'
      description: Configuration for routing file type to desired modality
    NextToken:
      type: string
      pattern: ^\S*$
      minLength: 1
      maxLength: 2048
    NonBlankString:
      type: string
      pattern: ^[\s\S]+$
    OverrideConfiguration:
      type: object
      properties:
        document:
          $ref: '#/components/schemas/DocumentOverrideConfiguration'
        image:
          $ref: '#/components/schemas/ImageOverrideConfiguration'
        video:
          $ref: '#/components/schemas/VideoOverrideConfiguration'
        audio:
          $ref: '#/components/schemas/AudioOverrideConfiguration'
        modalityRouting:
          $ref: '#/components/schemas/ModalityRoutingConfiguration'
      description: Override configuration
    ResourceNotFoundException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/NonBlankString'
      description: This exception is thrown when a resource referenced by the operation
        does not exist
    ResourceOwner:
      type: string
      enum:
      - SERVICE
      - ACCOUNT
      description: Resource Owner
    ServiceQuotaExceededException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/NonBlankString'
      description: This exception is thrown when a request is made beyond the service
        quota
    SplitterConfiguration:
      type: object
      properties:
        state:
          $ref: '#/components/schemas/State'
      description: Configuration of Splitter
    StandardOutputConfiguration:
      type: object
      properties:
        document:
          $ref: '#/components/schemas/DocumentStandardOutputConfiguration'
        image:
          $ref: '#/components/schemas/ImageStandardOutputConfiguration'
        video:
          $ref: '#/components/schemas/VideoStandardOutputConfiguration'
        audio:
          $ref: '#/components/schemas/AudioStandardOutputConfiguration'
      description: Standard output configuration
    State:
      type: string
      enum:
      - ENABLED
      - DISABLED
      description: State
    Tag:
      type: object
      properties:
        key:
          $ref: '#/components/schemas/TagKey'
        value:
          $ref: '#/components/schemas/TagValue'
      required:
      - key
      - value
      description: Key value pair of a tag
    TagKey:
      type: string
      minLength: 1
      maxLength: 128
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
      description: List of tag keys
    TagList:
      type: array
      items:
        $ref: '#/components/schemas/Tag'
      description: List of tags
    TagResourceRequest:
      type: object
      properties:
        resourceARN:
          $ref: '#/components/schemas/TaggableResourceArn'
        tags:
          $ref: '#/components/schemas/TagList'
      required:
      - resourceARN
      - tags
    TagResourceResponse:
      type: object
      properties: {}
    TagValue:
      type: string
      minLength: 0
      maxLength: 256
    TaggableResourceArn:
      type: string
      pattern: ^arn:aws(|-cn|-us-gov):bedrock:[a-z0-9-]*:[0-9]{12}:(blueprint|data-automation-project)/[a-zA-Z0-9-]{12,36}$
      minLength: 20
      maxLength: 1011
    ThrottlingException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/NonBlankString'
      description: This exception is thrown when the number of requests exceeds the
        limit
    Type:
      type: string
      enum:
      - DOCUMENT
      - IMAGE
      description: Type
    UntagResourceRequest:
      type: object
      properties:
        resourceARN:
          $ref: '#/components/schemas/TaggableResourceArn'
        tagKeys:
          $ref: '#/components/schemas/TagKeyList'
      required:
      - resourceARN
      - tagKeys
    UntagResourceResponse:
      type: object
      properties: {}
    UpdateBlueprintRequest:
      type: object
      properties:
        blueprintArn:
          allOf:
          - $ref: '#/components/schemas/BlueprintArn'
          description: ARN generated at the server side when a Blueprint is created
        schema:
          $ref: '#/components/schemas/BlueprintSchema'
        blueprintStage:
          $ref: '#/components/schemas/BlueprintStage'
        encryptionConfiguration:
          $ref: '#/components/schemas/EncryptionConfiguration'
      required:
      - blueprintArn
      - schema
      description: Update Blueprint Request
    UpdateBlueprintResponse:
      type: object
      properties:
        blueprint:
          $ref: '#/components/schemas/Blueprint'
      required:
      - blueprint
      description: Update Blueprint Response
    UpdateDataAutomationProjectRequest:
      type: object
      properties:
        projectArn:
          allOf:
          - $ref: '#/components/schemas/DataAutomationProjectArn'
          description: ARN generated at the server side when a DataAutomationProject
            is created
        projectStage:
          $ref: '#/components/schemas/DataAutomationProjectStage'
        projectDescription:
          $ref: '#/components/schemas/DataAutomationProjectDescription'
        standardOutputConfiguration:
          $ref: '#/components/schemas/StandardOutputConfiguration'
        customOutputConfiguration:
          $ref: '#/components/schemas/CustomOutputConfiguration'
        overrideConfiguration:
          $ref: '#/components/schemas/OverrideConfiguration'
        encryptionConfiguration:
          $ref: '#/components/schemas/EncryptionConfiguration'
      required:
      - projectArn
      - standardOutputConfiguration
      description: Update DataAutomationProject Request
    UpdateDataAutomationProjectResponse:
      type: object
      properties:
        projectArn:
          $ref: '#/components/schemas/DataAutomationProjectArn'
        projectStage:
          $ref: '#/components/schemas/DataAutomationProjectStage'
        status:
          $ref: '#/components/schemas/DataAutomationProjectStatus'
      required:
      - projectArn
      description: Update DataAutomationProject Response
    ValidationException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/NonBlankString'
        fieldList:
          $ref: '#/components/schemas/ValidationExceptionFieldList'
      description: This exception is thrown when the request's input validation fails
    ValidationExceptionField:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/NonBlankString'
        message:
          $ref: '#/components/schemas/NonBlankString'
      required:
      - name
      - message
      description: Stores information about a field passed inside a request that resulted
        in an exception
    ValidationExceptionFieldList:
      type: array
      items:
        $ref: '#/components/schemas/ValidationExceptionField'
      description: list of ValidationExceptionField
    VideoBoundingBox:
      type: object
      properties:
        state:
          $ref: '#/components/schemas/State'
      required:
      - state
      description: Bounding Box Configuration of Video Extraction
    VideoExtractionCategory:
      type: object
      properties:
        state:
          $ref: '#/components/schemas/State'
        types:
          $ref: '#/components/schemas/VideoExtractionCategoryTypes'
      required:
      - state
      description: Category of Video Extraction
    VideoExtractionCategoryType:
      type: string
      enum:
      - CONTENT_MODERATION
      - TEXT_DETECTION
      - TRANSCRIPT
      - LOGOS
    VideoExtractionCategoryTypes:
      type: array
      items:
        $ref: '#/components/schemas/VideoExtractionCategoryType'
      description: List of Video Extraction Category Type
    VideoOverrideConfiguration:
      type: object
      properties:
        modalityProcessing:
          $ref: '#/components/schemas/ModalityProcessingConfiguration'
      description: Override Configuration of Video
    VideoStandardExtraction:
      type: object
      properties:
        category:
          $ref: '#/components/schemas/VideoExtractionCategory'
        boundingBox:
          $ref: '#/components/schemas/VideoBoundingBox'
      required:
      - category
      - boundingBox
      description: Standard Extraction Configuration of Video
    VideoStandardGenerativeField:
      type: object
      properties:
        state:
          $ref: '#/components/schemas/State'
        types:
          $ref: '#/components/schemas/VideoStandardGenerativeFieldTypes'
      required:
      - state
      description: Standard Generative Field Configuration of Video
    VideoStandardGenerativeFieldType:
      type: string
      enum:
      - VIDEO_SUMMARY
      - IAB
      - CHAPTER_SUMMARY
    VideoStandardGenerativeFieldTypes:
      type: array
      items:
        $ref: '#/components/schemas/VideoStandardGenerativeFieldType'
      description: List of Video Standard Generative Field Type
    VideoStandardOutputConfiguration:
      type: object
      properties:
        extraction:
          $ref: '#/components/schemas/VideoStandardExtraction'
        generativeField:
          $ref: '#/components/schemas/VideoStandardGenerativeField'
      description: Standard Output Configuration of Video
