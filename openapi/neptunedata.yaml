openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: neptunedata
  x-aws-serviceName: neptunedata
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-07'
  version: '2023-08-01'
  title: Amazon NeptuneData
  description: |-
    Neptune Data API

    The Amazon Neptune data API provides SDK support for more than 40 of Neptune's data operations, including data loading, query execution, data inquiry, and machine learning. It supports the Gremlin and openCypher query languages, and is available in all SDK languages. It automatically signs API requests and greatly simplifies integrating Neptune into your applications.
servers:
- description: The Amazon NeptuneData regional endpoint
  url: https://neptune-db.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths:
  /gremlin/status/{queryId}:
    delete:
      operationId: CancelGremlinQuery
      description: |-
        Cancels a Gremlin query. See [Gremlin query cancellation](https://docs.aws.amazon.com/neptune/latest/userguide/gremlin-api-status-cancel.html) for more information.

        When invoking this operation in a Neptune cluster that has IAM authentication enabled, the IAM user or role making the request must have a policy attached that allows the [neptune-db:CancelQuery](https://docs.aws.amazon.com/neptune/latest/userguide/iam-dp-actions.html#cancelquery) IAM action in that cluster.
      parameters:
      - name: queryId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '400':
          description: |-
            Raised when a request attempts to initiate an operation that is not supported.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
        '408':
          description: |-
            Raised when a request timed out in the client.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientTimeoutException'
        '500':
          description: |-
            Raised when the an operation exceeds the time limit allowed for it.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeLimitExceededException'
        '429':
          description: |-
            Raised when the number of requests being processed exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    get:
      operationId: GetGremlinQueryStatus
      description: |-
        Gets the status of a specified Gremlin query.

        When invoking this operation in a Neptune cluster that has IAM authentication enabled, the IAM user or role making the request must have a policy attached that allows the [neptune-db:GetQueryStatus](https://docs.aws.amazon.com/neptune/latest/userguide/iam-dp-actions.html#getquerystatus) IAM action in that cluster.

        Note that the [neptune-db:QueryLanguage:Gremlin](https://docs.aws.amazon.com/neptune/latest/userguide/iam-data-condition-keys.html#iam-neptune-condition-keys) IAM condition key can be used in the policy document to restrict the use of Gremlin queries (see [Condition keys available in Neptune IAM data-access policy statements](https://docs.aws.amazon.com/neptune/latest/userguide/iam-data-condition-keys.html)).
      parameters:
      - name: queryId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '403':
          description: |-
            Raised in case of an authentication or authorization failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            Raised when a request attempts to initiate an operation that is not supported.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
        '408':
          description: |-
            Raised when a request timed out in the client.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientTimeoutException'
        '500':
          description: |-
            Raised when the an operation exceeds the time limit allowed for it.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeLimitExceededException'
        '429':
          description: |-
            Raised when the number of requests being processed exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /loader/{loadId}:
    delete:
      operationId: CancelLoaderJob
      description: |-
        Cancels a specified load job. This is an HTTP `DELETE` request. See [Neptune Loader Get-Status API](https://docs.aws.amazon.com/neptune/latest/userguide/load-api-reference-status.htm) for more information.

        When invoking this operation in a Neptune cluster that has IAM authentication enabled, the IAM user or role making the request must have a policy attached that allows the [neptune-db:CancelLoaderJob](https://docs.aws.amazon.com/neptune/latest/userguide/iam-dp-actions.html#cancelloaderjob) IAM action in that cluster..
      parameters:
      - name: loadId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '400':
          description: |-
            Raised when a request attempts to initiate an operation that is not supported.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
        '404':
          description: |-
            Raised when a specified bulk-load job ID cannot be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkLoadIdNotFoundException'
        '408':
          description: |-
            Raised when a request timed out in the client.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientTimeoutException'
        '500':
          description: |-
            Raised when the processing of the request failed unexpectedly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '429':
          description: |-
            Raised when the number of requests being processed exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    get:
      operationId: GetLoaderJobStatus
      description: |-
        Gets status information about a specified load job. Neptune keeps track of the most recent 1,024 bulk load jobs, and stores the last 10,000 error details per job.

        See [Neptune Loader Get-Status API](https://docs.aws.amazon.com/neptune/latest/userguide/load-api-reference-status.htm) for more information.

        When invoking this operation in a Neptune cluster that has IAM authentication enabled, the IAM user or role making the request must have a policy attached that allows the [neptune-db:GetLoaderJobStatus](https://docs.aws.amazon.com/neptune/latest/userguide/iam-dp-actions.html#getloaderjobstatus) IAM action in that cluster..
      parameters:
      - name: loadId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: details
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Boolean'
      - name: errors
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Boolean'
      - name: page
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PositiveInteger'
      - name: errorsPerPage
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PositiveInteger'
      responses:
        '200': {}
        '400':
          description: |-
            Raised when a request attempts to initiate an operation that is not supported.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
        '404':
          description: |-
            Raised when a specified bulk-load job ID cannot be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkLoadIdNotFoundException'
        '408':
          description: |-
            Raised when a request timed out in the client.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientTimeoutException'
        '500':
          description: |-
            Raised when the processing of the request failed unexpectedly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '429':
          description: |-
            Raised when the number of requests being processed exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /ml/dataprocessing/{id}:
    delete:
      operationId: CancelMLDataProcessingJob
      description: |-
        Cancels a Neptune ML data processing job. See [The `dataprocessing` command](https://docs.aws.amazon.com/neptune/latest/userguide/machine-learning-api-dataprocessing.html).

        When invoking this operation in a Neptune cluster that has IAM authentication enabled, the IAM user or role making the request must have a policy attached that allows the [neptune-db:CancelMLDataProcessingJob](https://docs.aws.amazon.com/neptune/latest/userguide/iam-dp-actions.html#cancelmldataprocessingjob) IAM action in that cluster.
      parameters:
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: neptuneIamRoleArn
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      - name: clean
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Boolean'
      responses:
        '200': {}
        '400':
          description: |-
            Raised when a request attempts to initiate an operation that is not supported.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
        '408':
          description: |-
            Raised when a request timed out in the client.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientTimeoutException'
        '404':
          description: |-
            Raised when a specified machine-learning resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MLResourceNotFoundException'
        '429':
          description: |-
            Raised when the number of requests being processed exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    get:
      operationId: GetMLDataProcessingJob
      description: |-
        Retrieves information about a specified data processing job. See [The `dataprocessing` command](https://docs.aws.amazon.com/neptune/latest/userguide/machine-learning-api-dataprocessing.html).

        When invoking this operation in a Neptune cluster that has IAM authentication enabled, the IAM user or role making the request must have a policy attached that allows the [neptune-db:neptune-db:GetMLDataProcessingJobStatus](https://docs.aws.amazon.com/neptune/latest/userguide/iam-dp-actions.html#getmldataprocessingjobstatus) IAM action in that cluster.
      parameters:
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: neptuneIamRoleArn
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '400':
          description: |-
            Raised when a request attempts to initiate an operation that is not supported.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
        '408':
          description: |-
            Raised when a request timed out in the client.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientTimeoutException'
        '404':
          description: |-
            Raised when a specified machine-learning resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MLResourceNotFoundException'
        '429':
          description: |-
            Raised when the number of requests being processed exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /ml/modeltraining/{id}:
    delete:
      operationId: CancelMLModelTrainingJob
      description: |-
        Cancels a Neptune ML model training job. See [Model training using the `modeltraining` command](https://docs.aws.amazon.com/neptune/latest/userguide/machine-learning-api-modeltraining.html).

        When invoking this operation in a Neptune cluster that has IAM authentication enabled, the IAM user or role making the request must have a policy attached that allows the [neptune-db:CancelMLModelTrainingJob](https://docs.aws.amazon.com/neptune/latest/userguide/iam-dp-actions.html#cancelmlmodeltrainingjob) IAM action in that cluster.
      parameters:
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: neptuneIamRoleArn
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      - name: clean
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Boolean'
      responses:
        '200': {}
        '400':
          description: |-
            Raised when a request attempts to initiate an operation that is not supported.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
        '408':
          description: |-
            Raised when a request timed out in the client.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientTimeoutException'
        '404':
          description: |-
            Raised when a specified machine-learning resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MLResourceNotFoundException'
        '429':
          description: |-
            Raised when the number of requests being processed exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    get:
      operationId: GetMLModelTrainingJob
      description: |-
        Retrieves information about a Neptune ML model training job. See [Model training using the `modeltraining` command](https://docs.aws.amazon.com/neptune/latest/userguide/machine-learning-api-modeltraining.html).

        When invoking this operation in a Neptune cluster that has IAM authentication enabled, the IAM user or role making the request must have a policy attached that allows the [neptune-db:GetMLModelTrainingJobStatus](https://docs.aws.amazon.com/neptune/latest/userguide/iam-dp-actions.html#getmlmodeltrainingjobstatus) IAM action in that cluster.
      parameters:
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: neptuneIamRoleArn
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '400':
          description: |-
            Raised when a request attempts to initiate an operation that is not supported.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
        '408':
          description: |-
            Raised when a request timed out in the client.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientTimeoutException'
        '404':
          description: |-
            Raised when a specified machine-learning resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MLResourceNotFoundException'
        '429':
          description: |-
            Raised when the number of requests being processed exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /ml/modeltransform/{id}:
    delete:
      operationId: CancelMLModelTransformJob
      description: |-
        Cancels a specified model transform job. See [Use a trained model to generate new model artifacts](https://docs.aws.amazon.com/neptune/latest/userguide/machine-learning-model-transform.html).

        When invoking this operation in a Neptune cluster that has IAM authentication enabled, the IAM user or role making the request must have a policy attached that allows the [neptune-db:CancelMLModelTransformJob](https://docs.aws.amazon.com/neptune/latest/userguide/iam-dp-actions.html#cancelmlmodeltransformjob) IAM action in that cluster.
      parameters:
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: neptuneIamRoleArn
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      - name: clean
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Boolean'
      responses:
        '200': {}
        '400':
          description: |-
            Raised when a request attempts to initiate an operation that is not supported.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
        '408':
          description: |-
            Raised when a request timed out in the client.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientTimeoutException'
        '404':
          description: |-
            Raised when a specified machine-learning resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MLResourceNotFoundException'
        '429':
          description: |-
            Raised when the number of requests being processed exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    get:
      operationId: GetMLModelTransformJob
      description: |-
        Gets information about a specified model transform job. See [Use a trained model to generate new model artifacts](https://docs.aws.amazon.com/neptune/latest/userguide/machine-learning-model-transform.html).

        When invoking this operation in a Neptune cluster that has IAM authentication enabled, the IAM user or role making the request must have a policy attached that allows the [neptune-db:GetMLModelTransformJobStatus](https://docs.aws.amazon.com/neptune/latest/userguide/iam-dp-actions.html#getmlmodeltransformjobstatus) IAM action in that cluster.
      parameters:
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: neptuneIamRoleArn
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '400':
          description: |-
            Raised when a request attempts to initiate an operation that is not supported.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
        '408':
          description: |-
            Raised when a request timed out in the client.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientTimeoutException'
        '404':
          description: |-
            Raised when a specified machine-learning resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MLResourceNotFoundException'
        '429':
          description: |-
            Raised when the number of requests being processed exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /opencypher/status/{queryId}:
    delete:
      operationId: CancelOpenCypherQuery
      description: |-
        Cancels a specified openCypher query. See [Neptune openCypher status endpoint](https://docs.aws.amazon.com/neptune/latest/userguide/access-graph-opencypher-status.html) for more information.

        When invoking this operation in a Neptune cluster that has IAM authentication enabled, the IAM user or role making the request must have a policy attached that allows the [neptune-db:CancelQuery](https://docs.aws.amazon.com/neptune/latest/userguide/iam-dp-actions.html#cancelquery) IAM action in that cluster.
      parameters:
      - name: queryId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: silent
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Boolean'
      responses:
        '200': {}
        '400':
          description: |-
            Raised when a request attempts to initiate an operation that is not supported.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
        '408':
          description: |-
            Raised when a request timed out in the client.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientTimeoutException'
        '500':
          description: |-
            Raised when the an operation exceeds the time limit allowed for it.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeLimitExceededException'
        '429':
          description: |-
            Raised when the number of requests being processed exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    get:
      operationId: GetOpenCypherQueryStatus
      description: |-
        Retrieves the status of a specified openCypher query.

        When invoking this operation in a Neptune cluster that has IAM authentication enabled, the IAM user or role making the request must have a policy attached that allows the [neptune-db:GetQueryStatus](https://docs.aws.amazon.com/neptune/latest/userguide/iam-dp-actions.html#getquerystatus) IAM action in that cluster.

        Note that the [neptune-db:QueryLanguage:OpenCypher](https://docs.aws.amazon.com/neptune/latest/userguide/iam-data-condition-keys.html#iam-neptune-condition-keys) IAM condition key can be used in the policy document to restrict the use of openCypher queries (see [Condition keys available in Neptune IAM data-access policy statements](https://docs.aws.amazon.com/neptune/latest/userguide/iam-data-condition-keys.html)).
      parameters:
      - name: queryId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '403':
          description: |-
            Raised in case of an authentication or authorization failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            Raised when a request attempts to initiate an operation that is not supported.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
        '408':
          description: |-
            Raised when a request timed out in the client.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientTimeoutException'
        '500':
          description: |-
            Raised when the an operation exceeds the time limit allowed for it.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeLimitExceededException'
        '429':
          description: |-
            Raised when the number of requests being processed exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /ml/endpoints:
    post:
      operationId: CreateMLEndpoint
      description: |-
        Creates a new Neptune ML inference endpoint that lets you query one specific model that the model-training process constructed. See [Managing inference endpoints using the endpoints command](https://docs.aws.amazon.com/neptune/latest/userguide/machine-learning-api-endpoints.html).

        When invoking this operation in a Neptune cluster that has IAM authentication enabled, the IAM user or role making the request must have a policy attached that allows the [neptune-db:CreateMLEndpoint](https://docs.aws.amazon.com/neptune/latest/userguide/iam-dp-actions.html#createmlendpoint) IAM action in that cluster.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  $ref: '#/components/schemas/String'
                mlModelTrainingJobId:
                  $ref: '#/components/schemas/String'
                mlModelTransformJobId:
                  $ref: '#/components/schemas/String'
                update:
                  $ref: '#/components/schemas/Boolean'
                neptuneIamRoleArn:
                  $ref: '#/components/schemas/String'
                modelName:
                  $ref: '#/components/schemas/String'
                instanceType:
                  $ref: '#/components/schemas/String'
                instanceCount:
                  $ref: '#/components/schemas/Integer'
                volumeEncryptionKMSKey:
                  $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '400':
          description: |-
            Raised when a request attempts to initiate an operation that is not supported.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
        '408':
          description: |-
            Raised when a request timed out in the client.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientTimeoutException'
        '404':
          description: |-
            Raised when a specified machine-learning resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MLResourceNotFoundException'
        '429':
          description: |-
            Raised when the number of requests being processed exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    get:
      operationId: ListMLEndpoints
      description: |-
        Lists existing inference endpoints. See [Managing inference endpoints using the endpoints command](https://docs.aws.amazon.com/neptune/latest/userguide/machine-learning-api-endpoints.html).

        When invoking this operation in a Neptune cluster that has IAM authentication enabled, the IAM user or role making the request must have a policy attached that allows the [neptune-db:ListMLEndpoints](https://docs.aws.amazon.com/neptune/latest/userguide/iam-dp-actions.html#listmlendpoints) IAM action in that cluster.
      parameters:
      - name: maxItems
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PositiveInteger'
      - name: neptuneIamRoleArn
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '400':
          description: |-
            Raised when a request attempts to initiate an operation that is not supported.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
        '408':
          description: |-
            Raised when a request timed out in the client.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientTimeoutException'
        '404':
          description: |-
            Raised when a specified machine-learning resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MLResourceNotFoundException'
        '429':
          description: |-
            Raised when the number of requests being processed exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /ml/endpoints/{id}:
    delete:
      operationId: DeleteMLEndpoint
      description: |-
        Cancels the creation of a Neptune ML inference endpoint. See [Managing inference endpoints using the endpoints command](https://docs.aws.amazon.com/neptune/latest/userguide/machine-learning-api-endpoints.html).

        When invoking this operation in a Neptune cluster that has IAM authentication enabled, the IAM user or role making the request must have a policy attached that allows the [neptune-db:DeleteMLEndpoint](https://docs.aws.amazon.com/neptune/latest/userguide/iam-dp-actions.html#deletemlendpoint) IAM action in that cluster.
      parameters:
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: neptuneIamRoleArn
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      - name: clean
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Boolean'
      responses:
        '200': {}
        '400':
          description: |-
            Raised when a request attempts to initiate an operation that is not supported.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
        '408':
          description: |-
            Raised when a request timed out in the client.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientTimeoutException'
        '404':
          description: |-
            Raised when a specified machine-learning resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MLResourceNotFoundException'
        '429':
          description: |-
            Raised when the number of requests being processed exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    get:
      operationId: GetMLEndpoint
      description: |-
        Retrieves details about an inference endpoint. See [Managing inference endpoints using the endpoints command](https://docs.aws.amazon.com/neptune/latest/userguide/machine-learning-api-endpoints.html).

        When invoking this operation in a Neptune cluster that has IAM authentication enabled, the IAM user or role making the request must have a policy attached that allows the [neptune-db:GetMLEndpointStatus](https://docs.aws.amazon.com/neptune/latest/userguide/iam-dp-actions.html#getmlendpointstatus) IAM action in that cluster.
      parameters:
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: neptuneIamRoleArn
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '400':
          description: |-
            Raised when a request attempts to initiate an operation that is not supported.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
        '408':
          description: |-
            Raised when a request timed out in the client.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientTimeoutException'
        '404':
          description: |-
            Raised when a specified machine-learning resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MLResourceNotFoundException'
        '429':
          description: |-
            Raised when the number of requests being processed exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /propertygraph/statistics:
    delete:
      operationId: DeletePropertygraphStatistics
      description: |-
        Deletes statistics for Gremlin and openCypher (property graph) data.

        When invoking this operation in a Neptune cluster that has IAM authentication enabled, the IAM user or role making the request must have a policy attached that allows the [neptune-db:DeleteStatistics](https://docs.aws.amazon.com/neptune/latest/userguide/iam-dp-actions.html#deletestatistics) IAM action in that cluster.
      responses:
        '200': {}
        '403':
          description: |-
            Raised in case of an authentication or authorization failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            Raised when a request attempts to initiate an operation that is not supported.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
        '408':
          description: |-
            Raised when a request timed out in the client.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientTimeoutException'
        '429':
          description: |-
            Raised when the number of requests being processed exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    get:
      operationId: GetPropertygraphStatistics
      description: |-
        Gets property graph statistics (Gremlin and openCypher).

        When invoking this operation in a Neptune cluster that has IAM authentication enabled, the IAM user or role making the request must have a policy attached that allows the [neptune-db:GetStatisticsStatus](https://docs.aws.amazon.com/neptune/latest/userguide/iam-dp-actions.html#getstatisticsstatus) IAM action in that cluster.
      responses:
        '200': {}
        '403':
          description: |-
            Raised in case of an authentication or authorization failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            Raised when a request attempts to initiate an operation that is not supported.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
        '408':
          description: |-
            Raised when a request timed out in the client.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientTimeoutException'
        '429':
          description: |-
            Raised when the number of requests being processed exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    post:
      operationId: ManagePropertygraphStatistics
      description: |-
        Manages the generation and use of property graph statistics.

        When invoking this operation in a Neptune cluster that has IAM authentication enabled, the IAM user or role making the request must have a policy attached that allows the [neptune-db:ManageStatistics](https://docs.aws.amazon.com/neptune/latest/userguide/iam-dp-actions.html#managestatistics) IAM action in that cluster.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                mode:
                  $ref: '#/components/schemas/StatisticsAutoGenerationMode'
      responses:
        '200': {}
        '403':
          description: |-
            Raised in case of an authentication or authorization failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            Raised when a request attempts to initiate an operation that is not supported.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
        '408':
          description: |-
            Raised when a request timed out in the client.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientTimeoutException'
        '429':
          description: |-
            Raised when the number of requests being processed exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /sparql/statistics:
    delete:
      operationId: DeleteSparqlStatistics
      description: |-
        Deletes SPARQL statistics

        When invoking this operation in a Neptune cluster that has IAM authentication enabled, the IAM user or role making the request must have a policy attached that allows the [neptune-db:DeleteStatistics](https://docs.aws.amazon.com/neptune/latest/userguide/iam-dp-actions.html#deletestatistics) IAM action in that cluster.
      responses:
        '200': {}
        '403':
          description: |-
            Raised in case of an authentication or authorization failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            Raised when a request attempts to initiate an operation that is not supported.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
        '408':
          description: |-
            Raised when a request timed out in the client.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientTimeoutException'
        '429':
          description: |-
            Raised when the number of requests being processed exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    get:
      operationId: GetSparqlStatistics
      description: |-
        Gets RDF statistics (SPARQL).
      responses:
        '200': {}
        '403':
          description: |-
            Raised in case of an authentication or authorization failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            Raised when a request attempts to initiate an operation that is not supported.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
        '408':
          description: |-
            Raised when a request timed out in the client.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientTimeoutException'
        '429':
          description: |-
            Raised when the number of requests being processed exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    post:
      operationId: ManageSparqlStatistics
      description: |-
        Manages the generation and use of RDF graph statistics.

        When invoking this operation in a Neptune cluster that has IAM authentication enabled, the IAM user or role making the request must have a policy attached that allows the [neptune-db:ManageStatistics](https://docs.aws.amazon.com/neptune/latest/userguide/iam-dp-actions.html#managestatistics) IAM action in that cluster.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                mode:
                  $ref: '#/components/schemas/StatisticsAutoGenerationMode'
      responses:
        '200': {}
        '403':
          description: |-
            Raised in case of an authentication or authorization failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            Raised when a request attempts to initiate an operation that is not supported.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
        '408':
          description: |-
            Raised when a request timed out in the client.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientTimeoutException'
        '429':
          description: |-
            Raised when the number of requests being processed exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /system:
    post:
      operationId: ExecuteFastReset
      description: |-
        The fast reset REST API lets you reset a Neptune graph quicky and easily, removing all of its data.

        Neptune fast reset is a two-step process. First you call `ExecuteFastReset` with `action` set to `initiateDatabaseReset`. This returns a UUID token which you then include when calling `ExecuteFastReset` again with `action` set to `performDatabaseReset`. See [Empty an Amazon Neptune DB cluster using the fast reset API](https://docs.aws.amazon.com/neptune/latest/userguide/manage-console-fast-reset.html).

        When invoking this operation in a Neptune cluster that has IAM authentication enabled, the IAM user or role making the request must have a policy attached that allows the [neptune-db:ResetDatabase](https://docs.aws.amazon.com/neptune/latest/userguide/iam-dp-actions.html#resetdatabase) IAM action in that cluster.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                action:
                  $ref: '#/components/schemas/Action'
                token:
                  $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '403':
          description: |-
            Raised in case of an authentication or authorization failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '408':
          description: |-
            Raised when a request timed out in the client.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientTimeoutException'
        '400':
          description: |-
            Raised when a request attempts to initiate an operation that is not supported.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
        '405':
          description: |-
            Raised when the HTTP method used by a request is not supported by the endpoint being used.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '500':
          description: |-
            Raised when the server shuts down while processing a request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerShutdownException'
        '429':
          description: |-
            Raised when the number of requests being processed exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /gremlin/explain:
    post:
      operationId: ExecuteGremlinExplainQuery
      description: |-
        Executes a Gremlin Explain query.

        Amazon Neptune has added a Gremlin feature named `explain` that provides is a self-service tool for understanding the execution approach being taken by the Neptune engine for the query. You invoke it by adding an `explain` parameter to an HTTP call that submits a Gremlin query.

        The explain feature provides information about the logical structure of query execution plans. You can use this information to identify potential evaluation and execution bottlenecks and to tune your query, as explained in [Tuning Gremlin queries](https://docs.aws.amazon.com/neptune/latest/userguide/gremlin-traversal-tuning.html). You can also use query hints to improve query execution plans.

        When invoking this operation in a Neptune cluster that has IAM authentication enabled, the IAM user or role making the request must have a policy attached that allows one of the following IAM actions in that cluster, depending on the query:

          * [neptune-db:ReadDataViaQuery](https://docs.aws.amazon.com/neptune/latest/userguide/iam-dp-actions.html#readdataviaquery)

          * [neptune-db:WriteDataViaQuery](https://docs.aws.amazon.com/neptune/latest/userguide/iam-dp-actions.html#writedataviaquery)

          * [neptune-db:DeleteDataViaQuery](https://docs.aws.amazon.com/neptune/latest/userguide/iam-dp-actions.html#deletedataviaquery)

        Note that the [neptune-db:QueryLanguage:Gremlin](https://docs.aws.amazon.com/neptune/latest/userguide/iam-data-condition-keys.html#iam-neptune-condition-keys) IAM condition key can be used in the policy document to restrict the use of Gremlin queries (see [Condition keys available in Neptune IAM data-access policy statements](https://docs.aws.amazon.com/neptune/latest/userguide/iam-data-condition-keys.html)).
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                gremlinQuery:
                  $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '400':
          description: |-
            Raised when a request attempts to initiate an operation that is not supported.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
        '500':
          description: |-
            Raised when the an operation exceeds the time limit allowed for it.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeLimitExceededException'
        '408':
          description: |-
            Raised when a request timed out in the client.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientTimeoutException'
        '429':
          description: |-
            Raised when the number of requests being processed exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /gremlin/profile:
    post:
      operationId: ExecuteGremlinProfileQuery
      description: |-
        Executes a Gremlin Profile query, which runs a specified traversal, collects various metrics about the run, and produces a profile report as output. See [Gremlin profile API in Neptune](https://docs.aws.amazon.com/neptune/latest/userguide/gremlin-profile-api.html) for details.

        When invoking this operation in a Neptune cluster that has IAM authentication enabled, the IAM user or role making the request must have a policy attached that allows the [neptune-db:ReadDataViaQuery](https://docs.aws.amazon.com/neptune/latest/userguide/iam-dp-actions.html#readdataviaquery) IAM action in that cluster.

        Note that the [neptune-db:QueryLanguage:Gremlin](https://docs.aws.amazon.com/neptune/latest/userguide/iam-data-condition-keys.html#iam-neptune-condition-keys) IAM condition key can be used in the policy document to restrict the use of Gremlin queries (see [Condition keys available in Neptune IAM data-access policy statements](https://docs.aws.amazon.com/neptune/latest/userguide/iam-data-condition-keys.html)).
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                gremlinQuery:
                  $ref: '#/components/schemas/String'
                results:
                  $ref: '#/components/schemas/Boolean'
                chop:
                  $ref: '#/components/schemas/Integer'
                serializer:
                  $ref: '#/components/schemas/String'
                indexOps:
                  $ref: '#/components/schemas/Boolean'
      responses:
        '200': {}
        '400':
          description: |-
            Raised when a request attempts to initiate an operation that is not supported.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
        '500':
          description: |-
            Raised when the an operation exceeds the time limit allowed for it.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeLimitExceededException'
        '408':
          description: |-
            Raised when a request timed out in the client.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientTimeoutException'
        '429':
          description: |-
            Raised when the number of requests being processed exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /gremlin:
    post:
      operationId: ExecuteGremlinQuery
      description: |-
        This commands executes a Gremlin query. Amazon Neptune is compatible with Apache TinkerPop3 and Gremlin, so you can use the Gremlin traversal language to query the graph, as described under [The Graph](https://tinkerpop.apache.org/docs/current/reference/#graph) in the Apache TinkerPop3 documentation. More details can also be found in [Accessing a Neptune graph with Gremlin](https://docs.aws.amazon.com/neptune/latest/userguide/access-graph-gremlin.html).

        When invoking this operation in a Neptune cluster that has IAM authentication enabled, the IAM user or role making the request must have a policy attached that enables one of the following IAM actions in that cluster, depending on the query:

          * [neptune-db:ReadDataViaQuery](https://docs.aws.amazon.com/neptune/latest/userguide/iam-dp-actions.html#readdataviaquery)

          * [neptune-db:WriteDataViaQuery](https://docs.aws.amazon.com/neptune/latest/userguide/iam-dp-actions.html#writedataviaquery)

          * [neptune-db:DeleteDataViaQuery](https://docs.aws.amazon.com/neptune/latest/userguide/iam-dp-actions.html#deletedataviaquery)

        Note that the [neptune-db:QueryLanguage:Gremlin](https://docs.aws.amazon.com/neptune/latest/userguide/iam-data-condition-keys.html#iam-neptune-condition-keys) IAM condition key can be used in the policy document to restrict the use of Gremlin queries (see [Condition keys available in Neptune IAM data-access policy statements](https://docs.aws.amazon.com/neptune/latest/userguide/iam-data-condition-keys.html)).
      parameters:
      - name: accept
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/String'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                gremlinQuery:
                  $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '400':
          description: |-
            Raised when a request attempts to initiate an operation that is not supported.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
        '500':
          description: |-
            Raised when the an operation exceeds the time limit allowed for it.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeLimitExceededException'
        '408':
          description: |-
            Raised when a request timed out in the client.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientTimeoutException'
        '429':
          description: |-
            Raised when the number of requests being processed exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /opencypher/explain:
    post:
      operationId: ExecuteOpenCypherExplainQuery
      description: |-
        Executes an openCypher `explain` request. See [The openCypher explain feature](https://docs.aws.amazon.com/neptune/latest/userguide/access-graph-opencypher-explain.html) for more information.

        When invoking this operation in a Neptune cluster that has IAM authentication enabled, the IAM user or role making the request must have a policy attached that allows the [neptune-db:ReadDataViaQuery](https://docs.aws.amazon.com/neptune/latest/userguide/iam-dp-actions.html#readdataviaquery) IAM action in that cluster.

        Note that the [neptune-db:QueryLanguage:OpenCypher](https://docs.aws.amazon.com/neptune/latest/userguide/iam-data-condition-keys.html#iam-neptune-condition-keys) IAM condition key can be used in the policy document to restrict the use of openCypher queries (see [Condition keys available in Neptune IAM data-access policy statements](https://docs.aws.amazon.com/neptune/latest/userguide/iam-data-condition-keys.html)).
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                openCypherQuery:
                  $ref: '#/components/schemas/String'
                parameters:
                  $ref: '#/components/schemas/String'
                explainMode:
                  $ref: '#/components/schemas/OpenCypherExplainMode'
      responses:
        '200': {}
        '400':
          description: |-
            Raised when a request attempts to initiate an operation that is not supported.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
        '500':
          description: |-
            Raised when the an operation exceeds the time limit allowed for it.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeLimitExceededException'
        '408':
          description: |-
            Raised when a request timed out in the client.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientTimeoutException'
        '429':
          description: |-
            Raised when the number of requests being processed exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /opencypher:
    post:
      operationId: ExecuteOpenCypherQuery
      description: |-
        Executes an openCypher query. See [Accessing the Neptune Graph with openCypher](https://docs.aws.amazon.com/neptune/latest/userguide/access-graph-opencypher.html) for more information.

        Neptune supports building graph applications using openCypher, which is currently one of the most popular query languages among developers working with graph databases. Developers, business analysts, and data scientists like openCypher's declarative, SQL-inspired syntax because it provides a familiar structure in which to querying property graphs.

        The openCypher language was originally developed by Neo4j, then open-sourced in 2015 and contributed to the [openCypher project](https://opencypher.org/) under an Apache 2 open-source license.

        Note that when invoking this operation in a Neptune cluster that has IAM authentication enabled, the IAM user or role making the request must have a policy attached that allows one of the following IAM actions in that cluster, depending on the query:

          * [neptune-db:ReadDataViaQuery](https://docs.aws.amazon.com/neptune/latest/userguide/iam-dp-actions.html#readdataviaquery)

          * [neptune-db:WriteDataViaQuery](https://docs.aws.amazon.com/neptune/latest/userguide/iam-dp-actions.html#writedataviaquery)

          * [neptune-db:DeleteDataViaQuery](https://docs.aws.amazon.com/neptune/latest/userguide/iam-dp-actions.html#deletedataviaquery)

        Note also that the [neptune-db:QueryLanguage:OpenCypher](https://docs.aws.amazon.com/neptune/latest/userguide/iam-data-condition-keys.html#iam-neptune-condition-keys) IAM condition key can be used in the policy document to restrict the use of openCypher queries (see [Condition keys available in Neptune IAM data-access policy statements](https://docs.aws.amazon.com/neptune/latest/userguide/iam-data-condition-keys.html)).
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                openCypherQuery:
                  $ref: '#/components/schemas/String'
                parameters:
                  $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '400':
          description: |-
            Raised when a request attempts to initiate an operation that is not supported.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
        '500':
          description: |-
            Raised when the an operation exceeds the time limit allowed for it.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeLimitExceededException'
        '408':
          description: |-
            Raised when a request timed out in the client.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientTimeoutException'
        '429':
          description: |-
            Raised when the number of requests being processed exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /status:
    get:
      operationId: GetEngineStatus
      description: |-
        Retrieves the status of the graph database on the host.

        When invoking this operation in a Neptune cluster that has IAM authentication enabled, the IAM user or role making the request must have a policy attached that allows the [neptune-db:GetEngineStatus](https://docs.aws.amazon.com/neptune/latest/userguide/iam-dp-actions.html#getenginestatus) IAM action in that cluster.
      responses:
        '200': {}
        '408':
          description: |-
            Raised when a request timed out in the client.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientTimeoutException'
        '400':
          description: |-
            Raised when a request attempts to initiate an operation that is not supported.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
        '500':
          description: |-
            Raised when the processing of the request failed unexpectedly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '429':
          description: |-
            Raised when the number of requests being processed exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /propertygraph/stream:
    get:
      operationId: GetPropertygraphStream
      description: |-
        Gets a stream for a property graph.

        With the Neptune Streams feature, you can generate a complete sequence of change-log entries that record every change made to your graph data as it happens. `GetPropertygraphStream` lets you collect these change-log entries for a property graph.

        The Neptune streams feature needs to be enabled on your Neptune DBcluster. To enable streams, set the [neptune_streams](https://docs.aws.amazon.com/neptune/latest/userguide/parameters.html#parameters-db-cluster-parameters-neptune_streams) DB cluster parameter to `1`.

        See [Capturing graph changes in real time using Neptune streams](https://docs.aws.amazon.com/neptune/latest/userguide/streams.html).

        When invoking this operation in a Neptune cluster that has IAM authentication enabled, the IAM user or role making the request must have a policy attached that allows the [neptune-db:GetStreamRecords](https://docs.aws.amazon.com/neptune/latest/userguide/iam-dp-actions.html#getstreamrecords) IAM action in that cluster.

        When invoking this operation in a Neptune cluster that has IAM authentication enabled, the IAM user or role making the request must have a policy attached that enables one of the following IAM actions, depending on the query:

        Note that you can restrict property-graph queries using the following IAM context keys:

          * [neptune-db:QueryLanguage:Gremlin](https://docs.aws.amazon.com/neptune/latest/userguide/iam-data-condition-keys.html#iam-neptune-condition-keys)

          * [neptune-db:QueryLanguage:OpenCypher](https://docs.aws.amazon.com/neptune/latest/userguide/iam-data-condition-keys.html#iam-neptune-condition-keys)

        See [Condition keys available in Neptune IAM data-access policy statements](https://docs.aws.amazon.com/neptune/latest/userguide/iam-data-condition-keys.html)).
      parameters:
      - name: limit
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Long'
      - name: iteratorType
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/IteratorType'
      - name: commitNum
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Long'
      - name: opNum
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Long'
      - name: Accept-Encoding
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/Encoding'
      responses:
        '200': {}
        '408':
          description: |-
            Raised when a request timed out in the client.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientTimeoutException'
        '400':
          description: |-
            Raised when a request attempts to initiate an operation that is not supported.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
        '500':
          description: |-
            Raised when the rate of requests exceeds the maximum throughput. Requests can be retried after encountering this exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            Raised when stream records requested by a query cannot be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamRecordsNotFoundException'
        '429':
          description: |-
            Raised when the number of requests being processed exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /propertygraph/statistics/summary:
    get:
      operationId: GetPropertygraphSummary
      description: |-
        Gets a graph summary for a property graph.

        When invoking this operation in a Neptune cluster that has IAM authentication enabled, the IAM user or role making the request must have a policy attached that allows the [neptune-db:GetGraphSummary](https://docs.aws.amazon.com/neptune/latest/userguide/iam-dp-actions.html#getgraphsummary) IAM action in that cluster.
      parameters:
      - name: mode
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/GraphSummaryType'
      responses:
        '200': {}
        '403':
          description: |-
            Raised in case of an authentication or authorization failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            Raised when a request attempts to initiate an operation that is not supported.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
        '408':
          description: |-
            Raised when a request timed out in the client.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientTimeoutException'
        '429':
          description: |-
            Raised when the number of requests being processed exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /rdf/statistics/summary:
    get:
      operationId: GetRDFGraphSummary
      description: |-
        Gets a graph summary for an RDF graph.

        When invoking this operation in a Neptune cluster that has IAM authentication enabled, the IAM user or role making the request must have a policy attached that allows the [neptune-db:GetGraphSummary](https://docs.aws.amazon.com/neptune/latest/userguide/iam-dp-actions.html#getgraphsummary) IAM action in that cluster.
      parameters:
      - name: mode
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/GraphSummaryType'
      responses:
        '200': {}
        '403':
          description: |-
            Raised in case of an authentication or authorization failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            Raised when a request attempts to initiate an operation that is not supported.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
        '408':
          description: |-
            Raised when a request timed out in the client.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientTimeoutException'
        '429':
          description: |-
            Raised when the number of requests being processed exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /sparql/stream:
    get:
      operationId: GetSparqlStream
      description: |-
        Gets a stream for an RDF graph.

        With the Neptune Streams feature, you can generate a complete sequence of change-log entries that record every change made to your graph data as it happens. `GetSparqlStream` lets you collect these change-log entries for an RDF graph.

        The Neptune streams feature needs to be enabled on your Neptune DBcluster. To enable streams, set the [neptune_streams](https://docs.aws.amazon.com/neptune/latest/userguide/parameters.html#parameters-db-cluster-parameters-neptune_streams) DB cluster parameter to `1`.

        See [Capturing graph changes in real time using Neptune streams](https://docs.aws.amazon.com/neptune/latest/userguide/streams.html).

        When invoking this operation in a Neptune cluster that has IAM authentication enabled, the IAM user or role making the request must have a policy attached that allows the [neptune-db:GetStreamRecords](https://docs.aws.amazon.com/neptune/latest/userguide/iam-dp-actions.html#getstreamrecords) IAM action in that cluster.

        Note that the [neptune-db:QueryLanguage:Sparql](https://docs.aws.amazon.com/neptune/latest/userguide/iam-data-condition-keys.html#iam-neptune-condition-keys) IAM condition key can be used in the policy document to restrict the use of SPARQL queries (see [Condition keys available in Neptune IAM data-access policy statements](https://docs.aws.amazon.com/neptune/latest/userguide/iam-data-condition-keys.html)).
      parameters:
      - name: limit
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Long'
      - name: iteratorType
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/IteratorType'
      - name: commitNum
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Long'
      - name: opNum
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Long'
      - name: Accept-Encoding
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/Encoding'
      responses:
        '200': {}
        '408':
          description: |-
            Raised when a request timed out in the client.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientTimeoutException'
        '400':
          description: |-
            Raised when a request attempts to initiate an operation that is not supported.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
        '500':
          description: |-
            Raised when the rate of requests exceeds the maximum throughput. Requests can be retried after encountering this exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '404':
          description: |-
            Raised when stream records requested by a query cannot be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamRecordsNotFoundException'
        '429':
          description: |-
            Raised when the number of requests being processed exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /gremlin/status:
    get:
      operationId: ListGremlinQueries
      description: |-
        Lists active Gremlin queries. See [Gremlin query status API](https://docs.aws.amazon.com/neptune/latest/userguide/gremlin-api-status.html) for details about the output.

        When invoking this operation in a Neptune cluster that has IAM authentication enabled, the IAM user or role making the request must have a policy attached that allows the [neptune-db:GetQueryStatus](https://docs.aws.amazon.com/neptune/latest/userguide/iam-dp-actions.html#getquerystatus) IAM action in that cluster.

        Note that the [neptune-db:QueryLanguage:Gremlin](https://docs.aws.amazon.com/neptune/latest/userguide/iam-data-condition-keys.html#iam-neptune-condition-keys) IAM condition key can be used in the policy document to restrict the use of Gremlin queries (see [Condition keys available in Neptune IAM data-access policy statements](https://docs.aws.amazon.com/neptune/latest/userguide/iam-data-condition-keys.html)).
      parameters:
      - name: includeWaiting
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Boolean'
      responses:
        '200': {}
        '403':
          description: |-
            Raised in case of an authentication or authorization failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            Raised when a request attempts to initiate an operation that is not supported.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
        '408':
          description: |-
            Raised when a request timed out in the client.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientTimeoutException'
        '500':
          description: |-
            Raised when the an operation exceeds the time limit allowed for it.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeLimitExceededException'
        '429':
          description: |-
            Raised when the number of requests being processed exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /loader:
    get:
      operationId: ListLoaderJobs
      description: |-
        Retrieves a list of the `loadIds` for all active loader jobs.

        When invoking this operation in a Neptune cluster that has IAM authentication enabled, the IAM user or role making the request must have a policy attached that allows the [neptune-db:ListLoaderJobs](https://docs.aws.amazon.com/neptune/latest/userguide/iam-dp-actions.html#listloaderjobs) IAM action in that cluster..
      parameters:
      - name: limit
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PositiveInteger'
      - name: includeQueuedLoads
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Boolean'
      responses:
        '200': {}
        '400':
          description: |-
            Raised when a request attempts to initiate an operation that is not supported.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
        '404':
          description: |-
            Raised when a specified bulk-load job ID cannot be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkLoadIdNotFoundException'
        '408':
          description: |-
            Raised when a request timed out in the client.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientTimeoutException'
        '500':
          description: |-
            Raised when the processing of the request failed unexpectedly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '429':
          description: |-
            Raised when the number of requests being processed exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    post:
      operationId: StartLoaderJob
      description: |-
        Starts a Neptune bulk loader job to load data from an Amazon S3 bucket into a Neptune DB instance. See [Using the Amazon Neptune Bulk Loader to Ingest Data](https://docs.aws.amazon.com/neptune/latest/userguide/bulk-load.html).

        When invoking this operation in a Neptune cluster that has IAM authentication enabled, the IAM user or role making the request must have a policy attached that allows the [neptune-db:StartLoaderJob](https://docs.aws.amazon.com/neptune/latest/userguide/iam-dp-actions.html#startloaderjob) IAM action in that cluster.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                source:
                  $ref: '#/components/schemas/String'
                format:
                  $ref: '#/components/schemas/Format'
                s3BucketRegion:
                  $ref: '#/components/schemas/S3BucketRegion'
                iamRoleArn:
                  $ref: '#/components/schemas/String'
                mode:
                  $ref: '#/components/schemas/Mode'
                failOnError:
                  $ref: '#/components/schemas/Boolean'
                parallelism:
                  $ref: '#/components/schemas/Parallelism'
                parserConfiguration:
                  $ref: '#/components/schemas/StringValuedMap'
                updateSingleCardinalityProperties:
                  $ref: '#/components/schemas/Boolean'
                queueRequest:
                  $ref: '#/components/schemas/Boolean'
                dependencies:
                  $ref: '#/components/schemas/StringList'
                userProvidedEdgeIds:
                  $ref: '#/components/schemas/Boolean'
      responses:
        '200': {}
        '400':
          description: |-
            Raised when a request attempts to initiate an operation that is not supported.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
        '404':
          description: |-
            Raised when a specified bulk-load job ID cannot be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkLoadIdNotFoundException'
        '408':
          description: |-
            Raised when a request timed out in the client.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientTimeoutException'
        '500':
          description: |-
            Raised when the processing of the request failed unexpectedly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '429':
          description: |-
            Raised when the number of requests being processed exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /ml/dataprocessing:
    get:
      operationId: ListMLDataProcessingJobs
      description: |-
        Returns a list of Neptune ML data processing jobs. See [Listing active data-processing jobs using the Neptune ML dataprocessing command](https://docs.aws.amazon.com/neptune/latest/userguide/machine-learning-api-dataprocessing.html#machine-learning-api-dataprocessing-list-jobs).

        When invoking this operation in a Neptune cluster that has IAM authentication enabled, the IAM user or role making the request must have a policy attached that allows the [neptune-db:ListMLDataProcessingJobs](https://docs.aws.amazon.com/neptune/latest/userguide/iam-dp-actions.html#listmldataprocessingjobs) IAM action in that cluster.
      parameters:
      - name: maxItems
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PositiveInteger'
      - name: neptuneIamRoleArn
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '400':
          description: |-
            Raised when a request attempts to initiate an operation that is not supported.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
        '408':
          description: |-
            Raised when a request timed out in the client.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientTimeoutException'
        '404':
          description: |-
            Raised when a specified machine-learning resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MLResourceNotFoundException'
        '429':
          description: |-
            Raised when the number of requests being processed exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    post:
      operationId: StartMLDataProcessingJob
      description: |-
        Creates a new Neptune ML data processing job for processing the graph data exported from Neptune for training. See [The `dataprocessing` command](https://docs.aws.amazon.com/neptune/latest/userguide/machine-learning-api-dataprocessing.html).

        When invoking this operation in a Neptune cluster that has IAM authentication enabled, the IAM user or role making the request must have a policy attached that allows the [neptune-db:StartMLModelDataProcessingJob](https://docs.aws.amazon.com/neptune/latest/userguide/iam-dp-actions.html#startmlmodeldataprocessingjob) IAM action in that cluster.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  $ref: '#/components/schemas/String'
                previousDataProcessingJobId:
                  $ref: '#/components/schemas/String'
                inputDataS3Location:
                  $ref: '#/components/schemas/String'
                processedDataS3Location:
                  $ref: '#/components/schemas/String'
                sagemakerIamRoleArn:
                  $ref: '#/components/schemas/String'
                neptuneIamRoleArn:
                  $ref: '#/components/schemas/String'
                processingInstanceType:
                  $ref: '#/components/schemas/String'
                processingInstanceVolumeSizeInGB:
                  $ref: '#/components/schemas/Integer'
                processingTimeOutInSeconds:
                  $ref: '#/components/schemas/Integer'
                modelType:
                  $ref: '#/components/schemas/String'
                configFileName:
                  $ref: '#/components/schemas/String'
                subnets:
                  $ref: '#/components/schemas/StringList'
                securityGroupIds:
                  $ref: '#/components/schemas/StringList'
                volumeEncryptionKMSKey:
                  $ref: '#/components/schemas/String'
                s3OutputEncryptionKMSKey:
                  $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '400':
          description: |-
            Raised when a request attempts to initiate an operation that is not supported.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
        '408':
          description: |-
            Raised when a request timed out in the client.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientTimeoutException'
        '404':
          description: |-
            Raised when a specified machine-learning resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MLResourceNotFoundException'
        '429':
          description: |-
            Raised when the number of requests being processed exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /ml/modeltraining:
    get:
      operationId: ListMLModelTrainingJobs
      description: |-
        Lists Neptune ML model-training jobs. See [Model training using the `modeltraining` command](https://docs.aws.amazon.com/neptune/latest/userguide/machine-learning-api-modeltraining.html).

        When invoking this operation in a Neptune cluster that has IAM authentication enabled, the IAM user or role making the request must have a policy attached that allows the [neptune-db:neptune-db:ListMLModelTrainingJobs](https://docs.aws.amazon.com/neptune/latest/userguide/iam-dp-actions.html#neptune-db:listmlmodeltrainingjobs) IAM action in that cluster.
      parameters:
      - name: maxItems
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PositiveInteger'
      - name: neptuneIamRoleArn
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '400':
          description: |-
            Raised when a request attempts to initiate an operation that is not supported.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
        '408':
          description: |-
            Raised when a request timed out in the client.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientTimeoutException'
        '404':
          description: |-
            Raised when a specified machine-learning resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MLResourceNotFoundException'
        '429':
          description: |-
            Raised when the number of requests being processed exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    post:
      operationId: StartMLModelTrainingJob
      description: |-
        Creates a new Neptune ML model training job. See [Model training using the `modeltraining` command](https://docs.aws.amazon.com/neptune/latest/userguide/machine-learning-api-modeltraining.html).

        When invoking this operation in a Neptune cluster that has IAM authentication enabled, the IAM user or role making the request must have a policy attached that allows the [neptune-db:StartMLModelTrainingJob](https://docs.aws.amazon.com/neptune/latest/userguide/iam-dp-actions.html#startmlmodeltrainingjob) IAM action in that cluster.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  $ref: '#/components/schemas/String'
                previousModelTrainingJobId:
                  $ref: '#/components/schemas/String'
                dataProcessingJobId:
                  $ref: '#/components/schemas/String'
                trainModelS3Location:
                  $ref: '#/components/schemas/String'
                sagemakerIamRoleArn:
                  $ref: '#/components/schemas/String'
                neptuneIamRoleArn:
                  $ref: '#/components/schemas/String'
                baseProcessingInstanceType:
                  $ref: '#/components/schemas/String'
                trainingInstanceType:
                  $ref: '#/components/schemas/String'
                trainingInstanceVolumeSizeInGB:
                  $ref: '#/components/schemas/Integer'
                trainingTimeOutInSeconds:
                  $ref: '#/components/schemas/Integer'
                maxHPONumberOfTrainingJobs:
                  $ref: '#/components/schemas/Integer'
                maxHPOParallelTrainingJobs:
                  $ref: '#/components/schemas/Integer'
                subnets:
                  $ref: '#/components/schemas/StringList'
                securityGroupIds:
                  $ref: '#/components/schemas/StringList'
                volumeEncryptionKMSKey:
                  $ref: '#/components/schemas/String'
                s3OutputEncryptionKMSKey:
                  $ref: '#/components/schemas/String'
                enableManagedSpotTraining:
                  $ref: '#/components/schemas/Boolean'
                customModelTrainingParameters:
                  $ref: '#/components/schemas/CustomModelTrainingParameters'
      responses:
        '200': {}
        '400':
          description: |-
            Raised when a request attempts to initiate an operation that is not supported.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
        '408':
          description: |-
            Raised when a request timed out in the client.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientTimeoutException'
        '404':
          description: |-
            Raised when a specified machine-learning resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MLResourceNotFoundException'
        '429':
          description: |-
            Raised when the number of requests being processed exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /ml/modeltransform:
    get:
      operationId: ListMLModelTransformJobs
      description: |-
        Returns a list of model transform job IDs. See [Use a trained model to generate new model artifacts](https://docs.aws.amazon.com/neptune/latest/userguide/machine-learning-model-transform.html).

        When invoking this operation in a Neptune cluster that has IAM authentication enabled, the IAM user or role making the request must have a policy attached that allows the [neptune-db:ListMLModelTransformJobs](https://docs.aws.amazon.com/neptune/latest/userguide/iam-dp-actions.html#listmlmodeltransformjobs) IAM action in that cluster.
      parameters:
      - name: maxItems
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PositiveInteger'
      - name: neptuneIamRoleArn
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '400':
          description: |-
            Raised when a request attempts to initiate an operation that is not supported.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
        '408':
          description: |-
            Raised when a request timed out in the client.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientTimeoutException'
        '404':
          description: |-
            Raised when a specified machine-learning resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MLResourceNotFoundException'
        '429':
          description: |-
            Raised when the number of requests being processed exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    post:
      operationId: StartMLModelTransformJob
      description: |-
        Creates a new model transform job. See [Use a trained model to generate new model artifacts](https://docs.aws.amazon.com/neptune/latest/userguide/machine-learning-model-transform.html).

        When invoking this operation in a Neptune cluster that has IAM authentication enabled, the IAM user or role making the request must have a policy attached that allows the [neptune-db:StartMLModelTransformJob](https://docs.aws.amazon.com/neptune/latest/userguide/iam-dp-actions.html#startmlmodeltransformjob) IAM action in that cluster.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  $ref: '#/components/schemas/String'
                dataProcessingJobId:
                  $ref: '#/components/schemas/String'
                mlModelTrainingJobId:
                  $ref: '#/components/schemas/String'
                trainingJobName:
                  $ref: '#/components/schemas/String'
                modelTransformOutputS3Location:
                  $ref: '#/components/schemas/String'
                sagemakerIamRoleArn:
                  $ref: '#/components/schemas/String'
                neptuneIamRoleArn:
                  $ref: '#/components/schemas/String'
                customModelTransformParameters:
                  $ref: '#/components/schemas/CustomModelTransformParameters'
                baseProcessingInstanceType:
                  $ref: '#/components/schemas/String'
                baseProcessingInstanceVolumeSizeInGB:
                  $ref: '#/components/schemas/Integer'
                subnets:
                  $ref: '#/components/schemas/StringList'
                securityGroupIds:
                  $ref: '#/components/schemas/StringList'
                volumeEncryptionKMSKey:
                  $ref: '#/components/schemas/String'
                s3OutputEncryptionKMSKey:
                  $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '400':
          description: |-
            Raised when a request attempts to initiate an operation that is not supported.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
        '408':
          description: |-
            Raised when a request timed out in the client.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientTimeoutException'
        '404':
          description: |-
            Raised when a specified machine-learning resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MLResourceNotFoundException'
        '429':
          description: |-
            Raised when the number of requests being processed exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /opencypher/status:
    get:
      operationId: ListOpenCypherQueries
      description: |-
        Lists active openCypher queries. See [Neptune openCypher status endpoint](https://docs.aws.amazon.com/neptune/latest/userguide/access-graph-opencypher-status.html) for more information.

        When invoking this operation in a Neptune cluster that has IAM authentication enabled, the IAM user or role making the request must have a policy attached that allows the [neptune-db:GetQueryStatus](https://docs.aws.amazon.com/neptune/latest/userguide/iam-dp-actions.html#getquerystatus) IAM action in that cluster.

        Note that the [neptune-db:QueryLanguage:OpenCypher](https://docs.aws.amazon.com/neptune/latest/userguide/iam-data-condition-keys.html#iam-neptune-condition-keys) IAM condition key can be used in the policy document to restrict the use of openCypher queries (see [Condition keys available in Neptune IAM data-access policy statements](https://docs.aws.amazon.com/neptune/latest/userguide/iam-data-condition-keys.html)).
      parameters:
      - name: includeWaiting
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Boolean'
      responses:
        '200': {}
        '403':
          description: |-
            Raised in case of an authentication or authorization failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            Raised when a request attempts to initiate an operation that is not supported.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedOperationException'
        '408':
          description: |-
            Raised when a request timed out in the client.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientTimeoutException'
        '500':
          description: |-
            Raised when the an operation exceeds the time limit allowed for it.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeLimitExceededException'
        '429':
          description: |-
            Raised when the number of requests being processed exceeds the limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
components:
  schemas:
    AccessDeniedException:
      type: object
      properties:
        detailedMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A detailed message describing the problem.
        requestId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the request in question.
        code:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The HTTP status code returned with the exception.
      required:
      - detailedMessage
      - requestId
      - code
      description: Raised in case of an authentication or authorization failure.
    Action:
      type: string
      enum:
      - initiateDatabaseReset
      - performDatabaseReset
    BadRequestException:
      type: object
      properties:
        detailedMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A detailed message describing the problem.
        requestId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the bad request.
        code:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The HTTP status code returned with the exception.
      required:
      - detailedMessage
      - requestId
      - code
      description: Raised when a request is submitted that cannot be processed.
    BulkLoadIdNotFoundException:
      type: object
      properties:
        detailedMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A detailed message describing the problem.
        requestId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The bulk-load job ID that could not be found.
        code:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The HTTP status code returned with the exception.
      required:
      - detailedMessage
      - requestId
      - code
      description: Raised when a specified bulk-load job ID cannot be found.
    CancelGremlinQueryInput:
      type: object
      properties:
        queryId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique identifier that identifies the query to be canceled.
      required:
      - queryId
    CancelGremlinQueryOutput:
      type: object
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The status of the cancelation
    CancelLoaderJobInput:
      type: object
      properties:
        loadId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the load job to be deleted.
      required:
      - loadId
    CancelLoaderJobOutput:
      type: object
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The cancellation status.
    CancelMLDataProcessingJobInput:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique identifier of the data-processing job.
        neptuneIamRoleArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ARN of an IAM role that provides Neptune access to SageMaker
            and Amazon S3 resources. This must be listed in your DB cluster parameter
            group or an error will occur.
        clean:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: If set to `TRUE`, this flag specifies that all Neptune ML S3
            artifacts should be deleted when the job is stopped. The default is `FALSE`.
      required:
      - id
    CancelMLDataProcessingJobOutput:
      type: object
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The status of the cancellation request.
    CancelMLModelTrainingJobInput:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique identifier of the model-training job to be canceled.
        neptuneIamRoleArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ARN of an IAM role that provides Neptune access to SageMaker
            and Amazon S3 resources. This must be listed in your DB cluster parameter
            group or an error will occur.
        clean:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: If set to `TRUE`, this flag specifies that all Amazon S3 artifacts
            should be deleted when the job is stopped. The default is `FALSE`.
      required:
      - id
    CancelMLModelTrainingJobOutput:
      type: object
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The status of the cancellation.
    CancelMLModelTransformJobInput:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique ID of the model transform job to be canceled.
        neptuneIamRoleArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ARN of an IAM role that provides Neptune access to SageMaker
            and Amazon S3 resources. This must be listed in your DB cluster parameter
            group or an error will occur.
        clean:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: If this flag is set to `TRUE`, all Neptune ML S3 artifacts
            should be deleted when the job is stopped. The default is `FALSE`.
      required:
      - id
    CancelMLModelTransformJobOutput:
      type: object
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/String'
          description: the status of the cancelation.
    CancelOpenCypherQueryInput:
      type: object
      properties:
        queryId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique ID of the openCypher query to cancel.
        silent:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: If set to `TRUE`, causes the cancelation of the openCypher
            query to happen silently.
      required:
      - queryId
    CancelOpenCypherQueryOutput:
      type: object
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The cancellation status of the openCypher query.
        payload:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: The cancelation payload for the openCypher query.
    CancelledByUserException:
      type: object
      properties:
        detailedMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A detailed message describing the problem.
        requestId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the request in question.
        code:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The HTTP status code returned with the exception.
      required:
      - detailedMessage
      - requestId
      - code
      description: Raised when a user cancelled a request.
    Classes:
      type: array
      items:
        type: string
    ClientTimeoutException:
      type: object
      properties:
        detailedMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A detailed message describing the problem.
        requestId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the request in question.
        code:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The HTTP status code returned with the exception.
      required:
      - detailedMessage
      - requestId
      - code
      description: Raised when a request timed out in the client.
    ConcurrentModificationException:
      type: object
      properties:
        detailedMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A detailed message describing the problem.
        requestId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the request in question.
        code:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The HTTP status code returned with the exception.
      required:
      - detailedMessage
      - requestId
      - code
      description: Raised when a request attempts to modify data that is concurrently
        being modified by another process.
    ConstraintViolationException:
      type: object
      properties:
        detailedMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A detailed message describing the problem.
        requestId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the request in question.
        code:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The HTTP status code returned with the exception.
      required:
      - detailedMessage
      - requestId
      - code
      description: Raised when a value in a request field did not satisfy required
        constraints.
    CreateMLEndpointInput:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A unique identifier for the new inference endpoint. The default
            is an autogenerated timestamped name.
        mlModelTrainingJobId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The job Id of the completed model-training job that has created
            the model that the inference endpoint will point to. You must supply either
            the `mlModelTrainingJobId` or the `mlModelTransformJobId`.
        mlModelTransformJobId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The job Id of the completed model-transform job. You must supply
            either the `mlModelTrainingJobId` or the `mlModelTransformJobId`.
        update:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: If set to `true`, `update` indicates that this is an update
            request. The default is `false`. You must supply either the `mlModelTrainingJobId`
            or the `mlModelTransformJobId`.
        neptuneIamRoleArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ARN of an IAM role providing Neptune access to SageMaker
            and Amazon S3 resources. This must be listed in your DB cluster parameter
            group or an error will be thrown.
        modelName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'Model type for training. By default the Neptune ML model is
            automatically based on the `modelType` used in data processing, but you
            can specify a different model type here. The default is `rgcn` for heterogeneous
            graphs and `kge` for knowledge graphs. The only valid value for heterogeneous
            graphs is `rgcn`. Valid values for knowledge graphs are: `kge`, `transe`,
            `distmult`, and `rotate`.'
        instanceType:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The type of Neptune ML instance to use for online servicing.
            The default is `ml.m5.xlarge`. Choosing the ML instance for an inference
            endpoint depends on the task type, the graph size, and your budget.
        instanceCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The minimum number of Amazon EC2 instances to deploy to an
            endpoint for prediction. The default is 1
        volumeEncryptionKMSKey:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Key Management Service (Amazon KMS) key that SageMaker
            uses to encrypt data on the storage volume attached to the ML compute
            instances that run the training job. The default is None.
    CreateMLEndpointOutput:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique ID of the new inference endpoint.
        arn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ARN for the new inference endpoint.
        creationTimeInMillis:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: The endpoint creation time, in milliseconds.
    CustomModelTrainingParameters:
      type: object
      properties:
        sourceS3DirectoryPath:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The path to the Amazon S3 location where the Python module
            implementing your model is located. This must point to a valid existing
            Amazon S3 location that contains, at a minimum, a training script, a transform
            script, and a `model-hpo-configuration.json` file.
        trainingEntryPointScript:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the entry point in your module of a script that
            performs model training and takes hyperparameters as command-line arguments,
            including fixed hyperparameters. The default is `training.py`.
        transformEntryPointScript:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the entry point in your module of a script that
            should be run after the best model from the hyperparameter search has
            been identified, to compute the model artifacts necessary for model deployment.
            It should be able to run with no command-line arguments.The default is
            `transform.py`.
      required:
      - sourceS3DirectoryPath
      description: Contains custom model training parameters. See [Custom models in
        Neptune ML](https://docs.aws.amazon.com/neptune/latest/userguide/machine-learning-custom-models.html).
    CustomModelTransformParameters:
      type: object
      properties:
        sourceS3DirectoryPath:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The path to the Amazon S3 location where the Python module
            implementing your model is located. This must point to a valid existing
            Amazon S3 location that contains, at a minimum, a training script, a transform
            script, and a `model-hpo-configuration.json` file.
        transformEntryPointScript:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the entry point in your module of a script that
            should be run after the best model from the hyperparameter search has
            been identified, to compute the model artifacts necessary for model deployment.
            It should be able to run with no command-line arguments. The default is
            `transform.py`.
      required:
      - sourceS3DirectoryPath
      description: Contains custom model transform parameters. See [Use a trained
        model to generate new model artifacts](https://docs.aws.amazon.com/neptune/latest/userguide/machine-learning-model-transform.html).
    DeleteMLEndpointInput:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique identifier of the inference endpoint.
        neptuneIamRoleArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ARN of an IAM role providing Neptune access to SageMaker
            and Amazon S3 resources. This must be listed in your DB cluster parameter
            group or an error will be thrown.
        clean:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: If this flag is set to `TRUE`, all Neptune ML S3 artifacts
            should be deleted when the job is stopped. The default is `FALSE`.
      required:
      - id
    DeleteMLEndpointOutput:
      type: object
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The status of the cancellation.
    DeletePropertygraphStatisticsOutput:
      type: object
      properties:
        statusCode:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: 'The HTTP response code: 200 if the delete was successful,
            or 204 if there were no statistics to delete.'
        status:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The cancel status.
        payload:
          allOf:
          - $ref: '#/components/schemas/DeleteStatisticsValueMap'
          description: The deletion payload.
    DeleteSparqlStatisticsOutput:
      type: object
      properties:
        statusCode:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: 'The HTTP response code: 200 if the delete was successful,
            or 204 if there were no statistics to delete.'
        status:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The cancel status.
        payload:
          allOf:
          - $ref: '#/components/schemas/DeleteStatisticsValueMap'
          description: The deletion payload.
    DeleteStatisticsValueMap:
      type: object
      properties:
        active:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: The current status of the statistics.
        statisticsId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the statistics generation run that is currently occurring.
      description: The payload for DeleteStatistics.
    DocumentValuedMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Document'
    EdgeLabels:
      type: array
      items:
        type: string
    EdgeProperties:
      type: array
      items:
        type: string
    EdgeStructure:
      type: object
      properties:
        count:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: The number of edges that have this specific structure.
        edgeProperties:
          allOf:
          - $ref: '#/components/schemas/EdgeProperties'
          description: A list of edge properties present in this specific structure.
      description: An edge structure.
    EdgeStructures:
      type: array
      items:
        $ref: '#/components/schemas/EdgeStructure'
    Encoding:
      type: string
      enum:
      - gzip
    ExecuteFastResetInput:
      type: object
      properties:
        action:
          allOf:
          - $ref: '#/components/schemas/Action'
          description: "The fast reset action. One of the following values:\n\n  *\
            \ **`initiateDatabaseReset` ** – This action generates a unique token\
            \ needed to actually perform the fast reset.\n\n  * **`performDatabaseReset`\
            \ ** – This action uses the token generated by the `initiateDatabaseReset`\
            \ action to actually perform the fast reset."
        token:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The fast-reset token to initiate the reset.
      required:
      - action
    ExecuteFastResetOutput:
      type: object
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The `status` is only returned for the `performDatabaseReset`
            action, and indicates whether or not the fast reset rquest is accepted.
        payload:
          allOf:
          - $ref: '#/components/schemas/FastResetToken'
          description: The `payload` is only returned by the `initiateDatabaseReset`
            action, and contains the unique token to use with the `performDatabaseReset`
            action to make the reset occur.
      required:
      - status
    ExecuteGremlinExplainQueryInput:
      type: object
      properties:
        gremlinQuery:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Gremlin explain query string.
      required:
      - gremlinQuery
    ExecuteGremlinExplainQueryOutput:
      type: object
      properties:
        output:
          allOf:
          - $ref: '#/components/schemas/ReportAsText'
          description: A text blob containing the Gremlin explain result, as described
            in [Tuning Gremlin queries](https://docs.aws.amazon.com/neptune/latest/userguide/gremlin-traversal-tuning.html).
    ExecuteGremlinProfileQueryInput:
      type: object
      properties:
        gremlinQuery:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Gremlin query string to profile.
        results:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: If this flag is set to `TRUE`, the query results are gathered
            and displayed as part of the profile report. If `FALSE`, only the result
            count is displayed.
        chop:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: If non-zero, causes the results string to be truncated at that
            number of characters. If set to zero, the string contains all the results.
        serializer:
          allOf:
          - $ref: '#/components/schemas/String'
          description: If non-null, the gathered results are returned in a serialized
            response message in the format specified by this parameter. See [Gremlin
            profile API in Neptune](https://docs.aws.amazon.com/neptune/latest/userguide/gremlin-profile-api.html)
            for more information.
        indexOps:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: If this flag is set to `TRUE`, the results include a detailed
            report of all index operations that took place during query execution
            and serialization.
      required:
      - gremlinQuery
    ExecuteGremlinProfileQueryOutput:
      type: object
      properties:
        output:
          allOf:
          - $ref: '#/components/schemas/ReportAsText'
          description: A text blob containing the Gremlin Profile result. See [Gremlin
            profile API in Neptune](https://docs.aws.amazon.com/neptune/latest/userguide/gremlin-profile-api.html)
            for details.
    ExecuteGremlinQueryInput:
      type: object
      properties:
        gremlinQuery:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Using this API, you can run Gremlin queries in string format
            much as you can using the HTTP endpoint. The interface is compatible with
            whatever Gremlin version your DB cluster is using (see the [Tinkerpop
            client section](https://docs.aws.amazon.com/neptune/latest/userguide/access-graph-gremlin-client.html#best-practices-gremlin-java-latest)
            to determine which Gremlin releases your engine version supports).
        serializer:
          allOf:
          - $ref: '#/components/schemas/String'
          description: If non-null, the query results are returned in a serialized
            response message in the format specified by this parameter. See the [GraphSON](https://tinkerpop.apache.org/docs/current/reference/#_graphson)
            section in the TinkerPop documentation for a list of the formats that
            are currently supported.
      required:
      - gremlinQuery
    ExecuteGremlinQueryOutput:
      type: object
      properties:
        requestId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique identifier of the Gremlin query.
        status:
          allOf:
          - $ref: '#/components/schemas/GremlinQueryStatusAttributes'
          description: The status of the Gremlin query.
        result:
          allOf:
          - $ref: '#/components/schemas/Document'
          description: The Gremlin query output from the server.
        meta:
          allOf:
          - $ref: '#/components/schemas/Document'
          description: Metadata about the Gremlin query.
    ExecuteOpenCypherExplainQueryInput:
      type: object
      properties:
        openCypherQuery:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The openCypher query string.
        parameters:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The openCypher query parameters.
        explainMode:
          allOf:
          - $ref: '#/components/schemas/OpenCypherExplainMode'
          description: 'The openCypher `explain` mode. Can be one of: `static`, `dynamic`,
            or `details`.'
      required:
      - openCypherQuery
      - explainMode
    ExecuteOpenCypherExplainQueryOutput:
      type: object
      properties:
        results:
          allOf:
          - $ref: '#/components/schemas/Blob'
          description: A text blob containing the openCypher `explain` results.
      required:
      - results
    ExecuteOpenCypherQueryInput:
      type: object
      properties:
        openCypherQuery:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The openCypher query string to be executed.
        parameters:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The openCypher query parameters for query execution. See [Examples
            of openCypher parameterized queries](https://docs.aws.amazon.com/neptune/latest/userguide/opencypher-parameterized-queries.html)
            for more information.
      required:
      - openCypherQuery
    ExecuteOpenCypherQueryOutput:
      type: object
      properties:
        results:
          allOf:
          - $ref: '#/components/schemas/Document'
          description: The openCypherquery results.
      required:
      - results
    ExpiredStreamException:
      type: object
      properties:
        detailedMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A detailed message describing the problem.
        requestId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the request in question.
        code:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The HTTP status code returned with the exception.
      required:
      - detailedMessage
      - requestId
      - code
      description: Raised when a request attempts to access an stream that has expired.
    FailureByQueryException:
      type: object
      properties:
        detailedMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A detailed message describing the problem.
        requestId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the request in question.
        code:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The HTTP status code returned with the exception.
      required:
      - detailedMessage
      - requestId
      - code
      description: Raised when a request fails.
    FastResetToken:
      type: object
      properties:
        token:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A UUID generated by the database in the `initiateDatabaseReset`
            action, and then consumed by the `performDatabaseReset` to reset the database.
      description: A structure containing the fast reset token used to initiate a
        fast reset.
    Format:
      type: string
      enum:
      - csv
      - opencypher
      - ntriples
      - nquads
      - rdfxml
      - turtle
    GetEngineStatusOutput:
      type: object
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Set to `healthy` if the instance is not experiencing problems.
            If the instance is recovering from a crash or from being rebooted and
            there are active transactions running from the latest server shutdown,
            status is set to `recovery`.
        startTime:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Set to the UTC time at which the current server process started.
        dbEngineVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Set to the Neptune engine version running on your DB cluster.
            If this engine version has been manually patched since it was released,
            the version number is prefixed by `Patch-`.
        role:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Set to `reader` if the instance is a read-replica, or to `writer`
            if the instance is the primary instance.
        dfeQueryEngine:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Set to `enabled` if the DFE engine is fully enabled, or to
            `viaQueryHint` (the default) if the DFE engine is only used with queries
            that have the `useDFE` query hint set to `true`.
        gremlin:
          allOf:
          - $ref: '#/components/schemas/QueryLanguageVersion'
          description: Contains information about the Gremlin query language available
            on your cluster. Specifically, it contains a version field that specifies
            the current TinkerPop version being used by the engine.
        sparql:
          allOf:
          - $ref: '#/components/schemas/QueryLanguageVersion'
          description: Contains information about the SPARQL query language available
            on your cluster. Specifically, it contains a version field that specifies
            the current SPARQL version being used by the engine.
        opencypher:
          allOf:
          - $ref: '#/components/schemas/QueryLanguageVersion'
          description: Contains information about the openCypher query language available
            on your cluster. Specifically, it contains a version field that specifies
            the current operCypher version being used by the engine.
        labMode:
          allOf:
          - $ref: '#/components/schemas/StringValuedMap'
          description: Contains Lab Mode settings being used by the engine.
        rollingBackTrxCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: If there are transactions being rolled back, this field is
            set to the number of such transactions. If there are none, the field doesn't
            appear at all.
        rollingBackTrxEarliestStartTime:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Set to the start time of the earliest transaction being rolled
            back. If no transactions are being rolled back, the field doesn't appear
            at all.
        features:
          allOf:
          - $ref: '#/components/schemas/DocumentValuedMap'
          description: Contains status information about the features enabled on your
            DB cluster.
        settings:
          allOf:
          - $ref: '#/components/schemas/StringValuedMap'
          description: Contains information about the current settings on your DB
            cluster. For example, contains the current cluster query timeout setting
            (`clusterQueryTimeoutInMs`).
    GetGremlinQueryStatusInput:
      type: object
      properties:
        queryId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique identifier that identifies the Gremlin query.
      required:
      - queryId
    GetGremlinQueryStatusOutput:
      type: object
      properties:
        queryId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the query for which status is being returned.
        queryString:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Gremlin query string.
        queryEvalStats:
          allOf:
          - $ref: '#/components/schemas/QueryEvalStats'
          description: The evaluation status of the Gremlin query.
    GetLoaderJobStatusInput:
      type: object
      properties:
        loadId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The load ID of the load job to get the status of.
        details:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Flag indicating whether or not to include details beyond the
            overall status (`TRUE` or `FALSE`; the default is `FALSE`).
        errors:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: 'Flag indicating whether or not to include a list of errors
            encountered (`TRUE` or `FALSE`; the default is `FALSE`).


            The list of errors is paged. The `page` and `errorsPerPage` parameters
            allow you to page through all the errors.'
        page:
          allOf:
          - $ref: '#/components/schemas/PositiveInteger'
          description: The error page number (a positive integer; the default is `1`).
            Only valid when the `errors` parameter is set to `TRUE`.
        errorsPerPage:
          allOf:
          - $ref: '#/components/schemas/PositiveInteger'
          description: The number of errors returned in each page (a positive integer;
            the default is `10`). Only valid when the `errors` parameter set to `TRUE`.
      required:
      - loadId
    GetLoaderJobStatusOutput:
      type: object
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The HTTP response code for the request.
        payload:
          allOf:
          - $ref: '#/components/schemas/Document'
          description: 'Status information about the load job, in a layout that could
            look like this:'
      required:
      - status
      - payload
    GetMLDataProcessingJobInput:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique identifier of the data-processing job to be retrieved.
        neptuneIamRoleArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ARN of an IAM role that provides Neptune access to SageMaker
            and Amazon S3 resources. This must be listed in your DB cluster parameter
            group or an error will occur.
      required:
      - id
    GetMLDataProcessingJobOutput:
      type: object
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Status of the data processing job.
        id:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique identifier of this data-processing job.
        processingJob:
          allOf:
          - $ref: '#/components/schemas/MlResourceDefinition'
          description: Definition of the data processing job.
    GetMLEndpointInput:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique identifier of the inference endpoint.
        neptuneIamRoleArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ARN of an IAM role that provides Neptune access to SageMaker
            and Amazon S3 resources. This must be listed in your DB cluster parameter
            group or an error will occur.
      required:
      - id
    GetMLEndpointOutput:
      type: object
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The status of the inference endpoint.
        id:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique identifier of the inference endpoint.
        endpoint:
          allOf:
          - $ref: '#/components/schemas/MlResourceDefinition'
          description: The endpoint definition.
        endpointConfig:
          allOf:
          - $ref: '#/components/schemas/MlConfigDefinition'
          description: The endpoint configuration
    GetMLModelTrainingJobInput:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique identifier of the model-training job to retrieve.
        neptuneIamRoleArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ARN of an IAM role that provides Neptune access to SageMaker
            and Amazon S3 resources. This must be listed in your DB cluster parameter
            group or an error will occur.
      required:
      - id
    GetMLModelTrainingJobOutput:
      type: object
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The status of the model training job.
        id:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique identifier of this model-training job.
        processingJob:
          allOf:
          - $ref: '#/components/schemas/MlResourceDefinition'
          description: The data processing job.
        hpoJob:
          allOf:
          - $ref: '#/components/schemas/MlResourceDefinition'
          description: The HPO job.
        modelTransformJob:
          allOf:
          - $ref: '#/components/schemas/MlResourceDefinition'
          description: The model transform job.
        mlModels:
          allOf:
          - $ref: '#/components/schemas/MlModels'
          description: A list of the configurations of the ML models being used.
    GetMLModelTransformJobInput:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique identifier of the model-transform job to be reetrieved.
        neptuneIamRoleArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ARN of an IAM role that provides Neptune access to SageMaker
            and Amazon S3 resources. This must be listed in your DB cluster parameter
            group or an error will occur.
      required:
      - id
    GetMLModelTransformJobOutput:
      type: object
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The status of the model-transform job.
        id:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique identifier of the model-transform job to be retrieved.
        baseProcessingJob:
          allOf:
          - $ref: '#/components/schemas/MlResourceDefinition'
          description: The base data processing job.
        remoteModelTransformJob:
          allOf:
          - $ref: '#/components/schemas/MlResourceDefinition'
          description: The remote model transform job.
        models:
          allOf:
          - $ref: '#/components/schemas/Models'
          description: A list of the configuration information for the models being
            used.
    GetOpenCypherQueryStatusInput:
      type: object
      properties:
        queryId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique ID of the openCypher query for which to retrieve
            the query status.
      required:
      - queryId
    GetOpenCypherQueryStatusOutput:
      type: object
      properties:
        queryId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique ID of the query for which status is being returned.
        queryString:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The openCypher query string.
        queryEvalStats:
          allOf:
          - $ref: '#/components/schemas/QueryEvalStats'
          description: The openCypher query evaluation status.
    GetPropertygraphStatisticsOutput:
      type: object
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The HTTP return code of the request. If the request succeeded,
            the code is 200. See [Common error codes for DFE statistics request](https://docs.aws.amazon.com/neptune/latest/userguide/neptune-dfe-statistics.html#neptune-dfe-statistics-errors)
            for a list of common errors.
        payload:
          allOf:
          - $ref: '#/components/schemas/Statistics'
          description: Statistics for property-graph data.
      required:
      - status
      - payload
    GetPropertygraphStreamInput:
      type: object
      properties:
        limit:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: 'Specifies the maximum number of records to return. There is
            also a size limit of 10 MB on the response that can''t be modified and
            that takes precedence over the number of records specified in the `limit`
            parameter. The response does include a threshold-breaching record if the
            10 MB limit was reached.


            The range for `limit` is 1 to 100,000, with a default of 10.'
        iteratorType:
          allOf:
          - $ref: '#/components/schemas/IteratorType'
          description: "Can be one of:\n\n  * `AT_SEQUENCE_NUMBER` – Indicates that\
            \ reading should start from the event sequence number specified jointly\
            \ by the `commitNum` and `opNum` parameters.\n\n  * `AFTER_SEQUENCE_NUMBER`\
            \ – Indicates that reading should start right after the event sequence\
            \ number specified jointly by the `commitNum` and `opNum` parameters.\n\
            \n  * `TRIM_HORIZON` – Indicates that reading should start at the last\
            \ untrimmed record in the system, which is the oldest unexpired (not yet\
            \ deleted) record in the change-log stream.\n\n  * `LATEST` – Indicates\
            \ that reading should start at the most recent record in the system, which\
            \ is the latest unexpired (not yet deleted) record in the change-log stream."
        commitNum:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: The commit number of the starting record to read from the change-log
            stream. This parameter is required when `iteratorType` is`AT_SEQUENCE_NUMBER`
            or `AFTER_SEQUENCE_NUMBER`, and ignored when `iteratorType` is `TRIM_HORIZON`
            or `LATEST`.
        opNum:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: The operation sequence number within the specified commit to
            start reading from in the change-log stream data. The default is `1`.
        encoding:
          allOf:
          - $ref: '#/components/schemas/Encoding'
          description: If set to TRUE, Neptune compresses the response using gzip
            encoding.
    GetPropertygraphStreamOutput:
      type: object
      properties:
        lastEventId:
          allOf:
          - $ref: '#/components/schemas/StringValuedMap'
          description: 'Sequence identifier of the last change in the stream response.


            An event ID is composed of two fields: a `commitNum`, which identifies
            a transaction that changed the graph, and an `opNum`, which identifies
            a specific operation within that transaction:'
        lastTrxTimestampInMillis:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: The time at which the commit for the transaction was requested,
            in milliseconds from the Unix epoch.
        format:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Serialization format for the change records being returned.
            Currently, the only supported value is `PG_JSON`.
        records:
          allOf:
          - $ref: '#/components/schemas/PropertygraphRecordsList'
          description: An array of serialized change-log stream records included in
            the response.
        totalRecords:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The total number of records in the response.
      required:
      - lastEventId
      - lastTrxTimestampInMillis
      - format
      - records
      - totalRecords
    GetPropertygraphSummaryInput:
      type: object
      properties:
        mode:
          allOf:
          - $ref: '#/components/schemas/GraphSummaryType'
          description: 'Mode can take one of two values: `BASIC` (the default), and
            `DETAILED`.'
    GetPropertygraphSummaryOutput:
      type: object
      properties:
        statusCode:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The HTTP return code of the request. If the request succeeded,
            the code is 200.
        payload:
          allOf:
          - $ref: '#/components/schemas/PropertygraphSummaryValueMap'
          description: Payload containing the property graph summary response.
    GetRDFGraphSummaryInput:
      type: object
      properties:
        mode:
          allOf:
          - $ref: '#/components/schemas/GraphSummaryType'
          description: 'Mode can take one of two values: `BASIC` (the default), and
            `DETAILED`.'
    GetRDFGraphSummaryOutput:
      type: object
      properties:
        statusCode:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The HTTP return code of the request. If the request succeeded,
            the code is 200.
        payload:
          allOf:
          - $ref: '#/components/schemas/RDFGraphSummaryValueMap'
          description: Payload for an RDF graph summary response
    GetSparqlStatisticsOutput:
      type: object
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'The HTTP return code of the request. If the request succeeded,
            the code is 200. See [Common error codes for DFE statistics request](https://docs.aws.amazon.com/neptune/latest/userguide/neptune-dfe-statistics.html#neptune-dfe-statistics-errors)
            for a list of common errors.


            When invoking this operation in a Neptune cluster that has IAM authentication
            enabled, the IAM user or role making the request must have a policy attached
            that allows the [neptune-db:GetStatisticsStatus](https://docs.aws.amazon.com/neptune/latest/userguide/iam-dp-actions.html#getstatisticsstatus)
            IAM action in that cluster.'
        payload:
          allOf:
          - $ref: '#/components/schemas/Statistics'
          description: Statistics for RDF data.
      required:
      - status
      - payload
    GetSparqlStreamInput:
      type: object
      properties:
        limit:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: 'Specifies the maximum number of records to return. There is
            also a size limit of 10 MB on the response that can''t be modified and
            that takes precedence over the number of records specified in the `limit`
            parameter. The response does include a threshold-breaching record if the
            10 MB limit was reached.


            The range for `limit` is 1 to 100,000, with a default of 10.'
        iteratorType:
          allOf:
          - $ref: '#/components/schemas/IteratorType'
          description: "Can be one of:\n\n  * `AT_SEQUENCE_NUMBER` – Indicates that\
            \ reading should start from the event sequence number specified jointly\
            \ by the `commitNum` and `opNum` parameters.\n\n  * `AFTER_SEQUENCE_NUMBER`\
            \ – Indicates that reading should start right after the event sequence\
            \ number specified jointly by the `commitNum` and `opNum` parameters.\n\
            \n  * `TRIM_HORIZON` – Indicates that reading should start at the last\
            \ untrimmed record in the system, which is the oldest unexpired (not yet\
            \ deleted) record in the change-log stream.\n\n  * `LATEST` – Indicates\
            \ that reading should start at the most recent record in the system, which\
            \ is the latest unexpired (not yet deleted) record in the change-log stream."
        commitNum:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: The commit number of the starting record to read from the change-log
            stream. This parameter is required when `iteratorType` is`AT_SEQUENCE_NUMBER`
            or `AFTER_SEQUENCE_NUMBER`, and ignored when `iteratorType` is `TRIM_HORIZON`
            or `LATEST`.
        opNum:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: The operation sequence number within the specified commit to
            start reading from in the change-log stream data. The default is `1`.
        encoding:
          allOf:
          - $ref: '#/components/schemas/Encoding'
          description: If set to TRUE, Neptune compresses the response using gzip
            encoding.
    GetSparqlStreamOutput:
      type: object
      properties:
        lastEventId:
          allOf:
          - $ref: '#/components/schemas/StringValuedMap'
          description: 'Sequence identifier of the last change in the stream response.


            An event ID is composed of two fields: a `commitNum`, which identifies
            a transaction that changed the graph, and an `opNum`, which identifies
            a specific operation within that transaction:'
        lastTrxTimestampInMillis:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: The time at which the commit for the transaction was requested,
            in milliseconds from the Unix epoch.
        format:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Serialization format for the change records being returned.
            Currently, the only supported value is `NQUADS`.
        records:
          allOf:
          - $ref: '#/components/schemas/SparqlRecordsList'
          description: An array of serialized change-log stream records included in
            the response.
        totalRecords:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The total number of records in the response.
      required:
      - lastEventId
      - lastTrxTimestampInMillis
      - format
      - records
      - totalRecords
    GraphSummaryType:
      type: string
      enum:
      - basic
      - detailed
    GremlinQueries:
      type: array
      items:
        $ref: '#/components/schemas/GremlinQueryStatus'
    GremlinQueryStatus:
      type: object
      properties:
        queryId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the Gremlin query.
        queryString:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The query string of the Gremlin query.
        queryEvalStats:
          allOf:
          - $ref: '#/components/schemas/QueryEvalStats'
          description: The query statistics of the Gremlin query.
      description: Captures the status of a Gremlin query (see the [Gremlin query
        status API](https://docs.aws.amazon.com/neptune/latest/userguide/gremlin-api-status.html)
        page).
    GremlinQueryStatusAttributes:
      type: object
      properties:
        message:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The status message.
        code:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The HTTP response code returned fro the Gremlin query request..
        attributes:
          allOf:
          - $ref: '#/components/schemas/Document'
          description: Attributes of the Gremlin query status.
      description: Contains status components of a Gremlin query.
    IllegalArgumentException:
      type: object
      properties:
        detailedMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A detailed message describing the problem.
        requestId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the request in question.
        code:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The HTTP status code returned with the exception.
      required:
      - detailedMessage
      - requestId
      - code
      description: Raised when an argument in a request is not supported.
    InternalFailureException:
      type: object
      properties:
        detailedMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A detailed message describing the problem.
        requestId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the request in question.
        code:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The HTTP status code returned with the exception.
      required:
      - detailedMessage
      - requestId
      - code
      description: Raised when the processing of the request failed unexpectedly.
    InvalidArgumentException:
      type: object
      properties:
        detailedMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A detailed message describing the problem.
        requestId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the request in question.
        code:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The HTTP status code returned with the exception.
      required:
      - detailedMessage
      - requestId
      - code
      description: Raised when an argument in a request has an invalid value.
    InvalidNumericDataException:
      type: object
      properties:
        detailedMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A detailed message describing the problem.
        requestId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the request in question.
        code:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The HTTP status code returned with the exception.
      required:
      - detailedMessage
      - requestId
      - code
      description: Raised when invalid numerical data is encountered when servicing
        a request.
    InvalidParameterException:
      type: object
      properties:
        detailedMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A detailed message describing the problem.
        requestId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the request that includes an invalid parameter.
        code:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The HTTP status code returned with the exception.
      required:
      - detailedMessage
      - requestId
      - code
      description: Raised when a parameter value is not valid.
    IteratorType:
      type: string
      enum:
      - AT_SEQUENCE_NUMBER
      - AFTER_SEQUENCE_NUMBER
      - TRIM_HORIZON
      - LATEST
    ListGremlinQueriesInput:
      type: object
      properties:
        includeWaiting:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: If set to `TRUE`, the list returned includes waiting queries.
            The default is `FALSE`;
    ListGremlinQueriesOutput:
      type: object
      properties:
        acceptedQueryCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of queries that have been accepted but not yet completed,
            including queries in the queue.
        runningQueryCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of Gremlin queries currently running.
        queries:
          allOf:
          - $ref: '#/components/schemas/GremlinQueries'
          description: A list of the current queries.
    ListLoaderJobsInput:
      type: object
      properties:
        limit:
          allOf:
          - $ref: '#/components/schemas/PositiveInteger'
          description: The number of load IDs to list. Must be a positive integer
            greater than zero and not more than `100` (which is the default).
        includeQueuedLoads:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: An optional parameter that can be used to exclude the load
            IDs of queued load requests when requesting a list of load IDs by setting
            the parameter to `FALSE`. The default value is `TRUE`.
    ListLoaderJobsOutput:
      type: object
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Returns the status of the job list request.
        payload:
          allOf:
          - $ref: '#/components/schemas/LoaderIdResult'
          description: The requested list of job IDs.
      required:
      - status
      - payload
    ListMLDataProcessingJobsInput:
      type: object
      properties:
        maxItems:
          allOf:
          - $ref: '#/components/schemas/PositiveInteger'
          description: The maximum number of items to return (from 1 to 1024; the
            default is 10).
        neptuneIamRoleArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ARN of an IAM role that provides Neptune access to SageMaker
            and Amazon S3 resources. This must be listed in your DB cluster parameter
            group or an error will occur.
    ListMLDataProcessingJobsOutput:
      type: object
      properties:
        ids:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: A page listing data processing job IDs.
    ListMLEndpointsInput:
      type: object
      properties:
        maxItems:
          allOf:
          - $ref: '#/components/schemas/PositiveInteger'
          description: The maximum number of items to return (from 1 to 1024; the
            default is 10.
        neptuneIamRoleArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ARN of an IAM role that provides Neptune access to SageMaker
            and Amazon S3 resources. This must be listed in your DB cluster parameter
            group or an error will occur.
    ListMLEndpointsOutput:
      type: object
      properties:
        ids:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: A page from the list of inference endpoint IDs.
    ListMLModelTrainingJobsInput:
      type: object
      properties:
        maxItems:
          allOf:
          - $ref: '#/components/schemas/PositiveInteger'
          description: The maximum number of items to return (from 1 to 1024; the
            default is 10).
        neptuneIamRoleArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ARN of an IAM role that provides Neptune access to SageMaker
            and Amazon S3 resources. This must be listed in your DB cluster parameter
            group or an error will occur.
    ListMLModelTrainingJobsOutput:
      type: object
      properties:
        ids:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: A page of the list of model training job IDs.
    ListMLModelTransformJobsInput:
      type: object
      properties:
        maxItems:
          allOf:
          - $ref: '#/components/schemas/PositiveInteger'
          description: The maximum number of items to return (from 1 to 1024; the
            default is 10).
        neptuneIamRoleArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ARN of an IAM role that provides Neptune access to SageMaker
            and Amazon S3 resources. This must be listed in your DB cluster parameter
            group or an error will occur.
    ListMLModelTransformJobsOutput:
      type: object
      properties:
        ids:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: A page from the list of model transform IDs.
    ListOpenCypherQueriesInput:
      type: object
      properties:
        includeWaiting:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: When set to `TRUE` and other parameters are not present, causes
            status information to be returned for waiting queries as well as for running
            queries.
    ListOpenCypherQueriesOutput:
      type: object
      properties:
        acceptedQueryCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of queries that have been accepted but not yet completed,
            including queries in the queue.
        runningQueryCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of currently running openCypher queries.
        queries:
          allOf:
          - $ref: '#/components/schemas/OpenCypherQueries'
          description: A list of current openCypher queries.
    LoadUrlAccessDeniedException:
      type: object
      properties:
        detailedMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A detailed message describing the problem.
        requestId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the request in question.
        code:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The HTTP status code returned with the exception.
      required:
      - detailedMessage
      - requestId
      - code
      description: Raised when access is denied to a specified load URL.
    LoaderIdResult:
      type: object
      properties:
        loadIds:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: A list of load IDs.
      description: Contains a list of load IDs.
    LongValuedMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Long'
    LongValuedMapList:
      type: array
      items:
        $ref: '#/components/schemas/LongValuedMap'
    MLResourceNotFoundException:
      type: object
      properties:
        detailedMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A detailed message describing the problem.
        requestId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the request in question.
        code:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The HTTP status code returned with the exception.
      required:
      - detailedMessage
      - requestId
      - code
      description: Raised when a specified machine-learning resource could not be
        found.
    MalformedQueryException:
      type: object
      properties:
        detailedMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A detailed message describing the problem.
        requestId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the malformed query request.
        code:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The HTTP status code returned with the exception.
      required:
      - detailedMessage
      - requestId
      - code
      description: Raised when a query is submitted that is syntactically incorrect
        or does not pass additional validation.
    ManagePropertygraphStatisticsInput:
      type: object
      properties:
        mode:
          allOf:
          - $ref: '#/components/schemas/StatisticsAutoGenerationMode'
          description: 'The statistics generation mode. One of: `DISABLE_AUTOCOMPUTE`,
            `ENABLE_AUTOCOMPUTE`, or `REFRESH`, the last of which manually triggers
            DFE statistics generation.'
    ManagePropertygraphStatisticsOutput:
      type: object
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The HTTP return code of the request. If the request succeeded,
            the code is 200.
        payload:
          allOf:
          - $ref: '#/components/schemas/RefreshStatisticsIdMap'
          description: This is only returned for refresh mode.
      required:
      - status
    ManageSparqlStatisticsInput:
      type: object
      properties:
        mode:
          allOf:
          - $ref: '#/components/schemas/StatisticsAutoGenerationMode'
          description: 'The statistics generation mode. One of: `DISABLE_AUTOCOMPUTE`,
            `ENABLE_AUTOCOMPUTE`, or `REFRESH`, the last of which manually triggers
            DFE statistics generation.'
    ManageSparqlStatisticsOutput:
      type: object
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The HTTP return code of the request. If the request succeeded,
            the code is 200.
        payload:
          allOf:
          - $ref: '#/components/schemas/RefreshStatisticsIdMap'
          description: This is only returned for refresh mode.
      required:
      - status
    MemoryLimitExceededException:
      type: object
      properties:
        detailedMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A detailed message describing the problem.
        requestId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the request that failed.
        code:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The HTTP status code returned with the exception.
      required:
      - detailedMessage
      - requestId
      - code
      description: Raised when a request fails because of insufficient memory resources.
        The request can be retried.
    MethodNotAllowedException:
      type: object
      properties:
        detailedMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A detailed message describing the problem.
        requestId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the request in question.
        code:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The HTTP status code returned with the exception.
      required:
      - detailedMessage
      - requestId
      - code
      description: Raised when the HTTP method used by a request is not supported
        by the endpoint being used.
    MissingParameterException:
      type: object
      properties:
        detailedMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A detailed message describing the problem.
        requestId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the request in which the parameter is missing.
        code:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The HTTP status code returned with the exception.
      required:
      - detailedMessage
      - requestId
      - code
      description: Raised when a required parameter is missing.
    MlConfigDefinition:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The configuration name.
        arn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ARN for the configuration.
      description: Contains a Neptune ML configuration.
    MlModels:
      type: array
      items:
        $ref: '#/components/schemas/MlConfigDefinition'
    MlResourceDefinition:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The resource name.
        arn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The resource ARN.
        status:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The resource status.
        outputLocation:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The output location.
        failureReason:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The failure reason, in case of a failure.
        cloudwatchLogUrl:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The CloudWatch log URL for the resource.
      description: Defines a Neptune ML resource.
    Mode:
      type: string
      enum:
      - RESUME
      - NEW
      - AUTO
    Models:
      type: array
      items:
        $ref: '#/components/schemas/MlConfigDefinition'
    NodeLabels:
      type: array
      items:
        type: string
    NodeProperties:
      type: array
      items:
        type: string
    NodeStructure:
      type: object
      properties:
        count:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: Number of nodes that have this specific structure.
        nodeProperties:
          allOf:
          - $ref: '#/components/schemas/NodeProperties'
          description: A list of the node properties present in this specific structure.
        distinctOutgoingEdgeLabels:
          allOf:
          - $ref: '#/components/schemas/OutgoingEdgeLabels'
          description: A list of distinct outgoing edge labels present in this specific
            structure.
      description: A node structure.
    NodeStructures:
      type: array
      items:
        $ref: '#/components/schemas/NodeStructure'
    OpenCypherExplainMode:
      type: string
      enum:
      - static
      - dynamic
      - details
    OpenCypherQueries:
      type: array
      items:
        $ref: '#/components/schemas/GremlinQueryStatus'
    OutgoingEdgeLabels:
      type: array
      items:
        type: string
    Parallelism:
      type: string
      enum:
      - LOW
      - MEDIUM
      - HIGH
      - OVERSUBSCRIBE
    ParsingException:
      type: object
      properties:
        detailedMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A detailed message describing the problem.
        requestId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the request in question.
        code:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The HTTP status code returned with the exception.
      required:
      - detailedMessage
      - requestId
      - code
      description: Raised when a parsing issue is encountered.
    PositiveInteger:
      type: integer
      minimum: 1
    PreconditionsFailedException:
      type: object
      properties:
        detailedMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A detailed message describing the problem.
        requestId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the request in question.
        code:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The HTTP status code returned with the exception.
      required:
      - detailedMessage
      - requestId
      - code
      description: Raised when a precondition for processing a request is not satisfied.
    Predicates:
      type: array
      items:
        type: string
    PropertygraphData:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the Gremlin or openCypher element.
        type:
          allOf:
          - $ref: '#/components/schemas/String'
          description: "The type of this Gremlin or openCypher element. Must be one\
            \ of:\n\n  * **`v1` ** \\- Vertex label for Gremlin, or node label for\
            \ openCypher.\n\n  * **`vp` ** \\- Vertex properties for Gremlin, or node\
            \ properties for openCypher.\n\n  * **`e` ** \\- Edge and edge label for\
            \ Gremlin, or relationship and relationship type for openCypher.\n\n \
            \ * **`ep` ** \\- Edge properties for Gremlin, or relationship properties\
            \ for openCypher."
        key:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The property name. For element labels, this is `label`.
        value:
          allOf:
          - $ref: '#/components/schemas/Document'
          description: 'This is a JSON object that contains a value field for the
            value itself, and a datatype field for the JSON data type of that value:'
        from:
          allOf:
          - $ref: '#/components/schemas/String'
          description: If this is an edge (type = `e`), the ID of the corresponding
            `from` vertex or source node.
        to:
          allOf:
          - $ref: '#/components/schemas/String'
          description: If this is an edge (type = `e`), the ID of the corresponding
            `to` vertex or target node.
      required:
      - id
      - type
      - key
      - value
      description: A Gremlin or openCypher change record.
    PropertygraphRecord:
      type: object
      properties:
        commitTimestampInMillis:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: The time at which the commit for the transaction was requested,
            in milliseconds from the Unix epoch.
        eventId:
          allOf:
          - $ref: '#/components/schemas/StringValuedMap'
          description: The sequence identifier of the stream change record.
        data:
          allOf:
          - $ref: '#/components/schemas/PropertygraphData'
          description: The serialized Gremlin or openCypher change record.
        op:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The operation that created the change.
        isLastOp:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Only present if this operation is the last one in its transaction.
            If present, it is set to true. It is useful for ensuring that an entire
            transaction is consumed.
      required:
      - commitTimestampInMillis
      - eventId
      - data
      - op
      description: Structure of a property graph record.
    PropertygraphRecordsList:
      type: array
      items:
        $ref: '#/components/schemas/PropertygraphRecord'
    PropertygraphSummary:
      type: object
      properties:
        numNodes:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: The number of nodes in the graph.
        numEdges:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: The number of edges in the graph.
        numNodeLabels:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: The number of distinct node labels in the graph.
        numEdgeLabels:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: The number of distinct edge labels in the graph.
        nodeLabels:
          allOf:
          - $ref: '#/components/schemas/NodeLabels'
          description: A list of the distinct node labels in the graph.
        edgeLabels:
          allOf:
          - $ref: '#/components/schemas/EdgeLabels'
          description: A list of the distinct edge labels in the graph.
        numNodeProperties:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: A list of the distinct node properties in the graph, along
            with the count of nodes where each property is used.
        numEdgeProperties:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: The number of distinct edge properties in the graph.
        nodeProperties:
          allOf:
          - $ref: '#/components/schemas/LongValuedMapList'
          description: The number of distinct node properties in the graph.
        edgeProperties:
          allOf:
          - $ref: '#/components/schemas/LongValuedMapList'
          description: A list of the distinct edge properties in the graph, along
            with the count of edges where each property is used.
        totalNodePropertyValues:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: The total number of usages of all node properties.
        totalEdgePropertyValues:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: The total number of usages of all edge properties.
        nodeStructures:
          allOf:
          - $ref: '#/components/schemas/NodeStructures'
          description: This field is only present when the requested mode is `DETAILED`.
            It contains a list of node structures.
        edgeStructures:
          allOf:
          - $ref: '#/components/schemas/EdgeStructures'
          description: This field is only present when the requested mode is `DETAILED`.
            It contains a list of edge structures.
      description: The graph summary API returns a read-only list of node and edge
        labels and property keys, along with counts of nodes, edges, and properties.
        See [Graph summary response for a property graph (PG)](https://docs.aws.amazon.com/neptune/latest/userguide/neptune-graph-summary.html#neptune-graph-summary-pg-response).
    PropertygraphSummaryValueMap:
      type: object
      properties:
        version:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The version of this graph summary response.
        lastStatisticsComputationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp, in ISO 8601 format, of the time at which Neptune
            last computed statistics.
        graphSummary:
          allOf:
          - $ref: '#/components/schemas/PropertygraphSummary'
          description: The graph summary.
      description: Payload for the property graph summary response.
    QueryEvalStats:
      type: object
      properties:
        waited:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: Indicates how long the query waited, in milliseconds.
        elapsed:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of milliseconds the query has been running so far.
        cancelled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Set to `TRUE` if the query was cancelled, or FALSE otherwise.
        subqueries:
          allOf:
          - $ref: '#/components/schemas/Document'
          description: The number of subqueries in this query.
      description: Structure to capture query statistics such as how many queries
        are running, accepted or waiting and their details.
    QueryLanguageVersion:
      type: object
      properties:
        version:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The version of the query language.
      required:
      - version
      description: Structure for expressing the query language version.
    QueryLimitExceededException:
      type: object
      properties:
        detailedMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A detailed message describing the problem.
        requestId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the request which exceeded the limit.
        code:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The HTTP status code returned with the exception.
      required:
      - detailedMessage
      - requestId
      - code
      description: Raised when the number of active queries exceeds what the server
        can process. The query in question can be retried when the system is less
        busy.
    QueryLimitException:
      type: object
      properties:
        detailedMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A detailed message describing the problem.
        requestId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the request that exceeded the limit.
        code:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The HTTP status code returned with the exception.
      required:
      - detailedMessage
      - requestId
      - code
      description: Raised when the size of a query exceeds the system limit.
    QueryTooLargeException:
      type: object
      properties:
        detailedMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A detailed message describing the problem.
        requestId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the request that is too large.
        code:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The HTTP status code returned with the exception.
      required:
      - detailedMessage
      - requestId
      - code
      description: Raised when the body of a query is too large.
    RDFGraphSummary:
      type: object
      properties:
        numDistinctSubjects:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: The number of distinct subjects in the graph.
        numDistinctPredicates:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: The number of distinct predicates in the graph.
        numQuads:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: The number of quads in the graph.
        numClasses:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: The number of classes in the graph.
        classes:
          allOf:
          - $ref: '#/components/schemas/Classes'
          description: A list of the classes in the graph.
        predicates:
          allOf:
          - $ref: '#/components/schemas/LongValuedMapList'
          description: '"A list of predicates in the graph, along with the predicate
            counts.'
        subjectStructures:
          allOf:
          - $ref: '#/components/schemas/SubjectStructures'
          description: This field is only present when the request mode is `DETAILED`.
            It contains a list of subject structures.
      description: The RDF graph summary API returns a read-only list of classes and
        predicate keys, along with counts of quads, subjects, and predicates.
    RDFGraphSummaryValueMap:
      type: object
      properties:
        version:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The version of this graph summary response.
        lastStatisticsComputationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp, in ISO 8601 format, of the time at which Neptune
            last computed statistics.
        graphSummary:
          allOf:
          - $ref: '#/components/schemas/RDFGraphSummary'
          description: The graph summary of an RDF graph. See [Graph summary response
            for an RDF graph](https://docs.aws.amazon.com/neptune/latest/userguide/neptune-graph-summary.html#neptune-graph-summary-rdf-response).
      description: Payload for an RDF graph summary response.
    ReadOnlyViolationException:
      type: object
      properties:
        detailedMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A detailed message describing the problem.
        requestId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the request in which the parameter is missing.
        code:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The HTTP status code returned with the exception.
      required:
      - detailedMessage
      - requestId
      - code
      description: Raised when a request attempts to write to a read-only resource.
    RefreshStatisticsIdMap:
      type: object
      properties:
        statisticsId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the statistics generation run that is currently occurring.
      description: Statistics for `REFRESH` mode.
    ReportAsText:
      type: string
      format: byte
    S3BucketRegion:
      type: string
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - ca-central-1
      - sa-east-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - me-south-1
      - af-south-1
      - ap-east-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-southeast-1
      - ap-southeast-2
      - ap-south-1
      - cn-north-1
      - cn-northwest-1
      - us-gov-west-1
      - us-gov-east-1
    S3Exception:
      type: object
      properties:
        detailedMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A detailed message describing the problem.
        requestId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the request in question.
        code:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The HTTP status code returned with the exception.
      required:
      - detailedMessage
      - requestId
      - code
      description: Raised when there is a problem accessing Amazon S3.
    ServerShutdownException:
      type: object
      properties:
        detailedMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A detailed message describing the problem.
        requestId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the request in question.
        code:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The HTTP status code returned with the exception.
      required:
      - detailedMessage
      - requestId
      - code
      description: Raised when the server shuts down while processing a request.
    SparqlData:
      type: object
      properties:
        stmt:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Holds an [N-QUADS](https://www.w3.org/TR/n-quads/) statement
            expressing the changed quad.
      required:
      - stmt
      description: Neptune logs are converted to SPARQL quads in the graph using the
        Resource Description Framework (RDF) [N-QUADS](https://www.w3.org/TR/n-quads/)
        language defined in the W3C RDF 1.1 N-Quads specification
    SparqlRecord:
      type: object
      properties:
        commitTimestampInMillis:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: The time at which the commit for the transaction was requested,
            in milliseconds from the Unix epoch.
        eventId:
          allOf:
          - $ref: '#/components/schemas/StringValuedMap'
          description: The sequence identifier of the stream change record.
        data:
          allOf:
          - $ref: '#/components/schemas/SparqlData'
          description: The serialized SPARQL change record. The serialization formats
            of each record are described in more detail in [Serialization Formats
            in Neptune Streams](https://docs.aws.amazon.com/neptune/latest/userguide/streams-change-formats.html).
        op:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The operation that created the change.
        isLastOp:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Only present if this operation is the last one in its transaction.
            If present, it is set to true. It is useful for ensuring that an entire
            transaction is consumed.
      required:
      - commitTimestampInMillis
      - eventId
      - data
      - op
      description: A serialized SPARQL stream record capturing a change-log entry
        for the RDF graph.
    SparqlRecordsList:
      type: array
      items:
        $ref: '#/components/schemas/SparqlRecord'
    StartLoaderJobInput:
      type: object
      properties:
        source:
          allOf:
          - $ref: '#/components/schemas/String'
          description: "The `source` parameter accepts an S3 URI that identifies a\
            \ single file, multiple files, a folder, or multiple folders. Neptune\
            \ loads every data file in any folder that is specified.\n\nThe URI can\
            \ be in any of the following formats.\n\n  * `s3://(bucket_name)/(object-key-name)`\n\
            \n  * `https://s3.amazonaws.com/(bucket_name)/(object-key-name)`\n\n \
            \ * `https://s3.us-east-1.amazonaws.com/(bucket_name)/(object-key-name)`\n\
            \nThe `object-key-name` element of the URI is equivalent to the [prefix](https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListObjects.html#API_ListObjects_RequestParameters)\
            \ parameter in an S3 [ListObjects](https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListObjects.html)\
            \ API call. It identifies all the objects in the specified S3 bucket whose\
            \ names begin with that prefix. That can be a single file or folder, or\
            \ multiple files and/or folders.\n\nThe specified folder or folders can\
            \ contain multiple vertex files and multiple edge files."
        format:
          allOf:
          - $ref: '#/components/schemas/Format'
          description: "The format of the data. For more information about data formats\
            \ for the Neptune `Loader` command, see [Load Data Formats](https://docs.aws.amazon.com/neptune/latest/userguide/bulk-load-tutorial-format.html).\n\
            \n**Allowed values**\n\n  * **`csv` ** for the [Gremlin CSV data format](https://docs.aws.amazon.com/neptune/latest/userguide/bulk-load-tutorial-format-gremlin.html).\n\
            \n  * **`opencypher` ** for the [openCypher CSV data format](https://docs.aws.amazon.com/neptune/latest/userguide/bulk-load-tutorial-format-opencypher.html).\n\
            \n  * **`ntriples` ** for the [N-Triples RDF data format](https://www.w3.org/TR/n-triples/).\n\
            \n  * **`nquads` ** for the [N-Quads RDF data format](https://www.w3.org/TR/n-quads/).\n\
            \n  * **`rdfxml` ** for the [RDF\\XML RDF data format](https://www.w3.org/TR/rdf-syntax-grammar/).\n\
            \n  * **`turtle` ** for the [Turtle RDF data format](https://www.w3.org/TR/turtle/)."
        s3BucketRegion:
          allOf:
          - $ref: '#/components/schemas/S3BucketRegion'
          description: The Amazon region of the S3 bucket. This must match the Amazon
            Region of the DB cluster.
        iamRoleArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) for an IAM role to be assumed
            by the Neptune DB instance for access to the S3 bucket. The IAM role ARN
            provided here should be attached to the DB cluster (see [Adding the IAM
            Role to an Amazon Neptune Cluster](https://docs.aws.amazon.com/neptune/latest/userguide/bulk-load-tutorial-IAM-add-role-cluster.html).
        mode:
          allOf:
          - $ref: '#/components/schemas/Mode'
          description: "The load job mode.\n\n_Allowed values_ : `RESUME`, `NEW`,\
            \ `AUTO`.\n\n_Default value_ : `AUTO`.\n\n****\n\n  * `RESUME` – In RESUME\
            \ mode, the loader looks for a previous load from this source, and if\
            \ it finds one, resumes that load job. If no previous load job is found,\
            \ the loader stops.\n\nThe loader avoids reloading files that were successfully\
            \ loaded in a previous job. It only tries to process failed files. If\
            \ you dropped previously loaded data from your Neptune cluster, that data\
            \ is not reloaded in this mode. If a previous load job loaded all files\
            \ from the same source successfully, nothing is reloaded, and the loader\
            \ returns success.\n\n  * `NEW` – In NEW mode, the creates a new load\
            \ request regardless of any previous loads. You can use this mode to reload\
            \ all the data from a source after dropping previously loaded data from\
            \ your Neptune cluster, or to load new data available at the same source.\n\
            \n  * `AUTO` – In AUTO mode, the loader looks for a previous load job\
            \ from the same source, and if it finds one, resumes that job, just as\
            \ in `RESUME` mode.\n\nIf the loader doesn't find a previous load job\
            \ from the same source, it loads all data from the source, just as in\
            \ `NEW` mode."
        failOnError:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: '**`failOnError` ** – A flag to toggle a complete stop on an
            error.


            _Allowed values_ : `"TRUE"`, `"FALSE"`.


            _Default value_ : `"TRUE"`.


            When this parameter is set to `"FALSE"`, the loader tries to load all
            the data in the location specified, skipping any entries with errors.


            When this parameter is set to `"TRUE"`, the loader stops as soon as it
            encounters an error. Data loaded up to that point persists.'
        parallelism:
          allOf:
          - $ref: '#/components/schemas/Parallelism'
          description: "The optional `parallelism` parameter can be set to reduce\
            \ the number of threads used by the bulk load process.\n\n_Allowed values_\
            \ :\n\n  * `LOW` – The number of threads used is the number of available\
            \ vCPUs divided by 8.\n\n  * `MEDIUM` – The number of threads used is\
            \ the number of available vCPUs divided by 2.\n\n  * `HIGH` – The number\
            \ of threads used is the same as the number of available vCPUs.\n\n  *\
            \ `OVERSUBSCRIBE` – The number of threads used is the number of available\
            \ vCPUs multiplied by 2. If this value is used, the bulk loader takes\
            \ up all available resources.\n\nThis does not mean, however, that the\
            \ `OVERSUBSCRIBE` setting results in 100% CPU utilization. Because the\
            \ load operation is I/O bound, the highest CPU utilization to expect is\
            \ in the 60% to 70% range.\n\n_Default value_ : `HIGH`\n\nThe `parallelism`\
            \ setting can sometimes result in a deadlock between threads when loading\
            \ openCypher data. When this happens, Neptune returns the `LOAD_DATA_DEADLOCK`\
            \ error. You can generally fix the issue by setting `parallelism` to a\
            \ lower setting and retrying the load command."
        parserConfiguration:
          allOf:
          - $ref: '#/components/schemas/StringValuedMap'
          description: "**`parserConfiguration` ** – An optional object with additional\
            \ parser configuration values. Each of the child parameters is also optional:\n\
            \n****\n\n  * **`namedGraphUri` ** – The default graph for all RDF formats\
            \ when no graph is specified (for non-quads formats and NQUAD entries\
            \ with no graph).\n\nThe default is `https://aws.amazon.com/neptune/vocab/v01/DefaultNamedGraph`.\n\
            \n  * **`baseUri` ** – The base URI for RDF/XML and Turtle formats.\n\n\
            The default is `https://aws.amazon.com/neptune/default`.\n\n  * **`allowEmptyStrings`\
            \ ** – Gremlin users need to be able to pass empty string values(\"\"\
            ) as node and edge properties when loading CSV data. If `allowEmptyStrings`\
            \ is set to `false` (the default), such empty strings are treated as nulls\
            \ and are not loaded.\n\nIf `allowEmptyStrings` is set to `true`, the\
            \ loader treats empty strings as valid property values and loads them\
            \ accordingly."
        updateSingleCardinalityProperties:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: '`updateSingleCardinalityProperties` is an optional parameter
            that controls how the bulk loader treats a new value for single-cardinality
            vertex or edge properties. This is not supported for loading openCypher
            data.


            _Allowed values_ : `"TRUE"`, `"FALSE"`.


            _Default value_ : `"FALSE"`.


            By default, or when `updateSingleCardinalityProperties` is explicitly
            set to `"FALSE"`, the loader treats a new value as an error, because it
            violates single cardinality.


            When `updateSingleCardinalityProperties` is set to `"TRUE"`, on the other
            hand, the bulk loader replaces the existing value with the new one. If
            multiple edge or single-cardinality vertex property values are provided
            in the source file(s) being loaded, the final value at the end of the
            bulk load could be any one of those new values. The loader only guarantees
            that the existing value has been replaced by one of the new ones.'
        queueRequest:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: 'This is an optional flag parameter that indicates whether
            the load request can be queued up or not.


            You don''t have to wait for one load job to complete before issuing the
            next one, because Neptune can queue up as many as 64 jobs at a time, provided
            that their `queueRequest` parameters are all set to `"TRUE"`. The queue
            order of the jobs will be first-in-first-out (FIFO).


            If the `queueRequest` parameter is omitted or set to `"FALSE"`, the load
            request will fail if another load job is already running.


            _Allowed values_ : `"TRUE"`, `"FALSE"`.


            _Default value_ : `"FALSE"`.'
        dependencies:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: "This is an optional parameter that can make a queued load\
            \ request contingent on the successful completion of one or more previous\
            \ jobs in the queue.\n\nNeptune can queue up as many as 64 load requests\
            \ at a time, if their `queueRequest` parameters are set to `\"TRUE\"`.\
            \ The `dependencies` parameter lets you make execution of such a queued\
            \ request dependent on the successful completion of one or more specified\
            \ previous requests in the queue.\n\nFor example, if load `Job-A` and\
            \ `Job-B` are independent of each other, but load `Job-C` needs `Job-A`\
            \ and `Job-B` to be finished before it begins, proceed as follows:\n\n\
            \  1. Submit `load-job-A` and `load-job-B` one after another in any order,\
            \ and save their load-ids.\n\n  2. Submit `load-job-C` with the load-ids\
            \ of the two jobs in its `dependencies` field:\n\nBecause of the `dependencies`\
            \ parameter, the bulk loader will not start `Job-C` until `Job-A` and\
            \ `Job-B` have completed successfully. If either one of them fails, Job-C\
            \ will not be executed, and its status will be set to `LOAD_FAILED_BECAUSE_DEPENDENCY_NOT_SATISFIED`.\n\
            \nYou can set up multiple levels of dependency in this way, so that the\
            \ failure of one job will cause all requests that are directly or indirectly\
            \ dependent on it to be cancelled."
        userProvidedEdgeIds:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: 'This parameter is required only when loading openCypher data
            that contains relationship IDs. It must be included and set to `True`
            when openCypher relationship IDs are explicitly provided in the load data
            (recommended).


            When `userProvidedEdgeIds` is absent or set to `True`, an `:ID` column
            must be present in every relationship file in the load.


            When `userProvidedEdgeIds` is present and set to `False`, relationship
            files in the load **must not** contain an `:ID` column. Instead, the Neptune
            loader automatically generates an ID for each relationship.


            It''s useful to provide relationship IDs explicitly so that the loader
            can resume loading after error in the CSV data have been fixed, without
            having to reload any relationships that have already been loaded. If relationship
            IDs have not been explicitly assigned, the loader cannot resume a failed
            load if any relationship file has had to be corrected, and must instead
            reload all the relationships.'
      required:
      - source
      - format
      - s3BucketRegion
      - iamRoleArn
    StartLoaderJobOutput:
      type: object
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The HTTP return code indicating the status of the load job.
        payload:
          allOf:
          - $ref: '#/components/schemas/StringValuedMap'
          description: Contains a `loadId` name-value pair that provides an identifier
            for the load operation.
      required:
      - status
      - payload
    StartMLDataProcessingJobInput:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A unique identifier for the new job. The default is an autogenerated
            UUID.
        previousDataProcessingJobId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The job ID of a completed data processing job run on an earlier
            version of the data.
        inputDataS3Location:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The URI of the Amazon S3 location where you want SageMaker
            to download the data needed to run the data processing job.
        processedDataS3Location:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The URI of the Amazon S3 location where you want SageMaker
            to save the results of a data processing job.
        sagemakerIamRoleArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ARN of an IAM role for SageMaker execution. This must be
            listed in your DB cluster parameter group or an error will occur.
        neptuneIamRoleArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) of an IAM role that SageMaker
            can assume to perform tasks on your behalf. This must be listed in your
            DB cluster parameter group or an error will occur.
        processingInstanceType:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The type of ML instance used during data processing. Its memory
            should be large enough to hold the processed dataset. The default is the
            smallest ml.r5 type whose memory is ten times larger than the size of
            the exported graph data on disk.
        processingInstanceVolumeSizeInGB:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The disk volume size of the processing instance. Both input
            data and processed data are stored on disk, so the volume size must be
            large enough to hold both data sets. The default is 0. If not specified
            or 0, Neptune ML chooses the volume size automatically based on the data
            size.
        processingTimeOutInSeconds:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: Timeout in seconds for the data processing job. The default
            is 86,400 (1 day).
        modelType:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'One of the two model types that Neptune ML currently supports:
            heterogeneous graph models (`heterogeneous`), and knowledge graph (`kge`).
            The default is none. If not specified, Neptune ML chooses the model type
            automatically based on the data.'
        configFileName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A data specification file that describes how to load the exported
            graph data for training. The file is automatically generated by the Neptune
            export toolkit. The default is `training-data-configuration.json`.
        subnets:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: The IDs of the subnets in the Neptune VPC. The default is None.
        securityGroupIds:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: The VPC security group IDs. The default is None.
        volumeEncryptionKMSKey:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Key Management Service (Amazon KMS) key that SageMaker
            uses to encrypt data on the storage volume attached to the ML compute
            instances that run the training job. The default is None.
        s3OutputEncryptionKMSKey:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Key Management Service (Amazon KMS) key that SageMaker
            uses to encrypt the output of the processing job. The default is none.
      required:
      - inputDataS3Location
      - processedDataS3Location
    StartMLDataProcessingJobOutput:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique ID of the new data processing job.
        arn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ARN of the data processing job.
        creationTimeInMillis:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: The time it took to create the new processing job, in milliseconds.
    StartMLModelTrainingJobInput:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A unique identifier for the new job. The default is An autogenerated
            UUID.
        previousModelTrainingJobId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The job ID of a completed model-training job that you want
            to update incrementally based on updated data.
        dataProcessingJobId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The job ID of the completed data-processing job that has created
            the data that the training will work with.
        trainModelS3Location:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The location in Amazon S3 where the model artifacts are to
            be stored.
        sagemakerIamRoleArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ARN of an IAM role for SageMaker execution.This must be
            listed in your DB cluster parameter group or an error will occur.
        neptuneIamRoleArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ARN of an IAM role that provides Neptune access to SageMaker
            and Amazon S3 resources. This must be listed in your DB cluster parameter
            group or an error will occur.
        baseProcessingInstanceType:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The type of ML instance used in preparing and managing training
            of ML models. This is a CPU instance chosen based on memory requirements
            for processing the training data and model.
        trainingInstanceType:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The type of ML instance used for model training. All Neptune
            ML models support CPU, GPU, and multiGPU training. The default is `ml.p3.2xlarge`.
            Choosing the right instance type for training depends on the task type,
            graph size, and your budget.
        trainingInstanceVolumeSizeInGB:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The disk volume size of the training instance. Both input data
            and the output model are stored on disk, so the volume size must be large
            enough to hold both data sets. The default is 0. If not specified or 0,
            Neptune ML selects a disk volume size based on the recommendation generated
            in the data processing step.
        trainingTimeOutInSeconds:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: Timeout in seconds for the training job. The default is 86,400
            (1 day).
        maxHPONumberOfTrainingJobs:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: Maximum total number of training jobs to start for the hyperparameter
            tuning job. The default is 2. Neptune ML automatically tunes the hyperparameters
            of the machine learning model. To obtain a model that performs well, use
            at least 10 jobs (in other words, set `maxHPONumberOfTrainingJobs` to
            10). In general, the more tuning runs, the better the results.
        maxHPOParallelTrainingJobs:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: Maximum number of parallel training jobs to start for the hyperparameter
            tuning job. The default is 2. The number of parallel jobs you can run
            is limited by the available resources on your training instance.
        subnets:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: The IDs of the subnets in the Neptune VPC. The default is None.
        securityGroupIds:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: The VPC security group IDs. The default is None.
        volumeEncryptionKMSKey:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Key Management Service (KMS) key that SageMaker
            uses to encrypt data on the storage volume attached to the ML compute
            instances that run the training job. The default is None.
        s3OutputEncryptionKMSKey:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Key Management Service (KMS) key that SageMaker
            uses to encrypt the output of the processing job. The default is none.
        enableManagedSpotTraining:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Optimizes the cost of training machine-learning models by using
            Amazon Elastic Compute Cloud spot instances. The default is `False`.
        customModelTrainingParameters:
          allOf:
          - $ref: '#/components/schemas/CustomModelTrainingParameters'
          description: The configuration for custom model training. This is a JSON
            object.
      required:
      - dataProcessingJobId
      - trainModelS3Location
    StartMLModelTrainingJobOutput:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique ID of the new model training job.
        arn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ARN of the new model training job.
        creationTimeInMillis:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: The model training job creation time, in milliseconds.
    StartMLModelTransformJobInput:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A unique identifier for the new job. The default is an autogenerated
            UUID.
        dataProcessingJobId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The job ID of a completed data-processing job. You must include
            either `dataProcessingJobId` and a `mlModelTrainingJobId`, or a `trainingJobName`.
        mlModelTrainingJobId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The job ID of a completed model-training job. You must include
            either `dataProcessingJobId` and a `mlModelTrainingJobId`, or a `trainingJobName`.
        trainingJobName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of a completed SageMaker training job. You must include
            either `dataProcessingJobId` and a `mlModelTrainingJobId`, or a `trainingJobName`.
        modelTransformOutputS3Location:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The location in Amazon S3 where the model artifacts are to
            be stored.
        sagemakerIamRoleArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ARN of an IAM role for SageMaker execution. This must be
            listed in your DB cluster parameter group or an error will occur.
        neptuneIamRoleArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ARN of an IAM role that provides Neptune access to SageMaker
            and Amazon S3 resources. This must be listed in your DB cluster parameter
            group or an error will occur.
        customModelTransformParameters:
          allOf:
          - $ref: '#/components/schemas/CustomModelTransformParameters'
          description: 'Configuration information for a model transform using a custom
            model. The `customModelTransformParameters` object contains the following
            fields, which must have values compatible with the saved model parameters
            from the training job:'
        baseProcessingInstanceType:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The type of ML instance used in preparing and managing training
            of ML models. This is an ML compute instance chosen based on memory requirements
            for processing the training data and model.
        baseProcessingInstanceVolumeSizeInGB:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The disk volume size of the training instance in gigabytes.
            The default is 0. Both input data and the output model are stored on disk,
            so the volume size must be large enough to hold both data sets. If not
            specified or 0, Neptune ML selects a disk volume size based on the recommendation
            generated in the data processing step.
        subnets:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: The IDs of the subnets in the Neptune VPC. The default is None.
        securityGroupIds:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: The VPC security group IDs. The default is None.
        volumeEncryptionKMSKey:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Key Management Service (KMS) key that SageMaker
            uses to encrypt data on the storage volume attached to the ML compute
            instances that run the training job. The default is None.
        s3OutputEncryptionKMSKey:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Key Management Service (KMS) key that SageMaker
            uses to encrypt the output of the processing job. The default is none.
      required:
      - modelTransformOutputS3Location
    StartMLModelTransformJobOutput:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique ID of the new model transform job.
        arn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ARN of the model transform job.
        creationTimeInMillis:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: The creation time of the model transform job, in milliseconds.
    Statistics:
      type: object
      properties:
        autoCompute:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether or not automatic statistics generation is
            enabled.
        active:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether or not DFE statistics generation is enabled
            at all.
        statisticsId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Reports the ID of the current statistics generation run. A
            value of -1 indicates that no statistics have been generated.
        date:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The UTC time at which DFE statistics have most recently been
            generated.
        note:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A note about problems in the case where statistics are invalid.
        signatureInfo:
          allOf:
          - $ref: '#/components/schemas/StatisticsSummary'
          description: "A StatisticsSummary structure that contains:\n\n  * `signatureCount`\
            \ \\- The total number of signatures across all characteristic sets.\n\
            \n  * `instanceCount` \\- The total number of characteristic-set instances.\n\
            \n  * `predicateCount` \\- The total number of unique predicates."
      description: Contains statistics information. The DFE engine uses information
        about the data in your Neptune graph to make effective trade-offs when planning
        query execution. This information takes the form of statistics that include
        so-called characteristic sets and predicate statistics that can guide query
        planning. See [Managing statistics for the Neptune DFE to use](https://docs.aws.amazon.com/neptune/latest/userguide/neptune-dfe-statistics.html).
    StatisticsAutoGenerationMode:
      type: string
      enum:
      - disableAutoCompute
      - enableAutoCompute
      - refresh
    StatisticsNotAvailableException:
      type: object
      properties:
        detailedMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A detailed message describing the problem.
        requestId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the request in question.
        code:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The HTTP status code returned with the exception.
      required:
      - detailedMessage
      - requestId
      - code
      description: Raised when statistics needed to satisfy a request are not available.
    StatisticsSummary:
      type: object
      properties:
        signatureCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The total number of signatures across all characteristic sets.
        instanceCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The total number of characteristic-set instances.
        predicateCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The total number of unique predicates.
      description: Information about the characteristic sets generated in the statistics.
    StreamRecordsNotFoundException:
      type: object
      properties:
        detailedMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A detailed message describing the problem.
        requestId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the request in question.
        code:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The HTTP status code returned with the exception.
      required:
      - detailedMessage
      - requestId
      - code
      description: Raised when stream records requested by a query cannot be found.
    StringList:
      type: array
      items:
        type: string
    StringValuedMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/String'
    SubjectStructure:
      type: object
      properties:
        count:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: Number of occurrences of this specific structure.
        predicates:
          allOf:
          - $ref: '#/components/schemas/Predicates'
          description: A list of predicates present in this specific structure.
      description: A subject structure.
    SubjectStructures:
      type: array
      items:
        $ref: '#/components/schemas/SubjectStructure'
    ThrottlingException:
      type: object
      properties:
        detailedMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A detailed message describing the problem.
        requestId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the request that could not be processed for this
            reason.
        code:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The HTTP status code returned with the exception.
      required:
      - detailedMessage
      - requestId
      - code
      description: Raised when the rate of requests exceeds the maximum throughput.
        Requests can be retried after encountering this exception.
    TimeLimitExceededException:
      type: object
      properties:
        detailedMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A detailed message describing the problem.
        requestId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the request that could not be processed for this
            reason.
        code:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The HTTP status code returned with the exception.
      required:
      - detailedMessage
      - requestId
      - code
      description: Raised when the an operation exceeds the time limit allowed for
        it.
    TooManyRequestsException:
      type: object
      properties:
        detailedMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A detailed message describing the problem.
        requestId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the request that could not be processed for this
            reason.
        code:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The HTTP status code returned with the exception.
      required:
      - detailedMessage
      - requestId
      - code
      description: Raised when the number of requests being processed exceeds the
        limit.
    UnsupportedOperationException:
      type: object
      properties:
        detailedMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A detailed message describing the problem.
        requestId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the request in question.
        code:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The HTTP status code returned with the exception.
      required:
      - detailedMessage
      - requestId
      - code
      description: Raised when a request attempts to initiate an operation that is
        not supported.
