openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: eks_auth
  x-aws-serviceName: eksauth
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-07'
  version: '2023-11-26'
  title: Amazon EKS Auth
  description: |-
    The Amazon EKS Auth API and the `AssumeRoleForPodIdentity` action are only used by the EKS Pod Identity Agent.
servers:
- description: The Amazon EKS Auth regional endpoint
  url: https://eks-auth.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths:
  /clusters/{clusterName}/assume-role-for-pod-identity:
    post:
      operationId: AssumeRoleForPodIdentity
      description: |-
        The Amazon EKS Auth API and the `AssumeRoleForPodIdentity` action are only used by the EKS Pod Identity Agent.

        We recommend that applications use the Amazon Web Services SDKs to connect to Amazon Web Services services; if credentials from an EKS Pod Identity association are available in the pod, the latest versions of the SDKs use them automatically.
      parameters:
      - name: clusterName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ClusterName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  $ref: '#/components/schemas/JwtToken'
      responses:
        '200': {}
        '400':
          description: |-
            The specified Kubernetes service account token is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidTokenException'
        '500':
          description: |-
            These errors are usually caused by a server-side issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '503':
          description: |-
            The service is unavailable. Back off and retry the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The request was denied because your request rate is too high. Reduce the frequency of requests.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
components:
  schemas:
    AccessDeniedException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      description: You don't have permissions to perform the requested operation.
        The IAM principal making the request must have at least one IAM permissions
        policy attached that grants the required permissions. For more information,
        see [Access management](https://docs.aws.amazon.com/IAM/latest/UserGuide/access.html)
        in the _IAM User Guide_.
    AssumeRoleForPodIdentityRequest:
      type: object
      properties:
        clusterName:
          allOf:
          - $ref: '#/components/schemas/ClusterName'
          description: The name of the cluster for the request.
        token:
          allOf:
          - $ref: '#/components/schemas/JwtToken'
          description: The token of the Kubernetes service account for the pod.
      required:
      - clusterName
      - token
    AssumeRoleForPodIdentityResponse:
      type: object
      properties:
        subject:
          allOf:
          - $ref: '#/components/schemas/Subject'
          description: The name of the Kubernetes service account inside the cluster
            to associate the IAM credentials with.
        audience:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The identity that is allowed to use the credentials. This value
            is always `pods.eks.amazonaws.com`.
        podIdentityAssociation:
          allOf:
          - $ref: '#/components/schemas/PodIdentityAssociation'
          description: The Amazon Resource Name (ARN) and ID of the EKS Pod Identity
            association.
        assumedRoleUser:
          allOf:
          - $ref: '#/components/schemas/AssumedRoleUser'
          description: 'An object with the permanent IAM role identity and the temporary
            session name.


            The ARN of the IAM role that the temporary credentials authenticate to.


            The session name of the temporary session requested to STS. The value
            is a unique identifier that contains the role ID, a colon (`:`), and the
            role session name of the role that is being assumed. The role ID is generated
            by IAM when the role is created. The role session name part of the value
            follows this format: `eks-_clustername_ -_podname_ -_random UUID_ `'
        credentials:
          allOf:
          - $ref: '#/components/schemas/Credentials'
          description: The _Amazon Web Services Signature Version 4_ type of temporary
            credentials.
      required:
      - subject
      - audience
      - podIdentityAssociation
      - assumedRoleUser
      - credentials
    AssumedRoleUser:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ARN of the IAM role that the temporary credentials authenticate
            to.
        assumeRoleId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'The session name of the temporary session requested to STS.
            The value is a unique identifier that contains the role ID, a colon (`:`),
            and the role session name of the role that is being assumed. The role
            ID is generated by IAM when the role is created. The role session name
            part of the value follows this format: `eks-_clustername_ -_podname_ -_random
            UUID_ `'
      required:
      - arn
      - assumeRoleId
      description: An object with the permanent IAM role identity and the temporary
        session name.
    ClusterName:
      type: string
      pattern: ^[0-9A-Za-z][A-Za-z0-9\-_]*$
      minLength: 1
      maxLength: 100
    Credentials:
      type: object
      properties:
        sessionToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The token that applications inside the pods must pass to any
            service API to use the temporary credentials.
        secretAccessKey:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The secret access key that applications inside the pods use
            to sign requests.
        accessKeyId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The access key ID that identifies the temporary security credentials.
        expiration:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The Unix epoch timestamp in seconds when the current credentials
            expire.
      required:
      - sessionToken
      - secretAccessKey
      - accessKeyId
      - expiration
      description: The _Amazon Web Services Signature Version 4_ type of temporary
        credentials.
    ExpiredTokenException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      description: The specified Kubernetes service account token is expired.
    InternalServerException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      description: These errors are usually caused by a server-side issue.
    InvalidParameterException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      description: The specified parameter is invalid. Review the available parameters
        for the API request.
    InvalidRequestException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      description: This exception is thrown if the request contains a semantic error.
        The precise meaning will depend on the API, and will be documented in the
        error message.
    InvalidTokenException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      description: The specified Kubernetes service account token is invalid.
    JwtToken:
      type: string
      pattern: ^[A-Za-z0-9-_=]+\.[A-Za-z0-9-_=]+\.[A-Za-z0-9-_=]+$
      minLength: 1
    PodIdentityAssociation:
      type: object
      properties:
        associationArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) of the EKS Pod Identity association.
        associationId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the association.
      required:
      - associationArn
      - associationId
      description: Amazon EKS Pod Identity associations provide the ability to manage
        credentials for your applications, similar to the way that Amazon EC2 instance
        profiles provide credentials to Amazon EC2 instances.
    ResourceNotFoundException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      description: The specified resource could not be found.
    ServiceUnavailableException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      description: The service is unavailable. Back off and retry the operation.
    Subject:
      type: object
      properties:
        namespace:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the Kubernetes namespace inside the cluster to
            create the association in. The service account and the pods that use the
            service account must be in this namespace.
        serviceAccount:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the Kubernetes service account inside the cluster
            to associate the IAM credentials with.
      required:
      - namespace
      - serviceAccount
      description: An object containing the name of the Kubernetes service account
        inside the cluster to associate the IAM credentials with.
    ThrottlingException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      description: The request was denied because your request rate is too high. Reduce
        the frequency of requests.
