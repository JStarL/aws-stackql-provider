openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: codestar_notifications
  x-aws-serviceName: codestarnotifications
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-05'
  version: '2019-10-15'
  title: AWS CodeStar Notifications
  description: "This AWS CodeStar Notifications API Reference provides descriptions\
    \ and usage examples of the operations and data types for the AWS CodeStar Notifications\
    \ API. You can use the AWS CodeStar Notifications API to work with the following\
    \ objects:\n\nNotification rules, by calling the following:\n\n  * CreateNotificationRule,\
    \ which creates a notification rule for a resource in your account. \n\n  * DeleteNotificationRule,\
    \ which deletes a notification rule. \n\n  * DescribeNotificationRule, which provides\
    \ information about a notification rule. \n\n  * ListNotificationRules, which\
    \ lists the notification rules associated with your account. \n\n  * UpdateNotificationRule,\
    \ which changes the name, events, or targets associated with a notification rule.\
    \ \n\n  * Subscribe, which subscribes a target to a notification rule. \n\n  *\
    \ Unsubscribe, which removes a target from a notification rule. \n\nTargets, by\
    \ calling the following:\n\n  * DeleteTarget, which removes a notification rule\
    \ target from a notification rule. \n\n  * ListTargets, which lists the targets\
    \ associated with a notification rule. \n\nEvents, by calling the following:\n\
    \n  * ListEventTypes, which lists the event types you can include in a notification\
    \ rule. \n\nTags, by calling the following:\n\n  * ListTagsForResource, which\
    \ lists the tags already associated with a notification rule in your account.\
    \ \n\n  * TagResource, which associates a tag you provide with a notification\
    \ rule in your account. \n\n  * UntagResource, which removes a tag from a notification\
    \ rule in your account. \n\nFor information about how to use AWS CodeStar Notifications,\
    \ see the [Amazon Web Services Developer Tools Console User Guide](https://docs.aws.amazon.com/dtconsole/latest/userguide/what-is-dtconsole.html)."
servers:
- description: The AWS CodeStar Notifications regional endpoint
  url: https://codestar-notifications.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths: {}
components:
  schemas:
    ClientRequestToken:
      type: string
      pattern: ^[\w:/-]+$
      minLength: 1
      maxLength: 256
    CreatedTimestamp:
      type: string
      format: date-time
    DetailType:
      type: string
      enum:
      - BASIC
      - FULL
    EventTypeBatch:
      type: array
      items:
        $ref: '#/components/schemas/EventTypeSummary'
    EventTypeId:
      type: string
      minLength: 1
      maxLength: 200
    EventTypeIds:
      type: array
      items:
        $ref: '#/components/schemas/EventTypeId'
    EventTypeName:
      type: string
    ForceUnsubscribeAll:
      type: boolean
      default: false
    LastModifiedTimestamp:
      type: string
      format: date-time
    ListEventTypesFilterName:
      type: string
      enum:
      - RESOURCE_TYPE
      - SERVICE_NAME
    ListEventTypesFilterValue:
      type: string
    ListEventTypesFilters:
      type: array
      items:
        $ref: '#/components/schemas/ListEventTypesFilter'
    ListNotificationRulesFilterName:
      type: string
      enum:
      - EVENT_TYPE_ID
      - CREATED_BY
      - RESOURCE
      - TARGET_ADDRESS
    ListNotificationRulesFilterValue:
      type: string
      minLength: 0
      maxLength: 2048
    ListNotificationRulesFilters:
      type: array
      items:
        $ref: '#/components/schemas/ListNotificationRulesFilter'
    ListTargetsFilterName:
      type: string
      enum:
      - TARGET_TYPE
      - TARGET_ADDRESS
      - TARGET_STATUS
    ListTargetsFilterValue:
      type: string
      minLength: 0
      maxLength: 2048
    ListTargetsFilters:
      type: array
      items:
        $ref: '#/components/schemas/ListTargetsFilter'
    MaxResults:
      type: integer
      minimum: 1
      maximum: 100
    Message:
      type: string
      minLength: 1
    NextToken:
      type: string
      pattern: ^[\w/+=]+$
    NotificationRuleArn:
      type: string
      pattern: ^arn:aws[^:\s]*:codestar-notifications:[^:\s]+:\d{12}:notificationrule\/(.*\S)?$
    NotificationRuleBatch:
      type: array
      items:
        $ref: '#/components/schemas/NotificationRuleSummary'
    NotificationRuleCreatedBy:
      type: string
      minLength: 1
    NotificationRuleId:
      type: string
      minLength: 1
      maxLength: 40
    NotificationRuleName:
      type: string
      pattern: ^[A-Za-z0-9\-_ ]+$
      minLength: 1
      maxLength: 64
    NotificationRuleResource:
      type: string
      pattern: ^arn:aws[^:\s]*:[^:\s]*:[^:\s]*:[0-9]{12}:[^\s]+$
    NotificationRuleStatus:
      type: string
      enum:
      - ENABLED
      - DISABLED
    ResourceType:
      type: string
      pattern: ^([a-zA-Z0-9-])+$
      minLength: 1
    ServiceName:
      type: string
    TagKey:
      type: string
      pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
      minLength: 1
      maxLength: 128
    TagKeys:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
    TagValue:
      type: string
      pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
      minLength: 0
      maxLength: 256
    Tags:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
    TargetAddress:
      type: string
      minLength: 1
      maxLength: 320
    TargetStatus:
      type: string
      enum:
      - PENDING
      - ACTIVE
      - UNREACHABLE
      - INACTIVE
      - DEACTIVATED
    TargetType:
      type: string
      pattern: ^[A-Za-z]+$
    Targets:
      type: array
      items:
        $ref: '#/components/schemas/Target'
    TargetsBatch:
      type: array
      items:
        $ref: '#/components/schemas/TargetSummary'
