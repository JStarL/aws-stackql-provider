openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: codestar_notifications
  x-aws-serviceName: codestarnotifications
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-07'
  version: '2019-10-15'
  title: AWS CodeStar Notifications
  description: "This AWS CodeStar Notifications API Reference provides descriptions\
    \ and usage examples of the operations and data types for the AWS CodeStar Notifications\
    \ API. You can use the AWS CodeStar Notifications API to work with the following\
    \ objects:\n\nNotification rules, by calling the following:\n\n  * CreateNotificationRule,\
    \ which creates a notification rule for a resource in your account. \n\n  * DeleteNotificationRule,\
    \ which deletes a notification rule. \n\n  * DescribeNotificationRule, which provides\
    \ information about a notification rule. \n\n  * ListNotificationRules, which\
    \ lists the notification rules associated with your account. \n\n  * UpdateNotificationRule,\
    \ which changes the name, events, or targets associated with a notification rule.\
    \ \n\n  * Subscribe, which subscribes a target to a notification rule. \n\n  *\
    \ Unsubscribe, which removes a target from a notification rule. \n\nTargets, by\
    \ calling the following:\n\n  * DeleteTarget, which removes a notification rule\
    \ target from a notification rule. \n\n  * ListTargets, which lists the targets\
    \ associated with a notification rule. \n\nEvents, by calling the following:\n\
    \n  * ListEventTypes, which lists the event types you can include in a notification\
    \ rule. \n\nTags, by calling the following:\n\n  * ListTagsForResource, which\
    \ lists the tags already associated with a notification rule in your account.\
    \ \n\n  * TagResource, which associates a tag you provide with a notification\
    \ rule in your account. \n\n  * UntagResource, which removes a tag from a notification\
    \ rule in your account. \n\nFor information about how to use AWS CodeStar Notifications,\
    \ see the [Amazon Web Services Developer Tools Console User Guide](https://docs.aws.amazon.com/dtconsole/latest/userguide/what-is-dtconsole.html)."
servers:
- description: The AWS CodeStar Notifications regional endpoint
  url: https://codestar-notifications.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths:
  /createNotificationRule:
    post:
      operationId: CreateNotificationRule
      description: |-
        Creates a notification rule for a resource. The rule specifies the events you want notifications about and the targets (such as Chatbot topics or Chatbot clients configured for Slack) where you want to receive them.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  $ref: '#/components/schemas/NotificationRuleName'
                EventTypeIds:
                  $ref: '#/components/schemas/EventTypeIds'
                Resource:
                  $ref: '#/components/schemas/NotificationRuleResource'
                Targets:
                  $ref: '#/components/schemas/Targets'
                DetailType:
                  $ref: '#/components/schemas/DetailType'
                ClientRequestToken:
                  $ref: '#/components/schemas/ClientRequestToken'
                Tags:
                  $ref: '#/components/schemas/Tags'
                Status:
                  $ref: '#/components/schemas/NotificationRuleStatus'
      responses:
        '200': {}
        '403':
          description: |-
            AWS CodeStar Notifications can't create the notification rule because you do not have sufficient permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '400':
          description: |-
            One or more parameter values are not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '409':
          description: |-
            A resource with the same name or ID already exists. Notification rule names must be unique in your Amazon Web Services account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
  /deleteNotificationRule:
    post:
      operationId: DeleteNotificationRule
      description: |-
        Deletes a notification rule for a resource.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Arn:
                  $ref: '#/components/schemas/NotificationRuleArn'
      responses:
        '200': {}
        '400':
          description: |-
            One or more parameter values are not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /deleteTarget:
    post:
      operationId: DeleteTarget
      description: |-
        Deletes a specified target for notifications.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                TargetAddress:
                  $ref: '#/components/schemas/TargetAddress'
                ForceUnsubscribeAll:
                  $ref: '#/components/schemas/ForceUnsubscribeAll'
      responses:
        '200': {}
        '400':
          description: |-
            One or more parameter values are not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /describeNotificationRule:
    post:
      operationId: DescribeNotificationRule
      description: |-
        Returns information about a specified notification rule.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Arn:
                  $ref: '#/components/schemas/NotificationRuleArn'
      responses:
        '200': {}
        '404':
          description: |-
            AWS CodeStar Notifications can't find a resource that matches the provided ARN.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            One or more parameter values are not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /listEventTypes:
    post:
      operationId: ListEventTypes
      description: |-
        Returns information about the event types available for configuring notifications.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Filters:
                  $ref: '#/components/schemas/ListEventTypesFilters'
                NextToken:
                  $ref: '#/components/schemas/NextToken'
                MaxResults:
                  $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '400':
          description: |-
            One or more parameter values are not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /listNotificationRules:
    post:
      operationId: ListNotificationRules
      description: |-
        Returns a list of the notification rules for an Amazon Web Services account.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Filters:
                  $ref: '#/components/schemas/ListNotificationRulesFilters'
                NextToken:
                  $ref: '#/components/schemas/NextToken'
                MaxResults:
                  $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '400':
          description: |-
            One or more parameter values are not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /listTagsForResource:
    post:
      operationId: ListTagsForResource
      description: |-
        Returns a list of the tags associated with a notification rule.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Arn:
                  $ref: '#/components/schemas/NotificationRuleArn'
      responses:
        '200': {}
        '404':
          description: |-
            AWS CodeStar Notifications can't find a resource that matches the provided ARN.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            One or more parameter values are not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /listTargets:
    post:
      operationId: ListTargets
      description: |-
        Returns a list of the notification rule targets for an Amazon Web Services account.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Filters:
                  $ref: '#/components/schemas/ListTargetsFilters'
                NextToken:
                  $ref: '#/components/schemas/NextToken'
                MaxResults:
                  $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '400':
          description: |-
            One or more parameter values are not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /subscribe:
    post:
      operationId: Subscribe
      description: |-
        Creates an association between a notification rule and an Chatbot topic or Chatbot client so that the associated target can receive notifications when the events described in the rule are triggered.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Arn:
                  $ref: '#/components/schemas/NotificationRuleArn'
                Target:
                  $ref: '#/components/schemas/Target'
                ClientRequestToken:
                  $ref: '#/components/schemas/ClientRequestToken'
      responses:
        '200': {}
        '400':
          description: |-
            One or more parameter values are not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '404':
          description: |-
            AWS CodeStar Notifications can't find a resource that matches the provided ARN.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /tagResource:
    post:
      operationId: TagResource
      description: |-
        Associates a set of provided tags with a notification rule.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Arn:
                  $ref: '#/components/schemas/NotificationRuleArn'
                Tags:
                  $ref: '#/components/schemas/Tags'
      responses:
        '200': {}
        '400':
          description: |-
            One or more parameter values are not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '404':
          description: |-
            AWS CodeStar Notifications can't find a resource that matches the provided ARN.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /unsubscribe:
    post:
      operationId: Unsubscribe
      description: |-
        Removes an association between a notification rule and an Chatbot topic so that subscribers to that topic stop receiving notifications when the events described in the rule are triggered.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Arn:
                  $ref: '#/components/schemas/NotificationRuleArn'
                TargetAddress:
                  $ref: '#/components/schemas/TargetAddress'
      responses:
        '200': {}
        '400':
          description: |-
            One or more parameter values are not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /untagResource/{Arn}:
    post:
      operationId: UntagResource
      description: |-
        Removes the association between one or more provided tags and a notification rule.
      parameters:
      - name: Arn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/NotificationRuleArn'
      - name: tagKeys
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/TagKeys'
      responses:
        '200': {}
        '400':
          description: |-
            One or more parameter values are not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '404':
          description: |-
            AWS CodeStar Notifications can't find a resource that matches the provided ARN.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /updateNotificationRule:
    post:
      operationId: UpdateNotificationRule
      description: |-
        Updates a notification rule for a resource. You can change the events that trigger the notification rule, the status of the rule, and the targets that receive the notifications.

        To add or remove tags for a notification rule, you must use TagResource and UntagResource.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Arn:
                  $ref: '#/components/schemas/NotificationRuleArn'
                Name:
                  $ref: '#/components/schemas/NotificationRuleName'
                Status:
                  $ref: '#/components/schemas/NotificationRuleStatus'
                EventTypeIds:
                  $ref: '#/components/schemas/EventTypeIds'
                Targets:
                  $ref: '#/components/schemas/Targets'
                DetailType:
                  $ref: '#/components/schemas/DetailType'
      responses:
        '200': {}
        '400':
          description: |-
            One or more parameter values are not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '404':
          description: |-
            AWS CodeStar Notifications can't find a resource that matches the provided ARN.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
components:
  schemas:
    AccessDeniedException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/Message'
      description: AWS CodeStar Notifications can't create the notification rule because
        you do not have sufficient permissions.
    ClientRequestToken:
      type: string
      pattern: ^[\w:/-]+$
      minLength: 1
      maxLength: 256
    ConcurrentModificationException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/Message'
      description: AWS CodeStar Notifications can't complete the request because the
        resource is being modified by another process. Wait a few minutes and try
        again.
    ConfigurationException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/Message'
      description: Some or all of the configuration is incomplete, missing, or not
        valid.
    CreateNotificationRuleRequest:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NotificationRuleName'
          description: The name for the notification rule. Notification rule names
            must be unique in your Amazon Web Services account.
        EventTypeIds:
          allOf:
          - $ref: '#/components/schemas/EventTypeIds'
          description: A list of event types associated with this notification rule.
            For a list of allowed events, see EventTypeSummary.
        Resource:
          allOf:
          - $ref: '#/components/schemas/NotificationRuleResource'
          description: The Amazon Resource Name (ARN) of the resource to associate
            with the notification rule. Supported resources include pipelines in CodePipeline,
            repositories in CodeCommit, and build projects in CodeBuild.
        Targets:
          allOf:
          - $ref: '#/components/schemas/Targets'
          description: A list of Amazon Resource Names (ARNs) of Amazon Simple Notification
            Service topics and Chatbot clients to associate with the notification
            rule.
        DetailType:
          allOf:
          - $ref: '#/components/schemas/DetailType'
          description: The level of detail to include in the notifications for this
            resource. `BASIC` will include only the contents of the event as it would
            appear in Amazon CloudWatch. `FULL` will include any supplemental information
            provided by AWS CodeStar Notifications and/or the service for the resource
            for which the notification is created.
        ClientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          description: 'A unique, client-generated idempotency token that, when provided
            in a request, ensures the request cannot be repeated with a changed parameter.
            If a request with the same parameters is received and a token is included,
            the request returns information about the initial request that used that
            token.


            The Amazon Web Services SDKs prepopulate client request tokens. If you
            are using an Amazon Web Services SDK, an idempotency token is created
            for you.'
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: A list of tags to apply to this notification rule. Key names
            cannot start with "`aws`".
        Status:
          allOf:
          - $ref: '#/components/schemas/NotificationRuleStatus'
          description: The status of the notification rule. The default value is `ENABLED`.
            If the status is set to `DISABLED`, notifications aren't sent for the
            notification rule.
      required:
      - Name
      - EventTypeIds
      - Resource
      - Targets
      - DetailType
    CreateNotificationRuleResult:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/NotificationRuleArn'
          description: The Amazon Resource Name (ARN) of the notification rule.
    CreatedTimestamp:
      type: string
      format: date-time
    DeleteNotificationRuleRequest:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/NotificationRuleArn'
          description: The Amazon Resource Name (ARN) of the notification rule you
            want to delete.
      required:
      - Arn
    DeleteNotificationRuleResult:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/NotificationRuleArn'
          description: The Amazon Resource Name (ARN) of the deleted notification
            rule.
    DeleteTargetRequest:
      type: object
      properties:
        TargetAddress:
          allOf:
          - $ref: '#/components/schemas/TargetAddress'
          description: The Amazon Resource Name (ARN) of the Chatbot topic or Chatbot
            client to delete.
        ForceUnsubscribeAll:
          allOf:
          - $ref: '#/components/schemas/ForceUnsubscribeAll'
          description: A Boolean value that can be used to delete all associations
            with this Chatbot topic. The default value is FALSE. If set to TRUE, all
            associations between that target and every notification rule in your Amazon
            Web Services account are deleted.
      required:
      - TargetAddress
    DeleteTargetResult:
      type: object
      properties: {}
    DescribeNotificationRuleRequest:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/NotificationRuleArn'
          description: The Amazon Resource Name (ARN) of the notification rule.
      required:
      - Arn
    DescribeNotificationRuleResult:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/NotificationRuleArn'
          description: The Amazon Resource Name (ARN) of the notification rule.
        Name:
          allOf:
          - $ref: '#/components/schemas/NotificationRuleName'
          description: The name of the notification rule.
        EventTypes:
          allOf:
          - $ref: '#/components/schemas/EventTypeBatch'
          description: A list of the event types associated with the notification
            rule.
        Resource:
          allOf:
          - $ref: '#/components/schemas/NotificationRuleResource'
          description: The Amazon Resource Name (ARN) of the resource associated with
            the notification rule.
        Targets:
          allOf:
          - $ref: '#/components/schemas/TargetsBatch'
          description: A list of the Chatbot topics and Chatbot clients associated
            with the notification rule.
        DetailType:
          allOf:
          - $ref: '#/components/schemas/DetailType'
          description: The level of detail included in the notifications for this
            resource. BASIC will include only the contents of the event as it would
            appear in Amazon CloudWatch. FULL will include any supplemental information
            provided by AWS CodeStar Notifications and/or the service for the resource
            for which the notification is created.
        CreatedBy:
          allOf:
          - $ref: '#/components/schemas/NotificationRuleCreatedBy'
          description: The name or email alias of the person who created the notification
            rule.
        Status:
          allOf:
          - $ref: '#/components/schemas/NotificationRuleStatus'
          description: The status of the notification rule. Valid statuses are on
            (sending notifications) or off (not sending notifications).
        CreatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/CreatedTimestamp'
          description: The date and time the notification rule was created, in timestamp
            format.
        LastModifiedTimestamp:
          allOf:
          - $ref: '#/components/schemas/LastModifiedTimestamp'
          description: The date and time the notification rule was most recently updated,
            in timestamp format.
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: The tags associated with the notification rule.
      required:
      - Arn
    DetailType:
      type: string
      enum:
      - BASIC
      - FULL
    EventTypeBatch:
      type: array
      items:
        $ref: '#/components/schemas/EventTypeSummary'
    EventTypeId:
      type: string
      minLength: 1
      maxLength: 200
    EventTypeIds:
      type: array
      items:
        $ref: '#/components/schemas/EventTypeId'
    EventTypeName:
      type: string
    EventTypeSummary:
      type: object
      properties:
        EventTypeId:
          allOf:
          - $ref: '#/components/schemas/EventTypeId'
          description: The system-generated ID of the event. For a complete list of
            event types and IDs, see [Notification concepts](https://docs.aws.amazon.com/codestar-notifications/latest/userguide/concepts.html#concepts-api)
            in the _Developer Tools Console User Guide_.
        ServiceName:
          allOf:
          - $ref: '#/components/schemas/ServiceName'
          description: The name of the service for which the event applies.
        EventTypeName:
          allOf:
          - $ref: '#/components/schemas/EventTypeName'
          description: The name of the event.
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          description: The resource type of the event.
      description: Returns information about an event that has triggered a notification
        rule.
    ForceUnsubscribeAll:
      type: boolean
      default: false
    InvalidNextTokenException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/Message'
      description: The value for the enumeration token used in the request to return
        the next batch of the results is not valid.
    LastModifiedTimestamp:
      type: string
      format: date-time
    LimitExceededException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/Message'
      description: One of the AWS CodeStar Notifications limits has been exceeded.
        Limits apply to accounts, notification rules, notifications, resources, and
        targets. For more information, see Limits.
    ListEventTypesFilter:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/ListEventTypesFilterName'
          description: The system-generated name of the filter type you want to filter
            by.
        Value:
          allOf:
          - $ref: '#/components/schemas/ListEventTypesFilterValue'
          description: The name of the resource type (for example, pipeline) or service
            name (for example, CodePipeline) that you want to filter by.
      required:
      - Name
      - Value
      description: Information about a filter to apply to the list of returned event
        types. You can filter by resource type or service name.
    ListEventTypesFilterName:
      type: string
      enum:
      - RESOURCE_TYPE
      - SERVICE_NAME
    ListEventTypesFilterValue:
      type: string
    ListEventTypesFilters:
      type: array
      items:
        $ref: '#/components/schemas/ListEventTypesFilter'
    ListEventTypesRequest:
      type: object
      properties:
        Filters:
          allOf:
          - $ref: '#/components/schemas/ListEventTypesFilters'
          description: The filters to use to return information by service or resource
            type.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: An enumeration token that, when provided in a request, returns
            the next batch of the results.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: A non-negative integer used to limit the number of returned
            results. The default number is 50. The maximum number of results that
            can be returned is 100.
    ListEventTypesResult:
      type: object
      properties:
        EventTypes:
          allOf:
          - $ref: '#/components/schemas/EventTypeBatch'
          description: Information about each event, including service name, resource
            type, event ID, and event name.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: An enumeration token that can be used in a request to return
            the next batch of the results.
    ListNotificationRulesFilter:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/ListNotificationRulesFilterName'
          description: The name of the attribute you want to use to filter the returned
            notification rules.
        Value:
          allOf:
          - $ref: '#/components/schemas/ListNotificationRulesFilterValue'
          description: The value of the attribute you want to use to filter the returned
            notification rules. For example, if you specify filtering by _RESOURCE_
            in Name, you might specify the ARN of a pipeline in CodePipeline for the
            value.
      required:
      - Name
      - Value
      description: Information about a filter to apply to the list of returned notification
        rules. You can filter by event type, owner, resource, or target.
    ListNotificationRulesFilterName:
      type: string
      enum:
      - EVENT_TYPE_ID
      - CREATED_BY
      - RESOURCE
      - TARGET_ADDRESS
    ListNotificationRulesFilterValue:
      type: string
      minLength: 0
      maxLength: 2048
    ListNotificationRulesFilters:
      type: array
      items:
        $ref: '#/components/schemas/ListNotificationRulesFilter'
    ListNotificationRulesRequest:
      type: object
      properties:
        Filters:
          allOf:
          - $ref: '#/components/schemas/ListNotificationRulesFilters'
          description: 'The filters to use to return information by service or resource
            type. For valid values, see ListNotificationRulesFilter.


            A filter with the same name can appear more than once when used with OR
            statements. Filters with different names should be applied with AND statements.'
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: An enumeration token that, when provided in a request, returns
            the next batch of the results.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: A non-negative integer used to limit the number of returned
            results. The maximum number of results that can be returned is 100.
    ListNotificationRulesResult:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: An enumeration token that can be used in a request to return
            the next batch of the results.
        NotificationRules:
          allOf:
          - $ref: '#/components/schemas/NotificationRuleBatch'
          description: The list of notification rules for the Amazon Web Services
            account, by Amazon Resource Name (ARN) and ID.
    ListTagsForResourceRequest:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/NotificationRuleArn'
          description: The Amazon Resource Name (ARN) for the notification rule.
      required:
      - Arn
    ListTagsForResourceResult:
      type: object
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: The tags associated with the notification rule.
    ListTargetsFilter:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/ListTargetsFilterName'
          description: The name of the attribute you want to use to filter the returned
            targets.
        Value:
          allOf:
          - $ref: '#/components/schemas/ListTargetsFilterValue'
          description: The value of the attribute you want to use to filter the returned
            targets. For example, if you specify `SNS` for the Target type, you could
            specify an Amazon Resource Name (ARN) for a topic as the value.
      required:
      - Name
      - Value
      description: Information about a filter to apply to the list of returned targets.
        You can filter by target type, address, or status. For example, to filter
        results to notification rules that have active Chatbot topics as targets,
        you could specify a ListTargetsFilter Name as `TargetType` and a Value of
        `SNS`, and a Name of `TARGET_STATUS` and a Value of `ACTIVE`.
    ListTargetsFilterName:
      type: string
      enum:
      - TARGET_TYPE
      - TARGET_ADDRESS
      - TARGET_STATUS
    ListTargetsFilterValue:
      type: string
      minLength: 0
      maxLength: 2048
    ListTargetsFilters:
      type: array
      items:
        $ref: '#/components/schemas/ListTargetsFilter'
    ListTargetsRequest:
      type: object
      properties:
        Filters:
          allOf:
          - $ref: '#/components/schemas/ListTargetsFilters'
          description: 'The filters to use to return information by service or resource
            type. Valid filters include target type, target address, and target status.


            A filter with the same name can appear more than once when used with OR
            statements. Filters with different names should be applied with AND statements.'
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: An enumeration token that, when provided in a request, returns
            the next batch of the results.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: A non-negative integer used to limit the number of returned
            results. The maximum number of results that can be returned is 100.
    ListTargetsResult:
      type: object
      properties:
        Targets:
          allOf:
          - $ref: '#/components/schemas/TargetsBatch'
          description: The list of notification rule targets.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: An enumeration token that can be used in a request to return
            the next batch of results.
    MaxResults:
      type: integer
      minimum: 1
      maximum: 100
    Message:
      type: string
      minLength: 1
    NextToken:
      type: string
      pattern: ^[\w/+=]+$
    NotificationRuleArn:
      type: string
      pattern: ^arn:aws[^:\s]*:codestar-notifications:[^:\s]+:\d{12}:notificationrule\/(.*\S)?$
    NotificationRuleBatch:
      type: array
      items:
        $ref: '#/components/schemas/NotificationRuleSummary'
    NotificationRuleCreatedBy:
      type: string
      minLength: 1
    NotificationRuleId:
      type: string
      minLength: 1
      maxLength: 40
    NotificationRuleName:
      type: string
      pattern: ^[A-Za-z0-9\-_ ]+$
      minLength: 1
      maxLength: 64
    NotificationRuleResource:
      type: string
      pattern: ^arn:aws[^:\s]*:[^:\s]*:[^:\s]*:[0-9]{12}:[^\s]+$
    NotificationRuleStatus:
      type: string
      enum:
      - ENABLED
      - DISABLED
    NotificationRuleSummary:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/NotificationRuleId'
          description: The unique ID of the notification rule.
        Arn:
          allOf:
          - $ref: '#/components/schemas/NotificationRuleArn'
          description: The Amazon Resource Name (ARN) of the notification rule.
      description: Information about a specified notification rule.
    ResourceAlreadyExistsException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/Message'
      description: A resource with the same name or ID already exists. Notification
        rule names must be unique in your Amazon Web Services account.
    ResourceNotFoundException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/Message'
      description: AWS CodeStar Notifications can't find a resource that matches the
        provided ARN.
    ResourceType:
      type: string
      pattern: ^([a-zA-Z0-9-])+$
      minLength: 1
    ServiceName:
      type: string
    SubscribeRequest:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/NotificationRuleArn'
          description: The Amazon Resource Name (ARN) of the notification rule for
            which you want to create the association.
        Target:
          $ref: '#/components/schemas/Target'
        ClientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          description: An enumeration token that, when provided in a request, returns
            the next batch of the results.
      required:
      - Arn
      - Target
    SubscribeResult:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/NotificationRuleArn'
          description: The Amazon Resource Name (ARN) of the notification rule for
            which you have created assocations.
    TagKey:
      type: string
      pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
      minLength: 1
      maxLength: 128
    TagKeys:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
    TagResourceRequest:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/NotificationRuleArn'
          description: The Amazon Resource Name (ARN) of the notification rule to
            tag.
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: The list of tags to associate with the resource. Tag key names
            cannot start with "`aws`".
      required:
      - Arn
      - Tags
    TagResourceResult:
      type: object
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: The list of tags associated with the resource.
    TagValue:
      type: string
      pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
      minLength: 0
      maxLength: 256
    Tags:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
    Target:
      type: object
      properties:
        TargetType:
          allOf:
          - $ref: '#/components/schemas/TargetType'
          description: "The target type. Can be an Chatbot topic or Chatbot client.\n\
            \n  * Chatbot topics are specified as `SNS`.\n\n  * Chatbot clients are\
            \ specified as `AWSChatbotSlack`."
        TargetAddress:
          allOf:
          - $ref: '#/components/schemas/TargetAddress'
          description: The Amazon Resource Name (ARN) of the Chatbot topic or Chatbot
            client.
      description: Information about the Chatbot topics or Chatbot clients associated
        with a notification rule.
    TargetAddress:
      type: string
      minLength: 1
      maxLength: 320
    TargetStatus:
      type: string
      enum:
      - PENDING
      - ACTIVE
      - UNREACHABLE
      - INACTIVE
      - DEACTIVATED
    TargetSummary:
      type: object
      properties:
        TargetAddress:
          allOf:
          - $ref: '#/components/schemas/TargetAddress'
          description: The Amazon Resource Name (ARN) of the Chatbot topic or Chatbot
            client.
        TargetType:
          allOf:
          - $ref: '#/components/schemas/TargetType'
          description: "The type of the target (for example, `SNS`).\n\n  * Chatbot\
            \ topics are specified as `SNS`.\n\n  * Chatbot clients are specified\
            \ as `AWSChatbotSlack`."
        TargetStatus:
          allOf:
          - $ref: '#/components/schemas/TargetStatus'
          description: The status of the target.
      description: Information about the targets specified for a notification rule.
    TargetType:
      type: string
      pattern: ^[A-Za-z]+$
    Targets:
      type: array
      items:
        $ref: '#/components/schemas/Target'
    TargetsBatch:
      type: array
      items:
        $ref: '#/components/schemas/TargetSummary'
    UnsubscribeRequest:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/NotificationRuleArn'
          description: The Amazon Resource Name (ARN) of the notification rule.
        TargetAddress:
          allOf:
          - $ref: '#/components/schemas/TargetAddress'
          description: The ARN of the Chatbot topic to unsubscribe from the notification
            rule.
      required:
      - Arn
      - TargetAddress
    UnsubscribeResult:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/NotificationRuleArn'
          description: The Amazon Resource Name (ARN) of the the notification rule
            from which you have removed a subscription.
      required:
      - Arn
    UntagResourceRequest:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/NotificationRuleArn'
          description: The Amazon Resource Name (ARN) of the notification rule from
            which to remove the tags.
        TagKeys:
          allOf:
          - $ref: '#/components/schemas/TagKeys'
          description: The key names of the tags to remove.
      required:
      - Arn
      - TagKeys
    UntagResourceResult:
      type: object
      properties: {}
    UpdateNotificationRuleRequest:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/NotificationRuleArn'
          description: The Amazon Resource Name (ARN) of the notification rule.
        Name:
          allOf:
          - $ref: '#/components/schemas/NotificationRuleName'
          description: The name of the notification rule.
        Status:
          allOf:
          - $ref: '#/components/schemas/NotificationRuleStatus'
          description: The status of the notification rule. Valid statuses include
            enabled (sending notifications) or disabled (not sending notifications).
        EventTypeIds:
          allOf:
          - $ref: '#/components/schemas/EventTypeIds'
          description: A list of event types associated with this notification rule.
            For a complete list of event types and IDs, see [Notification concepts](https://docs.aws.amazon.com/codestar-notifications/latest/userguide/concepts.html#concepts-api)
            in the _Developer Tools Console User Guide_.
        Targets:
          allOf:
          - $ref: '#/components/schemas/Targets'
          description: The address and type of the targets to receive notifications
            from this notification rule.
        DetailType:
          allOf:
          - $ref: '#/components/schemas/DetailType'
          description: The level of detail to include in the notifications for this
            resource. BASIC will include only the contents of the event as it would
            appear in Amazon CloudWatch. FULL will include any supplemental information
            provided by AWS CodeStar Notifications and/or the service for the resource
            for which the notification is created.
      required:
      - Arn
    UpdateNotificationRuleResult:
      type: object
      properties: {}
    ValidationException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/Message'
      description: One or more parameter values are not valid.
