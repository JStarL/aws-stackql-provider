openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: polly
  x-aws-serviceName: polly
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-05'
  version: '2016-06-10'
  title: Amazon Polly
  description: |-
    Amazon Polly is a web service that makes it easy to synthesize speech from text.

    The Amazon Polly service provides API operations for synthesizing high-quality speech from plain text and Speech Synthesis Markup Language (SSML), along with managing pronunciations lexicons that enable you to get the best results for your application domain.
servers:
- description: The Amazon Polly regional endpoint
  url: https://polly.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths: {}
components:
  schemas:
    Alphabet:
      type: string
    AudioStream:
      type: string
      format: byte
    ContentType:
      type: string
    DateTime:
      type: string
      format: date-time
    Engine:
      type: string
      enum:
      - standard
      - neural
      - long-form
      - generative
    EngineList:
      type: array
      items:
        $ref: '#/components/schemas/Engine'
    ErrorMessage:
      type: string
    Gender:
      type: string
      enum:
      - Female
      - Male
    IncludeAdditionalLanguageCodes:
      type: boolean
      default: false
    LanguageCode:
      type: string
      enum:
      - arb
      - cmn-CN
      - cy-GB
      - da-DK
      - de-DE
      - en-AU
      - en-GB
      - en-GB-WLS
      - en-IN
      - en-US
      - es-ES
      - es-MX
      - es-US
      - fr-CA
      - fr-FR
      - is-IS
      - it-IT
      - ja-JP
      - hi-IN
      - ko-KR
      - nb-NO
      - nl-NL
      - pl-PL
      - pt-BR
      - pt-PT
      - ro-RO
      - ru-RU
      - sv-SE
      - tr-TR
      - en-NZ
      - en-ZA
      - ca-ES
      - de-AT
      - yue-CN
      - ar-AE
      - fi-FI
      - en-IE
      - nl-BE
      - fr-BE
      - cs-CZ
      - de-CH
      - en-SG
    LanguageCodeList:
      type: array
      items:
        $ref: '#/components/schemas/LanguageCode'
    LanguageName:
      type: string
    LastModified:
      type: string
      format: date-time
    LexemesCount:
      type: integer
      default: 0
    LexiconArn:
      type: string
    LexiconContent:
      type: string
    LexiconDescriptionList:
      type: array
      items:
        $ref: '#/components/schemas/LexiconDescription'
    LexiconName:
      type: string
      pattern: ^[0-9A-Za-z]{1,20}$
    LexiconNameList:
      type: array
      items:
        $ref: '#/components/schemas/LexiconName'
    MaxResults:
      type: integer
      minimum: 1
      maximum: 100
    NextToken:
      type: string
      minLength: 0
      maxLength: 4096
    OutputFormat:
      type: string
      enum:
      - json
      - mp3
      - ogg_vorbis
      - pcm
    OutputS3BucketName:
      type: string
      pattern: ^[a-z0-9][\.\-a-z0-9]{1,61}[a-z0-9]$
    OutputS3KeyPrefix:
      type: string
      pattern: ^[0-9a-zA-Z\/\!\-_\.\*\'\(\):;\$@=+\,\?&]{0,800}$
    OutputUri:
      type: string
    RequestCharacters:
      type: integer
      default: 0
    SampleRate:
      type: string
    Size:
      type: integer
      default: 0
    SnsTopicArn:
      type: string
      pattern: ^arn:aws(-(cn|iso(-b)?|us-gov))?:sns:[a-z0-9_-]{1,50}:\d{12}:[a-zA-Z0-9_-]{1,251}([a-zA-Z0-9_-]{0,5}|\.fifo)$
    SpeechMarkType:
      type: string
      enum:
      - sentence
      - ssml
      - viseme
      - word
    SpeechMarkTypeList:
      type: array
      items:
        $ref: '#/components/schemas/SpeechMarkType'
    SynthesisTasks:
      type: array
      items:
        $ref: '#/components/schemas/SynthesisTask'
    TaskId:
      type: string
      pattern: ^[a-zA-Z0-9_-]{1,100}$
    TaskStatus:
      type: string
      enum:
      - scheduled
      - inProgress
      - completed
      - failed
    TaskStatusReason:
      type: string
    Text:
      type: string
    TextType:
      type: string
      enum:
      - ssml
      - text
    VoiceId:
      type: string
      enum:
      - Aditi
      - Amy
      - Astrid
      - Bianca
      - Brian
      - Camila
      - Carla
      - Carmen
      - Celine
      - Chantal
      - Conchita
      - Cristiano
      - Dora
      - Emma
      - Enrique
      - Ewa
      - Filiz
      - Gabrielle
      - Geraint
      - Giorgio
      - Gwyneth
      - Hans
      - Ines
      - Ivy
      - Jacek
      - Jan
      - Joanna
      - Joey
      - Justin
      - Karl
      - Kendra
      - Kevin
      - Kimberly
      - Lea
      - Liv
      - Lotte
      - Lucia
      - Lupe
      - Mads
      - Maja
      - Marlene
      - Mathieu
      - Matthew
      - Maxim
      - Mia
      - Miguel
      - Mizuki
      - Naja
      - Nicole
      - Olivia
      - Penelope
      - Raveena
      - Ricardo
      - Ruben
      - Russell
      - Salli
      - Seoyeon
      - Takumi
      - Tatyana
      - Vicki
      - Vitoria
      - Zeina
      - Zhiyu
      - Aria
      - Ayanda
      - Arlet
      - Hannah
      - Arthur
      - Daniel
      - Liam
      - Pedro
      - Kajal
      - Hiujin
      - Laura
      - Elin
      - Ida
      - Suvi
      - Ola
      - Hala
      - Andres
      - Sergio
      - Remi
      - Adriano
      - Thiago
      - Ruth
      - Stephen
      - Kazuha
      - Tomoko
      - Niamh
      - Sofie
      - Lisa
      - Isabelle
      - Zayd
      - Danielle
      - Gregory
      - Burcu
      - Jitka
      - Sabrina
      - Jasmine
      - Jihye
    VoiceList:
      type: array
      items:
        $ref: '#/components/schemas/Voice'
    VoiceName:
      type: string
