openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: payment_cryptography_data
  x-aws-serviceName: paymentcryptographydata
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-05'
  version: '2022-02-03'
  title: Payment Cryptography Data Plane
  description: |-
    You use the Amazon Web Services Payment Cryptography Data Plane to manage how encryption keys are used for payment-related transaction processing and associated cryptographic operations. You can encrypt, decrypt, generate, verify, and translate payment-related cryptographic operations in Amazon Web Services Payment Cryptography. For more information, see [Data operations](https://docs.aws.amazon.com/payment-cryptography/latest/userguide/data-operations.html) in the _Amazon Web Services Payment Cryptography User Guide_.

    To manage your encryption keys, you use the [Amazon Web Services Payment Cryptography Control Plane](https://docs.aws.amazon.com/payment-cryptography/latest/APIReference/Welcome.html). You can create, import, export, share, manage, and delete keys. You can also manage Identity and Access Management (IAM) policies for keys.
servers:
- description: The Payment Cryptography Data Plane regional endpoint
  url: https://dataplane.payment-cryptography.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths: {}
components:
  schemas:
    ApplicationCryptogramType:
      type: string
      pattern: ^[0-9a-fA-F]+$
      minLength: 16
      maxLength: 16
    AuthRequestCryptogramType:
      type: string
      pattern: ^[0-9a-fA-F]+$
      minLength: 16
      maxLength: 16
    AuthResponseValueType:
      type: string
      pattern: ^[0-9a-fA-F]+$
      minLength: 1
      maxLength: 16
    CardExpiryDateType:
      type: string
      pattern: ^[0-9]+$
      minLength: 4
      maxLength: 4
    CertificateType:
      type: string
      pattern: ^[^\[;\]<>]+$
      minLength: 1
      maxLength: 32768
    CipherTextType:
      type: string
      pattern: ^(?:[0-9a-fA-F][0-9a-fA-F])+$
      minLength: 2
      maxLength: 4096
    CommandMessageDataType:
      type: string
      pattern: ^(?:[0-9a-fA-F][0-9a-fA-F])+$
      minLength: 16
      maxLength: 1024
    DecimalizationTableType:
      type: string
      pattern: ^[0-9]+$
      minLength: 16
      maxLength: 16
    EncryptedPinBlockType:
      type: string
      pattern: ^[0-9a-fA-F]+$
      minLength: 16
      maxLength: 32
    HexEvenLengthBetween16And32:
      type: string
      pattern: ^(?:[0-9a-fA-F][0-9a-fA-F])+$
      minLength: 16
      maxLength: 32
    HexLengthBetween10And24:
      type: string
      pattern: ^[0-9a-fA-F]+$
      minLength: 10
      maxLength: 24
    HexLengthBetween2And4:
      type: string
      pattern: ^[0-9a-fA-F]+$
      minLength: 2
      maxLength: 4
    HexLengthBetween2And8:
      type: string
      pattern: ^[0-9a-fA-F]+$
      minLength: 2
      maxLength: 8
    HexLengthEquals1:
      type: string
      pattern: ^[0-9A-F]+$
      minLength: 1
      maxLength: 1
    HexLengthEquals4:
      type: string
      pattern: ^[0-9a-fA-F]+$
      minLength: 4
      maxLength: 4
    HexLengthEquals8:
      type: string
      pattern: ^[0-9a-fA-F]+$
      minLength: 8
      maxLength: 8
    InitializationVectorType:
      type: string
      pattern: ^(?:[0-9a-fA-F]{16}|[0-9a-fA-F]{32})$
      minLength: 16
      maxLength: 32
    IntegerRangeBetween0And6:
      type: integer
      minimum: 0
      maximum: 6
    IntegerRangeBetween3And5Type:
      type: integer
      minimum: 3
      maximum: 5
    IntegerRangeBetween4And12:
      type: integer
      minimum: 4
      maximum: 12
    IntegerRangeBetween4And16:
      type: integer
      minimum: 4
      maximum: 16
    KeyArn:
      type: string
      pattern: ^arn:aws:payment-cryptography:[a-z]{2}-[a-z]{1,16}-[0-9]+:[0-9]{12}:key/[0-9a-zA-Z]{16,64}$
      minLength: 70
      maxLength: 150
    KeyArnOrKeyAliasType:
      type: string
      pattern: ^arn:aws:payment-cryptography:[a-z]{2}-[a-z]{1,16}-[0-9]+:[0-9]{12}:(key/[0-9a-zA-Z]{16,64}|alias/[a-zA-Z0-9/_-]+)$|^alias/[a-zA-Z0-9/_-]+$
      minLength: 7
      maxLength: 322
    KeyCheckValue:
      type: string
      pattern: ^[0-9a-fA-F]+$
      minLength: 4
      maxLength: 16
    KeyCheckValueAlgorithm:
      type: string
      enum:
      - CMAC
      - ANSI_X9_24
    MacOutputType:
      type: string
      pattern: ^[0-9a-fA-F]+$
      minLength: 4
      maxLength: 128
    MacType:
      type: string
      pattern: ^(?:[0-9a-fA-F][0-9a-fA-F])+$
      minLength: 4
      maxLength: 128
    MessageDataType:
      type: string
      pattern: ^(?:[0-9a-fA-F][0-9a-fA-F])+$
      minLength: 2
      maxLength: 4096
    NumberLengthEquals2:
      type: string
      pattern: ^[0-9]+$
      minLength: 2
      maxLength: 2
    PinBlockLengthEquals16:
      type: string
      pattern: ^[0-9a-fA-F]+$
      minLength: 16
      maxLength: 16
    PinChangeMacOutputType:
      type: string
      pattern: ^[0-9a-fA-F]+$
      minLength: 8
      maxLength: 16
    PinOffsetType:
      type: string
      pattern: ^[0-9]+$
      minLength: 4
      maxLength: 12
    PinValidationDataType:
      type: string
      pattern: ^[0-9]+$
      minLength: 4
      maxLength: 16
    PlainTextOutputType:
      type: string
      pattern: ^(?:[0-9a-fA-F][0-9a-fA-F])+$
      minLength: 2
      maxLength: 4096
    PlainTextType:
      type: string
      pattern: ^(?:[0-9a-fA-F][0-9a-fA-F])+$
      minLength: 2
      maxLength: 4064
    PrimaryAccountNumberType:
      type: string
      pattern: ^[0-9]+$
      minLength: 12
      maxLength: 19
    ProprietaryAuthenticationDataType:
      type: string
      pattern: ^[0-9a-fA-F]+$
      minLength: 1
      maxLength: 16
    ServiceCodeType:
      type: string
      pattern: ^[0-9]+$
      minLength: 3
      maxLength: 3
    SessionDerivationDataType:
      type: string
      pattern: ^[0-9a-fA-F]+$
      minLength: 16
      maxLength: 16
    SharedInformation:
      type: string
      pattern: ^(?:[0-9a-fA-F][0-9a-fA-F])+$
      minLength: 2
      maxLength: 2048
    Tr31WrappedKeyBlock:
      type: string
      pattern: ^[0-9A-Z]+$
      minLength: 56
      maxLength: 9984
    TrackDataType:
      type: string
      pattern: ^[0-9a-fA-F]+$
      minLength: 2
      maxLength: 160
    TransactionDataType:
      type: string
      pattern: ^[0-9a-fA-F]+$
      minLength: 2
      maxLength: 1024
    ValidationDataType:
      type: string
      pattern: ^[0-9]+$
      minLength: 3
      maxLength: 5
    VerificationFailedReason:
      type: string
      enum:
      - INVALID_MAC
      - INVALID_PIN
      - INVALID_VALIDATION_DATA
      - INVALID_AUTH_REQUEST_CRYPTOGRAM
    VerificationValueType:
      type: string
      pattern: ^[0-9]+$
      minLength: 4
      maxLength: 12
