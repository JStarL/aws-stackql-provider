openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: payment_cryptography_data
  x-aws-serviceName: paymentcryptographydata
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-05'
  version: '2022-02-03'
  title: Payment Cryptography Data Plane
  description: |-
    You use the Amazon Web Services Payment Cryptography Data Plane to manage how encryption keys are used for payment-related transaction processing and associated cryptographic operations. You can encrypt, decrypt, generate, verify, and translate payment-related cryptographic operations in Amazon Web Services Payment Cryptography. For more information, see [Data operations](https://docs.aws.amazon.com/payment-cryptography/latest/userguide/data-operations.html) in the _Amazon Web Services Payment Cryptography User Guide_.

    To manage your encryption keys, you use the [Amazon Web Services Payment Cryptography Control Plane](https://docs.aws.amazon.com/payment-cryptography/latest/APIReference/Welcome.html). You can create, import, export, share, manage, and delete keys. You can also manage Identity and Access Management (IAM) policies for keys.
servers:
- description: The Payment Cryptography Data Plane regional endpoint
  url: https://dataplane.payment-cryptography.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths: {}
components:
  schemas:
    ApplicationCryptogramType:
      type: string
      pattern: ^[0-9a-fA-F]+$
      minLength: 16
      maxLength: 16
    AuthRequestCryptogramType:
      type: string
      pattern: ^[0-9a-fA-F]+$
      minLength: 16
      maxLength: 16
    AuthResponseValueType:
      type: string
      pattern: ^[0-9a-fA-F]+$
      minLength: 1
      maxLength: 16
    CardExpiryDateType:
      type: string
      pattern: ^[0-9]+$
      minLength: 4
      maxLength: 4
    CardGenerationAttributes:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/AmexCardSecurityCodeVersion1'
      - allOf:
        - $ref: '#/components/schemas/AmexCardSecurityCodeVersion2'
        description: |-
          Card data parameters that are required to generate a Card Security Code (CSC2) for an AMEX payment card.
      - allOf:
        - $ref: '#/components/schemas/CardVerificationValue1'
        description: |-
          Card data parameters that are required to generate Card Verification Value (CVV) for the payment card.
      - allOf:
        - $ref: '#/components/schemas/CardVerificationValue2'
        description: |-
          Card data parameters that are required to generate Card Verification Value (CVV2) for the payment card.
      - allOf:
        - $ref: '#/components/schemas/CardHolderVerificationValue'
        description: |-
          Card data parameters that are required to generate a cardholder verification value for the payment card.
      - allOf:
        - $ref: '#/components/schemas/DynamicCardVerificationCode'
        description: |-
          Card data parameters that are required to generate CDynamic Card Verification Code (dCVC) for the payment card.
      - allOf:
        - $ref: '#/components/schemas/DynamicCardVerificationValue'
        description: |-
          Card data parameters that are required to generate CDynamic Card Verification Value (dCVV) for the payment card.
      description: |-
        Card data parameters that are required to generate Card Verification Values (CVV/CVV2), Dynamic Card Verification Values (dCVV/dCVV2), or Card Security Codes (CSC).
    CardVerificationAttributes:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/AmexCardSecurityCodeVersion1'
      - allOf:
        - $ref: '#/components/schemas/AmexCardSecurityCodeVersion2'
        description: |-
          Card data parameters that are required to verify a Card Security Code (CSC2) for an AMEX payment card.
      - allOf:
        - $ref: '#/components/schemas/CardVerificationValue1'
        description: |-
          Card data parameters that are required to verify Card Verification Value (CVV) for the payment card.
      - allOf:
        - $ref: '#/components/schemas/CardVerificationValue2'
        description: |-
          Card data parameters that are required to verify Card Verification Value (CVV2) for the payment card.
      - allOf:
        - $ref: '#/components/schemas/CardHolderVerificationValue'
        description: |-
          Card data parameters that are required to verify a cardholder verification value for the payment card.
      - allOf:
        - $ref: '#/components/schemas/DynamicCardVerificationCode'
        description: |-
          Card data parameters that are required to verify CDynamic Card Verification Code (dCVC) for the payment card.
      - allOf:
        - $ref: '#/components/schemas/DynamicCardVerificationValue'
        description: |-
          Card data parameters that are required to verify CDynamic Card Verification Value (dCVV) for the payment card.
      - allOf:
        - $ref: '#/components/schemas/DiscoverDynamicCardVerificationCode'
        description: |-
          Card data parameters that are required to verify CDynamic Card Verification Code (dCVC) for the payment card.
      description: |-
        Card data parameters that are requried to verify Card Verification Values (CVV/CVV2), Dynamic Card Verification Values (dCVV/dCVV2), or Card Security Codes (CSC).
    CertificateType:
      type: string
      pattern: ^[^\[;\]<>]+$
      minLength: 1
      maxLength: 32768
    CipherTextType:
      type: string
      pattern: ^(?:[0-9a-fA-F][0-9a-fA-F])+$
      minLength: 2
      maxLength: 4096
    CommandMessageDataType:
      type: string
      pattern: ^(?:[0-9a-fA-F][0-9a-fA-F])+$
      minLength: 16
      maxLength: 1024
    CryptogramAuthResponse:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/CryptogramVerificationArpcMethod1'
        description: |-
          Parameters that are required for ARPC response generation using method1 after ARQC verification is successful.
      - allOf:
        - $ref: '#/components/schemas/CryptogramVerificationArpcMethod2'
        description: |-
          Parameters that are required for ARPC response generation using method2 after ARQC verification is successful.
      description: |-
        Parameters that are required for Authorization Response Cryptogram (ARPC) generation after Authorization Request Cryptogram (ARQC) verification is successful.
    DecimalizationTableType:
      type: string
      pattern: ^[0-9]+$
      minLength: 16
      maxLength: 16
    DerivationMethodAttributes:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/EmvCommonAttributes'
        description: |-
          Parameters to derive the confidentiality and integrity keys for a payment card using Emv common derivation method.
      - allOf:
        - $ref: '#/components/schemas/AmexAttributes'
        description: |-
          Parameters to derive the confidentiality and integrity keys for a payment card using Amex derivation method.
      - allOf:
        - $ref: '#/components/schemas/VisaAttributes'
        description: |-
          Parameters to derive the confidentiality and integrity keys for a a payment card using Visa derivation method.
      - allOf:
        - $ref: '#/components/schemas/Emv2000Attributes'
        description: |-
          Parameters to derive the confidentiality and integrity keys for a payment card using Emv2000 derivation method.
      - allOf:
        - $ref: '#/components/schemas/MasterCardAttributes'
        description: |-
          Parameters to derive the confidentiality and integrity keys for a payment card using Mastercard derivation method.
      description: |-
        Parameters to derive the payment card specific confidentiality and integrity keys.
    DukptDerivationType:
      type: string
      enum:
      - TDES_2KEY
      - TDES_3KEY
      - AES_128
      - AES_192
      - AES_256
    DukptEncryptionMode:
      type: string
      enum:
      - ECB
      - CBC
    DukptKeyVariant:
      type: string
      enum:
      - BIDIRECTIONAL
      - REQUEST
      - RESPONSE
    EmvEncryptionMode:
      type: string
      enum:
      - ECB
      - CBC
    EmvMajorKeyDerivationMode:
      type: string
      enum:
      - EMV_OPTION_A
      - EMV_OPTION_B
    EncryptedPinBlockType:
      type: string
      pattern: ^[0-9a-fA-F]+$
      minLength: 16
      maxLength: 32
    EncryptionDecryptionAttributes:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/SymmetricEncryptionAttributes'
        description: |-
          Parameters that are required to perform encryption and decryption using symmetric keys.
      - allOf:
        - $ref: '#/components/schemas/AsymmetricEncryptionAttributes'
      - allOf:
        - $ref: '#/components/schemas/DukptEncryptionAttributes'
      - allOf:
        - $ref: '#/components/schemas/EmvEncryptionAttributes'
        description: |-
          Parameters for plaintext encryption using EMV keys.
      description: |-
        Parameters that are required to perform encryption and decryption operations.
    EncryptionMode:
      type: string
      enum:
      - ECB
      - CBC
      - CFB
      - CFB1
      - CFB8
      - CFB64
      - CFB128
      - OFB
    HexEvenLengthBetween16And32:
      type: string
      pattern: ^(?:[0-9a-fA-F][0-9a-fA-F])+$
      minLength: 16
      maxLength: 32
    HexLengthBetween10And24:
      type: string
      pattern: ^[0-9a-fA-F]+$
      minLength: 10
      maxLength: 24
    HexLengthBetween2And4:
      type: string
      pattern: ^[0-9a-fA-F]+$
      minLength: 2
      maxLength: 4
    HexLengthBetween2And8:
      type: string
      pattern: ^[0-9a-fA-F]+$
      minLength: 2
      maxLength: 8
    HexLengthEquals1:
      type: string
      pattern: ^[0-9A-F]+$
      minLength: 1
      maxLength: 1
    HexLengthEquals4:
      type: string
      pattern: ^[0-9a-fA-F]+$
      minLength: 4
      maxLength: 4
    HexLengthEquals8:
      type: string
      pattern: ^[0-9a-fA-F]+$
      minLength: 8
      maxLength: 8
    InitializationVectorType:
      type: string
      pattern: ^(?:[0-9a-fA-F]{16}|[0-9a-fA-F]{32})$
      minLength: 16
      maxLength: 32
    IntegerRangeBetween0And6:
      type: integer
      minimum: 0
      maximum: 6
    IntegerRangeBetween3And5Type:
      type: integer
      minimum: 3
      maximum: 5
    IntegerRangeBetween4And12:
      type: integer
      minimum: 4
      maximum: 12
    IntegerRangeBetween4And16:
      type: integer
      minimum: 4
      maximum: 16
    KeyArn:
      type: string
      pattern: ^arn:aws:payment-cryptography:[a-z]{2}-[a-z]{1,16}-[0-9]+:[0-9]{12}:key/[0-9a-zA-Z]{16,64}$
      minLength: 70
      maxLength: 150
    KeyArnOrKeyAliasType:
      type: string
      pattern: ^arn:aws:payment-cryptography:[a-z]{2}-[a-z]{1,16}-[0-9]+:[0-9]{12}:(key/[0-9a-zA-Z]{16,64}|alias/[a-zA-Z0-9/_-]+)$|^alias/[a-zA-Z0-9/_-]+$
      minLength: 7
      maxLength: 322
    KeyCheckValue:
      type: string
      pattern: ^[0-9a-fA-F]+$
      minLength: 4
      maxLength: 16
    KeyCheckValueAlgorithm:
      type: string
      enum:
      - CMAC
      - ANSI_X9_24
    KeyDerivationFunction:
      type: string
      enum:
      - NIST_SP800
      - ANSI_X963
    KeyDerivationHashAlgorithm:
      type: string
      enum:
      - SHA_256
      - SHA_384
      - SHA_512
    MacAlgorithm:
      type: string
      enum:
      - ISO9797_ALGORITHM1
      - ISO9797_ALGORITHM3
      - CMAC
      - HMAC_SHA224
      - HMAC_SHA256
      - HMAC_SHA384
      - HMAC_SHA512
    MacAttributes:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/MacAlgorithm'
        description: |-
          The encryption algorithm for MAC generation or verification.
      - allOf:
        - $ref: '#/components/schemas/MacAlgorithmEmv'
        description: |-
          Parameters that are required for MAC generation or verification using EMV MAC algorithm.
      - allOf:
        - $ref: '#/components/schemas/MacAlgorithmDukpt'
        description: |-
          Parameters that are required for MAC generation or verification using DUKPT ISO 9797 algorithm1.
      - allOf:
        - $ref: '#/components/schemas/MacAlgorithmDukpt'
        description: |-
          Parameters that are required for MAC generation or verification using DUKPT ISO 9797 algorithm3.
      - allOf:
        - $ref: '#/components/schemas/MacAlgorithmDukpt'
        description: |-
          Parameters that are required for MAC generation or verification using DUKPT CMAC algorithm.
      description: |-
        Parameters that are required for DUKPT, HMAC, or EMV MAC generation or verification.
    MacOutputType:
      type: string
      pattern: ^[0-9a-fA-F]+$
      minLength: 4
      maxLength: 128
    MacType:
      type: string
      pattern: ^(?:[0-9a-fA-F][0-9a-fA-F])+$
      minLength: 4
      maxLength: 128
    MajorKeyDerivationMode:
      type: string
      enum:
      - EMV_OPTION_A
      - EMV_OPTION_B
    MessageDataType:
      type: string
      pattern: ^(?:[0-9a-fA-F][0-9a-fA-F])+$
      minLength: 2
      maxLength: 4096
    NumberLengthEquals2:
      type: string
      pattern: ^[0-9]+$
      minLength: 2
      maxLength: 2
    PaddingType:
      type: string
      enum:
      - PKCS1
      - OAEP_SHA1
      - OAEP_SHA256
      - OAEP_SHA512
    PinBlockFormatForEmvPinChange:
      type: string
      enum:
      - ISO_FORMAT_0
      - ISO_FORMAT_1
      - ISO_FORMAT_3
    PinBlockFormatForPinData:
      type: string
      enum:
      - ISO_FORMAT_0
      - ISO_FORMAT_3
      - ISO_FORMAT_4
    PinBlockLengthEquals16:
      type: string
      pattern: ^[0-9a-fA-F]+$
      minLength: 16
      maxLength: 16
    PinBlockLengthPosition:
      type: string
      enum:
      - NONE
      - FRONT_OF_PIN_BLOCK
    PinBlockPaddingType:
      type: string
      enum:
      - NO_PADDING
      - ISO_IEC_7816_4
    PinChangeMacOutputType:
      type: string
      pattern: ^[0-9a-fA-F]+$
      minLength: 8
      maxLength: 16
    PinData:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/PinOffsetType'
        description: |-
          The PIN offset value.
      - allOf:
        - $ref: '#/components/schemas/VerificationValueType'
        description: |-
          The unique data to identify a cardholder. In most cases, this is the same as cardholder's Primary Account Number (PAN). If a value is not provided, it defaults to PAN.
      description: |-
        Parameters that are required to generate, translate, or verify PIN data.
    PinGenerationAttributes:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/VisaPin'
        description: |-
          Parameters that are required to generate or verify Visa PIN.
      - allOf:
        - $ref: '#/components/schemas/VisaPinVerificationValue'
        description: |-
          Parameters that are required to generate or verify Visa PIN Verification Value (PVV).
      - allOf:
        - $ref: '#/components/schemas/Ibm3624PinOffset'
        description: |-
          Parameters that are required to generate or verify Ibm3624 PIN offset PIN.
      - allOf:
        - $ref: '#/components/schemas/Ibm3624NaturalPin'
        description: |-
          Parameters that are required to generate or verify Ibm3624 natural PIN.
      - allOf:
        - $ref: '#/components/schemas/Ibm3624RandomPin'
        description: |-
          Parameters that are required to generate or verify Ibm3624 random PIN.
      - allOf:
        - $ref: '#/components/schemas/Ibm3624PinFromOffset'
        description: |-
          Parameters that are required to generate or verify Ibm3624 PIN from offset PIN.
      description: |-
        Parameters that are required for PIN data generation.
    PinOffsetType:
      type: string
      pattern: ^[0-9]+$
      minLength: 4
      maxLength: 12
    PinValidationDataType:
      type: string
      pattern: ^[0-9]+$
      minLength: 4
      maxLength: 16
    PinVerificationAttributes:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/VisaPinVerification'
        description: |-
          Parameters that are required to generate or verify Visa PIN.
      - allOf:
        - $ref: '#/components/schemas/Ibm3624PinVerification'
        description: |-
          Parameters that are required to generate or verify Ibm3624 PIN.
      description: |-
        Parameters that are required for PIN data verification.
    PlainTextOutputType:
      type: string
      pattern: ^(?:[0-9a-fA-F][0-9a-fA-F])+$
      minLength: 2
      maxLength: 4096
    PlainTextType:
      type: string
      pattern: ^(?:[0-9a-fA-F][0-9a-fA-F])+$
      minLength: 2
      maxLength: 4064
    PrimaryAccountNumberType:
      type: string
      pattern: ^[0-9]+$
      minLength: 12
      maxLength: 19
    ProprietaryAuthenticationDataType:
      type: string
      pattern: ^[0-9a-fA-F]+$
      minLength: 1
      maxLength: 16
    ReEncryptionAttributes:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/SymmetricEncryptionAttributes'
        description: |-
          Parameters that are required to encrypt data using symmetric keys.
      - allOf:
        - $ref: '#/components/schemas/DukptEncryptionAttributes'
      description: |-
        Parameters that are required to perform reencryption operation.
    ServiceCodeType:
      type: string
      pattern: ^[0-9]+$
      minLength: 3
      maxLength: 3
    SessionDerivationDataType:
      type: string
      pattern: ^[0-9a-fA-F]+$
      minLength: 16
      maxLength: 16
    SessionKeyDerivation:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/SessionKeyEmvCommon'
        description: |-
          Parameters to derive session key for an Emv common payment card for ARQC verification.
      - allOf:
        - $ref: '#/components/schemas/SessionKeyMastercard'
        description: |-
          Parameters to derive session key for a Mastercard payment card for ARQC verification.
      - allOf:
        - $ref: '#/components/schemas/SessionKeyEmv2000'
        description: |-
          Parameters to derive session key for an Emv2000 payment card for ARQC verification.
      - allOf:
        - $ref: '#/components/schemas/SessionKeyAmex'
        description: |-
          Parameters to derive session key for an Amex payment card for ARQC verification.
      - allOf:
        - $ref: '#/components/schemas/SessionKeyVisa'
        description: |-
          Parameters to derive session key for a Visa payment cardfor ARQC verification.
      description: |-
        Parameters to derive a session key for Authorization Response Cryptogram (ARQC) verification.
    SessionKeyDerivationMode:
      type: string
      enum:
      - EMV_COMMON_SESSION_KEY
      - EMV2000
      - AMEX
      - MASTERCARD_SESSION_KEY
      - VISA
    SessionKeyDerivationValue:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/ApplicationCryptogramType'
        description: |-
          The cryptogram provided by the terminal during transaction processing.
      - allOf:
        - $ref: '#/components/schemas/HexLengthEquals4'
        description: |-
          The transaction counter that is provided by the terminal during transaction processing.
      description: |-
        Parameters to derive session key value using a MAC EMV algorithm.
    SharedInformation:
      type: string
      pattern: ^(?:[0-9a-fA-F][0-9a-fA-F])+$
      minLength: 2
      maxLength: 2048
    SymmetricKeyAlgorithm:
      type: string
      enum:
      - TDES_2KEY
      - TDES_3KEY
      - AES_128
      - AES_192
      - AES_256
    Tr31WrappedKeyBlock:
      type: string
      pattern: ^[0-9A-Z]+$
      minLength: 56
      maxLength: 9984
    TrackDataType:
      type: string
      pattern: ^[0-9a-fA-F]+$
      minLength: 2
      maxLength: 160
    TransactionDataType:
      type: string
      pattern: ^[0-9a-fA-F]+$
      minLength: 2
      maxLength: 1024
    TranslationIsoFormats:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/TranslationPinDataIsoFormat034'
        description: |-
          Parameters that are required for ISO9564 PIN format 0 tranlation.
      - allOf:
        - $ref: '#/components/schemas/TranslationPinDataIsoFormat1'
        description: |-
          Parameters that are required for ISO9564 PIN format 1 tranlation.
      - allOf:
        - $ref: '#/components/schemas/TranslationPinDataIsoFormat034'
        description: |-
          Parameters that are required for ISO9564 PIN format 3 tranlation.
      - allOf:
        - $ref: '#/components/schemas/TranslationPinDataIsoFormat034'
        description: |-
          Parameters that are required for ISO9564 PIN format 4 tranlation.
      description: |-
        Parameters that are required for translation between ISO9564 PIN block formats 0,1,3,4.
    ValidationDataType:
      type: string
      pattern: ^[0-9]+$
      minLength: 3
      maxLength: 5
    ValidationExceptionFieldList:
      type: array
      items:
        $ref: '#/components/schemas/ValidationExceptionField'
    VerificationFailedReason:
      type: string
      enum:
      - INVALID_MAC
      - INVALID_PIN
      - INVALID_VALIDATION_DATA
      - INVALID_AUTH_REQUEST_CRYPTOGRAM
    VerificationValueType:
      type: string
      pattern: ^[0-9]+$
      minLength: 4
      maxLength: 12
    WrappedKeyMaterial:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/Tr31WrappedKeyBlock'
        description: |-
          The TR-31 wrapped key block.
      - allOf:
        - $ref: '#/components/schemas/EcdhDerivationAttributes'
        description: |-
          The parameter information for deriving a ECDH shared key.
      description: |-
        Parameter information of a WrappedKeyBlock for encryption key exchange.
