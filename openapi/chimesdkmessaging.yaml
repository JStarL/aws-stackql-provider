openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: chime_sdk_messaging
  x-aws-serviceName: chimesdkmessaging
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-07'
  version: '2021-05-15'
  title: Amazon Chime SDK Messaging
  description: |-
    The Amazon Chime SDK messaging APIs in this section allow software developers to send and receive messages in custom messaging applications. These APIs depend on the frameworks provided by the Amazon Chime SDK identity APIs. For more information about the messaging APIs, see [Amazon Chime SDK messaging](https://docs.aws.amazon.com/chime/latest/APIReference/API_Operations_Amazon_Chime_SDK_Messaging.html).
servers:
- description: The Amazon Chime SDK Messaging regional endpoint
  url: https://messaging-chime.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths:
  /channels/{ChannelArn}/channel-flow:
    put:
      operationId: AssociateChannelFlow
      description: |-
        Associates a channel flow with a channel. Once associated, all messages to that channel go through channel flow processors. To stop processing, use the `DisassociateChannelFlow` API.

        Only administrators or channel moderators can associate a channel flow. The `x-amz-chime-bearer` request header is mandatory. Use the ARN of the `AppInstanceUser` or `AppInstanceBot` that makes the API call as the value in the header.
      parameters:
      - name: ChannelArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      - name: x-amz-chime-bearer
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ChannelFlowArn:
                  $ref: '#/components/schemas/ChimeArn'
      responses:
        '200': {}
        '400':
          description: |-
            The input parameters don't match the service's restrictions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '404':
          description: |-
            One or more of the resources in the request does not exist in the system.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
  /channels/{ChannelArn}/memberships?operation=batch-create:
    post:
      operationId: BatchCreateChannelMembership
      description: |-
        Adds a specified number of users and bots to a channel.
      parameters:
      - name: ChannelArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      - name: x-amz-chime-bearer
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Type:
                  $ref: '#/components/schemas/ChannelMembershipType'
                MemberArns:
                  $ref: '#/components/schemas/MemberArns'
                SubChannelId:
                  $ref: '#/components/schemas/SubChannelId'
      responses:
        '200': {}
        '400':
          description: |-
            The request exceeds the resource limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '404':
          description: |-
            One or more of the resources in the request does not exist in the system.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
  /channels/{ChannelArn}?operation=channel-flow-callback:
    post:
      operationId: ChannelFlowCallback
      description: |-
        Calls back Amazon Chime SDK messaging with a processing response message. This should be invoked from the processor Lambda. This is a developer API.

        You can return one of the following processing responses:

          * Update message content or metadata

          * Deny a message

          * Make no changes to the message
      parameters:
      - name: ChannelArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                CallbackId:
                  $ref: '#/components/schemas/CallbackIdType'
                DeleteResource:
                  $ref: '#/components/schemas/NonNullableBoolean'
                ChannelMessage:
                  $ref: '#/components/schemas/ChannelMessageCallback'
      responses:
        '200': {}
        '400':
          description: |-
            The input parameters don't match the service's restrictions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
  /channels:
    post:
      operationId: CreateChannel
      description: |-
        Creates a channel to which you can add users and send messages.

        **Restriction** : You can't change a channel's privacy.

        The `x-amz-chime-bearer` request header is mandatory. Use the ARN of the `AppInstanceUser` or `AppInstanceBot` that makes the API call as the value in the header.
      parameters:
      - name: x-amz-chime-bearer
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AppInstanceArn:
                  $ref: '#/components/schemas/ChimeArn'
                Name:
                  $ref: '#/components/schemas/NonEmptyResourceName'
                Mode:
                  $ref: '#/components/schemas/ChannelMode'
                Privacy:
                  $ref: '#/components/schemas/ChannelPrivacy'
                Metadata:
                  $ref: '#/components/schemas/Metadata'
                ClientRequestToken:
                  $ref: '#/components/schemas/ClientRequestToken'
                Tags:
                  $ref: '#/components/schemas/TagList'
                ChannelId:
                  $ref: '#/components/schemas/ChannelId'
                MemberArns:
                  $ref: '#/components/schemas/ChannelMemberArns'
                ModeratorArns:
                  $ref: '#/components/schemas/ChannelModeratorArns'
                ElasticChannelConfiguration:
                  $ref: '#/components/schemas/ElasticChannelConfiguration'
                ExpirationSettings:
                  $ref: '#/components/schemas/ExpirationSettings'
      responses:
        '201': {}
        '400':
          description: |-
            The request exceeds the resource limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
    get:
      operationId: ListChannels
      description: |-
        Lists all Channels created under a single Chime App as a paginated list. You can specify filters to narrow results.

        **Functionality & restrictions**

          * Use privacy = `PUBLIC` to retrieve all public channels in the account.

          * Only an `AppInstanceAdmin` can set privacy = `PRIVATE` to list the private channels in an account.

        The `x-amz-chime-bearer` request header is mandatory. Use the ARN of the `AppInstanceUser` or `AppInstanceBot` that makes the API call as the value in the header.
      parameters:
      - name: app-instance-arn
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      - name: privacy
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ChannelPrivacy'
      - name: max-results
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: next-token
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: x-amz-chime-bearer
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      responses:
        '200': {}
        '400':
          description: |-
            The input parameters don't match the service's restrictions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
  /channels/{ChannelArn}/bans:
    post:
      operationId: CreateChannelBan
      description: |-
        Permanently bans a member from a channel. Moderators can't add banned members to a channel. To undo a ban, you first have to `DeleteChannelBan`, and then `CreateChannelMembership`. Bans are cleaned up when you delete users or channels.

        If you ban a user who is already part of a channel, that user is automatically kicked from the channel.

        The `x-amz-chime-bearer` request header is mandatory. Use the ARN of the `AppInstanceUser` or `AppInstanceBot` that makes the API call as the value in the header.
      parameters:
      - name: ChannelArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      - name: x-amz-chime-bearer
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                MemberArn:
                  $ref: '#/components/schemas/ChimeArn'
      responses:
        '201': {}
        '400':
          description: |-
            The request exceeds the resource limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
    get:
      operationId: ListChannelBans
      description: |-
        Lists all the users and bots banned from a particular channel.

        The `x-amz-chime-bearer` request header is mandatory. Use the ARN of the `AppInstanceUser` or `AppInstanceBot` that makes the API call as the value in the header.
      parameters:
      - name: ChannelArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      - name: max-results
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: next-token
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: x-amz-chime-bearer
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      responses:
        '200': {}
        '400':
          description: |-
            The input parameters don't match the service's restrictions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
  /channel-flows:
    post:
      operationId: CreateChannelFlow
      description: |-
        Creates a channel flow, a container for processors. Processors are AWS Lambda functions that perform actions on chat messages, such as stripping out profanity. You can associate channel flows with channels, and the processors in the channel flow then take action on all messages sent to that channel. This is a developer API.

        Channel flows process the following items:

          1. New and updated messages

          2. Persistent and non-persistent messages

          3. The Standard message type

        Channel flows don't process Control or System messages. For more information about the message types provided by Chime SDK messaging, refer to [Message types](https://docs.aws.amazon.com/chime/latest/dg/using-the-messaging-sdk.html#msg-types) in the _Amazon Chime developer guide_.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AppInstanceArn:
                  $ref: '#/components/schemas/ChimeArn'
                Processors:
                  $ref: '#/components/schemas/ProcessorList'
                Name:
                  $ref: '#/components/schemas/NonEmptyResourceName'
                Tags:
                  $ref: '#/components/schemas/TagList'
                ClientRequestToken:
                  $ref: '#/components/schemas/ClientRequestToken'
      responses:
        '201': {}
        '400':
          description: |-
            The request exceeds the resource limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
    get:
      operationId: ListChannelFlows
      description: |-
        Returns a paginated lists of all the channel flows created under a single Chime. This is a developer API.
      parameters:
      - name: app-instance-arn
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      - name: max-results
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: next-token
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '400':
          description: |-
            The input parameters don't match the service's restrictions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
  /channels/{ChannelArn}/memberships:
    post:
      operationId: CreateChannelMembership
      description: |-
        Adds a member to a channel. The `InvitedBy` field in `ChannelMembership` is derived from the request header. A channel member can:

          * List messages

          * Send messages

          * Receive messages

          * Edit their own messages

          * Leave the channel

        Privacy settings impact this action as follows:

          * Public Channels: You do not need to be a member to list messages, but you must be a member to send messages.

          * Private Channels: You must be a member to list or send messages.

        The `x-amz-chime-bearer` request header is mandatory. Use the ARN of the `AppInstanceUserArn` or `AppInstanceBot` that makes the API call as the value in the header.
      parameters:
      - name: ChannelArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      - name: x-amz-chime-bearer
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                MemberArn:
                  $ref: '#/components/schemas/ChimeArn'
                Type:
                  $ref: '#/components/schemas/ChannelMembershipType'
                SubChannelId:
                  $ref: '#/components/schemas/SubChannelId'
      responses:
        '201': {}
        '400':
          description: |-
            The request exceeds the resource limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '404':
          description: |-
            One or more of the resources in the request does not exist in the system.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
    get:
      operationId: ListChannelMemberships
      description: |-
        Lists all channel memberships in a channel.

        The `x-amz-chime-bearer` request header is mandatory. Use the ARN of the `AppInstanceUser` or `AppInstanceBot` that makes the API call as the value in the header.

        If you want to list the channels to which a specific app instance user belongs, see the [ListChannelMembershipsForAppInstanceUser](https://docs.aws.amazon.com/chime/latest/APIReference/API_messaging-chime_ListChannelMembershipsForAppInstanceUser.html) API.
      parameters:
      - name: ChannelArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      - name: type
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ChannelMembershipType'
      - name: max-results
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: next-token
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: x-amz-chime-bearer
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      - name: sub-channel-id
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/SubChannelId'
      responses:
        '200': {}
        '400':
          description: |-
            The input parameters don't match the service's restrictions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
  /channels/{ChannelArn}/moderators:
    post:
      operationId: CreateChannelModerator
      description: |-
        Creates a new `ChannelModerator`. A channel moderator can:

          * Add and remove other members of the channel.

          * Add and remove other moderators of the channel.

          * Add and remove user bans for the channel.

          * Redact messages in the channel.

          * List messages in the channel.

        The `x-amz-chime-bearer` request header is mandatory. Use the ARN of the `AppInstanceUser` or `AppInstanceBot`of the user that makes the API call as the value in the header.
      parameters:
      - name: ChannelArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      - name: x-amz-chime-bearer
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ChannelModeratorArn:
                  $ref: '#/components/schemas/ChimeArn'
      responses:
        '201': {}
        '400':
          description: |-
            The request exceeds the resource limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
    get:
      operationId: ListChannelModerators
      description: |-
        Lists all the moderators for a channel.

        The `x-amz-chime-bearer` request header is mandatory. Use the ARN of the `AppInstanceUser` or `AppInstanceBot` that makes the API call as the value in the header.
      parameters:
      - name: ChannelArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      - name: max-results
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: next-token
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: x-amz-chime-bearer
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      responses:
        '200': {}
        '400':
          description: |-
            The input parameters don't match the service's restrictions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
  /channels/{ChannelArn}:
    delete:
      operationId: DeleteChannel
      description: |-
        Immediately makes a channel and its memberships inaccessible and marks them for deletion. This is an irreversible process.

        The `x-amz-chime-bearer` request header is mandatory. Use the ARN of the `AppInstanceUserArn` or `AppInstanceBot` that makes the API call as the value in the header.
      parameters:
      - name: ChannelArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      - name: x-amz-chime-bearer
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      responses:
        '204': {}
        '400':
          description: |-
            The input parameters don't match the service's restrictions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
    get:
      operationId: DescribeChannel
      description: |-
        Returns the full details of a channel in an Amazon Chime `AppInstance`.

        The `x-amz-chime-bearer` request header is mandatory. Use the ARN of the `AppInstanceUser` or `AppInstanceBot` that makes the API call as the value in the header.
      parameters:
      - name: ChannelArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      - name: x-amz-chime-bearer
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      responses:
        '200': {}
        '400':
          description: |-
            The input parameters don't match the service's restrictions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
    put:
      operationId: UpdateChannel
      description: |-
        Update a channel's attributes.

        **Restriction** : You can't change a channel's privacy.

        The `x-amz-chime-bearer` request header is mandatory. Use the ARN of the `AppInstanceUser` or `AppInstanceBot` that makes the API call as the value in the header.
      parameters:
      - name: ChannelArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      - name: x-amz-chime-bearer
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  $ref: '#/components/schemas/NonEmptyResourceName'
                Mode:
                  $ref: '#/components/schemas/ChannelMode'
                Metadata:
                  $ref: '#/components/schemas/Metadata'
      responses:
        '200': {}
        '400':
          description: |-
            The input parameters don't match the service's restrictions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
  /channels/{ChannelArn}/bans/{MemberArn}:
    delete:
      operationId: DeleteChannelBan
      description: |-
        Removes a member from a channel's ban list.

        The `x-amz-chime-bearer` request header is mandatory. Use the ARN of the `AppInstanceUser` or `AppInstanceBot` that makes the API call as the value in the header.
      parameters:
      - name: ChannelArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      - name: MemberArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      - name: x-amz-chime-bearer
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      responses:
        '204': {}
        '400':
          description: |-
            The input parameters don't match the service's restrictions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
    get:
      operationId: DescribeChannelBan
      description: |-
        Returns the full details of a channel ban.

        The `x-amz-chime-bearer` request header is mandatory. Use the ARN of the `AppInstanceUser` or `AppInstanceBot` that makes the API call as the value in the header.
      parameters:
      - name: ChannelArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      - name: MemberArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      - name: x-amz-chime-bearer
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      responses:
        '200': {}
        '400':
          description: |-
            The input parameters don't match the service's restrictions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '404':
          description: |-
            One or more of the resources in the request does not exist in the system.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
  /channel-flows/{ChannelFlowArn}:
    delete:
      operationId: DeleteChannelFlow
      description: |-
        Deletes a channel flow, an irreversible process. This is a developer API.

        This API works only when the channel flow is not associated with any channel. To get a list of all channels that a channel flow is associated with, use the `ListChannelsAssociatedWithChannelFlow` API. Use the `DisassociateChannelFlow` API to disassociate a channel flow from all channels.
      parameters:
      - name: ChannelFlowArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      responses:
        '204': {}
        '400':
          description: |-
            The input parameters don't match the service's restrictions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
    get:
      operationId: DescribeChannelFlow
      description: |-
        Returns the full details of a channel flow in an Amazon Chime `AppInstance`. This is a developer API.
      parameters:
      - name: ChannelFlowArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      responses:
        '200': {}
        '400':
          description: |-
            The input parameters don't match the service's restrictions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
    put:
      operationId: UpdateChannelFlow
      description: |-
        Updates channel flow attributes. This is a developer API.
      parameters:
      - name: ChannelFlowArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Processors:
                  $ref: '#/components/schemas/ProcessorList'
                Name:
                  $ref: '#/components/schemas/NonEmptyResourceName'
      responses:
        '200': {}
        '400':
          description: |-
            The input parameters don't match the service's restrictions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
  /channels/{ChannelArn}/memberships/{MemberArn}:
    delete:
      operationId: DeleteChannelMembership
      description: |-
        Removes a member from a channel.

        The `x-amz-chime-bearer` request header is mandatory. Use the `AppInstanceUserArn` of the user that makes the API call as the value in the header.
      parameters:
      - name: ChannelArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      - name: MemberArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      - name: x-amz-chime-bearer
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      - name: sub-channel-id
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/SubChannelId'
      responses:
        '204': {}
        '400':
          description: |-
            The input parameters don't match the service's restrictions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
    get:
      operationId: DescribeChannelMembership
      description: |-
        Returns the full details of a user's channel membership.

        The `x-amz-chime-bearer` request header is mandatory. Use the ARN of the `AppInstanceUser` or `AppInstanceBot` that makes the API call as the value in the header.
      parameters:
      - name: ChannelArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      - name: MemberArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      - name: x-amz-chime-bearer
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      - name: sub-channel-id
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/SubChannelId'
      responses:
        '200': {}
        '400':
          description: |-
            The input parameters don't match the service's restrictions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '404':
          description: |-
            One or more of the resources in the request does not exist in the system.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
  /channels/{ChannelArn}/messages/{MessageId}:
    delete:
      operationId: DeleteChannelMessage
      description: |-
        Deletes a channel message. Only admins can perform this action. Deletion makes messages inaccessible immediately. A background process deletes any revisions created by `UpdateChannelMessage`.

        The `x-amz-chime-bearer` request header is mandatory. Use the ARN of the `AppInstanceUser` or `AppInstanceBot` that makes the API call as the value in the header.
      parameters:
      - name: ChannelArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      - name: MessageId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MessageId'
      - name: x-amz-chime-bearer
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      - name: sub-channel-id
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/SubChannelId'
      responses:
        '204': {}
        '400':
          description: |-
            The input parameters don't match the service's restrictions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
    get:
      operationId: GetChannelMessage
      description: |-
        Gets the full details of a channel message.

        The `x-amz-chime-bearer` request header is mandatory. Use the ARN of the `AppInstanceUser` or `AppInstanceBot` that makes the API call as the value in the header.
      parameters:
      - name: ChannelArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      - name: MessageId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MessageId'
      - name: x-amz-chime-bearer
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      - name: sub-channel-id
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/SubChannelId'
      responses:
        '200': {}
        '400':
          description: |-
            The input parameters don't match the service's restrictions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '404':
          description: |-
            One or more of the resources in the request does not exist in the system.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
    put:
      operationId: UpdateChannelMessage
      description: |-
        Updates the content of a message.

        The `x-amz-chime-bearer` request header is mandatory. Use the ARN of the `AppInstanceUser` or `AppInstanceBot` that makes the API call as the value in the header.
      parameters:
      - name: ChannelArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      - name: MessageId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MessageId'
      - name: x-amz-chime-bearer
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Content:
                  $ref: '#/components/schemas/NonEmptyContent'
                Metadata:
                  $ref: '#/components/schemas/Metadata'
                SubChannelId:
                  $ref: '#/components/schemas/SubChannelId'
                ContentType:
                  $ref: '#/components/schemas/ContentType'
      responses:
        '200': {}
        '400':
          description: |-
            The input parameters don't match the service's restrictions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
  /channels/{ChannelArn}/moderators/{ChannelModeratorArn}:
    delete:
      operationId: DeleteChannelModerator
      description: |-
        Deletes a channel moderator.

        The `x-amz-chime-bearer` request header is mandatory. Use the ARN of the `AppInstanceUser` or `AppInstanceBot` that makes the API call as the value in the header.
      parameters:
      - name: ChannelArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      - name: ChannelModeratorArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      - name: x-amz-chime-bearer
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      responses:
        '204': {}
        '400':
          description: |-
            The input parameters don't match the service's restrictions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
    get:
      operationId: DescribeChannelModerator
      description: |-
        Returns the full details of a single ChannelModerator.

        The `x-amz-chime-bearer` request header is mandatory. Use the `AppInstanceUserArn` of the user that makes the API call as the value in the header.
      parameters:
      - name: ChannelArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      - name: ChannelModeratorArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      - name: x-amz-chime-bearer
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      responses:
        '200': {}
        '400':
          description: |-
            The input parameters don't match the service's restrictions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '404':
          description: |-
            One or more of the resources in the request does not exist in the system.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
  /app-instances/{AppInstanceArn}/streaming-configurations:
    delete:
      operationId: DeleteMessagingStreamingConfigurations
      description: |-
        Deletes the streaming configurations for an `AppInstance`. For more information, see [Streaming messaging data](https://docs.aws.amazon.com/chime-sdk/latest/dg/streaming-export.html) in the _Amazon Chime SDK Developer Guide_.
      parameters:
      - name: AppInstanceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      responses:
        '204': {}
        '400':
          description: |-
            The input parameters don't match the service's restrictions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
    get:
      operationId: GetMessagingStreamingConfigurations
      description: |-
        Retrieves the data streaming configuration for an `AppInstance`. For more information, see [Streaming messaging data](https://docs.aws.amazon.com/chime-sdk/latest/dg/streaming-export.html) in the _Amazon Chime SDK Developer Guide_.
      parameters:
      - name: AppInstanceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      responses:
        '200': {}
        '400':
          description: |-
            The input parameters don't match the service's restrictions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '404':
          description: |-
            One or more of the resources in the request does not exist in the system.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
    put:
      operationId: PutMessagingStreamingConfigurations
      description: |-
        Sets the data streaming configuration for an `AppInstance`. For more information, see [Streaming messaging data](https://docs.aws.amazon.com/chime-sdk/latest/dg/streaming-export.html) in the _Amazon Chime SDK Developer Guide_.
      parameters:
      - name: AppInstanceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                StreamingConfigurations:
                  $ref: '#/components/schemas/StreamingConfigurationList'
      responses:
        '200': {}
        '400':
          description: |-
            The input parameters don't match the service's restrictions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '404':
          description: |-
            One or more of the resources in the request does not exist in the system.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
  /channels/{ChannelArn}?scope=app-instance-user-membership:
    get:
      operationId: DescribeChannelMembershipForAppInstanceUser
      description: |-
        Returns the details of a channel based on the membership of the specified `AppInstanceUser` or `AppInstanceBot`.

        The `x-amz-chime-bearer` request header is mandatory. Use the ARN of the `AppInstanceUser` or `AppInstanceBot` that makes the API call as the value in the header.
      parameters:
      - name: ChannelArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      - name: app-instance-user-arn
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      - name: x-amz-chime-bearer
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      responses:
        '200': {}
        '400':
          description: |-
            The input parameters don't match the service's restrictions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
  /channels/{ChannelArn}?scope=app-instance-user-moderated-channel:
    get:
      operationId: DescribeChannelModeratedByAppInstanceUser
      description: |-
        Returns the full details of a channel moderated by the specified `AppInstanceUser` or `AppInstanceBot`.

        The `x-amz-chime-bearer` request header is mandatory. Use the ARN of the `AppInstanceUser` or `AppInstanceBot` that makes the API call as the value in the header.
      parameters:
      - name: ChannelArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      - name: app-instance-user-arn
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      - name: x-amz-chime-bearer
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      responses:
        '200': {}
        '400':
          description: |-
            The input parameters don't match the service's restrictions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
  /channels/{ChannelArn}/channel-flow/{ChannelFlowArn}:
    delete:
      operationId: DisassociateChannelFlow
      description: |-
        Disassociates a channel flow from all its channels. Once disassociated, all messages to that channel stop going through the channel flow processor.

        Only administrators or channel moderators can disassociate a channel flow.

        The `x-amz-chime-bearer` request header is mandatory. Use the ARN of the `AppInstanceUser` or `AppInstanceBot` that makes the API call as the value in the header.
      parameters:
      - name: ChannelArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      - name: ChannelFlowArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      - name: x-amz-chime-bearer
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      responses:
        '204': {}
        '400':
          description: |-
            The input parameters don't match the service's restrictions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '404':
          description: |-
            One or more of the resources in the request does not exist in the system.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
  /channels/{ChannelArn}/memberships/{MemberArn}/preferences:
    get:
      operationId: GetChannelMembershipPreferences
      description: |-
        Gets the membership preferences of an `AppInstanceUser` or `AppInstanceBot` for the specified channel. A user or a bot must be a member of the channel and own the membership in order to retrieve membership preferences. Users or bots in the `AppInstanceAdmin` and channel moderator roles can't retrieve preferences for other users or bots. Banned users or bots can't retrieve membership preferences for the channel from which they are banned.

        The `x-amz-chime-bearer` request header is mandatory. Use the ARN of the `AppInstanceUser` or `AppInstanceBot` that makes the API call as the value in the header.
      parameters:
      - name: ChannelArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      - name: MemberArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      - name: x-amz-chime-bearer
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      responses:
        '200': {}
        '400':
          description: |-
            The input parameters don't match the service's restrictions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
    put:
      operationId: PutChannelMembershipPreferences
      description: |-
        Sets the membership preferences of an `AppInstanceUser` or `AppInstanceBot` for the specified channel. The user or bot must be a member of the channel. Only the user or bot who owns the membership can set preferences. Users or bots in the `AppInstanceAdmin` and channel moderator roles can't set preferences for other users. Banned users or bots can't set membership preferences for the channel from which they are banned.

        The x-amz-chime-bearer request header is mandatory. Use the ARN of an `AppInstanceUser` or `AppInstanceBot` that makes the API call as the value in the header.
      parameters:
      - name: ChannelArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      - name: MemberArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      - name: x-amz-chime-bearer
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Preferences:
                  $ref: '#/components/schemas/ChannelMembershipPreferences'
      responses:
        '200': {}
        '400':
          description: |-
            The input parameters don't match the service's restrictions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
  /channels/{ChannelArn}/messages/{MessageId}?scope=message-status:
    get:
      operationId: GetChannelMessageStatus
      description: "Gets message status for a specified `messageId`. Use this API\
        \ to determine the intermediate status of messages going through channel flow\
        \ processing. The API provides an alternative to retrieving message status\
        \ if the event was not received because a client wasn't connected to a websocket.\n\
        \nMessages can have any one of these statuses.\n\nSENT\n\n    \n\nMessage\
        \ processed successfully\n\nPENDING\n\n    \n\nOngoing processing\n\nFAILED\n\
        \n    \n\nProcessing failed\n\nDENIED\n\n    \n\nMessage denied by the processor\n\
        \n  * This API does not return statuses for denied messages, because we don't\
        \ store them once the processor denies them. \n\n  * Only the message sender\
        \ can invoke this API.\n\n  * The `x-amz-chime-bearer` request header is mandatory.\
        \ Use the ARN of the `AppInstanceUser` or `AppInstanceBot` that makes the\
        \ API call as the value in the header."
      parameters:
      - name: ChannelArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      - name: MessageId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MessageId'
      - name: x-amz-chime-bearer
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      - name: sub-channel-id
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/SubChannelId'
      responses:
        '200': {}
        '400':
          description: |-
            The input parameters don't match the service's restrictions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
  /endpoints/messaging-session:
    get:
      operationId: GetMessagingSessionEndpoint
      description: |-
        The details of the endpoint for the messaging session.
      parameters: []
      responses:
        '200': {}
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
  /channels?scope=app-instance-user-memberships:
    get:
      operationId: ListChannelMembershipsForAppInstanceUser
      description: |-
        Lists all channels that an `AppInstanceUser` or `AppInstanceBot` is a part of. Only an `AppInstanceAdmin` can call the API with a user ARN that is not their own.

        The `x-amz-chime-bearer` request header is mandatory. Use the ARN of the `AppInstanceUser` or `AppInstanceBot` that makes the API call as the value in the header.
      parameters:
      - name: app-instance-user-arn
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ChimeArn'
      - name: max-results
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: next-token
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: x-amz-chime-bearer
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      responses:
        '200': {}
        '400':
          description: |-
            The input parameters don't match the service's restrictions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
  /channels/{ChannelArn}/messages:
    get:
      operationId: ListChannelMessages
      description: |-
        List all the messages in a channel. Returns a paginated list of `ChannelMessages`. By default, sorted by creation timestamp in descending order.

        Redacted messages appear in the results as empty, since they are only redacted, not deleted. Deleted messages do not appear in the results. This action always returns the latest version of an edited message.

        Also, the `x-amz-chime-bearer` request header is mandatory. Use the ARN of the `AppInstanceUser` or `AppInstanceBot` that makes the API call as the value in the header.
      parameters:
      - name: ChannelArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      - name: sort-order
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/SortOrder'
      - name: not-before
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Timestamp'
      - name: not-after
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Timestamp'
      - name: max-results
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: next-token
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: x-amz-chime-bearer
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      - name: sub-channel-id
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/SubChannelId'
      responses:
        '200': {}
        '400':
          description: |-
            The input parameters don't match the service's restrictions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
    post:
      operationId: SendChannelMessage
      description: |-
        Sends a message to a particular channel that the member is a part of.

        The `x-amz-chime-bearer` request header is mandatory. Use the ARN of the `AppInstanceUser` or `AppInstanceBot` that makes the API call as the value in the header.

        Also, `STANDARD` messages can be up to 4KB in size and contain metadata. Metadata is arbitrary, and you can use it in a variety of ways, such as containing a link to an attachment.

        `CONTROL` messages are limited to 30 bytes and do not contain metadata.
      parameters:
      - name: ChannelArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      - name: x-amz-chime-bearer
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Content:
                  $ref: '#/components/schemas/NonEmptyContent'
                Type:
                  $ref: '#/components/schemas/ChannelMessageType'
                Persistence:
                  $ref: '#/components/schemas/ChannelMessagePersistenceType'
                Metadata:
                  $ref: '#/components/schemas/Metadata'
                ClientRequestToken:
                  $ref: '#/components/schemas/ClientRequestToken'
                PushNotification:
                  $ref: '#/components/schemas/PushNotificationConfiguration'
                MessageAttributes:
                  $ref: '#/components/schemas/MessageAttributeMap'
                SubChannelId:
                  $ref: '#/components/schemas/SubChannelId'
                ContentType:
                  $ref: '#/components/schemas/ContentType'
                Target:
                  $ref: '#/components/schemas/TargetList'
      responses:
        '201': {}
        '400':
          description: |-
            The input parameters don't match the service's restrictions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
  /channels?scope=channel-flow-associations:
    get:
      operationId: ListChannelsAssociatedWithChannelFlow
      description: |-
        Lists all channels associated with a specified channel flow. You can associate a channel flow with multiple channels, but you can only associate a channel with one channel flow. This is a developer API.
      parameters:
      - name: channel-flow-arn
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      - name: max-results
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: next-token
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '400':
          description: |-
            The input parameters don't match the service's restrictions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
  /channels?scope=app-instance-user-moderated-channels:
    get:
      operationId: ListChannelsModeratedByAppInstanceUser
      description: |-
        A list of the channels moderated by an `AppInstanceUser`.

        The `x-amz-chime-bearer` request header is mandatory. Use the ARN of the `AppInstanceUser` or `AppInstanceBot` that makes the API call as the value in the header.
      parameters:
      - name: app-instance-user-arn
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ChimeArn'
      - name: max-results
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: next-token
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: x-amz-chime-bearer
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      responses:
        '200': {}
        '400':
          description: |-
            The input parameters don't match the service's restrictions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
  /channels/{ChannelArn}/subchannels:
    get:
      operationId: ListSubChannels
      description: |-
        Lists all the SubChannels in an elastic channel when given a channel ID. Available only to the app instance admins and channel moderators of elastic channels.
      parameters:
      - name: ChannelArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      - name: x-amz-chime-bearer
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      - name: max-results
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: next-token
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '400':
          description: |-
            The input parameters don't match the service's restrictions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
  /tags:
    get:
      operationId: ListTagsForResource
      description: |-
        Lists the tags applied to an Amazon Chime SDK messaging resource.
      parameters:
      - name: arn
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      responses:
        '200': {}
        '400':
          description: |-
            The input parameters don't match the service's restrictions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
  /channels/{ChannelArn}/expiration-settings:
    put:
      operationId: PutChannelExpirationSettings
      description: |-
        Sets the number of days before the channel is automatically deleted.

          * A background process deletes expired channels within 6 hours of expiration. Actual deletion times may vary.

          * Expired channels that have not yet been deleted appear as active, and you can update their expiration settings. The system honors the new settings.

          * The `x-amz-chime-bearer` request header is mandatory. Use the ARN of the `AppInstanceUser` or `AppInstanceBot` that makes the API call as the value in the header.
      parameters:
      - name: ChannelArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      - name: x-amz-chime-bearer
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/ChimeArn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ExpirationSettings:
                  $ref: '#/components/schemas/ExpirationSettings'
      responses:
        '200': {}
        '400':
          description: |-
            The input parameters don't match the service's restrictions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
  /channels/{ChannelArn}/messages/{MessageId}?operation=redact:
    post:
      operationId: RedactChannelMessage
      description: |-
        Redacts message content, but not metadata. The message exists in the back end, but the action returns null content, and the state shows as redacted.

        The `x-amz-chime-bearer` request header is mandatory. Use the ARN of the `AppInstanceUser` or `AppInstanceBot` that makes the API call as the value in the header.
      parameters:
      - name: ChannelArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      - name: MessageId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MessageId'
      - name: x-amz-chime-bearer
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                SubChannelId:
                  $ref: '#/components/schemas/SubChannelId'
      responses:
        '200': {}
        '400':
          description: |-
            The input parameters don't match the service's restrictions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
  /channels?operation=search:
    post:
      operationId: SearchChannels
      description: |-
        Allows the `ChimeBearer` to search channels by channel members. Users or bots can search across the channels that they belong to. Users in the `AppInstanceAdmin` role can search across all channels.

        The `x-amz-chime-bearer` request header is mandatory. Use the ARN of the `AppInstanceUser` or `AppInstanceBot` that makes the API call as the value in the header.
      parameters:
      - name: x-amz-chime-bearer
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/ChimeArn'
      - name: max-results
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: next-token
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Fields:
                  $ref: '#/components/schemas/SearchFields'
      responses:
        '200': {}
        '400':
          description: |-
            The input parameters don't match the service's restrictions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
  /tags?operation=tag-resource:
    post:
      operationId: TagResource
      description: |-
        Applies the specified tags to the specified Amazon Chime SDK messaging resource.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ResourceARN:
                  $ref: '#/components/schemas/ChimeArn'
                Tags:
                  $ref: '#/components/schemas/TagList'
      responses:
        '204': {}
        '400':
          description: |-
            The request exceeds the resource limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
  /tags?operation=untag-resource:
    post:
      operationId: UntagResource
      description: |-
        Removes the specified tags from the specified Amazon Chime SDK messaging resource.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ResourceARN:
                  $ref: '#/components/schemas/ChimeArn'
                TagKeys:
                  $ref: '#/components/schemas/TagKeyList'
      responses:
        '204': {}
        '400':
          description: |-
            The input parameters don't match the service's restrictions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
  /channels/{ChannelArn}/readMarker:
    put:
      operationId: UpdateChannelReadMarker
      description: |-
        The details of the time when a user last read messages in a channel.

        The `x-amz-chime-bearer` request header is mandatory. Use the ARN of the `AppInstanceUser` or `AppInstanceBot` that makes the API call as the value in the header.
      parameters:
      - name: ChannelArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      - name: x-amz-chime-bearer
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      responses:
        '200': {}
        '400':
          description: |-
            The input parameters don't match the service's restrictions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
components:
  schemas:
    AllowNotifications:
      type: string
      enum:
      - ALL
      - NONE
      - FILTERED
    AppInstanceUserMembershipSummary:
      type: object
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/ChannelMembershipType'
          description: The type of `ChannelMembership`.
        ReadMarkerTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which an `AppInstanceUser` last marked a channel
            as read.
        SubChannelId:
          allOf:
          - $ref: '#/components/schemas/SubChannelId'
          description: The ID of the SubChannel that the `AppInstanceUser` is a member
            of.
      description: Summary of the membership details of an `AppInstanceUser`.
    AssociateChannelFlowRequest:
      type: object
      properties:
        ChannelArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the channel.
        ChannelFlowArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the channel flow.
        ChimeBearer:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The `AppInstanceUserArn` of the user making the API call.
      required:
      - ChannelArn
      - ChannelFlowArn
      - ChimeBearer
    BadRequestException:
      type: object
      properties:
        Code:
          $ref: '#/components/schemas/ErrorCode'
        Message:
          $ref: '#/components/schemas/String'
      description: The input parameters don't match the service's restrictions.
    BatchChannelMemberships:
      type: object
      properties:
        InvitedBy:
          allOf:
          - $ref: '#/components/schemas/Identity'
          description: The identifier of the member who invited another member.
        Type:
          allOf:
          - $ref: '#/components/schemas/ChannelMembershipType'
          description: The membership types set for the channel members.
        Members:
          allOf:
          - $ref: '#/components/schemas/Members'
          description: The users successfully added to the request.
        ChannelArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the channel to which you're adding members.
        SubChannelId:
          allOf:
          - $ref: '#/components/schemas/SubChannelId'
          description: The ID of the SubChannel.
      description: The membership information, including member ARNs, the channel
        ARN, and membership types.
    BatchCreateChannelMembershipError:
      type: object
      properties:
        MemberArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The `AppInstanceUserArn` of the member that the service couldn't
            add.
        ErrorCode:
          allOf:
          - $ref: '#/components/schemas/ErrorCode'
          description: The error code.
        ErrorMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The error message.
      description: A list of failed member ARNs, error codes, and error messages.
    BatchCreateChannelMembershipErrors:
      type: array
      items:
        $ref: '#/components/schemas/BatchCreateChannelMembershipError'
    BatchCreateChannelMembershipRequest:
      type: object
      properties:
        ChannelArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the channel to which you're adding users or bots.
        Type:
          allOf:
          - $ref: '#/components/schemas/ChannelMembershipType'
          description: The membership type of a user, `DEFAULT` or `HIDDEN`. Default
            members are always returned as part of `ListChannelMemberships`. Hidden
            members are only returned if the type filter in `ListChannelMemberships`
            equals `HIDDEN`. Otherwise hidden members are not returned. This is only
            supported by moderators.
        MemberArns:
          allOf:
          - $ref: '#/components/schemas/MemberArns'
          description: The ARNs of the members you want to add to the channel. Only
            `AppInstanceUsers` and `AppInstanceBots` can be added as a channel member.
        ChimeBearer:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the `AppInstanceUser` or `AppInstanceBot` that makes
            the API call.
        SubChannelId:
          allOf:
          - $ref: '#/components/schemas/SubChannelId'
          description: 'The ID of the SubChannel in the request.


            Only required when creating membership in a SubChannel for a moderator
            in an elastic channel.'
      required:
      - ChannelArn
      - MemberArns
      - ChimeBearer
    BatchCreateChannelMembershipResponse:
      type: object
      properties:
        BatchChannelMemberships:
          allOf:
          - $ref: '#/components/schemas/BatchChannelMemberships'
          description: The list of channel memberships in the response.
        Errors:
          allOf:
          - $ref: '#/components/schemas/BatchCreateChannelMembershipErrors'
          description: If the action fails for one or more of the memberships in the
            request, a list of the memberships is returned, along with error codes
            and error messages.
    CallbackIdType:
      type: string
      minLength: 32
      maxLength: 64
    Channel:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyResourceName'
          description: The name of a channel.
        ChannelArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of a channel.
        Mode:
          allOf:
          - $ref: '#/components/schemas/ChannelMode'
          description: The mode of the channel.
        Privacy:
          allOf:
          - $ref: '#/components/schemas/ChannelPrivacy'
          description: The channel's privacy setting.
        Metadata:
          allOf:
          - $ref: '#/components/schemas/Metadata'
          description: The channel's metadata.
        CreatedBy:
          allOf:
          - $ref: '#/components/schemas/Identity'
          description: The `AppInstanceUser` who created the channel.
        CreatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the `AppInstanceUser` created the channel.
        LastMessageTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which a member sent the last message in the channel.
        LastUpdatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which a channel was last updated.
        ChannelFlowArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the channel flow.
        ElasticChannelConfiguration:
          allOf:
          - $ref: '#/components/schemas/ElasticChannelConfiguration'
          description: The attributes required to configure and create an elastic
            channel. An elastic channel can support a maximum of 1-million members.
        ExpirationSettings:
          allOf:
          - $ref: '#/components/schemas/ExpirationSettings'
          description: Settings that control when a channel expires.
      description: The details of a channel.
    ChannelAssociatedWithFlowSummary:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyResourceName'
          description: The name of the channel flow.
        ChannelArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the channel.
        Mode:
          allOf:
          - $ref: '#/components/schemas/ChannelMode'
          description: The mode of the channel.
        Privacy:
          allOf:
          - $ref: '#/components/schemas/ChannelPrivacy'
          description: The channel's privacy setting.
        Metadata:
          allOf:
          - $ref: '#/components/schemas/Metadata'
          description: The channel's metadata.
      description: Summary of details of a channel associated with channel flow.
    ChannelAssociatedWithFlowSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/ChannelAssociatedWithFlowSummary'
    ChannelBan:
      type: object
      properties:
        Member:
          allOf:
          - $ref: '#/components/schemas/Identity'
          description: The member being banned from the channel.
        ChannelArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the channel from which a member is being banned.
        CreatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the ban was created.
        CreatedBy:
          allOf:
          - $ref: '#/components/schemas/Identity'
          description: The `AppInstanceUser` who created the ban.
      description: The details of a channel ban.
    ChannelBanSummary:
      type: object
      properties:
        Member:
          allOf:
          - $ref: '#/components/schemas/Identity'
          description: The member being banned from a channel.
      description: Summary of the details of a `ChannelBan`.
    ChannelBanSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/ChannelBanSummary'
    ChannelFlow:
      type: object
      properties:
        ChannelFlowArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the channel flow.
        Processors:
          allOf:
          - $ref: '#/components/schemas/ProcessorList'
          description: Information about the processor Lambda functions.
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyResourceName'
          description: The name of the channel flow.
        CreatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the channel flow was created.
        LastUpdatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which a channel flow was updated.
      description: The details of a channel flow.
    ChannelFlowCallbackRequest:
      type: object
      properties:
        CallbackId:
          allOf:
          - $ref: '#/components/schemas/CallbackIdType'
          description: The identifier passed to the processor by the service when
            invoked. Use the identifier to call back the service.
        ChannelArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the channel.
        DeleteResource:
          allOf:
          - $ref: '#/components/schemas/NonNullableBoolean'
          description: When a processor determines that a message needs to be `DENIED`,
            pass this parameter with a value of true.
        ChannelMessage:
          allOf:
          - $ref: '#/components/schemas/ChannelMessageCallback'
          description: Stores information about the processed message.
      required:
      - CallbackId
      - ChannelArn
      - ChannelMessage
    ChannelFlowCallbackResponse:
      type: object
      properties:
        ChannelArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the channel.
        CallbackId:
          allOf:
          - $ref: '#/components/schemas/CallbackIdType'
          description: The call back ID passed in the request.
    ChannelFlowExecutionOrder:
      type: integer
      minimum: 1
      maximum: 3
    ChannelFlowSummary:
      type: object
      properties:
        ChannelFlowArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the channel flow.
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyResourceName'
          description: The name of the channel flow.
        Processors:
          allOf:
          - $ref: '#/components/schemas/ProcessorList'
          description: Information about the processor Lambda functions.
      description: Summary of details of a channel flow.
    ChannelFlowSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/ChannelFlowSummary'
    ChannelId:
      type: string
      pattern: ^[A-Za-z0-9]([A-Za-z0-9\:\-\_\.\@]{0,62}[A-Za-z0-9])?$
      minLength: 1
      maxLength: 64
    ChannelMemberArns:
      type: array
      items:
        $ref: '#/components/schemas/ChimeArn'
    ChannelMembership:
      type: object
      properties:
        InvitedBy:
          allOf:
          - $ref: '#/components/schemas/Identity'
          description: The identifier of the member who invited another member.
        Type:
          allOf:
          - $ref: '#/components/schemas/ChannelMembershipType'
          description: The membership type set for the channel member.
        Member:
          allOf:
          - $ref: '#/components/schemas/Identity'
          description: The data of the channel member.
        ChannelArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the member's channel.
        CreatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the channel membership was created.
        LastUpdatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which a channel membership was last updated.
        SubChannelId:
          allOf:
          - $ref: '#/components/schemas/SubChannelId'
          description: The ID of the SubChannel that a user belongs to.
      description: The details of a channel member.
    ChannelMembershipForAppInstanceUserSummary:
      type: object
      properties:
        ChannelSummary:
          allOf:
          - $ref: '#/components/schemas/ChannelSummary'
          description: Returns the channel data for an `AppInstance`.
        AppInstanceUserMembershipSummary:
          allOf:
          - $ref: '#/components/schemas/AppInstanceUserMembershipSummary'
          description: Returns the channel membership data for an `AppInstance`.
      description: Summary of the channel membership details of an `AppInstanceUser`.
    ChannelMembershipForAppInstanceUserSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/ChannelMembershipForAppInstanceUserSummary'
    ChannelMembershipPreferences:
      type: object
      properties:
        PushNotifications:
          allOf:
          - $ref: '#/components/schemas/PushNotificationPreferences'
          description: The push notification configuration of a message.
      description: The channel membership preferences for an `AppInstanceUser`.
    ChannelMembershipSummary:
      type: object
      properties:
        Member:
          allOf:
          - $ref: '#/components/schemas/Identity'
          description: A member's summary data.
      description: Summary of the details of a `ChannelMembership`.
    ChannelMembershipSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/ChannelMembershipSummary'
    ChannelMembershipType:
      type: string
      enum:
      - DEFAULT
      - HIDDEN
    ChannelMessage:
      type: object
      properties:
        ChannelArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the channel.
        MessageId:
          allOf:
          - $ref: '#/components/schemas/MessageId'
          description: The ID of a message.
        Content:
          allOf:
          - $ref: '#/components/schemas/Content'
          description: The content of the channel message. For Amazon Lex V2 bot responses,
            this field holds a list of messages originating from the bot. For more
            information, refer to [Processing responses from an AppInstanceBot](https://docs.aws.amazon.com/chime-sdk/latest/dg/appinstance-bots#process-response.html)
            in the _Amazon Chime SDK Messaging Developer Guide_.
        Metadata:
          allOf:
          - $ref: '#/components/schemas/Metadata'
          description: The message metadata.
        Type:
          allOf:
          - $ref: '#/components/schemas/ChannelMessageType'
          description: The message type.
        CreatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the message was created.
        LastEditedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which a message was edited.
        LastUpdatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which a message was updated.
        Sender:
          allOf:
          - $ref: '#/components/schemas/Identity'
          description: The message sender.
        Redacted:
          allOf:
          - $ref: '#/components/schemas/NonNullableBoolean'
          description: Hides the content of a message.
        Persistence:
          allOf:
          - $ref: '#/components/schemas/ChannelMessagePersistenceType'
          description: The persistence setting for a channel message.
        Status:
          allOf:
          - $ref: '#/components/schemas/ChannelMessageStatusStructure'
          description: The status of the channel message.
        MessageAttributes:
          allOf:
          - $ref: '#/components/schemas/MessageAttributeMap'
          description: The attributes for the channel message. For Amazon Lex V2 bot
            responses, the attributes are mapped to specific fields from the bot.
            For more information, refer to [Processing responses from an AppInstanceBot](https://docs.aws.amazon.com/chime-sdk/latest/dg/appinstance-bots#process-response.html)
            in the _Amazon Chime SDK Messaging Developer Guide_.
        SubChannelId:
          allOf:
          - $ref: '#/components/schemas/SubChannelId'
          description: The ID of the SubChannel.
        ContentType:
          allOf:
          - $ref: '#/components/schemas/ContentType'
          description: The content type of the channel message. For Amazon Lex V2
            bot responses, the content type is `application/amz-chime-lex-msgs` for
            success responses and `application/amz-chime-lex-error` for failure responses.
            For more information, refer to [Processing responses from an AppInstanceBot](https://docs.aws.amazon.com/chime-sdk/latest/dg/appinstance-bots#process-response.html)
            in the _Amazon Chime SDK Messaging Developer Guide_.
        Target:
          allOf:
          - $ref: '#/components/schemas/TargetList'
          description: The target of a message, a sender, a user, or a bot. Only the
            target and the sender can view targeted messages. Only users who can see
            targeted messages can take actions on them. However, administrators can
            delete targeted messages that they can’t see.
      description: The details of a message in a channel.
    ChannelMessageCallback:
      type: object
      properties:
        MessageId:
          allOf:
          - $ref: '#/components/schemas/MessageId'
          description: The message ID.
        Content:
          allOf:
          - $ref: '#/components/schemas/NonEmptyContent'
          description: The message content. For Amazon Lex V2 bot responses, this
            field holds a list of messages originating from the bot. For more information,
            refer to [Processing responses from an AppInstanceBot](https://docs.aws.amazon.com/chime-sdk/latest/dg/appinstance-bots#process-response.html)
            in the _Amazon Chime SDK Messaging Developer Guide_.
        Metadata:
          allOf:
          - $ref: '#/components/schemas/Metadata'
          description: The message metadata.
        PushNotification:
          allOf:
          - $ref: '#/components/schemas/PushNotificationConfiguration'
          description: The push notification configuration of the message.
        MessageAttributes:
          allOf:
          - $ref: '#/components/schemas/MessageAttributeMap'
          description: The attributes for the channel message. For Amazon Lex V2 bot
            responses, the attributes are mapped to specific fields from the bot.
            For more information, refer to [Processing responses from an AppInstanceBot](https://docs.aws.amazon.com/chime-sdk/latest/dg/appinstance-bots#process-response.html)
            in the _Amazon Chime SDK Messaging Developer Guide_.
        SubChannelId:
          allOf:
          - $ref: '#/components/schemas/SubChannelId'
          description: The ID of the SubChannel.
        ContentType:
          allOf:
          - $ref: '#/components/schemas/ContentType'
          description: The content type of the call-back message. For Amazon Lex V2
            bot responses, the content type is `application/amz-chime-lex-msgs` for
            success responses and `application/amz-chime-lex-error` for failure responses.
            For more information, refer to [Processing responses from an AppInstanceBot](https://docs.aws.amazon.com/chime-sdk/latest/dg/appinstance-bots#process-response.html)
            in the _Amazon Chime SDK Messaging Developer Guide_.
      required:
      - MessageId
      description: Stores information about a callback.
    ChannelMessagePersistenceType:
      type: string
      enum:
      - PERSISTENT
      - NON_PERSISTENT
    ChannelMessageStatus:
      type: string
      enum:
      - SENT
      - PENDING
      - FAILED
      - DENIED
    ChannelMessageStatusStructure:
      type: object
      properties:
        Value:
          allOf:
          - $ref: '#/components/schemas/ChannelMessageStatus'
          description: The message status value.
        Detail:
          allOf:
          - $ref: '#/components/schemas/StatusDetail'
          description: Contains more details about the message status.
      description: Stores information about a message status.
    ChannelMessageSummary:
      type: object
      properties:
        MessageId:
          allOf:
          - $ref: '#/components/schemas/MessageId'
          description: The ID of the message.
        Content:
          allOf:
          - $ref: '#/components/schemas/Content'
          description: The content of the channel message. For Amazon Lex V2 bot responses,
            this field holds a list of messages originating from the bot. For more
            information, refer to [Processing responses from an AppInstanceBot](https://docs.aws.amazon.com/chime-sdk/latest/dg/appinstance-bots#process-response.html)
            in the _Amazon Chime SDK Messaging Developer Guide_.
        Metadata:
          allOf:
          - $ref: '#/components/schemas/Metadata'
          description: The metadata of the message.
        Type:
          allOf:
          - $ref: '#/components/schemas/ChannelMessageType'
          description: The type of message.
        CreatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the message summary was created.
        LastUpdatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which a message was last updated.
        LastEditedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which a message was last edited.
        Sender:
          allOf:
          - $ref: '#/components/schemas/Identity'
          description: The message sender.
        Redacted:
          allOf:
          - $ref: '#/components/schemas/NonNullableBoolean'
          description: Indicates whether a message was redacted.
        Status:
          allOf:
          - $ref: '#/components/schemas/ChannelMessageStatusStructure'
          description: The message status. The status value is `SENT` for messages
            sent to a channel without a channel flow. For channels associated with
            channel flow, the value determines the processing stage.
        MessageAttributes:
          allOf:
          - $ref: '#/components/schemas/MessageAttributeMap'
          description: The attributes for the channel message. For Amazon Lex V2 bot
            responses, the attributes are mapped to specific fields from the bot.
            For more information, refer to [Processing responses from an AppInstanceBot](https://docs.aws.amazon.com/chime-sdk/latest/dg/appinstance-bots#process-response.html)
            in the _Amazon Chime SDK Messaging Developer Guide_.
        ContentType:
          allOf:
          - $ref: '#/components/schemas/ContentType'
          description: The content type of the channel message listed in the summary.
            For Amazon Lex V2 bot responses, the content type is `application/amz-chime-lex-msgs`
            for success responses and `application/amz-chime-lex-error` for failure
            responses. For more information, refer to [Processing responses from an
            AppInstanceBot](https://docs.aws.amazon.com/chime-sdk/latest/dg/appinstance-bots#process-response.html)
            in the _Amazon Chime SDK Messaging Developer Guide_.
        Target:
          allOf:
          - $ref: '#/components/schemas/TargetList'
          description: The target of a message, a sender, a user, or a bot. Only the
            target and the sender can view targeted messages. Only users who can see
            targeted messages can take actions on them. However, administrators can
            delete targeted messages that they can’t see.
      description: Summary of the messages in a `Channel`.
    ChannelMessageSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/ChannelMessageSummary'
    ChannelMessageType:
      type: string
      enum:
      - STANDARD
      - CONTROL
    ChannelMode:
      type: string
      enum:
      - UNRESTRICTED
      - RESTRICTED
    ChannelModeratedByAppInstanceUserSummary:
      type: object
      properties:
        ChannelSummary:
          allOf:
          - $ref: '#/components/schemas/ChannelSummary'
          description: Summary of the details of a `Channel`.
      description: Summary of the details of a moderated channel.
    ChannelModeratedByAppInstanceUserSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/ChannelModeratedByAppInstanceUserSummary'
    ChannelModerator:
      type: object
      properties:
        Moderator:
          allOf:
          - $ref: '#/components/schemas/Identity'
          description: The moderator's data.
        ChannelArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the moderator's channel.
        CreatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the moderator was created.
        CreatedBy:
          allOf:
          - $ref: '#/components/schemas/Identity'
          description: The `AppInstanceUser` who created the moderator.
      description: The details of a channel moderator.
    ChannelModeratorArns:
      type: array
      items:
        $ref: '#/components/schemas/ChimeArn'
    ChannelModeratorSummary:
      type: object
      properties:
        Moderator:
          allOf:
          - $ref: '#/components/schemas/Identity'
          description: The data for a moderator.
      description: Summary of the details of a `ChannelModerator`.
    ChannelModeratorSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/ChannelModeratorSummary'
    ChannelPrivacy:
      type: string
      enum:
      - PUBLIC
      - PRIVATE
    ChannelSummary:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyResourceName'
          description: The name of the channel.
        ChannelArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the channel.
        Mode:
          allOf:
          - $ref: '#/components/schemas/ChannelMode'
          description: The mode of the channel.
        Privacy:
          allOf:
          - $ref: '#/components/schemas/ChannelPrivacy'
          description: The privacy setting of the channel.
        Metadata:
          allOf:
          - $ref: '#/components/schemas/Metadata'
          description: The metadata of the channel.
        LastMessageTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the last persistent message visible to the
            caller in a channel was sent.
      description: Summary of the details of a `Channel`.
    ChannelSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/ChannelSummary'
    ChimeArn:
      type: string
      pattern: ^arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}$
      minLength: 5
      maxLength: 1600
    ClientRequestToken:
      type: string
      pattern: ^[-_a-zA-Z0-9]*$
      minLength: 2
      maxLength: 64
    ConflictException:
      type: object
      properties:
        Code:
          $ref: '#/components/schemas/ErrorCode'
        Message:
          $ref: '#/components/schemas/String'
      description: The request could not be processed because of conflict in the current
        state of the resource.
    Content:
      type: string
      pattern: ^[\s\S]*$
      minLength: 0
      maxLength: 4096
    ContentType:
      type: string
      pattern: ^[\s\S]*$
      minLength: 0
      maxLength: 45
    CreateChannelBanRequest:
      type: object
      properties:
        ChannelArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the ban request.
        MemberArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The `AppInstanceUserArn` of the member being banned.
        ChimeBearer:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the `AppInstanceUser` or `AppInstanceBot` that makes
            the API call.
      required:
      - ChannelArn
      - MemberArn
      - ChimeBearer
    CreateChannelBanResponse:
      type: object
      properties:
        ChannelArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the response to the ban request.
        Member:
          allOf:
          - $ref: '#/components/schemas/Identity'
          description: The `ChannelArn` and `BannedIdentity` of the member in the
            ban response.
    CreateChannelFlowRequest:
      type: object
      properties:
        AppInstanceArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the channel flow request.
        Processors:
          allOf:
          - $ref: '#/components/schemas/ProcessorList'
          description: Information about the processor Lambda functions.
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyResourceName'
          description: The name of the channel flow.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: The tags for the creation request.
        ClientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          description: The client token for the request. An Idempotency token.
      required:
      - AppInstanceArn
      - Processors
      - Name
      - ClientRequestToken
    CreateChannelFlowResponse:
      type: object
      properties:
        ChannelFlowArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the channel flow.
    CreateChannelMembershipRequest:
      type: object
      properties:
        ChannelArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the channel to which you're adding users.
        MemberArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The `AppInstanceUserArn` of the member you want to add to the
            channel.
        Type:
          allOf:
          - $ref: '#/components/schemas/ChannelMembershipType'
          description: The membership type of a user, `DEFAULT` or `HIDDEN`. Default
            members are always returned as part of `ListChannelMemberships`. Hidden
            members are only returned if the type filter in `ListChannelMemberships`
            equals `HIDDEN`. Otherwise hidden members are not returned. This is only
            supported by moderators.
        ChimeBearer:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the `AppInstanceUser` or `AppInstanceBot` that makes
            the API call.
        SubChannelId:
          allOf:
          - $ref: '#/components/schemas/SubChannelId'
          description: 'The ID of the SubChannel in the request.


            Only required when creating membership in a SubChannel for a moderator
            in an elastic channel.'
      required:
      - ChannelArn
      - MemberArn
      - Type
      - ChimeBearer
    CreateChannelMembershipResponse:
      type: object
      properties:
        ChannelArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the channel.
        Member:
          allOf:
          - $ref: '#/components/schemas/Identity'
          description: The ARN and metadata of the member being added.
        SubChannelId:
          allOf:
          - $ref: '#/components/schemas/SubChannelId'
          description: The ID of the SubChannel in the response.
    CreateChannelModeratorRequest:
      type: object
      properties:
        ChannelArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the channel.
        ChannelModeratorArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The `AppInstanceUserArn` of the moderator.
        ChimeBearer:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the `AppInstanceUser` or `AppInstanceBot` that makes
            the API call.
      required:
      - ChannelArn
      - ChannelModeratorArn
      - ChimeBearer
    CreateChannelModeratorResponse:
      type: object
      properties:
        ChannelArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the channel.
        ChannelModerator:
          allOf:
          - $ref: '#/components/schemas/Identity'
          description: The ARNs of the channel and the moderator.
    CreateChannelRequest:
      type: object
      properties:
        AppInstanceArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the channel request.
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyResourceName'
          description: The name of the channel.
        Mode:
          allOf:
          - $ref: '#/components/schemas/ChannelMode'
          description: 'The channel mode: `UNRESTRICTED` or `RESTRICTED`. Administrators,
            moderators, and channel members can add themselves and other members to
            unrestricted channels. Only administrators and moderators can add members
            to restricted channels.'
        Privacy:
          allOf:
          - $ref: '#/components/schemas/ChannelPrivacy'
          description: 'The channel''s privacy level: `PUBLIC` or `PRIVATE`. Private
            channels aren''t discoverable by users outside the channel. Public channels
            are discoverable by anyone in the `AppInstance`.'
        Metadata:
          allOf:
          - $ref: '#/components/schemas/Metadata'
          description: The metadata of the creation request. Limited to 1KB and UTF-8.
        ClientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          description: The client token for the request. An `Idempotency` token.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: The tags for the creation request.
        ChimeBearer:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the `AppInstanceUser` or `AppInstanceBot` that makes
            the API call.
        ChannelId:
          allOf:
          - $ref: '#/components/schemas/ChannelId'
          description: The ID of the channel in the request.
        MemberArns:
          allOf:
          - $ref: '#/components/schemas/ChannelMemberArns'
          description: The ARNs of the channel members in the request.
        ModeratorArns:
          allOf:
          - $ref: '#/components/schemas/ChannelModeratorArns'
          description: The ARNs of the channel moderators in the request.
        ElasticChannelConfiguration:
          allOf:
          - $ref: '#/components/schemas/ElasticChannelConfiguration'
          description: The attributes required to configure and create an elastic
            channel. An elastic channel can support a maximum of 1-million users,
            excluding moderators.
        ExpirationSettings:
          allOf:
          - $ref: '#/components/schemas/ExpirationSettings'
          description: Settings that control the interval after which the channel
            is automatically deleted.
      required:
      - AppInstanceArn
      - Name
      - ClientRequestToken
      - ChimeBearer
    CreateChannelResponse:
      type: object
      properties:
        ChannelArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the channel.
    DeleteChannelBanRequest:
      type: object
      properties:
        ChannelArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the channel from which the `AppInstanceUser` was
            banned.
        MemberArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the `AppInstanceUser` that you want to reinstate.
        ChimeBearer:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the `AppInstanceUser` or `AppInstanceBot` that makes
            the API call.
      required:
      - ChannelArn
      - MemberArn
      - ChimeBearer
    DeleteChannelFlowRequest:
      type: object
      properties:
        ChannelFlowArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the channel flow.
      required:
      - ChannelFlowArn
    DeleteChannelMembershipRequest:
      type: object
      properties:
        ChannelArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the channel from which you want to remove the user.
        MemberArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The `AppInstanceUserArn` of the member that you're removing
            from the channel.
        ChimeBearer:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the `AppInstanceUser` or `AppInstanceBot` that makes
            the API call.
        SubChannelId:
          allOf:
          - $ref: '#/components/schemas/SubChannelId'
          description: 'The ID of the SubChannel in the request.


            Only for use by moderators.'
      required:
      - ChannelArn
      - MemberArn
      - ChimeBearer
    DeleteChannelMessageRequest:
      type: object
      properties:
        ChannelArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the channel.
        MessageId:
          allOf:
          - $ref: '#/components/schemas/MessageId'
          description: The ID of the message being deleted.
        ChimeBearer:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the `AppInstanceUser` or `AppInstanceBot` that makes
            the API call.
        SubChannelId:
          allOf:
          - $ref: '#/components/schemas/SubChannelId'
          description: 'The ID of the SubChannel in the request.


            Only required when deleting messages in a SubChannel that the user belongs
            to.'
      required:
      - ChannelArn
      - MessageId
      - ChimeBearer
    DeleteChannelModeratorRequest:
      type: object
      properties:
        ChannelArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the channel.
        ChannelModeratorArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The `AppInstanceUserArn` of the moderator being deleted.
        ChimeBearer:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the `AppInstanceUser` or `AppInstanceBot` that makes
            the API call.
      required:
      - ChannelArn
      - ChannelModeratorArn
      - ChimeBearer
    DeleteChannelRequest:
      type: object
      properties:
        ChannelArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the channel being deleted.
        ChimeBearer:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the `AppInstanceUser` or `AppInstanceBot` that makes
            the API call.
      required:
      - ChannelArn
      - ChimeBearer
    DeleteMessagingStreamingConfigurationsRequest:
      type: object
      properties:
        AppInstanceArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the streaming configurations being deleted.
      required:
      - AppInstanceArn
    DescribeChannelBanRequest:
      type: object
      properties:
        ChannelArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the channel from which the user is banned.
        MemberArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The `AppInstanceUserArn` of the member being banned.
        ChimeBearer:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the `AppInstanceUser` or `AppInstanceBot` that makes
            the API call.
      required:
      - ChannelArn
      - MemberArn
      - ChimeBearer
    DescribeChannelBanResponse:
      type: object
      properties:
        ChannelBan:
          allOf:
          - $ref: '#/components/schemas/ChannelBan'
          description: The details of the ban.
    DescribeChannelFlowRequest:
      type: object
      properties:
        ChannelFlowArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the channel flow.
      required:
      - ChannelFlowArn
    DescribeChannelFlowResponse:
      type: object
      properties:
        ChannelFlow:
          allOf:
          - $ref: '#/components/schemas/ChannelFlow'
          description: The channel flow details.
    DescribeChannelMembershipForAppInstanceUserRequest:
      type: object
      properties:
        ChannelArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the channel to which the user belongs.
        AppInstanceUserArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the user or bot in a channel.
        ChimeBearer:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the `AppInstanceUser` or `AppInstanceBot` that makes
            the API call.
      required:
      - ChannelArn
      - AppInstanceUserArn
      - ChimeBearer
    DescribeChannelMembershipForAppInstanceUserResponse:
      type: object
      properties:
        ChannelMembership:
          allOf:
          - $ref: '#/components/schemas/ChannelMembershipForAppInstanceUserSummary'
          description: The channel to which a user belongs.
    DescribeChannelMembershipRequest:
      type: object
      properties:
        ChannelArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the channel.
        MemberArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The `AppInstanceUserArn` of the member.
        ChimeBearer:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the `AppInstanceUser` or `AppInstanceBot` that makes
            the API call.
        SubChannelId:
          allOf:
          - $ref: '#/components/schemas/SubChannelId'
          description: 'The ID of the SubChannel in the request. The response contains
            an `ElasticChannelConfiguration` object.


            Only required to get a user’s SubChannel membership details.'
      required:
      - ChannelArn
      - MemberArn
      - ChimeBearer
    DescribeChannelMembershipResponse:
      type: object
      properties:
        ChannelMembership:
          allOf:
          - $ref: '#/components/schemas/ChannelMembership'
          description: The details of the membership.
    DescribeChannelModeratedByAppInstanceUserRequest:
      type: object
      properties:
        ChannelArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the moderated channel.
        AppInstanceUserArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the user or bot in the moderated channel.
        ChimeBearer:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the `AppInstanceUser` or `AppInstanceBot` that makes
            the API call.
      required:
      - ChannelArn
      - AppInstanceUserArn
      - ChimeBearer
    DescribeChannelModeratedByAppInstanceUserResponse:
      type: object
      properties:
        Channel:
          allOf:
          - $ref: '#/components/schemas/ChannelModeratedByAppInstanceUserSummary'
          description: The moderated channel.
    DescribeChannelModeratorRequest:
      type: object
      properties:
        ChannelArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the channel.
        ChannelModeratorArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The `AppInstanceUserArn` of the channel moderator.
        ChimeBearer:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the `AppInstanceUser` or `AppInstanceBot` that makes
            the API call.
      required:
      - ChannelArn
      - ChannelModeratorArn
      - ChimeBearer
    DescribeChannelModeratorResponse:
      type: object
      properties:
        ChannelModerator:
          allOf:
          - $ref: '#/components/schemas/ChannelModerator'
          description: The details of the channel moderator.
    DescribeChannelRequest:
      type: object
      properties:
        ChannelArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the channel.
        ChimeBearer:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the `AppInstanceUser` or `AppInstanceBot` that makes
            the API call.
      required:
      - ChannelArn
      - ChimeBearer
    DescribeChannelResponse:
      type: object
      properties:
        Channel:
          allOf:
          - $ref: '#/components/schemas/Channel'
          description: The channel details.
    DisassociateChannelFlowRequest:
      type: object
      properties:
        ChannelArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the channel.
        ChannelFlowArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the channel flow.
        ChimeBearer:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The `AppInstanceUserArn` of the user making the API call.
      required:
      - ChannelArn
      - ChannelFlowArn
      - ChimeBearer
    ElasticChannelConfiguration:
      type: object
      properties:
        MaximumSubChannels:
          allOf:
          - $ref: '#/components/schemas/MaximumSubChannels'
          description: The maximum number of SubChannels that you want to allow in
            the elastic channel.
        TargetMembershipsPerSubChannel:
          allOf:
          - $ref: '#/components/schemas/TargetMembershipsPerSubChannel'
          description: The maximum number of members allowed in a SubChannel.
        MinimumMembershipPercentage:
          allOf:
          - $ref: '#/components/schemas/MinimumMembershipPercentage'
          description: The minimum allowed percentage of TargetMembershipsPerSubChannel
            users. Ceil of the calculated value is used in balancing members among
            SubChannels of the elastic channel.
      required:
      - MaximumSubChannels
      - TargetMembershipsPerSubChannel
      - MinimumMembershipPercentage
      description: The attributes required to configure and create an elastic channel.
        An elastic channel can support a maximum of 1-million members.
    ErrorCode:
      type: string
      enum:
      - BadRequest
      - Conflict
      - Forbidden
      - NotFound
      - PreconditionFailed
      - ResourceLimitExceeded
      - ServiceFailure
      - AccessDenied
      - ServiceUnavailable
      - Throttled
      - Throttling
      - Unauthorized
      - Unprocessable
      - VoiceConnectorGroupAssociationsExist
      - PhoneNumberAssociationsExist
    ExpirationCriterion:
      type: string
      enum:
      - CREATED_TIMESTAMP
      - LAST_MESSAGE_TIMESTAMP
    ExpirationDays:
      type: integer
      minimum: 1
      maximum: 5475
    ExpirationSettings:
      type: object
      properties:
        ExpirationDays:
          allOf:
          - $ref: '#/components/schemas/ExpirationDays'
          description: The period in days after which the system automatically deletes
            a channel.
        ExpirationCriterion:
          allOf:
          - $ref: '#/components/schemas/ExpirationCriterion'
          description: The conditions that must be met for a channel to expire.
      required:
      - ExpirationDays
      - ExpirationCriterion
      description: Settings that control the interval after which a channel is deleted.
    FallbackAction:
      type: string
      enum:
      - CONTINUE
      - ABORT
    FilterRule:
      type: string
      pattern: ^[\s\S]*$
      minLength: 1
    ForbiddenException:
      type: object
      properties:
        Code:
          $ref: '#/components/schemas/ErrorCode'
        Message:
          $ref: '#/components/schemas/String'
      description: The client is permanently forbidden from making the request.
    GetChannelMembershipPreferencesRequest:
      type: object
      properties:
        ChannelArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the channel.
        MemberArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The `AppInstanceUserArn` of the member retrieving the preferences.
        ChimeBearer:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the `AppInstanceUser` or `AppInstanceBot` that makes
            the API call.
      required:
      - ChannelArn
      - MemberArn
      - ChimeBearer
    GetChannelMembershipPreferencesResponse:
      type: object
      properties:
        ChannelArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the channel.
        Member:
          allOf:
          - $ref: '#/components/schemas/Identity'
          description: The details of a user.
        Preferences:
          allOf:
          - $ref: '#/components/schemas/ChannelMembershipPreferences'
          description: The channel membership preferences for an `AppInstanceUser`
            .
    GetChannelMessageRequest:
      type: object
      properties:
        ChannelArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the channel.
        MessageId:
          allOf:
          - $ref: '#/components/schemas/MessageId'
          description: The ID of the message.
        ChimeBearer:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the `AppInstanceUser` or `AppInstanceBot` that makes
            the API call.
        SubChannelId:
          allOf:
          - $ref: '#/components/schemas/SubChannelId'
          description: 'The ID of the SubChannel in the request.


            Only required when getting messages in a SubChannel that the user belongs
            to.'
      required:
      - ChannelArn
      - MessageId
      - ChimeBearer
    GetChannelMessageResponse:
      type: object
      properties:
        ChannelMessage:
          allOf:
          - $ref: '#/components/schemas/ChannelMessage'
          description: The details of and content in the message.
    GetChannelMessageStatusRequest:
      type: object
      properties:
        ChannelArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the channel
        MessageId:
          allOf:
          - $ref: '#/components/schemas/MessageId'
          description: The ID of the message.
        ChimeBearer:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The `AppInstanceUserArn` of the user making the API call.
        SubChannelId:
          allOf:
          - $ref: '#/components/schemas/SubChannelId'
          description: 'The ID of the SubChannel in the request.


            Only required when getting message status in a SubChannel that the user
            belongs to.'
      required:
      - ChannelArn
      - MessageId
      - ChimeBearer
    GetChannelMessageStatusResponse:
      type: object
      properties:
        Status:
          allOf:
          - $ref: '#/components/schemas/ChannelMessageStatusStructure'
          description: The message status and details.
    GetMessagingSessionEndpointRequest:
      type: object
      properties: {}
    GetMessagingSessionEndpointResponse:
      type: object
      properties:
        Endpoint:
          allOf:
          - $ref: '#/components/schemas/MessagingSessionEndpoint'
          description: The endpoint returned in the response.
    GetMessagingStreamingConfigurationsRequest:
      type: object
      properties:
        AppInstanceArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the streaming configurations.
      required:
      - AppInstanceArn
    GetMessagingStreamingConfigurationsResponse:
      type: object
      properties:
        StreamingConfigurations:
          allOf:
          - $ref: '#/components/schemas/StreamingConfigurationList'
          description: The streaming settings.
    Identity:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN in an Identity.
        Name:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name in an Identity.
      description: The details of a user or bot.
    InvocationType:
      type: string
      enum:
      - ASYNC
    LambdaConfiguration:
      type: object
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/LambdaFunctionArn'
          description: The ARN of the Lambda message processing function.
        InvocationType:
          allOf:
          - $ref: '#/components/schemas/InvocationType'
          description: Controls how the Lambda function is invoked.
      required:
      - ResourceArn
      - InvocationType
      description: Stores metadata about a Lambda processor.
    LambdaFunctionArn:
      type: string
      pattern: ^arn:aws:lambda:[a-z]{2}-[a-z]+-\d{1}:\d{12}:function:[a-zA-Z0-9\-_\.]+(:(\$LATEST|[a-zA-Z0-9\-_]+))?$
      minLength: 15
      maxLength: 2048
    ListChannelBansRequest:
      type: object
      properties:
        ChannelArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the channel.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of bans that you want returned.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token passed by previous API calls until all requested
            bans are returned.
        ChimeBearer:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the `AppInstanceUser` or `AppInstanceBot` that makes
            the API call.
      required:
      - ChannelArn
      - ChimeBearer
    ListChannelBansResponse:
      type: object
      properties:
        ChannelArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the channel.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token passed by previous API calls until all requested
            bans are returned.
        ChannelBans:
          allOf:
          - $ref: '#/components/schemas/ChannelBanSummaryList'
          description: The information for each requested ban.
    ListChannelFlowsRequest:
      type: object
      properties:
        AppInstanceArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the app instance.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of channel flows that you want to return.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token passed by previous API calls until all requested
            channel flows are returned.
      required:
      - AppInstanceArn
    ListChannelFlowsResponse:
      type: object
      properties:
        ChannelFlows:
          allOf:
          - $ref: '#/components/schemas/ChannelFlowSummaryList'
          description: The information about each channel flow.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token passed by previous API calls until all requested
            channels are returned.
    ListChannelMembershipsForAppInstanceUserRequest:
      type: object
      properties:
        AppInstanceUserArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the user or bot.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of users that you want returned.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token returned from previous API requests until the number
            of channel memberships is reached.
        ChimeBearer:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the `AppInstanceUser` or `AppInstanceBot` that makes
            the API call.
      required:
      - ChimeBearer
    ListChannelMembershipsForAppInstanceUserResponse:
      type: object
      properties:
        ChannelMemberships:
          allOf:
          - $ref: '#/components/schemas/ChannelMembershipForAppInstanceUserSummaryList'
          description: The information for the requested channel memberships.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token passed by previous API calls until all requested
            users are returned.
    ListChannelMembershipsRequest:
      type: object
      properties:
        ChannelArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The maximum number of channel memberships that you want returned.
        Type:
          allOf:
          - $ref: '#/components/schemas/ChannelMembershipType'
          description: The membership type of a user, `DEFAULT` or `HIDDEN`. Default
            members are returned as part of `ListChannelMemberships` if no type is
            specified. Hidden members are only returned if the type filter in `ListChannelMemberships`
            equals `HIDDEN`.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of channel memberships that you want returned.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token passed by previous API calls until all requested
            channel memberships are returned.
        ChimeBearer:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the `AppInstanceUser` or `AppInstanceBot` that makes
            the API call.
        SubChannelId:
          allOf:
          - $ref: '#/components/schemas/SubChannelId'
          description: 'The ID of the SubChannel in the request.


            Only required when listing a user''s memberships in a particular sub-channel
            of an elastic channel.'
      required:
      - ChannelArn
      - ChimeBearer
    ListChannelMembershipsResponse:
      type: object
      properties:
        ChannelArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the channel.
        ChannelMemberships:
          allOf:
          - $ref: '#/components/schemas/ChannelMembershipSummaryList'
          description: The information for the requested channel memberships.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token passed by previous API calls until all requested
            channel memberships are returned.
    ListChannelMessagesRequest:
      type: object
      properties:
        ChannelArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the channel.
        SortOrder:
          allOf:
          - $ref: '#/components/schemas/SortOrder'
          description: The order in which you want messages sorted. Default is Descending,
            based on time created.
        NotBefore:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The initial or starting time stamp for your requested messages.
        NotAfter:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The final or ending time stamp for your requested messages.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of messages that you want returned.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token passed by previous API calls until all requested
            messages are returned.
        ChimeBearer:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the `AppInstanceUser` or `AppInstanceBot` that makes
            the API call.
        SubChannelId:
          allOf:
          - $ref: '#/components/schemas/SubChannelId'
          description: 'The ID of the SubChannel in the request.


            Only required when listing the messages in a SubChannel that the user
            belongs to.'
      required:
      - ChannelArn
      - ChimeBearer
    ListChannelMessagesResponse:
      type: object
      properties:
        ChannelArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the channel containing the requested messages.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token passed by previous API calls until all requested
            messages are returned.
        ChannelMessages:
          allOf:
          - $ref: '#/components/schemas/ChannelMessageSummaryList'
          description: The information about, and content of, each requested message.
        SubChannelId:
          allOf:
          - $ref: '#/components/schemas/SubChannelId'
          description: The ID of the SubChannel in the response.
    ListChannelModeratorsRequest:
      type: object
      properties:
        ChannelArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the channel.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of moderators that you want returned.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token passed by previous API calls until all requested
            moderators are returned.
        ChimeBearer:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the `AppInstanceUser` or `AppInstanceBot` that makes
            the API call.
      required:
      - ChannelArn
      - ChimeBearer
    ListChannelModeratorsResponse:
      type: object
      properties:
        ChannelArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the channel.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token passed by previous API calls until all requested
            moderators are returned.
        ChannelModerators:
          allOf:
          - $ref: '#/components/schemas/ChannelModeratorSummaryList'
          description: The information about and names of each moderator.
    ListChannelsAssociatedWithChannelFlowRequest:
      type: object
      properties:
        ChannelFlowArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the channel flow.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of channels that you want to return.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token passed by previous API calls until all requested
            channels are returned.
      required:
      - ChannelFlowArn
    ListChannelsAssociatedWithChannelFlowResponse:
      type: object
      properties:
        Channels:
          allOf:
          - $ref: '#/components/schemas/ChannelAssociatedWithFlowSummaryList'
          description: The information about each channel.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token passed by previous API calls until all requested
            channels are returned.
    ListChannelsModeratedByAppInstanceUserRequest:
      type: object
      properties:
        AppInstanceUserArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the user or bot in the moderated channel.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of channels in the request.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token returned from previous API requests until the number
            of channels moderated by the user is reached.
        ChimeBearer:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the `AppInstanceUser` or `AppInstanceBot` that makes
            the API call.
      required:
      - ChimeBearer
    ListChannelsModeratedByAppInstanceUserResponse:
      type: object
      properties:
        Channels:
          allOf:
          - $ref: '#/components/schemas/ChannelModeratedByAppInstanceUserSummaryList'
          description: The moderated channels in the request.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token returned from previous API requests until the number
            of channels moderated by the user is reached.
    ListChannelsRequest:
      type: object
      properties:
        AppInstanceArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the `AppInstance`.
        Privacy:
          allOf:
          - $ref: '#/components/schemas/ChannelPrivacy'
          description: The privacy setting. `PUBLIC` retrieves all the public channels.
            `PRIVATE` retrieves private channels. Only an `AppInstanceAdmin` can retrieve
            private channels.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of channels that you want to return.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token passed by previous API calls until all requested
            channels are returned.
        ChimeBearer:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the `AppInstanceUser` or `AppInstanceBot` that makes
            the API call.
      required:
      - AppInstanceArn
      - ChimeBearer
    ListChannelsResponse:
      type: object
      properties:
        Channels:
          allOf:
          - $ref: '#/components/schemas/ChannelSummaryList'
          description: The information about each channel.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token returned from previous API requests until the number
            of channels is reached.
    ListSubChannelsRequest:
      type: object
      properties:
        ChannelArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of elastic channel.
        ChimeBearer:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The `AppInstanceUserArn` of the user making the API call.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of sub-channels that you want to return.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token passed by previous API calls until all requested
            sub-channels are returned.
      required:
      - ChannelArn
      - ChimeBearer
    ListSubChannelsResponse:
      type: object
      properties:
        ChannelArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of elastic channel.
        SubChannels:
          allOf:
          - $ref: '#/components/schemas/SubChannelSummaryList'
          description: The information about each sub-channel.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token passed by previous API calls until all requested
            sub-channels are returned.
    ListTagsForResourceRequest:
      type: object
      properties:
        ResourceARN:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the resource.
      required:
      - ResourceARN
    ListTagsForResourceResponse:
      type: object
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: The tag key-value pairs.
    MaxResults:
      type: integer
      minimum: 1
      maximum: 50
    MaximumSubChannels:
      type: integer
      minimum: 2
    MemberArns:
      type: array
      items:
        $ref: '#/components/schemas/ChimeArn'
    Members:
      type: array
      items:
        $ref: '#/components/schemas/Identity'
    MembershipCount:
      type: integer
    MessageAttributeMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/MessageAttributeValue'
    MessageAttributeName:
      type: string
      pattern: ^[\s\S]*$
      minLength: 1
      maxLength: 64
    MessageAttributeStringValue:
      type: string
      pattern: ^[\s\S]*$
      minLength: 1
      maxLength: 512
    MessageAttributeStringValues:
      type: array
      items:
        $ref: '#/components/schemas/MessageAttributeStringValue'
    MessageAttributeValue:
      type: object
      properties:
        StringValues:
          allOf:
          - $ref: '#/components/schemas/MessageAttributeStringValues'
          description: The strings in a message attribute value.
      description: A list of message attribute values.
    MessageId:
      type: string
      pattern: ^[-_a-zA-Z0-9]*$
      minLength: 1
      maxLength: 128
    MessagingDataType:
      type: string
      enum:
      - Channel
      - ChannelMessage
    MessagingSessionEndpoint:
      type: object
      properties:
        Url:
          allOf:
          - $ref: '#/components/schemas/UrlType'
          description: The endpoint to which you establish a websocket connection.
      description: The websocket endpoint used to connect to Amazon Chime SDK messaging.
    Metadata:
      type: string
      pattern: .*
      minLength: 0
      maxLength: 1024
    MinimumMembershipPercentage:
      type: integer
      minimum: 1
      maximum: 40
    NextToken:
      type: string
      pattern: .*
      minLength: 0
      maxLength: 2048
    NonEmptyContent:
      type: string
      pattern: ^[\s\S]*$
      minLength: 1
    NonEmptyResourceName:
      type: string
      pattern: ^[\u0009\u000A\u000D\u0020-\u007E\u0085\u00A0-\uD7FF\uE000-\uFFFD\u10000-\u10FFFF]*$
      minLength: 1
      maxLength: 256
    NonNullableBoolean:
      type: boolean
      default: false
    NotFoundException:
      type: object
      properties:
        Code:
          $ref: '#/components/schemas/ErrorCode'
        Message:
          $ref: '#/components/schemas/String'
      description: One or more of the resources in the request does not exist in the
        system.
    Processor:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyResourceName'
          description: The name of the channel flow.
        Configuration:
          allOf:
          - $ref: '#/components/schemas/ProcessorConfiguration'
          description: The information about the type of processor and its identifier.
        ExecutionOrder:
          allOf:
          - $ref: '#/components/schemas/ChannelFlowExecutionOrder'
          description: The sequence in which processors run. If you have multiple
            processors in a channel flow, message processing goes through each processor
            in the sequence. The value determines the sequence. At this point, we
            support only 1 processor within a flow.
        FallbackAction:
          allOf:
          - $ref: '#/components/schemas/FallbackAction'
          description: Determines whether to continue with message processing or stop
            it in cases where communication with a processor fails. If a processor
            has a fallback action of `ABORT` and communication with it fails, the
            processor sets the message status to `FAILED` and does not send the message
            to any recipients. Note that if the last processor in the channel flow
            sequence has a fallback action of `CONTINUE` and communication with the
            processor fails, then the message is considered processed and sent to
            recipients of the channel.
      required:
      - Name
      - Configuration
      - ExecutionOrder
      - FallbackAction
      description: The information about a processor in a channel flow.
    ProcessorConfiguration:
      type: object
      properties:
        Lambda:
          allOf:
          - $ref: '#/components/schemas/LambdaConfiguration'
          description: Indicates that the processor is of type Lambda.
      required:
      - Lambda
      description: A processor's metadata.
    ProcessorList:
      type: array
      items:
        $ref: '#/components/schemas/Processor'
    PushNotificationBody:
      type: string
      pattern: ^[\s\S]*$
      minLength: 1
      maxLength: 150
    PushNotificationConfiguration:
      type: object
      properties:
        Title:
          allOf:
          - $ref: '#/components/schemas/PushNotificationTitle'
          description: The title of the push notification.
        Body:
          allOf:
          - $ref: '#/components/schemas/PushNotificationBody'
          description: The body of the push notification.
        Type:
          allOf:
          - $ref: '#/components/schemas/PushNotificationType'
          description: 'Enum value that indicates the type of the push notification
            for a message. `DEFAULT`: Normal mobile push notification. `VOIP`: VOIP
            mobile push notification.'
      description: The push notification configuration of the message.
    PushNotificationPreferences:
      type: object
      properties:
        AllowNotifications:
          allOf:
          - $ref: '#/components/schemas/AllowNotifications'
          description: Enum value that indicates which push notifications to send
            to the requested member of a channel. `ALL` sends all push notifications,
            `NONE` sends no push notifications, `FILTERED` sends only filtered push
            notifications.
        FilterRule:
          allOf:
          - $ref: '#/components/schemas/FilterRule'
          description: The simple JSON object used to send a subset of a push notification
            to the requested member.
      required:
      - AllowNotifications
      description: The channel membership preferences for push notification.
    PushNotificationTitle:
      type: string
      pattern: .*
      minLength: 1
      maxLength: 50
    PushNotificationType:
      type: string
      enum:
      - DEFAULT
      - VOIP
    PutChannelExpirationSettingsRequest:
      type: object
      properties:
        ChannelArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the channel.
        ChimeBearer:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the `AppInstanceUser` or `AppInstanceBot` that makes
            the API call.
        ExpirationSettings:
          allOf:
          - $ref: '#/components/schemas/ExpirationSettings'
          description: Settings that control the interval after which a channel is
            deleted.
      required:
      - ChannelArn
    PutChannelExpirationSettingsResponse:
      type: object
      properties:
        ChannelArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The channel ARN.
        ExpirationSettings:
          allOf:
          - $ref: '#/components/schemas/ExpirationSettings'
          description: Settings that control the interval after which a channel is
            deleted.
    PutChannelMembershipPreferencesRequest:
      type: object
      properties:
        ChannelArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the channel.
        MemberArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the member setting the preferences.
        ChimeBearer:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the `AppInstanceUser` or `AppInstanceBot` that makes
            the API call.
        Preferences:
          allOf:
          - $ref: '#/components/schemas/ChannelMembershipPreferences'
          description: The channel membership preferences of an `AppInstanceUser`
            .
      required:
      - ChannelArn
      - MemberArn
      - ChimeBearer
      - Preferences
    PutChannelMembershipPreferencesResponse:
      type: object
      properties:
        ChannelArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the channel.
        Member:
          allOf:
          - $ref: '#/components/schemas/Identity'
          description: The details of a user.
        Preferences:
          allOf:
          - $ref: '#/components/schemas/ChannelMembershipPreferences'
          description: The ARN and metadata of the member being added.
    PutMessagingStreamingConfigurationsRequest:
      type: object
      properties:
        AppInstanceArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the streaming configuration.
        StreamingConfigurations:
          allOf:
          - $ref: '#/components/schemas/StreamingConfigurationList'
          description: The streaming configurations.
      required:
      - AppInstanceArn
      - StreamingConfigurations
    PutMessagingStreamingConfigurationsResponse:
      type: object
      properties:
        StreamingConfigurations:
          allOf:
          - $ref: '#/components/schemas/StreamingConfigurationList'
          description: The requested streaming configurations.
    RedactChannelMessageRequest:
      type: object
      properties:
        ChannelArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the channel containing the messages that you want
            to redact.
        MessageId:
          allOf:
          - $ref: '#/components/schemas/MessageId'
          description: The ID of the message being redacted.
        ChimeBearer:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the `AppInstanceUser` or `AppInstanceBot` that makes
            the API call.
        SubChannelId:
          allOf:
          - $ref: '#/components/schemas/SubChannelId'
          description: The ID of the SubChannel in the request.
      required:
      - ChannelArn
      - MessageId
      - ChimeBearer
    RedactChannelMessageResponse:
      type: object
      properties:
        ChannelArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the channel containing the messages that you want
            to redact.
        MessageId:
          allOf:
          - $ref: '#/components/schemas/MessageId'
          description: The ID of the message being redacted.
        SubChannelId:
          allOf:
          - $ref: '#/components/schemas/SubChannelId'
          description: 'The ID of the SubChannel in the response.


            Only required when redacting messages in a SubChannel that the user belongs
            to.'
    ResourceLimitExceededException:
      type: object
      properties:
        Code:
          $ref: '#/components/schemas/ErrorCode'
        Message:
          $ref: '#/components/schemas/String'
      description: The request exceeds the resource limit.
    ResourceName:
      type: string
      pattern: ^[\u0009\u000A\u000D\u0020-\u007E\u0085\u00A0-\uD7FF\uE000-\uFFFD\u10000-\u10FFFF]*$
      minLength: 0
      maxLength: 256
    SearchChannelsRequest:
      type: object
      properties:
        ChimeBearer:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The `AppInstanceUserArn` of the user making the API call.
        Fields:
          allOf:
          - $ref: '#/components/schemas/SearchFields'
          description: A list of the `Field` objects in the channel being searched.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of channels that you want returned.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token returned from previous API requests until the number
            of channels is reached.
      required:
      - Fields
    SearchChannelsResponse:
      type: object
      properties:
        Channels:
          allOf:
          - $ref: '#/components/schemas/ChannelSummaryList'
          description: A list of the channels in the request.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token returned from previous API responses until the number
            of channels is reached.
    SearchField:
      type: object
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/SearchFieldKey'
          description: An `enum` value that indicates the key to search the channel
            on. `MEMBERS` allows you to search channels based on memberships. You
            can use it with the `EQUALS` operator to get channels whose memberships
            are equal to the specified values, and with the `INCLUDES` operator to
            get channels whose memberships include the specified values.
        Values:
          allOf:
          - $ref: '#/components/schemas/SearchFieldValues'
          description: 'The values that you want to search for, a list of strings.
            The values must be `AppInstanceUserArns` specified as a list of strings.


            This operation isn''t supported for `AppInstanceUsers` with large number
            of memberships.'
        Operator:
          allOf:
          - $ref: '#/components/schemas/SearchFieldOperator'
          description: The operator used to compare field values, currently `EQUALS`
            or `INCLUDES`. Use the `EQUALS` operator to find channels whose memberships
            equal the specified values. Use the `INCLUDES` operator to find channels
            whose memberships include the specified values.
      required:
      - Key
      - Values
      - Operator
      description: A `Field` of the channel that you want to search.
    SearchFieldKey:
      type: string
      enum:
      - MEMBERS
    SearchFieldOperator:
      type: string
      enum:
      - EQUALS
      - INCLUDES
    SearchFieldValue:
      type: string
      pattern: ^[\s\S]*$
      minLength: 1
      maxLength: 512
    SearchFieldValues:
      type: array
      items:
        $ref: '#/components/schemas/SearchFieldValue'
    SearchFields:
      type: array
      items:
        $ref: '#/components/schemas/SearchField'
    SendChannelMessageRequest:
      type: object
      properties:
        ChannelArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the channel.
        Content:
          allOf:
          - $ref: '#/components/schemas/NonEmptyContent'
          description: The content of the channel message.
        Type:
          allOf:
          - $ref: '#/components/schemas/ChannelMessageType'
          description: 'The type of message, `STANDARD` or `CONTROL`.


            `STANDARD` messages can be up to 4KB in size and contain metadata. Metadata
            is arbitrary, and you can use it in a variety of ways, such as containing
            a link to an attachment.


            `CONTROL` messages are limited to 30 bytes and do not contain metadata.'
        Persistence:
          allOf:
          - $ref: '#/components/schemas/ChannelMessagePersistenceType'
          description: Boolean that controls whether the message is persisted on the
            back end. Required.
        Metadata:
          allOf:
          - $ref: '#/components/schemas/Metadata'
          description: The optional metadata for each message.
        ClientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          description: The `Idempotency` token for each client request.
        ChimeBearer:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the `AppInstanceUser` or `AppInstanceBot` that makes
            the API call.
        PushNotification:
          allOf:
          - $ref: '#/components/schemas/PushNotificationConfiguration'
          description: The push notification configuration of the message.
        MessageAttributes:
          allOf:
          - $ref: '#/components/schemas/MessageAttributeMap'
          description: The attributes for the message, used for message filtering
            along with a `FilterRule` defined in the `PushNotificationPreferences`.
        SubChannelId:
          allOf:
          - $ref: '#/components/schemas/SubChannelId'
          description: The ID of the SubChannel in the request.
        ContentType:
          allOf:
          - $ref: '#/components/schemas/ContentType'
          description: The content type of the channel message.
        Target:
          allOf:
          - $ref: '#/components/schemas/TargetList'
          description: The target of a message. Must be a member of the channel, such
            as another user, a bot, or the sender. Only the target and the sender
            can view targeted messages. Only users who can see targeted messages can
            take actions on them. However, administrators can delete targeted messages
            that they can’t see.
      required:
      - ChannelArn
      - Content
      - Type
      - Persistence
      - ClientRequestToken
      - ChimeBearer
    SendChannelMessageResponse:
      type: object
      properties:
        ChannelArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the channel.
        MessageId:
          allOf:
          - $ref: '#/components/schemas/MessageId'
          description: The ID string assigned to each message.
        Status:
          allOf:
          - $ref: '#/components/schemas/ChannelMessageStatusStructure'
          description: The status of the channel message.
        SubChannelId:
          allOf:
          - $ref: '#/components/schemas/SubChannelId'
          description: The ID of the SubChannel in the response.
    ServiceFailureException:
      type: object
      properties:
        Code:
          $ref: '#/components/schemas/ErrorCode'
        Message:
          $ref: '#/components/schemas/String'
      description: The service encountered an unexpected error.
    ServiceUnavailableException:
      type: object
      properties:
        Code:
          $ref: '#/components/schemas/ErrorCode'
        Message:
          $ref: '#/components/schemas/String'
      description: The service is currently unavailable.
    SortOrder:
      type: string
      enum:
      - ASCENDING
      - DESCENDING
    StatusDetail:
      type: string
      pattern: ^[\s\S]*$
      minLength: 0
      maxLength: 256
    StreamingConfiguration:
      type: object
      properties:
        DataType:
          allOf:
          - $ref: '#/components/schemas/MessagingDataType'
          description: The data type of the configuration.
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the resource in the configuration.
      required:
      - DataType
      - ResourceArn
      description: The configuration for connecting a messaging stream to Amazon Kinesis.
    StreamingConfigurationList:
      type: array
      items:
        $ref: '#/components/schemas/StreamingConfiguration'
    String:
      type: string
    SubChannelId:
      type: string
      pattern: ^[-_a-zA-Z0-9]*$
      minLength: 1
      maxLength: 128
    SubChannelSummary:
      type: object
      properties:
        SubChannelId:
          allOf:
          - $ref: '#/components/schemas/SubChannelId'
          description: The unique ID of a SubChannel.
        MembershipCount:
          allOf:
          - $ref: '#/components/schemas/MembershipCount'
          description: The number of members in a SubChannel.
      description: Summary of the sub-channels associated with the elastic channel.
    SubChannelSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/SubChannelSummary'
    Tag:
      type: object
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/TagKey'
          description: The key in a tag.
        Value:
          allOf:
          - $ref: '#/components/schemas/TagValue'
          description: The value in a tag.
      required:
      - Key
      - Value
      description: A tag object containing a key-value pair.
    TagKey:
      type: string
      minLength: 1
      maxLength: 128
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
    TagList:
      type: array
      items:
        $ref: '#/components/schemas/Tag'
    TagResourceRequest:
      type: object
      properties:
        ResourceARN:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The resource ARN.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: The tag key-value pairs.
      required:
      - ResourceARN
      - Tags
    TagValue:
      type: string
      minLength: 1
      maxLength: 256
    Target:
      type: object
      properties:
        MemberArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the target channel member.
      description: The target of a message, a sender, a user, or a bot. Only the target
        and the sender can view targeted messages. Only users who can see targeted
        messages can take actions on them. However, administrators can delete targeted
        messages that they can’t see.
    TargetList:
      type: array
      items:
        $ref: '#/components/schemas/Target'
    TargetMembershipsPerSubChannel:
      type: integer
      minimum: 2
    ThrottledClientException:
      type: object
      properties:
        Code:
          $ref: '#/components/schemas/ErrorCode'
        Message:
          $ref: '#/components/schemas/String'
      description: The client exceeded its request rate limit.
    Timestamp:
      type: string
      format: date-time
    UnauthorizedClientException:
      type: object
      properties:
        Code:
          $ref: '#/components/schemas/ErrorCode'
        Message:
          $ref: '#/components/schemas/String'
      description: The client is not currently authorized to make the request.
    UntagResourceRequest:
      type: object
      properties:
        ResourceARN:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The resource ARN.
        TagKeys:
          allOf:
          - $ref: '#/components/schemas/TagKeyList'
          description: The tag keys.
      required:
      - ResourceARN
      - TagKeys
    UpdateChannelFlowRequest:
      type: object
      properties:
        ChannelFlowArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the channel flow.
        Processors:
          allOf:
          - $ref: '#/components/schemas/ProcessorList'
          description: Information about the processor Lambda functions
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyResourceName'
          description: The name of the channel flow.
      required:
      - ChannelFlowArn
      - Processors
      - Name
    UpdateChannelFlowResponse:
      type: object
      properties:
        ChannelFlowArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the channel flow.
    UpdateChannelMessageRequest:
      type: object
      properties:
        ChannelArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the channel.
        MessageId:
          allOf:
          - $ref: '#/components/schemas/MessageId'
          description: The ID string of the message being updated.
        Content:
          allOf:
          - $ref: '#/components/schemas/NonEmptyContent'
          description: The content of the channel message.
        Metadata:
          allOf:
          - $ref: '#/components/schemas/Metadata'
          description: The metadata of the message being updated.
        ChimeBearer:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the `AppInstanceUser` or `AppInstanceBot` that makes
            the API call.
        SubChannelId:
          allOf:
          - $ref: '#/components/schemas/SubChannelId'
          description: 'The ID of the SubChannel in the request.


            Only required when updating messages in a SubChannel that the user belongs
            to.'
        ContentType:
          allOf:
          - $ref: '#/components/schemas/ContentType'
          description: The content type of the channel message.
      required:
      - ChannelArn
      - MessageId
      - Content
      - ChimeBearer
    UpdateChannelMessageResponse:
      type: object
      properties:
        ChannelArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the channel.
        MessageId:
          allOf:
          - $ref: '#/components/schemas/MessageId'
          description: The ID string of the message being updated.
        Status:
          allOf:
          - $ref: '#/components/schemas/ChannelMessageStatusStructure'
          description: The status of the message update.
        SubChannelId:
          allOf:
          - $ref: '#/components/schemas/SubChannelId'
          description: The ID of the SubChannel in the response.
    UpdateChannelReadMarkerRequest:
      type: object
      properties:
        ChannelArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the channel.
        ChimeBearer:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the `AppInstanceUser` or `AppInstanceBot` that makes
            the API call.
      required:
      - ChannelArn
      - ChimeBearer
    UpdateChannelReadMarkerResponse:
      type: object
      properties:
        ChannelArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the channel.
    UpdateChannelRequest:
      type: object
      properties:
        ChannelArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the channel.
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyResourceName'
          description: The name of the channel.
        Mode:
          allOf:
          - $ref: '#/components/schemas/ChannelMode'
          description: The mode of the update request.
        Metadata:
          allOf:
          - $ref: '#/components/schemas/Metadata'
          description: The metadata for the update request.
        ChimeBearer:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the `AppInstanceUser` or `AppInstanceBot` that makes
            the API call.
      required:
      - ChannelArn
      - ChimeBearer
    UpdateChannelResponse:
      type: object
      properties:
        ChannelArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the channel.
    UrlType:
      type: string
      minLength: 0
      maxLength: 4096
