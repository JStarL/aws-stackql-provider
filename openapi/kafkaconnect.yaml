openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: kafkaconnect
  x-aws-serviceName: kafkaconnect
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-07'
  version: '2021-09-14'
  title: Managed Streaming for Kafka Connect
  description: ""
servers:
- description: The Managed Streaming for Kafka Connect regional endpoint
  url: https://kafkaconnect.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths:
  /v1/connectors:
    post:
      operationId: CreateConnector
      description: |-
        Creates a connector using the specified properties.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                capacity:
                  $ref: '#/components/schemas/Capacity'
                connectorConfiguration:
                  $ref: '#/components/schemas/ConnectorConfiguration'
                connectorDescription:
                  $ref: '#/components/schemas/__stringMax1024'
                connectorName:
                  $ref: '#/components/schemas/__stringMin1Max128'
                kafkaCluster:
                  $ref: '#/components/schemas/KafkaCluster'
                kafkaClusterClientAuthentication:
                  $ref: '#/components/schemas/KafkaClusterClientAuthentication'
                kafkaClusterEncryptionInTransit:
                  $ref: '#/components/schemas/KafkaClusterEncryptionInTransit'
                kafkaConnectVersion:
                  $ref: '#/components/schemas/__string'
                logDelivery:
                  $ref: '#/components/schemas/LogDelivery'
                plugins:
                  $ref: '#/components/schemas/__listOfPlugin'
                serviceExecutionRoleArn:
                  $ref: '#/components/schemas/__string'
                workerConfiguration:
                  $ref: '#/components/schemas/WorkerConfiguration'
                tags:
                  $ref: '#/components/schemas/Tags'
      responses:
        '200': {}
        '400':
          description: |-
            HTTP Status Code 400: Bad request due to incorrect input. Correct your request and then retry it.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            HTTP Status Code 409: Conflict. A resource with this name already exists. Retry your request with another name.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            HTTP Status Code 403: Access forbidden. Correct your credentials and then retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            HTTP Status Code 500: Unexpected internal server error. Retrying your request might resolve the issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            HTTP Status Code 404: Resource not found due to incorrect input. Correct your request and then retry it.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '503':
          description: |-
            HTTP Status Code 503: Service Unavailable. Retrying your request in some time might resolve the issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            HTTP Status Code 429: Limit exceeded. Resource limit reached.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '401':
          description: |-
            HTTP Status Code 401: Unauthorized request. The provided credentials couldn't be validated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
    get:
      operationId: ListConnectors
      description: |-
        Returns a list of all the connectors in this account and Region. The list is limited to connectors whose name starts with the specified prefix. The response also includes a description of each of the listed connectors.
      parameters:
      - name: connectorNamePrefix
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            HTTP Status Code 400: Bad request due to incorrect input. Correct your request and then retry it.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            HTTP Status Code 403: Access forbidden. Correct your credentials and then retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            HTTP Status Code 500: Unexpected internal server error. Retrying your request might resolve the issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            HTTP Status Code 404: Resource not found due to incorrect input. Correct your request and then retry it.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '503':
          description: |-
            HTTP Status Code 503: Service Unavailable. Retrying your request in some time might resolve the issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            HTTP Status Code 429: Limit exceeded. Resource limit reached.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '401':
          description: |-
            HTTP Status Code 401: Unauthorized request. The provided credentials couldn't be validated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /v1/custom-plugins:
    post:
      operationId: CreateCustomPlugin
      description: |-
        Creates a custom plugin using the specified properties.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                contentType:
                  $ref: '#/components/schemas/CustomPluginContentType'
                description:
                  $ref: '#/components/schemas/__stringMax1024'
                location:
                  $ref: '#/components/schemas/CustomPluginLocation'
                name:
                  $ref: '#/components/schemas/__stringMin1Max128'
                tags:
                  $ref: '#/components/schemas/Tags'
      responses:
        '200': {}
        '400':
          description: |-
            HTTP Status Code 400: Bad request due to incorrect input. Correct your request and then retry it.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            HTTP Status Code 409: Conflict. A resource with this name already exists. Retry your request with another name.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            HTTP Status Code 403: Access forbidden. Correct your credentials and then retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            HTTP Status Code 500: Unexpected internal server error. Retrying your request might resolve the issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            HTTP Status Code 404: Resource not found due to incorrect input. Correct your request and then retry it.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '503':
          description: |-
            HTTP Status Code 503: Service Unavailable. Retrying your request in some time might resolve the issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            HTTP Status Code 429: Limit exceeded. Resource limit reached.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '401':
          description: |-
            HTTP Status Code 401: Unauthorized request. The provided credentials couldn't be validated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
    get:
      operationId: ListCustomPlugins
      description: |-
        Returns a list of all of the custom plugins in this account and Region.
      parameters:
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      - name: namePrefix
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            HTTP Status Code 400: Bad request due to incorrect input. Correct your request and then retry it.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            HTTP Status Code 403: Access forbidden. Correct your credentials and then retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            HTTP Status Code 500: Unexpected internal server error. Retrying your request might resolve the issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            HTTP Status Code 404: Resource not found due to incorrect input. Correct your request and then retry it.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '503':
          description: |-
            HTTP Status Code 503: Service Unavailable. Retrying your request in some time might resolve the issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            HTTP Status Code 429: Limit exceeded. Resource limit reached.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '401':
          description: |-
            HTTP Status Code 401: Unauthorized request. The provided credentials couldn't be validated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /v1/worker-configurations:
    post:
      operationId: CreateWorkerConfiguration
      description: |-
        Creates a worker configuration using the specified properties.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  $ref: '#/components/schemas/__stringMax1024'
                name:
                  $ref: '#/components/schemas/__stringMin1Max128'
                propertiesFileContent:
                  $ref: '#/components/schemas/__sensitiveString'
                tags:
                  $ref: '#/components/schemas/Tags'
      responses:
        '200': {}
        '400':
          description: |-
            HTTP Status Code 400: Bad request due to incorrect input. Correct your request and then retry it.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            HTTP Status Code 409: Conflict. A resource with this name already exists. Retry your request with another name.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            HTTP Status Code 403: Access forbidden. Correct your credentials and then retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            HTTP Status Code 500: Unexpected internal server error. Retrying your request might resolve the issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            HTTP Status Code 404: Resource not found due to incorrect input. Correct your request and then retry it.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '503':
          description: |-
            HTTP Status Code 503: Service Unavailable. Retrying your request in some time might resolve the issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            HTTP Status Code 429: Limit exceeded. Resource limit reached.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '401':
          description: |-
            HTTP Status Code 401: Unauthorized request. The provided credentials couldn't be validated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
    get:
      operationId: ListWorkerConfigurations
      description: |-
        Returns a list of all of the worker configurations in this account and Region.
      parameters:
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      - name: namePrefix
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            HTTP Status Code 400: Bad request due to incorrect input. Correct your request and then retry it.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            HTTP Status Code 403: Access forbidden. Correct your credentials and then retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            HTTP Status Code 500: Unexpected internal server error. Retrying your request might resolve the issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            HTTP Status Code 404: Resource not found due to incorrect input. Correct your request and then retry it.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '503':
          description: |-
            HTTP Status Code 503: Service Unavailable. Retrying your request in some time might resolve the issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            HTTP Status Code 429: Limit exceeded. Resource limit reached.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '401':
          description: |-
            HTTP Status Code 401: Unauthorized request. The provided credentials couldn't be validated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /v1/connectors/{connectorArn}:
    delete:
      operationId: DeleteConnector
      description: |-
        Deletes the specified connector.
      parameters:
      - name: connectorArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: currentVersion
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            HTTP Status Code 400: Bad request due to incorrect input. Correct your request and then retry it.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            HTTP Status Code 403: Access forbidden. Correct your credentials and then retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            HTTP Status Code 500: Unexpected internal server error. Retrying your request might resolve the issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            HTTP Status Code 404: Resource not found due to incorrect input. Correct your request and then retry it.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '503':
          description: |-
            HTTP Status Code 503: Service Unavailable. Retrying your request in some time might resolve the issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            HTTP Status Code 429: Limit exceeded. Resource limit reached.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '401':
          description: |-
            HTTP Status Code 401: Unauthorized request. The provided credentials couldn't be validated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
    get:
      operationId: DescribeConnector
      description: |-
        Returns summary information about the connector.
      parameters:
      - name: connectorArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            HTTP Status Code 400: Bad request due to incorrect input. Correct your request and then retry it.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            HTTP Status Code 403: Access forbidden. Correct your credentials and then retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            HTTP Status Code 500: Unexpected internal server error. Retrying your request might resolve the issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            HTTP Status Code 404: Resource not found due to incorrect input. Correct your request and then retry it.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '503':
          description: |-
            HTTP Status Code 503: Service Unavailable. Retrying your request in some time might resolve the issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            HTTP Status Code 429: Limit exceeded. Resource limit reached.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '401':
          description: |-
            HTTP Status Code 401: Unauthorized request. The provided credentials couldn't be validated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
    put:
      operationId: UpdateConnector
      description: |-
        Updates the specified connector.
      parameters:
      - name: connectorArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: currentVersion
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                capacity:
                  $ref: '#/components/schemas/CapacityUpdate'
                connectorConfiguration:
                  $ref: '#/components/schemas/ConnectorConfigurationUpdate'
      responses:
        '200': {}
        '400':
          description: |-
            HTTP Status Code 400: Bad request due to incorrect input. Correct your request and then retry it.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            HTTP Status Code 403: Access forbidden. Correct your credentials and then retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            HTTP Status Code 500: Unexpected internal server error. Retrying your request might resolve the issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            HTTP Status Code 404: Resource not found due to incorrect input. Correct your request and then retry it.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '503':
          description: |-
            HTTP Status Code 503: Service Unavailable. Retrying your request in some time might resolve the issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            HTTP Status Code 429: Limit exceeded. Resource limit reached.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '401':
          description: |-
            HTTP Status Code 401: Unauthorized request. The provided credentials couldn't be validated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /v1/custom-plugins/{customPluginArn}:
    delete:
      operationId: DeleteCustomPlugin
      description: |-
        Deletes a custom plugin.
      parameters:
      - name: customPluginArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            HTTP Status Code 400: Bad request due to incorrect input. Correct your request and then retry it.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            HTTP Status Code 403: Access forbidden. Correct your credentials and then retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            HTTP Status Code 500: Unexpected internal server error. Retrying your request might resolve the issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            HTTP Status Code 404: Resource not found due to incorrect input. Correct your request and then retry it.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '503':
          description: |-
            HTTP Status Code 503: Service Unavailable. Retrying your request in some time might resolve the issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            HTTP Status Code 429: Limit exceeded. Resource limit reached.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '401':
          description: |-
            HTTP Status Code 401: Unauthorized request. The provided credentials couldn't be validated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
    get:
      operationId: DescribeCustomPlugin
      description: |-
        A summary description of the custom plugin.
      parameters:
      - name: customPluginArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            HTTP Status Code 400: Bad request due to incorrect input. Correct your request and then retry it.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            HTTP Status Code 403: Access forbidden. Correct your credentials and then retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            HTTP Status Code 500: Unexpected internal server error. Retrying your request might resolve the issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            HTTP Status Code 404: Resource not found due to incorrect input. Correct your request and then retry it.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '503':
          description: |-
            HTTP Status Code 503: Service Unavailable. Retrying your request in some time might resolve the issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            HTTP Status Code 429: Limit exceeded. Resource limit reached.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '401':
          description: |-
            HTTP Status Code 401: Unauthorized request. The provided credentials couldn't be validated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /v1/worker-configurations/{workerConfigurationArn}:
    delete:
      operationId: DeleteWorkerConfiguration
      description: |-
        Deletes the specified worker configuration.
      parameters:
      - name: workerConfigurationArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            HTTP Status Code 400: Bad request due to incorrect input. Correct your request and then retry it.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            HTTP Status Code 403: Access forbidden. Correct your credentials and then retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            HTTP Status Code 500: Unexpected internal server error. Retrying your request might resolve the issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            HTTP Status Code 404: Resource not found due to incorrect input. Correct your request and then retry it.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '503':
          description: |-
            HTTP Status Code 503: Service Unavailable. Retrying your request in some time might resolve the issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            HTTP Status Code 429: Limit exceeded. Resource limit reached.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '401':
          description: |-
            HTTP Status Code 401: Unauthorized request. The provided credentials couldn't be validated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
    get:
      operationId: DescribeWorkerConfiguration
      description: |-
        Returns information about a worker configuration.
      parameters:
      - name: workerConfigurationArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            HTTP Status Code 400: Bad request due to incorrect input. Correct your request and then retry it.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            HTTP Status Code 403: Access forbidden. Correct your credentials and then retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            HTTP Status Code 500: Unexpected internal server error. Retrying your request might resolve the issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            HTTP Status Code 404: Resource not found due to incorrect input. Correct your request and then retry it.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '503':
          description: |-
            HTTP Status Code 503: Service Unavailable. Retrying your request in some time might resolve the issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            HTTP Status Code 429: Limit exceeded. Resource limit reached.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '401':
          description: |-
            HTTP Status Code 401: Unauthorized request. The provided credentials couldn't be validated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /v1/connectorOperations/{connectorOperationArn}:
    get:
      operationId: DescribeConnectorOperation
      description: |-
        Returns information about the specified connector's operations.
      parameters:
      - name: connectorOperationArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            HTTP Status Code 400: Bad request due to incorrect input. Correct your request and then retry it.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            HTTP Status Code 403: Access forbidden. Correct your credentials and then retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            HTTP Status Code 500: Unexpected internal server error. Retrying your request might resolve the issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            HTTP Status Code 404: Resource not found due to incorrect input. Correct your request and then retry it.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '503':
          description: |-
            HTTP Status Code 503: Service Unavailable. Retrying your request in some time might resolve the issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            HTTP Status Code 429: Limit exceeded. Resource limit reached.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '401':
          description: |-
            HTTP Status Code 401: Unauthorized request. The provided credentials couldn't be validated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /v1/connectors/{connectorArn}/operations:
    get:
      operationId: ListConnectorOperations
      description: |-
        Lists information about a connector's operation(s).
      parameters:
      - name: connectorArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            HTTP Status Code 400: Bad request due to incorrect input. Correct your request and then retry it.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            HTTP Status Code 403: Access forbidden. Correct your credentials and then retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            HTTP Status Code 500: Unexpected internal server error. Retrying your request might resolve the issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            HTTP Status Code 404: Resource not found due to incorrect input. Correct your request and then retry it.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '503':
          description: |-
            HTTP Status Code 503: Service Unavailable. Retrying your request in some time might resolve the issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            HTTP Status Code 429: Limit exceeded. Resource limit reached.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '401':
          description: |-
            HTTP Status Code 401: Unauthorized request. The provided credentials couldn't be validated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /v1/tags/{resourceArn}:
    get:
      operationId: ListTagsForResource
      description: |-
        Lists all the tags attached to the specified resource.
      parameters:
      - name: resourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            HTTP Status Code 400: Bad request due to incorrect input. Correct your request and then retry it.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            HTTP Status Code 403: Access forbidden. Correct your credentials and then retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            HTTP Status Code 500: Unexpected internal server error. Retrying your request might resolve the issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            HTTP Status Code 404: Resource not found due to incorrect input. Correct your request and then retry it.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '503':
          description: |-
            HTTP Status Code 503: Service Unavailable. Retrying your request in some time might resolve the issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            HTTP Status Code 429: Limit exceeded. Resource limit reached.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '401':
          description: |-
            HTTP Status Code 401: Unauthorized request. The provided credentials couldn't be validated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
    post:
      operationId: TagResource
      description: |-
        Attaches tags to the specified resource.
      parameters:
      - name: resourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tags:
                  $ref: '#/components/schemas/Tags'
      responses:
        '200': {}
        '400':
          description: |-
            HTTP Status Code 400: Bad request due to incorrect input. Correct your request and then retry it.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            HTTP Status Code 409: Conflict. A resource with this name already exists. Retry your request with another name.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            HTTP Status Code 403: Access forbidden. Correct your credentials and then retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            HTTP Status Code 500: Unexpected internal server error. Retrying your request might resolve the issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            HTTP Status Code 404: Resource not found due to incorrect input. Correct your request and then retry it.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '503':
          description: |-
            HTTP Status Code 503: Service Unavailable. Retrying your request in some time might resolve the issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            HTTP Status Code 429: Limit exceeded. Resource limit reached.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '401':
          description: |-
            HTTP Status Code 401: Unauthorized request. The provided credentials couldn't be validated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
    delete:
      operationId: UntagResource
      description: |-
        Removes tags from the specified resource.
      parameters:
      - name: resourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: tagKeys
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/TagKeyList'
      responses:
        '200': {}
        '400':
          description: |-
            HTTP Status Code 400: Bad request due to incorrect input. Correct your request and then retry it.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            HTTP Status Code 403: Access forbidden. Correct your credentials and then retry your request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            HTTP Status Code 500: Unexpected internal server error. Retrying your request might resolve the issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            HTTP Status Code 404: Resource not found due to incorrect input. Correct your request and then retry it.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '503':
          description: |-
            HTTP Status Code 503: Service Unavailable. Retrying your request in some time might resolve the issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            HTTP Status Code 429: Limit exceeded. Resource limit reached.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '401':
          description: |-
            HTTP Status Code 401: Unauthorized request. The provided credentials couldn't be validated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
components:
  schemas:
    ApacheKafkaCluster:
      type: object
      properties:
        bootstrapServers:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The bootstrap servers of the cluster.
        vpc:
          allOf:
          - $ref: '#/components/schemas/Vpc'
          description: Details of an Amazon VPC which has network connectivity to
            the Apache Kafka cluster.
      required:
      - bootstrapServers
      - vpc
      description: The details of the Apache Kafka cluster to which the connector
        is connected.
    ApacheKafkaClusterDescription:
      type: object
      properties:
        bootstrapServers:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The bootstrap servers of the cluster.
        vpc:
          allOf:
          - $ref: '#/components/schemas/VpcDescription'
          description: Details of an Amazon VPC which has network connectivity to
            the Apache Kafka cluster.
      description: The description of the Apache Kafka cluster to which the connector
        is connected.
    AutoScaling:
      type: object
      properties:
        maxWorkerCount:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The maximum number of workers allocated to the connector.
        mcuCount:
          allOf:
          - $ref: '#/components/schemas/__integerMin1Max8'
          description: The number of microcontroller units (MCUs) allocated to each
            connector worker. The valid values are 1,2,4,8.
        minWorkerCount:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The minimum number of workers allocated to the connector.
        scaleInPolicy:
          allOf:
          - $ref: '#/components/schemas/ScaleInPolicy'
          description: The sacle-in policy for the connector.
        scaleOutPolicy:
          allOf:
          - $ref: '#/components/schemas/ScaleOutPolicy'
          description: The sacle-out policy for the connector.
      required:
      - maxWorkerCount
      - mcuCount
      - minWorkerCount
      description: Specifies how the connector scales.
    AutoScalingDescription:
      type: object
      properties:
        maxWorkerCount:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The maximum number of workers allocated to the connector.
        mcuCount:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The number of microcontroller units (MCUs) allocated to each
            connector worker. The valid values are 1,2,4,8.
        minWorkerCount:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The minimum number of workers allocated to the connector.
        scaleInPolicy:
          allOf:
          - $ref: '#/components/schemas/ScaleInPolicyDescription'
          description: The sacle-in policy for the connector.
        scaleOutPolicy:
          allOf:
          - $ref: '#/components/schemas/ScaleOutPolicyDescription'
          description: The sacle-out policy for the connector.>
      description: Information about the auto scaling parameters for the connector.
    AutoScalingUpdate:
      type: object
      properties:
        maxWorkerCount:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The target maximum number of workers allocated to the connector.
        mcuCount:
          allOf:
          - $ref: '#/components/schemas/__integerMin1Max8'
          description: The target number of microcontroller units (MCUs) allocated
            to each connector worker. The valid values are 1,2,4,8.
        minWorkerCount:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The target minimum number of workers allocated to the connector.
        scaleInPolicy:
          allOf:
          - $ref: '#/components/schemas/ScaleInPolicyUpdate'
          description: The target sacle-in policy for the connector.
        scaleOutPolicy:
          allOf:
          - $ref: '#/components/schemas/ScaleOutPolicyUpdate'
          description: The target sacle-out policy for the connector.
      required:
      - maxWorkerCount
      - mcuCount
      - minWorkerCount
      - scaleInPolicy
      - scaleOutPolicy
      description: The updates to the auto scaling parameters for the connector.
    BadRequestException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/__string'
      description: 'HTTP Status Code 400: Bad request due to incorrect input. Correct
        your request and then retry it.'
    Capacity:
      type: object
      properties:
        autoScaling:
          allOf:
          - $ref: '#/components/schemas/AutoScaling'
          description: Information about the auto scaling parameters for the connector.
        provisionedCapacity:
          allOf:
          - $ref: '#/components/schemas/ProvisionedCapacity'
          description: Details about a fixed capacity allocated to a connector.
      description: Information about the capacity of the connector, whether it is
        auto scaled or provisioned.
    CapacityDescription:
      type: object
      properties:
        autoScaling:
          allOf:
          - $ref: '#/components/schemas/AutoScalingDescription'
          description: Describes the connector's auto scaling capacity.
        provisionedCapacity:
          allOf:
          - $ref: '#/components/schemas/ProvisionedCapacityDescription'
          description: Describes a connector's provisioned capacity.
      description: A description of the connector's capacity.
    CapacityUpdate:
      type: object
      properties:
        autoScaling:
          allOf:
          - $ref: '#/components/schemas/AutoScalingUpdate'
          description: The target auto scaling setting.
        provisionedCapacity:
          allOf:
          - $ref: '#/components/schemas/ProvisionedCapacityUpdate'
          description: The target settings for provisioned capacity.
      description: The target capacity for the connector. The capacity can be auto
        scaled or provisioned.
    CloudWatchLogsLogDelivery:
      type: object
      properties:
        enabled:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: Whether log delivery to Amazon CloudWatch Logs is enabled.
        logGroup:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the CloudWatch log group that is the destination
            for log delivery.
      required:
      - enabled
      description: The settings for delivering connector logs to Amazon CloudWatch
        Logs.
    CloudWatchLogsLogDeliveryDescription:
      type: object
      properties:
        enabled:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: Whether log delivery to Amazon CloudWatch Logs is enabled.
        logGroup:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the CloudWatch log group that is the destination
            for log delivery.
      description: A description of the log delivery settings.
    ConflictException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/__string'
      description: 'HTTP Status Code 409: Conflict. A resource with this name already
        exists. Retry your request with another name.'
    ConnectorConfiguration:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/__string'
    ConnectorConfigurationUpdate:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/__string'
    ConnectorOperationState:
      type: string
      enum:
      - PENDING
      - UPDATE_IN_PROGRESS
      - UPDATE_COMPLETE
      - UPDATE_FAILED
      - ROLLBACK_IN_PROGRESS
      - ROLLBACK_FAILED
      - ROLLBACK_COMPLETE
    ConnectorOperationStep:
      type: object
      properties:
        stepType:
          allOf:
          - $ref: '#/components/schemas/ConnectorOperationStepType'
          description: The step type of the operation.
        stepState:
          allOf:
          - $ref: '#/components/schemas/ConnectorOperationStepState'
          description: The step state of the operation.
      description: Details of a step that is involved in a connector's operation.
    ConnectorOperationStepState:
      type: string
      enum:
      - PENDING
      - IN_PROGRESS
      - COMPLETED
      - FAILED
      - CANCELLED
    ConnectorOperationStepType:
      type: string
      enum:
      - INITIALIZE_UPDATE
      - FINALIZE_UPDATE
      - UPDATE_WORKER_SETTING
      - UPDATE_CONNECTOR_CONFIGURATION
      - VALIDATE_UPDATE
    ConnectorOperationSummary:
      type: object
      properties:
        connectorOperationArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the connector operation.
        connectorOperationType:
          allOf:
          - $ref: '#/components/schemas/ConnectorOperationType'
          description: The type of connector operation performed.
        connectorOperationState:
          allOf:
          - $ref: '#/components/schemas/ConnectorOperationState'
          description: The state of the connector operation.
        creationTime:
          allOf:
          - $ref: '#/components/schemas/__timestampIso8601'
          description: The time when operation was created.
        endTime:
          allOf:
          - $ref: '#/components/schemas/__timestampIso8601'
          description: The time when operation ended.
      description: Summary of a connector operation.
    ConnectorOperationType:
      type: string
      enum:
      - UPDATE_WORKER_SETTING
      - UPDATE_CONNECTOR_CONFIGURATION
      - ISOLATE_CONNECTOR
      - RESTORE_CONNECTOR
    ConnectorState:
      type: string
      enum:
      - RUNNING
      - CREATING
      - UPDATING
      - DELETING
      - FAILED
    ConnectorSummary:
      type: object
      properties:
        capacity:
          allOf:
          - $ref: '#/components/schemas/CapacityDescription'
          description: The connector's compute capacity settings.
        connectorArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the connector.
        connectorDescription:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The description of the connector.
        connectorName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the connector.
        connectorState:
          allOf:
          - $ref: '#/components/schemas/ConnectorState'
          description: The state of the connector.
        creationTime:
          allOf:
          - $ref: '#/components/schemas/__timestampIso8601'
          description: The time that the connector was created.
        currentVersion:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The current version of the connector.
        kafkaCluster:
          allOf:
          - $ref: '#/components/schemas/KafkaClusterDescription'
          description: The details of the Apache Kafka cluster to which the connector
            is connected.
        kafkaClusterClientAuthentication:
          allOf:
          - $ref: '#/components/schemas/KafkaClusterClientAuthenticationDescription'
          description: The type of client authentication used to connect to the Apache
            Kafka cluster. The value is NONE when no client authentication is used.
        kafkaClusterEncryptionInTransit:
          allOf:
          - $ref: '#/components/schemas/KafkaClusterEncryptionInTransitDescription'
          description: Details of encryption in transit to the Apache Kafka cluster.
        kafkaConnectVersion:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The version of Kafka Connect. It has to be compatible with
            both the Apache Kafka cluster's version and the plugins.
        logDelivery:
          allOf:
          - $ref: '#/components/schemas/LogDeliveryDescription'
          description: The settings for delivering connector logs to Amazon CloudWatch
            Logs.
        plugins:
          allOf:
          - $ref: '#/components/schemas/__listOfPluginDescription'
          description: Specifies which plugins were used for this connector.
        serviceExecutionRoleArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the IAM role used by the
            connector to access Amazon Web Services resources.
        workerConfiguration:
          allOf:
          - $ref: '#/components/schemas/WorkerConfigurationDescription'
          description: The worker configurations that are in use with the connector.
      description: Summary of a connector.
    CreateConnectorRequest:
      type: object
      properties:
        capacity:
          allOf:
          - $ref: '#/components/schemas/Capacity'
          description: Information about the capacity allocated to the connector.
            Exactly one of the two properties must be specified.
        connectorConfiguration:
          allOf:
          - $ref: '#/components/schemas/ConnectorConfiguration'
          description: A map of keys to values that represent the configuration for
            the connector.
        connectorDescription:
          allOf:
          - $ref: '#/components/schemas/__stringMax1024'
          description: A summary description of the connector.
        connectorName:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max128'
          description: The name of the connector.
        kafkaCluster:
          allOf:
          - $ref: '#/components/schemas/KafkaCluster'
          description: Specifies which Apache Kafka cluster to connect to.
        kafkaClusterClientAuthentication:
          allOf:
          - $ref: '#/components/schemas/KafkaClusterClientAuthentication'
          description: Details of the client authentication used by the Apache Kafka
            cluster.
        kafkaClusterEncryptionInTransit:
          allOf:
          - $ref: '#/components/schemas/KafkaClusterEncryptionInTransit'
          description: Details of encryption in transit to the Apache Kafka cluster.
        kafkaConnectVersion:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The version of Kafka Connect. It has to be compatible with
            both the Apache Kafka cluster's version and the plugins.
        logDelivery:
          allOf:
          - $ref: '#/components/schemas/LogDelivery'
          description: Details about log delivery.
        plugins:
          allOf:
          - $ref: '#/components/schemas/__listOfPlugin'
          description: 'Amazon MSK Connect does not currently support specifying multiple
            plugins as a list. To use more than one plugin for your connector, you
            can create a single custom plugin using a ZIP file that bundles multiple
            plugins together.


            Specifies which plugin to use for the connector. You must specify a single-element
            list containing one `customPlugin` object.'
        serviceExecutionRoleArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the IAM role used by the
            connector to access the Amazon Web Services resources that it needs. The
            types of resources depends on the logic of the connector. For example,
            a connector that has Amazon S3 as a destination must have permissions
            that allow it to write to the S3 destination bucket.
        workerConfiguration:
          allOf:
          - $ref: '#/components/schemas/WorkerConfiguration'
          description: Specifies which worker configuration to use with the connector.
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: The tags you want to attach to the connector.
      required:
      - capacity
      - connectorConfiguration
      - connectorName
      - kafkaCluster
      - kafkaClusterClientAuthentication
      - kafkaClusterEncryptionInTransit
      - kafkaConnectVersion
      - plugins
      - serviceExecutionRoleArn
    CreateConnectorResponse:
      type: object
      properties:
        connectorArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) that Amazon assigned to the
            connector.
        connectorName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the connector.
        connectorState:
          allOf:
          - $ref: '#/components/schemas/ConnectorState'
          description: The state of the connector.
    CreateCustomPluginRequest:
      type: object
      properties:
        contentType:
          allOf:
          - $ref: '#/components/schemas/CustomPluginContentType'
          description: The type of the plugin file.
        description:
          allOf:
          - $ref: '#/components/schemas/__stringMax1024'
          description: A summary description of the custom plugin.
        location:
          allOf:
          - $ref: '#/components/schemas/CustomPluginLocation'
          description: Information about the location of a custom plugin.
        name:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max128'
          description: The name of the custom plugin.
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: The tags you want to attach to the custom plugin.
      required:
      - contentType
      - location
      - name
    CreateCustomPluginResponse:
      type: object
      properties:
        customPluginArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) that Amazon assigned to the
            custom plugin.
        customPluginState:
          allOf:
          - $ref: '#/components/schemas/CustomPluginState'
          description: The state of the custom plugin.
        name:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the custom plugin.
        revision:
          allOf:
          - $ref: '#/components/schemas/__long'
          description: The revision of the custom plugin.
    CreateWorkerConfigurationRequest:
      type: object
      properties:
        description:
          allOf:
          - $ref: '#/components/schemas/__stringMax1024'
          description: A summary description of the worker configuration.
        name:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max128'
          description: The name of the worker configuration.
        propertiesFileContent:
          allOf:
          - $ref: '#/components/schemas/__sensitiveString'
          description: Base64 encoded contents of connect-distributed.properties file.
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: The tags you want to attach to the worker configuration.
      required:
      - name
      - propertiesFileContent
    CreateWorkerConfigurationResponse:
      type: object
      properties:
        creationTime:
          allOf:
          - $ref: '#/components/schemas/__timestampIso8601'
          description: The time that the worker configuration was created.
        latestRevision:
          allOf:
          - $ref: '#/components/schemas/WorkerConfigurationRevisionSummary'
          description: The latest revision of the worker configuration.
        name:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the worker configuration.
        workerConfigurationArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) that Amazon assigned to the
            worker configuration.
        workerConfigurationState:
          allOf:
          - $ref: '#/components/schemas/WorkerConfigurationState'
          description: The state of the worker configuration.
    CustomPlugin:
      type: object
      properties:
        customPluginArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the custom plugin.
        revision:
          allOf:
          - $ref: '#/components/schemas/__longMin1'
          description: The revision of the custom plugin.
      required:
      - customPluginArn
      - revision
      description: A plugin is an Amazon Web Services resource that contains the code
        that defines a connector's logic.
    CustomPluginContentType:
      type: string
      enum:
      - JAR
      - ZIP
    CustomPluginDescription:
      type: object
      properties:
        customPluginArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the custom plugin.
        revision:
          allOf:
          - $ref: '#/components/schemas/__long'
          description: The revision of the custom plugin.
      description: Details about a custom plugin.
    CustomPluginFileDescription:
      type: object
      properties:
        fileMd5:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The hex-encoded MD5 checksum of the custom plugin file. You
            can use it to validate the file.
        fileSize:
          allOf:
          - $ref: '#/components/schemas/__long'
          description: The size in bytes of the custom plugin file. You can use it
            to validate the file.
      description: Details about a custom plugin file.
    CustomPluginLocation:
      type: object
      properties:
        s3Location:
          allOf:
          - $ref: '#/components/schemas/S3Location'
          description: The S3 bucket Amazon Resource Name (ARN), file key, and object
            version of the plugin file stored in Amazon S3.
      required:
      - s3Location
      description: Information about the location of a custom plugin.
    CustomPluginLocationDescription:
      type: object
      properties:
        s3Location:
          allOf:
          - $ref: '#/components/schemas/S3LocationDescription'
          description: The S3 bucket Amazon Resource Name (ARN), file key, and object
            version of the plugin file stored in Amazon S3.
      description: Information about the location of a custom plugin.
    CustomPluginRevisionSummary:
      type: object
      properties:
        contentType:
          allOf:
          - $ref: '#/components/schemas/CustomPluginContentType'
          description: The format of the plugin file.
        creationTime:
          allOf:
          - $ref: '#/components/schemas/__timestampIso8601'
          description: The time that the custom plugin was created.
        description:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The description of the custom plugin.
        fileDescription:
          allOf:
          - $ref: '#/components/schemas/CustomPluginFileDescription'
          description: Details about the custom plugin file.
        location:
          allOf:
          - $ref: '#/components/schemas/CustomPluginLocationDescription'
          description: Information about the location of the custom plugin.
        revision:
          allOf:
          - $ref: '#/components/schemas/__long'
          description: The revision of the custom plugin.
      description: Details about the revision of a custom plugin.
    CustomPluginState:
      type: string
      enum:
      - CREATING
      - CREATE_FAILED
      - ACTIVE
      - UPDATING
      - UPDATE_FAILED
      - DELETING
    CustomPluginSummary:
      type: object
      properties:
        creationTime:
          allOf:
          - $ref: '#/components/schemas/__timestampIso8601'
          description: The time that the custom plugin was created.
        customPluginArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the custom plugin.
        customPluginState:
          allOf:
          - $ref: '#/components/schemas/CustomPluginState'
          description: The state of the custom plugin.
        description:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A description of the custom plugin.
        latestRevision:
          allOf:
          - $ref: '#/components/schemas/CustomPluginRevisionSummary'
          description: The latest revision of the custom plugin.
        name:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the custom plugin.
      description: A summary of the custom plugin.
    DeleteConnectorRequest:
      type: object
      properties:
        connectorArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the connector that you want
            to delete.
        currentVersion:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The current version of the connector that you want to delete.
      required:
      - connectorArn
    DeleteConnectorResponse:
      type: object
      properties:
        connectorArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the connector that you requested
            to delete.
        connectorState:
          allOf:
          - $ref: '#/components/schemas/ConnectorState'
          description: The state of the connector that you requested to delete.
    DeleteCustomPluginRequest:
      type: object
      properties:
        customPluginArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the custom plugin that you
            want to delete.
      required:
      - customPluginArn
    DeleteCustomPluginResponse:
      type: object
      properties:
        customPluginArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the custom plugin that you
            requested to delete.
        customPluginState:
          allOf:
          - $ref: '#/components/schemas/CustomPluginState'
          description: The state of the custom plugin.
    DeleteWorkerConfigurationRequest:
      type: object
      properties:
        workerConfigurationArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the worker configuration
            that you want to delete.
      required:
      - workerConfigurationArn
    DeleteWorkerConfigurationResponse:
      type: object
      properties:
        workerConfigurationArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the worker configuration
            that you requested to delete.
        workerConfigurationState:
          allOf:
          - $ref: '#/components/schemas/WorkerConfigurationState'
          description: The state of the worker configuration.
    DescribeConnectorOperationRequest:
      type: object
      properties:
        connectorOperationArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: ARN of the connector operation to be described.
      required:
      - connectorOperationArn
    DescribeConnectorOperationResponse:
      type: object
      properties:
        connectorArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the connector.
        connectorOperationArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the connector operation.
        connectorOperationState:
          allOf:
          - $ref: '#/components/schemas/ConnectorOperationState'
          description: The state of the connector operation.
        connectorOperationType:
          allOf:
          - $ref: '#/components/schemas/ConnectorOperationType'
          description: The type of connector operation performed.
        operationSteps:
          allOf:
          - $ref: '#/components/schemas/__listOfConnectorOperationStep'
          description: The array of operation steps taken.
        originWorkerSetting:
          allOf:
          - $ref: '#/components/schemas/WorkerSetting'
          description: The origin worker setting.
        originConnectorConfiguration:
          allOf:
          - $ref: '#/components/schemas/ConnectorConfiguration'
          description: The origin connector configuration.
        targetWorkerSetting:
          allOf:
          - $ref: '#/components/schemas/WorkerSetting'
          description: The target worker setting.
        targetConnectorConfiguration:
          allOf:
          - $ref: '#/components/schemas/ConnectorConfiguration'
          description: The target connector configuration.
        errorInfo:
          $ref: '#/components/schemas/StateDescription'
        creationTime:
          allOf:
          - $ref: '#/components/schemas/__timestampIso8601'
          description: The time when the operation was created.
        endTime:
          allOf:
          - $ref: '#/components/schemas/__timestampIso8601'
          description: The time when the operation ended.
    DescribeConnectorRequest:
      type: object
      properties:
        connectorArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the connector that you want
            to describe.
      required:
      - connectorArn
    DescribeConnectorResponse:
      type: object
      properties:
        capacity:
          allOf:
          - $ref: '#/components/schemas/CapacityDescription'
          description: Information about the capacity of the connector, whether it
            is auto scaled or provisioned.
        connectorArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the connector.
        connectorConfiguration:
          allOf:
          - $ref: '#/components/schemas/ConnectorConfiguration'
          description: A map of keys to values that represent the configuration for
            the connector.
        connectorDescription:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A summary description of the connector.
        connectorName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the connector.
        connectorState:
          allOf:
          - $ref: '#/components/schemas/ConnectorState'
          description: The state of the connector.
        creationTime:
          allOf:
          - $ref: '#/components/schemas/__timestampIso8601'
          description: The time the connector was created.
        currentVersion:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The current version of the connector.
        kafkaCluster:
          allOf:
          - $ref: '#/components/schemas/KafkaClusterDescription'
          description: The Apache Kafka cluster that the connector is connected to.
        kafkaClusterClientAuthentication:
          allOf:
          - $ref: '#/components/schemas/KafkaClusterClientAuthenticationDescription'
          description: The type of client authentication used to connect to the Apache
            Kafka cluster. The value is NONE when no client authentication is used.
        kafkaClusterEncryptionInTransit:
          allOf:
          - $ref: '#/components/schemas/KafkaClusterEncryptionInTransitDescription'
          description: Details of encryption in transit to the Apache Kafka cluster.
        kafkaConnectVersion:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The version of Kafka Connect. It has to be compatible with
            both the Apache Kafka cluster's version and the plugins.
        logDelivery:
          allOf:
          - $ref: '#/components/schemas/LogDeliveryDescription'
          description: Details about delivering logs to Amazon CloudWatch Logs.
        plugins:
          allOf:
          - $ref: '#/components/schemas/__listOfPluginDescription'
          description: Specifies which plugins were used for this connector.
        serviceExecutionRoleArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the IAM role used by the
            connector to access Amazon Web Services resources.
        workerConfiguration:
          allOf:
          - $ref: '#/components/schemas/WorkerConfigurationDescription'
          description: Specifies which worker configuration was used for the connector.
        stateDescription:
          allOf:
          - $ref: '#/components/schemas/StateDescription'
          description: Details about the state of a connector.
    DescribeCustomPluginRequest:
      type: object
      properties:
        customPluginArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Returns information about a custom plugin.
      required:
      - customPluginArn
    DescribeCustomPluginResponse:
      type: object
      properties:
        creationTime:
          allOf:
          - $ref: '#/components/schemas/__timestampIso8601'
          description: The time that the custom plugin was created.
        customPluginArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the custom plugin.
        customPluginState:
          allOf:
          - $ref: '#/components/schemas/CustomPluginState'
          description: The state of the custom plugin.
        description:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The description of the custom plugin.
        latestRevision:
          allOf:
          - $ref: '#/components/schemas/CustomPluginRevisionSummary'
          description: The latest successfully created revision of the custom plugin.
            If there are no successfully created revisions, this field will be absent.
        name:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the custom plugin.
        stateDescription:
          allOf:
          - $ref: '#/components/schemas/StateDescription'
          description: Details about the state of a custom plugin.
    DescribeWorkerConfigurationRequest:
      type: object
      properties:
        workerConfigurationArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the worker configuration
            that you want to get information about.
      required:
      - workerConfigurationArn
    DescribeWorkerConfigurationResponse:
      type: object
      properties:
        creationTime:
          allOf:
          - $ref: '#/components/schemas/__timestampIso8601'
          description: The time that the worker configuration was created.
        description:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The description of the worker configuration.
        latestRevision:
          allOf:
          - $ref: '#/components/schemas/WorkerConfigurationRevisionDescription'
          description: The latest revision of the custom configuration.
        name:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the worker configuration.
        workerConfigurationArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the custom configuration.
        workerConfigurationState:
          allOf:
          - $ref: '#/components/schemas/WorkerConfigurationState'
          description: The state of the worker configuration.
    FirehoseLogDelivery:
      type: object
      properties:
        deliveryStream:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the Kinesis Data Firehose delivery stream that
            is the destination for log delivery.
        enabled:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: Specifies whether connector logs get delivered to Amazon Kinesis
            Data Firehose.
      required:
      - enabled
      description: The settings for delivering logs to Amazon Kinesis Data Firehose.
    FirehoseLogDeliveryDescription:
      type: object
      properties:
        deliveryStream:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the Kinesis Data Firehose delivery stream that
            is the destination for log delivery.
        enabled:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: Specifies whether connector logs get delivered to Amazon Kinesis
            Data Firehose.
      description: A description of the settings for delivering logs to Amazon Kinesis
        Data Firehose.
    ForbiddenException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/__string'
      description: 'HTTP Status Code 403: Access forbidden. Correct your credentials
        and then retry your request.'
    InternalServerErrorException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/__string'
      description: 'HTTP Status Code 500: Unexpected internal server error. Retrying
        your request might resolve the issue.'
    KafkaCluster:
      type: object
      properties:
        apacheKafkaCluster:
          allOf:
          - $ref: '#/components/schemas/ApacheKafkaCluster'
          description: The Apache Kafka cluster to which the connector is connected.
      required:
      - apacheKafkaCluster
      description: The details of the Apache Kafka cluster to which the connector
        is connected.
    KafkaClusterClientAuthentication:
      type: object
      properties:
        authenticationType:
          allOf:
          - $ref: '#/components/schemas/KafkaClusterClientAuthenticationType'
          description: The type of client authentication used to connect to the Apache
            Kafka cluster. Value NONE means that no client authentication is used.
      required:
      - authenticationType
      description: The client authentication information used in order to authenticate
        with the Apache Kafka cluster.
    KafkaClusterClientAuthenticationDescription:
      type: object
      properties:
        authenticationType:
          allOf:
          - $ref: '#/components/schemas/KafkaClusterClientAuthenticationType'
          description: The type of client authentication used to connect to the Apache
            Kafka cluster. Value NONE means that no client authentication is used.
      description: The client authentication information used in order to authenticate
        with the Apache Kafka cluster.
    KafkaClusterClientAuthenticationType:
      type: string
      enum:
      - NONE
      - IAM
    KafkaClusterDescription:
      type: object
      properties:
        apacheKafkaCluster:
          allOf:
          - $ref: '#/components/schemas/ApacheKafkaClusterDescription'
          description: The Apache Kafka cluster to which the connector is connected.
      description: Details of how to connect to the Apache Kafka cluster.
    KafkaClusterEncryptionInTransit:
      type: object
      properties:
        encryptionType:
          allOf:
          - $ref: '#/components/schemas/KafkaClusterEncryptionInTransitType'
          description: The type of encryption in transit to the Apache Kafka cluster.
      required:
      - encryptionType
      description: Details of encryption in transit to the Apache Kafka cluster.
    KafkaClusterEncryptionInTransitDescription:
      type: object
      properties:
        encryptionType:
          allOf:
          - $ref: '#/components/schemas/KafkaClusterEncryptionInTransitType'
          description: The type of encryption in transit to the Apache Kafka cluster.
      description: The description of the encryption in transit to the Apache Kafka
        cluster.
    KafkaClusterEncryptionInTransitType:
      type: string
      enum:
      - PLAINTEXT
      - TLS
    ListConnectorOperationsRequest:
      type: object
      properties:
        connectorArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the connector for which to
            list operations.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: Maximum number of connector operations to fetch in one get
            request.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: If the response is truncated, it includes a NextToken. Send
            this NextToken in a subsequent request to continue listing from where
            it left off.
      required:
      - connectorArn
    ListConnectorOperationsResponse:
      type: object
      properties:
        connectorOperations:
          allOf:
          - $ref: '#/components/schemas/__listOfConnectorOperationSummary'
          description: An array of connector operation descriptions.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: If the response is truncated, it includes a NextToken. Send
            this NextToken in a subsequent request to continue listing from where
            it left off.
    ListConnectorsRequest:
      type: object
      properties:
        connectorNamePrefix:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name prefix that you want to use to search for and list
            connectors.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of connectors to list in one response.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: If the response of a ListConnectors operation is truncated,
            it will include a NextToken. Send this NextToken in a subsequent request
            to continue listing from where the previous operation left off.
    ListConnectorsResponse:
      type: object
      properties:
        connectors:
          allOf:
          - $ref: '#/components/schemas/__listOfConnectorSummary'
          description: An array of connector descriptions.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: If the response of a ListConnectors operation is truncated,
            it will include a NextToken. Send this NextToken in a subsequent request
            to continue listing from where it left off.
    ListCustomPluginsRequest:
      type: object
      properties:
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of custom plugins to list in one response.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: If the response of a ListCustomPlugins operation is truncated,
            it will include a NextToken. Send this NextToken in a subsequent request
            to continue listing from where the previous operation left off.
        namePrefix:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Lists custom plugin names that start with the specified text
            string.
    ListCustomPluginsResponse:
      type: object
      properties:
        customPlugins:
          allOf:
          - $ref: '#/components/schemas/__listOfCustomPluginSummary'
          description: An array of custom plugin descriptions.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: If the response of a ListCustomPlugins operation is truncated,
            it will include a NextToken. Send this NextToken in a subsequent request
            to continue listing from where the previous operation left off.
    ListTagsForResourceRequest:
      type: object
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the resource for which you
            want to list all attached tags.
      required:
      - resourceArn
    ListTagsForResourceResponse:
      type: object
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: Lists the tags attached to the specified resource in the corresponding
            request.
    ListWorkerConfigurationsRequest:
      type: object
      properties:
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of worker configurations to list in one
            response.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: If the response of a ListWorkerConfigurations operation is
            truncated, it will include a NextToken. Send this NextToken in a subsequent
            request to continue listing from where the previous operation left off.
        namePrefix:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Lists worker configuration names that start with the specified
            text string.
    ListWorkerConfigurationsResponse:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: If the response of a ListWorkerConfigurations operation is
            truncated, it will include a NextToken. Send this NextToken in a subsequent
            request to continue listing from where the previous operation left off.
        workerConfigurations:
          allOf:
          - $ref: '#/components/schemas/__listOfWorkerConfigurationSummary'
          description: An array of worker configuration descriptions.
    LogDelivery:
      type: object
      properties:
        workerLogDelivery:
          allOf:
          - $ref: '#/components/schemas/WorkerLogDelivery'
          description: The workers can send worker logs to different destination types.
            This configuration specifies the details of these destinations.
      required:
      - workerLogDelivery
      description: Details about log delivery.
    LogDeliveryDescription:
      type: object
      properties:
        workerLogDelivery:
          allOf:
          - $ref: '#/components/schemas/WorkerLogDeliveryDescription'
          description: The workers can send worker logs to different destination types.
            This configuration specifies the details of these destinations.
      description: The description of the log delivery settings.
    MaxResults:
      type: integer
      minimum: 1
      maximum: 100
    NotFoundException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/__string'
      description: 'HTTP Status Code 404: Resource not found due to incorrect input.
        Correct your request and then retry it.'
    Plugin:
      type: object
      properties:
        customPlugin:
          allOf:
          - $ref: '#/components/schemas/CustomPlugin'
          description: Details about a custom plugin.
      required:
      - customPlugin
      description: A plugin is an Amazon Web Services resource that contains the code
        that defines your connector logic.
    PluginDescription:
      type: object
      properties:
        customPlugin:
          allOf:
          - $ref: '#/components/schemas/CustomPluginDescription'
          description: Details about a custom plugin.
      description: The description of the plugin.
    ProvisionedCapacity:
      type: object
      properties:
        mcuCount:
          allOf:
          - $ref: '#/components/schemas/__integerMin1Max8'
          description: The number of microcontroller units (MCUs) allocated to each
            connector worker. The valid values are 1,2,4,8.
        workerCount:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The number of workers that are allocated to the connector.
      required:
      - mcuCount
      - workerCount
      description: Details about a connector's provisioned capacity.
    ProvisionedCapacityDescription:
      type: object
      properties:
        mcuCount:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The number of microcontroller units (MCUs) allocated to each
            connector worker. The valid values are 1,2,4,8.
        workerCount:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The number of workers that are allocated to the connector.
      description: The description of a connector's provisioned capacity.
    ProvisionedCapacityUpdate:
      type: object
      properties:
        mcuCount:
          allOf:
          - $ref: '#/components/schemas/__integerMin1Max8'
          description: The number of microcontroller units (MCUs) allocated to each
            connector worker. The valid values are 1,2,4,8.
        workerCount:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The number of workers that are allocated to the connector.
      required:
      - mcuCount
      - workerCount
      description: An update to a connector's fixed capacity.
    S3Location:
      type: object
      properties:
        bucketArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of an S3 bucket.
        fileKey:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The file key for an object in an S3 bucket.
        objectVersion:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The version of an object in an S3 bucket.
      required:
      - bucketArn
      - fileKey
      description: The location of an object in Amazon S3.
    S3LocationDescription:
      type: object
      properties:
        bucketArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of an S3 bucket.
        fileKey:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The file key for an object in an S3 bucket.
        objectVersion:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The version of an object in an S3 bucket.
      description: The description of the location of an object in Amazon S3.
    S3LogDelivery:
      type: object
      properties:
        bucket:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the S3 bucket that is the destination for log delivery.
        enabled:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: Specifies whether connector logs get sent to the specified
            Amazon S3 destination.
        prefix:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The S3 prefix that is the destination for log delivery.
      required:
      - enabled
      description: Details about delivering logs to Amazon S3.
    S3LogDeliveryDescription:
      type: object
      properties:
        bucket:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the S3 bucket that is the destination for log delivery.
        enabled:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: Specifies whether connector logs get sent to the specified
            Amazon S3 destination.
        prefix:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The S3 prefix that is the destination for log delivery.
      description: The description of the details about delivering logs to Amazon
        S3.
    ScaleInPolicy:
      type: object
      properties:
        cpuUtilizationPercentage:
          allOf:
          - $ref: '#/components/schemas/__integerMin1Max100'
          description: Specifies the CPU utilization percentage threshold at which
            you want connector scale in to be triggered.
      required:
      - cpuUtilizationPercentage
      description: The scale-in policy for the connector.
    ScaleInPolicyDescription:
      type: object
      properties:
        cpuUtilizationPercentage:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: Specifies the CPU utilization percentage threshold at which
            you want connector scale in to be triggered.
      description: The description of the scale-in policy for the connector.
    ScaleInPolicyUpdate:
      type: object
      properties:
        cpuUtilizationPercentage:
          allOf:
          - $ref: '#/components/schemas/__integerMin1Max100'
          description: The target CPU utilization percentage threshold at which you
            want connector scale in to be triggered.
      required:
      - cpuUtilizationPercentage
      description: An update to the connector's scale-in policy.
    ScaleOutPolicy:
      type: object
      properties:
        cpuUtilizationPercentage:
          allOf:
          - $ref: '#/components/schemas/__integerMin1Max100'
          description: The CPU utilization percentage threshold at which you want
            connector scale out to be triggered.
      required:
      - cpuUtilizationPercentage
      description: The scale-out policy for the connector.
    ScaleOutPolicyDescription:
      type: object
      properties:
        cpuUtilizationPercentage:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The CPU utilization percentage threshold at which you want
            connector scale out to be triggered.
      description: The description of the scale-out policy for the connector.
    ScaleOutPolicyUpdate:
      type: object
      properties:
        cpuUtilizationPercentage:
          allOf:
          - $ref: '#/components/schemas/__integerMin1Max100'
          description: The target CPU utilization percentage threshold at which you
            want connector scale out to be triggered.
      required:
      - cpuUtilizationPercentage
      description: An update to the connector's scale-out policy.
    ServiceUnavailableException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/__string'
      description: 'HTTP Status Code 503: Service Unavailable. Retrying your request
        in some time might resolve the issue.'
    StateDescription:
      type: object
      properties:
        code:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A code that describes the state of a resource.
        message:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A message that describes the state of a resource.
      description: Details about the state of a resource.
    TagKey:
      type: string
      minLength: 1
      maxLength: 128
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
    TagResourceRequest:
      type: object
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the resource to which you
            want to attach tags.
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: The tags that you want to attach to the resource.
      required:
      - resourceArn
      - tags
    TagResourceResponse:
      type: object
      properties: {}
    TagValue:
      type: string
      minLength: 0
      maxLength: 256
    Tags:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
    TooManyRequestsException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/__string'
      description: 'HTTP Status Code 429: Limit exceeded. Resource limit reached.'
    UnauthorizedException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/__string'
      description: 'HTTP Status Code 401: Unauthorized request. The provided credentials
        couldn''t be validated.'
    UntagResourceRequest:
      type: object
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the resource from which you
            want to remove tags.
        tagKeys:
          allOf:
          - $ref: '#/components/schemas/TagKeyList'
          description: The keys of the tags that you want to remove from the resource.
      required:
      - resourceArn
      - tagKeys
    UntagResourceResponse:
      type: object
      properties: {}
    UpdateConnectorRequest:
      type: object
      properties:
        capacity:
          allOf:
          - $ref: '#/components/schemas/CapacityUpdate'
          description: The target capacity.
        connectorConfiguration:
          allOf:
          - $ref: '#/components/schemas/ConnectorConfigurationUpdate'
          description: A map of keys to values that represent the configuration for
            the connector.
        connectorArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the connector that you want
            to update.
        currentVersion:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The current version of the connector that you want to update.
      required:
      - connectorArn
      - currentVersion
    UpdateConnectorResponse:
      type: object
      properties:
        connectorArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the connector.
        connectorState:
          allOf:
          - $ref: '#/components/schemas/ConnectorState'
          description: The state of the connector.
        connectorOperationArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the connector operation.
    Vpc:
      type: object
      properties:
        securityGroups:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: The security groups for the connector.
        subnets:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: The subnets for the connector.
      required:
      - subnets
      description: Information about the VPC in which the connector resides.
    VpcDescription:
      type: object
      properties:
        securityGroups:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: The security groups for the connector.
        subnets:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: The subnets for the connector.
      description: The description of the VPC in which the connector resides.
    WorkerConfiguration:
      type: object
      properties:
        revision:
          allOf:
          - $ref: '#/components/schemas/__longMin1'
          description: The revision of the worker configuration.
        workerConfigurationArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the worker configuration.
      required:
      - revision
      - workerConfigurationArn
      description: The configuration of the workers, which are the processes that
        run the connector logic.
    WorkerConfigurationDescription:
      type: object
      properties:
        revision:
          allOf:
          - $ref: '#/components/schemas/__long'
          description: The revision of the worker configuration.
        workerConfigurationArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the worker configuration.
      description: The description of the worker configuration.
    WorkerConfigurationRevisionDescription:
      type: object
      properties:
        creationTime:
          allOf:
          - $ref: '#/components/schemas/__timestampIso8601'
          description: The time that the worker configuration was created.
        description:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The description of the worker configuration revision.
        propertiesFileContent:
          allOf:
          - $ref: '#/components/schemas/__sensitiveString'
          description: Base64 encoded contents of the connect-distributed.properties
            file.
        revision:
          allOf:
          - $ref: '#/components/schemas/__long'
          description: The description of a revision of the worker configuration.
      description: The description of the worker configuration revision.
    WorkerConfigurationRevisionSummary:
      type: object
      properties:
        creationTime:
          allOf:
          - $ref: '#/components/schemas/__timestampIso8601'
          description: The time that a worker configuration revision was created.
        description:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The description of a worker configuration revision.
        revision:
          allOf:
          - $ref: '#/components/schemas/__long'
          description: The revision of a worker configuration.
      description: The summary of a worker configuration revision.
    WorkerConfigurationState:
      type: string
      enum:
      - ACTIVE
      - DELETING
    WorkerConfigurationSummary:
      type: object
      properties:
        creationTime:
          allOf:
          - $ref: '#/components/schemas/__timestampIso8601'
          description: The time that a worker configuration was created.
        description:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The description of a worker configuration.
        latestRevision:
          allOf:
          - $ref: '#/components/schemas/WorkerConfigurationRevisionSummary'
          description: The latest revision of a worker configuration.
        name:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the worker configuration.
        workerConfigurationArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the worker configuration.
        workerConfigurationState:
          allOf:
          - $ref: '#/components/schemas/WorkerConfigurationState'
          description: The state of the worker configuration.
      description: The summary of a worker configuration.
    WorkerLogDelivery:
      type: object
      properties:
        cloudWatchLogs:
          allOf:
          - $ref: '#/components/schemas/CloudWatchLogsLogDelivery'
          description: Details about delivering logs to Amazon CloudWatch Logs.
        firehose:
          allOf:
          - $ref: '#/components/schemas/FirehoseLogDelivery'
          description: Details about delivering logs to Amazon Kinesis Data Firehose.
        s3:
          allOf:
          - $ref: '#/components/schemas/S3LogDelivery'
          description: Details about delivering logs to Amazon S3.
      description: Workers can send worker logs to different destination types. This
        configuration specifies the details of these destinations.
    WorkerLogDeliveryDescription:
      type: object
      properties:
        cloudWatchLogs:
          allOf:
          - $ref: '#/components/schemas/CloudWatchLogsLogDeliveryDescription'
          description: Details about delivering logs to Amazon CloudWatch Logs.
        firehose:
          allOf:
          - $ref: '#/components/schemas/FirehoseLogDeliveryDescription'
          description: Details about delivering logs to Amazon Kinesis Data Firehose.
        s3:
          allOf:
          - $ref: '#/components/schemas/S3LogDeliveryDescription'
          description: Details about delivering logs to Amazon S3.
      description: Workers can send worker logs to different destination types. This
        configuration specifies the details of these destinations.
    WorkerSetting:
      type: object
      properties:
        capacity:
          $ref: '#/components/schemas/CapacityDescription'
      description: Details about worker setting of a connector
    __boolean:
      type: boolean
      default: false
    __integer:
      type: integer
      default: 0
    __integerMin1Max100:
      type: integer
      default: 0
      minimum: 1
      maximum: 100
    __integerMin1Max8:
      type: integer
      default: 0
      minimum: 1
      maximum: 8
    __listOfConnectorOperationStep:
      type: array
      items:
        $ref: '#/components/schemas/ConnectorOperationStep'
    __listOfConnectorOperationSummary:
      type: array
      items:
        $ref: '#/components/schemas/ConnectorOperationSummary'
    __listOfConnectorSummary:
      type: array
      items:
        $ref: '#/components/schemas/ConnectorSummary'
    __listOfCustomPluginSummary:
      type: array
      items:
        $ref: '#/components/schemas/CustomPluginSummary'
    __listOfPlugin:
      type: array
      items:
        $ref: '#/components/schemas/Plugin'
    __listOfPluginDescription:
      type: array
      items:
        $ref: '#/components/schemas/PluginDescription'
    __listOfWorkerConfigurationSummary:
      type: array
      items:
        $ref: '#/components/schemas/WorkerConfigurationSummary'
    __listOf__string:
      type: array
      items:
        $ref: '#/components/schemas/__string'
    __long:
      type: integer
      format: int64
      default: 0
    __longMin1:
      type: integer
      format: int64
      default: 0
      minimum: 1
      maximum: 9223372036854775807
    __sensitiveString:
      type: string
    __string:
      type: string
    __stringMax1024:
      type: string
      minLength: 0
      maxLength: 1024
    __stringMin1Max128:
      type: string
      minLength: 1
      maxLength: 128
    __timestampIso8601:
      type: string
      format: date-time
