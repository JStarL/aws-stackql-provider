openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: ssm_sap
  x-aws-serviceName: ssmsap
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-07'
  version: '2018-05-10'
  title: AWS Systems Manager for SAP
  description: |-
    This API reference provides descriptions, syntax, and other details about each of the actions and data types for AWS Systems Manager for SAP. The topic for each action shows the API request parameters and responses.
servers:
- description: The AWS Systems Manager for SAP regional endpoint
  url: https://ssm-sap.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths:
  /delete-resource-permission:
    post:
      operationId: DeleteResourcePermission
      description: |-
        Removes permissions associated with the target database.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ActionType:
                  $ref: '#/components/schemas/PermissionActionType'
                SourceResourceArn:
                  $ref: '#/components/schemas/Arn'
                ResourceArn:
                  $ref: '#/components/schemas/Arn'
      responses:
        '200': {}
        '500':
          description: |-
            An internal error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource is not available.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /deregister-application:
    post:
      operationId: DeregisterApplication
      description: |-
        Deregister an SAP application with AWS Systems Manager for SAP. This action does not aï¬€ect the existing setup of your SAP workloads on Amazon EC2.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ApplicationId:
                  $ref: '#/components/schemas/ApplicationId'
      responses:
        '200': {}
        '500':
          description: |-
            An internal error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '401':
          description: |-
            The request is not authorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /get-application:
    post:
      operationId: GetApplication
      description: |-
        Gets an application registered with AWS Systems Manager for SAP. It also returns the components of the application.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ApplicationId:
                  $ref: '#/components/schemas/ApplicationId'
                ApplicationArn:
                  $ref: '#/components/schemas/SsmSapArn'
                AppRegistryArn:
                  $ref: '#/components/schemas/AppRegistryArn'
      responses:
        '200': {}
        '500':
          description: |-
            An internal error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /get-component:
    post:
      operationId: GetComponent
      description: |-
        Gets the component of an application registered with AWS Systems Manager for SAP.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ApplicationId:
                  $ref: '#/components/schemas/ApplicationId'
                ComponentId:
                  $ref: '#/components/schemas/ComponentId'
      responses:
        '200': {}
        '500':
          description: |-
            An internal error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '401':
          description: |-
            The request is not authorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /get-database:
    post:
      operationId: GetDatabase
      description: |-
        Gets the SAP HANA database of an application registered with AWS Systems Manager for SAP.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ApplicationId:
                  $ref: '#/components/schemas/ApplicationId'
                ComponentId:
                  $ref: '#/components/schemas/ComponentId'
                DatabaseId:
                  $ref: '#/components/schemas/DatabaseId'
                DatabaseArn:
                  $ref: '#/components/schemas/SsmSapArn'
      responses:
        '200': {}
        '500':
          description: |-
            An internal error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /get-operation:
    post:
      operationId: GetOperation
      description: |-
        Gets the details of an operation by specifying the operation ID.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                OperationId:
                  $ref: '#/components/schemas/OperationId'
      responses:
        '200': {}
        '500':
          description: |-
            An internal error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /get-resource-permission:
    post:
      operationId: GetResourcePermission
      description: |-
        Gets permissions associated with the target database.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ActionType:
                  $ref: '#/components/schemas/PermissionActionType'
                ResourceArn:
                  $ref: '#/components/schemas/Arn'
      responses:
        '200': {}
        '500':
          description: |-
            An internal error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource is not available.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /list-applications:
    post:
      operationId: ListApplications
      description: |-
        Lists all the applications registered with AWS Systems Manager for SAP.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                NextToken:
                  $ref: '#/components/schemas/NextToken'
                MaxResults:
                  $ref: '#/components/schemas/MaxResults'
                Filters:
                  $ref: '#/components/schemas/FilterList'
      responses:
        '200': {}
        '500':
          description: |-
            An internal error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource is not available.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /list-components:
    post:
      operationId: ListComponents
      description: |-
        Lists all the components registered with AWS Systems Manager for SAP.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ApplicationId:
                  $ref: '#/components/schemas/ApplicationId'
                NextToken:
                  $ref: '#/components/schemas/NextToken'
                MaxResults:
                  $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '500':
          description: |-
            An internal error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource is not available.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '401':
          description: |-
            The request is not authorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /list-databases:
    post:
      operationId: ListDatabases
      description: |-
        Lists the SAP HANA databases of an application registered with AWS Systems Manager for SAP.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ApplicationId:
                  $ref: '#/components/schemas/ApplicationId'
                ComponentId:
                  $ref: '#/components/schemas/ComponentId'
                NextToken:
                  $ref: '#/components/schemas/NextToken'
                MaxResults:
                  $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '500':
          description: |-
            An internal error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource is not available.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /list-operation-events:
    post:
      operationId: ListOperationEvents
      description: |-
        Returns a list of operations events.

        Available parameters include `OperationID`, as well as optional parameters `MaxResults`, `NextToken`, and `Filters`.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                OperationId:
                  $ref: '#/components/schemas/OperationId'
                MaxResults:
                  $ref: '#/components/schemas/MaxResults'
                NextToken:
                  $ref: '#/components/schemas/NextToken'
                Filters:
                  $ref: '#/components/schemas/FilterList'
      responses:
        '200': {}
        '500':
          description: |-
            An internal error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /list-operations:
    post:
      operationId: ListOperations
      description: |-
        Lists the operations performed by AWS Systems Manager for SAP.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ApplicationId:
                  $ref: '#/components/schemas/ApplicationId'
                MaxResults:
                  $ref: '#/components/schemas/MaxResults'
                NextToken:
                  $ref: '#/components/schemas/NextToken'
                Filters:
                  $ref: '#/components/schemas/FilterList'
      responses:
        '200': {}
        '500':
          description: |-
            An internal error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /tags/{resourceArn}:
    get:
      operationId: ListTagsForResource
      description: |-
        Lists all tags on an SAP HANA application and/or database registered with AWS Systems Manager for SAP.
      parameters:
      - name: resourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/SsmSapArn'
      responses:
        '200': {}
        '409':
          description: |-
            A conflict has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '404':
          description: |-
            The resource is not available.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    post:
      operationId: TagResource
      description: |-
        Creates tag for a resource by specifying the ARN.
      parameters:
      - name: resourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/SsmSapArn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '200': {}
        '409':
          description: |-
            A conflict has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '404':
          description: |-
            The resource is not available.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    delete:
      operationId: UntagResource
      description: |-
        Delete the tags for a resource.
      parameters:
      - name: resourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/SsmSapArn'
      - name: tagKeys
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/TagKeyList'
      responses:
        '200': {}
        '409':
          description: |-
            A conflict has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '404':
          description: |-
            The resource is not available.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /put-resource-permission:
    post:
      operationId: PutResourcePermission
      description: |-
        Adds permissions to the target database.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ActionType:
                  $ref: '#/components/schemas/PermissionActionType'
                SourceResourceArn:
                  $ref: '#/components/schemas/Arn'
                ResourceArn:
                  $ref: '#/components/schemas/Arn'
      responses:
        '200': {}
        '500':
          description: |-
            An internal error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource is not available.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /register-application:
    post:
      operationId: RegisterApplication
      description: |-
        Register an SAP application with AWS Systems Manager for SAP. You must meet the following requirements before registering.

        The SAP application you want to register with AWS Systems Manager for SAP is running on Amazon EC2.

        AWS Systems Manager Agent must be setup on an Amazon EC2 instance along with the required IAM permissions.

        Amazon EC2 instance(s) must have access to the secrets created in AWS Secrets Manager to manage SAP applications and components.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ApplicationId:
                  $ref: '#/components/schemas/ApplicationId'
                ApplicationType:
                  $ref: '#/components/schemas/ApplicationType'
                Instances:
                  $ref: '#/components/schemas/InstanceList'
                SapInstanceNumber:
                  $ref: '#/components/schemas/SAPInstanceNumber'
                Sid:
                  $ref: '#/components/schemas/SID'
                Tags:
                  $ref: '#/components/schemas/TagMap'
                Credentials:
                  $ref: '#/components/schemas/ApplicationCredentialList'
                DatabaseArn:
                  $ref: '#/components/schemas/SsmSapArn'
                ComponentsInfo:
                  $ref: '#/components/schemas/ComponentInfoList'
      responses:
        '200': {}
        '409':
          description: |-
            A conflict has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An internal error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource is not available.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /start-application:
    post:
      operationId: StartApplication
      description: |-
        Request is an operation which starts an application.

        Parameter `ApplicationId` is required.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ApplicationId:
                  $ref: '#/components/schemas/ApplicationId'
      responses:
        '200': {}
        '409':
          description: |-
            A conflict has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An internal error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource is not available.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /start-application-refresh:
    post:
      operationId: StartApplicationRefresh
      description: |-
        Refreshes a registered application.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ApplicationId:
                  $ref: '#/components/schemas/ApplicationId'
      responses:
        '200': {}
        '409':
          description: |-
            A conflict has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An internal error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource is not available.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '401':
          description: |-
            The request is not authorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /stop-application:
    post:
      operationId: StopApplication
      description: |-
        Request is an operation to stop an application.

        Parameter `ApplicationId` is required. Parameters `StopConnectedEntity` and `IncludeEc2InstanceShutdown` are optional.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ApplicationId:
                  $ref: '#/components/schemas/ApplicationId'
                StopConnectedEntity:
                  $ref: '#/components/schemas/ConnectedEntityType'
                IncludeEc2InstanceShutdown:
                  $ref: '#/components/schemas/Boolean'
      responses:
        '200': {}
        '409':
          description: |-
            A conflict has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An internal error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource is not available.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /update-application-settings:
    post:
      operationId: UpdateApplicationSettings
      description: |-
        Updates the settings of an application registered with AWS Systems Manager for SAP.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ApplicationId:
                  $ref: '#/components/schemas/ApplicationId'
                CredentialsToAddOrUpdate:
                  $ref: '#/components/schemas/ApplicationCredentialList'
                CredentialsToRemove:
                  $ref: '#/components/schemas/ApplicationCredentialList'
                Backint:
                  $ref: '#/components/schemas/BackintConfig'
                DatabaseArn:
                  $ref: '#/components/schemas/SsmSapArn'
      responses:
        '200': {}
        '409':
          description: |-
            A conflict has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An internal error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource is not available.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '401':
          description: |-
            The request is not authorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
components:
  schemas:
    AllocationType:
      type: string
      enum:
      - VPC_SUBNET
      - ELASTIC_IP
      - OVERLAY
      - UNKNOWN
    AppRegistryArn:
      type: string
      pattern: ^arn:aws:servicecatalog:[a-z0-9:\/-]+$
    Application:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/ApplicationId'
          description: The ID of the application.
        Type:
          allOf:
          - $ref: '#/components/schemas/ApplicationType'
          description: The type of the application.
        Arn:
          allOf:
          - $ref: '#/components/schemas/SsmSapArn'
          description: The Amazon Resource Name (ARN) of the application.
        AppRegistryArn:
          allOf:
          - $ref: '#/components/schemas/AppRegistryArn'
          description: The Amazon Resource Name (ARN) of the Application Registry.
        Status:
          allOf:
          - $ref: '#/components/schemas/ApplicationStatus'
          description: The status of the application.
        DiscoveryStatus:
          allOf:
          - $ref: '#/components/schemas/ApplicationDiscoveryStatus'
          description: The latest discovery result for the application.
        Components:
          allOf:
          - $ref: '#/components/schemas/ComponentIdList'
          description: The components of the application.
        LastUpdated:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the application was last updated.
        StatusMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The status message.
        AssociatedApplicationArns:
          allOf:
          - $ref: '#/components/schemas/ApplicationArnList'
          description: The Amazon Resource Names of the associated AWS Systems Manager
            for SAP applications.
      description: An SAP application registered with AWS Systems Manager for SAP.
    ApplicationArnList:
      type: array
      items:
        $ref: '#/components/schemas/SsmSapArn'
    ApplicationCredential:
      type: object
      properties:
        DatabaseName:
          allOf:
          - $ref: '#/components/schemas/DatabaseName'
          description: The name of the SAP HANA database.
        CredentialType:
          allOf:
          - $ref: '#/components/schemas/CredentialType'
          description: The type of the application credentials.
        SecretId:
          allOf:
          - $ref: '#/components/schemas/SecretId'
          description: The secret ID created in AWS Secrets Manager to store the credentials
            of the SAP application.
      required:
      - DatabaseName
      - CredentialType
      - SecretId
      description: The credentials of your SAP application.
    ApplicationCredentialList:
      type: array
      items:
        $ref: '#/components/schemas/ApplicationCredential'
    ApplicationDiscoveryStatus:
      type: string
      enum:
      - SUCCESS
      - REGISTRATION_FAILED
      - REFRESH_FAILED
      - REGISTERING
      - DELETING
    ApplicationId:
      type: string
      pattern: ^[\w\d\.-]+$
      minLength: 1
      maxLength: 60
    ApplicationStatus:
      type: string
      enum:
      - ACTIVATED
      - STARTING
      - STOPPED
      - STOPPING
      - FAILED
      - REGISTERING
      - DELETING
      - UNKNOWN
    ApplicationSummary:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/ApplicationId'
          description: The ID of the application.
        DiscoveryStatus:
          allOf:
          - $ref: '#/components/schemas/ApplicationDiscoveryStatus'
          description: The status of the latest discovery.
        Type:
          allOf:
          - $ref: '#/components/schemas/ApplicationType'
          description: The type of the application.
        Arn:
          allOf:
          - $ref: '#/components/schemas/SsmSapArn'
          description: The Amazon Resource Name (ARN) of the application.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The tags on the application.
      description: The summary of the SAP application registered with AWS Systems
        Manager for SAP.
    ApplicationSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/ApplicationSummary'
    ApplicationType:
      type: string
      enum:
      - HANA
      - SAP_ABAP
    Arn:
      type: string
      pattern: ^arn:(.+:){2,4}.+$|^arn:(.+:){1,3}.+\/.+$
    AssociatedHost:
      type: object
      properties:
        Hostname:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the host.
        Ec2InstanceId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the Amazon EC2 instance.
        IpAddresses:
          allOf:
          - $ref: '#/components/schemas/IpAddressList'
          description: The IP addresses of the associated host.
        OsVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The version of the operating system.
      description: Describes the properties of the associated host.
    BackintConfig:
      type: object
      properties:
        BackintMode:
          allOf:
          - $ref: '#/components/schemas/BackintMode'
          description: AWS service for your database backup.
        EnsureNoBackupInProcess:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: ''
      required:
      - BackintMode
      - EnsureNoBackupInProcess
      description: Configuration parameters for AWS Backint Agent for SAP HANA. You
        can backup your SAP HANA database with AWS Backup or Amazon S3.
    BackintMode:
      type: string
      enum:
      - AWSBackup
    ClusterStatus:
      type: string
      enum:
      - ONLINE
      - STANDBY
      - MAINTENANCE
      - OFFLINE
      - NONE
    Component:
      type: object
      properties:
        ComponentId:
          allOf:
          - $ref: '#/components/schemas/ComponentId'
          description: The ID of the component.
        Sid:
          allOf:
          - $ref: '#/components/schemas/SID'
          description: The SAP System Identifier of the application component.
        SystemNumber:
          allOf:
          - $ref: '#/components/schemas/SAPInstanceNumber'
          description: The SAP system number of the application component.
        ParentComponent:
          allOf:
          - $ref: '#/components/schemas/ComponentId'
          description: The parent component of a highly available environment. For
            example, in a highly available SAP on AWS workload, the parent component
            consists of the entire setup, including the child components.
        ChildComponents:
          allOf:
          - $ref: '#/components/schemas/ComponentIdList'
          description: The child components of a highly available environment. For
            example, in a highly available SAP on AWS workload, the child component
            consists of the primary and secondar instances.
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/ApplicationId'
          description: The ID of the application.
        ComponentType:
          allOf:
          - $ref: '#/components/schemas/ComponentType'
          description: The type of the component.
        Status:
          allOf:
          - $ref: '#/components/schemas/ComponentStatus'
          description: "The status of the component.\n\n  * ACTIVATED - this status\
            \ has been deprecated.\n\n  * STARTING - the component is in the process\
            \ of being started.\n\n  * STOPPED - the component is not running.\n\n\
            \  * STOPPING - the component is in the process of being stopped.\n\n\
            \  * RUNNING - the component is running.\n\n  * RUNNING_WITH_ERROR - one\
            \ or more child component(s) of the parent component is not running. Call\
            \ [ `GetComponent` ](https://docs.aws.amazon.com/ssmsap/latest/APIReference/API_GetComponent.html)\
            \ to review the status of each child component.\n\n  * UNDEFINED - AWS\
            \ Systems Manager for SAP cannot provide the component status based on\
            \ the discovered information. Verify your SAP application."
        SapHostname:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The hostname of the component.
        SapFeature:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The SAP feature of the component.
        SapKernelVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The kernel version of the component.
        HdbVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The SAP HANA version of the component.
        Resilience:
          allOf:
          - $ref: '#/components/schemas/Resilience'
          description: Details of the SAP HANA system replication for the component.
        AssociatedHost:
          allOf:
          - $ref: '#/components/schemas/AssociatedHost'
          description: The associated host of the component.
        Databases:
          allOf:
          - $ref: '#/components/schemas/DatabaseIdList'
          description: The SAP HANA databases of the component.
        Hosts:
          allOf:
          - $ref: '#/components/schemas/HostList'
          description: The hosts of the component.
        PrimaryHost:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The primary host of the component.
        DatabaseConnection:
          allOf:
          - $ref: '#/components/schemas/DatabaseConnection'
          description: The connection specifications for the database of the component.
        LastUpdated:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the component was last updated.
        Arn:
          allOf:
          - $ref: '#/components/schemas/SsmSapArn'
          description: The Amazon Resource Name (ARN) of the component.
      description: The SAP component of your application.
    ComponentArnList:
      type: array
      items:
        $ref: '#/components/schemas/SsmSapArn'
    ComponentId:
      type: string
      pattern: ^[\w\d-]+$
      minLength: 1
      maxLength: 100
    ComponentIdList:
      type: array
      items:
        $ref: '#/components/schemas/ComponentId'
    ComponentInfo:
      type: object
      properties:
        ComponentType:
          allOf:
          - $ref: '#/components/schemas/ComponentType'
          description: 'This string is the type of the component.


            Accepted value is `WD`.'
        Sid:
          allOf:
          - $ref: '#/components/schemas/SID'
          description: 'This string is the SAP System ID of the component.


            Accepted values are alphanumeric.'
        Ec2InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: 'This is the Amazon EC2 instance on which your SAP component
            is running.


            Accepted values are alphanumeric.'
      required:
      - ComponentType
      - Sid
      - Ec2InstanceId
      description: This is information about the component of your SAP application,
        such as Web Dispatcher.
    ComponentInfoList:
      type: array
      items:
        $ref: '#/components/schemas/ComponentInfo'
    ComponentStatus:
      type: string
      enum:
      - ACTIVATED
      - STARTING
      - STOPPED
      - STOPPING
      - RUNNING
      - RUNNING_WITH_ERROR
      - UNDEFINED
    ComponentSummary:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/ApplicationId'
          description: The ID of the application.
        ComponentId:
          allOf:
          - $ref: '#/components/schemas/ComponentId'
          description: The ID of the component.
        ComponentType:
          allOf:
          - $ref: '#/components/schemas/ComponentType'
          description: The type of the component.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The tags of the component.
        Arn:
          allOf:
          - $ref: '#/components/schemas/SsmSapArn'
          description: The Amazon Resource Name (ARN) of the component summary.
      description: The summary of the component.
    ComponentSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/ComponentSummary'
    ComponentType:
      type: string
      enum:
      - HANA
      - HANA_NODE
      - ABAP
      - ASCS
      - DIALOG
      - WEBDISP
      - WD
      - ERS
    ConflictException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
      description: A conflict has occurred.
    ConnectedEntityType:
      type: string
      enum:
      - DBMS
    CredentialType:
      type: string
      enum:
      - ADMIN
    Database:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/ApplicationId'
          description: The ID of the application.
        ComponentId:
          allOf:
          - $ref: '#/components/schemas/ComponentId'
          description: The ID of the component.
        Credentials:
          allOf:
          - $ref: '#/components/schemas/ApplicationCredentialList'
          description: The credentials of the database.
        DatabaseId:
          allOf:
          - $ref: '#/components/schemas/DatabaseId'
          description: The ID of the SAP HANA database.
        DatabaseName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the database.
        DatabaseType:
          allOf:
          - $ref: '#/components/schemas/DatabaseType'
          description: The type of the database.
        Arn:
          allOf:
          - $ref: '#/components/schemas/SsmSapArn'
          description: The Amazon Resource Name (ARN) of the database.
        Status:
          allOf:
          - $ref: '#/components/schemas/DatabaseStatus'
          description: The status of the database.
        PrimaryHost:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The primary host of the database.
        SQLPort:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The SQL port of the database.
        LastUpdated:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the database was last updated.
        ConnectedComponentArns:
          allOf:
          - $ref: '#/components/schemas/ComponentArnList'
          description: The Amazon Resource Names of the connected AWS Systems Manager
            for SAP components.
      description: The SAP HANA database of the application registered with AWS Systems
        Manager for SAP.
    DatabaseConnection:
      type: object
      properties:
        DatabaseConnectionMethod:
          allOf:
          - $ref: '#/components/schemas/DatabaseConnectionMethod'
          description: The method of connection.
        DatabaseArn:
          allOf:
          - $ref: '#/components/schemas/SsmSapArn'
          description: The Amazon Resource Name of the connected SAP HANA database.
        ConnectionIp:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The IP address for connection.
      description: The connection specifications for the database.
    DatabaseConnectionMethod:
      type: string
      enum:
      - DIRECT
      - OVERLAY
    DatabaseId:
      type: string
      pattern: '[\w\d]+$'
      minLength: 1
      maxLength: 300
    DatabaseIdList:
      type: array
      items:
        $ref: '#/components/schemas/DatabaseId'
    DatabaseName:
      type: string
      minLength: 1
      maxLength: 100
    DatabaseStatus:
      type: string
      enum:
      - RUNNING
      - STARTING
      - STOPPED
      - WARNING
      - UNKNOWN
      - ERROR
    DatabaseSummary:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/ApplicationId'
          description: The ID of the application.
        ComponentId:
          allOf:
          - $ref: '#/components/schemas/ComponentId'
          description: The ID of the component.
        DatabaseId:
          allOf:
          - $ref: '#/components/schemas/DatabaseId'
          description: The ID of the database.
        DatabaseType:
          allOf:
          - $ref: '#/components/schemas/DatabaseType'
          description: The type of the database.
        Arn:
          allOf:
          - $ref: '#/components/schemas/SsmSapArn'
          description: The Amazon Resource Name (ARN) of the database.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The tags of the database.
      description: The summary of the database.
    DatabaseSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/DatabaseSummary'
    DatabaseType:
      type: string
      enum:
      - SYSTEM
      - TENANT
    DeleteResourcePermissionInput:
      type: object
      properties:
        ActionType:
          allOf:
          - $ref: '#/components/schemas/PermissionActionType'
          description: Delete or restore the permissions on the target database.
        SourceResourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the source resource.
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the resource.
      required:
      - ResourceArn
    DeleteResourcePermissionOutput:
      type: object
      properties:
        Policy:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The policy that removes permissions on the target database.
    DeregisterApplicationInput:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/ApplicationId'
          description: The ID of the application.
      required:
      - ApplicationId
    DeregisterApplicationOutput:
      type: object
      properties: {}
    Filter:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/FilterName'
          description: The name of the filter. Filter names are case-sensitive.
        Value:
          allOf:
          - $ref: '#/components/schemas/FilterValue'
          description: The filter values. Filter values are case-sensitive. If you
            specify multiple values for a filter, the values are joined with an OR,
            and the request returns all results that match any of the specified values
        Operator:
          allOf:
          - $ref: '#/components/schemas/FilterOperator'
          description: The operator for the filter.
      required:
      - Name
      - Value
      - Operator
      description: A specific result obtained by specifying the name, value, and operator.
    FilterList:
      type: array
      items:
        $ref: '#/components/schemas/Filter'
    FilterName:
      type: string
      minLength: 1
      maxLength: 32
    FilterOperator:
      type: string
      enum:
      - Equals
      - GreaterThanOrEquals
      - LessThanOrEquals
    FilterValue:
      type: string
      minLength: 1
      maxLength: 64
    GetApplicationInput:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/ApplicationId'
          description: The ID of the application.
        ApplicationArn:
          allOf:
          - $ref: '#/components/schemas/SsmSapArn'
          description: The Amazon Resource Name (ARN) of the application.
        AppRegistryArn:
          allOf:
          - $ref: '#/components/schemas/AppRegistryArn'
          description: The Amazon Resource Name (ARN) of the application registry.
    GetApplicationOutput:
      type: object
      properties:
        Application:
          allOf:
          - $ref: '#/components/schemas/Application'
          description: Returns all of the metadata of an application registered with
            AWS Systems Manager for SAP.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The tags of a registered application.
    GetComponentInput:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/ApplicationId'
          description: The ID of the application.
        ComponentId:
          allOf:
          - $ref: '#/components/schemas/ComponentId'
          description: The ID of the component.
      required:
      - ApplicationId
      - ComponentId
    GetComponentOutput:
      type: object
      properties:
        Component:
          allOf:
          - $ref: '#/components/schemas/Component'
          description: The component of an application registered with AWS Systems
            Manager for SAP.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The tags of a component.
    GetDatabaseInput:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/ApplicationId'
          description: The ID of the application.
        ComponentId:
          allOf:
          - $ref: '#/components/schemas/ComponentId'
          description: The ID of the component.
        DatabaseId:
          allOf:
          - $ref: '#/components/schemas/DatabaseId'
          description: The ID of the database.
        DatabaseArn:
          allOf:
          - $ref: '#/components/schemas/SsmSapArn'
          description: The Amazon Resource Name (ARN) of the database.
    GetDatabaseOutput:
      type: object
      properties:
        Database:
          allOf:
          - $ref: '#/components/schemas/Database'
          description: The SAP HANA database of an application registered with AWS
            Systems Manager for SAP.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The tags of a database.
    GetOperationInput:
      type: object
      properties:
        OperationId:
          allOf:
          - $ref: '#/components/schemas/OperationId'
          description: The ID of the operation.
      required:
      - OperationId
    GetOperationOutput:
      type: object
      properties:
        Operation:
          allOf:
          - $ref: '#/components/schemas/Operation'
          description: Returns the details of an operation.
    GetResourcePermissionInput:
      type: object
      properties:
        ActionType:
          allOf:
          - $ref: '#/components/schemas/PermissionActionType'
          description: ''
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the resource.
      required:
      - ResourceArn
    GetResourcePermissionOutput:
      type: object
      properties:
        Policy:
          allOf:
          - $ref: '#/components/schemas/String'
          description: ''
    Host:
      type: object
      properties:
        HostName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the Dedicated Host.
        HostIp:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The IP address of the Dedicated Host.
        EC2InstanceId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of Amazon EC2 instance.
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The instance ID of the instance on the Dedicated Host.
        HostRole:
          allOf:
          - $ref: '#/components/schemas/HostRole'
          description: The role of the Dedicated Host.
        OsVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The version of the operating system.
      description: Describes the properties of the Dedicated Host.
    HostList:
      type: array
      items:
        $ref: '#/components/schemas/Host'
    HostRole:
      type: string
      enum:
      - LEADER
      - WORKER
      - STANDBY
      - UNKNOWN
    InstanceId:
      type: string
      pattern: ^i-[\w\d]{8}$|^i-[\w\d]{17}$
    InstanceList:
      type: array
      items:
        $ref: '#/components/schemas/InstanceId'
    InternalServerException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
      description: An internal error has occurred.
    IpAddressList:
      type: array
      items:
        $ref: '#/components/schemas/IpAddressMember'
    IpAddressMember:
      type: object
      properties:
        IpAddress:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The IP address.
        Primary:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: The primary IP address.
        AllocationType:
          allOf:
          - $ref: '#/components/schemas/AllocationType'
          description: The type of allocation for the IP address.
      description: Provides information of the IP address.
    ListApplicationsInput:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next page of results.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return with a single call.
            To retrieve the remaining results, make another call with the returned
            nextToken value.
        Filters:
          allOf:
          - $ref: '#/components/schemas/FilterList'
          description: The filter of name, value, and operator.
    ListApplicationsOutput:
      type: object
      properties:
        Applications:
          allOf:
          - $ref: '#/components/schemas/ApplicationSummaryList'
          description: The applications registered with AWS Systems Manager for SAP.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token to use to retrieve the next page of results. This
            value is null when there are no more results to return.
    ListComponentsInput:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/ApplicationId'
          description: The ID of the application.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next page of results.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: 'The maximum number of results to return with a single call.
            To retrieve the remaining results, make another call with the returned
            nextToken value.


            If you do not specify a value for MaxResults, the request returns 50 items
            per page by default.'
    ListComponentsOutput:
      type: object
      properties:
        Components:
          allOf:
          - $ref: '#/components/schemas/ComponentSummaryList'
          description: List of components registered with AWS System Manager for SAP.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token to use to retrieve the next page of results. This
            value is null when there are no more results to return.
    ListDatabasesInput:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/ApplicationId'
          description: The ID of the application.
        ComponentId:
          allOf:
          - $ref: '#/components/schemas/ComponentId'
          description: The ID of the component.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next page of results.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return with a single call.
            To retrieve the remaining results, make another call with the returned
            nextToken value. If you do not specify a value for MaxResults, the request
            returns 50 items per page by default.
    ListDatabasesOutput:
      type: object
      properties:
        Databases:
          allOf:
          - $ref: '#/components/schemas/DatabaseSummaryList'
          description: The SAP HANA databases of an application.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token to use to retrieve the next page of results. This
            value is null when there are no more results to return.
    ListOperationEventsInput:
      type: object
      properties:
        OperationId:
          allOf:
          - $ref: '#/components/schemas/OperationId'
          description: The ID of the operation.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: 'The maximum number of results to return with a single call.
            To retrieve the remaining results, make another call with the returned
            nextToken value.


            If you do not specify a value for `MaxResults`, the request returns 50
            items per page by default.'
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token to use to retrieve the next page of results. This
            value is null when there are no more results to return.
        Filters:
          allOf:
          - $ref: '#/components/schemas/FilterList'
          description: 'Optionally specify filters to narrow the returned operation
            event items.


            Valid filter names include `status`, `resourceID`, and `resourceType`.
            The valid operator for all three filters is `Equals`.'
      required:
      - OperationId
    ListOperationEventsOutput:
      type: object
      properties:
        OperationEvents:
          allOf:
          - $ref: '#/components/schemas/OperationEventList'
          description: A returned list of operation events that meet the filter criteria.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token to use to retrieve the next page of results. This
            value is null when there are no more results to return.
    ListOperationsInput:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/ApplicationId'
          description: The ID of the application.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return with a single call.
            To retrieve the remaining results, make another call with the returned
            nextToken value. If you do not specify a value for MaxResults, the request
            returns 50 items per page by default.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next page of results.
        Filters:
          allOf:
          - $ref: '#/components/schemas/FilterList'
          description: The filters of an operation.
      required:
      - ApplicationId
    ListOperationsOutput:
      type: object
      properties:
        Operations:
          allOf:
          - $ref: '#/components/schemas/OperationList'
          description: List of operations performed by AWS Systems Manager for SAP.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token to use to retrieve the next page of results. This
            value is null when there are no more results to return.
    ListTagsForResourceRequest:
      type: object
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/SsmSapArn'
          description: The Amazon Resource Name (ARN) of the resource.
      required:
      - resourceArn
    ListTagsForResourceResponse:
      type: object
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: ''
    MaxResults:
      type: integer
      default: 50
      minimum: 1
      maximum: 50
    NextToken:
      type: string
      pattern: ^.{16,1024}$
    Operation:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/OperationId'
          description: The ID of the operation.
        Type:
          allOf:
          - $ref: '#/components/schemas/OperationType'
          description: The type of the operation.
        Status:
          allOf:
          - $ref: '#/components/schemas/OperationStatus'
          description: The status of the operation.
        StatusMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The status message of the operation.
        Properties:
          allOf:
          - $ref: '#/components/schemas/OperationProperties'
          description: The properties of the operation.
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          description: The resource type of the operation.
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/ResourceId'
          description: The resource ID of the operation.
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the operation.
        StartTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The start time of the operation.
        EndTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The end time of the operation.
        LastUpdatedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the operation was last updated.
      description: The operations performed by AWS Systems Manager for SAP.
    OperationEvent:
      type: object
      properties:
        Description:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A description of the operation event. For example, "Stop the
            EC2 instance i-abcdefgh987654321".
        Resource:
          allOf:
          - $ref: '#/components/schemas/Resource'
          description: 'The resource involved in the operations event.


            Contains `ResourceArn` ARN and `ResourceType`.'
        Status:
          allOf:
          - $ref: '#/components/schemas/OperationEventStatus'
          description: 'The status of the operation event. The possible statuses are:
            `IN_PROGRESS`, `COMPLETED`, and `FAILED`.'
        StatusMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The status message relating to a specific operation event.
        Timestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp of the specified operation event.
      description: "An operation event returns details for an operation, including\
        \ key milestones which can be used to monitor and track operations in progress.\n\
        \nOperation events contain:\n\n  * Description string\n\n  * Resource, including\
        \ its ARN and type\n\n  * Status\n\n  * StatusMessage string\n\n  * TimeStamp\n\
        \nOperation event examples include StartApplication or StopApplication."
    OperationEventList:
      type: array
      items:
        $ref: '#/components/schemas/OperationEvent'
    OperationEventResourceType:
      type: string
      pattern: ^[\w]+::[\w]+::[\w]+$
    OperationEventStatus:
      type: string
      enum:
      - IN_PROGRESS
      - COMPLETED
      - FAILED
    OperationId:
      type: string
      pattern: ^[{]?[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}[}]?$
    OperationIdList:
      type: array
      items:
        $ref: '#/components/schemas/OperationId'
    OperationList:
      type: array
      items:
        $ref: '#/components/schemas/Operation'
    OperationMode:
      type: string
      enum:
      - PRIMARY
      - LOGREPLAY
      - DELTA_DATASHIPPING
      - LOGREPLAY_READACCESS
      - NONE
    OperationProperties:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/String'
    OperationStatus:
      type: string
      enum:
      - INPROGRESS
      - SUCCESS
      - ERROR
    OperationType:
      type: string
    PermissionActionType:
      type: string
      enum:
      - RESTORE
    PutResourcePermissionInput:
      type: object
      properties:
        ActionType:
          allOf:
          - $ref: '#/components/schemas/PermissionActionType'
          description: ''
        SourceResourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: ''
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: ''
      required:
      - ActionType
      - SourceResourceArn
      - ResourceArn
    PutResourcePermissionOutput:
      type: object
      properties:
        Policy:
          allOf:
          - $ref: '#/components/schemas/String'
          description: ''
    RegisterApplicationInput:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/ApplicationId'
          description: The ID of the application.
        ApplicationType:
          allOf:
          - $ref: '#/components/schemas/ApplicationType'
          description: The type of the application.
        Instances:
          allOf:
          - $ref: '#/components/schemas/InstanceList'
          description: The Amazon EC2 instances on which your SAP application is running.
        SapInstanceNumber:
          allOf:
          - $ref: '#/components/schemas/SAPInstanceNumber'
          description: The SAP instance number of the application.
        Sid:
          allOf:
          - $ref: '#/components/schemas/SID'
          description: The System ID of the application.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The tags to be attached to the SAP application.
        Credentials:
          allOf:
          - $ref: '#/components/schemas/ApplicationCredentialList'
          description: The credentials of the SAP application.
        DatabaseArn:
          allOf:
          - $ref: '#/components/schemas/SsmSapArn'
          description: The Amazon Resource Name of the SAP HANA database.
        ComponentsInfo:
          allOf:
          - $ref: '#/components/schemas/ComponentInfoList'
          description: 'This is an optional parameter for component details to which
            the SAP ABAP application is attached, such as Web Dispatcher.


            This is an array of ApplicationComponent objects. You may input 0 to 5
            items.'
      required:
      - ApplicationId
      - ApplicationType
      - Instances
    RegisterApplicationOutput:
      type: object
      properties:
        Application:
          allOf:
          - $ref: '#/components/schemas/Application'
          description: The application registered with AWS Systems Manager for SAP.
        OperationId:
          allOf:
          - $ref: '#/components/schemas/OperationId'
          description: The ID of the operation.
    ReplicationMode:
      type: string
      enum:
      - PRIMARY
      - NONE
      - SYNC
      - SYNCMEM
      - ASYNC
    Resilience:
      type: object
      properties:
        HsrTier:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The tier of the component.
        HsrReplicationMode:
          allOf:
          - $ref: '#/components/schemas/ReplicationMode'
          description: The replication mode of the component.
        HsrOperationMode:
          allOf:
          - $ref: '#/components/schemas/OperationMode'
          description: The operation mode of the component.
        ClusterStatus:
          allOf:
          - $ref: '#/components/schemas/ClusterStatus'
          description: The cluster status of the component.
        EnqueueReplication:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates if or not enqueue replication is enabled for the
            ASCS component.
      description: Details of the SAP HANA system replication for the instance.
    Resource:
      type: object
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: 'The Amazon Resource Name (ARN) of the source resource.


            Example of `ResourceArn`: "`arn:aws:ec2:us-east-1:111111111111:instance/i-abcdefgh987654321`"'
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/OperationEventResourceType'
          description: 'The resource type.


            Example of `ResourceType`: "`AWS::SystemsManagerSAP::Component`" or "`AWS::EC2::Instance`".'
      description: The resource contains a `ResourceArn` and the `ResourceType`.
    ResourceId:
      type: string
      minLength: 1
      maxLength: 64
    ResourceNotFoundException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
      description: The resource is not available.
    ResourceType:
      type: string
      minLength: 1
      maxLength: 64
    SAPInstanceNumber:
      type: string
      pattern: ^[0-9]{2}$
    SID:
      type: string
      pattern: ^[A-Z][A-Z0-9]{2}$
    SecretId:
      type: string
      minLength: 1
      maxLength: 100
    SsmSapArn:
      type: string
      pattern: ^arn:(.+:){2,4}.+$|^arn:(.+:){1,3}.+\/.+$
    StartApplicationInput:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/ApplicationId'
          description: The ID of the application.
      required:
      - ApplicationId
    StartApplicationOutput:
      type: object
      properties:
        OperationId:
          allOf:
          - $ref: '#/components/schemas/OperationId'
          description: The ID of the operation.
    StartApplicationRefreshInput:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/ApplicationId'
          description: The ID of the application.
      required:
      - ApplicationId
    StartApplicationRefreshOutput:
      type: object
      properties:
        OperationId:
          allOf:
          - $ref: '#/components/schemas/OperationId'
          description: The ID of the operation.
    StopApplicationInput:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/ApplicationId'
          description: The ID of the application.
        StopConnectedEntity:
          allOf:
          - $ref: '#/components/schemas/ConnectedEntityType'
          description: 'Specify the `ConnectedEntityType`. Accepted type is `DBMS`.


            If this parameter is included, the connected DBMS (Database Management
            System) will be stopped.'
        IncludeEc2InstanceShutdown:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Boolean. If included and if set to `True`, the StopApplication
            operation will shut down the associated Amazon EC2 instance in addition
            to the application.
      required:
      - ApplicationId
    StopApplicationOutput:
      type: object
      properties:
        OperationId:
          allOf:
          - $ref: '#/components/schemas/OperationId'
          description: The ID of the operation.
    TagKey:
      type: string
      pattern: ^(?!aws:)[a-zA-Z+-=._:/]+$
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
    TagMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
    TagResourceRequest:
      type: object
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/SsmSapArn'
          description: The Amazon Resource Name (ARN) of the resource.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The tags on a resource.
      required:
      - resourceArn
      - tags
    TagResourceResponse:
      type: object
      properties: {}
    TagValue:
      type: string
      minLength: 1
      maxLength: 256
    UnauthorizedException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
      description: The request is not authorized.
    UntagResourceRequest:
      type: object
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/SsmSapArn'
          description: The Amazon Resource Name (ARN) of the resource.
        tagKeys:
          allOf:
          - $ref: '#/components/schemas/TagKeyList'
          description: Adds/updates or removes credentials for applications registered
            with AWS Systems Manager for SAP.
      required:
      - resourceArn
      - tagKeys
    UntagResourceResponse:
      type: object
      properties: {}
    UpdateApplicationSettingsInput:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/ApplicationId'
          description: The ID of the application.
        CredentialsToAddOrUpdate:
          allOf:
          - $ref: '#/components/schemas/ApplicationCredentialList'
          description: The credentials to be added or updated.
        CredentialsToRemove:
          allOf:
          - $ref: '#/components/schemas/ApplicationCredentialList'
          description: The credentials to be removed.
        Backint:
          allOf:
          - $ref: '#/components/schemas/BackintConfig'
          description: Installation of AWS Backint Agent for SAP HANA.
        DatabaseArn:
          allOf:
          - $ref: '#/components/schemas/SsmSapArn'
          description: The Amazon Resource Name of the SAP HANA database that replaces
            the current SAP HANA connection with the SAP_ABAP application.
      required:
      - ApplicationId
    UpdateApplicationSettingsOutput:
      type: object
      properties:
        Message:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The update message.
        OperationIds:
          allOf:
          - $ref: '#/components/schemas/OperationIdList'
          description: The IDs of the operations.
    ValidationException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
      description: The input fails to satisfy the constraints specified by an AWS
        service.
