openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: rds_data
  x-aws-serviceName: rdsdata
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-05'
  version: '2018-08-01'
  title: AWS RDS DataService
  description: |-
    RDS Data API

    Amazon RDS provides an HTTP endpoint to run SQL statements on an Amazon Aurora DB cluster. To run these statements, you use the RDS Data API (Data API).

    Data API is available with the following types of Aurora databases:

      * Aurora PostgreSQL - Serverless v2, provisioned, and Serverless v1

      * Aurora MySQL - Serverless v2, provisioned, and Serverless v1

    For more information about the Data API, see [Using RDS Data API](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/data-api.html) in the _Amazon Aurora User Guide_.
servers:
- description: The AWS RDS DataService regional endpoint
  url: https://rds-data.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths: {}
components:
  schemas:
    Arn:
      type: string
      minLength: 11
      maxLength: 100
    ArrayOfArray:
      type: array
      items:
        $ref: '#/components/schemas/ArrayValue'
      description: "<p>An array of arrays.</p>\n         <note>\n            <p>Some\
        \ array entries can be null.</p>\n         </note>"
    ArrayValue:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/BooleanArray'
        description: |-
          An array of Boolean values.
      - allOf:
        - $ref: '#/components/schemas/LongArray'
        description: |-
          An array of integers.
      - allOf:
        - $ref: '#/components/schemas/DoubleArray'
        description: |-
          An array of floating-point numbers.
      - allOf:
        - $ref: '#/components/schemas/StringArray'
        description: |-
          An array of strings.
      - allOf:
        - $ref: '#/components/schemas/ArrayOfArray'
        description: |-
          An array of arrays.
      description: |-
        Contains an array.
    ArrayValueList:
      type: array
      items:
        $ref: '#/components/schemas/Value'
    Blob:
      type: string
      format: byte
    Boolean:
      type: boolean
      default: false
    BooleanArray:
      type: array
      items:
        $ref: '#/components/schemas/BoxedBoolean'
      description: "<p>An array of Boolean values.</p>\n         <note>\n        \
        \    <p>Some array entries can be null.</p>\n         </note>"
    BoxedBoolean:
      type: boolean
    BoxedDouble:
      type: number
      format: double
    BoxedFloat:
      type: number
      format: float
    BoxedInteger:
      type: integer
    BoxedLong:
      type: integer
      format: int64
    DbName:
      type: string
      maxLength: 64
    DecimalReturnType:
      type: string
      enum:
      - STRING
      - DOUBLE_OR_LONG
    DoubleArray:
      type: array
      items:
        $ref: '#/components/schemas/BoxedDouble'
      description: "<p>An array of floating-point numbers.</p>\n         <note>\n\
        \            <p>Some array entries can be null.</p>\n         </note>"
    ErrorMessage:
      type: string
    Field:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/BoxedBoolean'
        description: |-
          A NULL value.
      - allOf:
        - $ref: '#/components/schemas/BoxedBoolean'
        description: |-
          A value of Boolean data type.
      - allOf:
        - $ref: '#/components/schemas/BoxedLong'
        description: |-
          A value of long data type.
      - allOf:
        - $ref: '#/components/schemas/BoxedDouble'
        description: |-
          A value of double data type.
      - allOf:
        - $ref: '#/components/schemas/String'
        description: |-
          A value of string data type.
      - allOf:
        - $ref: '#/components/schemas/Blob'
        description: |-
          A value of BLOB data type.
      - allOf:
        - $ref: '#/components/schemas/ArrayValue'
        description: |-
          An array of values.
      description: |-
        Contains a value.
    FieldList:
      type: array
      items:
        $ref: '#/components/schemas/Field'
    FormattedSqlRecords:
      type: string
    Id:
      type: string
      maxLength: 192
    Integer:
      type: integer
      default: 0
    Long:
      type: integer
      format: int64
      default: 0
    LongArray:
      type: array
      items:
        $ref: '#/components/schemas/BoxedLong'
      description: "<p>An array of integers.</p>\n         <note>\n            <p>Some\
        \ array entries can be null.</p>\n         </note>"
    LongReturnType:
      type: string
      enum:
      - STRING
      - LONG
    Metadata:
      type: array
      items:
        $ref: '#/components/schemas/ColumnMetadata'
    ParameterName:
      type: string
    Records:
      type: array
      items:
        $ref: '#/components/schemas/Record'
    RecordsFormatType:
      type: string
      enum:
      - NONE
      - JSON
    RecordsUpdated:
      type: integer
      format: int64
      default: 0
    Row:
      type: array
      items:
        $ref: '#/components/schemas/Value'
    SqlParameterSets:
      type: array
      items:
        $ref: '#/components/schemas/SqlParametersList'
    SqlParametersList:
      type: array
      items:
        $ref: '#/components/schemas/SqlParameter'
    SqlRecords:
      type: array
      items:
        $ref: '#/components/schemas/FieldList'
    SqlStatement:
      type: string
      maxLength: 65536
    SqlStatementResults:
      type: array
      items:
        $ref: '#/components/schemas/SqlStatementResult'
    String:
      type: string
    StringArray:
      type: array
      items:
        $ref: '#/components/schemas/String'
      description: "<p>An array of strings.</p>\n         <note>\n            <p>Some\
        \ array entries can be null.</p>\n         </note>"
    TransactionStatus:
      type: string
      maxLength: 128
    TypeHint:
      type: string
      enum:
      - JSON
      - UUID
      - TIMESTAMP
      - DATE
      - TIME
      - DECIMAL
    UpdateResults:
      type: array
      items:
        $ref: '#/components/schemas/UpdateResult'
    Value:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/BoxedBoolean'
        description: |-
          A NULL value.
      - allOf:
        - $ref: '#/components/schemas/BoxedBoolean'
        description: |-
          A value for a column of BIT data type.
      - allOf:
        - $ref: '#/components/schemas/BoxedLong'
        description: |-
          A value for a column of big integer data type.
      - allOf:
        - $ref: '#/components/schemas/BoxedInteger'
        description: |-
          A value for a column of integer data type.
      - allOf:
        - $ref: '#/components/schemas/BoxedDouble'
        description: |-
          A value for a column of double data type.
      - allOf:
        - $ref: '#/components/schemas/BoxedFloat'
        description: |-
          A value for a column of real data type.
      - allOf:
        - $ref: '#/components/schemas/String'
        description: |-
          A value for a column of string data type.
      - allOf:
        - $ref: '#/components/schemas/Blob'
        description: |-
          A value for a column of BLOB data type.
      - allOf:
        - $ref: '#/components/schemas/ArrayValueList'
        description: |-
          An array of column values.
      - allOf:
        - $ref: '#/components/schemas/StructValue'
        description: |-
          A value for a column of STRUCT data type.
      description: |-
        Contains the value of a column.

        This data structure is only used with the deprecated `ExecuteSql` operation. Use the `BatchExecuteStatement` or `ExecuteStatement` operation instead.
