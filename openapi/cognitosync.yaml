openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: cognito_sync
  x-aws-serviceName: cognitosync
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-07'
  version: '2014-06-30'
  title: Amazon Cognito Sync
  description: |-
    Amazon Cognito Sync

    Amazon Cognito Sync provides an AWS service and client library that enable cross-device syncing of application-related user data. High-level client libraries are available for both iOS and Android. You can use these libraries to persist data locally so that it's available even if the device is offline. Developer credentials don't need to be stored on the mobile device to access the service. You can use Amazon Cognito to obtain a normalized user ID and credentials. User data is persisted in a dataset that can store up to 1 MB of key-value pairs, and you can have up to 20 datasets per user identity.

    With Amazon Cognito Sync, the data stored for each identity is accessible only to credentials assigned to that identity. In order to use the Cognito Sync service, you need to make API calls using credentials retrieved with [Amazon Cognito Identity service](http://docs.aws.amazon.com/cognitoidentity/latest/APIReference/Welcome.html).

    If you want to use Cognito Sync in an Android or iOS application, you will probably want to make API calls via the AWS Mobile SDK. To learn more, see the [Developer Guide for Android](http://docs.aws.amazon.com/mobile/sdkforandroid/developerguide/cognito-sync.html) and the [Developer Guide for iOS](http://docs.aws.amazon.com/mobile/sdkforios/developerguide/cognito-sync.html).
servers:
- description: The Amazon Cognito Sync regional endpoint
  url: https://cognito-sync.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths:
  /identitypools/{IdentityPoolId}/bulkpublish:
    post:
      operationId: BulkPublish
      description: |-
        Initiates a bulk publish of all existing datasets for an Identity Pool to the configured stream. Customers are limited to one successful bulk publish per 24 hours. Bulk publish is an asynchronous request, customers can see the status of the request via the GetBulkPublishDetails operation.

        This API can only be called with developer credentials. You cannot call this API with the temporary user credentials provided by Cognito Identity.
      parameters:
      - name: IdentityPoolId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/IdentityPoolId'
      responses:
        '200': {}
        '400':
          description: |-
            Thrown when a request parameter does not comply with the associated constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '500':
          description: |-
            Indicates an internal service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
        '403':
          description: |-
            Thrown when a user is not authorized to access the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
        '404':
          description: |-
            Thrown if the resource doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /identitypools/{IdentityPoolId}/identities/{IdentityId}/datasets/{DatasetName}:
    delete:
      operationId: DeleteDataset
      description: |-
        Deletes the specific dataset. The dataset will be deleted permanently, and the action can't be undone. Datasets that this dataset was merged with will no longer report the merge. Any subsequent operation on this dataset will result in a ResourceNotFoundException.

        This API can be called with temporary user credentials provided by Cognito Identity or with developer credentials.
      parameters:
      - name: IdentityPoolId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/IdentityPoolId'
      - name: IdentityId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/IdentityId'
      - name: DatasetName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DatasetName'
      responses:
        '200': {}
        '500':
          description: |-
            Indicates an internal service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
        '400':
          description: |-
            Thrown when a request parameter does not comply with the associated constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '403':
          description: |-
            Thrown when a user is not authorized to access the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
        '409':
          description: |-
            Thrown if an update can't be applied because the resource was changed by another call and this would result in a conflict.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceConflictException'
        '404':
          description: |-
            Thrown if the resource doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Thrown if the request is throttled.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    get:
      operationId: DescribeDataset
      description: |-
        Gets meta data about a dataset by identity and dataset name. With Amazon Cognito Sync, each identity has access only to its own data. Thus, the credentials used to make this API call need to have access to the identity data.

        This API can be called with temporary user credentials provided by Cognito Identity or with developer credentials. You should use Cognito Identity credentials to make this API call.
      parameters:
      - name: IdentityPoolId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/IdentityPoolId'
      - name: IdentityId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/IdentityId'
      - name: DatasetName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DatasetName'
      responses:
        '200': {}
        '500':
          description: |-
            Indicates an internal service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
        '400':
          description: |-
            Thrown when a request parameter does not comply with the associated constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '403':
          description: |-
            Thrown when a user is not authorized to access the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
        '404':
          description: |-
            Thrown if the resource doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Thrown if the request is throttled.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    post:
      operationId: UpdateRecords
      description: |-
        Posts updates to records and adds and deletes records for a dataset and user.

        The sync count in the record patch is your last known sync count for that record. The server will reject an UpdateRecords request with a ResourceConflictException if you try to patch a record with a new value but a stale sync count.

        For example, if the sync count on the server is 5 for a key called highScore and you try and submit a new highScore with sync count of 4, the request will be rejected. To obtain the current sync count for a record, call ListRecords. On a successful update of the record, the response returns the new sync count for that record. You should present that sync count the next time you try to update that same record. When the record does not exist, specify the sync count as 0.

        This API can be called with temporary user credentials provided by Cognito Identity or with developer credentials.
      parameters:
      - name: IdentityPoolId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/IdentityPoolId'
      - name: IdentityId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/IdentityId'
      - name: DatasetName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DatasetName'
      - name: x-amz-Client-Context
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/ClientContext'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                DeviceId:
                  $ref: '#/components/schemas/DeviceId'
                RecordPatches:
                  $ref: '#/components/schemas/RecordPatchList'
                SyncSessionToken:
                  $ref: '#/components/schemas/SyncSessionToken'
      responses:
        '200': {}
        '500':
          description: |-
            Indicates an internal service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
        '400':
          description: |-
            Thrown when the limit on the number of objects or operations has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '429':
          description: |-
            Thrown if the request is throttled.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '403':
          description: |-
            Thrown when a user is not authorized to access the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
        '409':
          description: |-
            Thrown if an update can't be applied because the resource was changed by another call and this would result in a conflict.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceConflictException'
        '404':
          description: |-
            Thrown if the resource doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /identitypools/{IdentityPoolId}:
    get:
      operationId: DescribeIdentityPoolUsage
      description: |-
        Gets usage details (for example, data storage) about a particular identity pool.

        This API can only be called with developer credentials. You cannot call this API with the temporary user credentials provided by Cognito Identity.

        DescribeIdentityPoolUsage The following examples have been edited for readability. POST / HTTP/1.1 CONTENT-TYPE: application/json X-AMZN-REQUESTID: 8dc0e749-c8cd-48bd-8520-da6be00d528b X-AMZ-TARGET: com.amazonaws.cognito.sync.model.AWSCognitoSyncService.DescribeIdentityPoolUsage HOST: cognito-sync.us-east-1.amazonaws.com:443 X-AMZ-DATE: 20141111T205737Z AUTHORIZATION: AWS4-HMAC-SHA256 Credential=, SignedHeaders=content-type;host;x-amz-date;x-amz-target;x-amzn-requestid, Signature= { "Operation": "com.amazonaws.cognito.sync.model#DescribeIdentityPoolUsage", "Service": "com.amazonaws.cognito.sync.model#AWSCognitoSyncService", "Input": { "IdentityPoolId": "IDENTITY_POOL_ID" } }  1.1 200 OK x-amzn-requestid: 8dc0e749-c8cd-48bd-8520-da6be00d528b content-type: application/json content-length: 271 date: Tue, 11 Nov 2014 20:57:37 GMT { "Output": { "__type": "com.amazonaws.cognito.sync.model#DescribeIdentityPoolUsageResponse", "IdentityPoolUsage": { "DataStorage": 0, "IdentityPoolId": "IDENTITY_POOL_ID", "LastModifiedDate": 1.413231134115E9, "SyncSessionsCount": null } }, "Version": "1.0" }
      parameters:
      - name: IdentityPoolId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/IdentityPoolId'
      responses:
        '200': {}
        '500':
          description: |-
            Indicates an internal service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
        '400':
          description: |-
            Thrown when a request parameter does not comply with the associated constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '403':
          description: |-
            Thrown when a user is not authorized to access the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
        '404':
          description: |-
            Thrown if the resource doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Thrown if the request is throttled.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /identitypools/{IdentityPoolId}/identities/{IdentityId}:
    get:
      operationId: DescribeIdentityUsage
      description: |-
        Gets usage information for an identity, including number of datasets and data usage.

        This API can be called with temporary user credentials provided by Cognito Identity or with developer credentials.

        DescribeIdentityUsage The following examples have been edited for readability. POST / HTTP/1.1 CONTENT-TYPE: application/json X-AMZN-REQUESTID: 33f9b4e4-a177-4aad-a3bb-6edb7980b283 X-AMZ-TARGET: com.amazonaws.cognito.sync.model.AWSCognitoSyncService.DescribeIdentityUsage HOST: cognito-sync.us-east-1.amazonaws.com:443 X-AMZ-DATE: 20141111T215129Z AUTHORIZATION: AWS4-HMAC-SHA256 Credential=, SignedHeaders=content-type;host;x-amz-date;x-amz-target;x-amzn-requestid, Signature= { "Operation": "com.amazonaws.cognito.sync.model#DescribeIdentityUsage", "Service": "com.amazonaws.cognito.sync.model#AWSCognitoSyncService", "Input": { "IdentityPoolId": "IDENTITY_POOL_ID", "IdentityId": "IDENTITY_ID" } }  1.1 200 OK x-amzn-requestid: 33f9b4e4-a177-4aad-a3bb-6edb7980b283 content-type: application/json content-length: 318 date: Tue, 11 Nov 2014 21:51:29 GMT { "Output": { "__type": "com.amazonaws.cognito.sync.model#DescribeIdentityUsageResponse", "IdentityUsage": { "DataStorage": 16, "DatasetCount": 1, "IdentityId": "IDENTITY_ID", "IdentityPoolId": "IDENTITY_POOL_ID", "LastModifiedDate": 1.412974081336E9 } }, "Version": "1.0" }
      parameters:
      - name: IdentityPoolId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/IdentityPoolId'
      - name: IdentityId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/IdentityId'
      responses:
        '200': {}
        '500':
          description: |-
            Indicates an internal service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
        '400':
          description: |-
            Thrown when a request parameter does not comply with the associated constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '403':
          description: |-
            Thrown when a user is not authorized to access the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
        '404':
          description: |-
            Thrown if the resource doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Thrown if the request is throttled.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /identitypools/{IdentityPoolId}/getBulkPublishDetails:
    post:
      operationId: GetBulkPublishDetails
      description: |-
        Get the status of the last BulkPublish operation for an identity pool.

        This API can only be called with developer credentials. You cannot call this API with the temporary user credentials provided by Cognito Identity.
      parameters:
      - name: IdentityPoolId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/IdentityPoolId'
      responses:
        '200': {}
        '500':
          description: |-
            Indicates an internal service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
        '400':
          description: |-
            Thrown when a request parameter does not comply with the associated constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '403':
          description: |-
            Thrown when a user is not authorized to access the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
        '404':
          description: |-
            Thrown if the resource doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /identitypools/{IdentityPoolId}/events:
    get:
      operationId: GetCognitoEvents
      description: |-
        Gets the events and the corresponding Lambda functions associated with an identity pool.

        This API can only be called with developer credentials. You cannot call this API with the temporary user credentials provided by Cognito Identity.
      parameters:
      - name: IdentityPoolId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/IdentityPoolId'
      responses:
        '200': {}
        '500':
          description: |-
            Indicates an internal service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
        '400':
          description: |-
            Thrown when a request parameter does not comply with the associated constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '403':
          description: |-
            Thrown when a user is not authorized to access the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
        '404':
          description: |-
            Thrown if the resource doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Thrown if the request is throttled.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    post:
      operationId: SetCognitoEvents
      description: |-
        Sets the AWS Lambda function for a given event type for an identity pool. This request only updates the key/value pair specified. Other key/values pairs are not updated. To remove a key value pair, pass a empty value for the particular key.

        This API can only be called with developer credentials. You cannot call this API with the temporary user credentials provided by Cognito Identity.
      parameters:
      - name: IdentityPoolId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/IdentityPoolId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Events:
                  $ref: '#/components/schemas/Events'
      responses:
        '200': {}
        '500':
          description: |-
            Indicates an internal service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
        '400':
          description: |-
            Thrown when a request parameter does not comply with the associated constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '403':
          description: |-
            Thrown when a user is not authorized to access the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
        '404':
          description: |-
            Thrown if the resource doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Thrown if the request is throttled.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /identitypools/{IdentityPoolId}/configuration:
    get:
      operationId: GetIdentityPoolConfiguration
      description: |-
        Gets the configuration settings of an identity pool.

        This API can only be called with developer credentials. You cannot call this API with the temporary user credentials provided by Cognito Identity.

        GetIdentityPoolConfiguration The following examples have been edited for readability. POST / HTTP/1.1 CONTENT-TYPE: application/json X-AMZN-REQUESTID: b1cfdd4b-f620-4fe4-be0f-02024a1d33da X-AMZ-TARGET: com.amazonaws.cognito.sync.model.AWSCognitoSyncService.GetIdentityPoolConfiguration HOST: cognito-sync.us-east-1.amazonaws.com X-AMZ-DATE: 20141004T195722Z AUTHORIZATION: AWS4-HMAC-SHA256 Credential=, SignedHeaders=content-type;content-length;host;x-amz-date;x-amz-target, Signature= { "Operation": "com.amazonaws.cognito.sync.model#GetIdentityPoolConfiguration", "Service": "com.amazonaws.cognito.sync.model#AWSCognitoSyncService", "Input": { "IdentityPoolId": "ID_POOL_ID" } }  1.1 200 OK x-amzn-requestid: b1cfdd4b-f620-4fe4-be0f-02024a1d33da date: Sat, 04 Oct 2014 19:57:22 GMT content-type: application/json content-length: 332 { "Output": { "__type": "com.amazonaws.cognito.sync.model#GetIdentityPoolConfigurationResponse", "IdentityPoolId": "ID_POOL_ID", "PushSync": { "ApplicationArns": ["PLATFORMARN1", "PLATFORMARN2"], "RoleArn": "ROLEARN" } }, "Version": "1.0" }
      parameters:
      - name: IdentityPoolId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/IdentityPoolId'
      responses:
        '200': {}
        '500':
          description: |-
            Indicates an internal service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
        '400':
          description: |-
            Thrown when a request parameter does not comply with the associated constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '403':
          description: |-
            Thrown when a user is not authorized to access the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
        '404':
          description: |-
            Thrown if the resource doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Thrown if the request is throttled.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    post:
      operationId: SetIdentityPoolConfiguration
      description: |-
        Sets the necessary configuration for push sync.

        This API can only be called with developer credentials. You cannot call this API with the temporary user credentials provided by Cognito Identity.

        SetIdentityPoolConfiguration The following examples have been edited for readability. POST / HTTP/1.1 CONTENT-TYPE: application/json X-AMZN-REQUESTID: a46db021-f5dd-45d6-af5b-7069fa4a211b X-AMZ-TARGET: com.amazonaws.cognito.sync.model.AWSCognitoSyncService.SetIdentityPoolConfiguration HOST: cognito-sync.us-east-1.amazonaws.com X-AMZ-DATE: 20141004T200006Z AUTHORIZATION: AWS4-HMAC-SHA256 Credential=, SignedHeaders=content-type;content-length;host;x-amz-date;x-amz-target, Signature= { "Operation": "com.amazonaws.cognito.sync.model#SetIdentityPoolConfiguration", "Service": "com.amazonaws.cognito.sync.model#AWSCognitoSyncService", "Input": { "IdentityPoolId": "ID_POOL_ID", "PushSync": { "ApplicationArns": ["PLATFORMARN1", "PLATFORMARN2"], "RoleArn": "ROLEARN" } } }  1.1 200 OK x-amzn-requestid: a46db021-f5dd-45d6-af5b-7069fa4a211b date: Sat, 04 Oct 2014 20:00:06 GMT content-type: application/json content-length: 332 { "Output": { "__type": "com.amazonaws.cognito.sync.model#SetIdentityPoolConfigurationResponse", "IdentityPoolId": "ID_POOL_ID", "PushSync": { "ApplicationArns": ["PLATFORMARN1", "PLATFORMARN2"], "RoleArn": "ROLEARN" } }, "Version": "1.0" }
      parameters:
      - name: IdentityPoolId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/IdentityPoolId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                PushSync:
                  $ref: '#/components/schemas/PushSync'
                CognitoStreams:
                  $ref: '#/components/schemas/CognitoStreams'
      responses:
        '200': {}
        '400':
          description: |-
            Thrown when a request parameter does not comply with the associated constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '500':
          description: |-
            Indicates an internal service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
        '403':
          description: |-
            Thrown when a user is not authorized to access the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
        '404':
          description: |-
            Thrown if the resource doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Thrown if the request is throttled.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /identitypools/{IdentityPoolId}/identities/{IdentityId}/datasets:
    get:
      operationId: ListDatasets
      description: |-
        Lists datasets for an identity. With Amazon Cognito Sync, each identity has access only to its own data. Thus, the credentials used to make this API call need to have access to the identity data.

        ListDatasets can be called with temporary user credentials provided by Cognito Identity or with developer credentials. You should use the Cognito Identity credentials to make this API call.

        ListDatasets The following examples have been edited for readability. POST / HTTP/1.1 CONTENT-TYPE: application/json X-AMZN-REQUESTID: 15225768-209f-4078-aaed-7494ace9f2db X-AMZ-TARGET: com.amazonaws.cognito.sync.model.AWSCognitoSyncService.ListDatasets HOST: cognito-sync.us-east-1.amazonaws.com:443 X-AMZ-DATE: 20141111T215640Z AUTHORIZATION: AWS4-HMAC-SHA256 Credential=, SignedHeaders=content-type;host;x-amz-date;x-amz-target;x-amzn-requestid, Signature= { "Operation": "com.amazonaws.cognito.sync.model#ListDatasets", "Service": "com.amazonaws.cognito.sync.model#AWSCognitoSyncService", "Input": { "IdentityPoolId": "IDENTITY_POOL_ID", "IdentityId": "IDENTITY_ID", "MaxResults": "3" } }  1.1 200 OK x-amzn-requestid: 15225768-209f-4078-aaed-7494ace9f2db, 15225768-209f-4078-aaed-7494ace9f2db content-type: application/json content-length: 355 date: Tue, 11 Nov 2014 21:56:40 GMT { "Output": { "__type": "com.amazonaws.cognito.sync.model#ListDatasetsResponse", "Count": 1, "Datasets": [ { "CreationDate": 1.412974057151E9, "DataStorage": 16, "DatasetName": "my_list", "IdentityId": "IDENTITY_ID", "LastModifiedBy": "123456789012", "LastModifiedDate": 1.412974057244E9, "NumRecords": 1 }], "NextToken": null }, "Version": "1.0" }
      parameters:
      - name: IdentityPoolId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/IdentityPoolId'
      - name: IdentityId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/IdentityId'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/IntegerString'
      responses:
        '200': {}
        '500':
          description: |-
            Indicates an internal service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
        '400':
          description: |-
            Thrown when a request parameter does not comply with the associated constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '403':
          description: |-
            Thrown when a user is not authorized to access the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
        '429':
          description: |-
            Thrown if the request is throttled.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /identitypools:
    get:
      operationId: ListIdentityPoolUsage
      description: |-
        Gets a list of identity pools registered with Cognito.

        ListIdentityPoolUsage can only be called with developer credentials. You cannot make this API call with the temporary user credentials provided by Cognito Identity.

        ListIdentityPoolUsage The following examples have been edited for readability. POST / HTTP/1.1 CONTENT-TYPE: application/json X-AMZN-REQUESTID: 9be7c425-ef05-48c0-aef3-9f0ff2fe17d3 X-AMZ-TARGET: com.amazonaws.cognito.sync.model.AWSCognitoSyncService.ListIdentityPoolUsage HOST: cognito-sync.us-east-1.amazonaws.com:443 X-AMZ-DATE: 20141111T211414Z AUTHORIZATION: AWS4-HMAC-SHA256 Credential=, SignedHeaders=content-type;host;x-amz-date;x-amz-target;x-amzn-requestid, Signature= { "Operation": "com.amazonaws.cognito.sync.model#ListIdentityPoolUsage", "Service": "com.amazonaws.cognito.sync.model#AWSCognitoSyncService", "Input": { "MaxResults": "2" } }  1.1 200 OK x-amzn-requestid: 9be7c425-ef05-48c0-aef3-9f0ff2fe17d3 content-type: application/json content-length: 519 date: Tue, 11 Nov 2014 21:14:14 GMT { "Output": { "__type": "com.amazonaws.cognito.sync.model#ListIdentityPoolUsageResponse", "Count": 2, "IdentityPoolUsages": [ { "DataStorage": 0, "IdentityPoolId": "IDENTITY_POOL_ID", "LastModifiedDate": 1.413836234607E9, "SyncSessionsCount": null }, { "DataStorage": 0, "IdentityPoolId": "IDENTITY_POOL_ID", "LastModifiedDate": 1.410892165601E9, "SyncSessionsCount": null }], "MaxResults": 2, "NextToken": "dXMtZWFzdC0xOjBjMWJhMDUyLWUwOTgtNDFmYS1hNzZlLWVhYTJjMTI1Zjg2MQ==" }, "Version": "1.0" }
      parameters:
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/IntegerString'
      responses:
        '200': {}
        '500':
          description: |-
            Indicates an internal service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
        '400':
          description: |-
            Thrown when a request parameter does not comply with the associated constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '403':
          description: |-
            Thrown when a user is not authorized to access the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
        '429':
          description: |-
            Thrown if the request is throttled.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /identitypools/{IdentityPoolId}/identities/{IdentityId}/datasets/{DatasetName}/records:
    get:
      operationId: ListRecords
      description: |-
        Gets paginated records, optionally changed after a particular sync count for a dataset and identity. With Amazon Cognito Sync, each identity has access only to its own data. Thus, the credentials used to make this API call need to have access to the identity data.

        ListRecords can be called with temporary user credentials provided by Cognito Identity or with developer credentials. You should use Cognito Identity credentials to make this API call.

        ListRecords The following examples have been edited for readability. POST / HTTP/1.1 CONTENT-TYPE: application/json X-AMZN-REQUESTID: b3d2e31e-d6b7-4612-8e84-c9ba288dab5d X-AMZ-TARGET: com.amazonaws.cognito.sync.model.AWSCognitoSyncService.ListRecords HOST: cognito-sync.us-east-1.amazonaws.com:443 X-AMZ-DATE: 20141111T183230Z AUTHORIZATION: AWS4-HMAC-SHA256 Credential=, SignedHeaders=content-type;host;x-amz-date;x-amz-target;x-amzn-requestid, Signature= { "Operation": "com.amazonaws.cognito.sync.model#ListRecords", "Service": "com.amazonaws.cognito.sync.model#AWSCognitoSyncService", "Input": { "IdentityPoolId": "IDENTITY_POOL_ID", "IdentityId": "IDENTITY_ID", "DatasetName": "newDataSet" } }  1.1 200 OK x-amzn-requestid: b3d2e31e-d6b7-4612-8e84-c9ba288dab5d content-type: application/json content-length: 623 date: Tue, 11 Nov 2014 18:32:30 GMT { "Output": { "__type": "com.amazonaws.cognito.sync.model#ListRecordsResponse", "Count": 0, "DatasetDeletedAfterRequestedSyncCount": false, "DatasetExists": false, "DatasetSyncCount": 0, "LastModifiedBy": null, "MergedDatasetNames": null, "NextToken": null, "Records": [], "SyncSessionToken": "SYNC_SESSION_TOKEN" }, "Version": "1.0" }
      parameters:
      - name: IdentityPoolId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/IdentityPoolId'
      - name: IdentityId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/IdentityId'
      - name: DatasetName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DatasetName'
      - name: lastSyncCount
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Long'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/IntegerString'
      - name: syncSessionToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/SyncSessionToken'
      responses:
        '200': {}
        '500':
          description: |-
            Indicates an internal service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
        '400':
          description: |-
            Thrown when a request parameter does not comply with the associated constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '403':
          description: |-
            Thrown when a user is not authorized to access the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
        '429':
          description: |-
            Thrown if the request is throttled.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /identitypools/{IdentityPoolId}/identity/{IdentityId}/device:
    post:
      operationId: RegisterDevice
      description: |-
        Registers a device to receive push sync notifications.

        This API can only be called with temporary credentials provided by Cognito Identity. You cannot call this API with developer credentials.

        RegisterDevice The following examples have been edited for readability. POST / HTTP/1.1 CONTENT-TYPE: application/json X-AMZN-REQUESTID: 368f9200-3eca-449e-93b3-7b9c08d8e185 X-AMZ-TARGET: com.amazonaws.cognito.sync.model.AWSCognitoSyncService.RegisterDevice HOST: cognito-sync.us-east-1.amazonaws.com X-AMZ-DATE: 20141004T194643Z X-AMZ-SECURITY-TOKEN:  AUTHORIZATION: AWS4-HMAC-SHA256 Credential=, SignedHeaders=content-type;content-length;host;x-amz-date;x-amz-target, Signature= { "Operation": "com.amazonaws.cognito.sync.model#RegisterDevice", "Service": "com.amazonaws.cognito.sync.model#AWSCognitoSyncService", "Input": { "IdentityPoolId": "ID_POOL_ID", "IdentityId": "IDENTITY_ID", "Platform": "GCM", "Token": "PUSH_TOKEN" } }  1.1 200 OK x-amzn-requestid: 368f9200-3eca-449e-93b3-7b9c08d8e185 date: Sat, 04 Oct 2014 19:46:44 GMT content-type: application/json content-length: 145 { "Output": { "__type": "com.amazonaws.cognito.sync.model#RegisterDeviceResponse", "DeviceId": "5cd28fbe-dd83-47ab-9f83-19093a5fb014" }, "Version": "1.0" }
      parameters:
      - name: IdentityPoolId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/IdentityPoolId'
      - name: IdentityId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/IdentityId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Platform:
                  $ref: '#/components/schemas/Platform'
                Token:
                  $ref: '#/components/schemas/PushToken'
      responses:
        '200': {}
        '500':
          description: |-
            Indicates an internal service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
        '400':
          description: |-
            Thrown when a request parameter does not comply with the associated constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '403':
          description: |-
            Thrown when a user is not authorized to access the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
        '404':
          description: |-
            Thrown if the resource doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Thrown if the request is throttled.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /identitypools/{IdentityPoolId}/identities/{IdentityId}/datasets/{DatasetName}/subscriptions/{DeviceId}:
    post:
      operationId: SubscribeToDataset
      description: |-
        Subscribes to receive notifications when a dataset is modified by another device.

        This API can only be called with temporary credentials provided by Cognito Identity. You cannot call this API with developer credentials.

        SubscribeToDataset The following examples have been edited for readability. POST / HTTP/1.1 CONTENT-TYPE: application/json X-AMZN-REQUESTID: 8b9932b7-201d-4418-a960-0a470e11de9f X-AMZ-TARGET: com.amazonaws.cognito.sync.model.AWSCognitoSyncService.SubscribeToDataset HOST: cognito-sync.us-east-1.amazonaws.com X-AMZ-DATE: 20141004T195350Z X-AMZ-SECURITY-TOKEN:  AUTHORIZATION: AWS4-HMAC-SHA256 Credential=, SignedHeaders=content-type;content-length;host;x-amz-date;x-amz-target, Signature= { "Operation": "com.amazonaws.cognito.sync.model#SubscribeToDataset", "Service": "com.amazonaws.cognito.sync.model#AWSCognitoSyncService", "Input": { "IdentityPoolId": "ID_POOL_ID", "IdentityId": "IDENTITY_ID", "DatasetName": "Rufus", "DeviceId": "5cd28fbe-dd83-47ab-9f83-19093a5fb014" } }  1.1 200 OK x-amzn-requestid: 8b9932b7-201d-4418-a960-0a470e11de9f date: Sat, 04 Oct 2014 19:53:50 GMT content-type: application/json content-length: 99 { "Output": { "__type": "com.amazonaws.cognito.sync.model#SubscribeToDatasetResponse" }, "Version": "1.0" }
      parameters:
      - name: IdentityPoolId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/IdentityPoolId'
      - name: IdentityId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/IdentityId'
      - name: DatasetName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DatasetName'
      - name: DeviceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DeviceId'
      responses:
        '200': {}
        '500':
          description: |-
            Indicates an internal service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
        '400':
          description: |-
            Thrown when a request parameter does not comply with the associated constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '403':
          description: |-
            Thrown when a user is not authorized to access the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
        '404':
          description: |-
            Thrown if the resource doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Thrown if the request is throttled.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    delete:
      operationId: UnsubscribeFromDataset
      description: |-
        Unsubscribes from receiving notifications when a dataset is modified by another device.

        This API can only be called with temporary credentials provided by Cognito Identity. You cannot call this API with developer credentials.

        UnsubscribeFromDataset The following examples have been edited for readability. POST / HTTP/1.1 CONTENT-TYPE: application/json X-AMZ-REQUESTSUPERTRACE: true X-AMZN-REQUESTID: 676896d6-14ca-45b1-8029-6d36b10a077e X-AMZ-TARGET: com.amazonaws.cognito.sync.model.AWSCognitoSyncService.UnsubscribeFromDataset HOST: cognito-sync.us-east-1.amazonaws.com X-AMZ-DATE: 20141004T195446Z X-AMZ-SECURITY-TOKEN:  AUTHORIZATION: AWS4-HMAC-SHA256 Credential=, SignedHeaders=content-type;content-length;host;x-amz-date;x-amz-target, Signature= { "Operation": "com.amazonaws.cognito.sync.model#UnsubscribeFromDataset", "Service": "com.amazonaws.cognito.sync.model#AWSCognitoSyncService", "Input": { "IdentityPoolId": "ID_POOL_ID", "IdentityId": "IDENTITY_ID", "DatasetName": "Rufus", "DeviceId": "5cd28fbe-dd83-47ab-9f83-19093a5fb014" } }  1.1 200 OK x-amzn-requestid: 676896d6-14ca-45b1-8029-6d36b10a077e date: Sat, 04 Oct 2014 19:54:46 GMT content-type: application/json content-length: 103 { "Output": { "__type": "com.amazonaws.cognito.sync.model#UnsubscribeFromDatasetResponse" }, "Version": "1.0" }
      parameters:
      - name: IdentityPoolId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/IdentityPoolId'
      - name: IdentityId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/IdentityId'
      - name: DatasetName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DatasetName'
      - name: DeviceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DeviceId'
      responses:
        '200': {}
        '500':
          description: |-
            Indicates an internal service error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorException'
        '400':
          description: |-
            Thrown when a request parameter does not comply with the associated constraints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
        '403':
          description: |-
            Thrown when a user is not authorized to access the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
        '404':
          description: |-
            Thrown if the resource doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Thrown if the request is throttled.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
components:
  schemas:
    AlreadyStreamedException:
      type: object
      properties:
        message:
          allOf:
          - $ref: '#/components/schemas/ExceptionMessage'
          description: The message associated with the AlreadyStreamedException exception.
      required:
      - message
      description: An exception thrown when a bulk publish operation is requested
        less than 24 hours after a previous bulk publish operation completed successfully.
    ApplicationArn:
      type: string
      pattern: ^arn:aws:sns:[-0-9a-z]+:\d+:app/[A-Z_]+/[a-zA-Z0-9_.-]+$
    ApplicationArnList:
      type: array
      items:
        $ref: '#/components/schemas/ApplicationArn'
    AssumeRoleArn:
      type: string
      pattern: ^arn:aws:iam::\d+:role/
      minLength: 20
      maxLength: 2048
    Boolean:
      type: boolean
      default: false
    BulkPublishRequest:
      type: object
      properties:
        IdentityPoolId:
          allOf:
          - $ref: '#/components/schemas/IdentityPoolId'
          description: A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE)
            created by Amazon Cognito. GUID generation is unique within a region.
      required:
      - IdentityPoolId
      description: The input for the BulkPublish operation.
    BulkPublishResponse:
      type: object
      properties:
        IdentityPoolId:
          allOf:
          - $ref: '#/components/schemas/IdentityPoolId'
          description: A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE)
            created by Amazon Cognito. GUID generation is unique within a region.
      description: The output for the BulkPublish operation.
    BulkPublishStatus:
      type: string
      enum:
      - NOT_STARTED
      - IN_PROGRESS
      - FAILED
      - SUCCEEDED
    ClientContext:
      type: string
    CognitoEventType:
      type: string
    CognitoStreams:
      type: object
      properties:
        StreamName:
          allOf:
          - $ref: '#/components/schemas/StreamName'
          description: The name of the Cognito stream to receive updates. This stream
            must be in the developers account and in the same region as the identity
            pool.
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/AssumeRoleArn'
          description: The ARN of the role Amazon Cognito can assume in order to publish
            to the stream. This role must grant access to Amazon Cognito (cognito-sync)
            to invoke PutRecord on your Cognito stream.
        StreamingStatus:
          allOf:
          - $ref: '#/components/schemas/StreamingStatus'
          description: 'Status of the Cognito streams. Valid values are:


            ENABLED - Streaming of updates to identity pool is enabled.


            DISABLED - Streaming of updates to identity pool is disabled. Bulk publish
            will also fail if StreamingStatus is DISABLED.'
      description: Configuration options for configure Cognito streams.
    ConcurrentModificationException:
      type: object
      properties:
        message:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The message returned by a ConcurrentModicationException.
      required:
      - message
      description: Thrown if there are parallel requests to modify a resource.
    Dataset:
      type: object
      properties:
        IdentityId:
          allOf:
          - $ref: '#/components/schemas/IdentityId'
          description: A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE)
            created by Amazon Cognito. GUID generation is unique within a region.
        DatasetName:
          allOf:
          - $ref: '#/components/schemas/DatasetName'
          description: A string of up to 128 characters. Allowed characters are a-z,
            A-Z, 0-9, '_' (underscore), '-' (dash), and '.' (dot).
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/Date'
          description: Date on which the dataset was created.
        LastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/Date'
          description: Date when the dataset was last modified.
        LastModifiedBy:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The device that made the last change to this dataset.
        DataStorage:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: Total size in bytes of the records in this dataset.
        NumRecords:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: Number of records in this dataset.
      description: A collection of data for an identity pool. An identity pool can
        have multiple datasets. A dataset is per identity and can be general or associated
        with a particular entity in an application (like a saved game). Datasets are
        automatically created if they don't exist. Data is synced by dataset, and
        a dataset can hold up to 1MB of key-value pairs.
    DatasetList:
      type: array
      items:
        $ref: '#/components/schemas/Dataset'
    DatasetName:
      type: string
      pattern: ^[a-zA-Z0-9_.:-]+$
      minLength: 1
      maxLength: 128
    Date:
      type: string
      format: date-time
    DeleteDatasetRequest:
      type: object
      properties:
        IdentityPoolId:
          allOf:
          - $ref: '#/components/schemas/IdentityPoolId'
          description: A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE)
            created by Amazon Cognito. GUID generation is unique within a region.
        IdentityId:
          allOf:
          - $ref: '#/components/schemas/IdentityId'
          description: A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE)
            created by Amazon Cognito. GUID generation is unique within a region.
        DatasetName:
          allOf:
          - $ref: '#/components/schemas/DatasetName'
          description: A string of up to 128 characters. Allowed characters are a-z,
            A-Z, 0-9, '_' (underscore), '-' (dash), and '.' (dot).
      required:
      - IdentityPoolId
      - IdentityId
      - DatasetName
      description: A request to delete the specific dataset.
    DeleteDatasetResponse:
      type: object
      properties:
        Dataset:
          allOf:
          - $ref: '#/components/schemas/Dataset'
          description: A collection of data for an identity pool. An identity pool
            can have multiple datasets. A dataset is per identity and can be general
            or associated with a particular entity in an application (like a saved
            game). Datasets are automatically created if they don't exist. Data is
            synced by dataset, and a dataset can hold up to 1MB of key-value pairs.
      description: Response to a successful DeleteDataset request.
    DescribeDatasetRequest:
      type: object
      properties:
        IdentityPoolId:
          allOf:
          - $ref: '#/components/schemas/IdentityPoolId'
          description: A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE)
            created by Amazon Cognito. GUID generation is unique within a region.
        IdentityId:
          allOf:
          - $ref: '#/components/schemas/IdentityId'
          description: A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE)
            created by Amazon Cognito. GUID generation is unique within a region.
        DatasetName:
          allOf:
          - $ref: '#/components/schemas/DatasetName'
          description: A string of up to 128 characters. Allowed characters are a-z,
            A-Z, 0-9, '_' (underscore), '-' (dash), and '.' (dot).
      required:
      - IdentityPoolId
      - IdentityId
      - DatasetName
      description: A request for meta data about a dataset (creation date, number
        of records, size) by owner and dataset name.
    DescribeDatasetResponse:
      type: object
      properties:
        Dataset:
          allOf:
          - $ref: '#/components/schemas/Dataset'
          description: Meta data for a collection of data for an identity. An identity
            can have multiple datasets. A dataset can be general or associated with
            a particular entity in an application (like a saved game). Datasets are
            automatically created if they don't exist. Data is synced by dataset,
            and a dataset can hold up to 1MB of key-value pairs.
      description: Response to a successful DescribeDataset request.
    DescribeIdentityPoolUsageRequest:
      type: object
      properties:
        IdentityPoolId:
          allOf:
          - $ref: '#/components/schemas/IdentityPoolId'
          description: A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE)
            created by Amazon Cognito. GUID generation is unique within a region.
      required:
      - IdentityPoolId
      description: A request for usage information about the identity pool.
    DescribeIdentityPoolUsageResponse:
      type: object
      properties:
        IdentityPoolUsage:
          allOf:
          - $ref: '#/components/schemas/IdentityPoolUsage'
          description: Information about the usage of the identity pool.
      description: Response to a successful DescribeIdentityPoolUsage request.
    DescribeIdentityUsageRequest:
      type: object
      properties:
        IdentityPoolId:
          allOf:
          - $ref: '#/components/schemas/IdentityPoolId'
          description: A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE)
            created by Amazon Cognito. GUID generation is unique within a region.
        IdentityId:
          allOf:
          - $ref: '#/components/schemas/IdentityId'
          description: A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE)
            created by Amazon Cognito. GUID generation is unique within a region.
      required:
      - IdentityPoolId
      - IdentityId
      description: A request for information about the usage of an identity pool.
    DescribeIdentityUsageResponse:
      type: object
      properties:
        IdentityUsage:
          allOf:
          - $ref: '#/components/schemas/IdentityUsage'
          description: Usage information for the identity.
      description: The response to a successful DescribeIdentityUsage request.
    DeviceId:
      type: string
      minLength: 1
      maxLength: 256
    DuplicateRequestException:
      type: object
      properties:
        message:
          allOf:
          - $ref: '#/components/schemas/ExceptionMessage'
          description: The message associated with the DuplicateRequestException exception.
      required:
      - message
      description: An exception thrown when there is an IN_PROGRESS bulk publish operation
        for the given identity pool.
    Events:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/LambdaFunctionArn'
    ExceptionMessage:
      type: string
    GetBulkPublishDetailsRequest:
      type: object
      properties:
        IdentityPoolId:
          allOf:
          - $ref: '#/components/schemas/IdentityPoolId'
          description: A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE)
            created by Amazon Cognito. GUID generation is unique within a region.
      required:
      - IdentityPoolId
      description: The input for the GetBulkPublishDetails operation.
    GetBulkPublishDetailsResponse:
      type: object
      properties:
        IdentityPoolId:
          allOf:
          - $ref: '#/components/schemas/IdentityPoolId'
          description: A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE)
            created by Amazon Cognito. GUID generation is unique within a region.
        BulkPublishStartTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          description: The date/time at which the last bulk publish was initiated.
        BulkPublishCompleteTime:
          allOf:
          - $ref: '#/components/schemas/Date'
          description: If BulkPublishStatus is SUCCEEDED, the time the last bulk publish
            operation completed.
        BulkPublishStatus:
          allOf:
          - $ref: '#/components/schemas/BulkPublishStatus'
          description: 'Status of the last bulk publish operation, valid values are:


            NOT_STARTED - No bulk publish has been requested for this identity pool


            IN_PROGRESS - Data is being published to the configured stream


            SUCCEEDED - All data for the identity pool has been published to the configured
            stream


            FAILED - Some portion of the data has failed to publish, check FailureMessage
            for the cause.'
        FailureMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          description: If BulkPublishStatus is FAILED this field will contain the
            error message that caused the bulk publish to fail.
      description: The output for the GetBulkPublishDetails operation.
    GetCognitoEventsRequest:
      type: object
      properties:
        IdentityPoolId:
          allOf:
          - $ref: '#/components/schemas/IdentityPoolId'
          description: The Cognito Identity Pool ID for the request
      required:
      - IdentityPoolId
      description: A request for a list of the configured Cognito Events
    GetCognitoEventsResponse:
      type: object
      properties:
        Events:
          allOf:
          - $ref: '#/components/schemas/Events'
          description: The Cognito Events returned from the GetCognitoEvents request
      description: The response from the GetCognitoEvents request
    GetIdentityPoolConfigurationRequest:
      type: object
      properties:
        IdentityPoolId:
          allOf:
          - $ref: '#/components/schemas/IdentityPoolId'
          description: A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE)
            created by Amazon Cognito. This is the ID of the pool for which to return
            a configuration.
      required:
      - IdentityPoolId
      description: The input for the GetIdentityPoolConfiguration operation.
    GetIdentityPoolConfigurationResponse:
      type: object
      properties:
        IdentityPoolId:
          allOf:
          - $ref: '#/components/schemas/IdentityPoolId'
          description: A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE)
            created by Amazon Cognito.
        PushSync:
          allOf:
          - $ref: '#/components/schemas/PushSync'
          description: Options to apply to this identity pool for push synchronization.
        CognitoStreams:
          allOf:
          - $ref: '#/components/schemas/CognitoStreams'
          description: Options to apply to this identity pool for Amazon Cognito streams.
      description: The output for the GetIdentityPoolConfiguration operation.
    IdentityId:
      type: string
      pattern: ^[\w-]+:[0-9a-f-]+$
      minLength: 1
      maxLength: 55
    IdentityPoolId:
      type: string
      pattern: ^[\w-]+:[0-9a-f-]+$
      minLength: 1
      maxLength: 55
    IdentityPoolUsage:
      type: object
      properties:
        IdentityPoolId:
          allOf:
          - $ref: '#/components/schemas/IdentityPoolId'
          description: A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE)
            created by Amazon Cognito. GUID generation is unique within a region.
        SyncSessionsCount:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: Number of sync sessions for the identity pool.
        DataStorage:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: Data storage information for the identity pool.
        LastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/Date'
          description: Date on which the identity pool was last modified.
      description: Usage information for the identity pool.
    IdentityPoolUsageList:
      type: array
      items:
        $ref: '#/components/schemas/IdentityPoolUsage'
    IdentityUsage:
      type: object
      properties:
        IdentityId:
          allOf:
          - $ref: '#/components/schemas/IdentityId'
          description: A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE)
            created by Amazon Cognito. GUID generation is unique within a region.
        IdentityPoolId:
          allOf:
          - $ref: '#/components/schemas/IdentityPoolId'
          description: A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE)
            created by Amazon Cognito. GUID generation is unique within a region.
        LastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/Date'
          description: Date on which the identity was last modified.
        DatasetCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: Number of datasets for the identity.
        DataStorage:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: Total data storage for this identity.
      description: Usage information for the identity.
    Integer:
      type: integer
      default: 0
    IntegerString:
      type: integer
    InternalErrorException:
      type: object
      properties:
        message:
          allOf:
          - $ref: '#/components/schemas/ExceptionMessage'
          description: Message returned by InternalErrorException.
      required:
      - message
      description: Indicates an internal service error.
    InvalidConfigurationException:
      type: object
      properties:
        message:
          allOf:
          - $ref: '#/components/schemas/ExceptionMessage'
          description: Message returned by InvalidConfigurationException.
      required:
      - message
    InvalidLambdaFunctionOutputException:
      type: object
      properties:
        message:
          allOf:
          - $ref: '#/components/schemas/ExceptionMessage'
          description: A message returned when an InvalidLambdaFunctionOutputException
            occurs
      required:
      - message
      description: The AWS Lambda function returned invalid output or an exception.
    InvalidParameterException:
      type: object
      properties:
        message:
          allOf:
          - $ref: '#/components/schemas/ExceptionMessage'
          description: Message returned by InvalidParameterException.
      required:
      - message
      description: Thrown when a request parameter does not comply with the associated
        constraints.
    LambdaFunctionArn:
      type: string
    LambdaThrottledException:
      type: object
      properties:
        message:
          allOf:
          - $ref: '#/components/schemas/ExceptionMessage'
          description: A message returned when an LambdaThrottledException is thrown
      required:
      - message
      description: AWS Lambda throttled your account, please contact AWS Support
    LimitExceededException:
      type: object
      properties:
        message:
          allOf:
          - $ref: '#/components/schemas/ExceptionMessage'
          description: Message returned by LimitExceededException.
      required:
      - message
      description: Thrown when the limit on the number of objects or operations has
        been exceeded.
    ListDatasetsRequest:
      type: object
      properties:
        IdentityPoolId:
          allOf:
          - $ref: '#/components/schemas/IdentityPoolId'
          description: A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE)
            created by Amazon Cognito. GUID generation is unique within a region.
        IdentityId:
          allOf:
          - $ref: '#/components/schemas/IdentityId'
          description: A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE)
            created by Amazon Cognito. GUID generation is unique within a region.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A pagination token for obtaining the next page of results.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/IntegerString'
          description: The maximum number of results to be returned.
      required:
      - IdentityPoolId
      - IdentityId
      description: Request for a list of datasets for an identity.
    ListDatasetsResponse:
      type: object
      properties:
        Datasets:
          allOf:
          - $ref: '#/components/schemas/DatasetList'
          description: A set of datasets.
        Count:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: Number of datasets returned.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A pagination token for obtaining the next page of results.
      description: Returned for a successful ListDatasets request.
    ListIdentityPoolUsageRequest:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A pagination token for obtaining the next page of results.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/IntegerString'
          description: The maximum number of results to be returned.
      description: A request for usage information on an identity pool.
    ListIdentityPoolUsageResponse:
      type: object
      properties:
        IdentityPoolUsages:
          allOf:
          - $ref: '#/components/schemas/IdentityPoolUsageList'
          description: Usage information for the identity pools.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The maximum number of results to be returned.
        Count:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: Total number of identities for the identity pool.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A pagination token for obtaining the next page of results.
      description: Returned for a successful ListIdentityPoolUsage request.
    ListRecordsRequest:
      type: object
      properties:
        IdentityPoolId:
          allOf:
          - $ref: '#/components/schemas/IdentityPoolId'
          description: A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE)
            created by Amazon Cognito. GUID generation is unique within a region.
        IdentityId:
          allOf:
          - $ref: '#/components/schemas/IdentityId'
          description: A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE)
            created by Amazon Cognito. GUID generation is unique within a region.
        DatasetName:
          allOf:
          - $ref: '#/components/schemas/DatasetName'
          description: A string of up to 128 characters. Allowed characters are a-z,
            A-Z, 0-9, '_' (underscore), '-' (dash), and '.' (dot).
        LastSyncCount:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: The last server sync count for this record.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A pagination token for obtaining the next page of results.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/IntegerString'
          description: The maximum number of results to be returned.
        SyncSessionToken:
          allOf:
          - $ref: '#/components/schemas/SyncSessionToken'
          description: A token containing a session ID, identity ID, and expiration.
      required:
      - IdentityPoolId
      - IdentityId
      - DatasetName
      description: A request for a list of records.
    ListRecordsResponse:
      type: object
      properties:
        Records:
          allOf:
          - $ref: '#/components/schemas/RecordList'
          description: A list of all records.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A pagination token for obtaining the next page of results.
        Count:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: Total number of records.
        DatasetSyncCount:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: Server sync count for this dataset.
        LastModifiedBy:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The user/device that made the last change to this record.
        MergedDatasetNames:
          allOf:
          - $ref: '#/components/schemas/MergedDatasetNameList'
          description: Names of merged datasets.
        DatasetExists:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether the dataset exists.
        DatasetDeletedAfterRequestedSyncCount:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: A boolean value specifying whether to delete the dataset locally.
        SyncSessionToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A token containing a session ID, identity ID, and expiration.
      description: Returned for a successful ListRecordsRequest.
    Long:
      type: integer
      format: int64
    MergedDatasetNameList:
      type: array
      items:
        $ref: '#/components/schemas/String'
    NotAuthorizedException:
      type: object
      properties:
        message:
          allOf:
          - $ref: '#/components/schemas/ExceptionMessage'
          description: The message returned by a NotAuthorizedException.
      required:
      - message
      description: Thrown when a user is not authorized to access the requested resource.
    Operation:
      type: string
      enum:
      - replace
      - remove
    Platform:
      type: string
      enum:
      - APNS
      - APNS_SANDBOX
      - GCM
      - ADM
    PushSync:
      type: object
      properties:
        ApplicationArns:
          allOf:
          - $ref: '#/components/schemas/ApplicationArnList'
          description: List of SNS platform application ARNs that could be used by
            clients.
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/AssumeRoleArn'
          description: A role configured to allow Cognito to call SNS on behalf of
            the developer.
      description: Configuration options to be applied to the identity pool.
    PushToken:
      type: string
    Record:
      type: object
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/RecordKey'
          description: The key for the record.
        Value:
          allOf:
          - $ref: '#/components/schemas/RecordValue'
          description: The value for the record.
        SyncCount:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: The server sync count for this record.
        LastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/Date'
          description: The date on which the record was last modified.
        LastModifiedBy:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The user/device that made the last change to this record.
        DeviceLastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/Date'
          description: The last modified date of the client device.
      description: The basic data structure of a dataset.
    RecordKey:
      type: string
      minLength: 1
      maxLength: 1024
    RecordList:
      type: array
      items:
        $ref: '#/components/schemas/Record'
    RecordPatch:
      type: object
      properties:
        Op:
          allOf:
          - $ref: '#/components/schemas/Operation'
          description: An operation, either replace or remove.
        Key:
          allOf:
          - $ref: '#/components/schemas/RecordKey'
          description: The key associated with the record patch.
        Value:
          allOf:
          - $ref: '#/components/schemas/RecordValue'
          description: The value associated with the record patch.
        SyncCount:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: Last known server sync count for this record. Set to 0 if unknown.
        DeviceLastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/Date'
          description: The last modified date of the client device.
      required:
      - Op
      - Key
      - SyncCount
      description: An update operation for a record.
    RecordPatchList:
      type: array
      items:
        $ref: '#/components/schemas/RecordPatch'
    RecordValue:
      type: string
      minLength: 0
      maxLength: 1048575
    RegisterDeviceRequest:
      type: object
      properties:
        IdentityPoolId:
          allOf:
          - $ref: '#/components/schemas/IdentityPoolId'
          description: A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE)
            created by Amazon Cognito. Here, the ID of the pool that the identity
            belongs to.
        IdentityId:
          allOf:
          - $ref: '#/components/schemas/IdentityId'
          description: The unique ID for this identity.
        Platform:
          allOf:
          - $ref: '#/components/schemas/Platform'
          description: The SNS platform type (e.g. GCM, SDM, APNS, APNS_SANDBOX).
        Token:
          allOf:
          - $ref: '#/components/schemas/PushToken'
          description: The push token.
      required:
      - IdentityPoolId
      - IdentityId
      - Platform
      - Token
      description: A request to RegisterDevice.
    RegisterDeviceResponse:
      type: object
      properties:
        DeviceId:
          allOf:
          - $ref: '#/components/schemas/DeviceId'
          description: The unique ID generated for this device by Cognito.
      description: Response to a RegisterDevice request.
    ResourceConflictException:
      type: object
      properties:
        message:
          allOf:
          - $ref: '#/components/schemas/ExceptionMessage'
          description: The message returned by a ResourceConflictException.
      required:
      - message
      description: Thrown if an update can't be applied because the resource was changed
        by another call and this would result in a conflict.
    ResourceNotFoundException:
      type: object
      properties:
        message:
          allOf:
          - $ref: '#/components/schemas/ExceptionMessage'
          description: Message returned by a ResourceNotFoundException.
      required:
      - message
      description: Thrown if the resource doesn't exist.
    SetCognitoEventsRequest:
      type: object
      properties:
        IdentityPoolId:
          allOf:
          - $ref: '#/components/schemas/IdentityPoolId'
          description: The Cognito Identity Pool to use when configuring Cognito Events
        Events:
          allOf:
          - $ref: '#/components/schemas/Events'
          description: The events to configure
      required:
      - IdentityPoolId
      - Events
      description: 'A request to configure Cognito Events"


        "'
    SetIdentityPoolConfigurationRequest:
      type: object
      properties:
        IdentityPoolId:
          allOf:
          - $ref: '#/components/schemas/IdentityPoolId'
          description: A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE)
            created by Amazon Cognito. This is the ID of the pool to modify.
        PushSync:
          allOf:
          - $ref: '#/components/schemas/PushSync'
          description: Options to apply to this identity pool for push synchronization.
        CognitoStreams:
          allOf:
          - $ref: '#/components/schemas/CognitoStreams'
          description: Options to apply to this identity pool for Amazon Cognito streams.
      required:
      - IdentityPoolId
      description: The input for the SetIdentityPoolConfiguration operation.
    SetIdentityPoolConfigurationResponse:
      type: object
      properties:
        IdentityPoolId:
          allOf:
          - $ref: '#/components/schemas/IdentityPoolId'
          description: A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE)
            created by Amazon Cognito.
        PushSync:
          allOf:
          - $ref: '#/components/schemas/PushSync'
          description: Options to apply to this identity pool for push synchronization.
        CognitoStreams:
          allOf:
          - $ref: '#/components/schemas/CognitoStreams'
          description: Options to apply to this identity pool for Amazon Cognito streams.
      description: The output for the SetIdentityPoolConfiguration operation
    StreamName:
      type: string
      minLength: 1
      maxLength: 128
    StreamingStatus:
      type: string
      enum:
      - ENABLED
      - DISABLED
    String:
      type: string
    SubscribeToDatasetRequest:
      type: object
      properties:
        IdentityPoolId:
          allOf:
          - $ref: '#/components/schemas/IdentityPoolId'
          description: A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE)
            created by Amazon Cognito. The ID of the pool to which the identity belongs.
        IdentityId:
          allOf:
          - $ref: '#/components/schemas/IdentityId'
          description: Unique ID for this identity.
        DatasetName:
          allOf:
          - $ref: '#/components/schemas/DatasetName'
          description: The name of the dataset to subcribe to.
        DeviceId:
          allOf:
          - $ref: '#/components/schemas/DeviceId'
          description: The unique ID generated for this device by Cognito.
      required:
      - IdentityPoolId
      - IdentityId
      - DatasetName
      - DeviceId
      description: A request to SubscribeToDatasetRequest.
    SubscribeToDatasetResponse:
      type: object
      properties: {}
      description: Response to a SubscribeToDataset request.
    SyncSessionToken:
      type: string
    TooManyRequestsException:
      type: object
      properties:
        message:
          allOf:
          - $ref: '#/components/schemas/ExceptionMessage'
          description: Message returned by a TooManyRequestsException.
      required:
      - message
      description: Thrown if the request is throttled.
    UnsubscribeFromDatasetRequest:
      type: object
      properties:
        IdentityPoolId:
          allOf:
          - $ref: '#/components/schemas/IdentityPoolId'
          description: A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE)
            created by Amazon Cognito. The ID of the pool to which this identity belongs.
        IdentityId:
          allOf:
          - $ref: '#/components/schemas/IdentityId'
          description: Unique ID for this identity.
        DatasetName:
          allOf:
          - $ref: '#/components/schemas/DatasetName'
          description: The name of the dataset from which to unsubcribe.
        DeviceId:
          allOf:
          - $ref: '#/components/schemas/DeviceId'
          description: The unique ID generated for this device by Cognito.
      required:
      - IdentityPoolId
      - IdentityId
      - DatasetName
      - DeviceId
      description: A request to UnsubscribeFromDataset.
    UnsubscribeFromDatasetResponse:
      type: object
      properties: {}
      description: Response to an UnsubscribeFromDataset request.
    UpdateRecordsRequest:
      type: object
      properties:
        IdentityPoolId:
          allOf:
          - $ref: '#/components/schemas/IdentityPoolId'
          description: A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE)
            created by Amazon Cognito. GUID generation is unique within a region.
        IdentityId:
          allOf:
          - $ref: '#/components/schemas/IdentityId'
          description: A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE)
            created by Amazon Cognito. GUID generation is unique within a region.
        DatasetName:
          allOf:
          - $ref: '#/components/schemas/DatasetName'
          description: A string of up to 128 characters. Allowed characters are a-z,
            A-Z, 0-9, '_' (underscore), '-' (dash), and '.' (dot).
        DeviceId:
          allOf:
          - $ref: '#/components/schemas/DeviceId'
          description: The unique ID generated for this device by Cognito.
        RecordPatches:
          allOf:
          - $ref: '#/components/schemas/RecordPatchList'
          description: A list of patch operations.
        SyncSessionToken:
          allOf:
          - $ref: '#/components/schemas/SyncSessionToken'
          description: The SyncSessionToken returned by a previous call to ListRecords
            for this dataset and identity.
        ClientContext:
          allOf:
          - $ref: '#/components/schemas/ClientContext'
          description: Intended to supply a device ID that will populate the lastModifiedBy
            field referenced in other methods. The ClientContext field is not yet
            implemented.
      required:
      - IdentityPoolId
      - IdentityId
      - DatasetName
      - SyncSessionToken
      description: A request to post updates to records or add and delete records
        for a dataset and user.
    UpdateRecordsResponse:
      type: object
      properties:
        Records:
          allOf:
          - $ref: '#/components/schemas/RecordList'
          description: A list of records that have been updated.
      description: Returned for a successful UpdateRecordsRequest.
