openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: amplifybackend
  x-aws-serviceName: amplifybackend
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-07'
  version: '2020-08-11'
  title: AmplifyBackend
  description: |-
    AWS Amplify Admin API
servers:
- description: The AmplifyBackend regional endpoint
  url: https://amplifybackend.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths:
  /backend/{AppId}/environments/{BackendEnvironmentName}/clone:
    post:
      operationId: CloneBackend
      description: |-
        This operation clones an existing backend.
      parameters:
      - name: AppId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: BackendEnvironmentName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                TargetEnvironmentName:
                  $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            An error returned if a request is not formed properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '504':
          description: |-
            An error returned if there's a temporary issue with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '404':
          description: |-
            An error returned when a specific resource type is not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            An error that is returned when a limit of a specific type has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /backend:
    post:
      operationId: CreateBackend
      description: |-
        This operation creates a backend for an Amplify app. Backends are automatically created at the time of app creation.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AppId:
                  $ref: '#/components/schemas/__string'
                AppName:
                  $ref: '#/components/schemas/__string'
                BackendEnvironmentName:
                  $ref: '#/components/schemas/__string'
                ResourceConfig:
                  $ref: '#/components/schemas/ResourceConfig'
                ResourceName:
                  $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            An error returned if a request is not formed properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '504':
          description: |-
            An error returned if there's a temporary issue with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '404':
          description: |-
            An error returned when a specific resource type is not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            An error that is returned when a limit of a specific type has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /backend/{AppId}/api:
    post:
      operationId: CreateBackendAPI
      description: |-
        Creates a new backend API resource.
      parameters:
      - name: AppId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                BackendEnvironmentName:
                  $ref: '#/components/schemas/__string'
                ResourceConfig:
                  $ref: '#/components/schemas/BackendAPIResourceConfig'
                ResourceName:
                  $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            An error returned if a request is not formed properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '504':
          description: |-
            An error returned if there's a temporary issue with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '404':
          description: |-
            An error returned when a specific resource type is not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            An error that is returned when a limit of a specific type has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /backend/{AppId}/auth:
    post:
      operationId: CreateBackendAuth
      description: |-
        Creates a new backend authentication resource.
      parameters:
      - name: AppId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                BackendEnvironmentName:
                  $ref: '#/components/schemas/__string'
                ResourceConfig:
                  $ref: '#/components/schemas/CreateBackendAuthResourceConfig'
                ResourceName:
                  $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            An error returned if a request is not formed properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '504':
          description: |-
            An error returned if there's a temporary issue with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '404':
          description: |-
            An error returned when a specific resource type is not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            An error that is returned when a limit of a specific type has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /backend/{AppId}/config:
    post:
      operationId: CreateBackendConfig
      description: |-
        Creates a config object for a backend.
      parameters:
      - name: AppId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                BackendManagerAppId:
                  $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            An error returned if a request is not formed properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '504':
          description: |-
            An error returned if there's a temporary issue with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '404':
          description: |-
            An error returned when a specific resource type is not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            An error that is returned when a limit of a specific type has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /backend/{AppId}/storage:
    post:
      operationId: CreateBackendStorage
      description: |-
        Creates a backend storage resource.
      parameters:
      - name: AppId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                BackendEnvironmentName:
                  $ref: '#/components/schemas/__string'
                ResourceConfig:
                  $ref: '#/components/schemas/CreateBackendStorageResourceConfig'
                ResourceName:
                  $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            An error returned if a request is not formed properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '504':
          description: |-
            An error returned if there's a temporary issue with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '404':
          description: |-
            An error returned when a specific resource type is not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            An error that is returned when a limit of a specific type has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /backend/{AppId}/challenge:
    post:
      operationId: CreateToken
      description: |-
        Generates a one-time challenge code to authenticate a user into your Amplify Admin UI.
      parameters:
      - name: AppId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            An error returned if a request is not formed properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '504':
          description: |-
            An error returned if there's a temporary issue with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '404':
          description: |-
            An error returned when a specific resource type is not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            An error that is returned when a limit of a specific type has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /backend/{AppId}/environments/{BackendEnvironmentName}/remove:
    post:
      operationId: DeleteBackend
      description: |-
        Removes an existing environment from your Amplify project.
      parameters:
      - name: AppId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: BackendEnvironmentName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            An error returned if a request is not formed properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '504':
          description: |-
            An error returned if there's a temporary issue with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '404':
          description: |-
            An error returned when a specific resource type is not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            An error that is returned when a limit of a specific type has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /backend/{AppId}/api/{BackendEnvironmentName}/remove:
    post:
      operationId: DeleteBackendAPI
      description: |-
        Deletes an existing backend API resource.
      parameters:
      - name: AppId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: BackendEnvironmentName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ResourceConfig:
                  $ref: '#/components/schemas/BackendAPIResourceConfig'
                ResourceName:
                  $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            An error returned if a request is not formed properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '504':
          description: |-
            An error returned if there's a temporary issue with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '404':
          description: |-
            An error returned when a specific resource type is not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            An error that is returned when a limit of a specific type has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /backend/{AppId}/auth/{BackendEnvironmentName}/remove:
    post:
      operationId: DeleteBackendAuth
      description: |-
        Deletes an existing backend authentication resource.
      parameters:
      - name: AppId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: BackendEnvironmentName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ResourceName:
                  $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            An error returned if a request is not formed properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '504':
          description: |-
            An error returned if there's a temporary issue with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '404':
          description: |-
            An error returned when a specific resource type is not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            An error that is returned when a limit of a specific type has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /backend/{AppId}/storage/{BackendEnvironmentName}/remove:
    post:
      operationId: DeleteBackendStorage
      description: |-
        Removes the specified backend storage resource.
      parameters:
      - name: AppId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: BackendEnvironmentName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ResourceName:
                  $ref: '#/components/schemas/__string'
                ServiceName:
                  $ref: '#/components/schemas/ServiceName'
      responses:
        '200': {}
        '400':
          description: |-
            An error returned if a request is not formed properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '504':
          description: |-
            An error returned if there's a temporary issue with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '404':
          description: |-
            An error returned when a specific resource type is not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            An error that is returned when a limit of a specific type has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /backend/{AppId}/challenge/{SessionId}/remove:
    post:
      operationId: DeleteToken
      description: |-
        Deletes the challenge token based on the given appId and sessionId.
      parameters:
      - name: AppId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: SessionId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            An error returned if a request is not formed properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '504':
          description: |-
            An error returned if there's a temporary issue with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '404':
          description: |-
            An error returned when a specific resource type is not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            An error that is returned when a limit of a specific type has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /backend/{AppId}/api/{BackendEnvironmentName}/generateModels:
    post:
      operationId: GenerateBackendAPIModels
      description: |-
        Generates a model schema for an existing backend API resource.
      parameters:
      - name: AppId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: BackendEnvironmentName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ResourceName:
                  $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            An error returned if a request is not formed properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '504':
          description: |-
            An error returned if there's a temporary issue with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '404':
          description: |-
            An error returned when a specific resource type is not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            An error that is returned when a limit of a specific type has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /backend/{AppId}/details:
    post:
      operationId: GetBackend
      description: |-
        Provides project-level details for your Amplify UI project.
      parameters:
      - name: AppId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                BackendEnvironmentName:
                  $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            An error returned if a request is not formed properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '504':
          description: |-
            An error returned if there's a temporary issue with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '404':
          description: |-
            An error returned when a specific resource type is not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            An error that is returned when a limit of a specific type has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /backend/{AppId}/api/{BackendEnvironmentName}/details:
    post:
      operationId: GetBackendAPI
      description: |-
        Gets the details for a backend API.
      parameters:
      - name: AppId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: BackendEnvironmentName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ResourceConfig:
                  $ref: '#/components/schemas/BackendAPIResourceConfig'
                ResourceName:
                  $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            An error returned if a request is not formed properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '504':
          description: |-
            An error returned if there's a temporary issue with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '404':
          description: |-
            An error returned when a specific resource type is not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            An error that is returned when a limit of a specific type has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /backend/{AppId}/api/{BackendEnvironmentName}/getModels:
    post:
      operationId: GetBackendAPIModels
      description: |-
        Gets a model introspection schema for an existing backend API resource.
      parameters:
      - name: AppId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: BackendEnvironmentName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ResourceName:
                  $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            An error returned if a request is not formed properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '504':
          description: |-
            An error returned if there's a temporary issue with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '404':
          description: |-
            An error returned when a specific resource type is not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            An error that is returned when a limit of a specific type has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /backend/{AppId}/auth/{BackendEnvironmentName}/details:
    post:
      operationId: GetBackendAuth
      description: |-
        Gets a backend auth details.
      parameters:
      - name: AppId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: BackendEnvironmentName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ResourceName:
                  $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            An error returned if a request is not formed properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '504':
          description: |-
            An error returned if there's a temporary issue with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '404':
          description: |-
            An error returned when a specific resource type is not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            An error that is returned when a limit of a specific type has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /backend/{AppId}/job/{BackendEnvironmentName}/{JobId}:
    get:
      operationId: GetBackendJob
      description: |-
        Returns information about a specific job.
      parameters:
      - name: AppId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: BackendEnvironmentName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: JobId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            An error returned if a request is not formed properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '504':
          description: |-
            An error returned if there's a temporary issue with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '404':
          description: |-
            An error returned when a specific resource type is not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            An error that is returned when a limit of a specific type has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    post:
      operationId: UpdateBackendJob
      description: |-
        Updates a specific job.
      parameters:
      - name: AppId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: BackendEnvironmentName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: JobId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Operation:
                  $ref: '#/components/schemas/__string'
                Status:
                  $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            An error returned if a request is not formed properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '504':
          description: |-
            An error returned if there's a temporary issue with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '404':
          description: |-
            An error returned when a specific resource type is not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            An error that is returned when a limit of a specific type has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /backend/{AppId}/storage/{BackendEnvironmentName}/details:
    post:
      operationId: GetBackendStorage
      description: |-
        Gets details for a backend storage resource.
      parameters:
      - name: AppId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: BackendEnvironmentName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ResourceName:
                  $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            An error returned if a request is not formed properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '504':
          description: |-
            An error returned if there's a temporary issue with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '404':
          description: |-
            An error returned when a specific resource type is not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            An error that is returned when a limit of a specific type has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /backend/{AppId}/challenge/{SessionId}:
    get:
      operationId: GetToken
      description: |-
        Gets the challenge token based on the given appId and sessionId.
      parameters:
      - name: AppId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: SessionId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            An error returned if a request is not formed properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '504':
          description: |-
            An error returned if there's a temporary issue with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '404':
          description: |-
            An error returned when a specific resource type is not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            An error that is returned when a limit of a specific type has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /backend/{AppId}/auth/{BackendEnvironmentName}/import:
    post:
      operationId: ImportBackendAuth
      description: |-
        Imports an existing backend authentication resource.
      parameters:
      - name: AppId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: BackendEnvironmentName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                IdentityPoolId:
                  $ref: '#/components/schemas/__string'
                NativeClientId:
                  $ref: '#/components/schemas/__string'
                UserPoolId:
                  $ref: '#/components/schemas/__string'
                WebClientId:
                  $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            An error returned if a request is not formed properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '504':
          description: |-
            An error returned if there's a temporary issue with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '404':
          description: |-
            An error returned when a specific resource type is not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            An error that is returned when a limit of a specific type has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /backend/{AppId}/storage/{BackendEnvironmentName}/import:
    post:
      operationId: ImportBackendStorage
      description: |-
        Imports an existing backend storage resource.
      parameters:
      - name: AppId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: BackendEnvironmentName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                BucketName:
                  $ref: '#/components/schemas/__string'
                ServiceName:
                  $ref: '#/components/schemas/ServiceName'
      responses:
        '200': {}
        '400':
          description: |-
            An error returned if a request is not formed properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '504':
          description: |-
            An error returned if there's a temporary issue with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '404':
          description: |-
            An error returned when a specific resource type is not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            An error that is returned when a limit of a specific type has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /backend/{AppId}/job/{BackendEnvironmentName}:
    post:
      operationId: ListBackendJobs
      description: |-
        Lists the jobs for the backend of an Amplify app.
      parameters:
      - name: AppId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: BackendEnvironmentName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                JobId:
                  $ref: '#/components/schemas/__string'
                MaxResults:
                  $ref: '#/components/schemas/__integerMin1Max25'
                NextToken:
                  $ref: '#/components/schemas/__string'
                Operation:
                  $ref: '#/components/schemas/__string'
                Status:
                  $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            An error returned if a request is not formed properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '504':
          description: |-
            An error returned if there's a temporary issue with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '404':
          description: |-
            An error returned when a specific resource type is not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            An error that is returned when a limit of a specific type has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /s3Buckets:
    post:
      operationId: ListS3Buckets
      description: |-
        The list of S3 buckets in your account.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                NextToken:
                  $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            An error returned if a request is not formed properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '504':
          description: |-
            An error returned if there's a temporary issue with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '404':
          description: |-
            An error returned when a specific resource type is not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            An error that is returned when a limit of a specific type has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /backend/{AppId}/remove:
    post:
      operationId: RemoveAllBackends
      description: |-
        Removes all backend environments from your Amplify project.
      parameters:
      - name: AppId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                CleanAmplifyApp:
                  $ref: '#/components/schemas/__boolean'
      responses:
        '200': {}
        '400':
          description: |-
            An error returned if a request is not formed properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '504':
          description: |-
            An error returned if there's a temporary issue with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '404':
          description: |-
            An error returned when a specific resource type is not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            An error that is returned when a limit of a specific type has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /backend/{AppId}/config/remove:
    post:
      operationId: RemoveBackendConfig
      description: |-
        Removes the AWS resources required to access the Amplify Admin UI.
      parameters:
      - name: AppId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            An error returned if a request is not formed properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '504':
          description: |-
            An error returned if there's a temporary issue with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '404':
          description: |-
            An error returned when a specific resource type is not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            An error that is returned when a limit of a specific type has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /backend/{AppId}/api/{BackendEnvironmentName}:
    post:
      operationId: UpdateBackendAPI
      description: |-
        Updates an existing backend API resource.
      parameters:
      - name: AppId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: BackendEnvironmentName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ResourceConfig:
                  $ref: '#/components/schemas/BackendAPIResourceConfig'
                ResourceName:
                  $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            An error returned if a request is not formed properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '504':
          description: |-
            An error returned if there's a temporary issue with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '404':
          description: |-
            An error returned when a specific resource type is not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            An error that is returned when a limit of a specific type has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /backend/{AppId}/auth/{BackendEnvironmentName}:
    post:
      operationId: UpdateBackendAuth
      description: |-
        Updates an existing backend authentication resource.
      parameters:
      - name: AppId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: BackendEnvironmentName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ResourceConfig:
                  $ref: '#/components/schemas/UpdateBackendAuthResourceConfig'
                ResourceName:
                  $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            An error returned if a request is not formed properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '504':
          description: |-
            An error returned if there's a temporary issue with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '404':
          description: |-
            An error returned when a specific resource type is not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            An error that is returned when a limit of a specific type has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /backend/{AppId}/config/update:
    post:
      operationId: UpdateBackendConfig
      description: |-
        Updates the AWS resources required to access the Amplify Admin UI.
      parameters:
      - name: AppId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                LoginAuthConfig:
                  $ref: '#/components/schemas/LoginAuthConfigReqObj'
      responses:
        '200': {}
        '400':
          description: |-
            An error returned if a request is not formed properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '504':
          description: |-
            An error returned if there's a temporary issue with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '404':
          description: |-
            An error returned when a specific resource type is not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            An error that is returned when a limit of a specific type has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /backend/{AppId}/storage/{BackendEnvironmentName}:
    post:
      operationId: UpdateBackendStorage
      description: |-
        Updates an existing backend storage resource.
      parameters:
      - name: AppId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: BackendEnvironmentName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ResourceConfig:
                  $ref: '#/components/schemas/UpdateBackendStorageResourceConfig'
                ResourceName:
                  $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            An error returned if a request is not formed properly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '504':
          description: |-
            An error returned if there's a temporary issue with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutException'
        '404':
          description: |-
            An error returned when a specific resource type is not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '429':
          description: |-
            An error that is returned when a limit of a specific type has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
components:
  schemas:
    AdditionalConstraintsElement:
      type: string
      enum:
      - REQUIRE_DIGIT
      - REQUIRE_LOWERCASE
      - REQUIRE_SYMBOL
      - REQUIRE_UPPERCASE
    AuthResources:
      type: string
      enum:
      - USER_POOL_ONLY
      - IDENTITY_POOL_AND_USER_POOL
    AuthenticatedElement:
      type: string
      enum:
      - READ
      - CREATE_AND_UPDATE
      - DELETE
    BackendAPIAppSyncAuthSettings:
      type: object
      properties:
        CognitoUserPoolId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Cognito user pool ID, if Amazon Cognito was used
            as an authentication setting to access your data models.
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The API key description for API_KEY, if it was used as an authentication
            mechanism to access your data models.
        ExpirationTime:
          allOf:
          - $ref: '#/components/schemas/__double'
          description: The API key expiration time for API_KEY, if it was used as
            an authentication mechanism to access your data models.
        OpenIDAuthTTL:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The expiry time for the OpenID authentication mechanism.
        OpenIDClientId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The clientID for openID, if openID was used as an authentication
            setting to access your data models.
        OpenIDIatTTL:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The expiry time for the OpenID authentication mechanism.
        OpenIDIssueURL:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The openID issuer URL, if openID was used as an authentication
            setting to access your data models.
        OpenIDProviderName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The OpenID provider name, if OpenID was used as an authentication
            mechanism to access your data models.
      description: The authentication settings for accessing provisioned data models
        in your Amplify project.
    BackendAPIAuthType:
      type: object
      properties:
        Mode:
          allOf:
          - $ref: '#/components/schemas/Mode'
          description: Describes the authentication mode.
        Settings:
          allOf:
          - $ref: '#/components/schemas/BackendAPIAppSyncAuthSettings'
          description: Describes settings for the authentication mode.
      description: Describes the auth types for your configured data models.
    BackendAPIConflictResolution:
      type: object
      properties:
        ResolutionStrategy:
          allOf:
          - $ref: '#/components/schemas/ResolutionStrategy'
          description: The strategy for conflict resolution.
      description: Describes the conflict resolution configuration for your data model
        configured in your Amplify project.
    BackendAPIResourceConfig:
      type: object
      properties:
        AdditionalAuthTypes:
          allOf:
          - $ref: '#/components/schemas/ListOfBackendAPIAuthType'
          description: Additional authentication methods used to interact with your
            data models.
        ApiName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The API name used to interact with the data model, configured
            as a part of your Amplify project.
        ConflictResolution:
          allOf:
          - $ref: '#/components/schemas/BackendAPIConflictResolution'
          description: The conflict resolution strategy for your data stored in the
            data models.
        DefaultAuthType:
          allOf:
          - $ref: '#/components/schemas/BackendAPIAuthType'
          description: The default authentication type for interacting with the configured
            data models in your Amplify project.
        Service:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The service used to provision and interact with the data model.
        TransformSchema:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The definition of the data model in the annotated transform
            of the GraphQL schema.
      description: The resource config for the data model, configured as a part of
        the Amplify project.
    BackendAuthAppleProviderConfig:
      type: object
      properties:
        ClientId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Describes the client_id (also called Services ID) that comes
            from Apple.
        KeyId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Describes the key_id that comes from Apple.
        PrivateKey:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Describes the private_key that comes from Apple.
        TeamId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Describes the team_id that comes from Apple.
      description: Describes Apple social federation configurations for allowing your
        app users to sign in using OAuth.
    BackendAuthSocialProviderConfig:
      type: object
      properties:
        ClientId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Describes the client_id, which can be obtained from the third-party
            social federation provider.
        ClientSecret:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Describes the client_secret, which can be obtained from third-party
            social federation providers.
      description: Describes third-party social federation configurations for allowing
        your app users to sign in using OAuth.
    BackendJobRespObj:
      type: object
      properties:
        AppId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The app ID.
        BackendEnvironmentName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the backend environment.
        CreateTime:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The time when the job was created.
        Error:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: If the request fails, this error is returned.
        JobId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID for the job.
        Operation:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the operation.
        Status:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The current status of the request.
        UpdateTime:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The time when the job was last updated.
      required:
      - AppId
      - BackendEnvironmentName
      description: The response object for this operation.
    BackendStoragePermissions:
      type: object
      properties:
        Authenticated:
          allOf:
          - $ref: '#/components/schemas/ListOfAuthenticatedElement'
          description: Lists all authenticated user read, write, and delete permissions
            for your S3 bucket.
        UnAuthenticated:
          allOf:
          - $ref: '#/components/schemas/ListOfUnAuthenticatedElement'
          description: Lists all unauthenticated user read, write, and delete permissions
            for your S3 bucket.
      required:
      - Authenticated
      description: Describes the read, write, and delete permissions users have against
        your storage S3 bucket.
    BadRequestException:
      type: object
      properties:
        Message:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: An error message to inform that the request failed.
      description: An error returned if a request is not formed properly.
    CloneBackendRequest:
      type: object
      properties:
        AppId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The app ID.
        BackendEnvironmentName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the backend environment.
        TargetEnvironmentName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the destination backend environment to be created.
      required:
      - AppId
      - BackendEnvironmentName
      - TargetEnvironmentName
      description: The request body for CloneBackend.
    CloneBackendResponse:
      type: object
      properties:
        AppId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The app ID.
        BackendEnvironmentName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the backend environment.
        Error:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: If the request fails, this error is returned.
        JobId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID for the job.
        Operation:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the operation.
        Status:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The current status of the request.
    CreateBackendAPIRequest:
      type: object
      properties:
        AppId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The app ID.
        BackendEnvironmentName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the backend environment.
        ResourceConfig:
          allOf:
          - $ref: '#/components/schemas/BackendAPIResourceConfig'
          description: The resource configuration for this request.
        ResourceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of this resource.
      required:
      - AppId
      - BackendEnvironmentName
      - ResourceConfig
      - ResourceName
      description: The request body for CreateBackendAPI.
    CreateBackendAPIResponse:
      type: object
      properties:
        AppId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The app ID.
        BackendEnvironmentName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the backend environment.
        Error:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: If the request fails, this error is returned.
        JobId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID for the job.
        Operation:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the operation.
        Status:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The current status of the request.
    CreateBackendAuthForgotPasswordConfig:
      type: object
      properties:
        DeliveryMethod:
          allOf:
          - $ref: '#/components/schemas/DeliveryMethod'
          description: '**(DEPRECATED)** Describes which mode to use (either SMS or
            email) to deliver messages to app users who want to recover their password.'
        EmailSettings:
          allOf:
          - $ref: '#/components/schemas/EmailSettings'
          description: '**(DEPRECATED)** The configuration for the email sent when
            an app user forgets their password.'
        SmsSettings:
          allOf:
          - $ref: '#/components/schemas/SmsSettings'
          description: '**(DEPRECATED)** The configuration for the SMS message sent
            when an app user forgets their password.'
      required:
      - DeliveryMethod
      description: '**(DEPRECATED)** Describes the forgot password policy for authenticating
        into the Amplify app.'
    CreateBackendAuthIdentityPoolConfig:
      type: object
      properties:
        IdentityPoolName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Name of the Amazon Cognito identity pool used for authorization.
        UnauthenticatedLogin:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: Set to true or false based on whether you want to enable guest
            authorization to your Amplify app.
      required:
      - IdentityPoolName
      - UnauthenticatedLogin
      description: Describes authorization configurations for the auth resources,
        configured as a part of your Amplify project.
    CreateBackendAuthMFAConfig:
      type: object
      properties:
        MFAMode:
          allOf:
          - $ref: '#/components/schemas/MFAMode'
          description: Describes whether MFA should be [ON, OFF, or OPTIONAL] for
            authentication in your Amplify project.
        Settings:
          allOf:
          - $ref: '#/components/schemas/Settings'
          description: Describes the configuration settings and methods for your Amplify
            app users to use MFA.
      required:
      - MFAMode
      description: Describes whether to apply multi-factor authentication policies
        for your Amazon Cognito user pool configured as a part of your Amplify project.
    CreateBackendAuthOAuthConfig:
      type: object
      properties:
        DomainPrefix:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The domain prefix for your Amplify app.
        OAuthGrantType:
          allOf:
          - $ref: '#/components/schemas/OAuthGrantType'
          description: The OAuth grant type that you use to allow app users to authenticate
            from your Amplify app.
        OAuthScopes:
          allOf:
          - $ref: '#/components/schemas/ListOfOAuthScopesElement'
          description: List of OAuth-related flows used to allow your app users to
            authenticate from your Amplify app.
        RedirectSignInURIs:
          allOf:
          - $ref: '#/components/schemas/ListOf__string'
          description: The redirected URI for signing in to your Amplify app.
        RedirectSignOutURIs:
          allOf:
          - $ref: '#/components/schemas/ListOf__string'
          description: Redirect URLs that OAuth uses when a user signs out of an Amplify
            app.
        SocialProviderSettings:
          allOf:
          - $ref: '#/components/schemas/SocialProviderSettings'
          description: The settings for using social providers to access your Amplify
            app.
      required:
      - OAuthGrantType
      - OAuthScopes
      - RedirectSignInURIs
      - RedirectSignOutURIs
      description: Creates the OAuth configuration for your Amplify project.
    CreateBackendAuthPasswordPolicyConfig:
      type: object
      properties:
        AdditionalConstraints:
          allOf:
          - $ref: '#/components/schemas/ListOfAdditionalConstraintsElement'
          description: Additional constraints for the password used to access the
            backend of your Amplify project.
        MinimumLength:
          allOf:
          - $ref: '#/components/schemas/__double'
          description: The minimum length of the password used to access the backend
            of your Amplify project.
      required:
      - MinimumLength
      description: The password policy configuration for the backend to your Amplify
        project.
    CreateBackendAuthRequest:
      type: object
      properties:
        AppId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The app ID.
        BackendEnvironmentName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the backend environment.
        ResourceConfig:
          allOf:
          - $ref: '#/components/schemas/CreateBackendAuthResourceConfig'
          description: The resource configuration for this request object.
        ResourceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of this resource.
      required:
      - AppId
      - BackendEnvironmentName
      - ResourceConfig
      - ResourceName
      description: The request body for CreateBackendAuth.
    CreateBackendAuthResourceConfig:
      type: object
      properties:
        AuthResources:
          allOf:
          - $ref: '#/components/schemas/AuthResources'
          description: Defines whether you want to configure only authentication or
            both authentication and authorization settings.
        IdentityPoolConfigs:
          allOf:
          - $ref: '#/components/schemas/CreateBackendAuthIdentityPoolConfig'
          description: Describes the authorization configuration for the Amazon Cognito
            identity pool, provisioned as a part of your auth resource in the Amplify
            project.
        Service:
          allOf:
          - $ref: '#/components/schemas/Service'
          description: Defines the service name to use when configuring an authentication
            resource in your Amplify project.
        UserPoolConfigs:
          allOf:
          - $ref: '#/components/schemas/CreateBackendAuthUserPoolConfig'
          description: Describes authentication configuration for the Amazon Cognito
            user pool, provisioned as a part of your auth resource in the Amplify
            project.
      required:
      - AuthResources
      - Service
      - UserPoolConfigs
      description: Defines the resource configuration when creating an auth resource
        in your Amplify project.
    CreateBackendAuthResponse:
      type: object
      properties:
        AppId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The app ID.
        BackendEnvironmentName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the backend environment.
        Error:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: If the request fails, this error is returned.
        JobId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID for the job.
        Operation:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the operation.
        Status:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The current status of the request.
    CreateBackendAuthUserPoolConfig:
      type: object
      properties:
        ForgotPassword:
          allOf:
          - $ref: '#/components/schemas/CreateBackendAuthForgotPasswordConfig'
          description: '**(DEPRECATED)** Describes the forgotten password policy for
            your Amazon Cognito user pool, configured as a part of your Amplify project.'
        Mfa:
          allOf:
          - $ref: '#/components/schemas/CreateBackendAuthMFAConfig'
          description: Describes whether to apply multi-factor authentication policies
            for your Amazon Cognito user pool configured as a part of your Amplify
            project.
        OAuth:
          allOf:
          - $ref: '#/components/schemas/CreateBackendAuthOAuthConfig'
          description: Describes the OAuth policy and rules for your Amazon Cognito
            user pool, configured as a part of your Amplify project.
        PasswordPolicy:
          allOf:
          - $ref: '#/components/schemas/CreateBackendAuthPasswordPolicyConfig'
          description: Describes the password policy for your Amazon Cognito user
            pool, configured as a part of your Amplify project.
        RequiredSignUpAttributes:
          allOf:
          - $ref: '#/components/schemas/ListOfRequiredSignUpAttributesElement'
          description: The required attributes to sign up new users in the user pool.
        SignInMethod:
          allOf:
          - $ref: '#/components/schemas/SignInMethod'
          description: Describes the sign-in methods that your Amplify app users use
            to log in using the Amazon Cognito user pool, configured as a part of
            your Amplify project.
        UserPoolName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Cognito user pool name.
        VerificationMessage:
          allOf:
          - $ref: '#/components/schemas/CreateBackendAuthVerificationMessageConfig'
          description: Describes the email or SMS verification message for your Amazon
            Cognito user pool, configured as a part of your Amplify project.
      required:
      - RequiredSignUpAttributes
      - SignInMethod
      - UserPoolName
      description: Describes the Amazon Cognito user pool configuration for the auth
        resource to be configured for your Amplify project.
    CreateBackendAuthVerificationMessageConfig:
      type: object
      properties:
        DeliveryMethod:
          allOf:
          - $ref: '#/components/schemas/DeliveryMethod'
          description: The type of verification message to send.
        EmailSettings:
          allOf:
          - $ref: '#/components/schemas/EmailSettings'
          description: The settings for the email message.
        SmsSettings:
          allOf:
          - $ref: '#/components/schemas/SmsSettings'
          description: The settings for the SMS message.
      required:
      - DeliveryMethod
      description: Creates an email or SMS verification message for the auth resource
        configured for your Amplify project.
    CreateBackendConfigRequest:
      type: object
      properties:
        AppId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The app ID.
        BackendManagerAppId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The app ID for the backend manager.
      required:
      - AppId
      description: The request body for CreateBackendConfig.
    CreateBackendConfigResponse:
      type: object
      properties:
        AppId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The app ID.
        BackendEnvironmentName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the backend environment.
        JobId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID for the job.
        Status:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The current status of the request.
    CreateBackendRequest:
      type: object
      properties:
        AppId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The app ID.
        AppName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the app.
        BackendEnvironmentName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the backend environment.
        ResourceConfig:
          allOf:
          - $ref: '#/components/schemas/ResourceConfig'
          description: The resource configuration for creating a backend.
        ResourceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the resource.
      required:
      - AppId
      - AppName
      - BackendEnvironmentName
      description: The request body for CreateBackend.
    CreateBackendResponse:
      type: object
      properties:
        AppId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The app ID.
        BackendEnvironmentName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the backend environment.
        Error:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: If the request fails, this error is returned.
        JobId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID for the job.
        Operation:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the operation.
        Status:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The current status of the request.
    CreateBackendStorageRequest:
      type: object
      properties:
        AppId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The app ID.
        BackendEnvironmentName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the backend environment.
        ResourceConfig:
          allOf:
          - $ref: '#/components/schemas/CreateBackendStorageResourceConfig'
          description: The resource configuration for creating backend storage.
        ResourceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the storage resource.
      required:
      - AppId
      - BackendEnvironmentName
      - ResourceConfig
      - ResourceName
      description: The request body for CreateBackendStorage.
    CreateBackendStorageResourceConfig:
      type: object
      properties:
        BucketName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the S3 bucket.
        Permissions:
          allOf:
          - $ref: '#/components/schemas/BackendStoragePermissions'
          description: The authorization configuration for the storage S3 bucket.
        ServiceName:
          allOf:
          - $ref: '#/components/schemas/ServiceName'
          description: The name of the storage service.
      required:
      - Permissions
      - ServiceName
      description: The resource configuration for creating backend storage.
    CreateBackendStorageResponse:
      type: object
      properties:
        AppId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The app ID.
        BackendEnvironmentName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the backend environment.
        JobId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID for the job.
        Status:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The current status of the request.
    CreateTokenRequest:
      type: object
      properties:
        AppId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The app ID.
      required:
      - AppId
    CreateTokenResponse:
      type: object
      properties:
        AppId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The app ID.
        ChallengeCode:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: One-time challenge code for authenticating into the Amplify
            Admin UI.
        SessionId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A unique ID provided when creating a new challenge token.
        Ttl:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The expiry time for the one-time generated token code.
    DeleteBackendAPIRequest:
      type: object
      properties:
        AppId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The app ID.
        BackendEnvironmentName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the backend environment.
        ResourceConfig:
          allOf:
          - $ref: '#/components/schemas/BackendAPIResourceConfig'
          description: Defines the resource configuration for the data model in your
            Amplify project.
        ResourceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of this resource.
      required:
      - AppId
      - BackendEnvironmentName
      - ResourceName
      description: The request body for DeleteBackendAPI.
    DeleteBackendAPIResponse:
      type: object
      properties:
        AppId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The app ID.
        BackendEnvironmentName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the backend environment.
        Error:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: If the request fails, this error is returned.
        JobId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID for the job.
        Operation:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the operation.
        Status:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The current status of the request.
    DeleteBackendAuthRequest:
      type: object
      properties:
        AppId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The app ID.
        BackendEnvironmentName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the backend environment.
        ResourceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of this resource.
      required:
      - AppId
      - BackendEnvironmentName
      - ResourceName
      description: The request body for DeleteBackendAuth.
    DeleteBackendAuthResponse:
      type: object
      properties:
        AppId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The app ID.
        BackendEnvironmentName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the backend environment.
        Error:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: If the request fails, this error is returned.
        JobId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID for the job.
        Operation:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the operation.
        Status:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The current status of the request.
    DeleteBackendRequest:
      type: object
      properties:
        AppId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The app ID.
        BackendEnvironmentName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the backend environment.
      required:
      - AppId
      - BackendEnvironmentName
    DeleteBackendResponse:
      type: object
      properties:
        AppId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The app ID.
        BackendEnvironmentName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the backend environment.
        Error:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: If the request fails, this error is returned.
        JobId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID for the job.
        Operation:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the operation.
        Status:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The current status of the request.
    DeleteBackendStorageRequest:
      type: object
      properties:
        AppId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The app ID.
        BackendEnvironmentName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the backend environment.
        ResourceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the storage resource.
        ServiceName:
          allOf:
          - $ref: '#/components/schemas/ServiceName'
          description: The name of the storage service.
      required:
      - AppId
      - BackendEnvironmentName
      - ResourceName
      - ServiceName
      description: The request body for DeleteBackendStorage.
    DeleteBackendStorageResponse:
      type: object
      properties:
        AppId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The app ID.
        BackendEnvironmentName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the backend environment.
        JobId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID for the job.
        Status:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The current status of the request.
    DeleteTokenRequest:
      type: object
      properties:
        AppId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The app ID.
        SessionId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The session ID.
      required:
      - AppId
      - SessionId
    DeleteTokenResponse:
      type: object
      properties:
        IsSuccess:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: Indicates whether the request succeeded or failed.
    DeliveryMethod:
      type: string
      enum:
      - EMAIL
      - SMS
      description: <p>The type of verification message to send.</p>
    EmailSettings:
      type: object
      properties:
        EmailMessage:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The contents of the email message.
        EmailSubject:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The contents of the subject line of the email message.
      description: The configuration for the email sent when an app user forgets their
        password.
    GatewayTimeoutException:
      type: object
      properties:
        Message:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: An error message to inform that the request failed.
      description: An error returned if there's a temporary issue with the service.
    GenerateBackendAPIModelsRequest:
      type: object
      properties:
        AppId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The app ID.
        BackendEnvironmentName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the backend environment.
        ResourceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of this resource.
      required:
      - AppId
      - BackendEnvironmentName
      - ResourceName
      description: The request body for GenerateBackendAPIModels.
    GenerateBackendAPIModelsResponse:
      type: object
      properties:
        AppId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The app ID.
        BackendEnvironmentName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the backend environment.
        Error:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: If the request fails, this error is returned.
        JobId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID for the job.
        Operation:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the operation.
        Status:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The current status of the request.
    GetBackendAPIModelsRequest:
      type: object
      properties:
        AppId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The app ID.
        BackendEnvironmentName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the backend environment.
        ResourceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of this resource.
      required:
      - AppId
      - BackendEnvironmentName
      - ResourceName
      description: The request body for GetBackendAPIModels.
    GetBackendAPIModelsResponse:
      type: object
      properties:
        Models:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Stringified JSON of the datastore model.
        Status:
          allOf:
          - $ref: '#/components/schemas/Status'
          description: The current status of the request.
        ModelIntrospectionSchema:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Stringified JSON of the model introspection schema for an existing
            backend API resource.
    GetBackendAPIRequest:
      type: object
      properties:
        AppId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The app ID.
        BackendEnvironmentName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the backend environment.
        ResourceConfig:
          allOf:
          - $ref: '#/components/schemas/BackendAPIResourceConfig'
          description: Defines the resource configuration for the data model in your
            Amplify project.
        ResourceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of this resource.
      required:
      - AppId
      - BackendEnvironmentName
      - ResourceName
      description: The request body for GetBackendAPI.
    GetBackendAPIResponse:
      type: object
      properties:
        AppId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The app ID.
        BackendEnvironmentName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the backend environment.
        Error:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: If the request fails, this error is returned.
        ResourceConfig:
          allOf:
          - $ref: '#/components/schemas/BackendAPIResourceConfig'
          description: The resource configuration for this response object.
        ResourceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of this resource.
    GetBackendAuthRequest:
      type: object
      properties:
        AppId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The app ID.
        BackendEnvironmentName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the backend environment.
        ResourceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of this resource.
      required:
      - AppId
      - BackendEnvironmentName
      - ResourceName
      description: The request body for GetBackendAuth.
    GetBackendAuthResponse:
      type: object
      properties:
        AppId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The app ID.
        BackendEnvironmentName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the backend environment.
        Error:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: If the request fails, this error is returned.
        ResourceConfig:
          allOf:
          - $ref: '#/components/schemas/CreateBackendAuthResourceConfig'
          description: The resource configuration for authorization requests to the
            backend of your Amplify project.
        ResourceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of this resource.
    GetBackendJobRequest:
      type: object
      properties:
        AppId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The app ID.
        BackendEnvironmentName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the backend environment.
        JobId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID for the job.
      required:
      - AppId
      - BackendEnvironmentName
      - JobId
    GetBackendJobResponse:
      type: object
      properties:
        AppId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The app ID.
        BackendEnvironmentName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the backend environment.
        CreateTime:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The time when the job was created.
        Error:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: If the request fails, this error is returned.
        JobId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID for the job.
        Operation:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the operation.
        Status:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The current status of the request.
        UpdateTime:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The time when the job was last updated.
    GetBackendRequest:
      type: object
      properties:
        AppId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The app ID.
        BackendEnvironmentName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the backend environment.
      required:
      - AppId
      description: The request body for GetBackend.
    GetBackendResponse:
      type: object
      properties:
        AmplifyFeatureFlags:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A stringified version of the cli.json file for your Amplify
            project.
        AmplifyMetaConfig:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A stringified version of the current configs for your Amplify
            project.
        AppId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The app ID.
        AppName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the app.
        BackendEnvironmentList:
          allOf:
          - $ref: '#/components/schemas/ListOf__string'
          description: A list of backend environments in an array.
        BackendEnvironmentName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the backend environment.
        Error:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: If the request failed, this is the returned error.
    GetBackendStorageRequest:
      type: object
      properties:
        AppId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The app ID.
        BackendEnvironmentName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the backend environment.
        ResourceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the storage resource.
      required:
      - AppId
      - BackendEnvironmentName
      - ResourceName
      description: The request body for GetBackendStorage.
    GetBackendStorageResourceConfig:
      type: object
      properties:
        BucketName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the S3 bucket.
        Imported:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: Returns True if the storage resource has been imported.
        Permissions:
          allOf:
          - $ref: '#/components/schemas/BackendStoragePermissions'
          description: The authorization configuration for the storage S3 bucket.
        ServiceName:
          allOf:
          - $ref: '#/components/schemas/ServiceName'
          description: The name of the storage service.
      required:
      - Imported
      - ServiceName
      description: The details for a backend storage resource.
    GetBackendStorageResponse:
      type: object
      properties:
        AppId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The app ID.
        BackendEnvironmentName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the backend environment.
        ResourceConfig:
          allOf:
          - $ref: '#/components/schemas/GetBackendStorageResourceConfig'
          description: The resource configuration for the backend storage resource.
        ResourceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the storage resource.
    GetTokenRequest:
      type: object
      properties:
        AppId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The app ID.
        SessionId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The session ID.
      required:
      - AppId
      - SessionId
    GetTokenResponse:
      type: object
      properties:
        AppId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The app ID.
        ChallengeCode:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The one-time challenge code for authenticating into the Amplify
            Admin UI.
        SessionId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A unique ID provided when creating a new challenge token.
        Ttl:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The expiry time for the one-time generated token code.
    ImportBackendAuthRequest:
      type: object
      properties:
        AppId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The app ID.
        BackendEnvironmentName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the backend environment.
        IdentityPoolId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the Amazon Cognito identity pool.
        NativeClientId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the Amazon Cognito native client.
        UserPoolId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the Amazon Cognito user pool.
        WebClientId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the Amazon Cognito web client.
      required:
      - AppId
      - BackendEnvironmentName
      - NativeClientId
      - UserPoolId
      - WebClientId
      description: The request body for ImportBackendAuth.
    ImportBackendAuthResponse:
      type: object
      properties:
        AppId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The app ID.
        BackendEnvironmentName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the backend environment.
        Error:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: If the request fails, this error is returned.
        JobId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID for the job.
        Operation:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the operation.
        Status:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The current status of the request.
    ImportBackendStorageRequest:
      type: object
      properties:
        AppId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The app ID.
        BackendEnvironmentName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the backend environment.
        BucketName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the S3 bucket.
        ServiceName:
          allOf:
          - $ref: '#/components/schemas/ServiceName'
          description: The name of the storage service.
      required:
      - AppId
      - BackendEnvironmentName
      - ServiceName
      description: The request body for ImportBackendStorage.
    ImportBackendStorageResponse:
      type: object
      properties:
        AppId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The app ID.
        BackendEnvironmentName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the backend environment.
        JobId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID for the job.
        Status:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The current status of the request.
    ListBackendJobsRequest:
      type: object
      properties:
        AppId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The app ID.
        BackendEnvironmentName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the backend environment.
        JobId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID for the job.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/__integerMin1Max25'
          description: The maximum number of results that you want in the response.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The token for the next set of results.
        Operation:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Filters the list of response objects to include only those
            with the specified operation name.
        Status:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Filters the list of response objects to include only those
            with the specified status.
      required:
      - AppId
      - BackendEnvironmentName
      description: The request body for ListBackendJobs.
    ListBackendJobsResponse:
      type: object
      properties:
        Jobs:
          allOf:
          - $ref: '#/components/schemas/ListOfBackendJobRespObj'
          description: An array of jobs and their properties.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The token for the next set of results.
    ListOfAdditionalConstraintsElement:
      type: array
      items:
        $ref: '#/components/schemas/AdditionalConstraintsElement'
    ListOfAuthenticatedElement:
      type: array
      items:
        $ref: '#/components/schemas/AuthenticatedElement'
    ListOfBackendAPIAuthType:
      type: array
      items:
        $ref: '#/components/schemas/BackendAPIAuthType'
    ListOfBackendJobRespObj:
      type: array
      items:
        $ref: '#/components/schemas/BackendJobRespObj'
    ListOfMfaTypesElement:
      type: array
      items:
        $ref: '#/components/schemas/MfaTypesElement'
    ListOfOAuthScopesElement:
      type: array
      items:
        $ref: '#/components/schemas/OAuthScopesElement'
    ListOfRequiredSignUpAttributesElement:
      type: array
      items:
        $ref: '#/components/schemas/RequiredSignUpAttributesElement'
    ListOfS3BucketInfo:
      type: array
      items:
        $ref: '#/components/schemas/S3BucketInfo'
    ListOfUnAuthenticatedElement:
      type: array
      items:
        $ref: '#/components/schemas/UnAuthenticatedElement'
    ListOf__string:
      type: array
      items:
        $ref: '#/components/schemas/__string'
    ListS3BucketsRequest:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Reserved for future use.
      description: The request body for S3Buckets.
    ListS3BucketsResponse:
      type: object
      properties:
        Buckets:
          allOf:
          - $ref: '#/components/schemas/ListOfS3BucketInfo'
          description: The list of S3 buckets.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Reserved for future use.
    LoginAuthConfigReqObj:
      type: object
      properties:
        AwsCognitoIdentityPoolId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Cognito identity pool ID used for the Amplify Admin
            UI login authorization.
        AwsCognitoRegion:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The AWS Region for the Amplify Admin UI login.
        AwsUserPoolsId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Cognito user pool ID used for Amplify Admin UI login
            authentication.
        AwsUserPoolsWebClientId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The web client ID for the Amazon Cognito user pools.
      description: The request object for this operation.
    MFAMode:
      type: string
      enum:
      - 'ON'
      - 'OFF'
      - OPTIONAL
    MfaTypesElement:
      type: string
      enum:
      - SMS
      - TOTP
    Mode:
      type: string
      enum:
      - API_KEY
      - AWS_IAM
      - AMAZON_COGNITO_USER_POOLS
      - OPENID_CONNECT
    NotFoundException:
      type: object
      properties:
        Message:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: An error message to inform that the request has failed.
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The type of resource that is not found.
      description: An error returned when a specific resource type is not found.
    OAuthGrantType:
      type: string
      enum:
      - CODE
      - IMPLICIT
    OAuthScopesElement:
      type: string
      enum:
      - PHONE
      - EMAIL
      - OPENID
      - PROFILE
      - AWS_COGNITO_SIGNIN_USER_ADMIN
    RemoveAllBackendsRequest:
      type: object
      properties:
        AppId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The app ID.
        CleanAmplifyApp:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: Cleans up the Amplify Console app if this value is set to true.
      required:
      - AppId
      description: The request body for RemoveAllBackends.
    RemoveAllBackendsResponse:
      type: object
      properties:
        AppId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The app ID.
        Error:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: If the request fails, this error is returned.
        JobId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID for the job.
        Operation:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the operation.
        Status:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The current status of the request.
    RemoveBackendConfigRequest:
      type: object
      properties:
        AppId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The app ID.
      required:
      - AppId
    RemoveBackendConfigResponse:
      type: object
      properties:
        Error:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: If the request fails, this error is returned.
    RequiredSignUpAttributesElement:
      type: string
      enum:
      - ADDRESS
      - BIRTHDATE
      - EMAIL
      - FAMILY_NAME
      - GENDER
      - GIVEN_NAME
      - LOCALE
      - MIDDLE_NAME
      - NAME
      - NICKNAME
      - PHONE_NUMBER
      - PICTURE
      - PREFERRED_USERNAME
      - PROFILE
      - UPDATED_AT
      - WEBSITE
      - ZONE_INFO
    ResolutionStrategy:
      type: string
      enum:
      - OPTIMISTIC_CONCURRENCY
      - LAMBDA
      - AUTOMERGE
      - NONE
    ResourceConfig:
      type: object
      properties: {}
      description: Defines the resource configuration for the data model in your Amplify
        project.
    S3BucketInfo:
      type: object
      properties:
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The creation date of the S3 bucket.
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the S3 bucket.
      description: Describes the metadata of the S3 bucket.
    Service:
      type: string
      enum:
      - COGNITO
    ServiceName:
      type: string
      enum:
      - S3
    Settings:
      type: object
      properties:
        MfaTypes:
          allOf:
          - $ref: '#/components/schemas/ListOfMfaTypesElement'
          description: The supported MFA types.
        SmsMessage:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The body of the SMS message.
      description: The settings of your MFA configuration for the backend of your
        Amplify project.
    SignInMethod:
      type: string
      enum:
      - EMAIL
      - EMAIL_AND_PHONE_NUMBER
      - PHONE_NUMBER
      - USERNAME
    SmsSettings:
      type: object
      properties:
        SmsMessage:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The contents of the SMS message.
      description: SMS settings for authentication.
    SocialProviderSettings:
      type: object
      properties:
        Facebook:
          $ref: '#/components/schemas/BackendAuthSocialProviderConfig'
        Google:
          $ref: '#/components/schemas/BackendAuthSocialProviderConfig'
        LoginWithAmazon:
          $ref: '#/components/schemas/BackendAuthSocialProviderConfig'
        SignInWithApple:
          $ref: '#/components/schemas/BackendAuthAppleProviderConfig'
      description: The settings for using the social identity providers for access
        to your Amplify app.
    Status:
      type: string
      enum:
      - LATEST
      - STALE
    TooManyRequestsException:
      type: object
      properties:
        LimitType:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The type of limit that was exceeded.
        Message:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: An error message to inform that the request has failed.
      description: An error that is returned when a limit of a specific type has been
        exceeded.
    UnAuthenticatedElement:
      type: string
      enum:
      - READ
      - CREATE_AND_UPDATE
      - DELETE
    UpdateBackendAPIRequest:
      type: object
      properties:
        AppId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The app ID.
        BackendEnvironmentName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the backend environment.
        ResourceConfig:
          allOf:
          - $ref: '#/components/schemas/BackendAPIResourceConfig'
          description: Defines the resource configuration for the data model in your
            Amplify project.
        ResourceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of this resource.
      required:
      - AppId
      - BackendEnvironmentName
      - ResourceName
      description: The request body for UpdateBackendAPI.
    UpdateBackendAPIResponse:
      type: object
      properties:
        AppId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The app ID.
        BackendEnvironmentName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the backend environment.
        Error:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: If the request fails, this error is returned.
        JobId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID for the job.
        Operation:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the operation.
        Status:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The current status of the request.
    UpdateBackendAuthForgotPasswordConfig:
      type: object
      properties:
        DeliveryMethod:
          allOf:
          - $ref: '#/components/schemas/DeliveryMethod'
          description: '**(DEPRECATED)** Describes which mode to use (either SMS or
            email) to deliver messages to app users that want to recover their password.'
        EmailSettings:
          allOf:
          - $ref: '#/components/schemas/EmailSettings'
          description: '**(DEPRECATED)** The configuration for the email sent when
            an app user forgets their password.'
        SmsSettings:
          allOf:
          - $ref: '#/components/schemas/SmsSettings'
          description: '**(DEPRECATED)** The configuration for the SMS message sent
            when an Amplify app user forgets their password.'
      description: '**(DEPRECATED)** Describes the forgot password policy for authenticating
        into the Amplify app.'
    UpdateBackendAuthIdentityPoolConfig:
      type: object
      properties:
        UnauthenticatedLogin:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: A boolean value that can be set to allow or disallow guest-level
            authorization into your Amplify app.
      description: Describes the authorization configuration for the Amazon Cognito
        identity pool, provisioned as a part of your auth resource in the Amplify
        project.
    UpdateBackendAuthMFAConfig:
      type: object
      properties:
        MFAMode:
          allOf:
          - $ref: '#/components/schemas/MFAMode'
          description: The MFA mode for the backend of your Amplify project.
        Settings:
          allOf:
          - $ref: '#/components/schemas/Settings'
          description: The settings of your MFA configuration for the backend of your
            Amplify project.
      description: Updates the multi-factor authentication (MFA) configuration for
        the backend of your Amplify project.
    UpdateBackendAuthOAuthConfig:
      type: object
      properties:
        DomainPrefix:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Cognito domain prefix used to create a hosted UI
            for authentication.
        OAuthGrantType:
          allOf:
          - $ref: '#/components/schemas/OAuthGrantType'
          description: The OAuth grant type to allow app users to authenticate from
            your Amplify app.
        OAuthScopes:
          allOf:
          - $ref: '#/components/schemas/ListOfOAuthScopesElement'
          description: The list of OAuth-related flows that can allow users to authenticate
            from your Amplify app.
        RedirectSignInURIs:
          allOf:
          - $ref: '#/components/schemas/ListOf__string'
          description: Redirect URLs that OAuth uses when a user signs in to an Amplify
            app.
        RedirectSignOutURIs:
          allOf:
          - $ref: '#/components/schemas/ListOf__string'
          description: Redirect URLs that OAuth uses when a user signs out of an Amplify
            app.
        SocialProviderSettings:
          allOf:
          - $ref: '#/components/schemas/SocialProviderSettings'
          description: Describes third-party social federation configurations for
            allowing your users to sign in with OAuth.
      description: The OAuth configurations for authenticating users into your Amplify
        app.
    UpdateBackendAuthPasswordPolicyConfig:
      type: object
      properties:
        AdditionalConstraints:
          allOf:
          - $ref: '#/components/schemas/ListOfAdditionalConstraintsElement'
          description: Describes additional constraints on password requirements to
            sign in to the auth resource, configured as a part of your Amplify project.
        MinimumLength:
          allOf:
          - $ref: '#/components/schemas/__double'
          description: Describes the minimum length of the password required to sign
            in to the auth resource, configured as a part of your Amplify project.
      description: Describes the password policy for your Amazon Cognito user pool
        configured as a part of your Amplify project.
    UpdateBackendAuthRequest:
      type: object
      properties:
        AppId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The app ID.
        BackendEnvironmentName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the backend environment.
        ResourceConfig:
          allOf:
          - $ref: '#/components/schemas/UpdateBackendAuthResourceConfig'
          description: The resource configuration for this request object.
        ResourceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of this resource.
      required:
      - AppId
      - BackendEnvironmentName
      - ResourceConfig
      - ResourceName
      description: The request body for UpdateBackendAuth.
    UpdateBackendAuthResourceConfig:
      type: object
      properties:
        AuthResources:
          allOf:
          - $ref: '#/components/schemas/AuthResources'
          description: Defines the service name to use when configuring an authentication
            resource in your Amplify project.
        IdentityPoolConfigs:
          allOf:
          - $ref: '#/components/schemas/UpdateBackendAuthIdentityPoolConfig'
          description: Describes the authorization configuration for the Amazon Cognito
            identity pool, provisioned as a part of your auth resource in the Amplify
            project.
        Service:
          allOf:
          - $ref: '#/components/schemas/Service'
          description: Defines the service name to use when configuring an authentication
            resource in your Amplify project.
        UserPoolConfigs:
          allOf:
          - $ref: '#/components/schemas/UpdateBackendAuthUserPoolConfig'
          description: Describes the authentication configuration for the Amazon Cognito
            user pool, provisioned as a part of your auth resource in the Amplify
            project.
      required:
      - AuthResources
      - Service
      - UserPoolConfigs
      description: Defines the resource configuration when updating an authentication
        resource in your Amplify project.
    UpdateBackendAuthResponse:
      type: object
      properties:
        AppId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The app ID.
        BackendEnvironmentName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the backend environment.
        Error:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: If the request fails, this error is returned.
        JobId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID for the job.
        Operation:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the operation.
        Status:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The current status of the request.
    UpdateBackendAuthUserPoolConfig:
      type: object
      properties:
        ForgotPassword:
          allOf:
          - $ref: '#/components/schemas/UpdateBackendAuthForgotPasswordConfig'
          description: '**(DEPRECATED)** Describes the forgot password policy for
            your Amazon Cognito user pool, configured as a part of your Amplify project.'
        Mfa:
          allOf:
          - $ref: '#/components/schemas/UpdateBackendAuthMFAConfig'
          description: Describes whether to apply multi-factor authentication policies
            for your Amazon Cognito user pool configured as a part of your Amplify
            project.
        OAuth:
          allOf:
          - $ref: '#/components/schemas/UpdateBackendAuthOAuthConfig'
          description: Describes the OAuth policy and rules for your Amazon Cognito
            user pool, configured as a part of your Amplify project.
        PasswordPolicy:
          allOf:
          - $ref: '#/components/schemas/UpdateBackendAuthPasswordPolicyConfig'
          description: Describes the password policy for your Amazon Cognito user
            pool, configured as a part of your Amplify project.
        VerificationMessage:
          allOf:
          - $ref: '#/components/schemas/UpdateBackendAuthVerificationMessageConfig'
          description: Describes the email or SMS verification message for your Amazon
            Cognito user pool, configured as a part of your Amplify project.
      description: Describes the Amazon Cognito user pool configuration for the authorization
        resource to be configured for your Amplify project on an update.
    UpdateBackendAuthVerificationMessageConfig:
      type: object
      properties:
        DeliveryMethod:
          allOf:
          - $ref: '#/components/schemas/DeliveryMethod'
          description: The type of verification message to send.
        EmailSettings:
          allOf:
          - $ref: '#/components/schemas/EmailSettings'
          description: The settings for the email message.
        SmsSettings:
          allOf:
          - $ref: '#/components/schemas/SmsSettings'
          description: The settings for the SMS message.
      required:
      - DeliveryMethod
      description: Updates the configuration of the email or SMS message for the auth
        resource configured for your Amplify project.
    UpdateBackendConfigRequest:
      type: object
      properties:
        AppId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The app ID.
        LoginAuthConfig:
          allOf:
          - $ref: '#/components/schemas/LoginAuthConfigReqObj'
          description: Describes the Amazon Cognito configuration for Admin UI access.
      required:
      - AppId
      description: The request body for UpdateBackendConfig.
    UpdateBackendConfigResponse:
      type: object
      properties:
        AppId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The app ID.
        BackendManagerAppId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The app ID for the backend manager.
        Error:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: If the request fails, this error is returned.
        LoginAuthConfig:
          allOf:
          - $ref: '#/components/schemas/LoginAuthConfigReqObj'
          description: Describes the Amazon Cognito configurations for the Admin UI
            auth resource to log in with.
    UpdateBackendJobRequest:
      type: object
      properties:
        AppId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The app ID.
        BackendEnvironmentName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the backend environment.
        JobId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID for the job.
        Operation:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Filters the list of response objects to include only those
            with the specified operation name.
        Status:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Filters the list of response objects to include only those
            with the specified status.
      required:
      - AppId
      - BackendEnvironmentName
      - JobId
      description: The request body for GetBackendJob.
    UpdateBackendJobResponse:
      type: object
      properties:
        AppId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The app ID.
        BackendEnvironmentName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the backend environment.
        CreateTime:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The time when the job was created.
        Error:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: If the request fails, this error is returned.
        JobId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID for the job.
        Operation:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the operation.
        Status:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The current status of the request.
        UpdateTime:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The time when the job was last updated.
    UpdateBackendStorageRequest:
      type: object
      properties:
        AppId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The app ID.
        BackendEnvironmentName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the backend environment.
        ResourceConfig:
          allOf:
          - $ref: '#/components/schemas/UpdateBackendStorageResourceConfig'
          description: The resource configuration for updating backend storage.
        ResourceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the storage resource.
      required:
      - AppId
      - BackendEnvironmentName
      - ResourceConfig
      - ResourceName
      description: The request body for UpdateBackendStorage.
    UpdateBackendStorageResourceConfig:
      type: object
      properties:
        Permissions:
          allOf:
          - $ref: '#/components/schemas/BackendStoragePermissions'
          description: The authorization configuration for the storage S3 bucket.
        ServiceName:
          allOf:
          - $ref: '#/components/schemas/ServiceName'
          description: The name of the storage service.
      required:
      - Permissions
      - ServiceName
      description: The resource configuration for updating backend storage.
    UpdateBackendStorageResponse:
      type: object
      properties:
        AppId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The app ID.
        BackendEnvironmentName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the backend environment.
        JobId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID for the job.
        Status:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The current status of the request.
    __boolean:
      type: boolean
    __double:
      type: number
      format: double
    __integerMin1Max25:
      type: integer
      minimum: 1
      maximum: 25
    __string:
      type: string
